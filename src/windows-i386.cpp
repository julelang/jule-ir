// Auto generated by JuleC.
// JuleC version: jule0.0.10
// Date: 3/4/2024 12.26 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1a9e3be3b_Reader {};
struct _1a9e3c36a_Writer {};
struct _1a9e3c942_WriterCloser {};
struct _1a9e3d190_Stream {};
struct _1a9ceeedb_Importer {};
struct _1a9d9aa37_Kind {};
struct _1a9db4325_Lookup {};
struct _1aa563e47_CommonFlag {};

struct _1d6732da9_accept_range;


struct _1d776877e_FoldPair;


struct _1d7768c46_CaseRange;


struct _1d77691b9_Range16;


struct _1d7769681_Range32;


struct _1d7769b04_RangeTable;


struct _1d6824572_LazyBuff;


struct _1d5957c39_DirEntry;


struct _1d5938016_Directory;


struct _1d665b8d7_File;


struct _1d665bac4_Status;


struct _1d781ae19_Cmd;


struct _1d77ca48e_Log;


struct _1d7b77374_Token;


struct _1d7b7c764_File;


struct _1d7b7e832_KindPair;


struct _1d7b85140_Lex;


struct _1d7a43eaa_Ast;


struct _1d7b5c315_Node;


struct _1d7a4352b_Directive;


struct _1d7a0e75b_TypeDecl;


struct _1d7a16d5c_IdentTypeDecl;


struct _1d7a17049_NamespaceTypeDecl;


struct _1d7a17236_SptrTypeDecl;


struct _1d7a17423_SlcTypeDecl;


struct _1d7a17610_TupleTypeDecl;


struct _1d7a177ec_PtrTypeDecl;


struct _1d7a179d9_ArrTypeDecl;


struct _1d7a17bc6_MapTypeDecl;


struct _1d7a17db3_RetTypeDecl;


struct _1d7b09a43_Expr;


struct _1d7b09c30_UseExpr;


struct _1d7b8960b_TupleExpr;


struct _1d7b89a29_LitExpr;


struct _1d7b89c16_UnsafeExpr;


struct _1d7b89e03_CoExpr;


struct _1d7b8a0e0_IdentExpr;


struct _1d7b8a2cc_UnaryExpr;


struct _1d7b8a4b9_VariadicExpr;


struct _1d7b8a6a6_CastExpr;


struct _1d7b8a893_NsSelectionExpr;


struct _1d7b8aa80_SubIdentExpr;


struct _1d7b8ac6c_BinopExpr;


struct _1d7b8ae59_FnCallExpr;


struct _1d7b8b146_FieldExprPair;


struct _1d7b8b333_StructLit;


struct _1d7b8b520_BraceLit;


struct _1d7b8b70c_KeyValPair;


struct _1d7b8b8e9_SliceExpr;


struct _1d7b897e8_IndexingExpr;


struct _1d7b8c059_SlicingExpr;


struct _1d7b8c246_GenericDecl;


struct _1d7b8c433_LabelSt;


struct _1d7b8c620_GotoSt;


struct _1d7b8c80c_FallSt;


struct _1d7b8c9e9_AssignLeft;


struct _1d7b8cbd6_AssignSt;


struct _1d7b8cdc3_ScopeTree;


struct _1d7b8d0b0_ParamDecl;


struct _1d7b8d29c_FnDecl;


struct _1d7b8d489_VarDecl;


struct _1d7b8d676_RetSt;


struct _1d7b8d863_Iter;


struct _1d7b8da50_WhileKind;


struct _1d7b8dc3c_RangeKind;


struct _1d7b8de29_BreakSt;


struct _1d7b8e116_ContSt;


struct _1d7b8e303_If;


struct _1d7b8e4e0_Else;


struct _1d7b8e6cc_Conditional;


struct _1d7b8e8b9_TypeAliasDecl;


struct _1d7b8eaa6_Case;


struct _1d7b8ec93_MatchCase;


struct _1d7b8ee80_UseDecl;


struct _1d7b9016c_EnumItemDecl;


struct _1d7b9058a_EnumDecl;


struct _1d7b90d82_FieldDecl;


struct _1d7b916e0_StructDecl;


struct _1d7b91cea_TraitDecl;


struct _1d7b92405_Impl;


struct _1d82bd305_FileInfo;


struct _1d82bd4e2_PackageInfo;


struct _1d831513d_Stmt;


struct _1d8315968_ScopeParser;


struct _1d8322337_CallData;


struct _1d8323789_ExprBuilder;


struct _1d832dab3_AssignInfo;


struct _1d83320e4_Parser;


struct _1d83428da_TypeBuilder;


struct _1a9945e62_FloatInfo;


struct _1a948d04d_DecimalSlice;


struct _1a9ba7327_LeftCheat;


struct _1a9ba7514_Decimal;


struct _1a9c46e77_Const;


struct _1a9e37530_FileStream;


struct _1a9e3d4e2_ByteStream;


struct _1a9e40a88_Scanner;


struct _1bd010a02_Field;


struct _1a8d81d2c_Operators;


struct _1a8d82b41_Struct;


struct _1a8d84e62_FieldIns;


struct _1a8d8742b_OperandExprModel;


struct _1a8d878e3_BinopExprModel;


struct _1a8d87c9a_UnaryExprModel;


struct _1a8d88196_StructArgExprModel;


struct _1a8d8854d_StructLitExprModel;


struct _1a8d8887d_AllocStructLitExprModel;


struct _1a8d88dab_CastingExprModel;


struct _1a8d896d6_FnCallExprModel;


struct _1a8d89a8d_SliceExprModel;


struct _1a8d8a011_IndexingExprModel;


struct _1a8d8a3b8_AnonFnExprModel;


struct _1a8d8a770_KeyValPairExprModel;


struct _1a8d8abe3_MapExprModel;


struct _1a8d8b232_SlicingExprModel;


struct _1a8d8b771_TraitSubIdentExprModel;


struct _1a8d8bee1_StructSubIdentExprModel;


struct _1a8d8c497_StructStaticIdentExprModel;


struct _1a8d8c83d_ArrayExprModel;


struct _1a8d8cb29_CommonIdentExprModel;


struct _1a8d8d1ac_CommonSubIdentExprModel;


struct _1a8d8d487_TupleExprModel;


struct _1a8d8d883_BuiltinOutCallExprModel;


struct _1a8d8dc6d_BuiltinOutlnCallExprModel;


struct _1a8d8e08c_BuiltinCloneCallExprModel;


struct _1a8d8e477_BuiltinNewCallExprModel;


struct _1a8d8e862_BuiltinPanicCallExprModel;


struct _1a8d8ed18_BuiltinAssertCallExprModel;


struct _1a8d902be_BuiltinMakeCallExprModel;


struct _1a8d906a9_BuiltinAppendCallExprModel;


struct _1a8d90a94_BuiltinErrorCallExprModel;


struct _1a8d90d6e_SizeofExprModel;


struct _1a8d914e0_AlignofExprModel;


struct _1a8d916cc_RuneExprModel;


struct _1a8d919b8_IntegratedToStrExprModel;


struct _1a8d91d5e_BackendEmitExprModel;


struct _1a8d9214a_FreeExprModel;


struct _1a8d92da4_RetType;


struct _1a8d9357a_Param;


struct _1a8d94db7_Fn;


struct _1a8d971c7_ParamIns;


struct _1a8d98063_FnIns;


struct _1a8d9b121_ReferenceStack;


struct _1a8d9c485_Pass;


struct _1a8da1038_SymbolBuilder;


struct _1a8ea7a57_Trait;


struct _1a93b2c75_EnumItem;


struct _1a943b309_Enum;


struct _1a922a34b_Impl;


struct _1a9cc76bc_Scope;


struct _1a9cce0b9_If;


struct _1a9c78b46_Else;


struct _1a9c78d33_Conditional;


struct _1a9c89959_InfIter;


struct _1a9c89b46_WhileIter;


struct _1a9c89d33_RangeIter;


struct _1a9cb79dc_ContSt;


struct _1a9cb7bc9_BreakSt;


struct _1a9cda405_Label;


struct _1a9cda5e2_GotoSt;


struct _1a9cda7ce_Postfix;


struct _1a9cda9bb_Assign;


struct _1a9cdaba8_MultiAssign;


struct _1a9cdad95_Match;


struct _1a9cdb2b3_Case;


struct _1a9cdb4a0_FallSt;


struct _1a9cdb68c_RetSt;


struct _1a9cdb879_ScopeLabel;


struct _1a9cdba66_ScopeGoto;


struct _1a9cdbc53_ScopeChecker;


struct _1a9ceba21_DirectiveChecker;


struct _1a9d02351_ImportInfo;


struct _1a9d05013_Package;


struct _1a9d0a03a_Sema;


struct _1a9d2289e_MissingRetChecker;


struct _1a9d24571_IterRelation;


struct _1a9d2553e_Var;


struct _1a9d26045_FuncPattern;


struct _1a9d5cdb2_TypeCompatibilityChecker;


struct _1a9d5e138_AssignTypeChecker;


struct _1a9d60986_DynamicTypeAnnotation;


struct _1a9d63747_FnCallArgChecker;


struct _1a9d66151_StructLitChecker;


struct _1a9d67c35_RangeChecker;


struct _1a9d69dbe_RetTypeChecker;


struct _1a9d6baa2_SymbolTable;


struct _1a9d71c2d_Data;


struct _1a9d72ca6_Value;


struct _1a9d7379b_Eval;


struct _1a9d8d3cb_UnaryEval;


struct _1a9d90169_BinaryEval;


struct _1a9d9a22e_TypeAlias;


struct _1a9d9ae66_TypeKind;


struct _1a9d9ed05_TypeSymbol;


struct _1a9da06b8_Prim;


struct _1a9da3bc7_Sptr;


struct _1a9da4634_Slc;


struct _1a9da5129_Tuple;


struct _1a9da5bda_Map;


struct _1a9da67ce_Arr;


struct _1a9da723b_Ptr;


struct _1a9da98d1_Referencer;


struct _1a9daa55d_TypeChecker;


struct _1d796d621_CompileInfo;


struct _1d79bd86e_DirectiveEval;


struct _1bce6e620_JuleImporter;


struct _1bd03a5a9_OrderedDefines;


struct _1bd03a796_DefineOrderer;


struct _1a9e4598e_ScopeDeadCode;


struct _1a9e660b9_AnsiEscape;


struct _1a9e67098_Logger;


struct _1aa4accb4_UnsafeBinopExprModel;


struct _1aa4ad8ec_UnsafeIndexingExprModel;


struct _1aa4ba8a4_PushToSliceExprModel;


struct _1aa4bae26_MutSlicingExprModel;


struct _1aa4bb322_StrInsertBeginExprModel;


struct _1aa4bc6ca_ScopeOptimizer;


struct _1aa4c2d84_ExprOptimizer;


struct _1aa4c9b9e_Optimizer;


struct _1aa54b913_AbsTime;


struct _1aa54c0d9_Time;


struct _1aa54e0a8_Duration;


struct _1aa3470d2_TestCoder;


struct _1aa3b797c_ScopeCoder;


struct _1aa37e504_ExprCoder;


struct _1aa4d6bbc_DeriveCoder;


struct _1aa4d82a6_IdentCoder;


struct _1aa52150e_SerializationInfo;


struct _1aa514d60_TraitHash;


struct _1aa5599ed_CustomType;


struct _1aa55a427_TypeCoder;


struct _1aa594b8c_Flag_0;

struct _1aa594b8c_Flag_1;

struct _1aa594b8c_Flag_2;

struct _1aa594b8c_Flag_3;

struct _1aa594b8c_Flag_4;


struct _1aa595e02_FlagSet;


struct _1a8d857c0_StructIns;


struct _1aa51504c_ObjectCoder;


struct _1bce27b17_IR;


struct _1aa59860d_ArgParser;

struct _1d6732da9_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1d6732da9_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1d6732da9_accept_range(void) = default;

	inline bool operator==(_1d6732da9_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1d6732da9_accept_range _other) { return !this->operator==(_other); }


};
struct _1d776877e_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1d776877e_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1d776877e_FoldPair(void) = default;

	inline bool operator==(_1d776877e_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d776877e_FoldPair _other) { return !this->operator==(_other); }


};
struct _1d7768c46_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1d7768c46_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1d7768c46_CaseRange(void) = default;

	inline bool operator==(_1d7768c46_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_1d7768c46_CaseRange _other) { return !this->operator==(_other); }


};
struct _1d77691b9_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1d77691b9_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1d77691b9_Range16(void) = default;

	inline bool operator==(_1d77691b9_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1d77691b9_Range16 _other) { return !this->operator==(_other); }


};
struct _1d7769681_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1d7769681_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1d7769681_Range32(void) = default;

	inline bool operator==(_1d7769681_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1d7769681_Range32 _other) { return !this->operator==(_other); }


};
struct _1d7769b04_RangeTable {
	jule::Slice<_1d77691b9_Range16> _field_r16 = jule::Slice<_1d77691b9_Range16>();
	jule::Slice<_1d7769681_Range32> _field_r32 = jule::Slice<_1d7769681_Range32>();
	jule::I32 _field_latin_offset = jule::I32();


	_1d7769b04_RangeTable(jule::Slice<_1d77691b9_Range16> __param_r16, jule::Slice<_1d7769681_Range32> __param_r32, jule::I32 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1d7769b04_RangeTable(void) = default;

	inline bool operator==(_1d7769b04_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1d7769b04_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d682782d_index(_1d6824572_LazyBuff*,jule::I32);
inline void _1d682b4e1_append(_1d6824572_LazyBuff*,jule::U8);
inline jule::Str _1d682e604_string(_1d6824572_LazyBuff*);
struct _1d6824572_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I32 _field_w = jule::I32();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I32 _field_vol_len = jule::I32();


	_1d6824572_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I32 __param_w, jule::Str __param_vol_and_path, jule::I32 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1d6824572_LazyBuff(void) = default;

	inline bool operator==(_1d6824572_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1d6824572_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1d5957c39_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1d665bac4_Status> _field_stat = jule::Ptr<_1d665bac4_Status>();


	_1d5957c39_DirEntry(jule::Str __param_name, jule::Ptr<_1d665bac4_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1d5957c39_DirEntry(void) = default;

	inline bool operator==(_1d5957c39_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1d5957c39_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>> static__1d674750b_read(jule::Str);
inline jule::VoidExceptional static__1d6748a29_create(jule::Str);
inline jule::VoidExceptional static__1d6757b04_remove(jule::Str);
struct _1d5938016_Directory {
	

	_1d5938016_Directory(void) = default;

	inline bool operator==(_1d5938016_Directory _other) { return true; }

	inline bool operator!=(_1d5938016_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d665b8d7_File> static__1d5937b81_new(jule::U32);
inline jule::Exceptional<jule::Ptr<_1d665b8d7_File>> static__1d5963294_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1d596a015_read(jule::Str);
inline jule::VoidExceptional static__1d596d6bc_write(jule::Str,jule::Slice<jule::U8>,jule::I32);
inline jule::Exceptional<jule::I32> _1d597005e_seek(_1d665b8d7_File*,jule::I32,jule::I32);
inline jule::VoidExceptional _1d59816d0_close(_1d665b8d7_File*);
inline jule::Exceptional<jule::Ptr<_1d665b8d7_File>> static__1d66b7305_open(jule::Str,jule::I32,jule::I32);
inline jule::VoidExceptional static__1d6716ae6_remove(jule::Str);
inline jule::Exceptional<jule::I32> _1d66b5d2b_write(_1d665b8d7_File*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _1d66bb33c_read(_1d665b8d7_File*,jule::Slice<jule::U8>);
struct _1d665b8d7_File {
	jule::U32 _field_handle = jule::U32();


	_1d665b8d7_File(jule::U32 __param_handle): _field_handle(__param_handle) {}

	

	_1d665b8d7_File(void) = default;

	inline bool operator==(_1d665b8d7_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1d665b8d7_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d5982acc_is_dir(_1d665bac4_Status*);
inline jule::Bool _1d597d7cb_is_reg(_1d665bac4_Status*);
inline jule::Exceptional<jule::Ptr<_1d665bac4_Status>> static__1d67839ba_of(jule::Str);
struct _1d665bac4_Status {
	jule::U32 _field_mode = jule::U32();
	jule::U32 _field_size = jule::U32();


	_1d665bac4_Status(jule::U32 __param_mode, jule::U32 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1d665bac4_Status(void) = default;

	inline bool operator==(_1d665bac4_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d665bac4_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d781ae19_Cmd> static__1d781b348_new(jule::Str);
inline jule::Exceptional<jule::I32> _1d78207ae_spawn(_1d781ae19_Cmd*);
inline jule::Exceptional<jule::I32> _1d782b248___spawn(_1d781ae19_Cmd*);
struct _1d781ae19_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_1d781ae19_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_1d781ae19_Cmd(void) = default;

	inline bool operator==(_1d781ae19_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1d781ae19_Cmd _other) { return !this->operator==(_other); }


};
struct _1d77ca48e_Log {
	jule::I32 _field_kind = 0LL;
	jule::I32 _field_row = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1d77ca48e_Log(jule::I32 __param_kind, jule::I32 __param_row, jule::I32 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1d77ca48e_Log(void) = default;

	inline bool operator==(_1d77ca48e_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1d77ca48e_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1d7b7775e_prec(_1d7b77374_Token*);
struct _1d7b77374_Token {
	jule::Ptr<_1d7b7c764_File> _field_file = jule::Ptr<_1d7b7c764_File>();
	jule::I32 _field_row = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::Str _field_kind = jule::Str();
	jule::U32 _field_id = 0LLU;


	_1d7b77374_Token(jule::Ptr<_1d7b7c764_File> __param_file, jule::I32 __param_row, jule::I32 __param_column, jule::Str __param_kind, jule::U32 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1d7b77374_Token(void) = default;

	inline bool operator==(_1d7b77374_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d7b77374_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b7cb71_is_ok(_1d7b7c764_File*);
inline void _1d7b7cde6_fill(_1d7b7c764_File*,jule::Slice<jule::U8>);
inline jule::Str _1d7b7d15a_dir(_1d7b7c764_File*);
inline jule::Str _1d7b7d3be_name(_1d7b7c764_File*);
inline jule::U32 _1d7b7d633_addr(_1d7b7c764_File*);
inline jule::Str _1d7b7d941_get_row(_1d7b7c764_File*,jule::I32);
struct _1d7b7c764_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();


	_1d7b7c764_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_1d7b7c764_File(void) = default;

	inline bool operator==(_1d7b7c764_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1d7b7c764_File _other) { return !this->operator==(_other); }


};
struct _1d7b7e832_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;


	_1d7b7e832_KindPair(jule::Str __param_kind, jule::U32 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1d7b7e832_KindPair(void) = default;

	inline bool operator==(_1d7b7e832_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d7b7e832_KindPair _other) { return !this->operator==(_other); }


};
inline void _1d7b856d4_push_err(_1d7b85140_Lex*,jule::Str,jule::Slice<jule::Any>);
inline void _1d7b85a03_push_err_tok(_1d7b85140_Lex*,jule::Ptr<_1d7b77374_Token>&,jule::Str);
inline void _1d7b85bce_lex(_1d7b85140_Lex*);
inline jule::Str _1d7b85edc_id(_1d7b85140_Lex*,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1d7b86251_resume(_1d7b85140_Lex*);
inline void _1d7b864c6_lex_line_comment(_1d7b85140_Lex*,jule::Ptr<_1d7b77374_Token>&);
inline void _1d7b8674b_lex_range_comment(_1d7b85140_Lex*,jule::Ptr<_1d7b77374_Token>&);
inline jule::Str _1d7b86a59_num(_1d7b85140_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d7b86d67_escape_seq(_1d7b85140_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d7b8721e_get_rune(_1d7b85140_Lex*,jule::Slice<jule::U8>&,jule::Bool);
inline jule::Str _1d7b8752c_lex_rune(_1d7b85140_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1d7b87791_lex_str(_1d7b85140_Lex*);
inline jule::Bool _1d7b87a05_is_first_token_of_line(_1d7b85140_Lex*);
inline void _1d7b87bd1_new_line(_1d7b85140_Lex*);
inline jule::Bool _1d7b881cb_is_op(_1d7b85140_Lex*,jule::Slice<jule::U8>&,jule::Str,jule::U32,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1d7b88583_lex_basic_ops(_1d7b85140_Lex*,jule::Slice<jule::U8>,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1d7b8893a_lex_id(_1d7b85140_Lex*,jule::Slice<jule::U8>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1d7b88ce2_lex_num(_1d7b85140_Lex*,jule::Slice<jule::U8>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Ptr<_1d7b77374_Token> _1d7b89056_token(_1d7b85140_Lex*);
struct _1d7b85140_Lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Ptr<_1d7b7c764_File> _field_file = jule::Ptr<_1d7b7c764_File>();
	jule::I32 _field_pos = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::I32 _field_row = jule::I32();
	jule::Slice<_1d77ca48e_Log> _field_errors = jule::Slice<_1d77ca48e_Log>();


	_1d7b85140_Lex(jule::I32 __param_mode, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_tokens, jule::Ptr<_1d7b7c764_File> __param_file, jule::I32 __param_pos, jule::I32 __param_column, jule::I32 __param_row, jule::Slice<_1d77ca48e_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1d7b85140_Lex(void) = default;

	inline bool operator==(_1d7b85140_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d7b85140_Lex _other) { return !this->operator==(_other); }


};
struct _1d7a43eaa_Ast {
	jule::Ptr<_1d7b7c764_File> _field_file = jule::Ptr<_1d7b7c764_File>();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Slice<jule::Ptr<_1d7b8ee80_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1d7b8ee80_UseDecl>>();
	jule::Slice<_1d7b5c315_Node> _field_nodes = jule::Slice<_1d7b5c315_Node>();


	_1d7a43eaa_Ast(jule::Ptr<_1d7b7c764_File> __param_file, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1d7b8ee80_UseDecl>> __param_use_decls, jule::Slice<_1d7b5c315_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_1d7a43eaa_Ast(void) = default;

	inline bool operator==(_1d7a43eaa_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1d7a43eaa_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a246a5_is_decl(_1d7b5c315_Node*);
inline jule::Bool _1d7a1570c_is_directive(_1d7b5c315_Node*);
inline jule::Bool _1d7a29105_is_impl(_1d7b5c315_Node*);
inline jule::Bool _1d7a29c3d_is_use_decl(_1d7b5c315_Node*);
struct _1d7b5c315_Node {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_data = jule::Any();


	_1d7b5c315_Node(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1d7b5c315_Node(void) = default;

	inline bool operator==(_1d7b5c315_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d7b5c315_Node _other) { return !this->operator==(_other); }


};
struct _1d7a4352b_Directive {
	jule::Ptr<_1d7b77374_Token> _field_tag = jule::Ptr<_1d7b77374_Token>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_args = jule::Slice<jule::Ptr<_1d7b77374_Token>>();


	_1d7a4352b_Directive(jule::Ptr<_1d7b77374_Token> __param_tag, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1d7a4352b_Directive(void) = default;

	inline bool operator==(_1d7a4352b_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1d7a4352b_Directive _other) { return !this->operator==(_other); }


};
struct _1d7a0e75b_TypeDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_kind = jule::Any();


	_1d7a0e75b_TypeDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1d7a0e75b_TypeDecl(void) = default;

	inline bool operator==(_1d7a0e75b_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7a0e75b_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a2a4d0_is_prim(_1d7a16d5c_IdentTypeDecl*);
struct _1d7a16d5c_IdentTypeDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>();


	_1d7a16d5c_IdentTypeDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1d7a16d5c_IdentTypeDecl(void) = default;

	inline bool operator==(_1d7a16d5c_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d7a16d5c_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17049_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_idents = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Ptr<_1d7a16d5c_IdentTypeDecl> _field_kind = jule::Ptr<_1d7a16d5c_IdentTypeDecl>();


	_1d7a17049_NamespaceTypeDecl(jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_idents, jule::Ptr<_1d7a16d5c_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1d7a17049_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1d7a17049_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7a17049_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17236_SptrTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_elem = jule::Ptr<_1d7a0e75b_TypeDecl>();


	_1d7a17236_SptrTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d7a17236_SptrTypeDecl(void) = default;

	inline bool operator==(_1d7a17236_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d7a17236_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17423_SlcTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_elem = jule::Ptr<_1d7a0e75b_TypeDecl>();


	_1d7a17423_SlcTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d7a17423_SlcTypeDecl(void) = default;

	inline bool operator==(_1d7a17423_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d7a17423_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17610_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>();


	_1d7a17610_TupleTypeDecl(jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1d7a17610_TupleTypeDecl(void) = default;

	inline bool operator==(_1d7a17610_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1d7a17610_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a2b118_is_unsafe(_1d7a177ec_PtrTypeDecl*);
struct _1d7a177ec_PtrTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_elem = jule::Ptr<_1d7a0e75b_TypeDecl>();


	_1d7a177ec_PtrTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1d7a177ec_PtrTypeDecl(void) = default;

	inline bool operator==(_1d7a177ec_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1d7a177ec_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a2c768_auto_sized(_1d7a179d9_ArrTypeDecl*);
struct _1d7a179d9_ArrTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_elem = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7b09a43_Expr> _field_size = jule::Ptr<_1d7b09a43_Expr>();


	_1d7a179d9_ArrTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_elem, jule::Ptr<_1d7b09a43_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1d7a179d9_ArrTypeDecl(void) = default;

	inline bool operator==(_1d7a179d9_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1d7a179d9_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17bc6_MapTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_key = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_val = jule::Ptr<_1d7a0e75b_TypeDecl>();


	_1d7a17bc6_MapTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_key, jule::Ptr<_1d7a0e75b_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1d7a17bc6_MapTypeDecl(void) = default;

	inline bool operator==(_1d7a17bc6_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1d7a17bc6_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7a17db3_RetTypeDecl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_idents = jule::Slice<jule::Ptr<_1d7b77374_Token>>();


	_1d7a17db3_RetTypeDecl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1d7a17db3_RetTypeDecl(void) = default;

	inline bool operator==(_1d7a17db3_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1d7a17db3_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d7b09a43_Expr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_1d7b09a43_Expr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_end(__param_end), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_1d7b09a43_Expr(void) = default;

	inline bool operator==(_1d7b09a43_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7b09a43_Expr _other) { return !this->operator==(_other); }


};
struct _1d7b09c30_UseExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b09c30_UseExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d7b09c30_UseExpr(void) = default;

	inline bool operator==(_1d7b09c30_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b09c30_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8960b_TupleExpr {
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_expr = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();


	_1d7b8960b_TupleExpr(jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1d7b8960b_TupleExpr(void) = default;

	inline bool operator==(_1d7b8960b_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8960b_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a3099c_is_nil(_1d7b89a29_LitExpr*);
struct _1d7b89a29_LitExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_value = jule::Str();


	_1d7b89a29_LitExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1d7b89a29_LitExpr(void) = default;

	inline bool operator==(_1d7b89a29_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1d7b89a29_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d7b89c16_UnsafeExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b89c16_UnsafeExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d7b89c16_UnsafeExpr(void) = default;

	inline bool operator==(_1d7b89c16_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b89c16_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1d7b89e03_CoExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b89e03_CoExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d7b89e03_CoExpr(void) = default;

	inline bool operator==(_1d7b89e03_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b89e03_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a3123e_is_self(_1d7b8a0e0_IdentExpr*);
struct _1d7b8a0e0_IdentExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1d7b8a0e0_IdentExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1d7b8a0e0_IdentExpr(void) = default;

	inline bool operator==(_1d7b8a0e0_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1d7b8a0e0_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8a2cc_UnaryExpr {
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8a2cc_UnaryExpr(jule::Ptr<_1d7b77374_Token> __param_op, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1d7b8a2cc_UnaryExpr(void) = default;

	inline bool operator==(_1d7b8a2cc_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8a2cc_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8a4b9_VariadicExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8a4b9_VariadicExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d7b8a4b9_VariadicExpr(void) = default;

	inline bool operator==(_1d7b8a4b9_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8a4b9_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8a6a6_CastExpr {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8a6a6_CastExpr(jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1d7b8a6a6_CastExpr(void) = default;

	inline bool operator==(_1d7b8a6a6_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8a6a6_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8a893_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_ns = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Ptr<_1d7b77374_Token> _field_ident = jule::Ptr<_1d7b77374_Token>();


	_1d7b8a893_NsSelectionExpr(jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_ns, jule::Ptr<_1d7b77374_Token> __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1d7b8a893_NsSelectionExpr(void) = default;

	inline bool operator==(_1d7b8a893_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7b8a893_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8aa80_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b77374_Token> _field_ident = jule::Ptr<_1d7b77374_Token>();


	_1d7b8aa80_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1d7b77374_Token> __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1d7b8aa80_SubIdentExpr(void) = default;

	inline bool operator==(_1d7b8aa80_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7b8aa80_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8ac6c_BinopExpr {
	jule::Ptr<_1d7b09a43_Expr> _field_left = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b09a43_Expr> _field_right = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();


	_1d7b8ac6c_BinopExpr(jule::Ptr<_1d7b09a43_Expr> __param_left, jule::Ptr<_1d7b09a43_Expr> __param_right, jule::Ptr<_1d7b77374_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1d7b8ac6c_BinopExpr(void) = default;

	inline bool operator==(_1d7b8ac6c_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d7b8ac6c_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a33b59_unhandled(_1d7b8ae59_FnCallExpr*);
inline jule::Bool _1d7a36112_ignored(_1d7b8ae59_FnCallExpr*);
struct _1d7b8ae59_FnCallExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_args = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_exception = jule::Ptr<_1d7b8cdc3_ScopeTree>();


	_1d7b8ae59_FnCallExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_args, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1d7b8ae59_FnCallExpr(void) = default;

	inline bool operator==(_1d7b8ae59_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1d7b8ae59_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a37135_is_targeted(_1d7b8b146_FieldExprPair*);
struct _1d7b8b146_FieldExprPair {
	jule::Ptr<_1d7b77374_Token> _field_field = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8b146_FieldExprPair(jule::Ptr<_1d7b77374_Token> __param_field, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1d7b8b146_FieldExprPair(void) = default;

	inline bool operator==(_1d7b8b146_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8b146_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d7b8b333_StructLit {
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();


	_1d7b8b333_StructLit(jule::Ptr<_1d7b77374_Token> __param_end, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_exprs): _field_end(__param_end), _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1d7b8b333_StructLit(void) = default;

	inline bool operator==(_1d7b8b333_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d7b8b333_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a391ae_is_empty(_1d7b8b520_BraceLit*);
struct _1d7b8b520_BraceLit {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();


	_1d7b8b520_BraceLit(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1d7b8b520_BraceLit(void) = default;

	inline bool operator==(_1d7b8b520_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d7b8b520_BraceLit _other) { return !this->operator==(_other); }


};
struct _1d7b8b70c_KeyValPair {
	jule::Ptr<_1d7b09a43_Expr> _field_key = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b09a43_Expr> _field_val = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b77374_Token> _field_colon = jule::Ptr<_1d7b77374_Token>();


	_1d7b8b70c_KeyValPair(jule::Ptr<_1d7b09a43_Expr> __param_key, jule::Ptr<_1d7b09a43_Expr> __param_val, jule::Ptr<_1d7b77374_Token> __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1d7b8b70c_KeyValPair(void) = default;

	inline bool operator==(_1d7b8b70c_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1d7b8b70c_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a451ba_is_empty(_1d7b8b8e9_SliceExpr*);
struct _1d7b8b8e9_SliceExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();


	_1d7b8b8e9_SliceExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_exprs): _field_token(__param_token), _field_end(__param_end), _field_exprs(__param_exprs) {}

	

	_1d7b8b8e9_SliceExpr(void) = default;

	inline bool operator==(_1d7b8b8e9_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d7b8b8e9_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1d7b897e8_IndexingExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b09a43_Expr> _field_index = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b897e8_IndexingExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1d7b09a43_Expr> __param_index): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1d7b897e8_IndexingExpr(void) = default;

	inline bool operator==(_1d7b897e8_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1d7b897e8_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8c059_SlicingExpr {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b09a43_Expr> _field_start = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b09a43_Expr> _field_to = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8c059_SlicingExpr(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1d7b09a43_Expr> __param_start, jule::Ptr<_1d7b09a43_Expr> __param_to): _field_token(__param_token), _field_end(__param_end), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1d7b8c059_SlicingExpr(void) = default;

	inline bool operator==(_1d7b8c059_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1d7b8c059_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d7b8c246_GenericDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();


	_1d7b8c246_GenericDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1d7b8c246_GenericDecl(void) = default;

	inline bool operator==(_1d7b8c246_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7b8c246_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d7b8c433_LabelSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();


	_1d7b8c433_LabelSt(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1d7b8c433_LabelSt(void) = default;

	inline bool operator==(_1d7b8c433_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7b8c433_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d7b8c620_GotoSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_label = jule::Ptr<_1d7b77374_Token>();


	_1d7b8c620_GotoSt(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d7b8c620_GotoSt(void) = default;

	inline bool operator==(_1d7b8c620_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d7b8c620_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d7b8c80c_FallSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();


	_1d7b8c80c_FallSt(jule::Ptr<_1d7b77374_Token> __param_token): _field_token(__param_token) {}

	

	_1d7b8c80c_FallSt(void) = default;

	inline bool operator==(_1d7b8c80c_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1d7b8c80c_FallSt _other) { return !this->operator==(_other); }


};
struct _1d7b8c9e9_AssignLeft {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8c9e9_AssignLeft(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1d7b8c9e9_AssignLeft(void) = default;

	inline bool operator==(_1d7b8c9e9_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8c9e9_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d7b8cbd6_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1d7b77374_Token> _field_setter = jule::Ptr<_1d7b77374_Token>();
	jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>>();
	jule::Ptr<_1d7b09a43_Expr> _field_right = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8cbd6_AssignSt(jule::Bool __param_declarative, jule::Ptr<_1d7b77374_Token> __param_setter, jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>> __param_left, jule::Ptr<_1d7b09a43_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1d7b8cbd6_AssignSt(void) = default;

	inline bool operator==(_1d7b8cbd6_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1d7b8cbd6_AssignSt _other) { return !this->operator==(_other); }


};
struct _1d7b8cdc3_ScopeTree {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_parent = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1d7b5c315_Node> _field_stmts = jule::Slice<_1d7b5c315_Node>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();


	_1d7b8cdc3_ScopeTree(jule::Ptr<_1d7b8cdc3_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_1d7b5c315_Node> __param_stmts, jule::Ptr<_1d7b77374_Token> __param_end): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts), _field_end(__param_end) {}

	

	_1d7b8cdc3_ScopeTree(void) = default;

	inline bool operator==(_1d7b8cdc3_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d7b8cdc3_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7ade3c9_is_self(_1d7b8d0b0_ParamDecl*);
inline jule::Bool _1d7ae8306_is_ref(_1d7b8d0b0_ParamDecl*);
struct _1d7b8d0b0_ParamDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1d7b8d0b0_ParamDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1d7b8d0b0_ParamDecl(void) = default;

	inline bool operator==(_1d7b8d0b0_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1d7b8d0b0_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b0b0e9_is_anon(_1d7b8d29c_FnDecl*);
struct _1d7b8d29c_FnDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>();
	jule::Ptr<_1d7a17db3_RetTypeDecl> _field_result = jule::Ptr<_1d7a17db3_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>();


	_1d7b8d29c_FnDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> __param_generics, jule::Ptr<_1d7a17db3_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1d7b8d29c_FnDecl(void) = default;

	inline bool operator==(_1d7b8d29c_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1d7b8d29c_FnDecl _other) { return !this->operator==(_other); }


};
struct _1d7b8d489_VarDecl {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8d489_VarDecl(jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1d7b8d489_VarDecl(void) = default;

	inline bool operator==(_1d7b8d489_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8d489_VarDecl _other) { return !this->operator==(_other); }


};
struct _1d7b8d676_RetSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b8d676_RetSt(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1d7b8d676_RetSt(void) = default;

	inline bool operator==(_1d7b8d676_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b8d676_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b1097d_is_inf(_1d7b8d863_Iter*);
struct _1d7b8d863_Iter {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();


	_1d7b8d863_Iter(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_kind, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1d7b8d863_Iter(void) = default;

	inline bool operator==(_1d7b8d863_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d7b8d863_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b2ce73_is_while_next(_1d7b8da50_WhileKind*);
struct _1d7b8da50_WhileKind {
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1d7b77374_Token> _field_next_token = jule::Ptr<_1d7b77374_Token>();


	_1d7b8da50_WhileKind(jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Any __param_next, jule::Ptr<_1d7b77374_Token> __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1d7b8da50_WhileKind(void) = default;

	inline bool operator==(_1d7b8da50_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1d7b8da50_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d7b8dc3c_RangeKind {
	jule::Ptr<_1d7b77374_Token> _field_in_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b8d489_VarDecl> _field_key_a = jule::Ptr<_1d7b8d489_VarDecl>();
	jule::Ptr<_1d7b8d489_VarDecl> _field_key_b = jule::Ptr<_1d7b8d489_VarDecl>();


	_1d7b8dc3c_RangeKind(jule::Ptr<_1d7b77374_Token> __param_in_token, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1d7b8d489_VarDecl> __param_key_a, jule::Ptr<_1d7b8d489_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1d7b8dc3c_RangeKind(void) = default;

	inline bool operator==(_1d7b8dc3c_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1d7b8dc3c_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d7b8de29_BreakSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_label = jule::Ptr<_1d7b77374_Token>();


	_1d7b8de29_BreakSt(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d7b8de29_BreakSt(void) = default;

	inline bool operator==(_1d7b8de29_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d7b8de29_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d7b8e116_ContSt {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_label = jule::Ptr<_1d7b77374_Token>();


	_1d7b8e116_ContSt(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1d7b8e116_ContSt(void) = default;

	inline bool operator==(_1d7b8e116_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1d7b8e116_ContSt _other) { return !this->operator==(_other); }


};
struct _1d7b8e303_If {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();


	_1d7b8e303_If(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1d7b8e303_If(void) = default;

	inline bool operator==(_1d7b8e303_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d7b8e303_If _other) { return !this->operator==(_other); }


};
struct _1d7b8e4e0_Else {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();


	_1d7b8e4e0_Else(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1d7b8e4e0_Else(void) = default;

	inline bool operator==(_1d7b8e4e0_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d7b8e4e0_Else _other) { return !this->operator==(_other); }


};
struct _1d7b8e6cc_Conditional {
	jule::Ptr<_1d7b8e303_If> _field_head = jule::Ptr<_1d7b8e303_If>();
	jule::Slice<jule::Ptr<_1d7b8e303_If>> _field_tail = jule::Slice<jule::Ptr<_1d7b8e303_If>>();
	jule::Ptr<_1d7b8e4e0_Else> _field_default = jule::Ptr<_1d7b8e4e0_Else>();


	_1d7b8e6cc_Conditional(jule::Ptr<_1d7b8e303_If> __param_head, jule::Slice<jule::Ptr<_1d7b8e303_If>> __param_tail, jule::Ptr<_1d7b8e4e0_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1d7b8e6cc_Conditional(void) = default;

	inline bool operator==(_1d7b8e6cc_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d7b8e6cc_Conditional _other) { return !this->operator==(_other); }


};
struct _1d7b8e8b9_TypeAliasDecl {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();


	_1d7b8e8b9_TypeAliasDecl(jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1d7b8e8b9_TypeAliasDecl(void) = default;

	inline bool operator==(_1d7b8e8b9_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d7b8e8b9_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d7b8eaa6_Case {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();


	_1d7b8eaa6_Case(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1d7b8eaa6_Case(void) = default;

	inline bool operator==(_1d7b8eaa6_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1d7b8eaa6_Case _other) { return !this->operator==(_other); }


};
struct _1d7b8ec93_MatchCase {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Slice<jule::Ptr<_1d7b8eaa6_Case>> _field_cases = jule::Slice<jule::Ptr<_1d7b8eaa6_Case>>();
	jule::Ptr<_1d7b8e4e0_Else> _field_default = jule::Ptr<_1d7b8e4e0_Else>();


	_1d7b8ec93_MatchCase(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Bool __param_type_match, jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Slice<jule::Ptr<_1d7b8eaa6_Case>> __param_cases, jule::Ptr<_1d7b8e4e0_Else> __param_default): _field_token(__param_token), _field_end(__param_end), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1d7b8ec93_MatchCase(void) = default;

	inline bool operator==(_1d7b8ec93_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d7b8ec93_MatchCase _other) { return !this->operator==(_other); }


};
struct _1d7b8ee80_UseDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_selected = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1d7b8ee80_UseDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1d7b8ee80_UseDecl(void) = default;

	inline bool operator==(_1d7b8ee80_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1d7b8ee80_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7a46254_auto_expr(_1d7b9016c_EnumItemDecl*);
struct _1d7b9016c_EnumItemDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b9016c_EnumItemDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1d7b09a43_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1d7b9016c_EnumItemDecl(void) = default;

	inline bool operator==(_1d7b9016c_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1d7b9016c_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b90777_default_typed(_1d7b9058a_EnumDecl*);
struct _1d7b9058a_EnumDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();


	_1d7b9058a_EnumDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>> __param_items, jule::Ptr<_1d7b77374_Token> __param_end): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_end(__param_end) {}

	

	_1d7b9058a_EnumDecl(void) = default;

	inline bool operator==(_1d7b9058a_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1d7b9058a_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1d7b90d82_FieldDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_kind = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7b09a43_Expr> _field_default = jule::Ptr<_1d7b09a43_Expr>();


	_1d7b90d82_FieldDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1d7a0e75b_TypeDecl> __param_kind, jule::Ptr<_1d7b09a43_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1d7b90d82_FieldDecl(void) = default;

	inline bool operator==(_1d7b90d82_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1d7b90d82_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d7b916e0_StructDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>();


	_1d7b916e0_StructDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> __param_generics): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_1d7b916e0_StructDecl(void) = default;

	inline bool operator==(_1d7b916e0_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1d7b916e0_StructDecl _other) { return !this->operator==(_other); }


};
struct _1d7b91cea_TraitDecl {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>();


	_1d7b91cea_TraitDecl(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1d7b77374_Token> __param_end, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> __param_methods): _field_token(__param_token), _field_end(__param_end), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_1d7b91cea_TraitDecl(void) = default;

	inline bool operator==(_1d7b91cea_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1d7b91cea_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d7b92768_is_trait_impl(_1d7b92405_Impl*);
inline jule::Bool _1d7b929cc_is_struct_impl(_1d7b92405_Impl*);
struct _1d7b92405_Impl {
	jule::Ptr<_1d7b77374_Token> _field_end = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_base = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_dest = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>();
	jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>>();


	_1d7b92405_Impl(jule::Ptr<_1d7b77374_Token> __param_end, jule::Ptr<_1d7a0e75b_TypeDecl> __param_base, jule::Ptr<_1d7a0e75b_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> __param_statics): _field_end(__param_end), _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1d7b92405_Impl(void) = default;

	inline bool operator==(_1d7b92405_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1d7b92405_Impl _other) { return !this->operator==(_other); }


};
struct _1d82bd305_FileInfo {
	jule::Ptr<_1d7a43eaa_Ast> _field_ast = jule::Ptr<_1d7a43eaa_Ast>();
	jule::Slice<_1d77ca48e_Log> _field_errors = jule::Slice<_1d77ca48e_Log>();


	_1d82bd305_FileInfo(jule::Ptr<_1d7a43eaa_Ast> __param_ast, jule::Slice<_1d77ca48e_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1d82bd305_FileInfo(void) = default;

	inline bool operator==(_1d82bd305_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d82bd305_FileInfo _other) { return !this->operator==(_other); }


};
struct _1d82bd4e2_PackageInfo {
	jule::Slice<jule::Ptr<_1d82bd305_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1d82bd305_FileInfo>>();


	_1d82bd4e2_PackageInfo(jule::Slice<jule::Ptr<_1d82bd305_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1d82bd4e2_PackageInfo(void) = default;

	inline bool operator==(_1d82bd4e2_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1d82bd4e2_PackageInfo _other) { return !this->operator==(_other); }


};
struct _1d831513d_Stmt {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Bool _field_terminated = jule::Bool();


	_1d831513d_Stmt(jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1d831513d_Stmt(void) = default;

	inline bool operator==(_1d831513d_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1d831513d_Stmt _other) { return !this->operator==(_other); }


};
inline void _1d83160ea_stop(_1d8315968_ScopeParser*);
inline jule::Bool _1d831635e_stopped(_1d8315968_ScopeParser*);
inline jule::Bool _1d83165c3_finished(_1d8315968_ScopeParser*);
inline jule::Bool _1d8316837_is_last_st(_1d8315968_ScopeParser*);
inline void _1d8316b56_push_err(_1d8315968_ScopeParser*,jule::Ptr<_1d7b77374_Token>,jule::Str);
inline void _1d8316e75_push_suggestion(_1d8315968_ScopeParser*,jule::Str,jule::Slice<jule::Any>);
inline void _1d83171ea_insert_as_next(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d831513d_Stmt> _1d831745e_next(_1d8315968_ScopeParser*);
inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8317816_build_scope(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b77374_Token>);
inline jule::Any _1d8317b24_build_var_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d8317e32_build_ret_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d8318240_build_while_next_iter(_1d8315968_ScopeParser*,jule::Ptr<_1d831513d_Stmt>&);
inline jule::Ptr<_1d7b8da50_WhileKind> _1d831854d_build_while_iter_kind(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83188a0_get_range_kind_keys_tokens(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8d489_VarDecl> _1d8318b9c_build_range_kind_key(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _1d8318eaa_build_range_kind_keys(_1d8315968_ScopeParser*,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>&);
inline void _1d831931d_setup_range_kind_keys_plain(_1d8315968_ScopeParser*,jule::Ptr<_1d7b8dc3c_RangeKind>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8319670_setup_range_kind_keys_explicit(_1d8315968_ScopeParser*,jule::Ptr<_1d7b8dc3c_RangeKind>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d831997d_setup_range_kind_keys(_1d8315968_ScopeParser*,jule::Ptr<_1d7b8dc3c_RangeKind>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8dc3c_RangeKind> _1d8319dce_build_range_iter_kind(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Any _1d831a286_build_common_iter_kind(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Any _1d831a594_build_common_iter(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d831a8a2_build_iter_st(_1d8315968_ScopeParser*,jule::Ptr<_1d831513d_Stmt>&);
inline jule::Any _1d831abb0_build_break_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d831aebd_build_cont_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8e303_If> _1d831b2cb_build_if(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8e4e0_Else> _1d831b5d9_build_else(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d831b8e7_build_if_else_chain(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d831bc05_build_co_call_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d831c013_build_goto_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d831c321_build_fall_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d831c62e_build_type_alias_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d831ca91_push_case_expr(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Ptr<_1d7b77374_Token>,jule::Bool,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>&);
inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d831ce48_build_case_exprs(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Bool);
inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d831d256_build_case_scope(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Ptr<_1d7b8eaa6_Case>,jule::Bool> _1d831d60d_build_case(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b8eaa6_Case>>,jule::Ptr<_1d7b8e4e0_Else>> _1d831d9b5_build_cases(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Bool);
inline jule::Ptr<_1d7b8ec93_MatchCase> _1d831dcc3_build_match_case(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d831e0d1_build_scope_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8c433_LabelSt> _1d831e3de_build_label_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1d831e6ec_build_id_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d832dab3_AssignInfo> _1d831ea0a_build_assign_info(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8c9e9_AssignLeft> _1d831ed18_build_assign_l(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>> _1d8320126_build_assign_ls(_1d8315968_ScopeParser*,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>&);
inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320434_build_plain_assign(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320742_build_decl_assign(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320a50_build_assign_st(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d8320d5d_build_use_expr(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d832116b_build_st(_1d8315968_ScopeParser*,jule::Ptr<_1d831513d_Stmt>&);
inline void _1d832148a_build(_1d8315968_ScopeParser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b8cdc3_ScopeTree>&);
struct _1d8315968_ScopeParser {
	jule::Ptr<_1d83320e4_Parser> _field_p = jule::Ptr<_1d83320e4_Parser>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_s = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1d831513d_Stmt>>();
	jule::I32 _field_pos = jule::I32();


	_1d8315968_ScopeParser(jule::Ptr<_1d83320e4_Parser> __param_p, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1d831513d_Stmt>> __param_stmts, jule::I32 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1d8315968_ScopeParser(void) = default;

	inline bool operator==(_1d8315968_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d8315968_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1d8322337_CallData {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();


	_1d8322337_CallData(jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_expr_tokens, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_args_tokens, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1d8322337_CallData(void) = default;

	inline bool operator==(_1d8322337_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1d8322337_CallData _other) { return !this->operator==(_other); }


};
inline void _1d8324081_push_err(_1d8323789_ExprBuilder*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1d83243a0_push_suggestion(_1d8323789_ExprBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d7b8960b_TupleExpr> _1d83246ad_build_tuple(_1d8323789_ExprBuilder*,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>&);
inline jule::Ptr<_1d7b89a29_LitExpr> _1d83249bb_build_lit(_1d8323789_ExprBuilder*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8324cc9_build_primitive_type(_1d8323789_ExprBuilder*,jule::Ptr<_1d7b77374_Token>&);
inline jule::Any _1d83250d7_build_single(_1d8323789_ExprBuilder*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1d7b8a0e0_IdentExpr> _1d83253e5_build_cpp_linked_ident(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8a2cc_UnaryExpr> _1d8325703_build_unary(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8aa80_SubIdentExpr> _1d8325a11_build_obj_sub_ident(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8a893_NsSelectionExpr> _1d8325d1e_build_ns_sub_ident(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d832612c_build_type(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d832643a_build_sub_ident(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8a4b9_VariadicExpr> _1d8326748_build_variadic(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d8326a56_build_op_right(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b09a43_Expr> _1d8326da8_build_between_parentheses(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8a6a6_CastExpr> _1d83271a5_try_build_cast(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d832756d_push_arg(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Ptr<_1d7b77374_Token>);
inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d832787b_build_args(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _1d8327b89_build_call_generics(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8ae59_FnCallExpr> _1d8328041_build_fn_call(_1d8323789_ExprBuilder*,jule::Ptr<_1d7b77374_Token>&,jule::Ptr<_1d8322337_CallData>&);
inline jule::Any _1d8328393_build_parentheses_range(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b89c16_UnsafeExpr> _1d8328690_build_unsafe_expr(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8d29c_FnDecl> _1d832899d_build_anon_fn(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d8328cab_build_unsafe(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8329174_push_range_lit_part(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Ptr<_1d7b77374_Token>,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83294c6_get_brace_range_lit_expr_parts(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8b146_FieldExprPair> _1d83297c3_build_field_expr_pair(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b09a43_Expr> _1d8329ad1_build_struct_lit_expr(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d8329dde_build_struct_lit_exprs(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8b333_StructLit> _1d832a241_build_typed_struct_literal(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b09a43_Expr> _1d832a53d_build_brace_lit_part(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8b520_BraceLit> _1d832a84b_build_brace_lit(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d832ab59_build_brace_range(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d832ae67_get_enumerable_parts(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8b8e9_SliceExpr> _1d832b275_build_slice(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b897e8_IndexingExpr> _1d832b6c6_build_indexing(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1d7b8c059_SlicingExpr> _1d832bc6a_build_slicing(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&,jule::Ptr<_1d7b77374_Token>&,jule::Ptr<_1d7b77374_Token>);
inline jule::Any _1d832c078_build_bracket_range(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d832c386_build_data(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8ac6c_BinopExpr> _1d832c73d_build_binop(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32);
inline jule::Any _1d832ca4b_build(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Any _1d832cd59_build_kind(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b09a43_Expr> _1d832d167_build_from_tokens(_1d8323789_ExprBuilder*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
struct _1d8323789_ExprBuilder {
	jule::Ptr<_1d83320e4_Parser> _field_p = jule::Ptr<_1d83320e4_Parser>();


	_1d8323789_ExprBuilder(jule::Ptr<_1d83320e4_Parser> __param_p): _field_p(__param_p) {}

	

	_1d8323789_ExprBuilder(void) = default;

	inline bool operator==(_1d8323789_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1d8323789_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1d832dab3_AssignInfo {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_l = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_r = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Ptr<_1d7b77374_Token> _field_setter = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_ok = jule::Bool();


	_1d832dab3_AssignInfo(jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_l, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_r, jule::Ptr<_1d7b77374_Token> __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1d832dab3_AssignInfo(void) = default;

	inline bool operator==(_1d832dab3_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1d832dab3_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1d8332424_stop(_1d83320e4_Parser*);
inline jule::Bool _1d8332688_stopped(_1d83320e4_Parser*);
inline void _1d8332a51_push_err(_1d83320e4_Parser*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1d8332d70_push_suggestion(_1d83320e4_Parser*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d7b09a43_Expr> _1d833317d_build_expr(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7a4352b_Directive> _1d833348b_build_directive(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d8333711_push_directive(_1d83320e4_Parser*,jule::Ptr<_1d7a4352b_Directive>);
inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8333ab8_build_scope(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b77374_Token>);
inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d8334019___build_type(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32*,jule::Bool);
inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d833446a_build_type(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32*,jule::Bool);
inline jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _1d8334778_build_type_alias_decl(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8334adb_build_var_type_and_expr(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b8d489_VarDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8334de9_build_var_common(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b8d489_VarDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d83352b2_build_var_begin(_1d83320e4_Parser*,jule::Ptr<_1d7b8d489_VarDecl>&,jule::Ptr<jule::I32>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8d489_VarDecl> _1d83355c0_build_var(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8c246_GenericDecl> _1d83358cd_build_generic(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _1d8335c85_build_generics(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Ptr<_1d7b8d0b0_ParamDecl> _1d8336093_build_self_param(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d833645b_param_type_begin(_1d83320e4_Parser*,jule::Ptr<_1d7b8d0b0_ParamDecl>&,jule::I32&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d833677a_build_param_type(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b8d0b0_ParamDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8336b43_build_param_body(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b8d0b0_ParamDecl>&,jule::Ptr<jule::I32>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8d0b0_ParamDecl> _1d8336e51_build_param(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d83371c6_check_params(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>> _1d833757d_build_params(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Bool);
inline std::tuple<jule::Ptr<_1d7a17db3_RetTypeDecl>,jule::Bool> _1d8337935_build_multi_ret_type(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&);
inline std::tuple<jule::Ptr<_1d7a17db3_RetTypeDecl>,jule::Bool> _1d8337cdc_build_ret_type(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&);
inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833823d_build_fn_prototype(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&,jule::Bool);
inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833868e_build_fn(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Bool,jule::Bool);
inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d833899c_get_use_decl_selectors(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d8338cbb_build_cpp_use_decl(_1d83320e4_Parser*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d83390da_build_std_use_decl(_1d83320e4_Parser*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d8339409_build_ident_use_decl(_1d83320e4_Parser*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline void _1d8339728_parse_use_decl(_1d83320e4_Parser*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8ee80_UseDecl> _1d8339ad0_build_use_decl(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Bool);
inline jule::Ptr<_1d7b09a43_Expr> _1d8339e87_build_enum_item_expr(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<jule::I32>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>> _1d833a295_build_enum_items(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b9058a_EnumDecl> _1d833a5a3_build_enum_decl(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b90d82_FieldDecl> _1d833a8b1_build_field(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>> _1d833ac13_build_struct_decl_fields(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b916e0_StructDecl> _1d833b010_build_struct_decl(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d833b285_check_method_receiver(_1d83320e4_Parser*,jule::Ptr<_1d7b8d29c_FnDecl>&);
inline jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> _1d833b593_build_trait_methods(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b91cea_TraitDecl> _1d833b8a1_build_trait_decl(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833bbae_build_cpp_link_fn(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8d489_VarDecl> _1d833bebc_build_cpp_link_var(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b916e0_StructDecl> _1d833c2ca_build_cpp_link_struct(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _1d833c62c_build_cpp_link_type_alias(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Ptr<_1d7b8ee80_UseDecl> _1d833c929_build_cpp_link_use(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d833cc37_build_cpp_link(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833d045_get_method(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d833d364_parse_impl_body(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b92405_Impl>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b92405_Impl> _1d833d672_build_impl(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Any _1d833d980_build_node_data(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d833dc05_check_directive(_1d83320e4_Parser*,_1d7b5c315_Node&);
inline void _1d833e024_apply_fn_meta(_1d83320e4_Parser*,jule::Ptr<_1d7b8d29c_FnDecl>&,jule::Bool);
inline void _1d833e343_apply_meta(_1d83320e4_Parser*,_1d7b5c315_Node&,jule::Bool);
inline void _1d833e5b8_check_use_decl(_1d83320e4_Parser*,_1d7b5c315_Node&);
inline std::tuple<jule::Bool,jule::Any> _1d833e91a_build_general_scope_node_data(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline _1d7b5c315_Node _1d833ec17_parse_node(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d833ee8c_append_node(jule::Ptr<_1d83320e4_Parser>,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d83403ee_remove_range(_1d83320e4_Parser*,jule::I32,jule::Str,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Slice<jule::I32>&);
inline void _1d834080b_push_wrong_order_close_err(_1d83320e4_Parser*,jule::Ptr<_1d7b77374_Token>&,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Slice<jule::I32>&);
inline void _1d8340c5c_push_range_close(_1d83320e4_Parser*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::Slice<jule::I32>&);
inline void _1d8340ed2_check_ranges(_1d83320e4_Parser*,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline void _1d8341257_parse(jule::Ptr<_1d83320e4_Parser>,jule::Ptr<_1d7b7c764_File>&);
struct _1d83320e4_Parser {
	jule::Ptr<_1d7a43eaa_Ast> _field_ast = jule::Ptr<_1d7a43eaa_Ast>();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Slice<_1d77ca48e_Log> _field_errors = jule::Slice<_1d77ca48e_Log>();


	_1d83320e4_Parser(jule::Ptr<_1d7a43eaa_Ast> __param_ast, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Slice<_1d77ca48e_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_1d83320e4_Parser(void) = default;

	inline bool operator==(_1d83320e4_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1d83320e4_Parser _other) { return !this->operator==(_other); }


};
inline void _1d8342eb2_push_err(_1d83428da_TypeBuilder*,jule::Ptr<_1d7b77374_Token>,jule::Str);
inline void _1d83432d1_push_suggestion(_1d83428da_TypeBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8343545_build_prim(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83437a9_build_namespace(_1d83428da_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _1d8343a1d_build_generics(_1d83428da_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d8343c82_ident_generics(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8343ee6_build_ident(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d834425a_build_cpp_link(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83444be_build_fn(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344733_build_ptr(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344997_build_sptr(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344c0b_build_op(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344e70_build_slc(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83451d4_build_arr(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d834558b_build_map(_1d83428da_TypeBuilder*,jule::I32,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8345800_build_enumerable(_1d83428da_TypeBuilder*);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8345a64_step(_1d83428da_TypeBuilder*);
inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d8345cc8_build(_1d83428da_TypeBuilder*);
struct _1d83428da_TypeBuilder {
	jule::Ptr<_1d83320e4_Parser> _field_p = jule::Ptr<_1d83320e4_Parser>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1d83428da_TypeBuilder(jule::Ptr<_1d83320e4_Parser> __param_p, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_tokens, jule::I32* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1d83428da_TypeBuilder(void) = default;

	inline bool operator==(_1d83428da_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1d83428da_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1a9945e62_FloatInfo {
	jule::U32 _field_mantbits = jule::U32();
	jule::U32 _field_expbits = jule::U32();
	jule::I32 _field_bias = jule::I32();


	_1a9945e62_FloatInfo(jule::U32 __param_mantbits, jule::U32 __param_expbits, jule::I32 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1a9945e62_FloatInfo(void) = default;

	inline bool operator==(_1a9945e62_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a9945e62_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1a948d04d_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I32 _field_nd = jule::I32();
	jule::I32 _field_dp = jule::I32();
	jule::Bool _field_neg = jule::Bool();


	_1a948d04d_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I32 __param_nd, jule::I32 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1a948d04d_DecimalSlice(void) = default;

	inline bool operator==(_1a948d04d_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1a948d04d_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1a9ba7327_LeftCheat {
	jule::I32 _field_delta = jule::I32();
	jule::Str _field_cutoff = jule::Str();


	_1a9ba7327_LeftCheat(jule::I32 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1a9ba7327_LeftCheat(void) = default;

	inline bool operator==(_1a9ba7327_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a9ba7327_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a95b51ca_set(_1a9ba7514_Decimal*,jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1a97920dd_float_bits(_1a9ba7514_Decimal*,_1a9945e62_FloatInfo&);
inline void _1a9ba7701_assign(_1a9ba7514_Decimal*,jule::U64);
inline void _1a9ba7833_shift(_1a9ba7514_Decimal*,jule::I32);
inline void _1a9ba7965_round_down(_1a9ba7514_Decimal*,jule::I32);
inline void _1a9ba7a97_round_up(_1a9ba7514_Decimal*,jule::I32);
inline void _1a9ba7bc9_round(_1a9ba7514_Decimal*,jule::I32);
inline jule::U64 _1a9ba7d0b_rounded_integer(_1a9ba7514_Decimal*);
struct _1a9ba7514_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I32 _field_nd = jule::I32();
	jule::I32 _field_dp = jule::I32();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1a9ba7514_Decimal(jule::Array<jule::U8,800> __param_d, jule::I32 __param_nd, jule::I32 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1a9ba7514_Decimal(void) = default;

	inline bool operator==(_1a9ba7514_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a9ba7514_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9c46e77_Const> static__1a9c45e76_new_i64(jule::I64);
inline jule::Ptr<_1a9c46e77_Const> static__1a9c47164_new_u64(jule::U64);
inline jule::Ptr<_1a9c46e77_Const> static__1a9c473a6_new_bool(jule::Bool);
inline jule::Ptr<_1a9c46e77_Const> static__1a9c4764d_new_str(jule::Str);
inline jule::Ptr<_1a9c46e77_Const> static__1a9c478e5_new_f64(jule::F64);
inline jule::Ptr<_1a9c46e77_Const> static__1a9c47ae3_new_nil(void);
inline jule::I64 _1a9c481dc_read_i64(_1a9c46e77_Const*);
inline jule::U64 _1a9c48451_read_u64(_1a9c46e77_Const*);
inline jule::Bool _1a9c486b5_read_bool(_1a9c46e77_Const*);
inline jule::Str _1a9c48929_read_str(_1a9c46e77_Const*);
inline jule::F64 _1a9c48b8d_read_f64(_1a9c46e77_Const*);
inline jule::I64 _1a9c48e02_as_i64(_1a9c46e77_Const*);
inline jule::U64 _1a9c49166_as_u64(_1a9c46e77_Const*);
inline jule::F64 _1a9c493ca_as_f64(_1a9c46e77_Const*);
inline void _1a9c49650_set_i64(_1a9c46e77_Const*,jule::I64);
inline void _1a9c498c5_set_u64(_1a9c46e77_Const*,jule::U64);
inline void _1a9c49b4a_set_bool(_1a9c46e77_Const*,jule::Bool);
inline void _1a9c49dc0_set_str(_1a9c46e77_Const*,jule::Str);
inline void _1a9c4a145_set_f64(_1a9c46e77_Const*,jule::F64);
inline void _1a9c4a321_set_nil(_1a9c46e77_Const*);
inline jule::Bool _1a9c4a585_is_i64(_1a9c46e77_Const*);
inline jule::Bool _1a9c4a7e9_is_u64(_1a9c46e77_Const*);
inline jule::Bool _1a9c4aa5d_is_bool(_1a9c46e77_Const*);
inline jule::Bool _1a9c4acc2_is_str(_1a9c46e77_Const*);
inline jule::Bool _1a9c4b036_is_f64(_1a9c46e77_Const*);
inline jule::Bool _1a9c4b29a_is_nil(_1a9c46e77_Const*);
inline jule::Bool _1a9c4b5a8_are_same_types(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4b8b6_and(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4bbc4_or(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4bed2_eq(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4c2e0_lt(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4c5ed_lt_eq(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4c90b_gt(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4cc19_gt_eq(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4d027_add(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4d335_sub(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4d643_mul(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4d951_div(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4dc5e_mod(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4e06c_bitwise_and(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4e37a_bitwise_or(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4e688_xor(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4e996_lshift(_1a9c46e77_Const*,_1a9c46e77_Const);
inline jule::Bool _1a9c4eca4_rshift(_1a9c46e77_Const*,_1a9c46e77_Const);
struct _1a9c46e77_Const {
	jule::Any _field_data = jule::Any();


	_1a9c46e77_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1a9c46e77_Const(void) = default;

	inline jule::Bool operator==(_1a9c46e77_Const _other) { return _1a9c4bed2_eq(this, _other); }

	inline bool operator!=(_1a9c46e77_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a9c46e77_Const _other) { return _1a9c4c90b_gt(this, _other); }

	inline jule::Bool operator>=(_1a9c46e77_Const _other) { return _1a9c4cc19_gt_eq(this, _other); }

	inline jule::Bool operator<(_1a9c46e77_Const _other) { return _1a9c4c2e0_lt(this, _other); }

	inline jule::Bool operator<=(_1a9c46e77_Const _other) { return _1a9c4c5ed_lt_eq(this, _other); }


};
inline jule::Ptr<_1a9e37530_FileStream> static__1a9e358e6_new(jule::Ptr<_1d665b8d7_File>);
inline jule::Exceptional<jule::I32> _1a9e3b07d_read(_1a9e37530_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _1a9e3b38b_write(_1a9e37530_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _1a9e3b6dd_read_line(_1a9e37530_FileStream*);
struct _1a9e37530_FileStream {
	jule::Ptr<_1d665b8d7_File> _field_buff = jule::Ptr<_1d665b8d7_File>();


	_1a9e37530_FileStream(jule::Ptr<_1d665b8d7_File> __param_buff): _field_buff(__param_buff) {}

	

	_1a9e37530_FileStream(void) = default;

	inline bool operator==(_1a9e37530_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a9e37530_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I32> _1a9e3db85_read(_1a9e3d4e2_ByteStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _1a9e3de93_write(_1a9e3d4e2_ByteStream*,jule::Slice<jule::U8>);
inline jule::Ptr<_1a9e3d4e2_ByteStream> static__1a9e3e2a1_new(void);
inline jule::Bool _1a9e3e515_data(_1a9e3d4e2_ByteStream*);
inline void _1a9e3e6e1_fit(_1a9e3d4e2_ByteStream*);
struct _1a9e3d4e2_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1a9e3d4e2_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_1a9e3d4e2_ByteStream(void) = default;

	inline bool operator==(_1a9e3d4e2_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a9e3d4e2_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9e40a88_Scanner> static__1a9e40eb7_new(jule::Trait<_1a9e3be3b_Reader>);
inline jule::Ptr<_1a9e40a88_Scanner> static__1a9e4125e_newf(jule::Ptr<_1d665b8d7_File>);
inline void _1a9e4155b_reset(_1a9e40a88_Scanner*);
inline jule::Slice<jule::U8> _1a9e417c0_bytes(_1a9e40a88_Scanner*);
inline jule::Str _1a9e41a34_text(_1a9e40a88_Scanner*);
inline jule::Exceptional<jule::Bool> _1a9e41c98_scan(_1a9e40a88_Scanner*);
struct _1a9e40a88_Scanner {
	jule::Trait<_1a9e3be3b_Reader> _field_r = jule::Trait<_1a9e3be3b_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1a9e40a88_Scanner(jule::Trait<_1a9e3be3b_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1a9e40a88_Scanner(void) = default;

	inline bool operator==(_1a9e40a88_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1a9e40a88_Scanner _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d84e62_FieldIns> _1a8d8049b_instance(jule::Ptr<_1bd010a02_Field>);
struct _1bd010a02_Field {
	jule::Ptr<_1a8d82b41_Struct> _field_owner = jule::Ptr<_1a8d82b41_Struct>();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Ptr<_1d7b09a43_Expr> _field_default = jule::Ptr<_1d7b09a43_Expr>();


	_1bd010a02_Field(jule::Ptr<_1a8d82b41_Struct> __param_owner, jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Ptr<_1d7b09a43_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1bd010a02_Field(void) = default;

	inline bool operator==(_1bd010a02_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1bd010a02_Field _other) { return !this->operator==(_other); }


};
struct _1a8d81d2c_Operators {
	jule::Ptr<_1a8d98063_FnIns> _field_eq = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_gt = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_gt_eq = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_lt = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_lt_eq = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_shl = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_shr = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_add = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_sub = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_div = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_mul = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_mod = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_and = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_or = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_xor = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_neg = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_pos = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_not = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_add_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_sub_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_div_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_mul_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_mod_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_shl_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_shr_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_or_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_and_assign = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d98063_FnIns> _field_bit_xor_assign = jule::Ptr<_1a8d98063_FnIns>();


	_1a8d81d2c_Operators(jule::Ptr<_1a8d98063_FnIns> __param_eq, jule::Ptr<_1a8d98063_FnIns> __param_gt, jule::Ptr<_1a8d98063_FnIns> __param_gt_eq, jule::Ptr<_1a8d98063_FnIns> __param_lt, jule::Ptr<_1a8d98063_FnIns> __param_lt_eq, jule::Ptr<_1a8d98063_FnIns> __param_shl, jule::Ptr<_1a8d98063_FnIns> __param_shr, jule::Ptr<_1a8d98063_FnIns> __param_add, jule::Ptr<_1a8d98063_FnIns> __param_sub, jule::Ptr<_1a8d98063_FnIns> __param_div, jule::Ptr<_1a8d98063_FnIns> __param_mul, jule::Ptr<_1a8d98063_FnIns> __param_mod, jule::Ptr<_1a8d98063_FnIns> __param_bit_and, jule::Ptr<_1a8d98063_FnIns> __param_bit_or, jule::Ptr<_1a8d98063_FnIns> __param_bit_xor, jule::Ptr<_1a8d98063_FnIns> __param_neg, jule::Ptr<_1a8d98063_FnIns> __param_pos, jule::Ptr<_1a8d98063_FnIns> __param_bit_not, jule::Ptr<_1a8d98063_FnIns> __param_add_assign, jule::Ptr<_1a8d98063_FnIns> __param_sub_assign, jule::Ptr<_1a8d98063_FnIns> __param_div_assign, jule::Ptr<_1a8d98063_FnIns> __param_mul_assign, jule::Ptr<_1a8d98063_FnIns> __param_mod_assign, jule::Ptr<_1a8d98063_FnIns> __param_shl_assign, jule::Ptr<_1a8d98063_FnIns> __param_shr_assign, jule::Ptr<_1a8d98063_FnIns> __param_bit_or_assign, jule::Ptr<_1a8d98063_FnIns> __param_bit_and_assign, jule::Ptr<_1a8d98063_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1a8d81d2c_Operators(void) = default;

	inline bool operator==(_1a8d81d2c_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1a8d81d2c_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d857c0_StructIns> _1a8d83070_instance(jule::Ptr<_1a8d82b41_Struct>);
inline jule::Ptr<_1a8d857c0_StructIns> _1a8d8337d_append_instance(_1a8d82b41_Struct*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Ptr<_1a8d94db7_Fn> _1a8d83735_find_method(_1a8d82b41_Struct*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d2553e_Var> _1a8d83a43_find_static(_1a8d82b41_Struct*,jule::Str);
inline jule::Ptr<_1bd010a02_Field> _1a8d83d51_find_field(_1a8d82b41_Struct*,jule::Str);
inline jule::Bool _1a8d8415e_is_implements(_1a8d82b41_Struct*,jule::Ptr<_1a8ea7a57_Trait>);
inline jule::Bool _1a8d8446c_is_derives(_1a8d82b41_Struct*,jule::Str);
inline jule::Bool _1a8d8477a_is_uses(_1a8d82b41_Struct*,jule::Ptr<_1a8d82b41_Struct>);
inline jule::Bool _1a8d849de_has_ref_accessible(_1a8d82b41_Struct*);
struct _1a8d82b41_Struct {
	jule::Ptr<_1a9d0a03a_Sema> _field_sema = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _field_depends = jule::Slice<jule::Ptr<_1a8d82b41_Struct>>();
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _field_uses = jule::Slice<jule::Ptr<_1a8d82b41_Struct>>();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1bd010a02_Field>> _field_fields = jule::Slice<jule::Ptr<_1bd010a02_Field>>();
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_statics = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a8ea7a57_Trait>> _field_implements = jule::Slice<jule::Ptr<_1a8ea7a57_Trait>>();
	jule::Slice<jule::Ptr<_1a8d857c0_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1a8d857c0_StructIns>>();


	_1a8d82b41_Struct(jule::Ptr<_1a9d0a03a_Sema> __param_sema, jule::Slice<jule::Ptr<_1a8d82b41_Struct>> __param_depends, jule::Slice<jule::Ptr<_1a8d82b41_Struct>> __param_uses, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1bd010a02_Field>> __param_fields, jule::Slice<jule::Ptr<_1a8d94db7_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1a8ea7a57_Trait>> __param_implements, jule::Slice<jule::Ptr<_1a8d857c0_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_1a8d82b41_Struct(void) = default;

	inline bool operator==(_1a8d82b41_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a8d82b41_Struct _other) { return !this->operator==(_other); }


};
struct _1a8d84e62_FieldIns {
	jule::Ptr<_1bd010a02_Field> _field_decl = jule::Ptr<_1bd010a02_Field>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d71c2d_Data> _field_default = jule::Ptr<_1a9d71c2d_Data>();


	_1a8d84e62_FieldIns(jule::Ptr<_1bd010a02_Field> __param_decl, jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Ptr<_1a9d71c2d_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1a8d84e62_FieldIns(void) = default;

	inline bool operator==(_1a8d84e62_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a8d84e62_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a8d8742b_OperandExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1a8d8742b_OperandExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1a8d8742b_OperandExprModel(void) = default;

	inline bool operator==(_1a8d8742b_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a8d8742b_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d878e3_BinopExprModel {
	jule::Ptr<_1a8d8742b_OperandExprModel> _field_left = jule::Ptr<_1a8d8742b_OperandExprModel>();
	jule::Ptr<_1a8d8742b_OperandExprModel> _field_right = jule::Ptr<_1a8d8742b_OperandExprModel>();
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();


	_1a8d878e3_BinopExprModel(jule::Ptr<_1a8d8742b_OperandExprModel> __param_left, jule::Ptr<_1a8d8742b_OperandExprModel> __param_right, jule::Ptr<_1d7b77374_Token> __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1a8d878e3_BinopExprModel(void) = default;

	inline bool operator==(_1a8d878e3_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a8d878e3_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d87c9a_UnaryExprModel {
	jule::Ptr<_1a9d71c2d_Data> _field_expr = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();


	_1a8d87c9a_UnaryExprModel(jule::Ptr<_1a9d71c2d_Data> __param_expr, jule::Ptr<_1d7b77374_Token> __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1a8d87c9a_UnaryExprModel(void) = default;

	inline bool operator==(_1a8d87c9a_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a8d87c9a_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d88196_StructArgExprModel {
	jule::Ptr<_1a8d84e62_FieldIns> _field_field = jule::Ptr<_1a8d84e62_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1a8d88196_StructArgExprModel(jule::Ptr<_1a8d84e62_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1a8d88196_StructArgExprModel(void) = default;

	inline bool operator==(_1a8d88196_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d88196_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8854d_StructLitExprModel {
	jule::Ptr<_1a8d857c0_StructIns> _field_strct = jule::Ptr<_1a8d857c0_StructIns>();
	jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>>();


	_1a8d8854d_StructLitExprModel(jule::Ptr<_1a8d857c0_StructIns> __param_strct, jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1a8d8854d_StructLitExprModel(void) = default;

	inline bool operator==(_1a8d8854d_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a8d8854d_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8887d_AllocStructLitExprModel {
	jule::Ptr<_1a8d8854d_StructLitExprModel> _field_lit = jule::Ptr<_1a8d8854d_StructLitExprModel>();


	_1a8d8887d_AllocStructLitExprModel(jule::Ptr<_1a8d8854d_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1a8d8887d_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a8d8887d_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1a8d8887d_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d88dab_CastingExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_expr_kind = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a8d88dab_CastingExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Ptr<_1a9d9ae66_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1a8d88dab_CastingExprModel(void) = default;

	inline bool operator==(_1a8d88dab_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1a8d88dab_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d896d6_FnCallExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a8d98063_FnIns> _field_func = jule::Ptr<_1a8d98063_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1a9cc76bc_Scope> _field_except = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1a8d896d6_FnCallExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1a8d98063_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1a9cc76bc_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1a8d896d6_FnCallExprModel(void) = default;

	inline bool operator==(_1a8d896d6_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1a8d896d6_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d89a8d_SliceExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_elem_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1a8d89a8d_SliceExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1a8d89a8d_SliceExprModel(void) = default;

	inline bool operator==(_1a8d89a8d_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a8d89a8d_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8a011_IndexingExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a9d71c2d_Data> _field_expr = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1a9d71c2d_Data> _field_index = jule::Ptr<_1a9d71c2d_Data>();


	_1a8d8a011_IndexingExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1a9d71c2d_Data> __param_expr, jule::Ptr<_1a9d71c2d_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1a8d8a011_IndexingExprModel(void) = default;

	inline bool operator==(_1a8d8a011_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1a8d8a011_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8a3b8_AnonFnExprModel {
	jule::Ptr<_1a8d98063_FnIns> _field_func = jule::Ptr<_1a8d98063_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1a8d8a3b8_AnonFnExprModel(jule::Ptr<_1a8d98063_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1a8d8a3b8_AnonFnExprModel(void) = default;

	inline bool operator==(_1a8d8a3b8_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1a8d8a3b8_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8a770_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1a8d8a770_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a8d8a770_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a8d8a770_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a8d8a770_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8abe3_MapExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_key_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_val_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Slice<jule::Ptr<_1a8d8a770_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1a8d8a770_KeyValPairExprModel>>();


	_1a8d8abe3_MapExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_key_kind, jule::Ptr<_1a9d9ae66_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1a8d8a770_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1a8d8abe3_MapExprModel(void) = default;

	inline bool operator==(_1a8d8abe3_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1a8d8abe3_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8b232_SlicingExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1a8d8b232_SlicingExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1a8d8b232_SlicingExprModel(void) = default;

	inline bool operator==(_1a8d8b232_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a8d8b232_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8b771_TraitSubIdentExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a8d94db7_Fn> _field_method = jule::Ptr<_1a8d94db7_Fn>();
	jule::Ptr<_1a8ea7a57_Trait> _field_trt = jule::Ptr<_1a8ea7a57_Trait>();


	_1a8d8b771_TraitSubIdentExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr, jule::Ptr<_1a8d94db7_Fn> __param_method, jule::Ptr<_1a8ea7a57_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_1a8d8b771_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a8d8b771_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1a8d8b771_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8bee1_StructSubIdentExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a9d71c2d_Data> _field_expr = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_expr_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a8d98063_FnIns> _field_method = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d84e62_FieldIns> _field_field = jule::Ptr<_1a8d84e62_FieldIns>();


	_1a8d8bee1_StructSubIdentExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1a9d71c2d_Data> __param_expr, jule::Ptr<_1a9d9ae66_TypeKind> __param_expr_kind, jule::Ptr<_1a8d98063_FnIns> __param_method, jule::Ptr<_1a8d84e62_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1a8d8bee1_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a8d8bee1_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1a8d8bee1_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8c497_StructStaticIdentExprModel {
	jule::Ptr<_1a8d857c0_StructIns> _field_structure = jule::Ptr<_1a8d857c0_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a8d98063_FnIns> _field_method = jule::Ptr<_1a8d98063_FnIns>();


	_1a8d8c497_StructStaticIdentExprModel(jule::Ptr<_1a8d857c0_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1a8d98063_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1a8d8c497_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a8d8c497_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1a8d8c497_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8c83d_ArrayExprModel {
	jule::Ptr<_1a9da67ce_Arr> _field_kind = jule::Ptr<_1a9da67ce_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1a8d8c83d_ArrayExprModel(jule::Ptr<_1a9da67ce_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1a8d8c83d_ArrayExprModel(void) = default;

	inline bool operator==(_1a8d8c83d_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a8d8c83d_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8cb29_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1a8d8cb29_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a8d8cb29_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a8d8cb29_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a8d8cb29_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8d1ac_CommonSubIdentExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_expr_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();


	_1a8d8d1ac_CommonSubIdentExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1a8d8d1ac_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a8d8d1ac_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a8d8d1ac_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8d487_TupleExprModel {
	jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _field_datas = jule::Slice<jule::Ptr<_1a9d71c2d_Data>>();


	_1a8d8d487_TupleExprModel(jule::Slice<jule::Ptr<_1a9d71c2d_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1a8d8d487_TupleExprModel(void) = default;

	inline bool operator==(_1a8d8d487_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1a8d8d487_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8d883_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1a8d8d883_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1a8d8d883_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a8d8d883_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a8d8d883_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8dc6d_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1a8d8dc6d_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1a8d8dc6d_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a8d8dc6d_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1a8d8dc6d_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8e08c_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1a8d8e08c_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a8d8e08c_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a8d8e08c_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d8e08c_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8e477_BuiltinNewCallExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1a8d8e477_BuiltinNewCallExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1a8d8e477_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a8d8e477_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1a8d8e477_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8e862_BuiltinPanicCallExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();


	_1a8d8e862_BuiltinPanicCallExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1a8d8e862_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a8d8e862_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d8e862_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d8ed18_BuiltinAssertCallExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1a8d8ed18_BuiltinAssertCallExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1a8d8ed18_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a8d8ed18_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1a8d8ed18_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d902be_BuiltinMakeCallExprModel {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1a8d902be_BuiltinMakeCallExprModel(jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1a8d902be_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a8d902be_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1a8d902be_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d906a9_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1a8d906a9_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1a8d906a9_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a8d906a9_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1a8d906a9_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d90a94_BuiltinErrorCallExprModel {
	jule::Ptr<_1a8d98063_FnIns> _field_func = jule::Ptr<_1a8d98063_FnIns>();
	jule::Any _field_err = jule::Any();


	_1a8d90a94_BuiltinErrorCallExprModel(jule::Ptr<_1a8d98063_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1a8d90a94_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a8d90a94_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1a8d90a94_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d90d6e_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a8d90d6e_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a8d90d6e_SizeofExprModel(void) = default;

	inline bool operator==(_1a8d90d6e_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d90d6e_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d914e0_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1a8d914e0_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a8d914e0_AlignofExprModel(void) = default;

	inline bool operator==(_1a8d914e0_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d914e0_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d916cc_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1a8d916cc_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1a8d916cc_RuneExprModel(void) = default;

	inline bool operator==(_1a8d916cc_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1a8d916cc_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d919b8_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1a8d919b8_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a8d919b8_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a8d919b8_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d919b8_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d91d5e_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1a8d91d5e_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1a8d91d5e_BackendEmitExprModel(void) = default;

	inline bool operator==(_1a8d91d5e_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1a8d91d5e_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d9214a_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1a8d9214a_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1a8d9214a_FreeExprModel(void) = default;

	inline bool operator==(_1a8d9214a_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a8d9214a_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a8d92da4_RetType {
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_idents = jule::Slice<jule::Ptr<_1d7b77374_Token>>();


	_1a8d92da4_RetType(jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1a8d92da4_RetType(void) = default;

	inline bool operator==(_1a8d92da4_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1a8d92da4_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d971c7_ParamIns> _1a8d93943_instance(jule::Ptr<_1a8d9357a_Param>);
inline jule::Bool _1a8d93ba7_is_self(_1a8d9357a_Param*);
inline jule::Bool _1a8d93e1b_is_ref(_1a8d9357a_Param*);
struct _1a8d9357a_Param {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1a8d9357a_Param(void) = default;

	inline bool operator==(_1a8d9357a_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a8d9357a_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a8d95318_is_void(_1a8d94db7_Fn*);
inline jule::Bool _1a8d9557c_is_method(_1a8d94db7_Fn*);
inline jule::Bool _1a8d957e1_is_entry_point(_1a8d94db7_Fn*);
inline jule::Bool _1a8d95a55_is_init(_1a8d94db7_Fn*);
inline jule::Bool _1a8d95cb9_is_anon(_1a8d94db7_Fn*);
inline jule::Bool _1a8d9602d_any_var(_1a8d94db7_Fn*);
inline jule::Bool _1a8d962d6_parameters_uses_generics(_1a8d94db7_Fn*);
inline jule::Bool _1a8d96539_result_uses_generics(_1a8d94db7_Fn*);
inline jule::Ptr<_1a8d98063_FnIns> _1a8d9679d_instance_force(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Ptr<_1a8d98063_FnIns> _1a8d96a12_instance(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Ptr<_1a8d98063_FnIns> _1a8d96d20_append_instance(_1a8d94db7_Fn*,jule::Ptr<_1a8d98063_FnIns>&);
struct _1a8d94db7_Fn {
	jule::Ptr<_1a9d0a03a_Sema> _field_sema = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>();
	jule::Ptr<_1a8d92da4_RetType> _field_result = jule::Ptr<_1a8d92da4_RetType>();
	jule::Slice<jule::Ptr<_1a8d9357a_Param>> _field_params = jule::Slice<jule::Ptr<_1a8d9357a_Param>>();
	jule::Ptr<_1a8d82b41_Struct> _field_owner = jule::Ptr<_1a8d82b41_Struct>();
	jule::Slice<jule::Ptr<_1a8d98063_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1a8d98063_FnIns>>();


	_1a8d94db7_Fn(jule::Ptr<_1a9d0a03a_Sema> __param_sema, jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> __param_generics, jule::Ptr<_1a8d92da4_RetType> __param_result, jule::Slice<jule::Ptr<_1a8d9357a_Param>> __param_params, jule::Ptr<_1a8d82b41_Struct> __param_owner, jule::Slice<jule::Ptr<_1a8d98063_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_1a8d94db7_Fn(void) = default;

	inline bool operator==(_1a8d94db7_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1a8d94db7_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8d975a1_to_str(_1a8d971c7_ParamIns*);
struct _1a8d971c7_ParamIns {
	jule::Ptr<_1a8d9357a_Param> _field_decl = jule::Ptr<_1a8d9357a_Param>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a8d971c7_ParamIns(jule::Ptr<_1a8d9357a_Param> __param_decl, jule::Ptr<_1a9d9ae66_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a8d971c7_ParamIns(void) = default;

	inline bool operator==(_1a8d971c7_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a8d971c7_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8d983c6_to_str(_1a8d98063_FnIns*);
inline jule::Bool _1a8d986d4_equals(jule::Ptr<_1a8d98063_FnIns>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _1a8d98a7a_types(_1a8d98063_FnIns*);
inline jule::Bool _1a8d98cde_is_builtin(_1a8d98063_FnIns*);
inline jule::Bool _1a8d99053_is_anon(_1a8d98063_FnIns*);
inline jule::Bool _1a8d99361_same(_1a8d98063_FnIns*,jule::Ptr<_1a8d98063_FnIns>);
inline jule::Str _1a8d9966e_get_kind_str(_1a8d98063_FnIns*,jule::Bool);
struct _1a8d98063_FnIns {
	jule::Ptr<_1a8d857c0_StructIns> _field_owner = jule::Ptr<_1a8d857c0_StructIns>();
	jule::Ptr<_1a8d94db7_Fn> _field_decl = jule::Ptr<_1a8d94db7_Fn>();
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>();
	jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_result = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Ptr<_1a8d9b121_ReferenceStack> _field_references = jule::Ptr<_1a8d9b121_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns> __param_owner, jule::Ptr<_1a8d94db7_Fn> __param_decl, jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>> __param_params, jule::Ptr<_1a9d9ae66_TypeKind> __param_result, jule::Ptr<_1a9cc76bc_Scope> __param_scope, jule::Ptr<_1a8d9b121_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_1a8d98063_FnIns(void) = default;

	inline bool operator==(_1a8d98063_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1a8d98063_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8d9b121_ReferenceStack> static__1a8d9b3a7_new(void);
inline jule::I32 _1a8d9b73c_len(_1a8d9b121_ReferenceStack*);
inline jule::Any _1a8d9ba4a_at(_1a8d9b121_ReferenceStack*,jule::I32);
inline void _1a8d9bcc0_push(_1a8d9b121_ReferenceStack*,jule::Any);
inline jule::Bool _1a8d9c0cd_exist_0(_1a8d9b121_ReferenceStack*,jule::Ptr<_1a9d2553e_Var>);
inline jule::Bool _1a8d9c0cd_exist_1(_1a8d9b121_ReferenceStack*,jule::Ptr<_1a8d98063_FnIns>);
struct _1a8d9b121_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1a8d9b121_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1a8d9b121_ReferenceStack(void) = default;

	inline bool operator==(_1a8d9b121_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1a8d9b121_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1a8d9c485_Pass {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_text = jule::Str();


	_1a8d9c485_Pass(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1a8d9c485_Pass(void) = default;

	inline bool operator==(_1a8d9c485_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1a8d9c485_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a8da1038_SymbolBuilder> _1a8da15ee_get_root(jule::Ptr<_1a8da1038_SymbolBuilder>);
inline void _1a8da19b7_push_err(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b77374_Token>&,jule::Str,jule::Slice<jule::Any>);
inline void _1a8da1d80_push_err_text(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b77374_Token>&,jule::Str,jule::Slice<jule::Any>);
inline void _1a8da219e_push_suggestion(_1a8da1038_SymbolBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a8da259a_check_cpp_use_decl_path(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da28a8_build_cpp_header_import(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da2ba5_build_std_import(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da2eb3_build_ident_import(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da32c1_build_import(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Bool _1a8da3623_check_duplicate_use_decl(_1a8da1038_SymbolBuilder*,jule::Ptr<_1a9d02351_ImportInfo>&);
inline void _1a8da3931_impl_import_selections(_1a8da1038_SymbolBuilder*,jule::Ptr<_1a9d02351_ImportInfo>&,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Str _1a8da3c3e_get_as_link_path(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Str);
inline void _1a8da4107_push_cycle_error(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1a8da1038_SymbolBuilder>&,jule::Str,jule::Str&);
inline void _1a8da44c0_push_cross_cycle_error(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1a8da1038_SymbolBuilder>&,jule::Ptr<_1a9d02351_ImportInfo>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1a8da4877_check_import_cycles(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1a9d02351_ImportInfo>,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline void _1a8da4c84_check_package_accessibility(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7b8ee80_UseDecl>&,jule::Str&,jule::Str&);
inline jule::Bool _1a8da512a_import_package(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1a9d02351_ImportInfo>&,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da5438_import_use_decl(jule::Ptr<_1a8da1038_SymbolBuilder>,jule::Ptr<_1d7b8ee80_UseDecl>&);
inline void _1a8da5614_import_use_decls(jule::Ptr<_1a8da1038_SymbolBuilder>);
inline void _1a8da5889_append_node(_1a8da1038_SymbolBuilder*,_1d7b5c315_Node&);
inline void _1a8da5a65_append_nodes(_1a8da1038_SymbolBuilder*);
inline void _1a8da5cda_push_directive_pass(_1a8da1038_SymbolBuilder*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a8da5eb6_append_top_directives(_1a8da1038_SymbolBuilder*);
inline void _1a8da6192_build(jule::Ptr<_1a8da1038_SymbolBuilder>);
struct _1a8da1038_SymbolBuilder {
	jule::Ptr<_1a8da1038_SymbolBuilder> _field_owner = jule::Ptr<_1a8da1038_SymbolBuilder>();
	jule::Trait<_1a9ceeedb_Importer> _field_importer = jule::Trait<_1a9ceeedb_Importer>();
	jule::Slice<_1d77ca48e_Log> _field_errors = jule::Slice<_1d77ca48e_Log>();
	jule::Ptr<_1d7a43eaa_Ast> _field_ast = jule::Ptr<_1d7a43eaa_Ast>();
	jule::Ptr<_1a9d6baa2_SymbolTable> _field_table = jule::Ptr<_1a9d6baa2_SymbolTable>();


	_1a8da1038_SymbolBuilder(jule::Ptr<_1a8da1038_SymbolBuilder> __param_owner, jule::Trait<_1a9ceeedb_Importer> __param_importer, jule::Slice<_1d77ca48e_Log> __param_errors, jule::Ptr<_1d7a43eaa_Ast> __param_ast, jule::Ptr<_1a9d6baa2_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_1a8da1038_SymbolBuilder(void) = default;

	inline bool operator==(_1a8da1038_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1a8da1038_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8e06a61_to_str(_1a8ea7a57_Trait*);
inline jule::Bool _1a8e0859b_equals(jule::Ptr<_1a8ea7a57_Trait>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a8e31c67_is_builtin(_1a8ea7a57_Trait*);
inline jule::Ptr<_1a8d94db7_Fn> _1a8e8a71b_find_method(_1a8ea7a57_Trait*,jule::Str);
struct _1a8ea7a57_Trait {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>();
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1a8d82b41_Struct>>();


	_1a8ea7a57_Trait(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_1a8d94db7_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a8d82b41_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1a8ea7a57_Trait(void) = default;

	inline bool operator==(_1a8ea7a57_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1a8ea7a57_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a90ce552_auto_expr(_1a93b2c75_EnumItem*);
struct _1a93b2c75_EnumItem {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a9d72ca6_Value> _field_value = jule::Ptr<_1a9d72ca6_Value>();


	_1a93b2c75_EnumItem(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a9d72ca6_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1a93b2c75_EnumItem(void) = default;

	inline bool operator==(_1a93b2c75_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1a93b2c75_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a914022d_to_str(_1a943b309_Enum*);
inline jule::Bool _1a9140daa_equals(jule::Ptr<_1a943b309_Enum>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Ptr<_1a93b2c75_EnumItem> _1a922ac64_find_item(_1a943b309_Enum*,jule::Str);
struct _1a943b309_Enum {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>>();


	_1a943b309_Enum(jule::Ptr<_1d7b77374_Token> __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1a943b309_Enum(void) = default;

	inline bool operator==(_1a943b309_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1a943b309_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9239723_is_trait_impl(_1a922a34b_Impl*);
inline jule::Bool _1a93b753d_is_struct_impl(_1a922a34b_Impl*);
struct _1a922a34b_Impl {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_base = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_dest = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_statics = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();


	_1a922a34b_Impl(jule::Ptr<_1d7a0e75b_TypeDecl> __param_base, jule::Ptr<_1d7a0e75b_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1a8d94db7_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1a922a34b_Impl(void) = default;

	inline bool operator==(_1a922a34b_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1a922a34b_Impl _other) { return !this->operator==(_other); }


};
struct _1a9cc76bc_Scope {
	jule::Ptr<_1a9cc76bc_Scope> _field_parent = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1a9cc76bc_Scope(jule::Ptr<_1a9cc76bc_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1a9cc76bc_Scope(void) = default;

	inline bool operator==(_1a9cc76bc_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1a9cc76bc_Scope _other) { return !this->operator==(_other); }


};
struct _1a9cce0b9_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();


	_1a9cce0b9_If(jule::Any __param_expr, jule::Ptr<_1a9cc76bc_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1a9cce0b9_If(void) = default;

	inline bool operator==(_1a9cce0b9_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9cce0b9_If _other) { return !this->operator==(_other); }


};
struct _1a9c78b46_Else {
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();


	_1a9c78b46_Else(jule::Ptr<_1a9cc76bc_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a9c78b46_Else(void) = default;

	inline bool operator==(_1a9c78b46_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9c78b46_Else _other) { return !this->operator==(_other); }


};
struct _1a9c78d33_Conditional {
	jule::Slice<jule::Ptr<_1a9cce0b9_If>> _field_elifs = jule::Slice<jule::Ptr<_1a9cce0b9_If>>();
	jule::Ptr<_1a9c78b46_Else> _field_default = jule::Ptr<_1a9c78b46_Else>();


	_1a9c78d33_Conditional(jule::Slice<jule::Ptr<_1a9cce0b9_If>> __param_elifs, jule::Ptr<_1a9c78b46_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1a9c78d33_Conditional(void) = default;

	inline bool operator==(_1a9c78d33_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a9c78d33_Conditional _other) { return !this->operator==(_other); }


};
struct _1a9c89959_InfIter {
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();


	_1a9c89959_InfIter(jule::Ptr<_1a9cc76bc_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1a9c89959_InfIter(void) = default;

	inline bool operator==(_1a9c89959_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9c89959_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9cb629e_is_while_next(_1a9c89b46_WhileIter*);
struct _1a9c89b46_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();


	_1a9c89b46_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1a9cc76bc_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1a9c89b46_WhileIter(void) = default;

	inline bool operator==(_1a9c89b46_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a9c89b46_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a9c89d33_RangeIter {
	jule::Ptr<_1a9d71c2d_Data> _field_expr = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Ptr<_1a9d2553e_Var> _field_key_a = jule::Ptr<_1a9d2553e_Var>();
	jule::Ptr<_1a9d2553e_Var> _field_key_b = jule::Ptr<_1a9d2553e_Var>();


	_1a9c89d33_RangeIter(jule::Ptr<_1a9d71c2d_Data> __param_expr, jule::Ptr<_1a9cc76bc_Scope> __param_scope, jule::Ptr<_1a9d2553e_Var> __param_key_a, jule::Ptr<_1a9d2553e_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1a9c89d33_RangeIter(void) = default;

	inline bool operator==(_1a9c89d33_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1a9c89d33_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a9cb79dc_ContSt {
	jule::U32 _field_it = jule::U32();


	_1a9cb79dc_ContSt(jule::U32 __param_it): _field_it(__param_it) {}

	

	_1a9cb79dc_ContSt(void) = default;

	inline bool operator==(_1a9cb79dc_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1a9cb79dc_ContSt _other) { return !this->operator==(_other); }


};
struct _1a9cb7bc9_BreakSt {
	jule::U32 _field_it = jule::U32();
	jule::U32 _field_mtch = jule::U32();


	_1a9cb7bc9_BreakSt(jule::U32 __param_it, jule::U32 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1a9cb7bc9_BreakSt(void) = default;

	inline bool operator==(_1a9cb7bc9_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1a9cb7bc9_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a9cda405_Label {
	jule::Str _field_ident = jule::Str();


	_1a9cda405_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a9cda405_Label(void) = default;

	inline bool operator==(_1a9cda405_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a9cda405_Label _other) { return !this->operator==(_other); }


};
struct _1a9cda5e2_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1a9cda5e2_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1a9cda5e2_GotoSt(void) = default;

	inline bool operator==(_1a9cda5e2_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1a9cda5e2_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a9cda7ce_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1a9cda7ce_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1a9cda7ce_Postfix(void) = default;

	inline bool operator==(_1a9cda7ce_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a9cda7ce_Postfix _other) { return !this->operator==(_other); }


};
struct _1a9cda9bb_Assign {
	jule::Ptr<_1a8d8742b_OperandExprModel> _field_l = jule::Ptr<_1a8d8742b_OperandExprModel>();
	jule::Ptr<_1a8d8742b_OperandExprModel> _field_r = jule::Ptr<_1a8d8742b_OperandExprModel>();
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();


	_1a9cda9bb_Assign(jule::Ptr<_1a8d8742b_OperandExprModel> __param_l, jule::Ptr<_1a8d8742b_OperandExprModel> __param_r, jule::Ptr<_1d7b77374_Token> __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a9cda9bb_Assign(void) = default;

	inline bool operator==(_1a9cda9bb_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a9cda9bb_Assign _other) { return !this->operator==(_other); }


};
struct _1a9cdaba8_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1a9cdaba8_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1a9cdaba8_MultiAssign(void) = default;

	inline bool operator==(_1a9cdaba8_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1a9cdaba8_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9cb7db6_is_generic_type_match(_1a9cdad95_Match*);
struct _1a9cdad95_Match {
	jule::Ptr<_1a9d71c2d_Data> _field_expr = jule::Ptr<_1a9d71c2d_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1a9cdb2b3_Case>> _field_cases = jule::Slice<jule::Ptr<_1a9cdb2b3_Case>>();
	jule::Ptr<_1a9cdb2b3_Case> _field_default = jule::Ptr<_1a9cdb2b3_Case>();


	_1a9cdad95_Match(jule::Ptr<_1a9d71c2d_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1a9cdb2b3_Case>> __param_cases, jule::Ptr<_1a9cdb2b3_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1a9cdad95_Match(void) = default;

	inline bool operator==(_1a9cdad95_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1a9cdad95_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9cb8867_is_default(_1a9cdb2b3_Case*);
struct _1a9cdb2b3_Case {
	jule::Ptr<_1a9cdad95_Match> _field_owner = jule::Ptr<_1a9cdad95_Match>();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a9d71c2d_Data>>();
	jule::Ptr<_1a9cdb2b3_Case> _field_next = jule::Ptr<_1a9cdb2b3_Case>();


	_1a9cdb2b3_Case(jule::Ptr<_1a9cdad95_Match> __param_owner, jule::Ptr<_1a9cc76bc_Scope> __param_scope, jule::Slice<jule::Ptr<_1a9d71c2d_Data>> __param_exprs, jule::Ptr<_1a9cdb2b3_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1a9cdb2b3_Case(void) = default;

	inline bool operator==(_1a9cdb2b3_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1a9cdb2b3_Case _other) { return !this->operator==(_other); }


};
struct _1a9cdb4a0_FallSt {
	jule::U32 _field_dest_case = jule::U32();


	_1a9cdb4a0_FallSt(jule::U32 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1a9cdb4a0_FallSt(void) = default;

	inline bool operator==(_1a9cdb4a0_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1a9cdb4a0_FallSt _other) { return !this->operator==(_other); }


};
struct _1a9cdb68c_RetSt {
	jule::Ptr<_1a8d98063_FnIns> _field_func = jule::Ptr<_1a8d98063_FnIns>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_vars = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();
	jule::Any _field_expr = jule::Any();


	_1a9cdb68c_RetSt(jule::Ptr<_1a8d98063_FnIns> __param_func, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1a9cdb68c_RetSt(void) = default;

	inline bool operator==(_1a9cdb68c_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a9cdb68c_RetSt _other) { return !this->operator==(_other); }


};
struct _1a9cdb879_ScopeLabel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a9cda405_Label> _field_label = jule::Ptr<_1a9cda405_Label>();
	jule::I32 _field_pos = jule::I32();
	jule::Ptr<_1a9cdbc53_ScopeChecker> _field_scope = jule::Ptr<_1a9cdbc53_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1a9cdb879_ScopeLabel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Ptr<_1a9cda405_Label> __param_label, jule::I32 __param_pos, jule::Ptr<_1a9cdbc53_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1a9cdb879_ScopeLabel(void) = default;

	inline bool operator==(_1a9cdb879_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a9cdb879_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1a9cdba66_ScopeGoto {
	jule::Ptr<_1d7b8c620_GotoSt> _field_gt = jule::Ptr<_1d7b8c620_GotoSt>();
	jule::Ptr<_1a9cdbc53_ScopeChecker> _field_scope = jule::Ptr<_1a9cdbc53_ScopeChecker>();
	jule::I32 _field_pos = jule::I32();


	_1a9cdba66_ScopeGoto(jule::Ptr<_1d7b8c620_GotoSt> __param_gt, jule::Ptr<_1a9cdbc53_ScopeChecker> __param_scope, jule::I32 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1a9cdba66_ScopeGoto(void) = default;

	inline bool operator==(_1a9cdba66_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a9cdba66_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9cc9559_find_package(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9cba605_select_package(_1a9cdbc53_ScopeChecker*,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
inline jule::Ptr<_1a9d2553e_Var> _1a9ca71b3_find_var(_1a9cdbc53_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9cdc061_find_type_alias(_1a9cdbc53_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9cdc418_find_struct(_1a9cdbc53_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9cdc7c0_find_fn(_1a9cdbc53_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9cdcacd_find_trait(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9cdcddb_find_enum(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Bool _1a9cdd21b_is_unsafe(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Bool _1a9cdd480_is_root(_1a9cdbc53_ScopeChecker*);
inline void _1a9cdd65b_stop(_1a9cdbc53_ScopeChecker*);
inline jule::Bool _1a9cdd8c0_stopped(_1a9cdbc53_ScopeChecker*);
inline jule::Bool _1a9cddb34_is_deferred(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9cddd98_get_root(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9cde10c_get_hard_root(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Ptr<_1a9cda405_Label> _1a9cde41a_find_label(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9cde728_find_label_scope(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Str);
inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9cdea36_find_label_all(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Bool _1a9cdeddd_is_duplicated_ident(_1a9cdbc53_ScopeChecker*,jule::U32,jule::Str);
inline void _1a9ce0163_check_var_decl(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d489_VarDecl>);
inline void _1a9ce03d8_check_type_alias_decl(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e8b9_TypeAliasDecl>);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce064c_get_child(_1a9cdbc53_ScopeChecker*);
inline void _1a9ce0a15_check_child_ssc(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cdc3_ScopeTree>&,jule::Ptr<_1a9cc76bc_Scope>&,jule::Ptr<_1a9cdbc53_ScopeChecker>&);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce0dbc_check_child_sc(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cdc3_ScopeTree>&,jule::Ptr<_1a9cdbc53_ScopeChecker>&);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce11ca_check_child(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cdc3_ScopeTree>&);
inline void _1a9ce1450_check_anon_scope(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cdc3_ScopeTree>);
inline void _1a9ce176e_process_error_call(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>&,jule::Ptr<_1d7b77374_Token>);
inline void _1a9ce19e4_check_expr(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b09a43_Expr>);
inline void _1a9ce1c69_check_co_expr(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b89e03_CoExpr>);
inline jule::Ptr<_1a9cce0b9_If> _1a9ce2077_check_if(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e303_If>);
inline jule::Ptr<_1a9c78b46_Else> _1a9ce2385_check_else(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e4e0_Else>);
inline void _1a9ce260a_check_conditional(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e6cc_Conditional>);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce2a5b_check_iter_scope_sc(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::U32,jule::Ptr<_1d7b8cdc3_ScopeTree>,jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce2e13_check_iter_scope(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::U32,jule::Ptr<_1d7b8cdc3_ScopeTree>&);
inline void _1a9ce3188_check_inf_iter(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d863_Iter>&);
inline void _1a9ce340d_check_while_iter(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d863_Iter>&);
inline void _1a9ce3683_check_range_iter(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d863_Iter>&);
inline void _1a9ce3908_check_iter(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d863_Iter>);
inline jule::Bool _1a9ce3c16_check_valid_cont_label(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::U32);
inline jule::Bool _1a9ce4068_check_valid_break_label(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::U32);
inline jule::Ptr<_1a9cb79dc_ContSt> _1a9ce4365_check_cont_valid_scope(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e116_ContSt>);
inline void _1a9ce45da_check_cont(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8e116_ContSt>);
inline void _1a9ce4860_check_label(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8c433_LabelSt>);
inline void _1a9ce4ad5_push_goto(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8c620_GotoSt>);
inline void _1a9ce4d5a_check_postfix(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cbd6_AssignSt>);
inline jule::Bool _1a9ce5168_is_new_assign_ident(_1a9cdbc53_ScopeChecker*,jule::Str);
inline jule::Bool _1a9ce560d_check_structure_assign_op(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a8d857c0_StructIns>&,jule::Ptr<_1d7b8cbd6_AssignSt>&,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9ce5872_check_single_assign(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cbd6_AssignSt>&);
inline void _1a9ce5de4___process_end_part_of_multi_assign(_1a9cdbc53_ScopeChecker*,jule::Ptr<_1a9cdaba8_MultiAssign>,jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Ptr<_1d7b8c9e9_AssignLeft>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1a9d71c2d_Data>);
inline void _1a9ce6136_check_ret_multi_assign(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cbd6_AssignSt>&);
inline void _1a9ce63ab_check_multi_assign(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cbd6_AssignSt>&);
inline void _1a9ce6631_check_assign_st(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cbd6_AssignSt>);
inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce69d8_check_case_scope(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a9cdb2b3_Case>&,jule::Ptr<_1d7b8cdc3_ScopeTree>&);
inline jule::Ptr<_1a9cdb2b3_Case> _1a9ce6ed3_check_case(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a9cdad95_Match>,jule::I32,jule::Ptr<_1d7b8eaa6_Case>,jule::Ptr<_1a9d71c2d_Data>);
inline void _1a9ce739b_check_cases(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8ec93_MatchCase>&,jule::Ptr<_1a9cdad95_Match>,jule::Ptr<_1a9d71c2d_Data>);
inline jule::Ptr<_1a9cdb2b3_Case> _1a9ce7753_check_default(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a9cdad95_Match>,jule::Ptr<_1d7b8e4e0_Else>);
inline void _1a9ce79c8_check_comptime_panic(_1a9cdbc53_ScopeChecker*,jule::Ptr<_1a9cc76bc_Scope>&);
inline void _1a9ce7ce7_push_type_match(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1a9cdad95_Match>,jule::Ptr<_1d7b8ec93_MatchCase>&);
inline void _1a9ce806c_check_type_match(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8ec93_MatchCase>&);
inline void _1a9ce82e2_check_common_match(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8ec93_MatchCase>&);
inline void _1a9ce8567_check_match(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8ec93_MatchCase>);
inline void _1a9ce87dc_check_fall(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8c80c_FallSt>);
inline jule::Ptr<_1a9cb7bc9_BreakSt> _1a9ce8aea_check_break_with_label(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8de29_BreakSt>);
inline jule::Ptr<_1a9cb7bc9_BreakSt> _1a9ce8e08_check_plain_break(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8de29_BreakSt>);
inline void _1a9ce917d_check_break(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8de29_BreakSt>);
inline void _1a9ce9403_check_ret(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8d676_RetSt>);
inline void _1a9ce9678_check_use_expr(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b09c30_UseExpr>);
inline void _1a9ce98ed_check_node(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Any&);
inline void _1a9ce9ac9_check_result(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline void _1a9ce9ca5_check_tree(jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline void _1a9cea0c4_check_goto(_1a9cdbc53_ScopeChecker*,jule::Ptr<_1a9cdba66_ScopeGoto>&,jule::Ptr<_1a9cdb879_ScopeLabel>&);
inline void _1a9cea2a0_check_gotos(_1a9cdbc53_ScopeChecker*);
inline void _1a9cea47b_check_labels(_1a9cdbc53_ScopeChecker*);
inline void _1a9cea657_check_vars(_1a9cdbc53_ScopeChecker*);
inline void _1a9cea833_check_aliases(_1a9cdbc53_ScopeChecker*);
inline void _1a9ceab52_check(jule::Ptr<_1a9cdbc53_ScopeChecker>,jule::Ptr<_1d7b8cdc3_ScopeTree>&,jule::Ptr<_1a9cc76bc_Scope>&);
inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9ceadb6_new_child_checker(jule::Ptr<_1a9cdbc53_ScopeChecker>);
struct _1a9cdbc53_ScopeChecker {
	jule::Ptr<_1d7b77374_Token> _field_called_from = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Ptr<_1a8d98063_FnIns> _field_owner = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a9cdbc53_ScopeChecker> _field_parent = jule::Ptr<_1a9cdbc53_ScopeChecker>();
	jule::I32 _field_child_index = jule::I32();
	jule::Ptr<_1a9d6baa2_SymbolTable> _field_table = jule::Ptr<_1a9d6baa2_SymbolTable>();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_tree = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Ptr<_1a8d98063_FnIns> _field_result = jule::Ptr<_1a8d98063_FnIns>();
	jule::U32 _field_it = jule::U32();
	jule::U32 _field_cse = jule::U32();
	jule::Ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>>();
	jule::I32 _field_i = jule::I32();


	_1a9cdbc53_ScopeChecker(jule::Ptr<_1d7b77374_Token> __param_called_from, jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Ptr<_1a8d98063_FnIns> __param_owner, jule::Ptr<_1a9cdbc53_ScopeChecker> __param_parent, jule::I32 __param_child_index, jule::Ptr<_1a9d6baa2_SymbolTable> __param_table, jule::Ptr<_1a9cc76bc_Scope> __param_scope, jule::Ptr<_1d7b8cdc3_ScopeTree> __param_tree, jule::Ptr<_1a8d98063_FnIns> __param_result, jule::U32 __param_it, jule::U32 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>> __param_gotos, jule::I32 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_1a9cdbc53_ScopeChecker(void) = default;

	inline bool operator==(_1a9cdbc53_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a9cdbc53_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a9cebe61_check_cdef(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cec1d6_check_typedef(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cec45b_check_derive(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cec6d1_check_namespace(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cec956_check_deprecated(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cecbcb_check_test(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9cece51_check_directive(_1a9ceba21_DirectiveChecker*,jule::Ptr<_1d7a4352b_Directive>&);
inline void _1a9ced12c_check(_1a9ceba21_DirectiveChecker*);
struct _1a9ceba21_DirectiveChecker {
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1d7a4352b_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1d7a4352b_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1a9ceba21_DirectiveChecker(jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_1d7a4352b_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1a9ceba21_DirectiveChecker(void) = default;

	inline bool operator==(_1a9ceba21_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a9ceba21_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0285c_find_package(_1a9d02351_ImportInfo*,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d02b6a_select_package(_1a9d02351_ImportInfo*,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
inline jule::Ptr<_1a9d2553e_Var> _1a9d03022_find_var(_1a9d02351_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d033c9_find_type_alias(_1a9d02351_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9d03781_find_struct(_1a9d02351_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9d03b38_find_fn(_1a9d02351_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d03e46_find_trait(_1a9d02351_ImportInfo*,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9d04254_find_enum(_1a9d02351_ImportInfo*,jule::Str);
inline jule::Bool _1a9d04672_is_lookupable(_1a9d02351_ImportInfo*,jule::Str);
inline jule::Bool _1a9d04980_exist_ident(_1a9d02351_ImportInfo*,jule::Str);
inline jule::Bool _1a9d04c38_is_accessible_via_selection(_1a9d02351_ImportInfo*);
struct _1a9d02351_ImportInfo {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _field_selected = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Ptr<_1a9d05013_Package> _field_package = jule::Ptr<_1a9d05013_Package>();
	jule::I32 _field_mod_id = jule::I32();


	_1a9d02351_ImportInfo(jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<jule::Ptr<_1d7b77374_Token>> __param_selected, jule::Ptr<_1a9d05013_Package> __param_package, jule::I32 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1a9d02351_ImportInfo(void) = default;

	inline bool operator==(_1a9d02351_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1a9d02351_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d054ca_find_package(_1a9d05013_Package*,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d057d8_select_package(_1a9d05013_Package*,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
inline jule::Ptr<_1a9d2553e_Var> _1a9d05b90_find_var(_1a9d05013_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d06047_find_type_alias(_1a9d05013_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9d063ee_find_struct(_1a9d05013_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9d067a6_find_fn(_1a9d05013_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d06ab4_find_trait(_1a9d05013_Package*,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9d06dc2_find_enum(_1a9d05013_Package*,jule::Str);
struct _1a9d05013_Package {
	jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>();


	_1a9d05013_Package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1a9d05013_Package(void) = default;

	inline bool operator==(_1a9d05013_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1a9d05013_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0a546_find_package(_1a9d0a03a_Sema*,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0a854_select_package(_1a9d0a03a_Sema*,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
inline jule::Ptr<_1a9d2553e_Var> _1a9d0ac0b_find_var(_1a9d0a03a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d0b0b3_find_type_alias(_1a9d0a03a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9d0b46a_find_struct(_1a9d0a03a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9d0b822_find_fn(_1a9d0a03a_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d0bb30_find_trait(_1a9d0a03a_Sema*,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9d0be3d_find_enum(_1a9d0a03a_Sema*,jule::Str);
inline jule::Bool _1a9d0c317_is_flag(_1a9d0a03a_Sema*,jule::I32);
inline void _1a9d0c58c_set_current_file(_1a9d0a03a_Sema*,jule::Ptr<_1a9d6baa2_SymbolTable>);
inline void _1a9d0c955_push_err(_1a9d0a03a_Sema*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d0cc74_push_suggestion(_1a9d0a03a_Sema*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a9d0d12b_is_accessible_define(_1a9d0a03a_Sema*,jule::Bool,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9d0d57c_is_duplicated_ident(_1a9d0a03a_Sema*,jule::U32,jule::Str,jule::Bool);
inline void _1a9d0d89b_check_directives(jule::Ptr<_1a9d0a03a_Sema>,jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Any);
inline jule::Bool _1a9d0dcec_check_generic_quantity(_1a9d0a03a_Sema*,jule::I32,jule::I32,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9d0e1e8_is_duplicated_import_selection(_1a9d0a03a_Sema*,jule::U32,jule::Str);
inline jule::Any _1a9d0e58e_get_import_def(_1a9d0a03a_Sema*,jule::Str,jule::Ptr<_1a9d02351_ImportInfo>&);
inline jule::Bool _1a9d0e8e1_check_import_selections(_1a9d0a03a_Sema*,jule::Ptr<_1a9d02351_ImportInfo>&);
inline jule::Bool _1a9d0ec32_is_use_alias_duplication(_1a9d0a03a_Sema*,jule::Ptr<_1a9d02351_ImportInfo>&);
inline jule::Bool _1a9d1002e_check_import(_1a9d0a03a_Sema*,jule::Ptr<_1a9d02351_ImportInfo>&);
inline void _1a9d1020a_check_imports(_1a9d0a03a_Sema*);
inline void _1a9d103d6_impl_file_impls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d105b2_impl_impls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1078d_check_enums(jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Bool _1a9d10bde_check_type_with_refers(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9ed05_TypeSymbol>&,jule::Trait<_1a9db4325_Lookup>,jule::Ptr<_1a9da98d1_Referencer>);
inline jule::Bool _1a9d11096_check_type(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9ed05_TypeSymbol>&,jule::Trait<_1a9db4325_Lookup>);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d11492_build_type_with_generics(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1d7a0e75b_TypeDecl>&,jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d1178e_build_type(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1d7a0e75b_TypeDecl>&);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d11a9c_select_type(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1d7a0e75b_TypeDecl>&);
inline jule::Ptr<_1a9d7379b_Eval> _1a9d11eed_evalpd(jule::Ptr<_1a9d0a03a_Sema>,jule::Trait<_1a9db4325_Lookup>,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d2553e_Var>);
inline jule::Ptr<_1a9d7379b_Eval> _1a9d123a5_evalp(jule::Ptr<_1a9d0a03a_Sema>,jule::Trait<_1a9db4325_Lookup>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Ptr<_1a9d7379b_Eval> _1a9d126b3_eval(jule::Ptr<_1a9d0a03a_Sema>,jule::Trait<_1a9db4325_Lookup>);
inline jule::Bool _1a9d12bad_check_assign_type(jule::Ptr<_1a9d0a03a_Sema>,jule::Bool,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9d13153_check_type_compatibility(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d1353d_build_non_generic_type_kind(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1d7a0e75b_TypeDecl>&,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>&);
inline void _1a9d137e6_build_fn_non_generic_type_kinds(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Ptr<_1a8d98063_FnIns> _1a9d13b37_get_trait_check_fn_kind(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Bool _1a9d13e34_reload_fn_ins_types(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Bool _1a9d143eb_check_ref_validity_for_init_expr(jule::Ptr<_1a9d0a03a_Sema>,jule::Bool,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1a9d149d4_check_validity_for_init_expr(jule::Ptr<_1a9d0a03a_Sema>,jule::Bool,jule::Bool,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1a9d14d8b_check_type_alias_decl_kind(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9a22e_TypeAlias>&,jule::Trait<_1a9db4325_Lookup>);
inline void _1a9d15199_check_type_alias_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9a22e_TypeAlias>&,jule::Trait<_1a9db4325_Lookup>);
inline void _1a9d15463_check_type_alias_decl_dup(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d9a22e_TypeAlias>&);
inline jule::Bool _1a9d156b6_check_type_alias_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1593b_check_enum_items_dup(_1a9d0a03a_Sema*,jule::Ptr<_1a943b309_Enum>);
inline void _1a9d15bb1_check_enum_items_str(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a943b309_Enum>&);
inline void _1a9d15e36_check_enum_items_int(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a943b309_Enum>&);
inline void _1a9d161ab_check_enum_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a943b309_Enum>&);
inline jule::Bool _1a9d16420_check_enum_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Bool _1a9d1672d_check_decl_generics(_1a9d0a03a_Sema*,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>&);
inline jule::Bool _1a9d16a80_check_fn_decl_params_dup(_1a9d0a03a_Sema*,jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Bool _1a9d16dc1_check_fn_decl_result_dup(_1a9d0a03a_Sema*,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d17135_check_fn_decl_types(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d173ee_check_fn_decl_prototype(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d176a7_check_trait_decl_method(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d17960_check_trait_decl_methods(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8ea7a57_Trait>&);
inline void _1a9d17bc4_check_trait_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8ea7a57_Trait>&);
inline jule::Bool _1a9d17e38_check_trait_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Bool _1a9d18334_check_trait_impl_methods(_1a9d0a03a_Sema*,jule::Ptr<_1a8ea7a57_Trait>&,jule::Ptr<_1a922a34b_Impl>&);
inline jule::Bool _1a9d186ca_impl_to_struct(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&,jule::Ptr<_1a922a34b_Impl>&);
inline void _1a9d18950_impl_trait(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a922a34b_Impl>&);
inline void _1a9d18bc5_impl_struct(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a922a34b_Impl>&);
inline void _1a9d18e4a_impl_impl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a922a34b_Impl>&);
inline void _1a9d19269_check_var_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d2553e_Var>&,jule::Trait<_1a9db4325_Lookup>);
inline void _1a9d194de_check_global_var_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d2553e_Var>&);
inline jule::Bool _1a9d19753_check_global_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Bool _1a9d19b4e_check_struct_trait_impl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&,jule::Ptr<_1a8ea7a57_Trait>&);
inline jule::Bool _1a9d19e4b_check_struct_impls(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Bool _1a9d1a259_check_struct_fields(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Bool _1a9d1a5ab_check_struct_decl_methods(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline void _1a9d1a820_check_struct_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Bool _1a9d1aa84_check_struct_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1ad09_check_fn_decl(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Bool _1a9d1b06d_check_fn_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1b436_push_cycle_error(_1a9d0a03a_Sema*,jule::Ptr<_1a8d82b41_Struct>&,jule::Ptr<_1a8d82b41_Struct>&,jule::Str&);
inline jule::Bool _1a9d1b887_check_cross_cycle(_1a9d0a03a_Sema*,jule::Ptr<_1a8d82b41_Struct>&,jule::Ptr<_1a8d82b41_Struct>&,jule::Str&);
inline jule::Bool _1a9d1bd4e_check_struct_derive_illegal_cycles(_1a9d0a03a_Sema*,jule::Str,jule::Ptr<_1a8d82b41_Struct>&,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d1c16d_check_struct_ins_derive_clone(_1a9d0a03a_Sema*,jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Bool _1a9d1c4ae_check_struct_derive_clone(_1a9d0a03a_Sema*,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Bool _1a9d1c712_check_file_derives(_1a9d0a03a_Sema*);
inline void _1a9d1c8dd_check_package_derives(_1a9d0a03a_Sema*);
inline void _1a9d1cab9_check_package_decls(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1ce2c_check_data_for_type_inference(_1a9d0a03a_Sema*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>&);
inline void _1a9d1d191_check_var(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d2553e_Var>&);
inline void _1a9d1d4b0_check_type_var(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a9d2553e_Var>&,jule::Trait<_1a9db4325_Lookup>);
inline void _1a9d1d68b_check_global_types(jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Ptr<_1a8d98063_FnIns> _1a9d1da43_ready_to_check_fn(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>&,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d1dd62_check_type_method(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>&,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d1e0d7_check_field_defaults(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Ptr<_1a8d98063_FnIns> _1a9d1e538_check_struct_ins_op(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>&,jule::Ptr<_1a8d94db7_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>);
inline void _1a9d1e7ad_check_struct_ins(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>&);
inline void _1a9d1ea33_check_type_struct(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline void _1a9d1ec0e_check_struct_types(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d1eec8_check_struct_ins_operators(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d857c0_StructIns>);
inline void _1a9d20281_check_type_struct_operators(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d82b41_Struct>&);
inline void _1a9d20490_check_struct_types_operators(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d20704_check_rets(_1a9d0a03a_Sema*,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d20a23_check_fn_ins_sc(_1a9d0a03a_Sema*,jule::Ptr<_1a8d98063_FnIns>&,jule::Ptr<_1a9cdbc53_ScopeChecker>&);
inline void _1a9d20d42_check_fn_ins_caller(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d98063_FnIns>&,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d210b7_check_fn_ins(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d2133c_check_type_fn(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d215b2_check_test_fn(_1a9d0a03a_Sema*,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d21837_precheck_type_fn(jule::Ptr<_1a9d0a03a_Sema>,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1a9d21a13_precheck_fn_types(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d21bde_check_fn_types(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d21dba_check_package_types(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d22096_set_file_sema_fields(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d22272_set_sema_fields(jule::Ptr<_1a9d0a03a_Sema>);
inline void _1a9d224e7_check(jule::Ptr<_1a9d0a03a_Sema>,jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&);
struct _1a9d0a03a_Sema {
	jule::Slice<_1d77ca48e_Log> _field_errors = jule::Slice<_1d77ca48e_Log>();
	jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>();
	jule::Ptr<_1a9d6baa2_SymbolTable> _field_file = jule::Ptr<_1a9d6baa2_SymbolTable>();
	jule::I32 _field_flags = 0LL;


	_1a9d0a03a_Sema(jule::Slice<_1d77ca48e_Log> __param_errors, jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>> __param_files, jule::Ptr<_1a9d6baa2_SymbolTable> __param_file, jule::I32 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_1a9d0a03a_Sema(void) = default;

	inline bool operator==(_1a9d0a03a_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a9d0a03a_Sema _other) { return !this->operator==(_other); }


};
inline _1a9d2289e_MissingRetChecker static__1a9d22c67_new(void);
inline jule::Bool _1a9d23042_check_conditional(_1a9d2289e_MissingRetChecker*,jule::Ptr<_1a9c78d33_Conditional>);
inline jule::Bool _1a9d23350_check_match(_1a9d2289e_MissingRetChecker*,jule::Ptr<_1a9cdad95_Match>);
inline jule::Bool _1a9d2365d_check_inf_iter(_1a9d2289e_MissingRetChecker*,jule::Ptr<_1a9c89959_InfIter>);
inline jule::Bool _1a9d2396b_check_scope(_1a9d2289e_MissingRetChecker*,jule::Ptr<_1a9cc76bc_Scope>);
inline jule::Bool _1a9d23c79_check(_1a9d2289e_MissingRetChecker*,jule::Ptr<_1a9cc76bc_Scope>);
struct _1a9d2289e_MissingRetChecker {
	jule::Slice<jule::U32> _field_breaked = jule::Slice<jule::U32>();
	jule::Bool _field_falled = jule::Bool();


	_1a9d2289e_MissingRetChecker(jule::Slice<jule::U32> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_1a9d2289e_MissingRetChecker(void) = default;

	inline bool operator==(_1a9d2289e_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a9d2289e_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a9d24571_IterRelation {
	jule::Ptr<_1a9d2553e_Var> _field_range = jule::Ptr<_1a9d2553e_Var>();


	_1a9d24571_IterRelation(jule::Ptr<_1a9d2553e_Var> __param_range): _field_range(__param_range) {}

	

	_1a9d24571_IterRelation(void) = default;

	inline bool operator==(_1a9d24571_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1a9d24571_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9d258e6_is_initialized(_1a9d2553e_Var*);
inline jule::Bool _1a9d25b5a_is_type_inferred(_1a9d2553e_Var*);
struct _1a9d2553e_Var {
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Ptr<_1a9d72ca6_Value> _field_value = jule::Ptr<_1a9d72ca6_Value>();
	jule::Ptr<_1a8d9b121_ReferenceStack> _field_references = jule::Ptr<_1a8d9b121_ReferenceStack>();
	jule::Slice<jule::Ptr<_1d7a4352b_Directive>> _field_directives = jule::Slice<jule::Ptr<_1d7a4352b_Directive>>();
	jule::Ptr<_1a9d24571_IterRelation> _field_iter_relation = jule::Ptr<_1a9d24571_IterRelation>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_depends = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();


	_1a9d2553e_Var(jule::Ptr<_1a9cc76bc_Scope> __param_scope, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Ptr<_1a9d72ca6_Value> __param_value, jule::Ptr<_1a8d9b121_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1d7a4352b_Directive>> __param_directives, jule::Ptr<_1a9d24571_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1a9d2553e_Var(void) = default;

	inline bool operator==(_1a9d2553e_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1a9d2553e_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a9d266b6_dispose(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2695d_to_str(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d26c9e_logical(jule::Ptr<_1a8d94db7_Fn>&,jule::Str);
inline jule::Bool static__1a9d27046_eq(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d272dd_gt(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d27585_gt_eq(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2782c_lt(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d27ac4_lt_eq(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d27e15_result(jule::Ptr<_1a8d94db7_Fn>&,jule::Str);
inline jule::Bool static__1a9d281ac_shl(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d28454_shr(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d286eb_add(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d28993_sub(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d28c3a_div(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d28ed2_mul(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d29279_mod(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d29521_bit_and(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d297b8_bit_or(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d29a60_bit_xor(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d29da1_unary(jule::Ptr<_1a8d94db7_Fn>&,jule::Str);
inline jule::Bool static__1a9d2a148_neg(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2a3e0_pos(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2a687_bit_not(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2a9c8_assign(jule::Ptr<_1a8d94db7_Fn>&,jule::Str);
inline jule::Bool static__1a9d2ac70_add_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2b017_sub_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2b2ae_div_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2b556_mul_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2b7ed_mod_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2ba95_shl_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2bd3c_shr_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2c0d4_bit_or_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2c37b_bit_and_assign(jule::Ptr<_1a8d94db7_Fn>);
inline jule::Bool static__1a9d2c623_bit_xor_assign(jule::Ptr<_1a8d94db7_Fn>);
struct _1a9d26045_FuncPattern {
	

	_1a9d26045_FuncPattern(void) = default;

	inline bool operator==(_1a9d26045_FuncPattern _other) { return true; }

	inline bool operator!=(_1a9d26045_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1a9d5d148_push_err(_1a9d5cdb2_TypeCompatibilityChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a9d5d3ac_check_trait(_1a9d5cdb2_TypeCompatibilityChecker*);
inline jule::Bool _1a9d5d621_check_ptr(_1a9d5cdb2_TypeCompatibilityChecker*);
inline jule::Bool _1a9d5d885_check_prim(_1a9d5cdb2_TypeCompatibilityChecker*);
inline jule::Bool _1a9d5dae9_check(_1a9d5cdb2_TypeCompatibilityChecker*);
struct _1a9d5cdb2_TypeCompatibilityChecker {
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_dest = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_src = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();


	_1a9d5cdb2_TypeCompatibilityChecker(jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Ptr<_1a9d9ae66_TypeKind> __param_dest, jule::Ptr<_1a9d9ae66_TypeKind> __param_src, jule::Ptr<_1d7b77374_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1a9d5cdb2_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1a9d5cdb2_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a9d5cdb2_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a9d5e59a_push_err(_1a9d5e138_AssignTypeChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a9d5e80e_check_validity(_1a9d5e138_AssignTypeChecker*);
inline jule::Bool _1a9d5ea73_check_const(_1a9d5e138_AssignTypeChecker*);
inline jule::Bool _1a9d5ecd7_is_prim(_1a9d5e138_AssignTypeChecker*);
inline jule::Bool _1a9d6004b_check_compatibility(_1a9d5e138_AssignTypeChecker*);
inline jule::Bool _1a9d602b0_check(_1a9d5e138_AssignTypeChecker*);
struct _1a9d5e138_AssignTypeChecker {
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_dest = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d71c2d_Data> _field_d = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();


	_1a9d5e138_AssignTypeChecker(jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Ptr<_1a9d9ae66_TypeKind> __param_dest, jule::Ptr<_1a9d71c2d_Data> __param_d, jule::Ptr<_1d7b77374_Token> __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1a9d5e138_AssignTypeChecker(void) = default;

	inline bool operator==(_1a9d5e138_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a9d5e138_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1a9d61019_push_generic(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::I32);
inline jule::Bool _1a9d612e4_annotate_prim(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d61602_annotate_slc(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d619a9_check_map_key(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d61cb7_annotate_map(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d620c5_annotate_fn(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d623d3_annotate_ptr(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d626e1_annotate_sptr(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d629ee_annotate_any(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d62d0c_annotate_kind(_1a9d60986_DynamicTypeAnnotation*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9d63071_annotate(_1a9d60986_DynamicTypeAnnotation*);
struct _1a9d60986_DynamicTypeAnnotation {
	jule::Ptr<_1a9d7379b_Eval> _field_e = jule::Ptr<_1a9d7379b_Eval>();
	jule::Ptr<_1a8d98063_FnIns> _field_f = jule::Ptr<_1a8d98063_FnIns>();
	jule::Ptr<_1a8d971c7_ParamIns> _field_p = jule::Ptr<_1a8d971c7_ParamIns>();
	jule::Ptr<_1a9d71c2d_Data> _field_a = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a9d9ae66_TypeKind>* _field_k = nullptr;


	_1a9d60986_DynamicTypeAnnotation(jule::Ptr<_1a9d7379b_Eval> __param_e, jule::Ptr<_1a8d98063_FnIns> __param_f, jule::Ptr<_1a8d971c7_ParamIns> __param_p, jule::Ptr<_1a9d71c2d_Data> __param_a, jule::Ptr<_1d7b77374_Token> __param_error_token, jule::Ptr<_1a9d9ae66_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a9d60986_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a9d60986_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a9d60986_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a9d63c97_push_err_token(_1a9d63747_FnCallArgChecker*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d640b6_push_err(_1a9d63747_FnCallArgChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>> _1a9d6432a_get_params(_1a9d63747_FnCallArgChecker*);
inline jule::Bool _1a9d64638_check_counts(_1a9d63747_FnCallArgChecker*,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>&);
inline jule::Bool _1a9d64a89_check_arg(_1a9d63747_FnCallArgChecker*,jule::Ptr<_1a8d971c7_ParamIns>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>&);
inline jule::Bool _1a9d64e41_push(_1a9d63747_FnCallArgChecker*,jule::Ptr<_1a8d971c7_ParamIns>&,jule::Ptr<_1d7b09a43_Expr>);
inline jule::Bool _1a9d652e8_push_variadic(_1a9d63747_FnCallArgChecker*,jule::Ptr<_1a8d971c7_ParamIns>&,jule::I32);
inline jule::Bool _1a9d65606_check_args(_1a9d63747_FnCallArgChecker*,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>&);
inline jule::Bool _1a9d658ae_check_dynamic_type_annotation(_1a9d63747_FnCallArgChecker*);
inline jule::Bool _1a9d65b12_check(_1a9d63747_FnCallArgChecker*);
struct _1a9d63747_FnCallArgChecker {
	jule::Ptr<_1a9d7379b_Eval> _field_e = jule::Ptr<_1a9d7379b_Eval>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_args = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a8d98063_FnIns> _field_f = jule::Ptr<_1a8d98063_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1a9d63747_FnCallArgChecker(jule::Ptr<_1a9d7379b_Eval> __param_e, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_args, jule::Ptr<_1d7b77374_Token> __param_error_token, jule::Ptr<_1a8d98063_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a9d63747_FnCallArgChecker(void) = default;

	inline bool operator==(_1a9d63747_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a9d63747_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a9d6665c_push_err(_1a9d66151_StructLitChecker*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d6697b_push_suggestion(_1a9d66151_StructLitChecker*,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d66d44_push_match(_1a9d66151_StructLitChecker*,jule::Ptr<_1a8d84e62_FieldIns>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>&);
inline void _1a9d67163_check_pair(_1a9d66151_StructLitChecker*,jule::Ptr<_1d7b8b146_FieldExprPair>&,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>&);
inline jule::Bool _1a9d67471_ready_exprs(_1a9d66151_StructLitChecker*,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>&);
inline void _1a9d676e6_check(_1a9d66151_StructLitChecker*,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>&);
struct _1a9d66151_StructLitChecker {
	jule::Ptr<_1a9d7379b_Eval> _field_e = jule::Ptr<_1a9d7379b_Eval>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();
	jule::Ptr<_1a8d857c0_StructIns> _field_s = jule::Ptr<_1a8d857c0_StructIns>();
	jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>>();


	_1a9d66151_StructLitChecker(jule::Ptr<_1a9d7379b_Eval> __param_e, jule::Ptr<_1d7b77374_Token> __param_error_token, jule::Ptr<_1a8d857c0_StructIns> __param_s, jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a9d66151_StructLitChecker(void) = default;

	inline bool operator==(_1a9d66151_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a9d66151_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d2553e_Var> _1a9d681ca_build_var(_1a9d67c35_RangeChecker*,jule::Ptr<_1d7b8d489_VarDecl>&);
inline void _1a9d683a6_set_size_key(_1a9d67c35_RangeChecker*);
inline void _1a9d687b3_check_range_expr_validity(_1a9d67c35_RangeChecker*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d2553e_Var>&,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline void _1a9d6897d_check_slice(_1a9d67c35_RangeChecker*);
inline void _1a9d68b59_check_array(_1a9d67c35_RangeChecker*);
inline void _1a9d68d35_check_map_key_a(_1a9d67c35_RangeChecker*);
inline void _1a9d69011_check_map_key_b(_1a9d67c35_RangeChecker*);
inline void _1a9d691dc_check_map(_1a9d67c35_RangeChecker*);
inline void _1a9d693b8_check_str(_1a9d67c35_RangeChecker*);
inline jule::Bool _1a9d6962c_check(_1a9d67c35_RangeChecker*);
struct _1a9d67c35_RangeChecker {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _field_sc = jule::Ptr<_1a9cdbc53_ScopeChecker>();
	jule::Ptr<_1d7b8dc3c_RangeKind> _field_rang = jule::Ptr<_1d7b8dc3c_RangeKind>();
	jule::Ptr<_1a9c89d33_RangeIter> _field_kind = jule::Ptr<_1a9c89d33_RangeIter>();
	jule::Ptr<_1a9d71c2d_Data> _field_d = jule::Ptr<_1a9d71c2d_Data>();


	_1a9d67c35_RangeChecker(jule::Ptr<_1a9cdbc53_ScopeChecker> __param_sc, jule::Ptr<_1d7b8dc3c_RangeKind> __param_rang, jule::Ptr<_1a9c89d33_RangeIter> __param_kind, jule::Ptr<_1a9d71c2d_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a9d67c35_RangeChecker(void) = default;

	inline bool operator==(_1a9d67c35_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a9d67c35_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a9d6a375_prepare_types(_1a9d69dbe_RetTypeChecker*);
inline void _1a9d6a5ea_prepare_exprs(_1a9d69dbe_RetTypeChecker*,jule::Ptr<_1d7b09a43_Expr>&);
inline void _1a9d6a7c6_ret_vars(_1a9d69dbe_RetTypeChecker*);
inline void _1a9d6a9a2_check_exprs(_1a9d69dbe_RetTypeChecker*);
inline jule::Bool _1a9d6acb0_check(_1a9d69dbe_RetTypeChecker*,jule::Ptr<_1d7b09a43_Expr>&);
struct _1a9d69dbe_RetTypeChecker {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _field_sc = jule::Ptr<_1a9cdbc53_ScopeChecker>();
	jule::Ptr<_1a8d98063_FnIns> _field_f = jule::Ptr<_1a8d98063_FnIns>();
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>();
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_vars = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_model = jule::Any();


	_1a9d69dbe_RetTypeChecker(jule::Ptr<_1a9cdbc53_ScopeChecker> __param_sc, jule::Ptr<_1a8d98063_FnIns> __param_f, jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1d7b09a43_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_vars, jule::Ptr<_1d7b77374_Token> __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a9d69dbe_RetTypeChecker(void) = default;

	inline bool operator==(_1a9d69dbe_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a9d69dbe_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d6c0ad_find_package(_1a9d6baa2_SymbolTable*,jule::Str);
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d6c3bb_select_package(_1a9d6baa2_SymbolTable*,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
inline jule::Ptr<_1a9d2553e_Var> _1a9d6c773_find_var(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d6cb2a_find_type_alias(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9d6ced2_find_struct(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9d6d389_find_fn(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d6d697_find_trait(_1a9d6baa2_SymbolTable*,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9d6d9a5_find_enum(_1a9d6baa2_SymbolTable*,jule::Str);
inline jule::Ptr<_1a9d2553e_Var> _1a9d6e027___find_var(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d6e478___find_type_alias(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Any _1a9d6e830_def_by_ident(_1a9d6baa2_SymbolTable*,jule::Str,jule::Bool);
inline jule::Bool _1a9d6ec81_is_duplicated_ident(_1a9d6baa2_SymbolTable*,jule::U32,jule::Str,jule::Bool);
struct _1a9d6baa2_SymbolTable {
	jule::Ptr<_1d7b7c764_File> _field_file = jule::Ptr<_1d7b7c764_File>();
	jule::Slice<_1a8d9c485_Pass> _field_passes = jule::Slice<_1a8d9c485_Pass>();
	jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _field_vars = jule::Slice<jule::Ptr<_1a9d2553e_Var>>();
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>();
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a8d82b41_Struct>>();
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>();
	jule::Slice<jule::Ptr<_1a8ea7a57_Trait>> _field_traits = jule::Slice<jule::Ptr<_1a8ea7a57_Trait>>();
	jule::Slice<jule::Ptr<_1a943b309_Enum>> _field_enums = jule::Slice<jule::Ptr<_1a943b309_Enum>>();
	jule::Slice<jule::Ptr<_1a922a34b_Impl>> _field_impls = jule::Slice<jule::Ptr<_1a922a34b_Impl>>();


	_1a9d6baa2_SymbolTable(jule::Ptr<_1d7b7c764_File> __param_file, jule::Slice<_1a8d9c485_Pass> __param_passes, jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1a9d2553e_Var>> __param_vars, jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1a8d82b41_Struct>> __param_structs, jule::Slice<jule::Ptr<_1a8d94db7_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1a8ea7a57_Trait>> __param_traits, jule::Slice<jule::Ptr<_1a943b309_Enum>> __param_enums, jule::Slice<jule::Ptr<_1a922a34b_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a9d6baa2_SymbolTable(void) = default;

	inline bool operator==(_1a9d6baa2_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a9d6baa2_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9d72118_is_nil(_1a9d71c2d_Data*);
inline jule::Bool _1a9d7237c_is_void(_1a9d71c2d_Data*);
inline jule::Bool _1a9d725e1_is_const(_1a9d71c2d_Data*);
inline jule::Bool _1a9d728ee_good_operand(_1a9d71c2d_Data*,jule::Ptr<_1a9d71c2d_Data>&);
struct _1a9d71c2d_Data {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_cast_kind = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1a9c46e77_Const> _field_constant = jule::Ptr<_1a9c46e77_Const>();


	_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind> __param_kind, jule::Ptr<_1a9d9ae66_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1a9c46e77_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a9d71c2d_Data(void) = default;

	inline bool operator==(_1a9d71c2d_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a9d71c2d_Data _other) { return !this->operator==(_other); }


};
struct _1a9d72ca6_Value {
	jule::Ptr<_1d7b09a43_Expr> _field_expr = jule::Ptr<_1d7b09a43_Expr>();
	jule::Ptr<_1a9d71c2d_Data> _field_data = jule::Ptr<_1a9d71c2d_Data>();


	_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr> __param_expr, jule::Ptr<_1a9d71c2d_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a9d72ca6_Value(void) = default;

	inline bool operator==(_1a9d72ca6_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a9d72ca6_Value _other) { return !this->operator==(_other); }


};
inline void _1a9d73c74_push_err(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d74093_push_suggestion(_1a9d7379b_Eval*,jule::Str,jule::Slice<jule::Any>);
inline void _1a9d7426e_allow_builtin(_1a9d7379b_Eval*);
inline void _1a9d7444a_disallow_builtin(_1a9d7379b_Eval*);
inline jule::Bool _1a9d746ae_is_unsafe(_1a9d7379b_Eval*);
inline jule::Bool _1a9d74923_is_global(_1a9d7379b_Eval*);
inline jule::Bool _1a9d74c31_apply_numeric_prefix(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d74e95_lit_nil(_1a9d7379b_Eval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d752a3_lit_str(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d755b1_lit_bool(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d758be_lit_rune(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d75bcc_lit_float(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d75eda_lit_int(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d762e8_lit_num(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d76606_eval_lit(_1a9d7379b_Eval*,jule::Ptr<_1d7b89a29_LitExpr>);
inline jule::Any _1a9d76914_find_builtins(_1a9d7379b_Eval*,jule::Str);
inline jule::Any _1a9d76cbb_get_def(_1a9d7379b_Eval*,jule::Str,jule::Bool);
inline void _1a9d77041_push_reference(_1a9d7379b_Eval*,jule::Ptr<_1a8d9b121_ReferenceStack>&);
inline void _1a9d772b6_push_reference_to_fn(_1a9d7379b_Eval*,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d7753b_push_reference_to_var(_1a9d7379b_Eval*,jule::Ptr<_1a9d2553e_Var>&);
inline void _1a9d77805_push_reference_to_struct(_1a9d7379b_Eval*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d77b02___eval_enum(_1a9d7379b_Eval*,jule::Ptr<_1a943b309_Enum>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d77ea9_eval_enum(_1a9d7379b_Eval*,jule::Ptr<_1a943b309_Enum>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d782b7___eval_struct(_1a9d7379b_Eval*,jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7866e_eval_struct(_1a9d7379b_Eval*,jule::Ptr<_1a8d857c0_StructIns>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7897c_eval_fn_ins(_1a9d7379b_Eval*,jule::Ptr<_1a8d98063_FnIns>);
inline void _1a9d78c9b_check_deprecated(_1a9d7379b_Eval*,jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d79153_eval_fn(_1a9d7379b_Eval*,jule::Ptr<_1a8d94db7_Fn>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d79560_push_illegal_cycle_error(_1a9d7379b_Eval*,jule::Ptr<_1a9d2553e_Var>&,jule::Ptr<_1a9d2553e_Var>&,jule::Str&);
inline jule::Bool _1a9d79906_check_cross_cycle(_1a9d7379b_Eval*,jule::Ptr<_1a9d2553e_Var>&,jule::Str&);
inline jule::Bool _1a9d79cad_check_illegal_cycles(_1a9d7379b_Eval*,jule::Ptr<_1a9d2553e_Var>&,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a165_eval_var(_1a9d7379b_Eval*,jule::Ptr<_1a9d2553e_Var>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a51c_eval_type_alias(_1a9d7379b_Eval*,jule::Ptr<_1a9d9a22e_TypeAlias>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a8c4_eval_def(_1a9d7379b_Eval*,jule::Any,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7abd2_eval_ident(_1a9d7379b_Eval*,jule::Ptr<_1d7b8a0e0_IdentExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7aee0_eval_unary(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8a2cc_UnaryExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b2ed_eval_variadic(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8a4b9_VariadicExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b60b_eval_unsafe(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b89c16_UnsafeExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b919_eval_arr(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8b8e9_SliceExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7bcc1_eval_exp_slc(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8b8e9_SliceExpr>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7c0ce_eval_slice_expr(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8b8e9_SliceExpr>);
inline void _1a9d7c442_check_integer_indexing_by_data(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d7c7e9_indexing_ptr(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline void _1a9d7cbb2_indexing_arr(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline void _1a9d7d07a_indexing_slc(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline void _1a9d7d443_indexing_map(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline void _1a9d7d80b_indexing_str(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline void _1a9d7dbc4_to_indexing(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline jule::Bool _1a9d7e0c0_push_generics_from_index_data(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7e4aa_eval_ident_decl_from_indexing(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b897e8_IndexingExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d7e7a7_eval_indexing(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b897e8_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1a9d71c2d_Data>> _1a9d7eab5_eval_slicing_exprs(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8c059_SlicingExpr>&);
inline void _1a9d7ed3a_slicing_arr(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d80203_slicing_str(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d80665_check_slicing(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1d7b8c059_SlicingExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d80973_eval_slicing(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8c059_SlicingExpr>);
inline void _1a9d80d3b_cast_ptr(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d81204_cast_struct(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d815bc_cast_ref(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d81985_cast_slc(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d81ca4_cast_str(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d8216c_cast_int(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d82535_cast_num(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d828ed_cast_prim(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d82c1c_cast_constant(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d831b2_eval_cast_by_type_n_data(_1a9d7379b_Eval*,jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d834ae_eval_cast(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8a6a6_CastExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d837bc_eval_ns_selection(_1a9d7379b_Eval*,jule::Ptr<_1d7b8a893_NsSelectionExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d83c62_eval_struct_lit_explicit(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1a8d857c0_StructIns>,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8405e_eval_struct_lit(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8b333_StructLit>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8436c_eval_type(_1a9d7379b_Eval*,jule::Ptr<_1d7a0e75b_TypeDecl>);
inline void _1a9d8468b_call_type_fn(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1a9d84a43_check_fn_call_generics(_1a9d7379b_Eval*,jule::Ptr<_1a8d98063_FnIns>,jule::Ptr<_1d7b8ae59_FnCallExpr>);
inline void _1a9d84d62_call_builtin_fn(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d851c5_check_fn_of_concurrent_call(_1a9d7379b_Eval*,jule::Ptr<_1a8d98063_FnIns>&,jule::Ptr<_1d7b77374_Token>);
inline void _1a9d855c1_process_exceptional_handler(_1a9d7379b_Eval*,jule::Ptr<_1a8d98063_FnIns>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d858ce_call_fn(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d85bdc_eval_fn_call(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8ae59_FnCallExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d86094_eval_enum_static(_1a9d7379b_Eval*,jule::Ptr<_1a943b309_Enum>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8644b_eval_struct_static(_1a9d7379b_Eval*,jule::Ptr<_1a8d857c0_StructIns>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8689c_eval_trait_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1a8ea7a57_Trait>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d86d97_eval_struct_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1a8d857c0_StructIns>,jule::Ptr<_1d7b8aa80_SubIdentExpr>,jule::Bool);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8724e_eval_slice_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d87606_eval_array_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d879ad_eval_map_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d87d65_eval_str_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d88173_eval_int_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d88481_eval_uint_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8878e_eval_i8_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d88a9c_eval_i16_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d88daa_eval_i32_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d891b8_eval_i64_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d894c6_eval_u8_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d897d4_eval_u16_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d89ae2_eval_u32_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d89e00_eval_u64_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a20d_eval_f32_type_tatic(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a51b_eval_f64_type_static(_1a9d7379b_Eval*,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a8c3_eval_prim_static(_1a9d7379b_Eval*,jule::Str,jule::Ptr<_1d7b77374_Token>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8ac7a_eval_type_static(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b8aa80_SubIdentExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b132_eval_obj_sub_ident(_1a9d7379b_Eval*,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b8aa80_SubIdentExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b440_eval_sub_ident(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8aa80_SubIdentExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b74d_eval_tuple(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8960b_TupleExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8bb05_eval_map(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1a9da5bda_Map>,jule::Ptr<_1d7b8b520_BraceLit>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8be13_eval_brace_lit(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8b520_BraceLit>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c221_eval_anon_fn(_1a9d7379b_Eval*,jule::Ptr<_1d7b8d29c_FnDecl>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c52e_eval_binop(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b8ac6c_BinopExpr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c83c_eval_expr_kind(jule::Ptr<_1a9d7379b_Eval>,jule::Any);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8cb4a_eval(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b09a43_Expr>);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8ce58_eval_expr(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b09a43_Expr>);
struct _1a9d7379b_Eval {
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Trait<_1a9db4325_Lookup> _field_lookup = jule::Trait<_1a9db4325_Lookup>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_prefix = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1a9d2553e_Var> _field_owner = jule::Ptr<_1a9d2553e_Var>();
	jule::Ptr<_1a8d84e62_FieldIns> _field_field = jule::Ptr<_1a8d84e62_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_1a9d7379b_Eval(jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Trait<_1a9db4325_Lookup> __param_lookup, jule::Ptr<_1a9d9ae66_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1a9d2553e_Var> __param_owner, jule::Ptr<_1a8d84e62_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_1a9d7379b_Eval(void) = default;

	inline bool operator==(_1a9d7379b_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a9d7379b_Eval _other) { return !this->operator==(_other); }


};
inline _1a9d8d3cb_UnaryEval static__1a9d8d882_new(jule::Ptr<_1a9d7379b_Eval>);
inline void _1a9d8da5d_minus(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8dc39_plus(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8de15_caret(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8e0e1_excl(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8e2bc_star(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8e498_amper(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8e674_type_decl(_1a9d8d3cb_UnaryEval*);
inline void _1a9d8e850_eval_data(_1a9d8d3cb_UnaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d8eb2a_eval(_1a9d8d3cb_UnaryEval*,jule::Ptr<_1d7b8a2cc_UnaryExpr>);
struct _1a9d8d3cb_UnaryEval {
	jule::Ptr<_1a9d7379b_Eval> _field_e = jule::Ptr<_1a9d7379b_Eval>();
	jule::Ptr<_1a9d71c2d_Data> _field_d = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1d7b8a2cc_UnaryExpr> _field_u = jule::Ptr<_1d7b8a2cc_UnaryExpr>();


	_1a9d8d3cb_UnaryEval(jule::Ptr<_1a9d7379b_Eval> __param_e, jule::Ptr<_1a9d71c2d_Data> __param_d, jule::Ptr<_1d7b8a2cc_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1a9d8d3cb_UnaryEval(void) = default;

	inline bool operator==(_1a9d8d3cb_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a9d8d3cb_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1a9d90169_BinaryEval static__1a9d9071e_new_plain(jule::Ptr<_1a9d7379b_Eval>);
inline _1a9d90169_BinaryEval static__1a9d90a60_new(jule::Ptr<_1a9d7379b_Eval>,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9d90d18_check_type_compatibility(_1a9d90169_BinaryEval*);
inline jule::Bool _1a9d910d2_check_struct_common_operator_compatibility(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d91346_eval_nil(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d915aa_eval_enum(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d9181e_eval_sptr(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d91a83_eval_ptr(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d91ce7_eval_arr(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d9205b_eval_slc(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d922c0_eval_fn(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d92534_eval_struct(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d92798_eval_trait(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d92a0c_eval_any(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d92c71_eval_bool(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d92ed5_eval_str(_1a9d90169_BinaryEval*);
inline void _1a9d931b1_set_type_to_greater(_1a9d90169_BinaryEval*);
inline void _1a9d93403_check_mod_data(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d935ce_mod(_1a9d90169_BinaryEval*);
inline jule::Bool _1a9d939ca_numbers_are_compatibile(_1a9d90169_BinaryEval*,jule::Str&,jule::Str&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d93c2d_eval_float(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d93e92_eval_int(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d94206_eval_prim(_1a9d90169_BinaryEval*);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d9446a_eval_op(_1a9d90169_BinaryEval*);
inline void _1a9d946e0_eval_const(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d94965_check_data(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d94b41_check_datas(_1a9d90169_BinaryEval*);
inline void _1a9d94db6_set_model(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d9513b_post_eval(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d954e3_solve_explicit(_1a9d90169_BinaryEval*,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d95801_eval(_1a9d90169_BinaryEval*,jule::Ptr<_1d7b8ac6c_BinopExpr>&);
struct _1a9d90169_BinaryEval {
	jule::Ptr<_1a9d7379b_Eval> _field_e = jule::Ptr<_1a9d7379b_Eval>();
	jule::Ptr<_1a9d71c2d_Data> _field_l = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1a9d71c2d_Data> _field_r = jule::Ptr<_1a9d71c2d_Data>();
	jule::Ptr<_1d7b77374_Token> _field_op = jule::Ptr<_1d7b77374_Token>();


	_1a9d90169_BinaryEval(jule::Ptr<_1a9d7379b_Eval> __param_e, jule::Ptr<_1a9d71c2d_Data> __param_l, jule::Ptr<_1a9d71c2d_Data> __param_r, jule::Ptr<_1d7b77374_Token> __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a9d90169_BinaryEval(void) = default;

	inline bool operator==(_1a9d90169_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a9d90169_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1a9d9a22e_TypeAlias {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _field_scope = jule::Ptr<_1d7b8cdc3_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a9d9ed05_TypeSymbol> _field_kind = jule::Ptr<_1a9d9ed05_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>();


	_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, jule::Ptr<_1d7b77374_Token> __param_token, jule::Str __param_ident, jule::Ptr<_1a9d9ed05_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1a9d9a22e_TypeAlias(void) = default;

	inline bool operator==(_1a9d9a22e_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a9d9a22e_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9d9b31d_to_str(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9b62b_equals(jule::Ptr<_1a9d9ae66_TypeKind>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a9d9bac1_cpp_linked(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9bd35_is_nil(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9c099_void(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9c30d_mutable(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9c572_nil_compatible(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9c7d6_performs_rc(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9ca4a_supports_cloning(_1a9d9ae66_TypeKind*);
inline jule::Bool _1a9d9ccae_variadicable(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da06b8_Prim> _1a9d9d023_prim(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da3bc7_Sptr> _1a9d9d287_sptr(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da723b_Ptr> _1a9d9d4eb_ptr(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a943b309_Enum> _1a9d9d760_enm(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da67ce_Arr> _1a9d9d9c4_arr(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da4634_Slc> _1a9d9dc38_slc(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a8d98063_FnIns> _1a9d9de9c_fnc(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a8d857c0_StructIns> _1a9d9e211_strct(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d9e475_trt(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da5bda_Map> _1a9d9e6d9_map(_1a9d9ae66_TypeKind*);
inline jule::Ptr<_1a9da5129_Tuple> _1a9d9e94d_tup(_1a9d9ae66_TypeKind*);
struct _1a9d9ae66_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a9d9aa37_Kind> _field_kind = jule::Trait<_1a9d9aa37_Kind>();


	_1a9d9ae66_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a9d9aa37_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_1a9d9ae66_TypeKind(void) = default;

	inline bool operator==(_1a9d9ae66_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9d9ae66_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9da0201_checked(_1a9d9ed05_TypeSymbol*);
inline void _1a9da03cc_remove_kind(_1a9d9ed05_TypeSymbol*);
struct _1a9d9ed05_TypeSymbol {
	jule::Ptr<_1d7a0e75b_TypeDecl> _field_decl = jule::Ptr<_1d7a0e75b_TypeDecl>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_kind = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl> __param_decl, jule::Ptr<_1a9d9ae66_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a9d9ed05_TypeSymbol(void) = default;

	inline bool operator==(_1a9d9ed05_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9d9ed05_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da0a2b_to_str(_1a9da06b8_Prim*);
inline jule::Bool _1a9da0d39_equals(jule::Ptr<_1a9da06b8_Prim>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a9da129b_is_i8(_1a9da06b8_Prim*);
inline jule::Bool _1a9da1510_is_i16(_1a9da06b8_Prim*);
inline jule::Bool _1a9da1774_is_i32(_1a9da06b8_Prim*);
inline jule::Bool _1a9da19d8_is_i64(_1a9da06b8_Prim*);
inline jule::Bool _1a9da1c4c_is_u8(_1a9da06b8_Prim*);
inline jule::Bool _1a9da1eb1_is_u16(_1a9da06b8_Prim*);
inline jule::Bool _1a9da2225_is_u32(_1a9da06b8_Prim*);
inline jule::Bool _1a9da2489_is_u64(_1a9da06b8_Prim*);
inline jule::Bool _1a9da26ed_is_f32(_1a9da06b8_Prim*);
inline jule::Bool _1a9da2962_is_f64(_1a9da06b8_Prim*);
inline jule::Bool _1a9da2bc6_is_int(_1a9da06b8_Prim*);
inline jule::Bool _1a9da2e3a_is_uint(_1a9da06b8_Prim*);
inline jule::Bool _1a9da319e_is_uintptr(_1a9da06b8_Prim*);
inline jule::Bool _1a9da3413_is_bool(_1a9da06b8_Prim*);
inline jule::Bool _1a9da3677_is_str(_1a9da06b8_Prim*);
inline jule::Bool _1a9da38db_is_any(_1a9da06b8_Prim*);
struct _1a9da06b8_Prim {
	jule::Str _field_kind = jule::Str();


	_1a9da06b8_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a9da06b8_Prim(void) = default;

	inline bool operator==(_1a9da06b8_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9da06b8_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da403a_to_str(_1a9da3bc7_Sptr*);
inline jule::Bool _1a9da4348_equals(jule::Ptr<_1a9da3bc7_Sptr>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1a9da3bc7_Sptr {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_elem = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9da3bc7_Sptr(jule::Ptr<_1a9d9ae66_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a9da3bc7_Sptr(void) = default;

	inline bool operator==(_1a9da3bc7_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a9da3bc7_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da4aa7_to_str(_1a9da4634_Slc*);
inline jule::Bool _1a9da4db5_equals(jule::Ptr<_1a9da4634_Slc>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1a9da4634_Slc {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_elem = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9da4634_Slc(jule::Ptr<_1a9d9ae66_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a9da4634_Slc(void) = default;

	inline bool operator==(_1a9da4634_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a9da4634_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da5525_to_str(_1a9da5129_Tuple*);
inline jule::Bool _1a9da5833_equals(jule::Ptr<_1a9da5129_Tuple>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1a9da5129_Tuple {
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>();


	_1a9da5129_Tuple(jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1a9da5129_Tuple(void) = default;

	inline bool operator==(_1a9da5129_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a9da5129_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da604d_to_str(_1a9da5bda_Map*);
inline jule::Bool _1a9da635b_equals(jule::Ptr<_1a9da5bda_Map>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1a9da5bda_Map {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_key = jule::Ptr<_1a9d9ae66_TypeKind>();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_val = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9da5bda_Map(jule::Ptr<_1a9d9ae66_TypeKind> __param_key, jule::Ptr<_1a9d9ae66_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a9da5bda_Map(void) = default;

	inline bool operator==(_1a9da5bda_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a9da5bda_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da6b42_to_str(_1a9da67ce_Arr*);
inline jule::Bool _1a9da6e50_equals(jule::Ptr<_1a9da67ce_Arr>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1a9da67ce_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I32 _field_n = jule::I32();
	jule::Ptr<_1a9d9ae66_TypeKind> _field_elem = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9da67ce_Arr(jule::Bool __param_auto, jule::I32 __param_n, jule::Ptr<_1a9d9ae66_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1a9da67ce_Arr(void) = default;

	inline bool operator==(_1a9da67ce_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a9da67ce_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9da759e_to_str(_1a9da723b_Ptr*);
inline jule::Bool _1a9da78ac_equals(jule::Ptr<_1a9da723b_Ptr>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a9da7c0e_is_unsafe(_1a9da723b_Ptr*);
struct _1a9da723b_Ptr {
	jule::Ptr<_1a9d9ae66_TypeKind> _field_elem = jule::Ptr<_1a9d9ae66_TypeKind>();


	_1a9da723b_Ptr(jule::Ptr<_1a9d9ae66_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a9da723b_Ptr(void) = default;

	inline bool operator==(_1a9da723b_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a9da723b_Ptr _other) { return !this->operator==(_other); }


};
struct _1a9da98d1_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a9da98d1_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a9da98d1_Referencer(void) = default;

	inline bool operator==(_1a9da98d1_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a9da98d1_Referencer _other) { return !this->operator==(_other); }


};
inline void _1a9daac23_push_err(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline void _1a9daadee_allow_builtin(_1a9daa55d_TypeChecker*);
inline void _1a9dab0ca_disallow_builtin(_1a9daa55d_TypeChecker*);
inline jule::Ptr<_1a9da06b8_Prim> _1a9dab3d8_build_prim(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&);
inline void _1a9dab7a1_push_cycle_error(_1a9daa55d_TypeChecker*,jule::Any,jule::Any,jule::Str&);
inline jule::Bool _1a9dabb58_check_cross_cycle(_1a9daa55d_TypeChecker*,jule::Any,jule::Str&);
inline jule::Bool _1a9dac010_check_illegal_cycles(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Any);
inline jule::Trait<_1a9d9aa37_Kind> _1a9dac3b7_from_type_alias(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1a9d9a22e_TypeAlias>&);
inline jule::Ptr<_1a943b309_Enum> _1a9dac76e_from_enum(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1a943b309_Enum>&);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9dacb26_from_trait(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1a8ea7a57_Trait>&);
inline jule::Bool _1a9dacecd_check_struct_ins(_1a9daa55d_TypeChecker*,jule::Ptr<_1a8d857c0_StructIns>&,jule::Ptr<_1d7b77374_Token>&);
inline void _1a9dad297_append_used_struct_reference(_1a9daa55d_TypeChecker*,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Ptr<_1a8d857c0_StructIns> _1a9dad63d_build_struct_instance(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Ptr<_1a8d857c0_StructIns> _1a9dad9e5_from_struct(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Trait<_1a9d9aa37_Kind> _1a9dadd9c_get_def(_1a9daa55d_TypeChecker*,jule::Trait<_1a9db4325_Lookup>,jule::Ptr<_1d7a16d5c_IdentTypeDecl>&);
inline jule::Trait<_1a9d9aa37_Kind> _1a9dae1aa_build_ident(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a16d5c_IdentTypeDecl>);
inline jule::Ptr<_1a9da3bc7_Sptr> _1a9dae4b8_build_sptr_from_type(_1a9daa55d_TypeChecker*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Ptr<_1a9da3bc7_Sptr> _1a9dae7c6_build_sptr(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a17236_SptrTypeDecl>);
inline jule::Ptr<_1a9da723b_Ptr> _1a9daead4_build_ptr_from_type(_1a9daa55d_TypeChecker*,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Ptr<_1a9da723b_Ptr> _1a9daede2_build_ptr(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a177ec_PtrTypeDecl>);
inline jule::Ptr<_1a9da4634_Slc> _1a9db0200_build_slc(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a17423_SlcTypeDecl>);
inline jule::Ptr<_1a9da67ce_Arr> _1a9db050d_build_arr(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a179d9_ArrTypeDecl>);
inline jule::Ptr<_1a9da5bda_Map> _1a9db081b_build_map(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a17bc6_MapTypeDecl>);
inline jule::Ptr<_1a9da5129_Tuple> _1a9db0b29_build_tuple(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a17610_TupleTypeDecl>);
inline jule::Bool _1a9db0e37_check_fn_types(_1a9daa55d_TypeChecker*,jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Ptr<_1a8d98063_FnIns> _1a9db1245_build_fn(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7b8d29c_FnDecl>);
inline jule::Trait<_1a9d9aa37_Kind> _1a9db1553_build_by_namespace(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a17049_NamespaceTypeDecl>);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9db1861_build(_1a9daa55d_TypeChecker*,jule::Any&);
inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9db1b6e_check_decl(_1a9daa55d_TypeChecker*,jule::Ptr<_1d7a0e75b_TypeDecl>&);
inline void _1a9db1de4_check(_1a9daa55d_TypeChecker*,jule::Ptr<_1a9d9ed05_TypeSymbol>&);
struct _1a9daa55d_TypeChecker {
	jule::Ptr<_1a9d0a03a_Sema> _field_s = jule::Ptr<_1a9d0a03a_Sema>();
	jule::Trait<_1a9db4325_Lookup> _field_lookup = jule::Trait<_1a9db4325_Lookup>();
	jule::Ptr<_1a9da98d1_Referencer> _field_referencer = jule::Ptr<_1a9da98d1_Referencer>();
	jule::Ptr<_1d7b77374_Token> _field_error_token = jule::Ptr<_1d7b77374_Token>();
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a9d9a22e_TypeAlias> _field_owner_alias = jule::Ptr<_1a9d9a22e_TypeAlias>();
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1a9daa55d_TypeChecker(jule::Ptr<_1a9d0a03a_Sema> __param_s, jule::Trait<_1a9db4325_Lookup> __param_lookup, jule::Ptr<_1a9da98d1_Referencer> __param_referencer, jule::Ptr<_1d7b77374_Token> __param_error_token, jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1a9d9a22e_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1a9daa55d_TypeChecker(void) = default;

	inline bool operator==(_1a9daa55d_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a9daa55d_TypeChecker _other) { return !this->operator==(_other); }


};
struct _1d796d621_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_1d796d621_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_1d796d621_CompileInfo(void) = default;

	inline bool operator==(_1d796d621_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1d796d621_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1d79a8491_push_err(_1d79bd86e_DirectiveEval*,jule::Ptr<_1d7b77374_Token>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d79abc25_split_operans(_1d79bd86e_DirectiveEval*,jule::Str,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Bool _1d79ac1dc_eval_directive_ident(_1d79bd86e_DirectiveEval*,jule::Str);
inline jule::Bool _1d79ac440_eval_directive_part(_1d79bd86e_DirectiveEval*,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Bool _1d79ad7a4_eval(_1d79bd86e_DirectiveEval*);
struct _1d79bd86e_DirectiveEval {
	jule::Slice<_1d77ca48e_Log> _field_logs = jule::Slice<_1d77ca48e_Log>();
	jule::Ptr<_1d7a4352b_Directive> _field_d = jule::Ptr<_1d7a4352b_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1d79bd86e_DirectiveEval(jule::Slice<_1d77ca48e_Log> __param_logs, jule::Ptr<_1d7a4352b_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_1d79bd86e_DirectiveEval(void) = default;

	inline bool operator==(_1d79bd86e_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1d79bd86e_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1bce6e620_JuleImporter> static__1bce2ca95_new(_1d796d621_CompileInfo);
inline jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _1bce2e701_all_packages(_1bce6e620_JuleImporter*);
inline void _1bce3188a_set_mod_path(_1bce6e620_JuleImporter*,jule::Str);
inline jule::Str _1bce4e15a_get_mod_path(_1bce6e620_JuleImporter*);
inline jule::Str _1bd016e9d_mod_by_id(_1bce6e620_JuleImporter*,jule::I32);
inline jule::Ptr<_1a9d02351_ImportInfo> _1bd0231a7_get_import(_1bce6e620_JuleImporter*,jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>,jule::Slice<_1d77ca48e_Log>> _1bd024d24_import_package(_1bce6e620_JuleImporter*,jule::Str,jule::Bool);
inline void _1bd02c9b9_imported(_1bce6e620_JuleImporter*,jule::Ptr<_1a9d02351_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1d77ca48e_Log>> _1bd03312e_is_pass_build_directives(_1bce6e620_JuleImporter*,jule::Ptr<_1d7a43eaa_Ast>&);
struct _1bce6e620_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1bce6e620_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_1bce6e620_JuleImporter(void) = default;

	inline bool operator==(_1bce6e620_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1bce6e620_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1bd03a5a9_OrderedDefines {
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _field_structs = jule::Slice<jule::Ptr<_1a8d82b41_Struct>>();


	_1bd03a5a9_OrderedDefines(jule::Slice<jule::Ptr<_1a8d82b41_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_1bd03a5a9_OrderedDefines(void) = default;

	inline bool operator==(_1bd03a5a9_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1bd03a5a9_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a8d63803_is_common_ordered_0(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>&,jule::Ptr<_1a8d82b41_Struct>);
inline void static__1a8d7014a_order_common_0(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>&);
inline void static__1a8d7be48_order_structures(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>&);
struct _1bd03a796_DefineOrderer {
	

	_1bd03a796_DefineOrderer(void) = default;

	inline bool operator==(_1bd03a796_DefineOrderer _other) { return true; }

	inline bool operator!=(_1bd03a796_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1a9e45b7b_optimize_child(jule::Ptr<_1a9e4598e_ScopeDeadCode>,jule::Ptr<_1a9cc76bc_Scope>&);
inline void _1a9e45cad_eliminate_followed(_1a9e4598e_ScopeDeadCode*);
inline void _1a9e45de0_optimize_stmt(jule::Ptr<_1a9e4598e_ScopeDeadCode>,jule::Any);
inline void _1a9e46022_optimize_stmts(jule::Ptr<_1a9e4598e_ScopeDeadCode>);
struct _1a9e4598e_ScopeDeadCode {
	jule::Ptr<_1a9e4598e_ScopeDeadCode> _field_parent = jule::Ptr<_1a9e4598e_ScopeDeadCode>();
	jule::Ptr<_1a9cc76bc_Scope> _field_s = jule::Ptr<_1a9cc76bc_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = jule::I32();


	_1a9e4598e_ScopeDeadCode(jule::Ptr<_1a9e4598e_ScopeDeadCode> __param_parent, jule::Ptr<_1a9cc76bc_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I32 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_1a9e4598e_ScopeDeadCode(void) = default;

	inline bool operator==(_1a9e4598e_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a9e4598e_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1a9e662a6_reset(void);
inline void static__1a9e663d8_print(jule::Str,jule::Str);
struct _1a9e660b9_AnsiEscape {
	

	_1a9e660b9_AnsiEscape(void) = default;

	inline bool operator==(_1a9e660b9_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a9e660b9_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a9e6731d_log_flat(_1d77ca48e_Log&);
inline void static__1a9e6752c_log_error(_1d77ca48e_Log&);
inline void static__1a9e6773b_log(_1d77ca48e_Log&);
inline void static__1a9e6794a_print_logs(jule::Slice<_1d77ca48e_Log>&);
struct _1a9e67098_Logger {
	

	_1a9e67098_Logger(void) = default;

	inline bool operator==(_1a9e67098_Logger _other) { return true; }

	inline bool operator!=(_1a9e67098_Logger _other) { return !this->operator==(_other); }


};
struct _1aa4accb4_UnsafeBinopExprModel {
	jule::Ptr<_1a8d878e3_BinopExprModel> _field_node = jule::Ptr<_1a8d878e3_BinopExprModel>();


	_1aa4accb4_UnsafeBinopExprModel(jule::Ptr<_1a8d878e3_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_1aa4accb4_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1aa4accb4_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1aa4accb4_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aa4ad8ec_UnsafeIndexingExprModel {
	jule::Ptr<_1a8d8a011_IndexingExprModel> _field_node = jule::Ptr<_1a8d8a011_IndexingExprModel>();


	_1aa4ad8ec_UnsafeIndexingExprModel(jule::Ptr<_1a8d8a011_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_1aa4ad8ec_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1aa4ad8ec_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1aa4ad8ec_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa4ba8a4_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1a8d89a8d_SliceExprModel> _field_elems = jule::Ptr<_1a8d89a8d_SliceExprModel>();


	_1aa4ba8a4_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_1a8d89a8d_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_1aa4ba8a4_PushToSliceExprModel(void) = default;

	inline bool operator==(_1aa4ba8a4_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1aa4ba8a4_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1aa4bae26_MutSlicingExprModel {
	jule::Ptr<_1d7b77374_Token> _field_token = jule::Ptr<_1d7b77374_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1aa4bae26_MutSlicingExprModel(jule::Ptr<_1d7b77374_Token> __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1aa4bae26_MutSlicingExprModel(void) = default;

	inline bool operator==(_1aa4bae26_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1aa4bae26_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa4bb322_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_1aa4bb322_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_1aa4bb322_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1aa4bb322_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa4bb322_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa4bc6ca_ScopeOptimizer> static__1aa4bcba3_new(jule::Ptr<_1a9cc76bc_Scope>);
inline void _1aa4bce28_set_current_stmt(_1aa4bc6ca_ScopeOptimizer*,jule::Any);
inline void _1aa4bd19d_optimize_data(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9d71c2d_Data>);
inline void _1aa4bd423_optimize_var(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9d2553e_Var>);
inline void _1aa4bd698_optimize_conditional(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9c78d33_Conditional>);
inline void _1aa4bdaa5_build_default_constat_true_case(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cdb2b3_Case>,jule::I32&,jule::Ptr<_1a9cdad95_Match>&);
inline void _1aa4bdd19_optimize_match(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cdad95_Match>);
inline void _1aa4be08e_optimize_range_iter(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9c89d33_RangeIter>);
inline void _1aa4be314_optimize_while_iter(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9c89b46_WhileIter>);
inline jule::Bool _1aa4be622_substr(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cda9bb_Assign>);
inline jule::Bool _1aa4be930_str_insert(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cda9bb_Assign>);
inline jule::Bool _1aa4bec3d_str_assign(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cda9bb_Assign>);
inline void _1aa4beeb3_optimize_assign(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cda9bb_Assign>);
inline void _1aa4c0238_optimize_multi_assign(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cdaba8_MultiAssign>);
inline void _1aa4c04ad_optimize_ret(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cdb68c_RetSt>);
inline void _1aa4c0733_optimize_stmt(_1aa4bc6ca_ScopeOptimizer*,jule::Any);
inline void _1aa4c09a8_optimize_child(_1aa4bc6ca_ScopeOptimizer*,jule::Ptr<_1a9cc76bc_Scope>);
inline void _1aa4c0b84_optimize(_1aa4bc6ca_ScopeOptimizer*);
struct _1aa4bc6ca_ScopeOptimizer {
	jule::I32 _field_i = jule::I32();
	jule::Ptr<_1a9cc76bc_Scope> _field_scope = jule::Ptr<_1a9cc76bc_Scope>();


	_1aa4bc6ca_ScopeOptimizer(jule::I32 __param_i, jule::Ptr<_1a9cc76bc_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1aa4bc6ca_ScopeOptimizer(void) = default;

	inline bool operator==(_1aa4bc6ca_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aa4bc6ca_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1aa4c37ad_optimize(jule::Any&);
inline jule::Bool _1aa4c3abb_str_cond(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d878e3_BinopExprModel>);
inline void _1aa4c3d41_binary(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d878e3_BinopExprModel>);
inline void _1aa4c40b6_unary(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d87c9a_UnaryExprModel>);
inline void _1aa4c433b_structure_lit(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8854d_StructLitExprModel>);
inline void _1aa4c45b1_alloc_structure(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8887d_AllocStructLitExprModel>);
inline void _1aa4c4836_casting(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d88dab_CastingExprModel>);
inline void _1aa4c4aab_args(_1aa4c2d84_ExprOptimizer*,jule::Slice<jule::Any>);
inline void _1aa4c4d31_scope(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a9cc76bc_Scope>&);
inline void _1aa4c50a6_func_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d896d6_FnCallExprModel>);
inline void _1aa4c532b_slice(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d89a8d_SliceExprModel>);
inline void _1aa4c55a1_array(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8c83d_ArrayExprModel>);
inline void _1aa4c5826_indexing(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8a011_IndexingExprModel>);
inline void _1aa4c5a9b_anon_func(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8a3b8_AnonFnExprModel>);
inline void _1aa4c5d21_map(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8abe3_MapExprModel>);
inline void _1aa4c6096_slicing(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8b232_SlicingExprModel>);
inline void _1aa4c631b_trait_sub(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>);
inline void _1aa4c6591_structure_sub(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>);
inline void _1aa4c6816_common_sub(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>);
inline void _1aa4c6a8b_tuple(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8d487_TupleExprModel>);
inline void _1aa4c6d11_new_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>);
inline void _1aa4c7086_out_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>);
inline void _1aa4c730b_outln_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>);
inline void _1aa4c7581_panic_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>);
inline void _1aa4c7806_assert_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>);
inline void _1aa4c7a7b_error_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>);
inline void _1aa4c7d01_make_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>);
inline void _1aa4c8076_append_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>);
inline void _1aa4c82eb_clone_call(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>);
inline void _1aa4c8571_sizeof(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d90d6e_SizeofExprModel>);
inline void _1aa4c87e6_alignof(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d914e0_AlignofExprModel>);
inline void _1aa4c8a6b_integrated_to_str(_1aa4c2d84_ExprOptimizer*,jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>);
inline void _1aa4c8c47_do(_1aa4c2d84_ExprOptimizer*);
struct _1aa4c2d84_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_1aa4c2d84_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_1aa4c2d84_ExprOptimizer(void) = default;

	inline bool operator==(_1aa4c2d84_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1aa4c2d84_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa4c9b9e_Optimizer> static__1aa4ca0bc_new(jule::Ptr<_1bce27b17_IR>&);
inline void _1aa4ca342_optimize_global(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a9d2553e_Var>&);
inline void _1aa4ca5b7_optimize_function(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a8d94db7_Fn>&);
inline void _1aa4ca83c_optimize_struct(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a8d82b41_Struct>&);
inline void _1aa4caab2_optimize_globals(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a9d05013_Package>&);
inline void _1aa4cad37_optimize_functions(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a9d05013_Package>&);
inline void _1aa4cb0ac_optimize_structs(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a9d05013_Package>&);
inline void _1aa4cb332_optimize_package(_1aa4c9b9e_Optimizer*,jule::Ptr<_1a9d05013_Package>&);
inline void _1aa4cb50d_optimize(_1aa4c9b9e_Optimizer*);
struct _1aa4c9b9e_Optimizer {
	jule::Ptr<_1bce27b17_IR> _field_ir = jule::Ptr<_1bce27b17_IR>();


	_1aa4c9b9e_Optimizer(jule::Ptr<_1bce27b17_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1aa4c9b9e_Optimizer(void) = default;

	inline bool operator==(_1aa4c9b9e_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1aa4c9b9e_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1aa54bced_unix(_1aa54b913_AbsTime*);
struct _1aa54b913_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1aa54b913_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1aa54b913_AbsTime(void) = default;

	inline bool operator==(_1aa54b913_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1aa54b913_AbsTime _other) { return !this->operator==(_other); }


};
inline _1aa54c0d9_Time static__1aa54c480_unix(jule::U64);
inline _1aa54c0d9_Time static__1aa54c67d_now(void);
inline jule::U64 _1aa54cace_unix(_1aa54c0d9_Time*);
inline jule::U64 _1aa54cd43_day(_1aa54c0d9_Time*);
inline jule::U64 _1aa54d0a7_month(_1aa54c0d9_Time*);
inline jule::U64 _1aa54d31b_year(_1aa54c0d9_Time*);
inline jule::U64 _1aa54d580_second(_1aa54c0d9_Time*);
inline jule::U64 _1aa54d7e4_minute(_1aa54c0d9_Time*);
inline jule::U64 _1aa54da58_hour(_1aa54c0d9_Time*);
inline _1aa54b913_AbsTime _1aa54dcbc_abs(_1aa54c0d9_Time*);
struct _1aa54c0d9_Time {
	jule::U64 _field_sec = jule::U64();


	_1aa54c0d9_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1aa54c0d9_Time(void) = default;

	inline bool operator==(_1aa54c0d9_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1aa54c0d9_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1aa54e4d7_nanoseconds(jule::I64);
inline jule::I64 static__1aa54e77e_microseconds(jule::I64);
inline jule::I64 static__1aa54ea26_milliseconds(jule::I64);
inline jule::I64 static__1aa54ecbd_seconds(jule::I64);
inline jule::I64 static__1aa550065_minutes(jule::I64);
inline jule::I64 static__1aa55030c_hours(jule::I64);
struct _1aa54e0a8_Duration {
	

	_1aa54e0a8_Duration(void) = default;

	inline bool operator==(_1aa54e0a8_Duration _other) { return true; }

	inline bool operator!=(_1aa54e0a8_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa3470d2_TestCoder> static__1aa347555_new(jule::Ptr<_1aa51504c_ObjectCoder>&);
inline jule::Ptr<_1a9d02351_ImportInfo> _1aa3795a9_find_testing_package(_1aa3470d2_TestCoder*);
inline void _1aa3797b8_append_test(_1aa3470d2_TestCoder*,jule::Str&,jule::Ptr<_1a8d98063_FnIns>);
inline void _1aa379ad7_append_package_tests(_1aa3470d2_TestCoder*,jule::Str&,jule::Ptr<_1a9d05013_Package>&);
inline jule::Bool _1aa379d4b_ready_testing_package(_1aa3470d2_TestCoder*);
inline jule::Str _1aa37a0b0_call_tm_reset(_1aa3470d2_TestCoder*);
inline jule::Str _1aa37a324_call_tm_failed(_1aa3470d2_TestCoder*);
inline jule::Str _1aa37a588_call_tm_skipped(_1aa3470d2_TestCoder*);
inline void _1aa37a80d_serialize(_1aa3470d2_TestCoder*,jule::Str&);
struct _1aa3470d2_TestCoder {
	jule::Ptr<_1a8d857c0_StructIns> _field_t = jule::Ptr<_1a8d857c0_StructIns>();
	jule::Ptr<_1a8d94db7_Fn> _field_tm_reset = jule::Ptr<_1a8d94db7_Fn>();
	jule::Ptr<_1a8d94db7_Fn> _field_tm_failed = jule::Ptr<_1a8d94db7_Fn>();
	jule::Ptr<_1a8d94db7_Fn> _field_tm_skipped = jule::Ptr<_1a8d94db7_Fn>();
	jule::Ptr<_1aa51504c_ObjectCoder> _field_oc = jule::Ptr<_1aa51504c_ObjectCoder>();


	_1aa3470d2_TestCoder(jule::Ptr<_1a8d857c0_StructIns> __param_t, jule::Ptr<_1a8d94db7_Fn> __param_tm_reset, jule::Ptr<_1a8d94db7_Fn> __param_tm_failed, jule::Ptr<_1a8d94db7_Fn> __param_tm_skipped, jule::Ptr<_1aa51504c_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_1aa3470d2_TestCoder(void) = default;

	inline bool operator==(_1aa3470d2_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa3470d2_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa3b797c_ScopeCoder> static__1aa3be511_new(jule::Ptr<_1aa51504c_ObjectCoder>&);
inline jule::Str _1aa3deb19_range_index_iter(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c89d33_RangeIter>&);
inline jule::Str _1aa3e226a_range_hashmap_iter(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c89d33_RangeIter>&);
inline jule::Str _1aa400025_if_case(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cce0b9_If>);
inline jule::Str _1aa4077be_conditional(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c78d33_Conditional>);
inline jule::Str _1aa4693ad_inf_iter(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c89959_InfIter>);
inline jule::Str _1aa469c60_while_iter(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c89b46_WhileIter>);
inline jule::Str _1aa46e171_range_iter(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9c89d33_RangeIter>);
inline jule::Str _1aa476c39_cont(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cb79dc_ContSt>);
inline jule::Str _1aa47a7ed_label(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cda405_Label>);
inline jule::Str _1aa47ab50_goto_st(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cda5e2_GotoSt>);
inline jule::Str _1aa47b5e0_postfix(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cda7ce_Postfix>);
inline jule::Str _1aa47db53_assign(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cda9bb_Assign>);
inline jule::Str _1aa47e538_multi_assign(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdaba8_MultiAssign>);
inline jule::Str _1aa47ee1d_match_expr(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdad95_Match>&);
inline jule::Str _1aa480803_case(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdad95_Match>,jule::Ptr<_1a9cdb2b3_Case>);
inline jule::Str _1aa4811d8_match_st(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdad95_Match>);
inline jule::Str _1aa4832d9_fall_st(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdb4a0_FallSt>);
inline jule::Str _1aa48410e_break_st(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cb7bc9_BreakSt>);
inline jule::Str _1aa4849b1_ret_with_vars(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdb68c_RetSt>);
inline jule::Str _1aa485363_ret_tuple(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdb68c_RetSt>);
inline jule::Str _1aa485e8a_ret_with_exprs(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdb68c_RetSt>);
inline jule::Str _1aa37ea10_ret_st(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cdb68c_RetSt>);
inline jule::Str _1aa3bde06_ret_with_defaults(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Str _1aa4b0613_var(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9d2553e_Var>);
inline jule::Str _1aa3b86b4_st(_1aa3b797c_ScopeCoder*,jule::Any);
inline void _1aa409925_scope_end(_1aa3b797c_ScopeCoder*,jule::Str&,jule::Ptr<_1a9cc76bc_Scope>&);
inline jule::Str _1aa411201_scope(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a9cc76bc_Scope>);
inline jule::Str _1aa4511ca_func_scope(_1aa3b797c_ScopeCoder*,jule::Ptr<_1a8d98063_FnIns>);
struct _1aa3b797c_ScopeCoder {
	jule::Ptr<_1aa51504c_ObjectCoder> _field_oc = jule::Ptr<_1aa51504c_ObjectCoder>();


	_1aa3b797c_ScopeCoder(jule::Ptr<_1aa51504c_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1aa3b797c_ScopeCoder(void) = default;

	inline bool operator==(_1aa3b797c_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa3b797c_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa37e504_ExprCoder> static__1aa3b80ed_new(jule::Ptr<_1aa51504c_ObjectCoder>&);
inline jule::Str _1aa4ad07d_string(_1aa37e504_ExprCoder*,jule::Ptr<_1a9c46e77_Const>&);
inline jule::Str _1aa4ad1b0_boolean(_1aa37e504_ExprCoder*,jule::Ptr<_1a9c46e77_Const>&);
inline jule::Str _1aa4516c5_nil_lit(_1aa37e504_ExprCoder*);
inline jule::Str _1aa451807_ftoa_special_cases(_1aa37e504_ExprCoder*,jule::F64&);
inline jule::Str _1aa451939_float32(_1aa37e504_ExprCoder*,jule::Ptr<_1a9c46e77_Const>&);
inline jule::Str _1aa4cb6ea_float64(_1aa37e504_ExprCoder*,jule::Ptr<_1a9c46e77_Const>&);
inline jule::Str _1aa4cb82c_constant(_1aa37e504_ExprCoder*,jule::Ptr<_1a9c46e77_Const>,jule::Bool);
inline jule::Str _1aa4cb95e_div_by_zero_binary(_1aa37e504_ExprCoder*,jule::Ptr<_1d7b77374_Token>&,jule::Ptr<_1a8d8742b_OperandExprModel>&,jule::Ptr<_1a8d8742b_OperandExprModel>&);
inline jule::Str _1aa4cba91_unsafe_binary(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d878e3_BinopExprModel>);
inline jule::Str _1aa4cbbc3_binary(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d878e3_BinopExprModel>);
inline jule::Str _1aa4cbd05_var(_1aa37e504_ExprCoder*,jule::Ptr<_1a9d2553e_Var>);
inline jule::Str _1aa4cbe37_structure(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d82b41_Struct>);
inline jule::Str _1aa4cc069_structure_ins(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Str _1aa4cc19b_unary(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d87c9a_UnaryExprModel>);
inline jule::Str _1aa4cc2cd_cpp_structure_lit(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8854d_StructLitExprModel>);
inline jule::Str _1aa4cc410_structure_lit(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8854d_StructLitExprModel>);
inline jule::Str _1aa4cc542_alloc_structure(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8887d_AllocStructLitExprModel>);
inline jule::Str _1aa4cc674_casting(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d88dab_CastingExprModel>);
inline jule::Str _1aa4cc7a6_args(_1aa37e504_ExprCoder*,jule::Slice<jule::Any>);
inline jule::Str _1aa4cc8d8_model_for_call(_1aa37e504_ExprCoder*,jule::Any);
inline void _1aa4cca1a_push_call_inf(_1aa37e504_ExprCoder*,jule::Str&,jule::Ptr<_1a8d896d6_FnCallExprModel>&);
inline jule::Str _1aa4ccb4c_pure_func_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d896d6_FnCallExprModel>&);
inline jule::Str _1aa4ccc7e_func_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d896d6_FnCallExprModel>);
inline jule::Str _1aa4ccdb1_slice(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d89a8d_SliceExprModel>);
inline jule::Str _1aa4ccee3_indexing(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8a011_IndexingExprModel>);
inline jule::Str _1aa4cd125_unsafe_indexing(_1aa37e504_ExprCoder*,jule::Ptr<_1aa4ad8ec_UnsafeIndexingExprModel>);
inline jule::Str _1aa4cd257_anon_func(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8a3b8_AnonFnExprModel>);
inline jule::Str _1aa4cd389_map(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8abe3_MapExprModel>);
inline jule::Str _1aa4cd4bb_slicing(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8b232_SlicingExprModel>);
inline jule::Str _1aa4cd5ed_trait_sub(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>);
inline jule::Str _1aa4cd7c9_structure_sub(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>);
inline jule::Str _1aa4cdad7_common_ident(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8cb29_CommonIdentExprModel>);
inline jule::Str _1aa4cdde5_common_sub(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>);
inline jule::Str _1aa4ce203_array(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8c83d_ArrayExprModel>);
inline jule::Str _1aa4ce511_func_ins_common(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d98063_FnIns>);
inline jule::Str _1aa4ce81e_func_ins(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d98063_FnIns>);
inline jule::Str _1aa4ceb2c_tuple(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8d487_TupleExprModel>);
inline jule::Str _1aa4cee3a_new_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>);
inline jule::Str _1aa4d0248_out_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>);
inline jule::Str _1aa4d0556_outln_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>);
inline jule::Str _1aa4d0864_panic_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>);
inline jule::Str _1aa4d0b72_assert_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>);
inline jule::Str _1aa4d0e80_error_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>);
inline jule::Str _1aa4d128d_make_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>);
inline jule::Str _1aa4d159b_push_to_slice(_1aa37e504_ExprCoder*,jule::Ptr<_1aa4ba8a4_PushToSliceExprModel>);
inline jule::Str _1aa4d18a9_append_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>);
inline jule::Str _1aa4d1bb7_clone_call(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>);
inline jule::Str _1aa4d1ec5_sizeof(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d90d6e_SizeofExprModel>);
inline jule::Str _1aa4d22d3_alignof(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d914e0_AlignofExprModel>);
inline jule::Str _1aa4d25e1_rune_lit(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d916cc_RuneExprModel>);
inline jule::Str _1aa4d28ee_structure_static(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d8c497_StructStaticIdentExprModel>);
inline jule::Str _1aa4d2c0c_integrated_to_str(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>);
inline jule::Str _1aa4d301a_backend_emit(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d91d5e_BackendEmitExprModel>);
inline jule::Str _1aa4d3328_free(_1aa37e504_ExprCoder*,jule::Ptr<_1a8d9214a_FreeExprModel>);
inline jule::Str _1aa4d3636_mut_slicing(_1aa37e504_ExprCoder*,jule::Ptr<_1aa4bae26_MutSlicingExprModel>);
inline jule::Str _1aa4d3944_str_insert_begin(_1aa37e504_ExprCoder*,jule::Ptr<_1aa4bb322_StrInsertBeginExprModel>);
inline jule::Str _1aa4d3c52_model(_1aa37e504_ExprCoder*,jule::Any);
inline jule::Str _1aa4d4060_expr(_1aa37e504_ExprCoder*,jule::Any);
inline jule::Str _1aa4d436d_val(_1aa37e504_ExprCoder*,jule::Ptr<_1a9d72ca6_Value>);
inline jule::Str _1aa4d467b_init_expr(_1aa37e504_ExprCoder*,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1aa37e504_ExprCoder {
	jule::Ptr<_1aa51504c_ObjectCoder> _field_oc = jule::Ptr<_1aa51504c_ObjectCoder>();


	_1aa37e504_ExprCoder(jule::Ptr<_1aa51504c_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1aa37e504_ExprCoder(void) = default;

	inline bool operator==(_1aa37e504_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aa37e504_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa4d6eec_clone_func_decl(jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Str static__1aa4d7294_clone_func_def(jule::Ptr<_1a8d82b41_Struct>&);
struct _1aa4d6bbc_DeriveCoder {
	

	_1aa4d6bbc_DeriveCoder(void) = default;

	inline bool operator==(_1aa4d6bbc_DeriveCoder _other) { return true; }

	inline bool operator!=(_1aa4d6bbc_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa4d8718_to_ident(jule::Str);
inline jule::Str static__1aa4d89b0_addr(jule::U32);
inline jule::Str static__1aa4d8d01_to_out(jule::Str,jule::U32);
inline jule::Str static__1aa4d91db_to_local(jule::I32,jule::I32,jule::Str);
inline jule::Str static__1aa4d9483_func(jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Str static__1aa4d972a_func_ins(jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Str static__1aa4d99c2_trait_decl(jule::Ptr<_1a8ea7a57_Trait>);
inline jule::Str static__1aa4d9c69_param(jule::Ptr<_1a8d9357a_Param>&);
inline jule::Str static__1aa4da011_structure(jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Str static__1aa4da2a8_structure_ins(jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str static__1aa4da550_field(jule::Ptr<_1bd010a02_Field>&);
inline jule::Str static__1aa4da7e7_var(jule::Ptr<_1a9d2553e_Var>);
inline jule::Str static__1aa4daa8e_iter_begin(jule::U32);
inline jule::Str static__1aa4dad36_iter_end(jule::U32);
inline jule::Str static__1aa4db0cd_iter_next(jule::U32);
inline jule::Str static__1aa4db375_label(jule::Str);
inline jule::Str static__1aa4db61c_match_end(jule::U32);
inline jule::Str static__1aa4db8b4_case_begin(jule::U32);
struct _1aa4d82a6_IdentCoder {
	

	_1aa4d82a6_IdentCoder(void) = default;

	inline bool operator==(_1aa4d82a6_IdentCoder _other) { return true; }

	inline bool operator!=(_1aa4d82a6_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1aa52150e_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1aa52150e_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1aa52150e_SerializationInfo(void) = default;

	inline bool operator==(_1aa52150e_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1aa52150e_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1aa514d60_TraitHash {
	jule::Ptr<_1a8ea7a57_Trait> _field_t = jule::Ptr<_1a8ea7a57_Trait>();
	jule::Ptr<_1a8d857c0_StructIns> _field_s = jule::Ptr<_1a8d857c0_StructIns>();
	jule::I32 _field_i = jule::I32();


	_1aa514d60_TraitHash(jule::Ptr<_1a8ea7a57_Trait> __param_t, jule::Ptr<_1a8d857c0_StructIns> __param_s, jule::I32 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_1aa514d60_TraitHash(void) = default;

	inline bool operator==(_1aa514d60_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa514d60_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1aa559de9_to_str(_1aa5599ed_CustomType*);
inline jule::Bool _1aa55a207_equals(jule::Ptr<_1aa5599ed_CustomType>,jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1aa5599ed_CustomType {
	jule::Str _field_kind = jule::Str();


	_1aa5599ed_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1aa5599ed_CustomType(void) = default;

	inline bool operator==(_1aa5599ed_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa5599ed_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aa55a944_to_type(jule::Str);
inline jule::Str static__1aa55abdb_prim(jule::Ptr<_1a9da06b8_Prim>);
inline jule::Str static__1aa55ae83_tuple(jule::Ptr<_1a9da5129_Tuple>);
inline jule::Str static__1aa55b22a_as_sptr(jule::Str);
inline jule::Str static__1aa55b4c2_as_ptr(jule::Str);
inline jule::Str static__1aa55b769_sptr(jule::Ptr<_1a9da3bc7_Sptr>);
inline jule::Str static__1aa55ba11_ptr(jule::Ptr<_1a9da723b_Ptr>);
inline jule::Str static__1aa55bca8_enum_decl(jule::Ptr<_1a943b309_Enum>);
inline jule::Str static__1aa55c050_as_slice(jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Str static__1aa55c2e7_slice(jule::Ptr<_1a9da4634_Slc>);
inline jule::Str static__1aa55c58e_map(jule::Ptr<_1a9da5bda_Map>);
inline jule::Str static__1aa55c836_trait_ident(jule::Str);
inline jule::Str static__1aa55cacd_trait_decl(jule::Ptr<_1a8ea7a57_Trait>);
inline jule::Str static__1aa55cd75_structure(jule::Ptr<_1a8d82b41_Struct>);
inline jule::Str static__1aa55d11c_structure_ins(jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Str static__1aa55d3b4_array(jule::Ptr<_1a9da67ce_Arr>);
inline jule::Str static__1aa55d65b_param(jule::Ptr<_1a8d9357a_Param>&);
inline jule::Str static__1aa55d903_param_ins(jule::Ptr<_1a8d971c7_ParamIns>&);
inline jule::Str static__1aa55db9a_func_result(jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Str static__1aa55de42_func_ins_result(jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Str static__1aa55e1d9_anon_func(jule::Ptr<_1a8d98063_FnIns>);
inline jule::Str static__1aa55e481_func(jule::Ptr<_1a8d98063_FnIns>);
inline jule::Str static__1aa55e728_kind(jule::Ptr<_1a9d9ae66_TypeKind>);
struct _1aa55a427_TypeCoder {
	

	_1aa55a427_TypeCoder(void) = default;

	inline bool operator==(_1aa55a427_TypeCoder _other) { return true; }

	inline bool operator!=(_1aa55a427_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1acc7cbbe_name(_1aa594b8c_Flag_0*);
inline jule::Str _1acc7cd01_what(_1aa594b8c_Flag_0*);
inline void _1acc7ce33_reset(_1aa594b8c_Flag_0*);
inline jule::I32 _1acc7d065_short(_1aa594b8c_Flag_0*);
struct _1aa594b8c_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1aa594b8c_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1aa594b8c_Flag_0(void) = default;

	inline bool operator==(_1aa594b8c_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aa594b8c_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1acc809b3_name(_1aa594b8c_Flag_1*);
inline jule::Str _1acc80bc2_what(_1aa594b8c_Flag_1*);
inline void _1acc7d1ca_reset(_1aa594b8c_Flag_1*);
inline jule::I32 _1acc8071b_short(_1aa594b8c_Flag_1*);
struct _1aa594b8c_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1aa594b8c_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1aa594b8c_Flag_1(void) = default;

	inline bool operator==(_1aa594b8c_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aa594b8c_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1acc83b92_name(_1aa594b8c_Flag_2*);
inline jule::Str _1acc83da1_what(_1aa594b8c_Flag_2*);
inline void _1acc838ea_reset(_1aa594b8c_Flag_2*);
inline jule::I32 _1acc84621_short(_1aa594b8c_Flag_2*);
struct _1aa594b8c_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1aa594b8c_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1aa594b8c_Flag_2(void) = default;

	inline bool operator==(_1aa594b8c_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aa594b8c_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1acc86db5_name(_1aa594b8c_Flag_3*);
inline jule::Str _1acc870c4_what(_1aa594b8c_Flag_3*);
inline void _1acc86b1d_reset(_1aa594b8c_Flag_3*);
inline jule::I32 _1acc87844_short(_1aa594b8c_Flag_3*);
struct _1aa594b8c_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1aa594b8c_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1aa594b8c_Flag_3(void) = default;

	inline bool operator==(_1aa594b8c_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aa594b8c_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1acc8a094_name(_1aa594b8c_Flag_4*);
inline jule::Str _1acc8a2a3_what(_1aa594b8c_Flag_4*);
inline void _1acc89cec_reset(_1aa594b8c_Flag_4*);
inline jule::I32 _1acc8aa23_short(_1aa594b8c_Flag_4*);
struct _1aa594b8c_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1aa594b8c_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1aa594b8c_Flag_4(void) = default;

	inline bool operator==(_1aa594b8c_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1aa594b8c_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa595e02_FlagSet> static__1aa5961dd_new(void);
inline jule::Trait<_1aa563e47_CommonFlag> _1aa5966a5_find_flag(_1aa595e02_FlagSet*,jule::Str);
inline jule::Trait<_1aa563e47_CommonFlag> _1aa5969b3_find_flag_short(_1aa595e02_FlagSet*,jule::I32);
inline jule::Slice<jule::Trait<_1aa563e47_CommonFlag>> _1aa596c27_flags(_1aa595e02_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aa597035_parse(_1aa595e02_FlagSet*,jule::Slice<jule::Str>);
inline void _1aa597211_reset(_1aa595e02_FlagSet*);
inline jule::Ptr<_1aa594b8c_Flag_4> _1aa597662_add_flag_common_0(_1aa595e02_FlagSet*,jule::Str,jule::I32,jule::Str);
inline jule::Ptr<_1aa594b8c_Flag_3> _1aa597662_add_flag_common_1(_1aa595e02_FlagSet*,jule::Str,jule::I32,jule::Str);
inline void _1aa5980be_add_var_0(_1aa595e02_FlagSet*,jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
inline void _1aa5980be_add_var_1(_1aa595e02_FlagSet*,jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
struct _1aa595e02_FlagSet {
	jule::Slice<jule::Trait<_1aa563e47_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1aa563e47_CommonFlag>>();


	_1aa595e02_FlagSet(jule::Slice<jule::Trait<_1aa563e47_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1aa595e02_FlagSet(void) = default;

	inline bool operator==(_1aa595e02_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1aa595e02_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8d85b77_to_str(_1a8d857c0_StructIns*);
inline jule::Bool _1a8d85e85_equals(jule::Ptr<_1a8d857c0_StructIns>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a8d863a3_same(_1a8d857c0_StructIns*,jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Ptr<_1a8d94db7_Fn> _1a8d8675a_find_method(_1a8d857c0_StructIns*,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d84e62_FieldIns> _1a8d86a68_find_field(_1a8d857c0_StructIns*,jule::Str);
struct _1a8d857c0_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1a8d82b41_Struct> _field_decl = jule::Ptr<_1a8d82b41_Struct>();
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>();
	jule::Slice<jule::Ptr<_1a8d84e62_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1a8d84e62_FieldIns>>();
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _field_methods = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1a8d9b121_ReferenceStack> _field_references = jule::Ptr<_1a8d9b121_ReferenceStack>();
	_1a8d81d2c_Operators _field_operators = _1a8d81d2c_Operators();


	_1a8d857c0_StructIns(jule::Bool __param_checked, jule::Ptr<_1a8d82b41_Struct> __param_decl, jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1a8d84e62_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1a8d94db7_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1a8d9b121_ReferenceStack> __param_references, _1a8d81d2c_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_1a8d857c0_StructIns(void) = default;

	inline bool operator==(_1a8d857c0_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1a8d857c0_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa51504c_ObjectCoder> static__1aa53614a_new(jule::Ptr<_1bce27b17_IR>&,_1aa52150e_SerializationInfo);
inline void _1aa51de35_add_indent(_1aa51504c_ObjectCoder*);
inline void _1aa51edae_done_indent(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa5205c9_indent(_1aa51504c_ObjectCoder*);
inline jule::I32 _1aa520ce4_find_type_offset(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8ea7a57_Trait>,jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Str _1aa5222e0_loc_info(_1aa51504c_ObjectCoder*,jule::Ptr<_1d7b77374_Token>&);
inline jule::Str _1aa51ba9d_links(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa516d0c_param_ins(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d971c7_ParamIns>&);
inline jule::Str _1aa51e650_param(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d9357a_Param>&);
inline jule::Str _1aa5161c4_params(_1aa51504c_ObjectCoder*,jule::Slice<jule::Ptr<_1a8d9357a_Param>>&);
inline jule::Str _1aa537921_params_ins(_1aa51504c_ObjectCoder*,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>&);
inline jule::Str _1aa551d7a_params_decls(_1aa51504c_ObjectCoder*,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>&);
inline void _1aa551eac_prepare_structure(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d82b41_Struct>&);
inline void _1aa5520de_prepare_structures(_1aa51504c_ObjectCoder*);
inline void _1aa552221_build_trait_wrapper(_1aa51504c_ObjectCoder*,jule::Ptr<_1aa514d60_TraitHash>&);
inline void _1aa552353_trait_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8ea7a57_Trait>&);
inline void _1aa552485_trait_decls(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d05013_Package>&);
inline jule::Str _1aa5525b7_structure_plain_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Str _1aa5526e9_structure_plain_decls(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa55282b_var_init_expr(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d2553e_Var>&,jule::Str);
inline jule::Str _1aa55295d_var(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d2553e_Var>);
inline jule::Str _1aa552a90_field_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d84e62_FieldIns>&);
inline jule::Str _1aa552bc2_structure_constructor(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa552d04_structure_destructor(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline void _1aa552e36_structure_operator_eq(_1aa51504c_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a8d857c0_StructIns>&);
inline void _1aa553068_structure_operator_not_eq(_1aa51504c_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a8d857c0_StructIns>&);
inline void _1aa55319a_structure_operator(_1aa51504c_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1a8d98063_FnIns>&,jule::Str);
inline jule::Str _1aa55340e_structure_operators(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa553761_structure_derive_defs_decls(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa553a5d_structure_ins_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa553d6b_structure_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Str _1aa5540d0_structure_decls(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa554487_func_head(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d98063_FnIns>&,jule::Bool);
inline jule::Str _1aa55483e_func_decl(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d94db7_Fn>&,jule::Bool);
inline jule::Str _1aa554b4c_func_decls(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d05013_Package>&);
inline void _1aa554d28_build_trait_map(_1aa51504c_ObjectCoder*);
inline void _1aa555004_process_traits(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa555268_decls(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa555620_pkg_globals(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d05013_Package>&,jule::Str&);
inline jule::Str _1aa55592d_globals(_1aa51504c_ObjectCoder*,jule::Str&);
inline jule::Str _1aa555c3b_func(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d94db7_Fn>&);
inline jule::Str _1aa556049_pkg_funcs(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d05013_Package>&);
inline jule::Str _1aa556357_structure_methods(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa556665_structure_ostream(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa556973_structure_derive_defs(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa556c81_structure_ins(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d857c0_StructIns>&);
inline jule::Str _1aa55708e_structure(_1aa51504c_ObjectCoder*,jule::Ptr<_1a8d82b41_Struct>&);
inline jule::Str _1aa557303_structures(_1aa51504c_ObjectCoder*);
inline jule::Str _1aa557567_funcs(_1aa51504c_ObjectCoder*);
inline void _1aa557886_push_init(_1aa51504c_ObjectCoder*,jule::Ptr<_1a9d05013_Package>&,jule::Str&);
inline jule::Str _1aa557b94_init_caller(_1aa51504c_ObjectCoder*,jule::Str&);
inline void _1aa557e19_append_standard(_1aa51504c_ObjectCoder*,jule::Str&);
inline jule::Str _1aa55817d_serialize(_1aa51504c_ObjectCoder*);
struct _1aa51504c_ObjectCoder {
	jule::Ptr<_1bce27b17_IR> _field_ir = jule::Ptr<_1bce27b17_IR>();
	_1aa52150e_SerializationInfo _field_info = _1aa52150e_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Str _field_trait_declarations = jule::Str();
	jule::Str _field_trait_wrappers = jule::Str();
	jule::Str _field_trait_data = jule::Str();
	jule::Str _field_trait_data_t = jule::Str();
	jule::Slice<jule::Ptr<_1aa514d60_TraitHash>> _field_trait_map = jule::Slice<jule::Ptr<_1aa514d60_TraitHash>>();
	jule::Ptr<_1aa37e504_ExprCoder> _field_ec = jule::Ptr<_1aa37e504_ExprCoder>();
	jule::Ptr<_1aa3b797c_ScopeCoder> _field_sc = jule::Ptr<_1aa3b797c_ScopeCoder>();


	_1aa51504c_ObjectCoder(jule::Ptr<_1bce27b17_IR> __param_ir, _1aa52150e_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Str __param_trait_declarations, jule::Str __param_trait_wrappers, jule::Str __param_trait_data, jule::Str __param_trait_data_t, jule::Slice<jule::Ptr<_1aa514d60_TraitHash>> __param_trait_map, jule::Ptr<_1aa37e504_ExprCoder> __param_ec, jule::Ptr<_1aa3b797c_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_trait_declarations(__param_trait_declarations), _field_trait_wrappers(__param_trait_wrappers), _field_trait_data(__param_trait_data), _field_trait_data_t(__param_trait_data_t), _field_trait_map(__param_trait_map), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1aa51504c_ObjectCoder(void) = default;

	inline bool operator==(_1aa51504c_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_trait_declarations == _other._field_trait_declarations &&
			this->_field_trait_wrappers == _other._field_trait_wrappers &&
			this->_field_trait_data == _other._field_trait_data &&
			this->_field_trait_data_t == _other._field_trait_data_t &&
			this->_field_trait_map == _other._field_trait_map &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1aa51504c_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1bce27b17_IR>,jule::Slice<_1d77ca48e_Log>> static__1bd03aea0_build(jule::Str,jule::I32);
inline void _1bd048078_append_structs(_1bce27b17_IR*,jule::Ptr<_1a9d05013_Package>&,jule::Slice<jule::Ptr<_1a8d82b41_Struct>>&);
inline jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _1a8d2086a_get_all_structures(_1bce27b17_IR*);
inline void _1a8d2bee7_order(_1bce27b17_IR*);
struct _1bce27b17_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1a9d05013_Package> _field_main = jule::Ptr<_1a9d05013_Package>();
	jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>();
	_1bd03a5a9_OrderedDefines _field_ordered = _1bd03a5a9_OrderedDefines();


	_1bce27b17_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1a9d05013_Package> __param_main, jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> __param_used, _1bd03a5a9_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1bce27b17_IR(void) = default;

	inline bool operator==(_1bce27b17_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1bce27b17_IR _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1aa598b5d_parse_integer_0(_1aa59860d_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)>);
inline std::tuple<jule::U64,jule::Bool> _1aa598b5d_parse_integer_1(_1aa59860d_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)>);
inline jule::Str _1aa598dc2_get_data(_1aa59860d_ArgParser*);
inline jule::VoidExceptional _1aa599147_process_flag(_1aa59860d_ArgParser*,jule::Trait<_1aa563e47_CommonFlag>&);
inline jule::VoidExceptional _1aa5993bc_single_dash(_1aa59860d_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1aa599642_double_dash(_1aa59860d_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1aa59981d_try_arg(_1aa59860d_ArgParser*);
inline jule::VoidExceptional _1aa5999e9_parse(_1aa59860d_ArgParser*);
struct _1aa59860d_ArgParser {
	_1aa595e02_FlagSet _field_set = _1aa595e02_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I32 _field_i = jule::I32();


	_1aa59860d_ArgParser(_1aa595e02_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I32 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1aa59860d_ArgParser(void) = default;

	inline bool operator==(_1aa59860d_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aa59860d_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1d5811d9b_push_opt_level(jule::I32);
inline jule::I32 _1d664c7c9_decode_rune(jule::I32,jule::I32);
inline std::tuple<jule::I32,jule::I32> _1d664ca71_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _1d664d104_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1d664d445_append_rune(jule::Slice<jule::U16>,jule::I32);
inline jule::Slice<jule::U16> _1d6637594_utf16_from_str(jule::Str);
inline jule::Str _1d66434a1_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1d663c28b_u16_ptr_to_str(jule::U16*);
inline jule::I32 _1d59cdd7b_get_last_errno(void);
inline jule::U32 _1d664e28c_get_std_handle(jule::U32);
inline jule::I32 _1d664e501_wstat(jule::U16*,struct stat*);
inline jule::I32 _1d664e7cb__wopen(jule::U16*,jule::I32,jule::I32);
inline jule::U32 _1d664e9c9_get_last_error(void);
inline jule::U32 _1d664ed1a_get_current_directory(jule::U32,jule::U16*);
inline jule::Bool _1d6650359_delete_file(jule::U16*);
inline jule::Bool _1d6650601_create_directory(jule::U16*);
inline jule::Bool _1d6650898_remove_directory(jule::U16*);
inline _WDIR* _1d6650b40__wopendir(jule::U16*);
inline struct _wdirent* _1d6650dd7__wreaddir(_WDIR*);
inline jule::I32 _1d665117e__wclosedir(_WDIR*);
inline jule::U32 _1d6651855_get_full_path_name(jule::U16*,jule::U32,jule::U16*,jule::U16**);
inline jule::Bool _1d6651b96_get_console_mode(jule::U32,jule::I32&);
inline jule::Bool _1d6651ed7_set_console_mode(jule::U32,jule::I32);
inline jule::Bool _1d6652515_write_console(jule::U32,jule::U16*,jule::I32,jule::I32&,void*);
inline jule::Bool _1d6652a43_read_console(jule::U32,jule::U16*,jule::I32,jule::I32&,void*);
inline jule::I32 _1d6654d75_seek(jule::I32,jule::I32,jule::I32);
inline jule::I32 _1d6655260_read(jule::I32,void*,jule::U32);
inline jule::I32 _1d6655590_close(jule::I32);
inline jule::I32 _1d665597a_write(jule::I32,void*,jule::U32);
inline void _1d6655b89_exit(jule::I32);
inline std::tuple<jule::I32,jule::I32> _1d6733915_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I32> _1d6733e98_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I32 _1d67344d7_rune_len(jule::I32);
inline jule::I32 _1d67348b1_encode_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1d6734c02_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1d6735043_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::I32 _1d6735582_rune_count_str(jule::Str);
inline jule::Bool _1d6735829_rune_start(jule::U8);
inline jule::I32 _1d67d7623_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _1d67db704_args(void);
inline jule::Exceptional<jule::Str> _1d67dbb44_working_dir(void);
inline jule::Exceptional<jule::Str> _1d67dc57e___getwd(void);
inline jule::Slice<jule::U8> _1d686e237_stobs(jule::Str&);
inline jule::Bool _1d773155a_is_letter(jule::I32);
inline jule::Bool _1d776ad03_is16(jule::Slice<_1d77691b9_Range16>,jule::U16);
inline jule::Bool _1d776b144_is32(jule::Slice<_1d7769681_Range32>,jule::U32);
inline jule::Bool _1d776b85e_is_excluding_latin(jule::Ptr<_1d7769b04_RangeTable>,jule::I32);
inline jule::Str _1d68791dc_repeat(jule::Str,jule::I32);
inline jule::Bool _1d770aa84__has_prefix(jule::Str&,jule::Str&,jule::I32);
inline jule::Bool _1d7728e59_has_prefix(jule::Str,jule::Str);
inline jule::Bool _1d772564d__has_suffix(jule::Str&,jule::Str&,jule::I32);
inline jule::Bool _1d770b106_has_suffix(jule::Str,jule::Str);
inline jule::I32 _1d770b634_find_at(jule::Str,jule::Str,jule::I32);
inline jule::I32 _1d687dae8_find_last_at(jule::Str,jule::Str,jule::I32);
inline jule::I32 _1d687dc2a_find_last(jule::Str,jule::Str);
inline jule::I32 _1d749e0ca__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::I32 _1d749e570_find_last_byte(jule::Str,jule::U8);
inline jule::I32 _1d749ea48_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _1d749ecac_split(jule::Str,jule::Str,jule::I32);
inline jule::Bool _1d749edde_contains(jule::Str,jule::Str);
inline jule::Bool _1d770bdc6_contains_any(jule::Str,jule::Str);
inline jule::Str _1d776bed0_replace(jule::Str,jule::Str,jule::Str,jule::I32);
inline void _1d749e33e__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1d776c92b_trim_left(jule::Str,jule::Str);
inline void _1d776ca5d__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1d776ccc2_trim(jule::Str,jule::Str);
inline jule::Bool _1d67b636b_is_path_sep(jule::U8);
inline jule::Bool _1d67b44bd_is_slash(jule::U8);
inline jule::U8 _1d67b4600_to_upper(jule::U8);
inline jule::I32 _1d67b429d_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1d67b207b_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d67b2323_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d67b2653___abs(jule::Str);
inline jule::Str _1d67b28ea___join(jule::Slice<jule::Str>);
inline jule::Str _1d683420d_clean(jule::Str);
inline jule::Str _1d6842738_from_slash(jule::Str);
inline jule::Str _1d685188a_join(jule::Slice<jule::Str>);
inline jule::Str _1d685245c_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1d6853edb_abs(jule::Str);
inline jule::Str _1d683bed5_base(jule::Str);
inline jule::Str _1d682eacc_dir(jule::Str);
inline jule::Str _1d6845263_volume_name(jule::Str);
inline jule::I32 _1d58a005a_get_last_fs_error(void);
inline jule::Bool _1d6736396_is_console_handle(jule::U32);
inline jule::I32 _1d781a6aa_get_last_process_error(void);
inline jule::Slice<wchar_t*> _1d782a3ce_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1d782a6a9_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I32 _1d782a9d9_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::I32 _1d782adc4_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _1d782bac8_exit(jule::I32);
inline jule::Str _1d782bcc6_executable(void);
inline jule::Bool _1d77bdeaa_is_std_header_path(jule::Str);
inline jule::Bool _1d77be0dc_is_valid_header_ext(jule::Str);
inline jule::Bool _1d77be285_is_valid_cpp_ext(jule::Str);
inline jule::Str _1d77ca8ce_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1d77cabba_arg_to_str(jule::Any);
inline jule::I32 _1d77cae62_find_next_fmt(jule::Str);
inline jule::Str _1d77cb2e7_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d77cc20a_is_top_directive(jule::Str);
inline jule::Bool _1d77cd98c_is_windows(jule::Str);
inline jule::Bool _1d77cdc78_is_darwin(jule::Str);
inline jule::Bool _1d77ce020_is_linux(jule::Str);
inline jule::Bool _1d77ce30b_is_i386(jule::Str);
inline jule::Bool _1d77ce5a3_is_amd64(jule::Str);
inline jule::Bool _1d77ce84a_is_arm64(jule::Str);
inline jule::Bool _1d77ceae2_is_unix(jule::Str);
inline jule::Bool _1d77cee22_is_32bit(jule::Str);
inline jule::Bool _1d77d01b9_is_64bit(jule::Str);
inline void _1d78191d1_init(void);
inline jule::Bool _1d7b77ab1_is_unary_op(jule::Str);
inline jule::Bool _1d7b77d9c_is_bin_op(jule::Str);
inline jule::Bool _1d7b78430_is_str(jule::Str);
inline jule::Bool _1d7b786c7_is_raw_str(jule::Str);
inline jule::Bool _1d7b7896e_is_rune(jule::Str);
inline jule::Bool _1d7b79046_is_bool(jule::Str);
inline jule::Bool _1d7b792dd_is_float(jule::Str);
inline jule::Bool _1d7b79585_is_num(jule::Str);
inline jule::Bool _1d7b79ac4_is_ignore_ident(jule::Str);
inline jule::Bool _1d7b79d6b_is_anon_ident(jule::Str);
inline jule::Bool _1d7b7a3aa_is_space(jule::I32);
inline jule::Bool _1d7b7a773_is_letter(jule::I32);
inline jule::Bool _1d7b7acb2_is_decimal(jule::U8);
inline jule::Bool _1d7b7b059_is_binary(jule::U8);
inline jule::Bool _1d7b7b301_is_octal(jule::U8);
inline jule::Bool _1d7b7b598_is_hex(jule::U8);
inline jule::Bool _1d7b7b840_is_assign(jule::U32);
inline jule::Bool _1d7b7bad7_is_postfix_op(jule::Str);
inline jule::Bool _1d7b7bd7e_is_assign_op(jule::Str);
inline jule::Ptr<_1d7b7c764_File> _1d7b7dc93_new_file_set(jule::Str);
inline _1d77ca48e_Log _1d7b80316_make_err(jule::I32,jule::I32,jule::Ptr<_1d7b7c764_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1d7b8069b_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1d7b809dc_float_fmt_e(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b80d72_float_fmt_p(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b811b3_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b81504_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b81845_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b81c1e_float_num(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b81eb6_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1d7b8225d_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1d7b8259e_is_float_fmt_e(jule::U8,jule::I32);
inline jule::Bool _1d7b828e0_is_float_fmt_p(jule::U8,jule::I32);
inline jule::Bool _1d7b82c31_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Bool _1d7b83072_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Bool _1d7b833b3_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b8377b_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1d7b83a23_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1d7b83d64_hex_escape(jule::Slice<jule::U8>&,jule::I32);
inline jule::Str _1d7b84150_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d7b8442a_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d7b846b1_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1d7b84958_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1d77ca48e_Log> _1d7b89452_lex(jule::Ptr<_1d7b7c764_File>,jule::I32);
inline jule::Bool _1d79b93d6_find_module_file(jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>&);
inline jule::Str _1d79bab79_find_module_file_deep(jule::Str);
inline jule::Slice<_1d77ca48e_Log> _1d79cd9d3_check_module_file(jule::Str);
inline jule::Ptr<_1d82bd305_FileInfo> _1d82bd6ce_parse_file(jule::Ptr<_1d7b7c764_File>);
inline std::tuple<jule::Ptr<_1d7a43eaa_Ast>,jule::Slice<_1d77ca48e_Log>> _1d83132d4_parse_fileset(jule::Ptr<_1d7b7c764_File>);
inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8313ed8_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1d83142e6_is_st(jule::Ptr<_1d7b77374_Token>,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1d831467b_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&);
inline std::tuple<jule::I32,jule::Bool> _1d8314a00_next_st_pos(jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Bool> _1d8314d41_skip_st(jule::I32&,jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Slice<jule::Ptr<_1d831513d_Stmt>> _1d83154d4_split_stmts(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d8322337_CallData> _1d832269a_get_call_data(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d8322986_get_block_expr(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d8322c2d_split_colon(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::I32 _1d8323019_find_lowest_prec_op(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7b8a0e0_IdentExpr> _1d83232b1_build_ident_expr(jule::Ptr<_1d7b77374_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::I32> _1d8323558_get_range_expr_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Bool _1d832de59_check_assign_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline _1d77ca48e_Log _1d8330268_make_err(jule::I32,jule::I32,jule::Ptr<_1d7b7c764_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d833070d_range(jule::I32&,jule::Str,jule::Str,jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83309a5_range_last(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>,jule::Slice<_1d77ca48e_Log>> _1d8330dd4_parts(jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::U32,jule::Bool);
inline jule::Str _1d83311c0_get_close_kind_of_brace(jule::Str);
inline _1d77ca48e_Log _1d8331599_compiler_err(jule::Ptr<_1d7b77374_Token>&,jule::Str&,jule::Slice<jule::Any>);
inline void _1d83318eb_push_suggestion(_1d77ca48e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1d8331c2b_tokstoa(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8341d4b_build_void_type(void);
inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83420c1_build_prim_type(jule::Ptr<_1d7b77374_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::I32> _1d8342412_split_map_range(jule::Slice<jule::Ptr<_1d7b77374_Token>>&,jule::I32&);
inline jule::I32 _1a9b7bb8c_leading_zeros64(jule::U64);
inline jule::I32 _1a9b7c5d8_trailing_zeros(jule::U32);
inline jule::I32 _1a9b7ce57_trailing_zeros32(jule::U32);
inline jule::I32 _1a9b7d1ee_trailing_zeros64(jule::U64);
inline jule::I32 _1a9b83226_len32(jule::U32);
inline jule::I32 _1a9b834bd_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a9b8417d_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1a9b85811_mul64(jule::U64,jule::U64);
inline jule::U32 _1a948916a_f32_bits(jule::F32);
inline jule::F32 _1a9489456_f32_from_bits(jule::U32);
inline jule::U64 _1a9a9ecad_f64_bits(jule::F64);
inline jule::F64 _1a9aa0099_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I32> _1a9aa2013_frexp(jule::F64);
inline jule::F64 _1a9b496d7_nan(void);
inline jule::Bool _1a9b23bab_is_nan(jule::F64);
inline jule::F64 _1a9aed3b1_inf(jule::I32);
inline jule::Bool _1a9aee390_is_inf(jule::F64,jule::I32);
inline std::tuple<jule::F64,jule::I32> _1a9b15791_normalize(jule::F64);
inline jule::F64 _1a9b892e8_log(jule::F64);
inline jule::F64 _1a9b898c0_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1a9b8b1c9_modf(jule::F64);
inline jule::F64 _1a9b8b5e7_log2(jule::F64);
inline jule::Str _1a94b8595_fmt_float(jule::F64,jule::U8,jule::I32,jule::I32);
inline jule::Slice<jule::U8> _1a94dc4ed_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::I32,jule::I32);
inline jule::Slice<jule::U8> _1a94eb760_big_ftoa(jule::Slice<jule::U8>,jule::I32,jule::U8,jule::Bool,jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline jule::Slice<jule::U8> _1a9550264_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1a948d04d_DecimalSlice,jule::I32,jule::U8);
inline void _1a9581b25_round_shortest(_1a9ba7514_Decimal&,jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline jule::Slice<jule::U8> _1a9584045_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1a948d04d_DecimalSlice,jule::I32,jule::U8);
inline jule::Slice<jule::U8> _1a96847a5_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1a948d04d_DecimalSlice,jule::I32);
inline jule::Slice<jule::U8> _1a96943ca_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline jule::Slice<jule::U8> _1a96b9444_fmt_x(jule::Slice<jule::U8>,jule::I32,jule::U8,jule::Bool,jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline jule::I32 _1a96bb204_min(jule::I32,jule::I32);
inline jule::I32 _1a96eb82d_max(jule::I32,jule::I32);
inline jule::U8 _1a97661a0_lower(jule::U8);
inline std::tuple<jule::U64,jule::I32> _1a9774d18___parse_uint(jule::Str,jule::I32,jule::I32);
inline jule::Exceptional<jule::U64> _1a9833d61_parse_uint(jule::Str,jule::I32,jule::I32);
inline jule::Exceptional<jule::I64> _1a990d512_parse_int(jule::Str,jule::I32,jule::I32);
inline std::tuple<jule::F64,jule::Bool> _1a99879cb_eisel_lemire64(jule::U64,jule::I32,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a9987d1c_eisel_lemire32(jule::U64,jule::I32,jule::Bool);
inline jule::I32 _1a9a6d364_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::Bool> _1a9a7e94c_special(jule::Str);
inline std::tuple<jule::U64,jule::I32,jule::Bool,jule::Bool,jule::Bool,jule::I32,jule::Bool> _1a95b31d9_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1a94b91de_atof64exact(jule::U64,jule::I32,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1a9860b3a_atof32exact(jule::U64,jule::I32,jule::Bool);
inline std::tuple<jule::F64,jule::I32> _1a9861014_atof_hex(jule::Str,_1a9945e62_FloatInfo&,jule::U64,jule::I32,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::I32,jule::I32> _1a99848c9_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::I32> _1a96baa94_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::I32> _1a97d71aa_parse_float_prefix(jule::Str,jule::I32);
inline jule::Exceptional<jule::F64> _1a96c9058_parse_float(jule::Str,jule::I32);
inline void _1a9489ae9_ryu_ftoa_fixed32(_1a948d04d_DecimalSlice&,jule::U32,jule::I32,jule::I32);
inline void _1a96916b3_ryu_ftoa_fixed64(_1a948d04d_DecimalSlice&,jule::U64,jule::I32,jule::I32);
inline void _1a96917e5_format_decimal(_1a948d04d_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::I32);
inline void _1a9691927_ryu_ftoa_shortest(_1a948d04d_DecimalSlice&,jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline jule::I32 _1a97728a4_mul_by_log2_log10(jule::I32);
inline jule::I32 _1a97729d6_mul_by_log10_log2(jule::I32);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I32> _1a9772b18_compute_bounds(jule::U64,jule::I32,_1a9945e62_FloatInfo&);
inline void _1a9ba6931_ryu_digits(_1a948d04d_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1a9ba6a63_ryu_digits32(_1a948d04d_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::I32);
inline std::tuple<jule::U32,jule::I32,jule::Bool> _1a9ba6b95_mult64bit_pow10(jule::U32,jule::I32,jule::I32);
inline std::tuple<jule::U64,jule::I32,jule::Bool> _1a9ba6cc7_mult128bit_pow10(jule::U64,jule::I32,jule::I32);
inline jule::Bool _1a9ba6e09_divisible_by_pow5(jule::U64,jule::I32);
inline std::tuple<jule::U32,jule::U32> _1a9ba703b_divmod1e9(jule::U64);
inline void _1a9ba8070_trim(_1a9ba7514_Decimal&);
inline void _1a9ba81a2_right_shift(_1a9ba7514_Decimal&,jule::U32);
inline jule::Bool _1a9ba82d4_prefix_is_less_than(jule::Array<jule::U8,800>,jule::I32,jule::Str);
inline void _1a9ba8416_left_shift(_1a9ba7514_Decimal&,jule::U32);
inline jule::Bool _1a9ba8548_should_round_up(_1a9ba7514_Decimal&,jule::I32);
inline jule::Str _1a9ba8834_fmt_uint(jule::U64,jule::I32);
inline jule::Str _1a9ba8966_fmt_int(jule::I64,jule::I32);
inline jule::Str _1a9ba8a98_itoa(jule::I32);
inline jule::Str _1a9ba8bca_small(jule::I32);
inline jule::Bool _1a9ba8d0c_is_power_of_two(jule::I32);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a9ba8e3e_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::I32,jule::Bool,jule::Bool);
inline void _1a9c50117_lshift_unsig(_1a9c46e77_Const&,_1a9c46e77_Const&);
inline void _1a9c50414_rshift_unsig(_1a9c46e77_Const&,_1a9c46e77_Const&);
inline jule::Str _1a9cceb47_real_kind_of(jule::Str);
inline jule::I32 _1a9ccedde_bitsize_of(jule::Str);
inline jule::Str _1a9cd01ca_int_from_bits(jule::I32);
inline jule::Str _1a9cd0472_uint_from_bits(jule::I32);
inline jule::Str _1a9cd0719_float_from_bits(jule::I32);
inline jule::Bool _1a9cd1275_check_bit_float(jule::Str,jule::I32);
inline jule::I32 _1a9cd151c_bitsize_of_float(jule::F64);
inline jule::I32 _1a9cd17b4_bitsize_of_int(jule::I64);
inline jule::I32 _1a9cd1a5b_bitsize_of_uint(jule::U64);
inline void _1a9cd1bc1_update_target(void);
inline void _1a9cd1d36_init(void);
inline jule::F64 _1a9cd4212_min(jule::Str);
inline jule::F64 _1a9cd44ed_max(jule::Str);
inline jule::Bool _1a9cd4960_is_i8_compatible(jule::Str);
inline jule::Bool _1a9cd4c4b_is_i16_compatible(jule::Str);
inline jule::Bool _1a9cd4ee3_is_i32_compatible(jule::Str);
inline jule::Bool _1a9cd52ce_is_i64_compatible(jule::Str);
inline jule::Bool _1a9cd5576_is_u8_compatible(jule::Str);
inline jule::Bool _1a9cd581d_is_u16_compatible(jule::Str);
inline jule::Bool _1a9cd5ab5_is_u32_compatible(jule::Str);
inline jule::Bool _1a9cd5de5_is_u64_compatible(jule::Str);
inline jule::Bool _1a9cd618c_is_f32_compatible(jule::Str);
inline jule::Bool _1a9cd6434_is_f64_compatible(jule::Str);
inline jule::Bool _1a9cd6775_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1a9cd6a1c_is_i16_greater(jule::Str);
inline jule::Bool _1a9cd6cb4_is_i32_greater(jule::Str);
inline jule::Bool _1a9cd705b_is_i64_greater(jule::Str);
inline jule::Bool _1a9cd7303_is_u16_greater(jule::Str);
inline jule::Bool _1a9cd76bb_is_u32_greater(jule::Str);
inline jule::Bool _1a9cd7963_is_u64_greater(jule::Str);
inline jule::Bool _1a9cd7c0a_is_f32_greater(jule::Str);
inline jule::Bool _1a9cd7ea2_is_f64_greater(jule::Str);
inline jule::Bool _1a9cd82e3_is_greater(jule::Str,jule::Str);
inline jule::Bool _1a9cd9415_is_sig_int(jule::Str);
inline jule::Bool _1a9cd9701_is_unsig_int(jule::Str);
inline jule::Bool _1a9cd9998_is_int(jule::Str);
inline jule::Bool _1a9cd9c84_is_float(jule::Str);
inline jule::Bool _1a9cda02b_is_num(jule::Str);
inline jule::Bool _1a9d59dd1_is_ascii(jule::I32);
inline jule::I32 _1a9d5b8a5_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a9d5b9d7_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a9d5bc5c_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a9d5c004_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a9d5c345_rune_from_esq_seq(jule::Slice<jule::U8>,jule::I32&);
inline jule::Slice<jule::U8> _1a9d5c686_str_esq_seq(jule::Slice<jule::U8>,jule::I32&);
inline jule::I32 _1a9e29d91_find_format_prefix(jule::Slice<jule::U8>&,jule::I32&);
inline jule::Slice<jule::U8> _1a9e189ea_get_format_range(jule::I32&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a9e18b2c_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a9e18302_apply_fmt_by_default(jule::I32&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a9e18434_apply_fmt(jule::Slice<jule::U8>&,jule::I32&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a9e191d2_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1a9e19314_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a8d99a6a_kind_uses_generics(jule::Ptr<_1a9d9ae66_TypeKind>,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>&);
inline jule::Bool _1a8d99e44_parameter_uses_generics(jule::Ptr<_1a8d9357a_Param>&,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>&);
inline jule::Ptr<_1a9d9ed05_TypeSymbol> _1a8d9c7d7_build_type(jule::Ptr<_1d7a0e75b_TypeDecl>);
inline jule::Ptr<_1a9d72ca6_Value> _1a8d9cac3_build_expr(jule::Ptr<_1d7b09a43_Expr>);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a8d9cd6a_build_type_alias(jule::Ptr<_1d7b8e8b9_TypeAliasDecl>);
inline jule::Ptr<_1bd010a02_Field> _1a8d9d156_build_field(jule::Ptr<_1d7b90d82_FieldDecl>);
inline jule::Slice<jule::Ptr<_1bd010a02_Field>> _1a8d9d3ed_build_fields(jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>>&);
inline jule::Ptr<_1a8d82b41_Struct> _1a8d9d695_build_struct(jule::Ptr<_1d7b916e0_StructDecl>);
inline jule::Ptr<_1a8d9357a_Param> _1a8d9d93c_build_param(jule::Ptr<_1d7b8d0b0_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a8d9357a_Param>> _1a8d9dc6c_build_params(jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>&);
inline jule::Ptr<_1a8d92da4_RetType> _1a8d9e014_build_ret_type(jule::Ptr<_1d7a17db3_RetTypeDecl>);
inline jule::Ptr<_1a8d94db7_Fn> _1a8d9e2ab_build_fn(jule::Ptr<_1d7b8d29c_FnDecl>);
inline jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _1a8d9e553_build_methods(jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>&);
inline jule::Ptr<_1a8ea7a57_Trait> _1a8d9e7ea_build_trait(jule::Ptr<_1d7b91cea_TraitDecl>);
inline jule::Ptr<_1a93b2c75_EnumItem> _1a8d9ea92_build_enum_item(jule::Ptr<_1d7b9016c_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>> _1a8d9ed39_build_enum_items(jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>>&);
inline jule::Ptr<_1a943b309_Enum> _1a8da00d1_build_enum(jule::Ptr<_1d7b9058a_EnumDecl>);
inline jule::Ptr<_1a9d2553e_Var> _1a8da0499_build_var(jule::Ptr<_1d7b8d489_VarDecl>);
inline jule::Slice<jule::Ptr<_1a9d2553e_Var>> _1a8da0741_build_vars(jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>>);
inline jule::Ptr<_1a922a34b_Impl> _1a8da09d8_build_impl(jule::Ptr<_1d7b92405_Impl>);
inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9c60d3c_new_scope_checker_base(jule::Ptr<_1a9d0a03a_Sema>&,jule::Ptr<_1a8d98063_FnIns>);
inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9c7656c_new_scope_checker(jule::Ptr<_1a9d0a03a_Sema>&,jule::Ptr<_1a8d98063_FnIns>);
inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9c8a11e_find_label_parent(jule::Str,jule::Ptr<_1a9cdbc53_ScopeChecker>);
inline jule::Bool _1a9ca5d71_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1a9cc76bc_Scope>&);
inline jule::I32 _1a9ca858d_count_match_type(jule::Ptr<_1a9cdad95_Match>&,jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _1a9ca8d1e_get_datas_from_tuple_data(jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Slice<jule::Any> _1a9ca9957_get_expr_models(jule::Any&);
inline jule::Bool _1a9cabd77_check_mut(jule::Ptr<_1a9d0a03a_Sema>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9cac608_check_assign(jule::Ptr<_1a9d0a03a_Sema>&,jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1d7b77374_Token>);
inline jule::Bool _1a9cacd9a_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1a9cb4e29_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1a9cb5666_st_is_def(jule::Any&);
inline jule::Ptr<_1a9d2553e_Var> _1a9d00371_find_var_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d007e4_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d82b41_Struct> _1a9d00bbd_find_struct_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a8d94db7_Fn> _1a9d010ec_find_fn_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9d0143d_find_trait_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1a943b309_Enum> _1a9d0177e_find_enum_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Str);
inline jule::Bool _1a9d072bd_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1a9d08258_is_valid_model_for_ref(jule::Any&);
inline _1d77ca48e_Log _1a9d08698_compiler_err(jule::Ptr<_1d7b77374_Token>&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a9d089d9_imp_is_lookupable(jule::Ptr<_1a9d02351_ImportInfo>&,jule::Str);
inline void _1a9d08cd6_append_ret_vars(jule::Slice<jule::Ptr<_1a9d2553e_Var>>&,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d0908e_append_param_vars(jule::Slice<jule::Ptr<_1a9d2553e_Var>>&,jule::Ptr<_1a8d98063_FnIns>&);
inline void _1a9d0938b_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>&,jule::Ptr<_1a8d98063_FnIns>&);
inline jule::Ptr<_1a9d6baa2_SymbolTable> _1a9d096bb_find_file(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>&,jule::Ptr<_1d7b7c764_File>&);
inline void _1a9d09aa6_push_suggestion(_1d77ca48e_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a9d3dd2c_trait_has_reference_receiver(jule::Ptr<_1a8ea7a57_Trait>&);
inline jule::Bool _1a9d5c8d9_float_assignable(jule::Str,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9d5ca1b_sig_assignable(jule::Str,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9d5cb4d_unsig_assignable(jule::Str,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9d5cc80_int_assignable(jule::Str,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1d7a4352b_Directive> _1a9d95bec_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline jule::Any _1a9d96082_find_builtins_import(jule::Str,jule::Ptr<_1a9d02351_ImportInfo>);
inline void _1a9d96291_fit_bitsize(jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d9658d_make_struct_lit_alloc(jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a8d8854d_StructLitExprModel>&);
inline jule::Ptr<_1a9d2553e_Var> _1a9d968ce_build_error_var(jule::Ptr<_1a9cc76bc_Scope>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&);
inline jule::Any _1a9d96c20_find_builtins_sema(jule::Str,jule::Ptr<_1a9d0a03a_Sema>);
inline jule::Bool _1a9d96eb7_is_ok_for_shifting(jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9d972e7_is_instanced_struct(jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Bool _1a9d97605_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d977d1_apply_cast_kind_model(jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d979e0_apply_cast_kind(jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9d97bdd_build_void_data(void);
inline jule::Str _1a9d97ec9_check_data_for_integer_indexing(jule::Ptr<_1a9d71c2d_Data>&);
inline void _1a9d982b5_apply_cast_model_by_enum(jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a943b309_Enum>);
inline void _1a9d9855c_cast_const_by_type(jule::Str&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9d997a0_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline jule::Bool _1a9da8061_can_get_ptr(jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1a9da8308_is_valid_for_sptr_type(jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9da85e4_is_valid_for_ref(jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Bool _1a9da88d0_is_builtin_str_convertable(jule::Ptr<_1a9d9ae66_TypeKind>&);
inline jule::Str _1a9da8baa_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>&);
inline jule::Ptr<_1a9da06b8_Prim> _1a9da8e41_build_prim_type(jule::Str);
inline jule::Ptr<_1a8d82b41_Struct> _1a9da9271_get_struct_from_kind(jule::Ptr<_1a9d9ae66_TypeKind>);
inline jule::Bool _1a9da9518_is_prim(jule::Str);
inline void _1a9db2257_apply_implicit_cast(jule::Ptr<_1a9d9ae66_TypeKind>&,jule::Ptr<_1a9d71c2d_Data>&);
inline std::tuple<jule::Ptr<_1a9d6baa2_SymbolTable>,jule::Slice<_1d77ca48e_Log>> _1a9db4de7_build_symbols(jule::Ptr<_1d7a43eaa_Ast>&,jule::Trait<_1a9ceeedb_Importer>&,jule::Ptr<_1a8da1038_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1a9d05013_Package>,jule::Slice<_1d77ca48e_Log>> _1a9db5326___analyze_package(jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>&,jule::Trait<_1a9ceeedb_Importer>&,jule::I32&);
inline std::tuple<jule::Ptr<_1a9d05013_Package>,jule::Slice<_1d77ca48e_Log>> _1a9db5711_analyze_package(jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>,jule::Trait<_1a9ceeedb_Importer>,jule::I32);
inline jule::Ptr<_1a8d98063_FnIns> _1a9dbe3c9_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9dc1486_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1a8ea7a57_Trait> _1a9dc1ec0_find_builtin_trait(jule::Str);
inline jule::Any _1a9dc291b_find_builtin_def(jule::Str);
inline jule::Any _1a9deb439_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a9dec58e_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a9dd95e2_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a9e19446_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1a9d71c2d_Data> _1a9dbc96b_builtin_caller_common_plain(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9dc4ab6_builtin_caller_common(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e069e9_builtin_caller_common_mut(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9dd8d50_builtin_caller_error(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9dd8e82_builtin_caller_out(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e42408_builtin_caller_outln(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e4253a_builtin_caller_new(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e4289d_builtin_caller_panic(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e429d0_builtin_caller_make(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e42b12_builtin_caller_append(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e42c44_builtin_caller_copy(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e42d76_builtin_caller_clone(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e42ea8_builtin_caller_assert(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e430da_builtin_caller_std_mem_size_of(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e4321c_builtin_caller_std_mem_align_of(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e4334e_builtin_caller_std_mem_free(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e4377d_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e43b9b_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e44097_builtin_caller_std_debug_out(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Ptr<_1a9d71c2d_Data> _1a9e444b5_builtin_caller_std_debug_outln(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1d7953183_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1d79532b5_check_arch(jule::Str);
inline jule::Bool _1d796c796_is_pass_file_annotation(jule::Str);
inline void _1d796d92e_set_os_vars(jule::Slice<jule::Str>&);
inline void _1d796db82_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1d796de3a_init_vars(jule::Slice<jule::Str>&,_1d796d621_CompileInfo&);
inline jule::Slice<jule::U8> _1bcde93d0_read_buff(jule::Str);
inline _1d77ca48e_Log _1bce291bd_flat_compiler_err(jule::Str);
inline void _1a8d36ae5_push_passes(jule::Ptr<_1a9d05013_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a8d43c45_get_all_unique_passes(jule::Ptr<_1a9d05013_Package>&,jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>);
inline _1d796d621_CompileInfo _1a8d4d69a_build_compile_info(void);
inline jule::Ptr<_1d7a4352b_Directive> _1bce79d12_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline jule::Bool _1bd01a600_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline jule::Bool _1bce6d4ba_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1bce6da81_is_dead(jule::Any);
inline void _1bce6e147_drop_ref(jule::Slice<jule::Any>&,jule::I32);
inline jule::Bool _1bcdebd72_is_all_references_are_dead(jule::Ptr<_1a8d9b121_ReferenceStack>);
inline jule::Bool _1bcdec3a0_is_fn_dead(jule::Ptr<_1a8d98063_FnIns>);
inline jule::Bool _1bd01035e_is_var_dead(jule::Ptr<_1a9d2553e_Var>);
inline jule::Bool _1a9e4488e_is_struct_dead(jule::Ptr<_1a8d857c0_StructIns>);
inline jule::Bool _1a9e449c1_is_trait_dead(jule::Ptr<_1a8ea7a57_Trait>);
inline void _1a9e44b03_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a8d94db7_Fn>>&);
inline void _1a9e44c35_eliminate_dead_globals(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e44d67_eliminate_dead_functions_package(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e4543e_keep_alive_init(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e45571_eliminate_package(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e456a3_eliminate_defines(jule::Ptr<_1bce27b17_IR>&);
inline void _1a9e46154_eliminate_dead_code_of_scope(jule::Ptr<_1a9cc76bc_Scope>);
inline void _1a9e46286_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a8d94db7_Fn>>&);
inline void _1a9e463b8_eliminate_functions_scope_package(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e464ea_eliminate_scope_package(jule::Ptr<_1a9d05013_Package>&);
inline void _1a9e4662c_eliminate_scopes(jule::Ptr<_1bce27b17_IR>&);
inline void _1a9e6820e_throw(jule::Str);
inline jule::Bool _1aa4c1080_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1aa4c13d2_is_constant_valid_conditional_case(jule::Ptr<_1a9cce0b9_If>&);
inline jule::Bool _1aa4c1646_is_unreachable_expr(jule::Any&);
inline jule::Bool _1aa4c1976_is_constant_valid_match_case(jule::Ptr<_1a9cdb2b3_Case>&);
inline jule::Bool _1aa4c1c51_is_unreachable_conditional_case(jule::Ptr<_1a9cce0b9_If>&);
inline jule::Bool _1aa4c202b_is_unreachable_match_case(jule::Ptr<_1a9cdb2b3_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1aa4c9187_check_for_bit_shift_opt(jule::Ptr<_1a8d8742b_OperandExprModel>&,jule::Ptr<_1a8d8742b_OperandExprModel>&);
inline jule::U64 _1aa551165_unix(void);
inline jule::U64 _1aa5514a6_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _1aa55183b_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _1aa4b765e_is_copy_optimizable(jule::Ptr<_1a9d71c2d_Data>&);
inline jule::Bool _1aa4b7791_is_iter_copy_optimizable(jule::Ptr<_1a9d71c2d_Data>&,jule::Ptr<_1a9d2553e_Var>&);
inline jule::Str _1aa4d49cd_concat_all_parts(jule::Slice<jule::Ptr<_1d7b77374_Token>>);
inline jule::Str _1aa4d4cb9_decompose_common_esq(jule::U8);
inline jule::Str _1aa4d5061_sbtoa(jule::U8);
inline jule::Str _1aa4d534c_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1aa4d55e4_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1aa4d5935_ftoa(jule::F64,jule::I32);
inline jule::Str _1aa4d5bcc_itoa(jule::I64);
inline jule::Str _1aa4d600c_utoa(jule::U64);
inline jule::Bool _1aa4d62a4_is_forwarded(jule::Ptr<_1a9cc76bc_Scope>&);
inline jule::Bool _1aa4d6590_is_builtin_call_has_debuginf(jule::Ptr<_1a8d896d6_FnCallExprModel>&);
inline jule::Bool _1aa5584d0_is_cpp_header_file(jule::Str);
inline jule::Ptr<_1d7a4352b_Directive> _1aa559437_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline jule::Bool _1aa5597bc_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>&,jule::Str);
inline void _1d77927ec_print_error_message(jule::Str);
inline void _1d77a9d31_help(jule::Slice<jule::Str>&);
inline void _1d77ab43c_version(jule::Slice<jule::Str>&);
inline void _1d77abbce_tool_distos(void);
inline void _1d77ac471_tool_distarch(void);
inline void _1d77acc13_tool(jule::Slice<jule::Str>&);
inline void _1d77ad4a5_julenv(jule::Slice<jule::Str>&);
inline void _1d77bd262_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1d778ec6c_process_command(jule::Slice<jule::Str>&);
inline void _1d77a924d_show_info(void);
void entry_point(void);
inline void _1d77a8978_enable_vtp(void);
inline void _1d779b097_init(void);
inline void _1aa567225_write_output(jule::Str,jule::Str);
inline void _1aa56ade9_clear_objects(void);
inline void _1aa57d912_compile_ir(jule::Str,jule::Str);
inline void _1aa564299_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1aa5688b9_is_cpp_source_file(jule::Str);
inline void _1aa575c6c_push_comp_cmd_clang(jule::Str&);
inline void _1aa563ed0_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1aa564d49_gen_compile_cmd(jule::Str,jule::Ptr<_1bce27b17_IR>&);
inline jule::Str _1aa56c68c_get_compile_path(void);
inline void _1aa599c19_apply_target_independent_optimizations(jule::Ptr<_1bce27b17_IR>&);
inline void _1aa599d4b_check_compiler_flag(void);
inline void _1aa599e7d_check_target_arch(jule::Str);
inline void _1aa59a0b0_check_target_os(jule::Str);
inline void _1aa59a1e2_check_target_flag(jule::Str&);
inline void _1aa59a555_check_opt_flag(jule::Str&);
inline void _1aa59a687_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1aa59a7b9_check_flags(jule::Slice<jule::Str>&);
inline void _1aa59a8eb_setup_sema_flags(jule::I32&);
inline jule::Ptr<_1bce27b17_IR> _1aa59aa2d_build_ir(jule::Slice<jule::Str>&);
inline void _1aa59ab60_compile_command(jule::Slice<jule::Str>&);


struct _1a9e3be3b_ReaderMptrData {
	jule::Exceptional<jule::I32>(*_1a9e3bce8_read)(jule::Trait<_1a9e3be3b_Reader>,jule::Slice<jule::U8>);
};

struct _1a9e3c36a_WriterMptrData {
	jule::Exceptional<jule::I32>(*_1a9e3c227_write)(jule::Trait<_1a9e3c36a_Writer>,jule::Slice<jule::U8>);
};

struct _1a9e3c942_WriterCloserMptrData {
	jule::Exceptional<jule::I32>(*_1a9e3c623_write)(jule::Trait<_1a9e3c942_WriterCloser>,jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1a9e3c7ee_close)(jule::Trait<_1a9e3c942_WriterCloser>);
};

struct _1a9e3d190_StreamMptrData {
	jule::Exceptional<jule::I32>(*_1a9e3cc3e_read)(jule::Trait<_1a9e3d190_Stream>,jule::Slice<jule::U8>);
	jule::Exceptional<jule::I32>(*_1a9e3d04c_write)(jule::Trait<_1a9e3d190_Stream>,jule::Slice<jule::U8>);
};

struct _1a9ceeedb_ImporterMptrData {
	void(*_1a9cede0d_set_mod_path)(jule::Trait<_1a9ceeedb_Importer>,jule::Str);
	jule::Str(*_1a9cee150_get_mod_path)(jule::Trait<_1a9ceeedb_Importer>);
	jule::Str(*_1a9cee45d_mod_by_id)(jule::Trait<_1a9ceeedb_Importer>,jule::I32);
	jule::Ptr<_1a9d02351_ImportInfo>(*_1a9cee76b_get_import)(jule::Trait<_1a9ceeedb_Importer>,jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>,jule::Slice<_1d77ca48e_Log>>(*_1a9ceeb23_import_package)(jule::Trait<_1a9ceeedb_Importer>,jule::Str,jule::Bool);
	void(*_1a9ceed98_imported)(jule::Trait<_1a9ceeedb_Importer>,jule::Ptr<_1a9d02351_ImportInfo>);
};

struct _1a9d9aa37_KindMptrData {
	jule::Str(*_1a9d9a5d6_to_str)(jule::Trait<_1a9d9aa37_Kind>);
	jule::Bool(*_1a9d9a8e4_equals)(jule::Trait<_1a9d9aa37_Kind>,jule::Ptr<_1a9d9ae66_TypeKind>);
};

struct _1a9db4325_LookupMptrData {
	jule::Ptr<_1a9d02351_ImportInfo>(*_1a9db27da_find_package)(jule::Trait<_1a9db4325_Lookup>,jule::Str);
	jule::Ptr<_1a9d02351_ImportInfo>(*_1a9db2ae8_select_package)(jule::Trait<_1a9db4325_Lookup>,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>);
	jule::Ptr<_1a9d2553e_Var>(*_1a9db2ea0_find_var)(jule::Trait<_1a9db4325_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a9d9a22e_TypeAlias>(*_1a9db3357_find_type_alias)(jule::Trait<_1a9db4325_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a8d82b41_Struct>(*_1a9db370e_find_struct)(jule::Trait<_1a9db4325_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a8d94db7_Fn>(*_1a9db3ab6_find_fn)(jule::Trait<_1a9db4325_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a8ea7a57_Trait>(*_1a9db3dc4_find_trait)(jule::Trait<_1a9db4325_Lookup>,jule::Str);
	jule::Ptr<_1a943b309_Enum>(*_1a9db41d2_find_enum)(jule::Trait<_1a9db4325_Lookup>,jule::Str);
};

struct _1aa563e47_CommonFlagMptrData {
	jule::Str(*_1aa59442d_name)(jule::Trait<_1aa563e47_CommonFlag>);
	jule::I32(*_1aa594560_short)(jule::Trait<_1aa563e47_CommonFlag>);
	jule::Str(*_1aa594692_what)(jule::Trait<_1aa563e47_CommonFlag>);
	void(*_1aa5947c4_reset)(jule::Trait<_1aa563e47_CommonFlag>);
};



inline jule::Exceptional<jule::I32> _1a9e3bce8_read_0(jule::Trait<_1a9e3be3b_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a9e3b07d_read(_self_.safe_ptr<_1a9e37530_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3bce8_read_1(jule::Trait<_1a9e3be3b_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a9e3db85_read(_self_.safe_ptr<_1a9e3d4e2_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3c227_write_0(jule::Trait<_1a9e3c36a_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a9e3b38b_write(_self_.safe_ptr<_1a9e37530_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3c227_write_1(jule::Trait<_1a9e3c36a_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a9e3de93_write(_self_.safe_ptr<_1a9e3d4e2_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3cc3e_read_0(jule::Trait<_1a9e3d190_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a9e3b07d_read(_self_.safe_ptr<_1a9e37530_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3d04c_write_0(jule::Trait<_1a9e3d190_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a9e3b38b_write(_self_.safe_ptr<_1a9e37530_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3cc3e_read_1(jule::Trait<_1a9e3d190_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a9e3db85_read(_self_.safe_ptr<_1a9e3d4e2_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I32> _1a9e3d04c_write_1(jule::Trait<_1a9e3d190_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a9e3de93_write(_self_.safe_ptr<_1a9e3d4e2_ByteStream>(), _2428_buff);
}
inline void _1a9cede0d_set_mod_path_0(jule::Trait<_1a9ceeedb_Importer> _self_,jule::Str _1735_path) {
	_1bce3188a_set_mod_path(_self_.safe_ptr<_1bce6e620_JuleImporter>(), _1735_path);
}
inline jule::Str _1a9cee150_get_mod_path_0(jule::Trait<_1a9ceeedb_Importer> _self_) {
	return _1bce4e15a_get_mod_path(_self_.safe_ptr<_1bce6e620_JuleImporter>());
}
inline jule::Str _1a9cee45d_mod_by_id_0(jule::Trait<_1a9ceeedb_Importer> _self_,jule::I32 _2528_id) {
	return _1bd016e9d_mod_by_id(_self_.safe_ptr<_1bce6e620_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9cee76b_get_import_0(jule::Trait<_1a9ceeedb_Importer> _self_,jule::Str _3133_path) {
	return _1bd0231a7_get_import(_self_.safe_ptr<_1bce6e620_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>,jule::Slice<_1d77ca48e_Log>> _1a9ceeb23_import_package_0(jule::Trait<_1a9ceeedb_Importer> _self_,jule::Str _3737_path,jule::Bool _3748_update_mod) {
	return _1bd024d24_import_package(_self_.safe_ptr<_1bce6e620_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1a9ceed98_imported_0(jule::Trait<_1a9ceeedb_Importer> _self_,jule::Ptr<_1a9d02351_ImportInfo> _4135__0) {
	_1bd02c9b9_imported(_self_.safe_ptr<_1bce6e620_JuleImporter>(), _4135__0);
}
inline jule::Str _1a9d9a5d6_to_str_0(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a8d85b77_to_str(_self_.safe_ptr<_1a8d857c0_StructIns>());
}
inline jule::Bool _1a9d9a8e4_equals_0(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a8d85e85_equals(_self_.data.as<_1a8d857c0_StructIns>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_1(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a8d983c6_to_str(_self_.safe_ptr<_1a8d98063_FnIns>());
}
inline jule::Bool _1a9d9a8e4_equals_1(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a8d986d4_equals(_self_.data.as<_1a8d98063_FnIns>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_2(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a8e06a61_to_str(_self_.safe_ptr<_1a8ea7a57_Trait>());
}
inline jule::Bool _1a9d9a8e4_equals_2(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a8e0859b_equals(_self_.data.as<_1a8ea7a57_Trait>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_3(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a914022d_to_str(_self_.safe_ptr<_1a943b309_Enum>());
}
inline jule::Bool _1a9d9a8e4_equals_3(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9140daa_equals(_self_.data.as<_1a943b309_Enum>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_4(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9d9b31d_to_str(_self_.safe_ptr<_1a9d9ae66_TypeKind>());
}
inline jule::Bool _1a9d9a8e4_equals_4(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9d9b62b_equals(_self_.data.as<_1a9d9ae66_TypeKind>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_5(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da0a2b_to_str(_self_.safe_ptr<_1a9da06b8_Prim>());
}
inline jule::Bool _1a9d9a8e4_equals_5(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da0d39_equals(_self_.data.as<_1a9da06b8_Prim>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_6(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da403a_to_str(_self_.safe_ptr<_1a9da3bc7_Sptr>());
}
inline jule::Bool _1a9d9a8e4_equals_6(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da4348_equals(_self_.data.as<_1a9da3bc7_Sptr>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_7(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da4aa7_to_str(_self_.safe_ptr<_1a9da4634_Slc>());
}
inline jule::Bool _1a9d9a8e4_equals_7(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da4db5_equals(_self_.data.as<_1a9da4634_Slc>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_8(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da5525_to_str(_self_.safe_ptr<_1a9da5129_Tuple>());
}
inline jule::Bool _1a9d9a8e4_equals_8(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da5833_equals(_self_.data.as<_1a9da5129_Tuple>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_9(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da604d_to_str(_self_.safe_ptr<_1a9da5bda_Map>());
}
inline jule::Bool _1a9d9a8e4_equals_9(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da635b_equals(_self_.data.as<_1a9da5bda_Map>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_10(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da6b42_to_str(_self_.safe_ptr<_1a9da67ce_Arr>());
}
inline jule::Bool _1a9d9a8e4_equals_10(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da6e50_equals(_self_.data.as<_1a9da67ce_Arr>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_11(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1a9da759e_to_str(_self_.safe_ptr<_1a9da723b_Ptr>());
}
inline jule::Bool _1a9d9a8e4_equals_11(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1a9da78ac_equals(_self_.data.as<_1a9da723b_Ptr>(), _5926_other);
}
inline jule::Str _1a9d9a5d6_to_str_12(jule::Trait<_1a9d9aa37_Kind> _self_) {
	return _1aa559de9_to_str(_self_.safe_ptr<_1aa5599ed_CustomType>());
}
inline jule::Bool _1a9d9a8e4_equals_12(jule::Trait<_1a9d9aa37_Kind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5926_other) {
	return _1aa55a207_equals(_self_.data.as<_1aa5599ed_CustomType>(), _5926_other);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db27da_find_package_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _935_ident) {
	return _1a9cc9559_find_package(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db2ae8_select_package_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _1337_selector) {
	return _1a9cba605_select_package(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1a9d2553e_Var> _1a9db2ea0_find_var_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a9ca71b3_find_var(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9db3357_find_type_alias_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a9cdc061_find_type_alias(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a8d82b41_Struct> _1a9db370e_find_struct_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a9cdc418_find_struct(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a8d94db7_Fn> _1a9db3ab6_find_fn_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a9cdc7c0_find_fn(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a8ea7a57_Trait> _1a9db3dc4_find_trait_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3333_ident) {
	return _1a9cdcacd_find_trait(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1a943b309_Enum> _1a9db41d2_find_enum_0(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3732_ident) {
	return _1a9cdcddb_find_enum(_self_.safe_ptr<_1a9cdbc53_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db27da_find_package_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _935_ident) {
	return _1a9d0285c_find_package(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db2ae8_select_package_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _1337_selector) {
	return _1a9d02b6a_select_package(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1a9d2553e_Var> _1a9db2ea0_find_var_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a9d03022_find_var(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9db3357_find_type_alias_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a9d033c9_find_type_alias(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a8d82b41_Struct> _1a9db370e_find_struct_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a9d03781_find_struct(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a8d94db7_Fn> _1a9db3ab6_find_fn_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a9d03b38_find_fn(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a8ea7a57_Trait> _1a9db3dc4_find_trait_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3333_ident) {
	return _1a9d03e46_find_trait(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1a943b309_Enum> _1a9db41d2_find_enum_1(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3732_ident) {
	return _1a9d04254_find_enum(_self_.safe_ptr<_1a9d02351_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db27da_find_package_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _935_ident) {
	return _1a9d054ca_find_package(_self_.safe_ptr<_1a9d05013_Package>(), _935_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db2ae8_select_package_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _1337_selector) {
	return _1a9d057d8_select_package(_self_.safe_ptr<_1a9d05013_Package>(), _1337_selector);
}
inline jule::Ptr<_1a9d2553e_Var> _1a9db2ea0_find_var_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a9d05b90_find_var(_self_.safe_ptr<_1a9d05013_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9db3357_find_type_alias_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a9d06047_find_type_alias(_self_.safe_ptr<_1a9d05013_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a8d82b41_Struct> _1a9db370e_find_struct_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a9d063ee_find_struct(_self_.safe_ptr<_1a9d05013_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a8d94db7_Fn> _1a9db3ab6_find_fn_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a9d067a6_find_fn(_self_.safe_ptr<_1a9d05013_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a8ea7a57_Trait> _1a9db3dc4_find_trait_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3333_ident) {
	return _1a9d06ab4_find_trait(_self_.safe_ptr<_1a9d05013_Package>(), _3333_ident);
}
inline jule::Ptr<_1a943b309_Enum> _1a9db41d2_find_enum_2(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3732_ident) {
	return _1a9d06dc2_find_enum(_self_.safe_ptr<_1a9d05013_Package>(), _3732_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db27da_find_package_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _935_ident) {
	return _1a9d0a546_find_package(_self_.safe_ptr<_1a9d0a03a_Sema>(), _935_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db2ae8_select_package_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _1337_selector) {
	return _1a9d0a854_select_package(_self_.safe_ptr<_1a9d0a03a_Sema>(), _1337_selector);
}
inline jule::Ptr<_1a9d2553e_Var> _1a9db2ea0_find_var_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a9d0ac0b_find_var(_self_.safe_ptr<_1a9d0a03a_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9db3357_find_type_alias_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a9d0b0b3_find_type_alias(_self_.safe_ptr<_1a9d0a03a_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a8d82b41_Struct> _1a9db370e_find_struct_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a9d0b46a_find_struct(_self_.safe_ptr<_1a9d0a03a_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a8d94db7_Fn> _1a9db3ab6_find_fn_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a9d0b822_find_fn(_self_.safe_ptr<_1a9d0a03a_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a8ea7a57_Trait> _1a9db3dc4_find_trait_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3333_ident) {
	return _1a9d0bb30_find_trait(_self_.safe_ptr<_1a9d0a03a_Sema>(), _3333_ident);
}
inline jule::Ptr<_1a943b309_Enum> _1a9db41d2_find_enum_3(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3732_ident) {
	return _1a9d0be3d_find_enum(_self_.safe_ptr<_1a9d0a03a_Sema>(), _3732_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db27da_find_package_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _935_ident) {
	return _1a9d6c0ad_find_package(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1a9d02351_ImportInfo> _1a9db2ae8_select_package_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _1337_selector) {
	return _1a9d6c3bb_select_package(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1a9d2553e_Var> _1a9db2ea0_find_var_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a9d6c773_find_var(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9db3357_find_type_alias_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a9d6cb2a_find_type_alias(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1a8d82b41_Struct> _1a9db370e_find_struct_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a9d6ced2_find_struct(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1a8d94db7_Fn> _1a9db3ab6_find_fn_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a9d6d389_find_fn(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1a8ea7a57_Trait> _1a9db3dc4_find_trait_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3333_ident) {
	return _1a9d6d697_find_trait(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1a943b309_Enum> _1a9db41d2_find_enum_4(jule::Trait<_1a9db4325_Lookup> _self_,jule::Str _3732_ident) {
	return _1a9d6d9a5_find_enum(_self_.safe_ptr<_1a9d6baa2_SymbolTable>(), _3732_ident);
}
inline jule::Str _1aa59442d_name_0(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc7cbbe_name(_self_.safe_ptr<_1aa594b8c_Flag_0>());
}
inline jule::I32 _1aa594560_short_0(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc7d065_short(_self_.safe_ptr<_1aa594b8c_Flag_0>());
}
inline jule::Str _1aa594692_what_0(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc7cd01_what(_self_.safe_ptr<_1aa594b8c_Flag_0>());
}
inline void _1aa5947c4_reset_0(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	_1acc7ce33_reset(_self_.safe_ptr<_1aa594b8c_Flag_0>());
}
inline jule::Str _1aa59442d_name_1(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc809b3_name(_self_.safe_ptr<_1aa594b8c_Flag_1>());
}
inline jule::I32 _1aa594560_short_1(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc8071b_short(_self_.safe_ptr<_1aa594b8c_Flag_1>());
}
inline jule::Str _1aa594692_what_1(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc80bc2_what(_self_.safe_ptr<_1aa594b8c_Flag_1>());
}
inline void _1aa5947c4_reset_1(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	_1acc7d1ca_reset(_self_.safe_ptr<_1aa594b8c_Flag_1>());
}
inline jule::Str _1aa59442d_name_2(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc83b92_name(_self_.safe_ptr<_1aa594b8c_Flag_2>());
}
inline jule::I32 _1aa594560_short_2(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc84621_short(_self_.safe_ptr<_1aa594b8c_Flag_2>());
}
inline jule::Str _1aa594692_what_2(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc83da1_what(_self_.safe_ptr<_1aa594b8c_Flag_2>());
}
inline void _1aa5947c4_reset_2(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	_1acc838ea_reset(_self_.safe_ptr<_1aa594b8c_Flag_2>());
}
inline jule::Str _1aa59442d_name_3(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc86db5_name(_self_.safe_ptr<_1aa594b8c_Flag_3>());
}
inline jule::I32 _1aa594560_short_3(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc87844_short(_self_.safe_ptr<_1aa594b8c_Flag_3>());
}
inline jule::Str _1aa594692_what_3(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc870c4_what(_self_.safe_ptr<_1aa594b8c_Flag_3>());
}
inline void _1aa5947c4_reset_3(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	_1acc86b1d_reset(_self_.safe_ptr<_1aa594b8c_Flag_3>());
}
inline jule::Str _1aa59442d_name_4(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc8a094_name(_self_.safe_ptr<_1aa594b8c_Flag_4>());
}
inline jule::I32 _1aa594560_short_4(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc8aa23_short(_self_.safe_ptr<_1aa594b8c_Flag_4>());
}
inline jule::Str _1aa594692_what_4(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	return _1acc8a2a3_what(_self_.safe_ptr<_1aa594b8c_Flag_4>());
}
inline void _1aa5947c4_reset_4(jule::Trait<_1aa563e47_CommonFlag> _self_) {
	_1acc89cec_reset(_self_.safe_ptr<_1aa594b8c_Flag_4>());
}


static _1a9e3be3b_ReaderMptrData _1a9e3be3b_Reader_mptr_data[] = {
	{
		._1a9e3bce8_read=_1a9e3bce8_read_0,
	},
	{
		._1a9e3bce8_read=_1a9e3bce8_read_1,
	},
};static _1a9e3c36a_WriterMptrData _1a9e3c36a_Writer_mptr_data[] = {
	{
		._1a9e3c227_write=_1a9e3c227_write_0,
	},
	{
		._1a9e3c227_write=_1a9e3c227_write_1,
	},
};static _1a9e3c942_WriterCloserMptrData _1a9e3c942_WriterCloser_mptr_data[] = {
};static _1a9e3d190_StreamMptrData _1a9e3d190_Stream_mptr_data[] = {
	{
		._1a9e3cc3e_read=_1a9e3cc3e_read_0,
		._1a9e3d04c_write=_1a9e3d04c_write_0,
	},
	{
		._1a9e3cc3e_read=_1a9e3cc3e_read_1,
		._1a9e3d04c_write=_1a9e3d04c_write_1,
	},
};static _1a9ceeedb_ImporterMptrData _1a9ceeedb_Importer_mptr_data[] = {
	{
		._1a9cede0d_set_mod_path=_1a9cede0d_set_mod_path_0,
		._1a9cee150_get_mod_path=_1a9cee150_get_mod_path_0,
		._1a9cee45d_mod_by_id=_1a9cee45d_mod_by_id_0,
		._1a9cee76b_get_import=_1a9cee76b_get_import_0,
		._1a9ceeb23_import_package=_1a9ceeb23_import_package_0,
		._1a9ceed98_imported=_1a9ceed98_imported_0,
	},
};static _1a9d9aa37_KindMptrData _1a9d9aa37_Kind_mptr_data[] = {
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_0,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_0,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_1,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_1,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_2,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_2,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_3,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_3,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_4,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_4,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_5,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_5,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_6,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_6,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_7,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_7,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_8,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_8,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_9,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_9,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_10,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_10,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_11,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_11,
	},
	{
		._1a9d9a5d6_to_str=_1a9d9a5d6_to_str_12,
		._1a9d9a8e4_equals=_1a9d9a8e4_equals_12,
	},
};static _1a9db4325_LookupMptrData _1a9db4325_Lookup_mptr_data[] = {
	{
		._1a9db27da_find_package=_1a9db27da_find_package_0,
		._1a9db2ae8_select_package=_1a9db2ae8_select_package_0,
		._1a9db2ea0_find_var=_1a9db2ea0_find_var_0,
		._1a9db3357_find_type_alias=_1a9db3357_find_type_alias_0,
		._1a9db370e_find_struct=_1a9db370e_find_struct_0,
		._1a9db3ab6_find_fn=_1a9db3ab6_find_fn_0,
		._1a9db3dc4_find_trait=_1a9db3dc4_find_trait_0,
		._1a9db41d2_find_enum=_1a9db41d2_find_enum_0,
	},
	{
		._1a9db27da_find_package=_1a9db27da_find_package_1,
		._1a9db2ae8_select_package=_1a9db2ae8_select_package_1,
		._1a9db2ea0_find_var=_1a9db2ea0_find_var_1,
		._1a9db3357_find_type_alias=_1a9db3357_find_type_alias_1,
		._1a9db370e_find_struct=_1a9db370e_find_struct_1,
		._1a9db3ab6_find_fn=_1a9db3ab6_find_fn_1,
		._1a9db3dc4_find_trait=_1a9db3dc4_find_trait_1,
		._1a9db41d2_find_enum=_1a9db41d2_find_enum_1,
	},
	{
		._1a9db27da_find_package=_1a9db27da_find_package_2,
		._1a9db2ae8_select_package=_1a9db2ae8_select_package_2,
		._1a9db2ea0_find_var=_1a9db2ea0_find_var_2,
		._1a9db3357_find_type_alias=_1a9db3357_find_type_alias_2,
		._1a9db370e_find_struct=_1a9db370e_find_struct_2,
		._1a9db3ab6_find_fn=_1a9db3ab6_find_fn_2,
		._1a9db3dc4_find_trait=_1a9db3dc4_find_trait_2,
		._1a9db41d2_find_enum=_1a9db41d2_find_enum_2,
	},
	{
		._1a9db27da_find_package=_1a9db27da_find_package_3,
		._1a9db2ae8_select_package=_1a9db2ae8_select_package_3,
		._1a9db2ea0_find_var=_1a9db2ea0_find_var_3,
		._1a9db3357_find_type_alias=_1a9db3357_find_type_alias_3,
		._1a9db370e_find_struct=_1a9db370e_find_struct_3,
		._1a9db3ab6_find_fn=_1a9db3ab6_find_fn_3,
		._1a9db3dc4_find_trait=_1a9db3dc4_find_trait_3,
		._1a9db41d2_find_enum=_1a9db41d2_find_enum_3,
	},
	{
		._1a9db27da_find_package=_1a9db27da_find_package_4,
		._1a9db2ae8_select_package=_1a9db2ae8_select_package_4,
		._1a9db2ea0_find_var=_1a9db2ea0_find_var_4,
		._1a9db3357_find_type_alias=_1a9db3357_find_type_alias_4,
		._1a9db370e_find_struct=_1a9db370e_find_struct_4,
		._1a9db3ab6_find_fn=_1a9db3ab6_find_fn_4,
		._1a9db3dc4_find_trait=_1a9db3dc4_find_trait_4,
		._1a9db41d2_find_enum=_1a9db41d2_find_enum_4,
	},
};static _1aa563e47_CommonFlagMptrData _1aa563e47_CommonFlag_mptr_data[] = {
	{
		._1aa59442d_name=_1aa59442d_name_0,
		._1aa594560_short=_1aa594560_short_0,
		._1aa594692_what=_1aa594692_what_0,
		._1aa5947c4_reset=_1aa5947c4_reset_0,
	},
	{
		._1aa59442d_name=_1aa59442d_name_1,
		._1aa594560_short=_1aa594560_short_1,
		._1aa594692_what=_1aa594692_what_1,
		._1aa5947c4_reset=_1aa5947c4_reset_1,
	},
	{
		._1aa59442d_name=_1aa59442d_name_2,
		._1aa594560_short=_1aa594560_short_2,
		._1aa594692_what=_1aa594692_what_2,
		._1aa5947c4_reset=_1aa5947c4_reset_2,
	},
	{
		._1aa59442d_name=_1aa59442d_name_3,
		._1aa594560_short=_1aa594560_short_3,
		._1aa594692_what=_1aa594692_what_3,
		._1aa5947c4_reset=_1aa5947c4_reset_3,
	},
	{
		._1aa59442d_name=_1aa59442d_name_4,
		._1aa594560_short=_1aa594560_short_4,
		._1aa594692_what=_1aa594692_what_4,
		._1aa5947c4_reset=_1aa5947c4_reset_4,
	},
};

jule::Bool _1d580edbb_PRODUCTION;
jule::Bool _1d5811230_OPT_COPY;
jule::Bool _1d581131d_OPT_DEADCODE;
jule::Bool _1d581140b_OPT_APPEND;
jule::Bool _1d581154e_OPT_MATH;
jule::Bool _1d58116c5_OPT_ACCESS;
jule::Bool _1d581184b_OPT_INLINE;
jule::Bool _1d5811a5a_OPT_PTR;
jule::Bool _1d5811bd1_OPT_COND;
jule::Str _1d58122b9_COMPILER;
jule::Str _1d5812484_COMPILER_PATH;
jule::Str _1d581260a_CPP_STD;
jule::Bool _1d58127c5_SHADOWING;
jule::Bool _1d581294b_TRANSPILATION;
jule::Bool _1d5812ac2_TEST;
jule::Bool _1d5812c48_RC;
jule::Bool _1d5812e57_SAFETY;
jule::U32 _1d59e0ca0_STDIN;
jule::U32 _1d59e1da0_STDOUT;
jule::U32 _1d59e290b_STDERR;
jule::Array<jule::U8,256> _1d6732837_FIRST;
jule::Array<_1d6732da9_accept_range,16> _1d673312e_ACCEPT_RANGES;
jule::Ptr<_1d7769b04_RangeTable> _1d7732c21__L;
jule::Ptr<_1d7769b04_RangeTable> _1d7736b59_LETTER;
jule::Array<jule::U8,256> _1d776556c__PROPERTIES;
jule::Array<jule::Str,4> _1d77bcc56_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _1d58515c2_CPP_EXTS;
jule::Array<jule::Str,1> _1d77bddbc_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _1d77cd53b_DISTOS;
jule::Array<jule::Str,3> _1d77cd739_DISTARCH;
jule::Str _1d77ddb12_PATH_STDLIB;
jule::Str _1d77dbb98_PATH_EXEC;
jule::Str _1d77dcea7_PATH_WD;
jule::Str _1d77ebe3e_PATH_API;
jule::Str _1d77ed506_OS;
jule::Str _1d77ee392_ARCH;
jule::Array<jule::I32,5> _1d7ac4436_SPACES;
jule::Array<jule::Str,6> _1d7ac4524_UNARY_OPS;
jule::Array<jule::Str,12> _1d7ac4612_BIN_OPS;
jule::Array<jule::Str,2> _1d7ac4854_POSTFIX_OPS;
jule::Array<jule::Str,11> _1d7ac4a0d_ASSING_OPS;
jule::Array<_1d7b7e832_KindPair,47> _1d7b7eb2e_KEYWORDS;
jule::Array<_1d7b7e832_KindPair,39> _1d7b7ed2c_BASIC_OPS;
jule::Array<jule::U8,32> _1a9b7c055_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1a9b7c385_DE_BRUIJN64_TAB;
_1a9945e62_FloatInfo _1a94927a0_F32_INFO;
_1a9945e62_FloatInfo _1a94a495a_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _1a94bb554_DETAILED_POWS_OF_TEN;
jule::Slice<jule::I32> _1a952d30d_POWTAB;
jule::Slice<jule::F64> _1a9549e73_F64_POW10;
jule::Slice<jule::F32> _1a953a5a1_F32_POW10;
jule::Array<jule::U64,20> _1a9570130_U64_POW10;
jule::Slice<_1a9ba7327_LeftCheat> _1a956ed77_LEFTCHEATS;
jule::I32 _1a9cce4e8_BIT_SIZE;
jule::Str _1a9cce5d6_SYS_INT;
jule::Str _1a9cce6c4_SYS_UINT;
jule::Slice<jule::Any> _1bce48154_deads;
jule::Slice<jule::Any> _1bce4b421_checking;
jule::Any _1bce4b83e_current;
jule::Any _1bce62e4e_main_current;
jule::Array<jule::U64,12> _1aa54ae62_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _1d778e266_HELP_MAP;
jule::Str _1aa56e8d1_OUT_DIR;
jule::Str _1aa57495d_OUT_NAME;
jule::Str _1aa57eccb_OUT;





std::ostream &operator<<(std::ostream &_Stream, _1d6732da9_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d776877e_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7768c46_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d77691b9_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7769681_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7769b04_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d682782d_index(_1d6824572_LazyBuff* _self_,jule::I32 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	}
	return (*_self_)._field_path[_5424_i];
}



inline void _1d682b4e1_append(_1d6824572_LazyBuff* _self_,jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if (((*_self_)._field_w < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_path.len()))) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c)) {
			((*_self_)._field_w)++;
			return;
		}
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I32>((*_self_)._field_path.len()));
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	}
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1d682e604_string(_1d6824572_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len + (*_self_)._field_w);
	}
	return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, _1d6824572_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d5957c39_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>> static__1d674750b_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1d5957c39_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _1d6637594_utf16_from_str(_1524_path);
	_WDIR* _1717_dir = _1d6650b40__wopendir((&(_1613_utf16_path[0LL])));
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>>(_1d58a005a_get_last_fs_error());
	}
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1d6650dd7__wreaddir(_1717_dir);
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1aacae4c7;
			}
			jule::Str _2617_name = _1d663c28b_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));
			jule::Ptr<_1d665bac4_Status> _2721_stat = ({
				auto except = static__1d67839ba_of(_1d685188a_join(jule::Slice<jule::Str>({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>>(except.error);
				} jule::Ptr<_1d665bac4_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1d5957c39_DirEntry>(_1d5957c39_DirEntry(_2617_name,_2721_stat)));
		}
	_iter_next_1aacae4c7:;
	}
	_iter_end_1aacae4c7:;
	_1d665117e__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1d6748a29_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _1d6637594_utf16_from_str(_4026_path);
	if ((!(_1d6650601_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1d58a005a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional static__1d6757b04_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _1d6637594_utf16_from_str(_5426_path);
	if ((!(_1d6650898_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1d58a005a_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1d5938016_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d665b8d7_File> static__1d5937b81_new(jule::U32 _4523_handle) {
	return jule::new_ptr<_1d665b8d7_File>(_1d665b8d7_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1d665b8d7_File>> static__1d5963294_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1d665b8d7_File>>(jule::Any(),({
		auto except = static__1d66b7305_open(_5526_path,((static_cast<jule::I32>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1d665b8d7_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1d665b8d7_File>>(except.error);
		} jule::Ptr<_1d665b8d7_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1d596a015_read(jule::Str _6724_path) {
	jule::Ptr<_1d665bac4_Status> _6813_s = ({
		auto except = static__1d67839ba_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d665bac4_Status>();});
	});
	if ((!(_1d597d7cb_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I32>(14LL));
	}
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1d665b8d7_File> _7817_f = ({
		auto except = static__1d66b7305_open(_6724_path,static_cast<jule::I32>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1d665b8d7_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _1d59816d0_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_6813_s.get()._field_size));
	jule::I32 _8213_n = ({
		auto except = _1d66bb33c_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I32();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1d596d6bc_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::I32 _9150_perm) {
	jule::Ptr<_1d665b8d7_File> _9217_f = ({
		auto except = static__1d66b7305_open(_9125_path,((static_cast<jule::I32>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1d665b8d7_File>();});
	});
	({
		auto except = _1d66b5d2b_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1d59816d0_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I32> _1d597005e_seek(_1d665b8d7_File* _self_,jule::I32 _10527_offset,jule::I32 _10540_origin) {
	jule::I32 _10613_pos = _1d6654d75_seek(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I32>(_10540_origin));
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(_1d58a005a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I32>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1d59816d0_close(_1d665b8d7_File* _self_) {
	if ((_1d6655590_close(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1d58a005a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Ptr<_1d665b8d7_File>> static__1d66b7305_open(jule::Str _2124_path,jule::I32 _2135_flag,jule::I32 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _1d6637594_utf16_from_str(_2124_path);
	jule::I32 _2313_handle = _1d664e7cb__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I32>(_2135_flag),_2148_mode);
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d665b8d7_File>>(_1d58a005a_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_1d665b8d7_File>>(jule::Any(),static__1d5937b81_new(static_cast<jule::U32>(static_cast<jule::U32>(_2313_handle))));
}



inline jule::VoidExceptional static__1d6716ae6_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _1d6637594_utf16_from_str(_3426_path);
	if ((!(_1d6650359_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1d58a005a_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I32> _1d66b5d2b_write(_1d665b8d7_File* _self_,jule::Slice<jule::U8> _4928_buff) {
	jule::I32 _4945_n = jule::I32();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
	}
	if (_1d6736396_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _1d6637594_utf16_from_str(static_cast<jule::Str>(_4928_buff));
		jule::Bool _5617_ok = _1d6652515_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I32>(_5517_utf16_buff.len()),_4945_n,nullptr);
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(_1d58a005a_get_last_fs_error());
		}
		return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
	}
	_4945_n=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1d665597a_write(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U32>(static_cast<jule::U32>(_4928_buff.len()))))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I32>(_1d58a005a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I32> _1d66bb33c_read(_1d665b8d7_File* _self_,jule::Slice<jule::U8> _8231_buff) {
	jule::I32 _8248_n = jule::I32();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
	}
	if (_1d6736396_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_8231_buff.len()));
		jule::Bool _8917_ok = _1d6652a43_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I32>(_8231_buff.len()),_8248_n,nullptr);
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I32>(_1d58a005a_get_last_fs_error());
		}
		jule::Slice<jule::I32> _9417_runes = _1d664d104_decode(_8821_codepage.slice(0LL,_8248_n));
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1aacd053c:;
			if (it != expr.end()) {
				jule::I32 &_1aacd0608_r = *it;
				{
					jule::I32 _9721_size = _1d67344d7_rune_len(_1aacd0608_r);
					if ((_8248_n + _9721_size) > static_cast<jule::I32>(static_cast<jule::I32>(_8231_buff.len()))) {
						goto _iter_end_1aacd053c;
					}
					_1d67348b1_encode_rune(_8231_buff.slice(_8248_n),_1aacd0608_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1aacd053c:;
				++it;
				goto _iter_begin_1aacd053c;
			}
			_iter_end_1aacd053c:;
		}
		return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
	}
	_8248_n=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1d6655260_read(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U32>(static_cast<jule::U32>(_8231_buff.len()))))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I32>(_1d58a005a_get_last_fs_error());
	}
	return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1d665b8d7_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d5982acc_is_dir(_1d665bac4_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1d597d7cb_is_reg(_1d665bac4_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_1d665bac4_Status>> static__1d67839ba_of(jule::Str _1222_path) {
	jule::Slice<jule::U16> _1313_utf16_path = _1d6637594_utf16_from_str(_1222_path);
	struct stat _1417_handle = (struct stat){};
	jule::I32 _1513_code = _1d664e501_wstat((&(_1313_utf16_path[0LL])),(&(_1417_handle)));
	if ((_1513_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1d665bac4_Status>>(jule::Any(),jule::new_ptr<_1d665bac4_Status>(_1d665bac4_Status(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_1417_handle.st_mode))),static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_1417_handle.st_size))))));
	}
	return jule::Exceptional<jule::Ptr<_1d665bac4_Status>>(_1d58a005a_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _1d665bac4_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d781ae19_Cmd> static__1d781b348_new(jule::Str _2023_path) {
	return jule::new_ptr<_1d781ae19_Cmd>(_1d781ae19_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I32> _1d78207ae_spawn(_1d781ae19_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(),static_cast<jule::I32>(({
		auto except = _1d782b248___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I32>(except.error);
			return jule::Exceptional<jule::I32>(except.error);
		} jule::I32();});
	})));
}



inline jule::Exceptional<jule::I32> _1d782b248___spawn(_1d781ae19_Cmd* _self_) {
	jule::I32 _5217_pid = 0LL;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I32>(_1d782a9d9_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I32>(_1d782adc4_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	}
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I32>(_1d781a6aa_get_last_process_error());
	}
	jule::I32 _6113_status = 0LL;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I32>(_1d781a6aa_get_last_process_error());
	}
	return jule::Exceptional<jule::I32>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1d781ae19_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d77ca48e_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1d7b7775e_prec(_1d7b77374_Token* _self_) {
	if ((*_self_)._field_id != static_cast<jule::U32>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1aad86dc9:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1aad86a55:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1aad86abb:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1aad86b32:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1aad86bba:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1aad86538:;
			{
				return 0LLU;
			}
		}
		_match_end_1aad864d3:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b77374_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b7cb71_is_ok(_1d7b7c764_File* _self_) {
	({
		auto except = static__1d67839ba_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_1d665bac4_Status>();});
	});
	return true;
}



inline void _1d7b7cde6_fill(_1d7b7c764_File* _self_,jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1d7b7d15a_dir(_1d7b7c764_File* _self_) {
	return _1d682eacc_dir((*_self_)._field_path);
}



inline jule::Str _1d7b7d3be_name(_1d7b7c764_File* _self_) {
	return _1d683bed5_base((*_self_)._field_path);
}



inline jule::U32 _1d7b7d633_addr(_1d7b7c764_File* _self_) {
	return static_cast<jule::U32>(((jule::U32)((&((*_self_))))));
}



inline jule::Str _1d7b7d941_get_row(_1d7b7c764_File* _self_,jule::I32 _4426_row) {
	jule::I32 _4517_n = 0LL;
	jule::I32 _4617_line_start = 0LL;
	jule::I32 _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_data.len())); (_4717_i)++) {
		{
			if ((*_self_)._field_data[_4717_i] != '\n') {
				goto _iter_next_1aad8d85e;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::I32>((_4717_i + 1LL));
		}
	_iter_next_1aad8d85e:;
	}
	_iter_end_1aad8d85e:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b7c764_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b7e832_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d7b856d4_push_err(_1d7b85140_Lex* _self_,jule::Str _45827_fmt,jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d7b80316_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,_45840_args));
}



inline void _1d7b85a03_push_err_tok(_1d7b85140_Lex* _self_,jule::Ptr<_1d7b77374_Token>& _46332_token,jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d7b80316_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));
}



inline void _1d7b85bce_lex(_1d7b85140_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1d7b87bd1_new_line(&(*_self_));
	while ((*_self_)._field_pos < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::Ptr<_1d7b77374_Token> _47321_token = _1d7b89056_token(&(*_self_));
			if (_47321_token.get()._field_id != static_cast<jule::U32>(0LLU)) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);
			}
		}
	_iter_next_1aad929ea:;
	}
	_iter_end_1aad929ea:;
}



inline jule::Str _1d7b85edc_id(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	}
	jule::I32 _48614_r;
	jule::I32 _48621_i;
	std::tie(_48614_r,_48621_i) = _1d6733915_decode_rune(_48222_ln);
	if ((_48614_r != '_') && (!(_1d7b7a773_is_letter(_48614_r)))) {
		return jule::Str();
	}
	while (_48621_i < static_cast<jule::I32>(static_cast<jule::I32>(_48222_ln.len()))) {
		{
			jule::I32 _49218_pr;
			jule::I32 _49222_n;
			std::tie(_49218_pr,_49222_n) = _1d6733915_decode_rune(_48222_ln.slice(_48621_i));
			if (((_49218_pr != '_') && (!(_1d7b7acb2_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1d7b7a773_is_letter(_49218_pr)))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			}
			_48621_i+=_49222_n;
		}
	_iter_next_1aad97170:;
	}
	_iter_end_1aad97170:;
	(*_self_)._field_pos+=static_cast<jule::I32>(_48222_ln.len());
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1d7b86251_resume(_1d7b85140_Lex* _self_) {
	jule::I32 _50717_i = (*_self_)._field_pos;
	for (; _50717_i < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len())); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);
			if (_1d7b7a3aa_is_space(_50917_r)) {
				
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aad9c252:;
						{
							_1d7b87bd1_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aad9c43e:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aad9be00:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1aad9bd23:;
				}
				goto _iter_next_1aad9a4a3;
			}
			jule::I32 _52421_j = _50717_i;
			for (; _52421_j < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len())); (_52421_j)++) {
				{
					if ((*_self_)._field_file.get()._field_data[_52421_j] == '\n') {
						goto _iter_end_1aad9ad66;
					}
				}
			_iter_next_1aad9ad66:;
			}
			_iter_end_1aad9ad66:;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1aad9a4a3:;
	}
	_iter_end_1aad9a4a3:;
	return nullptr;
}



inline void _1d7b864c6_lex_line_comment(_1d7b85140_Lex* _self_,jule::Ptr<_1d7b77374_Token>& _53640_token) {
	jule::I32 _53713_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if ((_54017_r == '\n') || (_54017_r == '\r')) {
				goto _iter_end_1aada0156;
			}
		}
	_iter_next_1aada0156:;
	}
	_iter_end_1aada0156:;
	if (((*_self_)._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL)) {
		_53640_token.get()._field_id=static_cast<jule::U32>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	}
}



inline void _1d7b8674b_lex_range_comment(_1d7b85140_Lex* _self_,jule::Ptr<_1d7b77374_Token>& _55141_token) {
	jule::I32 _55213_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_55517_r == '\r') {
				goto _iter_next_1aada3896;
			}
			if (_55517_r == '\n') {
				_1d7b87bd1_new_line(&(*_self_));
				goto _iter_next_1aada3896;
			}
			(*_self_)._field_column+=1LL;
			if (((((*_self_)._field_pos + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len()))) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/')) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if (((*_self_)._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL)) {
					_55141_token.get()._field_id=static_cast<jule::U32>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				}
				return;
			}
		}
	_iter_next_1aada3896:;
	}
	_iter_end_1aada3896:;
	_1d7b856d4_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1d7b86a59_num(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if (_57923_txt[0LL] == '_') {
		_57938_lit = jule::Str();
		return _57938_lit;
	}
	_57938_lit=_1d7b83a23_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d7b8377b_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d7b8225d_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	}
	_57938_lit=_1d7b81eb6_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=static_cast<jule::I32>(_57938_lit.len());
	return _57938_lit;
}



inline jule::Str _1d7b86d67_escape_seq(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aadae8c4:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aadae7d6:;
			{
				_60217_seq=_1d7b84150_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aadaed14:;
			{
				_60217_seq=_1d7b8442a_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aadae550:;
			{
				_60217_seq=_1d7b846b1_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1aadadd13:;
			{
				_60217_seq=_1d7b84958_byte_escape(_60130_txt);
			}
		}
		_match_end_1aadae473:;
	}
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1d7b856d4_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*_self_)._field_pos+=static_cast<jule::I32>(_60217_seq.len());
	return _60217_seq;
}



inline jule::Str _1d7b8721e_get_rune(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _63128_txt,jule::Bool _63141_raw) {
	if ((!(_63141_raw)) && (_63128_txt[0LL] == '\\')) {
		return _1d7b86d67_escape_seq(&(*_self_), _63128_txt);
	}
	jule::I32 _63614_r;
	jule::I32 _63617_n;
	std::tie(_63614_r,_63617_n) = _1d6733915_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1d7b8752c_lex_rune(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);
	((*_self_)._field_column)++;
	jule::I32 _64417_n = 0LL;
	jule::I32 _64517_i = 1LL;
	for (; _64517_i < static_cast<jule::I32>(static_cast<jule::I32>(_64128_txt.len())); (_64517_i)++) {
		{
			if (_64128_txt[_64517_i] == '\r') {
				goto _iter_next_1aadb72e4;
			}
			if (_64128_txt[_64517_i] == '\n') {
				_1d7b856d4_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1d7b87bd1_new_line(&(*_self_));
				return jule::Str();
			}
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);
			jule::Str _65817_r = _1d7b8721e_get_rune(&(*_self_), _65717_part,false);
			_64217_run+=_65817_r;
			(*_self_)._field_column+=static_cast<jule::I32>(_1d6735582_rune_count_str(_65817_r));
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1aadb72e4;
			}
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_65817_r.len())) - 1LL));
			}
			(_64417_n)++;
		}
	_iter_next_1aadb72e4:;
	}
	_iter_end_1aadb72e4:;
	if ((_64417_n == 0LL)) {
		_1d7b856d4_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1d7b856d4_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64217_run;
}



inline jule::Str _1d7b87791_lex_str(_1d7b85140_Lex* _self_) {
	jule::Str _68117_s = jule::Str();
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = _68213_mark == '`';
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while ((*_self_)._field_pos < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_68917_ch == '\r') {
				goto _iter_next_1aadbdad1;
			}
			if (_68917_ch == '\n') {
				_1d7b87bd1_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1d7b856d4_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);
			jule::Str _70217_r = _1d7b8721e_get_rune(&(*_self_), _70121_part,_68413_raw);
			_68117_s+=_70217_r;
			(*_self_)._field_column+=static_cast<jule::I32>(_1d6735582_rune_count_str(_70217_r));
			if (_68917_ch == _68213_mark) {
				goto _iter_end_1aadbdad1;
			}
		}
	_iter_next_1aadbdad1:;
	}
	_iter_end_1aadbdad1:;
	return _68117_s;
}



inline jule::Bool _1d7b87a05_is_first_token_of_line(_1d7b85140_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1d7b87bd1_new_line(_1d7b85140_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1d7b881cb_is_op(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _72225_txt,jule::Str _72238_kind,jule::U32 _72249_id,jule::Ptr<_1d7b77374_Token>& _72267_t) {
	if ((!(_1d7b8069b_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	}
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=static_cast<jule::I32>(_72238_kind.len());
	return true;
}



inline jule::Bool _1d7b88583_lex_basic_ops(_1d7b85140_Lex* _self_,jule::Slice<jule::U8> _73332_txt,jule::Ptr<_1d7b77374_Token>& _73350_tok) {
	{
		auto &expr = _1d7b7ed2c_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1aadc6457:;
		if (it != expr.end()) {
			_1d7b7e832_KindPair &_1aadc659a_pair = *it;
			{
				if (_1d7b881cb_is_op(&(*_self_), _73332_txt,_1aadc659a_pair._field_kind,_1aadc659a_pair._field_id,_73350_tok)) {
					return true;
				}
			}
			_iter_next_1aadc6457:;
			++it;
			goto _iter_begin_1aadc6457;
		}
		_iter_end_1aadc6457:;
	}
	return false;
}



inline jule::Bool _1d7b8893a_lex_id(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _74326_txt,jule::Ptr<_1d7b77374_Token>& _74344_t) {
	jule::Str _74413_lex = _1d7b85edc_id(&(*_self_), _74326_txt);
	if (_74413_lex.empty()) {
		return false;
	}
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U32>(2LLU);
	return true;
}



inline jule::Bool _1d7b88ce2_lex_num(_1d7b85140_Lex* _self_,jule::Slice<jule::U8>& _75427_txt,jule::Ptr<_1d7b77374_Token>& _75445_t) {
	jule::Str _75513_lex = _1d7b86a59_num(&(*_self_), _75427_txt);
	if (_75513_lex.empty()) {
		return false;
	}
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U32>(6LLU);
	return true;
}



inline jule::Ptr<_1d7b77374_Token> _1d7b89056_token(_1d7b85140_Lex* _self_) {
	jule::Ptr<_1d7b77374_Token> _76717_t = jule::new_ptr<_1d7b77374_Token>(_1d7b77374_Token((*_self_)._field_file,jule::I32(),jule::I32(),jule::Str(),static_cast<jule::U32>(0LLU)));
	jule::Slice<jule::U8> _77213_txt = _1d7b86251_resume(&(*_self_));
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	}
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1d7b88ce2_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadcdd88:;
			{
				goto _match_end_1aadcc903;
			}
		}
		else if (_77213_txt[0LL] == '\'') {
			_case_begin_1aadcd64b:;
			{
				_76717_t.get()._field_kind=_1d7b8752c_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U32>(6LLU);
				return _76717_t;
			}
		}
		else if ((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`')) {
			_case_begin_1aadcc9be:;
			{
				_76717_t.get()._field_kind=_1d7b87791_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U32>(6LLU);
				return _76717_t;
			}
		}
		else if (_1d7b8069b_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1aadcca35:;
			{
				_1d7b864c6_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1d7b8069b_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1aadcca9b:;
			{
				_1d7b8674b_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b881cb_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1d7b88583_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadccb12:;
			{
				goto _match_end_1aadcc903;
			}
		}
		else if (_1d7b8893a_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1aadce1da:;
			{
				{
					auto &expr = _1d7b7eb2e_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1aadd616a:;
					if (it != expr.end()) {
						_1d7b7e832_KindPair &_1aadd68a7_pair = *it;
						{
							if (_1aadd68a7_pair._field_kind == _76717_t.get()._field_kind) {
								_76717_t.get()._field_id=_1aadd68a7_pair._field_id;
								goto _iter_end_1aadd616a;
							}
						}
						_iter_next_1aadd616a:;
						++it;
						goto _iter_begin_1aadd616a;
					}
					_iter_end_1aadd616a:;
				}
			}
		}
		else {
			_case_begin_1aadcc958:;
			{
				jule::I32 _81718_r;
				jule::I32 _81721_sz;
				std::tie(_81718_r,_81721_sz) = _1d6733915_decode_rune(_77213_txt);
				_1d7b856d4_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1aadcc903:;
	}
	(*_self_)._field_column+=static_cast<jule::I32>(_1d6735582_rune_count_str(_76717_t.get()._field_kind));
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b85140_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a43eaa_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a246a5_is_decl(_1d7b5c315_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b9058a_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b8d29c_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b916e0_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b91cea_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b8e8b9_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b90d82_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b8ee80_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1d7b8d489_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1d7a0e75b_TypeDecl>>()) {
			_case_begin_1aae5d8eb:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aae5db60:;
			{
				return false;
			}
		}
		_match_end_1aae5db0a:;
	}
}



inline jule::Bool _1d7a1570c_is_directive(_1d7b5c315_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7a4352b_Directive>>()) {
			_case_begin_1aae60106:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aae60865:;
			{
				return false;
			}
		}
		_match_end_1aae60810:;
	}
}



inline jule::Bool _1d7a29105_is_impl(_1d7b5c315_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b92405_Impl>>()) {
			_case_begin_1aae61217:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aae61723:;
			{
				return false;
			}
		}
		_match_end_1aae616bd:;
	}
}



inline jule::Bool _1d7a29c3d_is_use_decl(_1d7b5c315_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8ee80_UseDecl>>()) {
			_case_begin_1aae61c51:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aae62603:;
			{
				return false;
			}
		}
		_match_end_1aae6259d:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b5c315_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a4352b_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a0e75b_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a2a4d0_is_prim(_1d7a16d5c_IdentTypeDecl* _self_) {
	return (*_self_)._field_token.get()._field_id == static_cast<jule::U32>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a16d5c_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17049_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17236_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17423_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17610_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a2b118_is_unsafe(_1d7a177ec_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a177ec_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a2c768_auto_sized(_1d7a179d9_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a179d9_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17bc6_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7a17db3_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b09a43_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b09c30_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8960b_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a3099c_is_nil(_1d7b89a29_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b89a29_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b89c16_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b89e03_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a3123e_is_self(_1d7b8a0e0_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8a0e0_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8a2cc_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8a4b9_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8a6a6_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8a893_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8aa80_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8ac6c_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a33b59_unhandled(_1d7b8ae59_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1d7a36112_ignored(_1d7b8ae59_FnCallExpr* _self_) {
	return ((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8ae59_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a37135_is_targeted(_1d7b8b146_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8b146_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8b333_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a391ae_is_empty(_1d7b8b520_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8b520_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8b70c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a451ba_is_empty(_1d7b8b8e9_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8b8e9_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b897e8_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c059_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c246_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c433_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c620_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c80c_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8c9e9_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8cbd6_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8cdc3_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7ade3c9_is_self(_1d7b8d0b0_ParamDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1d7ae8306_is_ref(_1d7b8d0b0_ParamDecl* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8d0b0_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b0b0e9_is_anon(_1d7b8d29c_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8d29c_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8d489_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8d676_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b1097d_is_inf(_1d7b8d863_Iter* _self_) {
	return (*_self_)._field_kind == jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8d863_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b2ce73_is_while_next(_1d7b8da50_WhileKind* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8da50_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8dc3c_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8de29_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8e116_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8e303_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8e4e0_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8e6cc_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8e8b9_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8eaa6_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8ec93_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b8ee80_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7a46254_auto_expr(_1d7b9016c_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b9016c_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b90777_default_typed(_1d7b9058a_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b9058a_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b90d82_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b916e0_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b91cea_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d7b92768_is_trait_impl(_1d7b92405_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1d7b929cc_is_struct_impl(_1d7b92405_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1d7b92405_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d82bd305_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d82bd4e2_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d831513d_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1d83160ea_stop(_1d8315968_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1d831635e_stopped(_1d8315968_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1d83165c3_finished(_1d8315968_ScopeParser* _self_) {
	return (*_self_)._field_pos >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_stmts.len()));
}



inline jule::Bool _1d8316837_is_last_st(_1d8315968_ScopeParser* _self_) {
	return ((*_self_)._field_pos + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_stmts.len()));
}



inline void _1d8316b56_push_err(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d7b77374_Token> _18927_token,jule::Str _18942_fmt) {
	_1d8332a51_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1d8316e75_push_suggestion(_1d8315968_ScopeParser* _self_,jule::Str _19434_fmt,jule::Slice<jule::Any> _19447_args) {
	_1d8332d70_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,_19447_args);
}



inline void _1d83171ea_insert_as_next(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1d831513d_Stmt>(_1d831513d_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_1d831513d_Stmt> _1d831745e_next(_1d8315968_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8317816_build_scope(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _20835_tokens,jule::Ptr<_1d7b77374_Token> _20857_end) {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _20917_s = _1d8313ed8_new_scope();
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1d8315968_ScopeParser _21217_ssp = _1d8315968_ScopeParser((*_self_)._field_p,jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Slice<jule::Ptr<_1d831513d_Stmt>>(),jule::I32());
	_1d832148a_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1d8317b24_build_var_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _21936_tokens) {
	jule::Ptr<_1d7b8d489_VarDecl> _22017_v = _1d83355c0_build_var((*_self_)._field_p, _21936_tokens);
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1d8317e32_build_ret_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _22535_tokens) {
	jule::Ptr<_1d7b8d676_RetSt> _22617_st = jule::new_ptr<_1d7b8d676_RetSt>(_1d7b8d676_RetSt(_22535_tokens[0LL],jule::Ptr<_1d7b09a43_Expr>()));
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _22535_tokens);
	}
	return jule::Any(_22617_st);
}



inline jule::Any _1d8318240_build_while_next_iter(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d831513d_Stmt>& _23645_s) {
	jule::Ptr<_1d7b8d863_Iter> _23717_it = jule::new_ptr<_1d7b8d863_Iter>(_1d7b8d863_Iter(_23645_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_1d7b8cdc3_ScopeTree>()));
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);
	jule::Ptr<_1d7b8da50_WhileKind> _24117_kind = jule::new_ptr<_1d7b8da50_WhileKind>(_1d7b8da50_WhileKind());
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _24017_tokens);
	}
	if (_1d8316837_is_last_st(&(*_self_))) {
		_1d8316b56_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_24017_tokens=_1d831745e_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _25317_st_tokens = _1d8322986_get_block_expr(_24017_tokens);
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1d831513d_Stmt> _25521_stmt = jule::new_ptr<_1d831513d_Stmt>(_1d831513d_Stmt(_25317_st_tokens,_23645_s.get()._field_terminated));
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=_1d832116b_build_st(&(*_self_), _25521_stmt);
	}
	jule::I32 _26317_i = _25317_st_tokens.len();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _26417_block_tokens = _1d833070d_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);
	if ((_26417_block_tokens == nullptr)) {
		_1d83160ea_stop(&(*_self_));
		_1d8316b56_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_26317_i < static_cast<jule::I32>(static_cast<jule::I32>(_24017_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	}
	_23717_it.get()._field_scope=_1d8317816_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1d7b8da50_WhileKind> _1d831854d_build_while_iter_kind(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _28145_tokens) {
	return jule::new_ptr<_1d7b8da50_WhileKind>(_1d7b8da50_WhileKind(_1d833317d_build_expr((*_self_)._field_p, _28145_tokens),jule::Any(),jule::Ptr<_1d7b77374_Token>()));
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83188a0_get_range_kind_keys_tokens(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _28818_vars;
	jule::Slice<_1d77ca48e_Log> _28824_errs;
	std::tie(_28818_vars,_28824_errs) = _1d8330dd4_parts(_28750_toks,static_cast<jule::U32>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1d7b8d489_VarDecl> _1d8318b9c_build_range_kind_key(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1d7b8d489_VarDecl> _29717_key = jule::new_ptr<_1d7b8d489_VarDecl>(_1d7b8d489_VarDecl(jule::Ptr<_1d7b8cdc3_ScopeTree>(),_29344_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::Ptr<_1d7b09a43_Expr>()));
	if (_29717_key.get()._field_token.get()._field_id == static_cast<jule::U32>(36LLU)) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1d8316b56_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		}
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1d8316b56_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_29717_key.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8316b56_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _1d8318eaa_build_range_kind_keys(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _31917_keys = nullptr;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1aaed8349:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1aaed8503_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1d8318b9c_build_range_kind_key(&(*_self_), _1aaed8503_tokens));
			}
			_iter_next_1aaed8349:;
			++it;
			goto _iter_begin_1aaed8349;
		}
		_iter_end_1aaed8349:;
	}
	return _31917_keys;
}



inline void _1d831931d_setup_range_kind_keys_plain(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d7b8dc3c_RangeKind>& _32651_rng,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _32717_key_tokens = _1d83188a0_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);
	if ((_32717_key_tokens.len() == 0LL)) {
		return;
	}
	if ((_32717_key_tokens.len() > 2LL)) {
		_1d8316b56_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _33417_keys = _1d8318eaa_build_range_kind_keys(&(*_self_), _32717_key_tokens);
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	}
}



inline void _1d8319670_setup_range_kind_keys_explicit(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d7b8dc3c_RangeKind>& _34154_rng,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _34176_tokens) {
	jule::I32 _34217_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _34317_rang = _1d833070d_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);
	if (_34217_i < static_cast<jule::I32>(static_cast<jule::I32>(_34176_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	}
	_1d831931d_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1d831997d_setup_range_kind_keys(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d7b8dc3c_RangeKind>& _35045_rng,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _35067_tokens) {
	if (_35067_tokens[0LL].get()._field_id == static_cast<jule::U32>(3LLU)) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1d8316b56_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		_1d8319670_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;
	}
	_1d831931d_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1d7b8dc3c_RangeKind> _1d8319dce_build_range_iter_kind(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _36245_var_tokens,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _36314_expr_tokens,jule::Ptr<_1d7b77374_Token>& _36342_in_token) {
	jule::Ptr<_1d7b8dc3c_RangeKind> _36417_rng = jule::new_ptr<_1d7b8dc3c_RangeKind>(_1d7b8dc3c_RangeKind(_36342_in_token,jule::Ptr<_1d7b09a43_Expr>(),jule::Ptr<_1d7b8d489_VarDecl>(),jule::Ptr<_1d7b8d489_VarDecl>()));
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1d8316b56_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	}
	_36417_rng.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1d831997d_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	}
	return _36417_rng;
}



inline jule::Any _1d831a286_build_common_iter_kind(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _37846_tokens,jule::Ptr<_1d7b77374_Token>& _37865_err_tok) {
	jule::I32 _37917_brace_n = 0LL;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1aaee708e:;
		if (it != expr.end()) {
			jule::I32 _1aaee7138_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1aaee737a_tok = *it;
			{
				if (_1aaee737a_tok.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1aaee737a_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1aaee82b0:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1aaee708e;
							}
						}
						else {
							_case_begin_1aaee7ba5:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1aaee7e5d:;
					}
				}
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1aaee708e;
				}
				{
					auto &_match_expr{ _1aaee737a_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU)) {
						_case_begin_1aaee8e09:;
						{
							jule::Slice<jule::Ptr<_1d7b77374_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_1aaee7138_i);
							jule::Slice<jule::Ptr<_1d7b77374_Token>> _39825_expr_tokens = _37846_tokens.slice((_1aaee7138_i + 1LL));
							return jule::Any(_1d8319dce_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_1aaee737a_tok));
						}
					}
					_match_end_1aaee8d2c:;
				}
			}
			_iter_next_1aaee708e:;
			++it;
			_1aaee7138_i++;
			goto _iter_begin_1aaee708e;
		}
		_iter_end_1aaee708e:;
	}
	return jule::Any(_1d831854d_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1d831a594_build_common_iter(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _40540_tokens) {
	jule::Ptr<_1d7b8d863_Iter> _40617_it = jule::new_ptr<_1d7b8d863_Iter>(_1d7b8d863_Iter(_40540_tokens[0LL],jule::Any(),jule::Ptr<_1d7b8cdc3_ScopeTree>()));
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1d83160ea_stop(&(*_self_));
		_1d8316b56_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _41617_expr_tokens = _1d8322986_get_block_expr(_40540_tokens);
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=_1d831a286_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token);
	}
	jule::I32 _42017_i = _41617_expr_tokens.len();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _42117_scope_tokens = _1d833070d_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);
	if ((_42117_scope_tokens == nullptr)) {
		_1d83160ea_stop(&(*_self_));
		_1d8316b56_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_42017_i < static_cast<jule::I32>(static_cast<jule::I32>(_40540_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	}
	_40617_it.get()._field_scope=_1d8317816_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1d831a8a2_build_iter_st(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d831513d_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return _1d8318240_build_while_next_iter(&(*_self_), _43537_st);
	}
	return _1d831a594_build_common_iter(&(*_self_), _43537_st.get()._field_tokens);
}



inline jule::Any _1d831abb0_build_break_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _44238_tokens) {
	jule::Ptr<_1d7b8de29_BreakSt> _44317_brk = jule::new_ptr<_1d7b8de29_BreakSt>(_1d7b8de29_BreakSt(_44238_tokens[0LL],jule::Ptr<_1d7b77374_Token>()));
	if ((_44238_tokens.len() > 1LL)) {
		if (_44238_tokens[1LL].get()._field_id != static_cast<jule::U32>(2LLU)) {
			_1d8316b56_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1d8316e75_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1d8316b56_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44317_brk);
}



inline jule::Any _1d831aebd_build_cont_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _46037_tokens) {
	jule::Ptr<_1d7b8e116_ContSt> _46117_cont = jule::new_ptr<_1d7b8e116_ContSt>(_1d7b8e116_ContSt(_46037_tokens[0LL],jule::Ptr<_1d7b77374_Token>()));
	if ((_46037_tokens.len() > 1LL)) {
		if (_46037_tokens[1LL].get()._field_id != static_cast<jule::U32>(2LLU)) {
			_1d8316b56_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1d8316e75_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1d8316b56_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1d7b8e303_If> _1d831b2cb_build_if(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _47832_tokens) {
	jule::Ptr<_1d7b8e303_If> _47917_model = jule::new_ptr<_1d7b8e303_If>(_1d7b8e303_If(_47832_tokens[0LL],jule::Ptr<_1d7b09a43_Expr>(),jule::Ptr<_1d7b8cdc3_ScopeTree>()));
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _48317_expr_tokens = _1d8322986_get_block_expr(_47832_tokens);
	jule::I32 _48417_i = 0LL;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1d8316b56_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I32>(_48317_expr_tokens.len());
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _49017_scope_tokens = _1d833070d_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);
	if ((_49017_scope_tokens == nullptr)) {
		_1d83160ea_stop(&(*_self_));
		_1d8316b56_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b77374_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];
	if (_48417_i < static_cast<jule::I32>(static_cast<jule::I32>(_47832_tokens.len()))) {
		if (_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U32>(17LLU)) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1d8316b56_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		}
	}
	_47917_model.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1d8317816_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1d7b8e4e0_Else> _1d831b5d9_build_else(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _51134_tokens) {
	jule::Ptr<_1d7b8e4e0_Else> _51217_els = jule::new_ptr<_1d7b8e4e0_Else>(_1d7b8e4e0_Else(_51134_tokens[0LL],jule::Ptr<_1d7b8cdc3_ScopeTree>()));
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I32 _51617_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _51717_scope_tokens = _1d833070d_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);
	if ((_51717_scope_tokens == nullptr)) {
		if (_51617_i < static_cast<jule::I32>(static_cast<jule::I32>(_51134_tokens.len()))) {
			_1d8316b56_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1d83160ea_stop(&(*_self_));
			_1d8316b56_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_51617_i < static_cast<jule::I32>(static_cast<jule::I32>(_51134_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	}
	_51217_els.get()._field_scope=_1d8317816_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1d831b8e7_build_if_else_chain(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _53542_tokens) {
	jule::Ptr<_1d7b8e6cc_Conditional> _53617_chain = jule::new_ptr<_1d7b8e6cc_Conditional>(_1d7b8e6cc_Conditional(_1d831b2cb_build_if(&(*_self_), _53542_tokens),jule::Slice<jule::Ptr<_1d7b8e303_If>>(),jule::Ptr<_1d7b8e4e0_Else>()));
	if ((_53617_chain.get()._field_head == nullptr)) {
		return jule::Any(nullptr);
	}
	while ((_53542_tokens.len() != 0LL)) {
		{
			if (_53542_tokens[0LL].get()._field_id != static_cast<jule::U32>(17LLU)) {
				goto _iter_end_1ab019a84;
			}
			if ((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U32>(16LLU))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1d7b8e303_If> _54825_elif = _1d831b2cb_build_if(&(*_self_), _53542_tokens);
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);
				goto _iter_next_1ab019a84;
			}
			_53617_chain.get()._field_default=_1d831b5d9_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1ab019a84;
		}
	_iter_next_1ab019a84:;
	}
	_iter_end_1ab019a84:;
	return jule::Any(_53617_chain);
}



inline jule::Any _1d831bc05_build_co_call_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _55839_tokens) {
	jule::Ptr<_1d7b89e03_CoExpr> _55917_c = jule::new_ptr<_1d7b89e03_CoExpr>(_1d7b89e03_CoExpr(_55839_tokens[0LL],jule::Ptr<_1d7b09a43_Expr>()));
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1d831c013_build_goto_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _56737_tokens) {
	jule::Ptr<_1d7b8c620_GotoSt> _56817_gt = jule::new_ptr<_1d7b8c620_GotoSt>(_1d7b8c620_GotoSt(_56737_tokens[0LL],jule::Ptr<_1d7b77374_Token>()));
	if ((_56737_tokens.len() == 1LL)) {
		_1d8316b56_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if ((_56737_tokens.len() > 2LL)) {
		_1d8316b56_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1d7b77374_Token> _57717_ident_token = _56737_tokens[1LL];
	if (_57717_ident_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8316b56_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	}
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1d831c321_build_fall_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _58737_tokens) {
	jule::Ptr<_1d7b8c80c_FallSt> _58817_fll = jule::new_ptr<_1d7b8c80c_FallSt>(_1d7b8c80c_FallSt(_58737_tokens[0LL]));
	if ((_58737_tokens.len() > 1LL)) {
		_1d8316b56_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58817_fll);
}



inline jule::Any _1d831c62e_build_type_alias_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _59743_tokens) {
	jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _59817_tad = _1d8334778_build_type_alias_decl((*_self_)._field_p, _59743_tokens);
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1d831ca91_push_case_expr(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _60337_tokens,jule::Ptr<_1d7b77374_Token> _60359_token,jule::Bool _6049_type_match,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;
	}
	if (_6049_type_match) {
		jule::I32 _61021_i = 0LL;
		jule::Ptr<_1d7a0e75b_TypeDecl> _61122_t;
		jule::Bool _61125_ok;
		std::tie(_61122_t,_61125_ok) = _1d833446a_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1d7b09a43_Expr>(_1d7b09a43_Expr(_60337_tokens[0LL],jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Any(jule::Any(_61122_t)))));
			if (_61021_i < static_cast<jule::I32>(static_cast<jule::I32>(_60337_tokens.len()))) {
				_1d8316b56_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1d833317d_build_expr((*_self_)._field_p, _60337_tokens));
}



inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d831ce48_build_case_exprs(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _62640_tokens,jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>::alloc(0LL,1LL);
	jule::I32 _62917_brace_n = 0LL;
	jule::I32 _63017_j = 0LL;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1ab02dbdb:;
		if (it != expr.end()) {
			jule::I32 _1ab02dc85_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab02dec7_tok = *it;
			{
				if (_1ab02dec7_tok.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab02dec7_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ab02ee1d:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1ab02e813:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1ab02eabb:;
					}
					goto _iter_next_1ab02dbdb;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1ab02dbdb;
				}
				{
					
					if ((_1ab02dec7_tok.get()._field_id == static_cast<jule::U32>(7LLU)) && (_1ab02dec7_tok.get()._field_kind == jule::Str("|", 1))) {
						_case_begin_1ab030182:;
						{
							jule::Slice<jule::Ptr<_1d7b77374_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_1ab02dc85_i);
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1d8316b56_push_err(&(*_self_), _1ab02dec7_tok,jule::Str("expression missing", 18));
							} else {
								_1d831ca91_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1ab02dc85_i),_1ab02dec7_tok,_62658_type_match,_62717_exprs);
							}
							_63017_j=static_cast<jule::I32>((_1ab02dc85_i + 1LL));
						}
					}
					else if (_1ab02dec7_tok.get()._field_id == static_cast<jule::U32>(11LLU)) {
						_case_begin_1ab030957:;
						{
							_1d831ca91_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_1ab02dc85_i),_1ab02dec7_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_1ab02dc85_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1ab02e57c:;
				}
			}
			_iter_next_1ab02dbdb:;
			++it;
			_1ab02dc85_i++;
			goto _iter_begin_1ab02dbdb;
		}
		_iter_end_1ab02dbdb:;
	}
	_1d8316b56_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d831d256_build_case_scope(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _66540_tokens) {
	jule::I32 _66617_n = 0LL;
	for (;;) {
		{
			jule::I32 _66821_i = 0LL;
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _66922_next;
			std::tie(_66922_next,std::ignore) = _1d8314d41_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1ab0353b8;
			}
			jule::Ptr<_1d7b77374_Token> _67317_tok = _66922_next[0LL];
			if ((_67317_tok.get()._field_id != static_cast<jule::U32>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1))) {
				_66617_n+=_66821_i;
				goto _iter_next_1ab0353b8;
			}
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);
			jule::Ptr<_1d7b8cdc3_ScopeTree> _67921_scope = _1d8317816_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1ab0353b8:;
	}
	_iter_end_1ab0353b8:;
	jule::Ptr<_1d7b77374_Token> _68317_end = jule::Ptr<_1d7b77374_Token>();
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	}
	jule::Ptr<_1d7b8cdc3_ScopeTree> _68717_scope = _1d8317816_build_scope(&(*_self_), _66540_tokens,_68317_end);
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1d7b8eaa6_Case>,jule::Bool> _1d831d60d_build_case(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _69234_tokens,jule::Bool _69252_type_match) {
	jule::Ptr<_1d7b8eaa6_Case> _69317_c = jule::new_ptr<_1d7b8eaa6_Case>(_1d7b8eaa6_Case(_69234_tokens[0LL],jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Slice<jule::Ptr<_1d7b09a43_Expr>>()));
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1d831ce48_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1d831d256_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b8eaa6_Case>>,jule::Ptr<_1d7b8e4e0_Else>> _1d831d9b5_build_cases(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _70334_tokens,jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_1d7b8eaa6_Case>> _70417_cases = nullptr;
	jule::Ptr<_1d7b8e4e0_Else> _70517_def = nullptr;
	jule::Bool _70617_def_not_last = false;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1d7b77374_Token> _70821_tok = _70334_tokens[0LL];
			if ((_70821_tok.get()._field_id != static_cast<jule::U32>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1))) {
				_1d8316b56_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ab03e2b2;
			}
			jule::Ptr<_1d7b8eaa6_Case> _71322_c;
			jule::Bool _71325_is_default;
			std::tie(_71322_c,_71325_is_default) = _1d831d60d_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1d7b8e4e0_Else>(_1d7b8e4e0_Else(_71322_c.get()._field_token,_71322_c.get()._field_scope));
				} else {
					_1d8316b56_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70617_def_not_last=_70617_def_not_last || (_70517_def != nullptr);
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);
			}
		}
	_iter_next_1ab03e2b2:;
	}
	_iter_end_1ab03e2b2:;
	if (_70617_def_not_last) {
		_1d8316b56_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1d7b8ec93_MatchCase> _1d831dcc3_build_match_case(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _73739_tokens) {
	jule::Ptr<_1d7b8ec93_MatchCase> _73817_m = jule::new_ptr<_1d7b8ec93_MatchCase>(_1d7b8ec93_MatchCase(_73739_tokens[0LL],jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Ptr<_1d7b09a43_Expr>(),jule::Slice<jule::Ptr<_1d7b8eaa6_Case>>(),jule::Ptr<_1d7b8e4e0_Else>()));
	_73739_tokens=_73739_tokens.slice(1LL);
	if ((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U32>(10LLU))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _74817_expr_tokens = _1d8322986_get_block_expr(_73739_tokens);
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1d8316b56_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	}
	jule::I32 _75517_i = _74817_expr_tokens.len();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _75617_block_toks = _1d833070d_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);
	if ((_75617_block_toks == nullptr)) {
		_1d83160ea_stop(&(*_self_));
		_1d8316b56_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1d8316e75_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_75517_i < static_cast<jule::I32>(static_cast<jule::I32>(_73739_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	}
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1d831d9b5_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d831e0d1_build_scope_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;
	jule::Bool _77217_is_deferred = false;
	jule::Ptr<_1d7b77374_Token> _77317_token = _77037_tokens[0LL];
	if (_77317_token.get()._field_id == static_cast<jule::U32>(35LLU)) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1d8316b56_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_77317_token=_77037_tokens[0LL];
		if (_77317_token.get()._field_id == static_cast<jule::U32>(37LLU)) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1d8316b56_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_77317_token.get()._field_id == static_cast<jule::U32>(37LLU)) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1d8316b56_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::I32 _79917_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _80017_scope_tokens = _1d833070d_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);
	if ((_80017_scope_tokens == nullptr)) {
		_1d8316b56_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79917_i < static_cast<jule::I32>(static_cast<jule::I32>(_77037_tokens.len()))) {
		_1d8316b56_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1d7b8cdc3_ScopeTree> _80717_scope = _1d8317816_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1d7b8c433_LabelSt> _1d831e3de_build_label_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _81338_tokens) {
	jule::Ptr<_1d7b8c433_LabelSt> _81417_lbl = jule::new_ptr<_1d7b8c433_LabelSt>(_1d7b8c433_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL].get()._field_kind));
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1d83171ea_insert_as_next(&(*_self_), _81338_tokens);
	}
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1d831e6ec_build_id_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	}
	jule::Ptr<_1d7b77374_Token> _83317_token = _82835_tokens[1LL];
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ab0574ea:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1d831e3de_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1ab057dad:;
	}
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1d832dab3_AssignInfo> _1d831ea0a_build_assign_info(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _84241_tokens) {
	jule::Ptr<_1d832dab3_AssignInfo> _84317_info = jule::new_ptr<_1d832dab3_AssignInfo>(_1d832dab3_AssignInfo(jule::Slice<jule::Ptr<_1d7b77374_Token>>(),jule::Slice<jule::Ptr<_1d7b77374_Token>>(),jule::Ptr<_1d7b77374_Token>(),true));
	jule::I32 _84617_brace_n = 0LL;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1ab05a047:;
		if (it != expr.end()) {
			jule::I32 _1ab05a179_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab05a3aa_token = *it;
			{
				if (_1ab05a3aa_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab05a3aa_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab05b334:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1ab05ac29:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1ab05aed2:;
					}
				}
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1ab05a993:;
						{
							goto _iter_next_1ab05a047;
						}
					}
					else if (_1ab05a3aa_token.get()._field_id != static_cast<jule::U32>(7LLU)) {
						_case_begin_1ab05b8a6:;
						{
							goto _iter_next_1ab05a047;
						}
					}
					else if ((!(_1d7b7bd7e_is_assign_op(_1ab05a3aa_token.get()._field_kind)))) {
						_case_begin_1ab05b92d:;
						{
							goto _iter_next_1ab05a047;
						}
					}
					_match_end_1ab05b598:;
				}
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_1ab05a179_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				}
				_84317_info.get()._field_setter=_1ab05a3aa_token;
				if ((_1ab05a179_i + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_84241_tokens.len()))) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_1d7b7bad7_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1ab05a047;
				}
				_84317_info.get()._field_r=_84241_tokens.slice((_1ab05a179_i + 1LL));
				if (_1d7b7bad7_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1d8316b56_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					}
				}
				goto _iter_end_1ab05a047;
			}
			_iter_next_1ab05a047:;
			++it;
			_1ab05a179_i++;
			goto _iter_begin_1ab05a047;
		}
		_iter_end_1ab05a047:;
	}
	return _84317_info;
}



inline jule::Ptr<_1d7b8c9e9_AssignLeft> _1d831ed18_build_assign_l(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _89038_tokens) {
	jule::Ptr<_1d7b8c9e9_AssignLeft> _89117_l = jule::new_ptr<_1d7b8c9e9_AssignLeft>(_1d7b8c9e9_AssignLeft(_89038_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1d7b09a43_Expr>()));
	if (_89038_tokens[0LL].get()._field_id == static_cast<jule::U32>(2LLU)) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	}
	_89117_l.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>> _1d8320126_build_assign_ls(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>> _90417_lefts = nullptr;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1ab064529:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab0646d3_part = *it;
			{
				jule::Ptr<_1d7b8c9e9_AssignLeft> _90621_l = _1d831ed18_build_assign_l(&(*_self_), _1ab0646d3_part);
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);
			}
			_iter_next_1ab064529:;
			++it;
			goto _iter_begin_1ab064529;
		}
		_iter_end_1ab064529:;
	}
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320434_build_plain_assign(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _91342_tokens) {
	jule::Ptr<_1d832dab3_AssignInfo> _91417_info = _1d831ea0a_build_assign_info(&(*_self_), _91342_tokens);
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1d7b8cbd6_AssignSt> _91917_assign = jule::new_ptr<_1d7b8cbd6_AssignSt>(_1d7b8cbd6_AssignSt(jule::Bool(),_91417_info.get()._field_setter,jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>>(),jule::Ptr<_1d7b09a43_Expr>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _92318_parts;
	jule::Slice<_1d77ca48e_Log> _92325_errs;
	std::tie(_92318_parts,_92325_errs) = _1d8330dd4_parts(_91417_info.get()._field_l,static_cast<jule::U32>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	}
	_91917_assign.get()._field_left=_1d8320126_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1d833317d_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	}
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320742_build_decl_assign(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	}
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_1d7b77374_Token> _94317_token = _93740_tokens[0LL];
	if ((_94317_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1d7b8cbd6_AssignSt> _94817_assign = jule::new_ptr<_1d7b8cbd6_AssignSt>(_1d7b8cbd6_AssignSt(true,jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c9e9_AssignLeft>>(),jule::Ptr<_1d7b09a43_Expr>()));
	jule::I32 _95217_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _95317_rang = _1d833070d_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);
	if ((_95317_rang == nullptr)) {
		_1d8316b56_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_95217_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_93740_tokens.len()))) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_1d7b77374_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);
		_94817_assign.get()._field_right=_1d833317d_build_expr((*_self_)._field_p, _96021_expr_tokens);
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _96518_parts;
	jule::Slice<_1d77ca48e_Log> _96525_errs;
	std::tie(_96518_parts,_96525_errs) = _1d8330dd4_parts(_95317_rang,static_cast<jule::U32>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1ab0717bc:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab072290_part = *it;
			{
				jule::Bool _97221_is_mut = false;
				jule::Bool _97321_is_ref = false;
				_94317_token=_1ab072290_part[0LL];
				if (_94317_token.get()._field_id == static_cast<jule::U32>(36LLU)) {
					_97221_is_mut=true;
					_1ab072290_part=_1ab072290_part.slice(1LL);
					if ((_1ab072290_part.len() == 0LL)) {
						_1d8316b56_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab0717bc;
					}
				}
				if ((_1ab072290_part[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_1ab072290_part[0LL].get()._field_kind == jule::Str("&", 1))) {
					_97321_is_ref=true;
					_1ab072290_part=_1ab072290_part.slice(1LL);
					if ((_1ab072290_part.len() == 0LL)) {
						_1d8316b56_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab0717bc;
					}
				}
				if (((_1ab072290_part[0LL].get()._field_id != static_cast<jule::U32>(2LLU)) && (_1ab072290_part[0LL].get()._field_id != static_cast<jule::U32>(3LLU))) && (_1ab072290_part[0LL].get()._field_kind != jule::Str("(", 1))) {
					_1d8316b56_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ab0717bc;
				}
				jule::Ptr<_1d7b8c9e9_AssignLeft> _100121_l = _1d831ed18_build_assign_l(&(*_self_), _1ab072290_part);
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);
			}
			_iter_next_1ab0717bc:;
			++it;
			goto _iter_begin_1ab0717bc;
		}
		_iter_end_1ab0717bc:;
	}
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1d7b8cbd6_AssignSt>,jule::Bool> _1d8320a50_build_assign_st(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _101039_tokens) {
	jule::Ptr<_1d7b8cbd6_AssignSt> _101059_st = jule::Ptr<_1d7b8cbd6_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1d832de59_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	}
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ab07b5a7:;
			{
				std::tie(_101059_st,_101074_ok) = _1d8320742_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1ab07a62d:;
			{
				std::tie(_101059_st,_101074_ok) = _1d8320434_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1ab07ac8d:;
	}
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1d8320d5d_build_use_expr(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1d8316b56_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1d7b09c30_UseExpr> _103117_ue = jule::new_ptr<_1d7b09c30_UseExpr>(_1d7b09c30_UseExpr(_102538_tokens[0LL],jule::Ptr<_1d7b09a43_Expr>()));
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1d833317d_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1d832116b_build_st(_1d8315968_ScopeParser* _self_,jule::Ptr<_1d831513d_Stmt>& _104032_st) {
	jule::Ptr<_1d7b77374_Token> _104117_token = _104032_st.get()._field_tokens[0LL];
	if (_104117_token.get()._field_id == static_cast<jule::U32>(2LLU)) {
		jule::Any _104322_s;
		jule::Bool _104325_ok;
		std::tie(_104322_s,_104325_ok) = _1d831e6ec_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return _104322_s;
		}
	}
	jule::Ptr<_1d7b8cbd6_AssignSt> _104918_s;
	jule::Bool _104921_ok;
	std::tie(_104918_s,_104921_ok) = _1d8320a50_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	}
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ab081733:;
			{
				return _1d8320d5d_build_use_expr(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(38LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1ab081e1a:;
			{
				return _1d8317b24_build_var_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1ab081a1e:;
			{
				return _1d8317e32_build_ret_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_1ab081a85:;
			{
				return _1d831a8a2_build_iter_st(&(*_self_), _104032_st);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1ab081aeb:;
			{
				return _1d831abb0_build_break_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(14LLU)) {
			_case_begin_1ab08225b:;
			{
				return _1d831aebd_build_cont_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ab0822c2:;
			{
				return _1d831b8e7_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1ab082338:;
			{
				return _1d831bc05_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1ab08239e:;
			{
				return _1d831c013_build_goto_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ab082415:;
			{
				return _1d831c321_build_fall_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ab08247b:;
			{
				return _1d831c62e_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ab0824e2:;
			{
				return jule::Any(_1d831dcc3_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU) || _match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1ab082558:;
			{
				return jule::Any(_1d831e0d1_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab0825be:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1d831e0d1_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				}
			}
		}
		_match_end_1ab081da4:;
	}
	jule::Ptr<_1d7b09a43_Expr> _109017_expr = _1d833317d_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	}
	_1d8316b56_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1d832148a_build(_1d8315968_ScopeParser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _109829_tokens,jule::Ptr<_1d7b8cdc3_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;
	}
	(*_self_)._field_stmts=_1d83154d4_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while ((!(_1d8316837_is_last_st(&(*_self_)))) && (!(_1d83165c3_finished(&(*_self_))))) {
		{
			jule::Ptr<_1d831513d_Stmt> _110721_st = _1d831745e_next(&(*_self_));
			jule::Any _110821_data = _1d832116b_build_st(&(*_self_), _110721_st);
			if (_110821_data != jule::Any(jule::Any(nullptr))) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1d7b5c315_Node(_110721_st.get()._field_tokens[0LL],_110821_data));
			}
			if (_1d831635e_stopped(&(*_self_))) {
				goto _iter_end_1ab08bc38;
			}
		}
	_iter_next_1ab08bc38:;
	}
	_iter_end_1ab08bc38:;
}







std::ostream &operator<<(std::ostream &_Stream, _1d8315968_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d8322337_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1d8324081_push_err(_1d8323789_ExprBuilder* _self_,jule::Ptr<_1d7b77374_Token> _21827_token,jule::Str _21842_fmt,jule::Slice<jule::Any> _21855_args) {
	_1d8332a51_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,_21855_args);
}



inline void _1d83243a0_push_suggestion(_1d8323789_ExprBuilder* _self_,jule::Str _22334_fmt,jule::Slice<jule::Any> _22347_args) {
	_1d8332d70_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,_22347_args);
}



inline jule::Ptr<_1d7b8960b_TupleExpr> _1d83246ad_build_tuple(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>& _22735_parts) {
	jule::Ptr<_1d7b8960b_TupleExpr> _22817_tuple = jule::new_ptr<_1d7b8960b_TupleExpr>(_1d7b8960b_TupleExpr(jule::Slice<jule::Ptr<_1d7b09a43_Expr>>::alloc(0LL,static_cast<jule::I32>(_22735_parts.len()))));
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1ab09305d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab09348c_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1d832d167_build_from_tokens(&(*_self_), _1ab09348c_part));
			}
			_iter_next_1ab09305d:;
			++it;
			goto _iter_begin_1ab09305d;
		}
		_iter_end_1ab09305d:;
	}
	return _22817_tuple;
}



inline jule::Ptr<_1d7b89a29_LitExpr> _1d83249bb_build_lit(_1d8323789_ExprBuilder* _self_,jule::Ptr<_1d7b77374_Token> _23728_token) {
	return jule::new_ptr<_1d7b89a29_LitExpr>(_1d7b89a29_LitExpr(_23728_token,_23728_token.get()._field_kind));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8324cc9_build_primitive_type(_1d8323789_ExprBuilder* _self_,jule::Ptr<_1d7b77374_Token>& _24440_token) {
	return _1d83420c1_build_prim_type(_24440_token);
}



inline jule::Any _1d83250d7_build_single(_1d8323789_ExprBuilder* _self_,jule::Ptr<_1d7b77374_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ab096418:;
			{
				return jule::Any(_1d83249bb_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab096748:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1d7b8a4b9_VariadicExpr>(_1d7b8a4b9_VariadicExpr(_24835_token,jule::Ptr<_1d7b09a43_Expr>())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(28LLU) || _match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ab0967ae:;
			{
				return jule::Any(_1d83232b1_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ab096836:;
			{
				return jule::Any(_1d8324cc9_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1ab096649:;
	}
	_1d8324081_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d7b8a0e0_IdentExpr> _1d83253e5_build_cpp_linked_ident(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _26946_tokens) {
	if (_26946_tokens[0LL].get()._field_id != static_cast<jule::U32>(31LLU)) {
		return nullptr;
	} else if (_26946_tokens[1LL].get()._field_id != static_cast<jule::U32>(20LLU)) {
		_1d8324081_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b77374_Token> _27717_token = _26946_tokens[2LL];
	if (_27717_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8324081_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b8a0e0_IdentExpr> _28317_expr = _1d83232b1_build_ident_expr(_27717_token);
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_1d7b8a2cc_UnaryExpr> _1d8325703_build_unary(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _28834_tokens) {
	jule::Ptr<_1d7b77374_Token> _28917_op = _28834_tokens[0LL];
	if ((_28834_tokens.len() == 1LL)) {
		_1d8324081_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1d7b77ab1_is_unary_op(_28917_op.get()._field_kind)))) {
		_1d8324081_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	}
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_1d7b8a2cc_UnaryExpr>(_1d7b8a2cc_UnaryExpr(_28917_op,_1d832d167_build_from_tokens(&(*_self_), _28834_tokens)));
}



inline jule::Ptr<_1d7b8aa80_SubIdentExpr> _1d8325a11_build_obj_sub_ident(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _30942_tokens) {
	jule::I32 _31017_i = (_30942_tokens.len() - 1LL);
	jule::Ptr<_1d7b77374_Token> _31117_ident_token = _30942_tokens[_31017_i];
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d7b8aa80_SubIdentExpr>(_1d7b8aa80_SubIdentExpr(jule::Bool(),_1d832d167_build_from_tokens(&(*_self_), _30942_tokens),_31117_ident_token));
}



inline jule::Ptr<_1d7b8a893_NsSelectionExpr> _1d8325d1e_build_ns_sub_ident(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _32442_tokens) {
	jule::Ptr<_1d7b8a893_NsSelectionExpr> _32517_ns = jule::new_ptr<_1d7b8a893_NsSelectionExpr>(_1d7b8a893_NsSelectionExpr());
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0a534a:;
		if (it != expr.end()) {
			jule::I32 _1ab0a5658_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab0a5889_token = *it;
			{
				if (((_1ab0a5658_i & 1LL) == 0LL)) {
					if (_1ab0a5889_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
						_1d8324081_push_err(&(*_self_), _1ab0a5889_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1d83243a0_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_1ab0a5889_token);
				} else if (_1ab0a5889_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
					_1d8324081_push_err(&(*_self_), _1ab0a5889_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1d83243a0_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_1ab0a534a:;
			++it;
			_1ab0a5658_i++;
			goto _iter_begin_1ab0a534a;
		}
		_iter_end_1ab0a534a:;
	}
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d832612c_build_type(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _34334_tokens) {
	jule::I32 _34417_i = 0LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _34518_t;
	jule::Bool _34521_ok;
	std::tie(_34518_t,_34521_ok) = _1d833446a_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1d8324081_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_34417_i < static_cast<jule::I32>(static_cast<jule::I32>(_34334_tokens.len()))) {
		_1d8324081_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _34518_t;
}



inline jule::Any _1d832643a_build_sub_ident(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _35739_tokens) {
	jule::I32 _35813_i = (_35739_tokens.len() - 2LL);
	jule::Ptr<_1d7b77374_Token> _35913_token = _35739_tokens[_35813_i];
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1ab0ad4c9:;
			{
				return jule::Any(_1d8325a11_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ab0ae189:;
			{
				return jule::Any(_1d8325d1e_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab0ae200:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1d832612c_build_type(&(*_self_), _35739_tokens));
				}
			}
		}
		_match_end_1ab0ae068:;
	}
	_1d8324081_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d7b8a4b9_VariadicExpr> _1d8326748_build_variadic(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _37537_tokens) {
	jule::Ptr<_1d7b77374_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_1d7b8a4b9_VariadicExpr>(_1d7b8a4b9_VariadicExpr(_37617_token,_1d832d167_build_from_tokens(&(*_self_), _37537_tokens)));
}



inline jule::Any _1d8326a56_build_op_right(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _38438_tokens) {
	jule::Ptr<_1d7b77374_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ab0b4304:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1d832ca4b_build(&(*_self_), _38438_tokens);
				if (_38921_d == jule::Any(jule::Any(nullptr))) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>()) {
						_case_begin_1ab0b5a86:;
						{
							_38921_d.operator jule::Ptr<_1d7b8ae59_FnCallExpr>().get()._field_exception=jule::new_ptr<_1d7b8cdc3_ScopeTree>(_1d7b8cdc3_ScopeTree(jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Bool(),true,jule::Slice<_1d7b5c315_Node>(),jule::Ptr<_1d7b77374_Token>()));
							return _38921_d;
						}
					}
					_match_end_1ab0b5da5:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_1ab0b436a:;
			{
				return jule::Any(_1d8326748_build_variadic(&(*_self_), _38438_tokens));
			}
		}
		_match_end_1ab0b427c:;
	}
	_1d8324081_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d7b09a43_Expr> _1d8326da8_build_between_parentheses(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _40748_tokens) {
	if ((_40748_tokens.len() == 2LL)) {
		_1d8324081_push_err(&(*_self_), _40748_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	}
	_40748_tokens=_40748_tokens.slice(1LL,(_40748_tokens.len() - 1LL));
	jule::Ptr<_1d7b09a43_Expr> _41417_expr = _1d832d167_build_from_tokens(&(*_self_), _40748_tokens);
	_41417_expr.get()._field_range=true;
	return _41417_expr;
}



inline jule::Ptr<_1d7b8a6a6_CastExpr> _1d83271a5_try_build_cast(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _41938_tokens) {
	jule::I32 _42017_range_n = 0LL;
	{
		auto &expr = _41938_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0bb174:;
		if (it != expr.end()) {
			jule::I32 _1ab0bb21d_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab0bb460_token = *it;
			{
				if (_1ab0bb460_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab0bb460_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab0bc395:;
							{
								(_42017_range_n)++;
								goto _iter_next_1ab0bb174;
							}
						}
						else {
							_case_begin_1ab0bbc8a:;
							{
								(_42017_range_n)--;
							}
						}
						_match_end_1ab0bc043:;
					}
				}
				if ((_42017_range_n > 0LL)) {
					goto _iter_next_1ab0bb174;
				} else if ((_1ab0bb21d_i + 1LL) == static_cast<jule::I32>(static_cast<jule::I32>(_41938_tokens.len()))) {
					return nullptr;
				}
				jule::Slice<jule::Ptr<_1d7b77374_Token>> _44021_type_tokens = _41938_tokens.slice(0LL,(_1ab0bb21d_i + 1LL));
				jule::Slice<jule::Ptr<_1d7b77374_Token>> _44121_expr_tokens = _41938_tokens.slice((_1ab0bb21d_i + 1LL));
				if ((_44121_expr_tokens.len() == 0LL)) {
					return nullptr;
				}
				jule::Ptr<_1d7b77374_Token> _44817_tok = _44121_expr_tokens[0LL];
				if ((_44817_tok.get()._field_id != static_cast<jule::U32>(3LLU)) || (_44817_tok.get()._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1d7b8a6a6_CastExpr> _45321_cast = jule::new_ptr<_1d7b8a6a6_CastExpr>(_1d7b8a6a6_CastExpr());
				if ((_44121_expr_tokens.len() == 2LL)) {
					_1d8324081_push_err(&(*_self_), _44121_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1d83243a0_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if ((_44021_type_tokens.len() == 2LL)) {
					_1d8324081_push_err(&(*_self_), _44021_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1d83243a0_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_44021_type_tokens=_44021_type_tokens.slice(1LL,(_44021_type_tokens.len() - 1LL));
					jule::I32 _46725_type_index = 0LL;
					jule::Ptr<_1d7a0e75b_TypeDecl> _46826_t;
					jule::Bool _46829_ok;
					std::tie(_46826_t,_46829_ok) = _1d833446a_build_type((*_self_)._field_p, _44021_type_tokens,(&(_46725_type_index)),true);
					if (_46829_ok && (_46725_type_index < static_cast<jule::I32>(static_cast<jule::I32>(_44021_type_tokens.len())))) {
						_1d8324081_push_err(&(*_self_), _44021_type_tokens[_46725_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46829_ok))) {
						return _45321_cast;
					}
					_45321_cast.get()._field_kind=_46826_t;
					if ((_44121_expr_tokens.len() > 2LL)) {
						jule::I32 _47829_j = 0LL;
						_1d833070d_range(_47829_j,jule::Str("(", 1),jule::Str(")", 1),_44121_expr_tokens);
						if (_47829_j < static_cast<jule::I32>(static_cast<jule::I32>(_44121_expr_tokens.len()))) {
							return nullptr;
						}
						_44121_expr_tokens=_44121_expr_tokens.slice(0LL,_47829_j);
						_45321_cast.get()._field_expr=_1d832d167_build_from_tokens(&(*_self_), _44121_expr_tokens);
					}
				}
				return _45321_cast;
			}
			_iter_next_1ab0bb174:;
			++it;
			_1ab0bb21d_i++;
			goto _iter_begin_1ab0bb174;
		}
		_iter_end_1ab0bb174:;
	}
	return nullptr;
}



inline void _1d832756d_push_arg(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>& _49332_args,jule::Slice<jule::Ptr<_1d7b77374_Token>> _49351_tokens,jule::Ptr<_1d7b77374_Token> _49369_err_token) {
	if ((_49351_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _49369_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_49332_args = jule::alloc_for_append(_49332_args,1);_49332_args.__push(_1d832d167_build_from_tokens(&(*_self_), _49351_tokens));
}



inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d832787b_build_args(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _50233_tokens) {
	if ((_50233_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _50817_args = nullptr;
	jule::I32 _50917_last = 0LL;
	jule::I32 _51017_range_n = 0LL;
	_50233_tokens=_50233_tokens.slice(1LL,(_50233_tokens.len() - 1LL));
	{
		auto &expr = _50233_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0cb78e:;
		if (it != expr.end()) {
			jule::I32 _1ab0cb98c_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab0cba7a_token = *it;
			{
				if (_1ab0cba7a_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab0cba7a_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab0cc9b0:;
							{
								(_51017_range_n)++;
							}
						}
						else {
							_case_begin_1ab0cc3a5:;
							{
								(_51017_range_n)--;
							}
						}
						_match_end_1ab0cc65d:;
					}
				}
				if ((_51017_range_n > 0LL) || (_1ab0cba7a_token.get()._field_id != static_cast<jule::U32>(8LLU))) {
					goto _iter_next_1ab0cb78e;
				}
				_1d832756d_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last,_1ab0cb98c_i),_1ab0cba7a_token);
				_50917_last=static_cast<jule::I32>((_1ab0cb98c_i + 1LL));
			}
			_iter_next_1ab0cb78e:;
			++it;
			_1ab0cb98c_i++;
			goto _iter_begin_1ab0cb78e;
		}
		_iter_end_1ab0cb78e:;
	}
	if (_50917_last < static_cast<jule::I32>(static_cast<jule::I32>(_50233_tokens.len()))) {
		if ((_50917_last == 0LL)) {
			if ((_50233_tokens.len() > 0LL)) {
				_1d832756d_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last),_50233_tokens[_50917_last]);
			}
		} else {
			_1d832756d_push_arg(&(*_self_), _50817_args,_50233_tokens.slice(_50917_last),_50233_tokens[(_50917_last - 1LL)]);
		}
	}
	return _50817_args;
}



inline jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _1d8327b89_build_call_generics(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _54442_tokens) {
	if ((_54442_tokens.len() == 0LL)) {
		return nullptr;
	}
	_54442_tokens=_54442_tokens.slice(1LL,(_54442_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _55018_parts;
	jule::Slice<_1d77ca48e_Log> _55025_errs;
	std::tie(_55018_parts,_55025_errs) = _1d8330dd4_parts(_54442_tokens,static_cast<jule::U32>(8LLU),true);
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _55117_generics = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>::alloc(0LL,static_cast<jule::I32>(_55018_parts.len()));
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_55025_errs);
	{
		auto &expr = _55018_parts;
		auto it = expr.begin();
		_iter_begin_1ab0d3e6c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab0d43bd_part = *it;
			{
				if ((_1ab0d43bd_part.len() == 0LL)) {
					goto _iter_next_1ab0d3e6c;
				}
				jule::I32 _55721_j = 0LL;
				jule::Ptr<_1d7a0e75b_TypeDecl> _55822_generic;
				std::tie(_55822_generic,std::ignore) = _1d833446a_build_type((*_self_)._field_p, _1ab0d43bd_part,(&(_55721_j)),true);
				if (_55721_j < static_cast<jule::I32>(static_cast<jule::I32>(_1ab0d43bd_part.len()))) {
					_1d8324081_push_err(&(*_self_), _1ab0d43bd_part[_55721_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_55117_generics = jule::alloc_for_append(_55117_generics,1);_55117_generics.__push(_55822_generic);
			}
			_iter_next_1ab0d3e6c:;
			++it;
			goto _iter_begin_1ab0d3e6c;
		}
		_iter_end_1ab0d3e6c:;
	}
	return _55117_generics;
}



inline jule::Ptr<_1d7b8ae59_FnCallExpr> _1d8328041_build_fn_call(_1d8323789_ExprBuilder* _self_,jule::Ptr<_1d7b77374_Token>& _56837_token,jule::Ptr<_1d8322337_CallData>& _56857_data) {
	return jule::new_ptr<_1d7b8ae59_FnCallExpr>(_1d7b8ae59_FnCallExpr(_56837_token,_1d832d167_build_from_tokens(&(*_self_), _56857_data.get()._field_expr_tokens),_1d8327b89_build_call_generics(&(*_self_), _56857_data.get()._field_generics_tokens),_1d832787b_build_args(&(*_self_), _56857_data.get()._field_args_tokens),jule::Ptr<_1d7b8cdc3_ScopeTree>()));
}



inline jule::Any _1d8328393_build_parentheses_range(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _57747_tokens) {
	jule::Ptr<_1d7b77374_Token> _57817_token = _57747_tokens[0LL];
	{
		auto &_match_expr{ _57817_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab0d8a76:;
			{
				{
					auto &_match_expr{ _57817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab0d977a:;
						{
							jule::Ptr<_1d7b8a6a6_CastExpr> _58325_expr = _1d83271a5_try_build_cast(&(*_self_), _57747_tokens);
							if ((_58325_expr != nullptr)) {
								return jule::Any(_58325_expr);
							}
						}
					}
					_match_end_1ab0d9989:;
				}
			}
		}
		_match_end_1ab0d91a3:;
	}
	jule::Ptr<_1d8322337_CallData> _59017_data = _1d832269a_get_call_data(_57747_tokens);
	if ((_59017_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1d8326da8_build_between_parentheses(&(*_self_), _59017_data.get()._field_args_tokens));
	}
	return jule::Any(_1d8328041_build_fn_call(&(*_self_), _57817_token,_59017_data));
}



inline jule::Ptr<_1d7b89c16_UnsafeExpr> _1d8328690_build_unsafe_expr(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _60140_tokens) {
	jule::Ptr<_1d7b77374_Token> _60217_token = _60140_tokens[0LL];
	_60140_tokens=_60140_tokens.slice(1LL);
	jule::I32 _60417_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _60517_range_tokens = _1d833070d_range(_60417_i,jule::Str("{", 1),jule::Str("}", 1),_60140_tokens);
	if ((_60517_range_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _60140_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d7b89c16_UnsafeExpr>(_1d7b89c16_UnsafeExpr(_60217_token,_1d832d167_build_from_tokens(&(*_self_), _60517_range_tokens)));
}



inline jule::Ptr<_1d7b8d29c_FnDecl> _1d832899d_build_anon_fn(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _61637_tokens) {
	jule::Ptr<_1d7b8d29c_FnDecl> _61717_f = _1d833868e_build_fn((*_self_)._field_p, _61637_tokens,false,false);
	if ((!(_1d7b0b0e9_is_anon(_61717_f.ptr())))) {
		_1d8324081_push_err(&(*_self_), _61717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _61717_f;
}



inline jule::Any _1d8328cab_build_unsafe(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _62536_tokens) {
	{
		auto &_match_expr{ _62536_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ab0e3ce5:;
			{
				return jule::Any(_1d832899d_build_anon_fn(&(*_self_), _62536_tokens));
			}
		}
		else {
			_case_begin_1ab0e32bc:;
			{
				return jule::Any(_1d8328690_build_unsafe_expr(&(*_self_), _62536_tokens));
			}
		}
		_match_end_1ab0e370c:;
	}
}



inline void _1d8329174_push_range_lit_part(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _63542_part,jule::Ptr<_1d7b77374_Token> _6369_error_token,jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>& _63635_parts) {
	if ((_63542_part.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _6369_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_63635_parts = jule::alloc_for_append(_63635_parts,1);_63635_parts.__push(_63542_part);
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83294c6_get_brace_range_lit_expr_parts(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _64653_tokens) {
	if ((_64653_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _65217_parts = nullptr;
	jule::I32 _65417_last = 0LL;
	jule::I32 _65517_range_n = 0LL;
	_64653_tokens=_64653_tokens.slice(1LL,(_64653_tokens.len() - 1LL));
	{
		auto &expr = _64653_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0e8e0a:;
		if (it != expr.end()) {
			jule::I32 _1ab0e9108_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab0e91e6_token = *it;
			{
				if (_1ab0e91e6_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab0e91e6_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab0ea12b:;
							{
								(_65517_range_n)++;
							}
						}
						else {
							_case_begin_1ab0e9a21:;
							{
								(_65517_range_n)--;
							}
						}
						_match_end_1ab0e9cc9:;
					}
				}
				if ((_65517_range_n > 0LL) || (_1ab0e91e6_token.get()._field_id != static_cast<jule::U32>(8LLU))) {
					goto _iter_next_1ab0e8e0a;
				}
				_1d8329174_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last,_1ab0e9108_i),_1ab0e91e6_token,_65217_parts);
				_65417_last=static_cast<jule::I32>((_1ab0e9108_i + 1LL));
			}
			_iter_next_1ab0e8e0a:;
			++it;
			_1ab0e9108_i++;
			goto _iter_begin_1ab0e8e0a;
		}
		_iter_end_1ab0e8e0a:;
	}
	if (_65417_last < static_cast<jule::I32>(static_cast<jule::I32>(_64653_tokens.len()))) {
		if ((_65417_last == 0LL)) {
			if ((_64653_tokens.len() > 0LL)) {
				_1d8329174_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last),_64653_tokens[_65417_last],_65217_parts);
			}
		} else {
			_1d8329174_push_range_lit_part(&(*_self_), _64653_tokens.slice(_65417_last),_64653_tokens[(_65417_last - 1LL)],_65217_parts);
		}
	}
	return _65217_parts;
}



inline jule::Ptr<_1d7b8b146_FieldExprPair> _1d83297c3_build_field_expr_pair(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _68844_tokens) {
	if (((_68844_tokens.len() - 2LL) == 0LL)) {
		_1d8324081_push_err(&(*_self_), _68844_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b8b146_FieldExprPair> _69317_pair = jule::new_ptr<_1d7b8b146_FieldExprPair>(_1d7b8b146_FieldExprPair(_68844_tokens[0LL],jule::Ptr<_1d7b09a43_Expr>()));
	_68844_tokens=_68844_tokens.slice(2LL);
	_69317_pair.get()._field_expr=_1d832d167_build_from_tokens(&(*_self_), _68844_tokens);
	return _69317_pair;
}



inline jule::Ptr<_1d7b09a43_Expr> _1d8329ad1_build_struct_lit_expr(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _70145_tokens) {
	jule::Ptr<_1d7b77374_Token> _70217_token = _70145_tokens[0LL];
	if ((_70217_token.get()._field_id == static_cast<jule::U32>(2LLU)) && (_70145_tokens.len() > 1LL)) {
		_70217_token=_70145_tokens[1LL];
		if (_70217_token.get()._field_id == static_cast<jule::U32>(11LLU)) {
			return jule::new_ptr<_1d7b09a43_Expr>(_1d7b09a43_Expr(_70217_token,_70145_tokens[(_70145_tokens.len() - 1LL)],jule::Bool(),jule::Any(jule::Any(_1d83297c3_build_field_expr_pair(&(*_self_), _70145_tokens)))));
		}
	}
	return _1d832d167_build_from_tokens(&(*_self_), _70145_tokens);
}



inline jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _1d8329dde_build_struct_lit_exprs(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _71646_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _71717_parts = _1d83294c6_get_brace_range_lit_expr_parts(&(*_self_), _71646_tokens);
	if ((_71717_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _72217_pairs = jule::Slice<jule::Ptr<_1d7b09a43_Expr>>::alloc(0LL,static_cast<jule::I32>(_71717_parts.len()));
	{
		auto &expr = _71717_parts;
		auto it = expr.begin();
		_iter_begin_1ab105ea0:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab105a0a_part = *it;
			{
				_72217_pairs = jule::alloc_for_append(_72217_pairs,1);_72217_pairs.__push(_1d8329ad1_build_struct_lit_expr(&(*_self_), _1ab105a0a_part));
			}
			_iter_next_1ab105ea0:;
			++it;
			goto _iter_begin_1ab105ea0;
		}
		_iter_end_1ab105ea0:;
	}
	return _72217_pairs;
}



inline jule::Ptr<_1d7b8b333_StructLit> _1d832a241_build_typed_struct_literal(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _72949_tokens) {
	jule::I32 _73017_i = 0LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _73118_t;
	jule::Bool _73121_ok;
	std::tie(_73118_t,_73121_ok) = _1d833446a_build_type((*_self_)._field_p, _72949_tokens,(&(_73017_i)),true);
	if ((!(_73121_ok))) {
		return nullptr;
	} else if (_73017_i >= static_cast<jule::I32>(static_cast<jule::I32>(_72949_tokens.len()))) {
		_1d8324081_push_err(&(*_self_), _72949_tokens[_73017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_72949_tokens=_72949_tokens.slice(_73017_i);
	jule::Ptr<_1d7b77374_Token> _74013_token = _72949_tokens[0LL];
	if ((_74013_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_74013_token.get()._field_kind != jule::Str("{", 1))) {
		_1d8324081_push_err(&(*_self_), _74013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d7b8b333_StructLit>(_1d7b8b333_StructLit(_72949_tokens[(_72949_tokens.len() - 1LL)],_73118_t,_1d8329dde_build_struct_lit_exprs(&(*_self_), _72949_tokens)));
}



inline jule::Ptr<_1d7b09a43_Expr> _1d832a53d_build_brace_lit_part(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _75344_tokens) {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _75418_l;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _75425_r;
	std::tie(_75418_l,_75425_r) = _1d8322c2d_split_colon(_75344_tokens);
	if ((_75418_l != nullptr)) {
		return jule::new_ptr<_1d7b09a43_Expr>(_1d7b09a43_Expr(_75344_tokens[0LL],jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1d7b8b70c_KeyValPair>(_1d7b8b70c_KeyValPair(_1d832d167_build_from_tokens(&(*_self_), _75418_l),_1d832d167_build_from_tokens(&(*_self_), _75425_r),_75344_tokens[_75418_l.len()]))))));
	}
	return _1d832d167_build_from_tokens(&(*_self_), _75344_tokens);
}



inline jule::Ptr<_1d7b8b520_BraceLit> _1d832a84b_build_brace_lit(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _76939_tokens) {
	jule::Ptr<_1d7b8b520_BraceLit> _77017_lit = jule::new_ptr<_1d7b8b520_BraceLit>(_1d7b8b520_BraceLit(_76939_tokens[0LL],_76939_tokens[(_76939_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1d7b09a43_Expr>>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _77517_parts = _1d83294c6_get_brace_range_lit_expr_parts(&(*_self_), _76939_tokens);
	if ((_77517_parts == nullptr)) {
		return _77017_lit;
	}
	_77017_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1d7b09a43_Expr>>::alloc(0LL,static_cast<jule::I32>(_77517_parts.len()));
	{
		auto &expr = _77517_parts;
		auto it = expr.begin();
		_iter_begin_1ab110e44:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab111340_part = *it;
			{
				_77017_lit.get()._field_exprs = jule::alloc_for_append(_77017_lit.get()._field_exprs,1);_77017_lit.get()._field_exprs.__push(_1d832a53d_build_brace_lit_part(&(*_self_), _1ab111340_part));
			}
			_iter_next_1ab110e44:;
			++it;
			goto _iter_begin_1ab110e44;
		}
		_iter_end_1ab110e44:;
	}
	return _77017_lit;
}



inline jule::Any _1d832ab59_build_brace_range(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _78841_tokens) {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _78918_expr_tokens;
	jule::I32 _78931_range_n;
	std::tie(_78918_expr_tokens,_78931_range_n) = _1d8323558_get_range_expr_tokens(_78841_tokens);
	{
		
		if ((_78918_expr_tokens.len() == 0LL)) {
			_case_begin_1ab1133ec:;
			{
				return jule::Any(_1d832a84b_build_brace_lit(&(*_self_), _78841_tokens));
			}
		}
		else if ((_78931_range_n > 0LL)) {
			_case_begin_1ab113474:;
			{
				_1d8324081_push_err(&(*_self_), _78841_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab113353:;
	}
	jule::Ptr<_1d7b77374_Token> _80013_else_token = _78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)];
	if (_78918_expr_tokens[(_78918_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U32>(17LLU)) {
		_78918_expr_tokens=_78918_expr_tokens.slice(0LL,(_78918_expr_tokens.len() - 1LL));
		jule::Any _80321_d = _1d832ca4b_build(&(*_self_), _78918_expr_tokens);
		if (_80321_d == jule::Any(jule::Any(nullptr))) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _80321_d };
			
			if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>()) {
				_case_begin_1ab117841:;
				{
					_78841_tokens=_78841_tokens.slice((_78918_expr_tokens.len() + 1LL));
					jule::I32 _81025_i = 0LL;
					jule::Slice<jule::Ptr<_1d7b77374_Token>> _81125_range_tokens = _1d833070d_range(_81025_i,jule::Str("{", 1),jule::Str("}", 1),_78841_tokens);
					jule::Ptr<_1d7b8ae59_FnCallExpr> _81225_model = _80321_d.operator jule::Ptr<_1d7b8ae59_FnCallExpr>();
					if (_1d7a36112_ignored(_81225_model.ptr())) {
						_1d8324081_push_err(&(*_self_), _80013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1d83243a0_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_81225_model.get()._field_exception=_1d8333ab8_build_scope((*_self_)._field_p, _81125_range_tokens,_78841_tokens[(_81025_i - 1LL)]);
					return _80321_d;
				}
			}
			else {
				_case_begin_1ab116378:;
				{
					_1d8324081_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_1ab11660e:;
		}
	}
	{
		auto &_match_expr{ _78918_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ab11b933:;
			{
				return _1d8328cab_build_unsafe(&(*_self_), _78841_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ab11b999:;
			{
				return jule::Any(_1d832899d_build_anon_fn(&(*_self_), _78841_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ab11ba10:;
			{
				return jule::Any(_1d832a241_build_typed_struct_literal(&(*_self_), _78841_tokens));
			}
		}
		else {
			_case_begin_1ab113276:;
			{
				_1d8324081_push_err(&(*_self_), _78918_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab11b7bd:;
	}
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d832ae67_get_enumerable_parts(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _84043_tokens) {
	_84043_tokens=_84043_tokens.slice(1LL,(_84043_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _84218_parts;
	jule::Slice<_1d77ca48e_Log> _84225_errors;
	std::tie(_84218_parts,_84225_errors) = _1d8330dd4_parts(_84043_tokens,static_cast<jule::U32>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84225_errors);
	return _84218_parts;
}



inline jule::Ptr<_1d7b8b8e9_SliceExpr> _1d832b275_build_slice(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _84734_tokens) {
	jule::Ptr<_1d7b8b8e9_SliceExpr> _84817_slc = jule::new_ptr<_1d7b8b8e9_SliceExpr>(_1d7b8b8e9_SliceExpr(_84734_tokens[0LL],_84734_tokens[(_84734_tokens.len() - 1LL)],jule::Slice<jule::Ptr<_1d7b09a43_Expr>>()));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _85317_parts = _1d832ae67_get_enumerable_parts(&(*_self_), _84734_tokens);
	if ((_85317_parts.len() == 0LL)) {
		return _84817_slc;
	}
	_84817_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1d7b09a43_Expr>>::alloc(0LL,static_cast<jule::I32>(_85317_parts.len()));
	{
		auto &expr = _85317_parts;
		auto it = expr.begin();
		_iter_begin_1ab122ce1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab1234c8_p = *it;
			{
				if ((_1ab1234c8_p.len() == 0LL)) {
					goto _iter_next_1ab122ce1;
				}
				_84817_slc.get()._field_exprs = jule::alloc_for_append(_84817_slc.get()._field_exprs,1);_84817_slc.get()._field_exprs.__push(_1d832d167_build_from_tokens(&(*_self_), _1ab1234c8_p));
			}
			_iter_next_1ab122ce1:;
			++it;
			goto _iter_begin_1ab122ce1;
		}
		_iter_end_1ab122ce1:;
	}
	return _84817_slc;
}



inline jule::Ptr<_1d7b897e8_IndexingExpr> _1d832b6c6_build_indexing(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _86937_expr_tokens,jule::Slice<jule::Ptr<_1d7b77374_Token>> _87013_tokens,jule::Ptr<_1d7b77374_Token> _87035_error_token) {
	jule::Ptr<_1d7b77374_Token> _87117_end = _87013_tokens[(_87013_tokens.len() - 1LL)];
	_87013_tokens=_87013_tokens.slice(1LL,(_87013_tokens.len() - 1LL));
	if ((_87013_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _87035_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b09a43_Expr> _87717_expr = _1d832d167_build_from_tokens(&(*_self_), _86937_expr_tokens);
	if ((_87717_expr == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1d7b09a43_Expr> _88117_index = _1d832d167_build_from_tokens(&(*_self_), _87013_tokens);
	if ((_88117_index == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d7b897e8_IndexingExpr>(_1d7b897e8_IndexingExpr(_87035_error_token,_87117_end,_87717_expr,_88117_index));
}



inline jule::Ptr<_1d7b8c059_SlicingExpr> _1d832bc6a_build_slicing(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _89337_expr_tokens,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _89365_slicing_tokens,jule::I32& _89410_colon,jule::Ptr<_1d7b77374_Token>& _89427_error_token,jule::Ptr<_1d7b77374_Token> _89452_end) {
	jule::Ptr<_1d7b8c059_SlicingExpr> _89517_slc = jule::new_ptr<_1d7b8c059_SlicingExpr>(_1d7b8c059_SlicingExpr(_89427_error_token,_89452_end,_1d832d167_build_from_tokens(&(*_self_), _89337_expr_tokens),jule::Ptr<_1d7b09a43_Expr>(),jule::Ptr<_1d7b09a43_Expr>()));
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _90117_start_expr_tokens = _89365_slicing_tokens.slice(0LL,_89410_colon);
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_start=_1d832d167_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _90617_to_expr_tokens = _89365_slicing_tokens.slice((_89410_colon + 1LL));
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89517_slc.get()._field_to=_1d832d167_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	}
	return _89517_slc;
}



inline jule::Any _1d832c078_build_bracket_range(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _91442_tokens) {
	jule::Ptr<_1d7b77374_Token> _91517_error_token = _91442_tokens[0LL];
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _91618_expr_tokens;
	jule::I32 _91631_range_n;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1d8323558_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1ab12dc0e:;
			{
				return jule::Any(_1d832b275_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if ((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL)) {
			_case_begin_1ab12dc86:;
			{
				_1d8324081_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab12db65:;
	}
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I32 _93417_i = 0LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _93518_slicing_tokens;
	jule::I32 _93534_colon;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1d8342412_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return jule::Any(_1d832bc6a_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token,_91442_tokens[(_91442_tokens.len() - 1LL)]));
	}
	return jule::Any(_1d832b6c6_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1d832c386_build_data(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _94234_tokens) {
	{
		auto _match_expr{ _94234_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ab133692:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ab133708:;
			{
				return _1d83250d7_build_single(&(*_self_), _94234_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ab13376e:;
			{
				if (_94234_tokens[0LL].get()._field_id == static_cast<jule::U32>(31LLU)) {
					return jule::Any(_1d83253e5_build_cpp_linked_ident(&(*_self_), _94234_tokens));
				}
			}
		}
		_match_end_1ab133494:;
	}
	jule::Ptr<_1d7b77374_Token> _95417_token = _94234_tokens[0LL];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab1337d5:;
			{
				if ((_94234_tokens.len() > 1LL) && (_95417_token.get()._field_kind == jule::Str("*", 1))) {
					_95417_token=_94234_tokens[1LL];
					if ((_95417_token.get()._field_id == static_cast<jule::U32>(1LLU)) || (_95417_token.get()._field_id == static_cast<jule::U32>(35LLU))) {
						return jule::Any(_1d832612c_build_type(&(*_self_), _94234_tokens));
					}
				}
				return jule::Any(_1d8325703_build_unary(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab135a4b:;
			{
				if ((_94234_tokens.len() < 3LL)) {
					goto _match_end_1ab13593b;
				}
				if ((_94234_tokens.len() > 3LL)) {
					jule::Ptr<_1d7b77374_Token> _97221_t = _94234_tokens[(_94234_tokens.len() - 1LL)];
					if ((_97221_t.get()._field_id == static_cast<jule::U32>(3LLU)) && (_97221_t.get()._field_kind == jule::Str(")", 1))) {
						goto _match_end_1ab13593b;
					}
				}
				jule::Ptr<_1d7b77374_Token> _97817_next = _94234_tokens[1LL];
				if ((_97817_next.get()._field_id != static_cast<jule::U32>(3LLU)) || (_97817_next.get()._field_kind != jule::Str("]", 1))) {
					goto _match_end_1ab13593b;
				}
				return jule::Any(_1d832612c_build_type(&(*_self_), _94234_tokens));
			}
		}
		_match_end_1ab13593b:;
	}
	_95417_token=_94234_tokens[(_94234_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ab135ab2:;
			{
				return _1d832643a_build_sub_ident(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ab1412b5:;
			{
				return jule::Any(_1d832612c_build_type(&(*_self_), _94234_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab14132b:;
			{
				return _1d8326a56_build_op_right(&(*_self_), _94234_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab141392:;
			{
				{
					auto &_match_expr{ _95417_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab142edc:;
						{
							return _1d8328393_build_parentheses_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ab143086:;
						{
							return _1d832ab59_build_brace_range(&(*_self_), _94234_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab1430ec:;
						{
							return _1d832c078_build_bracket_range(&(*_self_), _94234_tokens);
						}
					}
					_match_end_1ab142e76:;
				}
			}
		}
		_match_end_1ab1411d8:;
	}
	_1d8324081_push_err(&(*_self_), _95417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d7b8ac6c_BinopExpr> _1d832c73d_build_binop(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _100935_tokens,jule::I32 _100953_i) {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _101017_left_tokens = _100935_tokens.slice(0LL,_100953_i);
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _101117_right_tokens = _100935_tokens.slice((_100953_i + 1LL));
	if ((_101017_left_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _100935_tokens[_100953_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_101117_right_tokens.len() == 0LL)) {
		_1d8324081_push_err(&(*_self_), _100935_tokens[_100953_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d83243a0_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d7b8ac6c_BinopExpr>(_1d7b8ac6c_BinopExpr(_1d832d167_build_from_tokens(&(*_self_), _101017_left_tokens),_1d832d167_build_from_tokens(&(*_self_), _101117_right_tokens),_100935_tokens[_100953_i]));
}



inline jule::Any _1d832ca4b_build(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _102929_tokens) {
	jule::I32 _103013_i = _1d8323019_find_lowest_prec_op(_102929_tokens);
	if ((_103013_i == -1LL)) {
		return _1d832c386_build_data(&(*_self_), _102929_tokens);
	}
	return jule::Any(_1d832c73d_build_binop(&(*_self_), _102929_tokens,_103013_i));
}



inline jule::Any _1d832cd59_build_kind(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _103734_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _103818_parts;
	jule::Slice<_1d77ca48e_Log> _103825_errors;
	std::tie(_103818_parts,_103825_errors) = _1d8330dd4_parts(_103734_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_103825_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_103825_errors);
		return jule::Any(nullptr);
	} else if ((_103818_parts.len() > 1LL)) {
		return jule::Any(_1d83246ad_build_tuple(&(*_self_), _103818_parts));
	}
	return _1d832ca4b_build(&(*_self_), _103734_tokens);
}



inline jule::Ptr<_1d7b09a43_Expr> _1d832d167_build_from_tokens(_1d8323789_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _104840_tokens) {
	if ((_104840_tokens.len() == 0LL)) {
		return nullptr;
	}
	return jule::new_ptr<_1d7b09a43_Expr>(_1d7b09a43_Expr(_104840_tokens[0LL],_104840_tokens[(_104840_tokens.len() - 1LL)],jule::Bool(),_1d832cd59_build_kind(&(*_self_), _104840_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, _1d8323789_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d832dab3_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1d8332424_stop(_1d83320e4_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1d8332688_stopped(_1d83320e4_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1d8332a51_push_err(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b77374_Token> _23327_token,jule::Str _23342_fmt,jule::Slice<jule::Any> _23355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d8331599_compiler_err(_23327_token,_23342_fmt,_23355_args));
}



inline void _1d8332d70_push_suggestion(_1d83320e4_Parser* _self_,jule::Str _23834_fmt,jule::Slice<jule::Any> _23847_args) {
	{
		_1d83318eb_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23834_fmt,_23847_args);
	}
}



inline jule::Ptr<_1d7b09a43_Expr> _1d833317d_build_expr(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _24235_tokens) {
	jule::Ptr<_1d8323789_ExprBuilder> _24317_ep = jule::new_ptr<_1d8323789_ExprBuilder>(_1d8323789_ExprBuilder(_self_));
	jule::Ptr<_1d7b09a43_Expr> _24617_expr = _1d832d167_build_from_tokens(_24317_ep.ptr(), _24235_tokens);
	return _24617_expr;
}



inline jule::Ptr<_1d7a4352b_Directive> _1d833348b_build_directive(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _25038_tokens) {
	if ((_25038_tokens.len() == 1LL)) {
		_1d8332a51_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25038_tokens[1LL].get()._field_column != static_cast<jule::I32>(static_cast<jule::I32>((_25038_tokens[0LL].get()._field_column + 1LL)))) {
		_1d8332a51_push_err(&(*_self_), _25038_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1d7a4352b_Directive>(_1d7a4352b_Directive(_25038_tokens[1LL],_25038_tokens.slice(2LL)));
}



inline void _1d8333711_push_directive(_1d83320e4_Parser* _self_,jule::Ptr<_1d7a4352b_Directive> _26737_d) {
	if ((_26737_d == nullptr)) {
		return;
	}
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ab15840e:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1ab157e14_pd = *it;
			{
				if (_26737_d.get()._field_tag.get()._field_kind == _1ab157e14_pd.get()._field_tag.get()._field_kind) {
					return;
				}
			}
			_iter_next_1ab15840e:;
			++it;
			goto _iter_begin_1ab15840e;
		}
		_iter_end_1ab15840e:;
	}
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26737_d);
}



inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8333ab8_build_scope(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _28136_tokens,jule::Ptr<_1d7b77374_Token> _28158_end) {
	jule::Ptr<_1d7b8cdc3_ScopeTree> _28217_s = _1d8313ed8_new_scope();
	_28217_s.get()._field_end=_28158_end;
	_1d8315968_ScopeParser _28417_sp = _1d8315968_ScopeParser(_self_,jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Slice<jule::Ptr<_1d831513d_Stmt>>(),jule::I32());
	_1d832148a_build(&_28417_sp, _28136_tokens,_28217_s);
	return _28217_s;
}



inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d8334019___build_type(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _29144_tokens,jule::I32* _29213_i,jule::Bool _29222_err) {
	_1d83428da_TypeBuilder _29317_tb = _1d83428da_TypeBuilder(_self_,_29144_tokens,_29213_i,_29222_err);
	jule::Ptr<_1d7a0e75b_TypeDecl> _29918_decl;
	jule::Bool _29924_ok;
	std::tie(_29918_decl,_29924_ok) = _1d8345cc8_build(&_29317_tb);
	return std::make_tuple(_29918_decl,_29924_ok);
}



inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d833446a_build_type(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _30442_tokens,jule::I32* _30513_i,jule::Bool _30522_err) {
	jule::Ptr<_1d7b77374_Token> _30613_token = _30442_tokens[(*(_30513_i))];
	jule::Ptr<_1d7a0e75b_TypeDecl> _30718_t;
	jule::Bool _30721_ok;
	std::tie(_30718_t,_30721_ok) = _1d8334019___build_type(_self_, _30442_tokens,_30513_i,_30522_err);
	if (_30522_err && (!(_30721_ok))) {
		_1d8332a51_push_err(_self_.ptr(), _30613_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_30718_t,_30721_ok);
}



inline jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _1d8334778_build_type_alias_decl(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _31446_tokens) {
	jule::I32 _31517_i = 1LL;
	if (_31517_i >= static_cast<jule::I32>(static_cast<jule::I32>(_31446_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _32017_tad = jule::new_ptr<_1d7b8e8b9_TypeAliasDecl>(_1d7b8e8b9_TypeAliasDecl(jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Bool(),jule::Bool(),_31446_tokens[1LL],_31446_tokens[1LL].get()._field_kind,jule::Ptr<_1d7a0e75b_TypeDecl>()));
	jule::Ptr<_1d7b77374_Token> _32417_token = _31446_tokens[_31517_i];
	if (_32417_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _32417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_31517_i)++;
	if (_31517_i >= static_cast<jule::I32>(static_cast<jule::I32>(_31446_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	_32417_token=_31446_tokens[_31517_i];
	if (_32417_token.get()._field_id != static_cast<jule::U32>(11LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	(_31517_i)++;
	if (_31517_i >= static_cast<jule::I32>(static_cast<jule::I32>(_31446_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _31446_tokens[(_31517_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32017_tad;
	}
	jule::Ptr<_1d7a0e75b_TypeDecl> _34518_t;
	jule::Bool _34521_ok;
	std::tie(_34518_t,_34521_ok) = _1d833446a_build_type(_self_, _31446_tokens,(&(_31517_i)),true);
	_32017_tad.get()._field_kind=_34518_t;
	if (_34521_ok && (_31517_i < static_cast<jule::I32>(static_cast<jule::I32>(_31446_tokens.len())))) {
		_1d8332a51_push_err(_self_.ptr(), _31446_tokens[_31517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _32017_tad;
}



inline void _1d8334adb_build_var_type_and_expr(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b8d489_VarDecl>& _35348_v,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _35366_tokens) {
	jule::I32 _35417_i = 0LL;
	jule::Ptr<_1d7b77374_Token> _35517_tok = _35366_tokens[_35417_i];
	if (_35517_tok.get()._field_id == static_cast<jule::U32>(11LLU)) {
		(_35417_i)++;
		if ((_35417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_35366_tokens.len()))) || ((_35366_tokens[_35417_i].get()._field_id == static_cast<jule::U32>(7LLU)) && (_35366_tokens[_35417_i].get()._field_kind == jule::Str("=", 1)))) {
			_1d8332a51_push_err(_self_.ptr(), _35517_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1d7a0e75b_TypeDecl> _36322_t;
		jule::Bool _36325_ok;
		std::tie(_36322_t,_36325_ok) = _1d833446a_build_type(_self_, _35366_tokens,(&(_35417_i)),true);
		if (_36325_ok) {
			_35348_v.get()._field_kind=_36322_t;
			if (_35417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_35366_tokens.len()))) {
				return;
			}
			_35517_tok=_35366_tokens[_35417_i];
		}
	}
	if (_35517_tok.get()._field_id == static_cast<jule::U32>(7LLU)) {
		if ((_35517_tok.get()._field_kind != jule::Str("=", 1))) {
			_1d8332a51_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<jule::Ptr<_1d7b77374_Token>> _37821_expr_tokens = _35366_tokens.slice((_35417_i + 1LL));
		if ((_37821_expr_tokens.len() == 0LL)) {
			_1d8332a51_push_err(_self_.ptr(), _35517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_35348_v.get()._field_expr=_1d833317d_build_expr(_self_, _37821_expr_tokens);
	} else {
		_1d8332a51_push_err(_self_.ptr(), _35517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1d8334de9_build_var_common(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b8d489_VarDecl>& _38941_v,jule::Slice<jule::Ptr<_1d7b77374_Token>> _38958_tokens) {
	_38941_v.get()._field_token=_38958_tokens[0LL];
	if (_38941_v.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _38941_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_38941_v.get()._field_ident=_38941_v.get()._field_token.get()._field_kind;
	_38941_v.get()._field_kind=nullptr;
	if ((_38958_tokens.len() > 1LL)) {
		_38958_tokens=_38958_tokens.slice(1LL);
		_1d8334adb_build_var_type_and_expr(_self_, _38941_v,_38958_tokens);
	}
}



inline void _1d83352b2_build_var_begin(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8d489_VarDecl>& _40439_v,jule::Ptr<jule::I32> _40456_i,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _40466_tokens) {
	jule::Ptr<_1d7b77374_Token> _40513_tok = _40466_tokens[(*(_40456_i))];
	{
		auto &_match_expr{ _40513_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1ab1771ca:;
			{
				_40439_v.get()._field_statically=true;
				goto _case_begin_1ab177241;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ab177241:;
			{
				((*(_40456_i)))++;
				if ((*(_40456_i)) >= static_cast<jule::I32>(static_cast<jule::I32>(_40466_tokens.len()))) {
					_1d8332a51_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_40466_tokens[(*(_40456_i))].get()._field_id == static_cast<jule::U32>(36LLU)) {
					_40439_v.get()._field_mutable=true;
					((*(_40456_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1ab176707:;
			{
				((*(_40456_i)))++;
				_40439_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1ab1760b9:;
			{
				_1d8332a51_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1ab176680:;
	}
	if ((*(_40456_i)) >= static_cast<jule::I32>(static_cast<jule::I32>(_40466_tokens.len()))) {
		_1d8332a51_push_err(&(*_self_), _40513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1d7b8d489_VarDecl> _1d83355c0_build_var(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _43533_tokens) {
	jule::Ptr<jule::I32> _43617_i = jule::new_ptr<jule::I32>(0LL);
	jule::Ptr<_1d7b8d489_VarDecl> _43717_v = jule::new_ptr<_1d7b8d489_VarDecl>(_1d7b8d489_VarDecl(jule::Ptr<_1d7b8cdc3_ScopeTree>(),_43533_tokens[(*(_43617_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::Ptr<_1d7b09a43_Expr>()));
	_1d83352b2_build_var_begin(_self_.ptr(), _43717_v,_43617_i,_43533_tokens);
	if ((*(_43617_i)) >= static_cast<jule::I32>(static_cast<jule::I32>(_43533_tokens.len()))) {
		return nullptr;
	}
	_43533_tokens=_43533_tokens.slice((*(_43617_i)));
	if ((_43533_tokens[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_43533_tokens[0LL].get()._field_kind == jule::Str("&", 1))) {
		_43717_v.get()._field_reference=true;
		if ((_43533_tokens.len() == 1LL)) {
			return nullptr;
		}
		_43533_tokens=_43533_tokens.slice(1LL);
	}
	_1d8334de9_build_var_common(_self_, _43717_v,_43533_tokens);
	return _43717_v;
}



inline jule::Ptr<_1d7b8c246_GenericDecl> _1d83358cd_build_generic(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _45737_tokens) {
	if ((_45737_tokens.len() > 1LL)) {
		_1d8332a51_push_err(&(*_self_), _45737_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d7b8c246_GenericDecl> _46117_g = jule::new_ptr<_1d7b8c246_GenericDecl>(_1d7b8c246_GenericDecl(_45737_tokens[0LL],jule::Str()));
	if (_46117_g.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(&(*_self_), _46117_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_46117_g.get()._field_ident=_46117_g.get()._field_token.get()._field_kind;
	return _46117_g;
}



inline jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _1d8335c85_build_generics(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _47238_tokens,jule::Ptr<_1d7b77374_Token>& _47257_error_token) {
	if ((_47238_tokens.len() == 0LL)) {
		_1d8332a51_push_err(&(*_self_), _47257_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _47818_parts;
	jule::Slice<_1d77ca48e_Log> _47825_errors;
	std::tie(_47818_parts,_47825_errors) = _1d8330dd4_parts(_47238_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_47825_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47825_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _48417_generics = jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>::alloc(0LL,static_cast<jule::I32>(_47818_parts.len()));
	{
		auto &expr = _47818_parts;
		auto it = expr.begin();
		_iter_begin_1ab1862e9:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab18588c_part = *it;
			{
				_48417_generics = jule::alloc_for_append(_48417_generics,1);_48417_generics.__push(_1d83358cd_build_generic(&(*_self_), _1ab18588c_part));
			}
			_iter_next_1ab1862e9:;
			++it;
			goto _iter_begin_1ab1862e9;
		}
		_iter_end_1ab1862e9:;
	}
	return _48417_generics;
}



inline jule::Ptr<_1d7b8d0b0_ParamDecl> _1d8336093_build_self_param(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _49239_tokens) {
	if ((_49239_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1d7b8d0b0_ParamDecl> _49717_param = jule::new_ptr<_1d7b8d0b0_ParamDecl>();
	jule::I32 _50017_i = 0LL;
	if (_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U32>(36LLU)) {
		_49717_param.get()._field_mutable=true;
		(_50017_i)++;
		if (_50017_i >= static_cast<jule::I32>(static_cast<jule::I32>(_49239_tokens.len()))) {
			_1d8332a51_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if ((_49239_tokens[_50017_i].get()._field_kind == jule::Str("&", 1))) {
		_49717_param.get()._field_ident=jule::Str("&", 1);
		(_50017_i)++;
		if (_50017_i >= static_cast<jule::I32>(static_cast<jule::I32>(_49239_tokens.len()))) {
			_1d8332a51_push_err(&(*_self_), _49239_tokens[(_50017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_49239_tokens[_50017_i].get()._field_id == static_cast<jule::U32>(28LLU)) {
		_49717_param.get()._field_ident+=jule::Str("self", 4);
		_49717_param.get()._field_token=_49239_tokens[_50017_i];
		(_50017_i)++;
		if (_50017_i < static_cast<jule::I32>(static_cast<jule::I32>(_49239_tokens.len()))) {
			_1d8332a51_push_err(&(*_self_), _49239_tokens[_50017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _49717_param;
}



inline void _1d833645b_param_type_begin(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8d0b0_ParamDecl>& _53140_param,jule::I32& _53164_i,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _53173_tokens) {
	for (; _53164_i < static_cast<jule::I32>(static_cast<jule::I32>(_53173_tokens.len())); (_53164_i)++) {
		{
			jule::Ptr<_1d7b77374_Token> _53317_token = _53173_tokens[_53164_i];
			if (_53317_token.get()._field_id != static_cast<jule::U32>(7LLU)) {
				return;
			} else if ((_53317_token.get()._field_kind != jule::Str("...", 3))) {
				return;
			}
			if (_53140_param.get()._field_variadic) {
				_1d8332a51_push_err(&(*_self_), _53317_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1ab18d5dc;
			}
			_53140_param.get()._field_variadic=true;
		}
	_iter_next_1ab18d5dc:;
	}
	_iter_end_1ab18d5dc:;
}



inline void _1d833677a_build_param_type(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b8d0b0_ParamDecl>& _54841_param,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _54865_tokens) {
	jule::I32 _54917_i = 0LL;
	_1d833645b_param_type_begin(_self_.ptr(), _54841_param,_54917_i,_54865_tokens);
	if (_54917_i >= static_cast<jule::I32>(static_cast<jule::I32>(_54865_tokens.len()))) {
		return;
	}
	std::tie(_54841_param.get()._field_kind,std::ignore) = _1d833446a_build_type(_self_, _54865_tokens,(&(_54917_i)),true);
	if (_54917_i < static_cast<jule::I32>(static_cast<jule::I32>(_54865_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _54865_tokens[_54917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1d8336b43_build_param_body(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b8d0b0_ParamDecl>& _56141_param,jule::Ptr<jule::I32> _56164_i,jule::Slice<jule::Ptr<_1d7b77374_Token>> _56177_tokens) {
	jule::Ptr<_1d7b77374_Token> _56217_tok = _56177_tokens[(*(_56164_i))];
	_56141_param.get()._field_ident=_56217_tok.get()._field_kind;
	if (((*(_56164_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_56177_tokens.len()))) {
		return;
	} else if ((((_56177_tokens.len() - (*(_56164_i))) - 1LL) < 2LL)) {
		_1d8332a51_push_err(_self_.ptr(), _56217_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_56217_tok=_56177_tokens[((*(_56164_i)) + 1LL)];
	if (_56217_tok.get()._field_id != static_cast<jule::U32>(11LLU)) {
		_1d833677a_build_param_type(_self_, _56141_param,_56177_tokens);
		return;
	}
	_56177_tokens=_56177_tokens.slice(((*(_56164_i)) + 2LL));
	_1d833677a_build_param_type(_self_, _56141_param,_56177_tokens);
}



inline jule::Ptr<_1d7b8d0b0_ParamDecl> _1d8336e51_build_param(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _58235_tokens) {
	jule::Ptr<_1d7b8d0b0_ParamDecl> _58317_param = jule::new_ptr<_1d7b8d0b0_ParamDecl>(_1d7b8d0b0_ParamDecl(_58235_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::Str()));
	if (_58317_param.get()._field_token.get()._field_id == static_cast<jule::U32>(36LLU)) {
		_58317_param.get()._field_mutable=true;
		if ((_58235_tokens.len() == 1LL)) {
			_1d8332a51_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_58235_tokens=_58235_tokens.slice(1LL);
		_58317_param.get()._field_token=_58235_tokens[0LL];
	}
	if ((_58235_tokens.len() >= 3LL)) {
		if ((_58317_param.get()._field_token.get()._field_id == static_cast<jule::U32>(7LLU)) && (_58317_param.get()._field_token.get()._field_kind == jule::Str("&", 1))) {
			if ((_58235_tokens.len() == 1LL)) {
				_1d8332a51_push_err(_self_.ptr(), _58235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_58235_tokens[1LL].get()._field_id == static_cast<jule::U32>(2LLU)) && (_58235_tokens[2LL].get()._field_id == static_cast<jule::U32>(11LLU))) {
				_58317_param.get()._field_reference=true;
				_58235_tokens=_58235_tokens.slice(1LL);
				_58317_param.get()._field_token=_58235_tokens[0LL];
			}
		}
	}
	if (_58317_param.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_58317_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1d833677a_build_param_type(_self_, _58317_param,_58235_tokens);
	} else {
		jule::Ptr<jule::I32> _61921_i = jule::new_ptr<jule::I32>(0LL);
		_1d8336b43_build_param_body(_self_, _58317_param,_61921_i,_58235_tokens);
	}
	return _58317_param;
}



inline void _1d83371c6_check_params(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>& _62636_params) {
	{
		auto &expr = _62636_params;
		auto it = expr.begin();
		_iter_begin_1ab1a1e6e:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8d0b0_ParamDecl> _1ab1a2018_param = *it;
			{
				if (_1d7ade3c9_is_self(_1ab1a2018_param.ptr()) || (_1ab1a2018_param.get()._field_kind != nullptr)) {
					goto _iter_next_1ab1a1e6e;
				}
				if ((_1ab1a2018_param.get()._field_token == nullptr)) {
					_1d8332a51_push_err(&(*_self_), _1ab1a2018_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_1ab1a2018_param.get()._field_kind=jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_1ab1a2018_param.get()._field_token,jule::Any(jule::Any(jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_1ab1a2018_param.get()._field_token,_1ab1a2018_param.get()._field_token.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>()))))));
					_1ab1a2018_param.get()._field_ident=jule::Str("<anonymous>", 11);
				}
			}
			_iter_next_1ab1a1e6e:;
			++it;
			goto _iter_begin_1ab1a1e6e;
		}
		_iter_end_1ab1a1e6e:;
	}
}



inline jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>> _1d833757d_build_params(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _64637_tokens,jule::Bool _64655_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _64718_parts;
	jule::Slice<_1d77ca48e_Log> _64725_errs;
	std::tie(_64718_parts,_64725_errs) = _1d8330dd4_parts(_64637_tokens,static_cast<jule::U32>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64725_errs);
	if ((_64718_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>> _65317_params = nullptr;
	if (_64655_method && (_64718_parts.len() > 0LL)) {
		jule::Ptr<_1d7b8d0b0_ParamDecl> _65521_param = _1d8336093_build_self_param(_self_.ptr(), _64718_parts[0LL]);
		if ((_65521_param != nullptr) && _1d7ade3c9_is_self(_65521_param.ptr())) {
			_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_65521_param);
			_64718_parts=_64718_parts.slice(1LL);
		}
	}
	{
		auto &expr = _64718_parts;
		auto it = expr.begin();
		_iter_begin_1ab1a7370:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab1a8b35_part = *it;
			{
				jule::Ptr<_1d7b8d0b0_ParamDecl> _66321_param = _1d8336e51_build_param(_self_, _1ab1a8b35_part);
				if ((_66321_param != nullptr)) {
					_65317_params = jule::alloc_for_append(_65317_params,1);_65317_params.__push(_66321_param);
				}
			}
			_iter_next_1ab1a7370:;
			++it;
			goto _iter_begin_1ab1a7370;
		}
		_iter_end_1ab1a7370:;
	}
	_1d83371c6_check_params(_self_.ptr(), _65317_params);
	return _65317_params;
}



inline std::tuple<jule::Ptr<_1d7a17db3_RetTypeDecl>,jule::Bool> _1d8337935_build_multi_ret_type(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _67345_tokens,jule::I32& _67368_i) {
	jule::Ptr<_1d7a17db3_RetTypeDecl> _67378_t = jule::Ptr<_1d7a17db3_RetTypeDecl>();
	jule::Bool _67395_ok = jule::Bool();
	_67378_t=jule::new_ptr<_1d7a17db3_RetTypeDecl>();
	(_67368_i)++;
	if (_67368_i >= static_cast<jule::I32>(static_cast<jule::I32>(_67345_tokens.len()))) {
		(_67368_i)--;
		std::tie(_67378_t.get()._field_kind,_67395_ok) = _1d833446a_build_type(_self_, _67345_tokens,(&(_67368_i)),false);
		return std::make_tuple(_67378_t,_67395_ok);
	}
	(_67368_i)--;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _68317_range_tokens = _1d833070d_range(_67368_i,jule::Str("(", 1),jule::Str(")", 1),_67345_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _68518_parts;
	jule::Slice<_1d77ca48e_Log> _68525_errs;
	std::tie(_68518_parts,_68525_errs) = _1d8330dd4_parts(_68317_range_tokens,static_cast<jule::U32>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68525_errs);
	if ((_68518_parts.len() == 0LL)) {
		return std::make_tuple(_67378_t,_67395_ok);
	}
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _69117_types = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>::alloc(0LL,static_cast<jule::I32>(_68518_parts.len()));
	_67378_t.get()._field_idents=jule::Slice<jule::Ptr<_1d7b77374_Token>>::alloc(0LL,static_cast<jule::I32>(_68518_parts.len()));
	{
		auto &expr = _68518_parts;
		auto it = expr.begin();
		_iter_begin_1ab1aec6d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab1aedd3_part = *it;
			{
				jule::Ptr<_1d7b77374_Token> _69421_token = _1ab1aedd3_part[0LL];
				jule::I32 _69521_offset = 0LL;
				if ((_1ab1aedd3_part.len() > 1LL)) {
					_69421_token=_1ab1aedd3_part[1LL];
					if (_69421_token.get()._field_id == static_cast<jule::U32>(11LLU)) {
						_69521_offset=2LL;
						if ((_1ab1aedd3_part.len() < 3LL)) {
							_1d8332a51_push_err(_self_.ptr(), _69421_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1ab1aec6d;
						}
					}
				}
				_69421_token=_1ab1aedd3_part[0LL];
				if ((_69521_offset != 2LL)) {
					jule::Ptr<_1d7b77374_Token> _71125_new_token = jule::new_ptr<_1d7b77374_Token>((*(_69421_token)));
					_71125_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_71125_new_token);
				} else {
					_67378_t.get()._field_idents = jule::alloc_for_append(_67378_t.get()._field_idents,1);_67378_t.get()._field_idents.__push(_69421_token);
				}
				jule::Ptr<_1d7a0e75b_TypeDecl> _71822_tk;
				std::tie(_71822_tk,std::ignore) = _1d833446a_build_type(_self_, _1ab1aedd3_part,(&(_69521_offset)),true);
				if (_69521_offset < static_cast<jule::I32>(static_cast<jule::I32>(_1ab1aedd3_part.len()))) {
					_1d8332a51_push_err(_self_.ptr(), _1ab1aedd3_part[_69521_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_69117_types = jule::alloc_for_append(_69117_types,1);_69117_types.__push(_71822_tk);
			}
			_iter_next_1ab1aec6d:;
			++it;
			goto _iter_begin_1ab1aec6d;
		}
		_iter_end_1ab1aec6d:;
	}
	if ((_69117_types.len() > 1LL)) {
		_67378_t.get()._field_kind=jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_67345_tokens[0LL],jule::Any(jule::Any(jule::new_ptr<_1d7a17610_TupleTypeDecl>(_1d7a17610_TupleTypeDecl(_69117_types))))));
	} else {
		_67378_t.get()._field_kind=_69117_types[0LL];
	}
	_67395_ok=true;
	return std::make_tuple(_67378_t,_67395_ok);
}



inline std::tuple<jule::Ptr<_1d7a17db3_RetTypeDecl>,jule::Bool> _1d8337cdc_build_ret_type(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _74139_tokens,jule::I32& _74162_i) {
	jule::Ptr<_1d7a17db3_RetTypeDecl> _74172_t = jule::Ptr<_1d7a17db3_RetTypeDecl>();
	jule::Bool _74189_ok = jule::Bool();
	_74172_t=jule::new_ptr<_1d7a17db3_RetTypeDecl>();
	if (_74162_i >= static_cast<jule::I32>(static_cast<jule::I32>(_74139_tokens.len()))) {
		return std::make_tuple(_74172_t,_74189_ok);
	}
	jule::Ptr<_1d7b77374_Token> _74717_token = _74139_tokens[_74162_i];
	{
		auto &_match_expr{ _74717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab1b8969:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab1b923e:;
			{
				if ((_74717_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74172_t,_74189_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ab1b92a5:;
			{
				if ((_74162_i + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_74139_tokens.len()))) {
					_1d8332a51_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74172_t,_74189_ok);
				}
				(_74162_i)++;
				_74717_token=_74139_tokens[_74162_i];
				if (_74717_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _74717_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1ab1bb43e:;
							{
								std::tie(_74172_t,_74189_ok) = _1d8337935_build_multi_ret_type(_self_, _74139_tokens,_74162_i);
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1ab1bc0aa:;
							{
								_1d8332a51_push_err(_self_.ptr(), _74717_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74172_t,_74189_ok);
							}
						}
						_match_end_1ab1bbe89:;
					}
				}
				std::tie(_74172_t.get()._field_kind,_74189_ok) = _1d833446a_build_type(_self_, _74139_tokens,(&(_74162_i)),true);
				return std::make_tuple(_74172_t,_74189_ok);
			}
		}
		_match_end_1ab1b9195:;
	}
	(_74162_i)++;
	_1d8332a51_push_err(_self_.ptr(), _74717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74172_t,_74189_ok);
}



inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833823d_build_fn_prototype(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _78643_tokens,jule::I32& _78666_i,jule::Bool _78674_method) {
	jule::Ptr<_1d7b8d29c_FnDecl> _78717_f = jule::new_ptr<_1d7b8d29c_FnDecl>(_1d7b8d29c_FnDecl(_78643_tokens[_78666_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),jule::Ptr<_1d7a17db3_RetTypeDecl>(),jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>()));
	if (_78717_f.get()._field_token.get()._field_id == static_cast<jule::U32>(38LLU)) {
		_78717_f.get()._field_statically=true;
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I32>(static_cast<jule::I32>(_78643_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	}
	if (_78717_f.get()._field_token.get()._field_id == static_cast<jule::U32>(35LLU)) {
		_78717_f.get()._field_unsafety=true;
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I32>(static_cast<jule::I32>(_78643_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_token=_78643_tokens[_78666_i];
	}
	(_78666_i)++;
	if (_78666_i >= static_cast<jule::I32>(static_cast<jule::I32>(_78643_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b77374_Token> _82013_tok = _78643_tokens[_78666_i];
	if (_82013_tok.get()._field_id == static_cast<jule::U32>(2LLU)) {
		(_78666_i)++;
		if (_78666_i >= static_cast<jule::I32>(static_cast<jule::I32>(_78643_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _78717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_78717_f.get()._field_ident=_82013_tok.get()._field_kind;
	} else {
		_78717_f.get()._field_ident=jule::Str("<anonymous>", 11);
	}
	jule::Ptr<_1d7b77374_Token> _83213_error_token = _78643_tokens[_78666_i];
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _83317_generics_tokens = _1d833070d_range(_78666_i,jule::Str("[", 1),jule::Str("]", 1),_78643_tokens);
	if ((_83317_generics_tokens != nullptr)) {
		_78717_f.get()._field_generics=_1d8335c85_build_generics(_self_.ptr(), _83317_generics_tokens,_83213_error_token);
	}
	if ((_78643_tokens[_78666_i].get()._field_kind != jule::Str("(", 1))) {
		_1d8332a51_push_err(_self_.ptr(), _78643_tokens[_78666_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _84317_params_toks = _1d833070d_range(_78666_i,jule::Str("(", 1),jule::Str(")", 1),_78643_tokens);
	if ((_84317_params_toks.len() > 0LL)) {
		_78717_f.get()._field_params=_1d833757d_build_params(_self_, _84317_params_toks,_78674_method);
	}
	if (_78666_i < static_cast<jule::I32>(static_cast<jule::I32>(_78643_tokens.len()))) {
		jule::Ptr<_1d7b77374_Token> _84917_token = _78643_tokens[_78666_i];
		if ((_84917_token.get()._field_id == static_cast<jule::U32>(7LLU)) && (_84917_token.get()._field_kind == jule::Str("!", 1))) {
			_78717_f.get()._field_exceptional=true;
			(_78666_i)++;
		}
	}
	std::tie(_78717_f.get()._field_result,std::ignore) = _1d8337cdc_build_ret_type(_self_, _78643_tokens,_78666_i);
	return _78717_f;
}



inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833868e_build_fn(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _86233_tokens,jule::Bool _86251_method,jule::Bool _86265_prototype) {
	jule::I32 _86317_i = 0LL;
	jule::Ptr<_1d7b8d29c_FnDecl> _86417_f = _1d833823d_build_fn_prototype(_self_, _86233_tokens,_86317_i,_86251_method);
	if (_86265_prototype) {
		if (_86317_i < static_cast<jule::I32>(static_cast<jule::I32>(_86233_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _86233_tokens[(_86317_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _86417_f;
	} else if ((_86417_f == nullptr)) {
		return _86417_f;
	}
	if (_86317_i >= static_cast<jule::I32>(static_cast<jule::I32>(_86233_tokens.len()))) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _88017_block_tokens = _1d833070d_range(_86317_i,jule::Str("{", 1),jule::Str("}", 1),_86233_tokens);
	if ((_88017_block_tokens != nullptr)) {
		_86417_f.get()._field_scope=_1d8333ab8_build_scope(_self_, _88017_block_tokens,_86233_tokens[(_86317_i - 1LL)]);
		_86417_f.get()._field_scope.get()._field_unsafety=_86417_f.get()._field_unsafety;
		if (_86317_i < static_cast<jule::I32>(static_cast<jule::I32>(_86233_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _86233_tokens[_86317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _86417_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _86417_f;
}



inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d833899c_get_use_decl_selectors(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _89645_tokens) {
	jule::I32 _89717_i = 0LL;
	_89645_tokens=_1d833070d_range(_89717_i,jule::Str("{", 1),jule::Str("}", 1),_89645_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _89918_parts;
	jule::Slice<_1d77ca48e_Log> _89925_errs;
	std::tie(_89918_parts,_89925_errs) = _1d8330dd4_parts(_89645_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_89925_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89925_errs);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _90517_selectors = jule::Slice<jule::Ptr<_1d7b77374_Token>>::alloc(0LL,static_cast<jule::I32>(_89918_parts.len()));
	{
		auto &expr = _89918_parts;
		auto it = expr.begin();
		_iter_begin_1ab1d5d60:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab1d7339_part = *it;
			{
				if ((_1ab1d7339_part.len() > 1LL)) {
					_1d8332a51_push_err(&(*_self_), _1ab1d7339_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1d7b77374_Token> _91021_tok = _1ab1d7339_part[0LL];
				if ((_91021_tok.get()._field_id != static_cast<jule::U32>(2LLU)) && (_91021_tok.get()._field_id != static_cast<jule::U32>(28LLU))) {
					_1d8332a51_push_err(&(*_self_), _91021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1d8332d70_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1ab1d5d60;
				}
				_90517_selectors = jule::alloc_for_append(_90517_selectors,1);_90517_selectors.__push(_91021_tok);
			}
			_iter_next_1ab1d5d60:;
			++it;
			goto _iter_begin_1ab1d5d60;
		}
		_iter_end_1ab1d5d60:;
	}
	return _90517_selectors;
}



inline void _1d8338cbb_build_cpp_use_decl(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _92142_decl,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _92159_tokens) {
	if ((_92159_tokens.len() > 1LL)) {
		_1d8332a51_push_err(&(*_self_), _92159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d7b77374_Token> _92513_token = _92159_tokens[0LL];
	if ((_92513_token.get()._field_id != static_cast<jule::U32>(6LLU)) || ((_92513_token.get()._field_kind[0LL] != '`') && (_92513_token.get()._field_kind[0LL] != '\"'))) {
		_1d8332a51_push_err(&(*_self_), _92513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_92142_decl.get()._field_cpp_linked=true;
	_92142_decl.get()._field_link_path=_92513_token.get()._field_kind.slice(1LL,(_92513_token.get()._field_kind.len() - 1LL));
}



inline void _1d83390da_build_std_use_decl(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _93442_decl,jule::Slice<jule::Ptr<_1d7b77374_Token>> _93462_tokens) {
	_93442_decl.get()._field_std=true;
	jule::Ptr<_1d7b77374_Token> _93717_token = _93462_tokens[0LL];
	if ((_93462_tokens.len() < 3LL)) {
		_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_93462_tokens=_93462_tokens.slice(2LL);
	_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93717_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ab1e1e48:;
			{
				_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab1e1ee2:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("}", 1))) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<jule::Ptr<_1d7b77374_Token>> _95421_selectors = nullptr;
				std::tie(_93462_tokens,_95421_selectors) = _1d83309a5_range_last(_93462_tokens);
				_93442_decl.get()._field_selected=_1d833899c_get_use_decl_selectors(&(*_self_), _95421_selectors);
				if ((_93462_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if (_93717_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab1e2058:;
			{
				if ((_93717_token.get()._field_kind != jule::Str("*", 1))) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93717_token=_93462_tokens[(_93462_tokens.len() - 1LL)];
				if (_93717_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93462_tokens=_93462_tokens.slice(0LL,(_93462_tokens.len() - 1LL));
				if ((_93462_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _93717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_93442_decl.get()._field_full=true;
			}
		}
		_match_end_1ab1e1de3:;
	}
	_93442_decl.get()._field_link_path=jule::Str("std::", 5) + _1d8331c2b_tokstoa(_93462_tokens);
}



inline void _1d8339409_build_ident_use_decl(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _99644_decl,jule::Slice<jule::Ptr<_1d7b77374_Token>> _99664_tokens) {
	_99644_decl.get()._field_std=false;
	jule::Ptr<_1d7b77374_Token> _99917_token = _99664_tokens[(_99664_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _99917_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ab1ec508:;
			{
				_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab1ed2b7:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("}", 1))) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<jule::Ptr<_1d7b77374_Token>> _101021_selectors = nullptr;
				std::tie(_99664_tokens,_101021_selectors) = _1d83309a5_range_last(_99664_tokens);
				_99644_decl.get()._field_selected=_1d833899c_get_use_decl_selectors(&(*_self_), _101021_selectors);
				if ((_99664_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if (_99917_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab1ed32d:;
			{
				if ((_99917_token.get()._field_kind != jule::Str("*", 1))) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99917_token=_99664_tokens[(_99664_tokens.len() - 1LL)];
				if (_99917_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99664_tokens=_99664_tokens.slice(0LL,(_99664_tokens.len() - 1LL));
				if ((_99664_tokens.len() == 0LL)) {
					_1d8332a51_push_err(&(*_self_), _99917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_99644_decl.get()._field_full=true;
			}
		}
		_match_end_1ab1ed1b8:;
	}
	_99644_decl.get()._field_link_path=_1d8331c2b_tokstoa(_99664_tokens);
}



inline void _1d8339728_parse_use_decl(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _105938_decl,jule::Slice<jule::Ptr<_1d7b77374_Token>> _105958_tokens) {
	if (_105938_decl.get()._field_cpp_linked) {
		_1d8338cbb_build_cpp_use_decl(&(*_self_), _105938_decl,_105958_tokens);
		return;
	}
	jule::Ptr<_1d7b77374_Token> _106517_token = _105958_tokens[0LL];
	if (_106517_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_105958_tokens.len() > 2LL) && (_105958_tokens[1LL].get()._field_id == static_cast<jule::U32>(12LLU))) {
		_105938_decl.get()._field_alias=_106517_token.get()._field_kind;
		if (_105958_tokens[2LL].get()._field_id != static_cast<jule::U32>(2LLU)) {
			_1d8332a51_push_err(&(*_self_), _106517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1d8332d70_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_105958_tokens=_105958_tokens.slice(2LL);
		_106517_token=_105958_tokens[0LL];
	}
	
	{
		
		if ((_106517_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1ab20d43c:;
			{
				_1d83390da_build_std_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		else {
			_case_begin_1ab20d0b8:;
			{
				_1d8339409_build_ident_use_decl(&(*_self_), _105938_decl,_105958_tokens);
			}
		}
		_match_end_1ab20d041:;
	}
}



inline jule::Ptr<_1d7b8ee80_UseDecl> _1d8339ad0_build_use_decl(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _109337_tokens,jule::Bool _109355_cpp_linked) {
	jule::Ptr<_1d7b8ee80_UseDecl> _109417_decl = jule::new_ptr<_1d7b8ee80_UseDecl>(_1d7b8ee80_UseDecl(_109337_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1d7b77374_Token>>(),_109355_cpp_linked,jule::Bool()));
	if ((_109337_tokens.len() < 2LL)) {
		_1d8332a51_push_err(&(*_self_), _109417_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_109337_tokens=_109337_tokens.slice(1LL);
	_1d8339728_parse_use_decl(&(*_self_), _109417_decl,_109337_tokens);
	return _109417_decl;
}



inline jule::Ptr<_1d7b09a43_Expr> _1d8339e87_build_enum_item_expr(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<jule::I32> _110744_i,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _110758_tokens) {
	jule::I32 _110817_brace_n = 0LL;
	jule::I32 _110913_expr_start = (*(_110744_i));
	for (; (*(_110744_i)) < static_cast<jule::I32>(static_cast<jule::I32>(_110758_tokens.len())); ((*(_110744_i)))++) {
		{
			jule::Ptr<_1d7b77374_Token> _111117_t = _110758_tokens[(*(_110744_i))];
			if (_111117_t.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _111117_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ab21450e:;
						{
							(_110817_brace_n)++;
							goto _iter_next_1ab213024;
						}
					}
					else {
						_case_begin_1ab213e15:;
						{
							(_110817_brace_n)--;
						}
					}
					_match_end_1ab2141ac:;
				}
			}
			if ((_110817_brace_n > 0LL)) {
				goto _iter_next_1ab213024;
			}
			if ((_111117_t.get()._field_id == static_cast<jule::U32>(8LLU)) || (((*(_110744_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_110758_tokens.len())))) {
				jule::Slice<jule::Ptr<_1d7b77374_Token>> _112925_expr_tokens = nullptr;
				if (_111117_t.get()._field_id == static_cast<jule::U32>(8LLU)) {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start,(*(_110744_i)));
				} else {
					_112925_expr_tokens=_110758_tokens.slice(_110913_expr_start);
				}
				return _1d833317d_build_expr(_self_, _112925_expr_tokens);
			}
		}
	_iter_next_1ab213024:;
	}
	_iter_end_1ab213024:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>> _1d833a295_build_enum_items(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _114141_tokens) {
	jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::I32> _114317_i = jule::new_ptr<jule::I32>(0LL);
	for (; (*(_114317_i)) < static_cast<jule::I32>(static_cast<jule::I32>(_114141_tokens.len())); ((*(_114317_i)))++) {
		{
			jule::Ptr<_1d7b77374_Token> _114521_t = _114141_tokens[(*(_114317_i))];
			jule::Ptr<_1d7b9016c_EnumItemDecl> _114621_item = jule::new_ptr<_1d7b9016c_EnumItemDecl>(_1d7b9016c_EnumItemDecl());
			_114621_item.get()._field_token=_114521_t;
			if (_114621_item.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
				_1d8332a51_push_err(_self_.ptr(), _114621_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
			if ((((*(_114317_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_114141_tokens.len()))) || (_114141_tokens[((*(_114317_i)) + 1LL)].get()._field_id == static_cast<jule::U32>(8LLU))) {
				if (((*(_114317_i)) + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_114141_tokens.len()))) {
					((*(_114317_i)))++;
				}
				_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);
				goto _iter_next_1ab2186ab;
			}
			((*(_114317_i)))++;
			_114521_t=_114141_tokens[(*(_114317_i))];
			((*(_114317_i)))++;
			if ((_114521_t.get()._field_id != static_cast<jule::U32>(7LLU)) || (_114521_t.get()._field_kind != jule::Str("=", 1))) {
				_1d8332a51_push_err(_self_.ptr(), _114521_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1ab2186ab;
			}
			if (((*(_114317_i)) >= static_cast<jule::I32>(static_cast<jule::I32>(_114141_tokens.len()))) || (_114141_tokens[(*(_114317_i))].get()._field_id == static_cast<jule::U32>(8LLU))) {
				_1d8332a51_push_err(_self_.ptr(), _114521_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1ab2186ab;
			}
			_114621_item.get()._field_expr=_1d8339e87_build_enum_item_expr(_self_, _114317_i,_114141_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);
		}
	_iter_next_1ab2186ab:;
	}
	_iter_end_1ab2186ab:;
	return _114217_items;
}



inline jule::Ptr<_1d7b9058a_EnumDecl> _1d833a5a3_build_enum_decl(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _117840_tokens) {
	if ((_117840_tokens.len() < 2LL) || (_117840_tokens.len() < 3LL)) {
		_1d8332a51_push_err(_self_.ptr(), _117840_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b9058a_EnumDecl> _118317_e = jule::new_ptr<_1d7b9058a_EnumDecl>(_1d7b9058a_EnumDecl(_117840_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>>(),jule::Ptr<_1d7b77374_Token>()));
	if (_118317_e.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_118317_e.get()._field_ident=_118317_e.get()._field_token.get()._field_kind;
	jule::I32 _119117_i = 2LL;
	if (_117840_tokens[_119117_i].get()._field_id == static_cast<jule::U32>(11LLU)) {
		(_119117_i)++;
		if (_119117_i >= static_cast<jule::I32>(static_cast<jule::I32>(_117840_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _117840_tokens[(_119117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _118317_e;
		}
		std::tie(_118317_e.get()._field_kind,std::ignore) = _1d833446a_build_type(_self_, _117840_tokens,(&(_119117_i)),true);
		if (_119117_i >= static_cast<jule::I32>(static_cast<jule::I32>(_117840_tokens.len()))) {
			_1d8332424_stop(_self_.ptr());
			_1d8332a51_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _118317_e;
		}
	} else {
		_118317_e.get()._field_kind=nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _120817_item_tokens = _1d833070d_range(_119117_i,jule::Str("{", 1),jule::Str("}", 1),_117840_tokens);
	if ((_120817_item_tokens == nullptr)) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _118317_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _118317_e;
	} else if (_119117_i < static_cast<jule::I32>(static_cast<jule::I32>(_117840_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _117840_tokens[_119117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_118317_e.get()._field_end=_117840_tokens[(_119117_i - 1LL)];
	_118317_e.get()._field_items=_1d833a295_build_enum_items(_self_, _120817_item_tokens);
	return _118317_e;
}



inline jule::Ptr<_1d7b90d82_FieldDecl> _1d833a8b1_build_field(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _122235_tokens) {
	jule::Ptr<_1d7b90d82_FieldDecl> _122317_f = jule::new_ptr<_1d7b90d82_FieldDecl>(_1d7b90d82_FieldDecl());
	_122317_f.get()._field_public=_122235_tokens[0LL].get()._field_id == static_cast<jule::U32>(21LLU);
	if (_122317_f.get()._field_public) {
		if ((_122235_tokens.len() == 1LL)) {
			_1d8332a51_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(1LL);
	}
	_122317_f.get()._field_mutable=_122235_tokens[0LL].get()._field_id == static_cast<jule::U32>(36LLU);
	if (_122317_f.get()._field_mutable) {
		if ((_122235_tokens.len() == 1LL)) {
			_1d8332a51_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(1LL);
	}
	_122317_f.get()._field_token=_122235_tokens[0LL];
	if (_122317_f.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _122317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_122317_f.get()._field_ident=_122317_f.get()._field_token.get()._field_kind;
	if ((_122235_tokens.len() == 1LL)) {
		_1d8332a51_push_err(_self_.ptr(), _122235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_122235_tokens[1LL].get()._field_id != static_cast<jule::U32>(11LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _122235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_122235_tokens=_122235_tokens.slice(2LL);
	jule::I32 _126017_i = 0LL;
	std::tie(_122317_f.get()._field_kind,std::ignore) = _1d833446a_build_type(_self_, _122235_tokens,(&(_126017_i)),true);
	if (_126017_i < static_cast<jule::I32>(static_cast<jule::I32>(_122235_tokens.len()))) {
		jule::Ptr<_1d7b77374_Token> _126317_token = _122235_tokens[_126017_i];
		if ((_126317_token.get()._field_id != static_cast<jule::U32>(7LLU)) || (_126317_token.get()._field_kind != jule::Str("=", 1))) {
			_1d8332a51_push_err(_self_.ptr(), _122235_tokens[_126017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_126017_i)++;
		if (_126017_i >= static_cast<jule::I32>(static_cast<jule::I32>(_122235_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _126317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_122235_tokens=_122235_tokens.slice(_126017_i);
		_122317_f.get()._field_default=_1d833317d_build_expr(_self_, _122235_tokens);
	}
	return _122317_f;
}



inline jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>> _1d833ac13_build_struct_decl_fields(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _128048_tokens) {
	jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>> _128117_fields = nullptr;
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _128217_stmts = _1d83154d4_split_stmts(_128048_tokens);
	{
		auto &expr = _128217_stmts;
		auto it = expr.begin();
		_iter_begin_1ab239de7:;
		if (it != expr.end()) {
			jule::Ptr<_1d831513d_Stmt> _1ab239e3b_stmt = *it;
			{
				_128048_tokens=_1ab239e3b_stmt.get()._field_tokens;
				jule::Ptr<_1d7b90d82_FieldDecl> _128521_f = _1d833a8b1_build_field(_self_, _128048_tokens);
				_128117_fields = jule::alloc_for_append(_128117_fields,1);_128117_fields.__push(_128521_f);
			}
			_iter_next_1ab239de7:;
			++it;
			goto _iter_begin_1ab239de7;
		}
		_iter_end_1ab239de7:;
	}
	return _128117_fields;
}



inline jule::Ptr<_1d7b916e0_StructDecl> _1d833b010_build_struct_decl(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _129142_tokens) {
	if ((_129142_tokens.len() < 3LL)) {
		_1d8332a51_push_err(_self_.ptr(), _129142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I32 _129717_i = 1LL;
	jule::Ptr<_1d7b916e0_StructDecl> _129817_s = jule::new_ptr<_1d7b916e0_StructDecl>(_1d7b916e0_StructDecl(_129142_tokens[_129717_i],jule::Ptr<_1d7b77374_Token>(),jule::Str(),jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>()));
	if (_129817_s.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_129717_i)++;
	if (_129717_i >= static_cast<jule::I32>(static_cast<jule::I32>(_129142_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _129817_s;
	}
	_129817_s.get()._field_ident=_129817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1d7b77374_Token> _131213_error_token = _129142_tokens[_129717_i];
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _131317_generics_tokens = _1d833070d_range(_129717_i,jule::Str("[", 1),jule::Str("]", 1),_129142_tokens);
	if ((_131317_generics_tokens != nullptr)) {
		_129817_s.get()._field_generics=_1d8335c85_build_generics(_self_.ptr(), _131317_generics_tokens,_131213_error_token);
	}
	if (_129717_i >= static_cast<jule::I32>(static_cast<jule::I32>(_129142_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _129142_tokens[(_129717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _132317_body_tokens = _1d833070d_range(_129717_i,jule::Str("{", 1),jule::Str("}", 1),_129142_tokens);
	if ((_132317_body_tokens == nullptr)) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _129817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _129817_s;
	}
	if (_129717_i < static_cast<jule::I32>(static_cast<jule::I32>(_129142_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _129142_tokens[_129717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_129817_s.get()._field_fields=_1d833ac13_build_struct_decl_fields(_self_, _132317_body_tokens);
	_129817_s.get()._field_end=_129142_tokens[(_129717_i - 1LL)];
	return _129817_s;
}



inline void _1d833b285_check_method_receiver(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8d29c_FnDecl>& _133841_f) {
	if (_133841_f.get()._field_statically) {
		if ((_133841_f.get()._field_params.len() > 0LL) && _1d7ade3c9_is_self(_133841_f.get()._field_params[0LL].ptr())) {
			_1d8332a51_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_133841_f.get()._field_params.len() == 0LL)) {
		_1d8332a51_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1d7b8d0b0_ParamDecl> _135113_param = _133841_f.get()._field_params[0LL];
	if ((!(_1d7ade3c9_is_self(_135113_param.ptr())))) {
		_1d8332a51_push_err(&(*_self_), _133841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> _1d833b593_build_trait_methods(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _135843_tokens) {
	jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>> _135917_methods = nullptr;
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _136017_stmts = _1d83154d4_split_stmts(_135843_tokens);
	{
		auto &expr = _136017_stmts;
		auto it = expr.begin();
		_iter_begin_1ab24bc2d:;
		if (it != expr.end()) {
			jule::Ptr<_1d831513d_Stmt> _1ab24bc72_stmt = *it;
			{
				_135843_tokens=_1ab24bc72_stmt.get()._field_tokens;
				if ((_135843_tokens.len() == 0LL)) {
					goto _iter_next_1ab24bc2d;
				}
				jule::Bool _136721_is_pub = false;
				if (_135843_tokens[0LL].get()._field_id == static_cast<jule::U32>(21LLU)) {
					_136721_is_pub=true;
					if ((_135843_tokens.len() == 1LL)) {
						_1d8332a51_push_err(_self_.ptr(), _135843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1ab24bc2d;
					}
					_135843_tokens=_135843_tokens.slice(1LL);
				}
				jule::Ptr<_1d7b8d29c_FnDecl> _137721_f = _1d833868e_build_fn(_self_, _135843_tokens,true,true);
				if ((_137721_f != nullptr)) {
					if (_1d7b0b0e9_is_anon(_137721_f.ptr())) {
						_1d8332a51_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					_1d833b285_check_method_receiver(_self_.ptr(), _137721_f);
					if ((_137721_f.get()._field_generics.len() > 0LL)) {
						_1d8332a51_push_err(_self_.ptr(), _137721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_137721_f.get()._field_public=_136721_is_pub;
					_135917_methods = jule::alloc_for_append(_135917_methods,1);_135917_methods.__push(_137721_f);
				}
			}
			_iter_next_1ab24bc2d:;
			++it;
			goto _iter_begin_1ab24bc2d;
		}
		_iter_end_1ab24bc2d:;
	}
	return _135917_methods;
}



inline jule::Ptr<_1d7b91cea_TraitDecl> _1d833b8a1_build_trait_decl(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _139341_tokens) {
	if ((_139341_tokens.len() < 3LL)) {
		_1d8332a51_push_err(_self_.ptr(), _139341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b91cea_TraitDecl> _139817_t = jule::new_ptr<_1d7b91cea_TraitDecl>(_1d7b91cea_TraitDecl(_139341_tokens[1LL],jule::Ptr<_1d7b77374_Token>(),jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>()));
	if (_139817_t.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_139817_t.get()._field_ident=_139817_t.get()._field_token.get()._field_kind;
	jule::I32 _140617_i = 2LL;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _140717_body_tokens = _1d833070d_range(_140617_i,jule::Str("{", 1),jule::Str("}", 1),_139341_tokens);
	if ((_140717_body_tokens == nullptr)) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _139817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_140617_i < static_cast<jule::I32>(static_cast<jule::I32>(_139341_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _139341_tokens[_140617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_139817_t.get()._field_methods=_1d833b593_build_trait_methods(_self_, _140717_body_tokens);
	_139817_t.get()._field_end=_139341_tokens[(_140617_i - 1LL)];
	return _139817_t;
}



inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833bbae_build_cpp_link_fn(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _142241_tokens) {
	_142241_tokens=_142241_tokens.slice(1LL);
	jule::Ptr<_1d7b8d29c_FnDecl> _142417_f = _1d833868e_build_fn(_self_, _142241_tokens,false,true);
	if ((_142417_f != nullptr)) {
		if (_1d7b0b0e9_is_anon(_142417_f.ptr())) {
			_1d8332a51_push_err(_self_.ptr(), _142417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_142417_f.get()._field_cpp_linked=true;
	}
	return _142417_f;
}



inline jule::Ptr<_1d7b8d489_VarDecl> _1d833bebc_build_cpp_link_var(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _143442_tokens) {
	_143442_tokens=_143442_tokens.slice(1LL);
	jule::Ptr<_1d7b8d489_VarDecl> _143617_v = _1d83355c0_build_var(_self_, _143442_tokens);
	if ((_143617_v != nullptr)) {
		_143617_v.get()._field_cpp_linked=true;
		if ((_143617_v.get()._field_expr != nullptr)) {
			_1d8332a51_push_err(_self_.ptr(), _143617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _143617_v;
}



inline jule::Ptr<_1d7b916e0_StructDecl> _1d833c2ca_build_cpp_link_struct(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _144645_tokens) {
	_144645_tokens=_144645_tokens.slice(1LL);
	jule::Ptr<_1d7b916e0_StructDecl> _144817_s = _1d833b010_build_struct_decl(_self_, _144645_tokens);
	if ((_144817_s != nullptr)) {
		_144817_s.get()._field_cpp_linked=true;
	}
	return _144817_s;
}



inline jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _1d833c62c_build_cpp_link_type_alias(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _145549_tokens) {
	_145549_tokens=_145549_tokens.slice(1LL);
	jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _145717_t = _1d8334778_build_type_alias_decl(_self_, _145549_tokens);
	if ((_145717_t != nullptr)) {
		_145717_t.get()._field_cpp_linked=true;
	}
	return _145717_t;
}



inline jule::Ptr<_1d7b8ee80_UseDecl> _1d833c929_build_cpp_link_use(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _146442_tokens) {
	if ((_146442_tokens.len() == 1LL)) {
		_1d8332a51_push_err(_self_.ptr(), _146442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_146442_tokens=_146442_tokens.slice(1LL);
	
	return _1d8339ad0_build_use_decl(_self_.ptr(), _146442_tokens,true);
}



inline jule::Any _1d833cc37_build_cpp_link(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _147539_tokens) {
	jule::Ptr<_1d7b77374_Token> _147617_token = _147539_tokens[0LL];
	if ((_147539_tokens.len() == 1LL)) {
		_1d8332a51_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_147617_token=_147539_tokens[1LL];
	{
		auto &_match_expr{ _147617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ab2669c3:;
			{
				return jule::Any(_1d833c929_build_cpp_link_use(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ab266a39:;
			{
				return jule::Any(_1d833bbae_build_cpp_link_fn(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ab266aa0:;
			{
				return jule::Any(_1d833bebc_build_cpp_link_var(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1ab266b16:;
			{
				return jule::Any(_1d833c2ca_build_cpp_link_struct(_self_, _147539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ab26740d:;
			{
				return jule::Any(_1d833c62c_build_cpp_link_type_alias(_self_, _147539_tokens));
			}
		}
		else {
			_case_begin_1ab266396:;
			{
				_1d8332a51_push_err(_self_.ptr(), _147617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab2668c4:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1d7b8d29c_FnDecl> _1d833d045_get_method(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _150135_tokens) {
	jule::I32 _150217_i = 0LL;
	jule::Ptr<_1d7b77374_Token> _150317_token = _150135_tokens[_150217_i];
	if (_150317_token.get()._field_id == static_cast<jule::U32>(38LLU)) {
		if ((_150217_i + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_150135_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	}
	if (_150317_token.get()._field_id == static_cast<jule::U32>(35LLU)) {
		if ((_150217_i + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_150135_tokens.len()))) {
			_1d8332a51_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_150217_i)++;
		_150317_token=_150135_tokens[_150217_i];
	}
	if (_150317_token.get()._field_id != static_cast<jule::U32>(33LLU)) {
		_1d8332a51_push_err(_self_.ptr(), _150317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b8d29c_FnDecl> _152717_f = _1d833868e_build_fn(_self_, _150135_tokens,true,false);
	if ((_152717_f != nullptr) && _1d7b0b0e9_is_anon(_152717_f.ptr())) {
		_1d8332a51_push_err(_self_.ptr(), _152717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _152717_f;
}



inline void _1d833d364_parse_impl_body(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b92405_Impl>& _153440_ipl,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _153457_tokens) {
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _153517_stmts = _1d83154d4_split_stmts(_153457_tokens);
	{
		auto &expr = _153517_stmts;
		auto it = expr.begin();
		_iter_begin_1ab272072:;
		if (it != expr.end()) {
			jule::Ptr<_1d831513d_Stmt> _1ab2720b6_stmt = *it;
			{
				_153457_tokens=_1ab2720b6_stmt.get()._field_tokens;
				jule::Ptr<_1d7b77374_Token> _153821_token = _153457_tokens[0LL];
				jule::Bool _153921_is_pub = false;
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(39LLU)) {
						_case_begin_1ab27312d:;
						{
							_1d8333711_push_directive(_self_.ptr(), _1d833348b_build_directive(_self_.ptr(), _153457_tokens));
							goto _iter_next_1ab272072;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(21LLU)) {
						_case_begin_1ab2733b4:;
						{
							_153921_is_pub=true;
							if ((_153457_tokens.len() == 1LL)) {
								_1d8332a51_push_err(_self_.ptr(), _153457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1ab272072;
							}
							_153457_tokens=_153457_tokens.slice(1LL);
							if ((_153457_tokens.len() > 0LL)) {
								_153821_token=_153457_tokens[0LL];
							}
						}
					}
					_match_end_1ab273309:;
				}
				{
					auto &_match_expr{ _153821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(9LLU)) {
						_case_begin_1ab274382:;
						{
							jule::Ptr<_1d7b8d489_VarDecl> _155825_v = _1d83355c0_build_var(_self_, _153457_tokens);
							if ((_155825_v != nullptr)) {
								_155825_v.get()._field_public=_153921_is_pub;
								_153440_ipl.get()._field_statics = jule::alloc_for_append(_153440_ipl.get()._field_statics,1);_153440_ipl.get()._field_statics.__push(_155825_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::U32>(38LLU) || _match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1ab2743e8:;
						{
							jule::Ptr<_1d7b8d29c_FnDecl> _156625_f = _1d833d045_get_method(_self_, _153457_tokens);
							if ((_156625_f != nullptr)) {
								_1d833b285_check_method_receiver(_self_.ptr(), _156625_f);
								_1d833e024_apply_fn_meta(_self_.ptr(), _156625_f,_153921_is_pub);
								_153440_ipl.get()._field_methods = jule::alloc_for_append(_153440_ipl.get()._field_methods,1);_153440_ipl.get()._field_methods.__push(_156625_f);
							}
						}
					}
					else {
						_case_begin_1ab27342a:;
						{
							_1d8332a51_push_err(_self_.ptr(), _153821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1ab272072;
						}
					}
					_match_end_1ab275aae:;
				}
			}
			_iter_next_1ab272072:;
			++it;
			goto _iter_begin_1ab272072;
		}
		_iter_end_1ab272072:;
	}
}



inline jule::Ptr<_1d7b92405_Impl> _1d833d672_build_impl(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _157934_tokens) {
	jule::Ptr<_1d7b77374_Token> _158017_token = _157934_tokens[0LL];
	if ((_157934_tokens.len() < 2LL)) {
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I32 _158617_i = 1LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _158818_base;
	jule::Bool _158828_ok;
	std::tie(_158818_base,_158828_ok) = _1d833446a_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	}
	if (_158617_i >= static_cast<jule::I32>(static_cast<jule::I32>(_157934_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1d7b92405_Impl> _159717_ipl = jule::new_ptr<_1d7b92405_Impl>(_1d7b92405_Impl(jule::Ptr<_1d7b77374_Token>(),_158818_base,jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>(),jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>>()));
	_158017_token=_157934_tokens[_158617_i];
	if (_158017_token.get()._field_id != static_cast<jule::U32>(12LLU)) {
		if ((_158017_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_158017_token.get()._field_kind == jule::Str("{", 1))) {
			std::tie(_159717_ipl.get()._field_base,_159717_ipl.get()._field_dest) = std::make_tuple(_159717_ipl.get()._field_dest,_159717_ipl.get()._field_base);
			goto _julec_label_body;
		}
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_158617_i)++;
	if (_158617_i >= static_cast<jule::I32>(static_cast<jule::I32>(_157934_tokens.len()))) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_159717_ipl.get()._field_dest,_158828_ok) = _1d833446a_build_type(_self_, _157934_tokens,(&(_158617_i)),true);
	if ((!(_158828_ok))) {
		return nullptr;
	}
	if (_158617_i >= static_cast<jule::I32>(static_cast<jule::I32>(_157934_tokens.len()))) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _163717_body_tokens = _1d833070d_range(_158617_i,jule::Str("{", 1),jule::Str("}", 1),_157934_tokens);
	if ((_163717_body_tokens == nullptr)) {
		_1d8332424_stop(_self_.ptr());
		_1d8332a51_push_err(_self_.ptr(), _158017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_158617_i < static_cast<jule::I32>(static_cast<jule::I32>(_157934_tokens.len()))) {
		_1d8332a51_push_err(_self_.ptr(), _157934_tokens[_158617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_159717_ipl.get()._field_end=_157934_tokens[(_158617_i - 1LL)];
	_1d833d364_parse_impl_body(_self_, _159717_ipl,_163717_body_tokens);
	return _159717_ipl;
}



inline jule::Any _1d833d980_build_node_data(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _165240_tokens) {
	jule::Ptr<_1d7b77374_Token> _165317_token = _165240_tokens[0LL];
	{
		auto &_match_expr{ _165317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ab28a398:;
			{
				
				return jule::Any(_1d8339ad0_build_use_decl(_self_.ptr(), _165240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ab28a222:;
			{
				jule::Ptr<_1d7b8d29c_FnDecl> _166021_f = _1d833868e_build_fn(_self_, _165240_tokens,false,false);
				if ((_166021_f != nullptr)) {
					_166021_f.get()._field_global=true;
					if (_1d7b0b0e9_is_anon(_166021_f.ptr())) {
						_1d8332a51_push_err(_self_.ptr(), _166021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_166021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(36LLU) || _match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1ab28a288:;
			{
				return jule::Any(_1d83355c0_build_var(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ab289672:;
			{
				return jule::Any(_1d8334778_build_type_alias_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1ab2896d8:;
			{
				return jule::Any(_1d833a5a3_build_enum_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1ab28974e:;
			{
				return jule::Any(_1d833b010_build_struct_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1ab2897b5:;
			{
				return jule::Any(_1d833b8a1_build_trait_decl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1ab28a4b9:;
			{
				return jule::Any(_1d833d672_build_impl(_self_, _165240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ab28a530:;
			{
				return _1d833cc37_build_cpp_link(_self_, _165240_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1ab28a596:;
			{
				return jule::Any(_1d833348b_build_directive(_self_.ptr(), _165240_tokens));
			}
		}
		else {
			_case_begin_1ab288ece:;
			{
				_1d8332a51_push_err(_self_.ptr(), _165317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab28960b:;
	}
}



inline void _1d833dc05_check_directive(_1d83320e4_Parser* _self_,_1d7b5c315_Node& _169335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _169335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7a4352b_Directive>>()) {
			_case_begin_1ab293cec:;
			{
				goto _match_end_1ab292405;
			}
		}
		else {
			_case_begin_1ab292922:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1d8332a51_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				}
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1ab292405:;
	}
}



inline void _1d833e024_apply_fn_meta(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b8d29c_FnDecl>& _171037_f,jule::Bool _171049_is_pub) {
	_171037_f.get()._field_public=_171049_is_pub;
	_171037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1d833e343_apply_meta(_1d83320e4_Parser* _self_,_1d7b5c315_Node& _171634_node,jule::Bool _171646_is_pub) {
	{
		auto &_match_expr{ _171634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8d489_VarDecl>>()) {
			_case_begin_1ab295c66:;
			{
				jule::Ptr<_1d7b8d489_VarDecl> _171921_v = _171634_node._field_data.operator jule::Ptr<_1d7b8d489_VarDecl>();
				if ((_171921_v == nullptr)) {
					return;
				}
				_171921_v.get()._field_public=_171646_is_pub;
				_171921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d29c_FnDecl>>()) {
			_case_begin_1ab295ccc:;
			{
				jule::Ptr<_1d7b8d29c_FnDecl> _172721_f = _171634_node._field_data.operator jule::Ptr<_1d7b8d29c_FnDecl>();
				if ((_172721_f == nullptr)) {
					return;
				}
				_1d833e024_apply_fn_meta(&(*_self_), _172721_f,_171646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8e8b9_TypeAliasDecl>>()) {
			_case_begin_1ab295d43:;
			{
				jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _173321_tad = _171634_node._field_data.operator jule::Ptr<_1d7b8e8b9_TypeAliasDecl>();
				if ((_173321_tad == nullptr)) {
					return;
				}
				_173321_tad.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b9058a_EnumDecl>>()) {
			_case_begin_1ab295da9:;
			{
				jule::Ptr<_1d7b9058a_EnumDecl> _173921_ed = _171634_node._field_data.operator jule::Ptr<_1d7b9058a_EnumDecl>();
				if ((_173921_ed == nullptr)) {
					return;
				}
				_173921_ed.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b916e0_StructDecl>>()) {
			_case_begin_1ab29b057:;
			{
				jule::Ptr<_1d7b916e0_StructDecl> _174521_sd = _171634_node._field_data.operator jule::Ptr<_1d7b916e0_StructDecl>();
				if ((_174521_sd == nullptr)) {
					return;
				}
				_174521_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_174521_sd.get()._field_public=_171646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b91cea_TraitDecl>>()) {
			_case_begin_1ab29b0bd:;
			{
				jule::Ptr<_1d7b91cea_TraitDecl> _175321_td = _171634_node._field_data.operator jule::Ptr<_1d7b91cea_TraitDecl>();
				if ((_175321_td == nullptr)) {
					return;
				}
				_175321_td.get()._field_public=_171646_is_pub;
			}
		}
		else {
			_case_begin_1ab295bbc:;
			{
				if (_171646_is_pub) {
					_1d8332a51_push_err(&(*_self_), _171634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1ab295b67:;
	}
}



inline void _1d833e5b8_check_use_decl(_1d83320e4_Parser* _self_,_1d7b5c315_Node& _176534_node) {
	{
		auto &_match_expr{ _176534_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8ee80_UseDecl>>()) {
			_case_begin_1ab2a30a3:;
			{
				goto _match_end_1ab2a32d4;
			}
		}
		else {
			_case_begin_1ab2a3339:;
			{
				return;
			}
		}
		_match_end_1ab2a32d4:;
	}
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1d8332a51_push_err(&(*_self_), _176534_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1d8332d70_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1d833e91a_build_general_scope_node_data(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _178053_st) {
	jule::Bool _178069_is_pub = jule::Bool();
	jule::Any _178083_data = jule::Any();
	if (_178053_st[0LL].get()._field_id == static_cast<jule::U32>(21LLU)) {
		_178069_is_pub=true;
		_178053_st=_178053_st.slice(1LL);
		if ((_178053_st.len() == 0LL)) {
			_1d8332a51_push_err(_self_.ptr(), _178053_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_178069_is_pub,_178083_data);
		}
	}
	_178083_data=_1d833d980_build_node_data(_self_, _178053_st);
	return std::make_tuple(_178069_is_pub,_178083_data);
}



inline _1d7b5c315_Node _1d833ec17_parse_node(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _179535_st) {
	_1d7b5c315_Node _179617_node = _1d7b5c315_Node(_179535_st[0LL],jule::Any());
	jule::Bool _180014_is_pub;
	jule::Any _180026_data;
	std::tie(_180014_is_pub,_180026_data) = _1d833e91a_build_general_scope_node_data(_self_, _179535_st);
	if (_180026_data == jule::Any(jule::Any(nullptr))) {
		return _179617_node;
	}
	_179617_node._field_data=_180026_data;
	_1d833e343_apply_meta(_self_.ptr(), _179617_node,_180014_is_pub);
	_1d833dc05_check_directive(_self_.ptr(), _179617_node);
	_1d833e5b8_check_use_decl(_self_.ptr(), _179617_node);
	return _179617_node;
}



inline void _1d833ee8c_append_node(jule::Ptr<_1d83320e4_Parser> _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _181336_st) {
	if ((_181336_st.len() == 0LL)) {
		return;
	}
	_1d7b5c315_Node _181817_node = _1d833ec17_parse_node(_self_, _181336_st);
	if ((_181817_node._field_data == jule::Any(jule::Any(nullptr))) || _1d8332688_stopped(_self_.ptr())) {
		return;
	}
	{
		
		if (_1d7a1570c_is_directive(&_181817_node)) {
			_case_begin_1ab2ad388:;
			{
				_1d8333711_push_directive(_self_.ptr(), _181817_node._field_data.operator jule::Ptr<_1d7a4352b_Directive>());
			}
		}
		else if (_1d7a29c3d_is_use_decl(&_181817_node)) {
			_case_begin_1ab2ad0ad:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_181817_node._field_data.operator jule::Ptr<_1d7b8ee80_UseDecl>());
			}
		}
		else if (_1d7a246a5_is_decl(&_181817_node) || _1d7a29105_is_impl(&_181817_node)) {
			_case_begin_1ab2ad124:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_181817_node);
			}
		}
		else {
			_case_begin_1ab2ad047:;
			{
				_1d8332a51_push_err(_self_.ptr(), _181817_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab2acee2:;
	}
}



inline void _1d83403ee_remove_range(_1d83320e4_Parser* _self_,jule::I32 _183631_i,jule::Str _183639_kind,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _183651_tokens,jule::Slice<jule::I32>& _183674_ranges) {
	jule::Str _183713_close = _1d83311c0_get_close_kind_of_brace(_183639_kind);
	for (; (_183631_i >= 0LL); (_183631_i)--) {
		{
			jule::Ptr<_1d7b77374_Token> _183917_tok = _183651_tokens[_183674_ranges[_183631_i]];
			if (_183917_tok.get()._field_kind != _183713_close) {
				goto _iter_next_1ab2b2337;
			}
			_183674_ranges=jule::append(_183674_ranges.slice(0LL,_183631_i),_183674_ranges.slice((_183631_i + 1LL)));
			goto _iter_end_1ab2b2337;
		}
	_iter_next_1ab2b2337:;
	}
	_iter_end_1ab2b2337:;
}



inline void _1d834080b_push_wrong_order_close_err(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b77374_Token>& _184846_t,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _184858_tokens,jule::Slice<jule::I32>& _184877_ranges) {
	{
		auto &_match_expr{ _184858_tokens[_184877_ranges[_184877_ranges.len() - 1LL]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1ab2b5109:;
			{
				_1d8332a51_push_err(&(*_self_), _184846_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1ab2b5170:;
			{
				_1d8332a51_push_err(&(*_self_), _184846_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1ab2b51d6:;
			{
				_1d8332a51_push_err(&(*_self_), _184846_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab2b5071:;
	}
}



inline void _1d8340c5c_push_range_close(_1d83320e4_Parser* _self_,jule::Ptr<_1d7b77374_Token> _185935_t,jule::Str _185946_left,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _185958_tokens,jule::Slice<jule::I32>& _185981_ranges) {
	jule::I32 _186013_n = _185981_ranges.len();
	if ((_186013_n == 0LL)) {
		{
			auto &_match_expr{ _185935_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1ab2b8690:;
				{
					_1d8332a51_push_err(&(*_self_), _185935_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1ab2b89c0:;
				{
					_1d8332a51_push_err(&(*_self_), _185935_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1ab2b8a36:;
				{
					_1d8332a51_push_err(&(*_self_), _185935_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1ab2b88c1:;
		}
		return;
	} else if (_185958_tokens[_185981_ranges[(_186013_n - 1LL)]].get()._field_kind != _185946_left) {
		_1d834080b_push_wrong_order_close_err(&(*_self_), _185935_t,_185958_tokens,_185981_ranges);
	}
	_1d83403ee_remove_range(&(*_self_), static_cast<jule::I32>((_186013_n - 1LL)),_185935_t.get()._field_kind,_185958_tokens,_185981_ranges);
}



inline void _1d8340ed2_check_ranges(_1d83320e4_Parser* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _187732_tokens) {
	jule::Slice<jule::I32> _187817_ranges = nullptr;
	{
		auto &expr = _187732_tokens;
		auto it = expr.begin();
		_iter_begin_1ab2bc908:;
		if (it != expr.end()) {
			jule::I32 _1ab2bcab2_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> &_1ab2bccd2_token = *it;
			{
				if (_1ab2bccd2_token.get()._field_id != static_cast<jule::U32>(3LLU)) {
					goto _iter_next_1ab2bc908;
				}
				{
					auto &_match_expr{ _1ab2bccd2_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1ab2bd9e7:;
						{
							_187817_ranges = jule::alloc_for_append(_187817_ranges,1);_187817_ranges.__push(_1ab2bcab2_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab2bda5d:;
						{
							_1d8340c5c_push_range_close(&(*_self_), _1ab2bccd2_token,jule::Str("(", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ab2bdac4:;
						{
							_1d8340c5c_push_range_close(&(*_self_), _1ab2bccd2_token,jule::Str("{", 1),_187732_tokens,_187817_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab2bdb3a:;
						{
							_1d8340c5c_push_range_close(&(*_self_), _1ab2bccd2_token,jule::Str("[", 1),_187732_tokens,_187817_ranges);
						}
					}
					_match_end_1ab2bd420:;
				}
			}
			_iter_next_1ab2bc908:;
			++it;
			_1ab2bcab2_i++;
			goto _iter_begin_1ab2bc908;
		}
		_iter_end_1ab2bc908:;
	}
	{
		auto &expr = _187817_ranges;
		auto it = expr.begin();
		_iter_begin_1ab2c0eb1:;
		if (it != expr.end()) {
			jule::I32 _1ab2c0c19_i = *it;
			{
				jule::Ptr<_1d7b77374_Token> _189917_token = _187732_tokens[_1ab2c0c19_i];
				{
					auto &_match_expr{ _189917_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab2bd156:;
						{
							_1d8332a51_push_err(&(*_self_), _189917_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1ab2c1ad8:;
						{
							_1d8332a51_push_err(&(*_self_), _189917_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ab2c1b4e:;
						{
							_1d8332a51_push_err(&(*_self_), _189917_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1ab2c1a3e:;
				}
			}
			_iter_next_1ab2c0eb1:;
			++it;
			goto _iter_begin_1ab2c0eb1;
		}
		_iter_end_1ab2c0eb1:;
	}
}



inline void _1d8341257_parse(jule::Ptr<_1d83320e4_Parser> _self_,jule::Ptr<_1d7b7c764_File>& _191130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1d7a43eaa_Ast>(_1d7a43eaa_Ast(_191130_f,jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Slice<jule::Ptr<_1d7b8ee80_UseDecl>>(),jule::Slice<_1d7b5c315_Node>()));
	_1d8340ed2_check_ranges(_self_.ptr(), _191130_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _192117_stmts = _1d83154d4_split_stmts(_191130_f.get()._field_tokens);
	jule::I32 _192417_i = 0LL;
	_julec_label_iter:;
	for (; _192417_i < static_cast<jule::I32>(static_cast<jule::I32>(_192117_stmts.len())); (_192417_i)++) {
		{
			jule::Ptr<_1d831513d_Stmt> _192721_stmt = _192117_stmts[_192417_i];
			if ((_192721_stmt.get()._field_tokens.len() == 0LL)) {
				return;
			}
			jule::Any _193225_data;
			std::tie(std::ignore,_193225_data) = _1d833e91a_build_general_scope_node_data(_self_, _192721_stmt.get()._field_tokens);
			if (_193225_data == jule::Any(jule::Any(nullptr))) {
				goto _iter_end_1ab2c5658;
			}
			if (_1d8332688_stopped(_self_.ptr())) {
				return;
			}
			{
				auto &_match_expr{ _193225_data };
				
				if (_match_expr.type_is<jule::Ptr<_1d7a4352b_Directive>>()) {
					_case_begin_1ab2c78ad:;
					{
						jule::Ptr<_1d7a4352b_Directive> _194325_d = _193225_data.operator jule::Ptr<_1d7a4352b_Directive>();
						if ((_194325_d != nullptr) && _1d77cc20a_is_top_directive(_194325_d.get()._field_tag.get()._field_kind)) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_194325_d);
						} else {
							goto _iter_end_1ab2c5658;
						}
					}
				}
				else {
					_case_begin_1ab2c7759:;
					{
						goto _iter_end_1ab2c5658;
					}
				}
				_match_end_1ab2c7704:;
			}
		}
	_iter_next_1ab2c5658:;
	}
	_iter_end_1ab2c5658:;
	_self_.get()._field_errors=nullptr;
	for (; _192417_i < static_cast<jule::I32>(static_cast<jule::I32>(_192117_stmts.len())); (_192417_i)++) {
		{
			jule::Ptr<_1d831513d_Stmt> _195821_stmt = _192117_stmts[_192417_i];
			_1d833ee8c_append_node(_self_, _195821_stmt.get()._field_tokens);
			if (_1d8332688_stopped(_self_.ptr())) {
				goto _iter_end_1ab2c90b8;
			}
		}
	_iter_next_1ab2c90b8:;
	}
	_iter_end_1ab2c90b8:;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1d8332a51_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1d83320e4_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1d8342eb2_push_err(_1d83428da_TypeBuilder* _self_,jule::Ptr<_1d7b77374_Token> _7727_token,jule::Str _7742_fmt) {
	if ((*_self_)._field_err) {
		_1d8332a51_push_err((*_self_)._field_p.ptr(), _7727_token,_7742_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1d83432d1_push_suggestion(_1d83428da_TypeBuilder* _self_,jule::Str _8434_fmt,jule::Slice<jule::Any> _8447_args) {
	if ((*_self_)._field_err) {
		_1d8332d70_push_suggestion((*_self_)._field_p.ptr(), _8434_fmt,_8447_args);
	}
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8343545_build_prim(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7a0e75b_TypeDecl> _9117_t = _1d83420c1_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);
	((*((*_self_)._field_i)))++;
	return _9117_t;
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83437a9_build_namespace(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7a0e75b_TypeDecl> _9717_t = jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));
	jule::Ptr<_1d7a17049_NamespaceTypeDecl> _10117_nst = jule::new_ptr<_1d7a17049_NamespaceTypeDecl>();
	jule::I32 _10217_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d7b77374_Token> _10421_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (((_10217_n & 1LL) == 0LL)) {
				if (_10421_token.get()._field_id != static_cast<jule::U32>(2LLU)) {
					_1d8342eb2_push_err(&(*_self_), _10421_token,jule::Str("invalid syntax", 14));
					_1d83432d1_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10117_nst.get()._field_idents = jule::alloc_for_append(_10117_nst.get()._field_idents,1);_10117_nst.get()._field_idents.__push(_10421_token);
			} else if (_10421_token.get()._field_id != static_cast<jule::U32>(23LLU)) {
				goto _iter_end_1ab2d1de5;
			}
			(_10217_n)++;
		}
	_iter_next_1ab2d1de5:;
	}
	_iter_end_1ab2d1de5:;
	_10117_nst.get()._field_idents=_10117_nst.get()._field_idents.slice(0LL,(_10117_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10117_nst.get()._field_kind=_1d8343ee6_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1d7a16d5c_IdentTypeDecl>();
	_9717_t.get()._field_kind=jule::Any(_10117_nst);
	return _9717_t;
}



inline jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _1d8343a1d_build_generics(_1d83428da_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) {
		return nullptr;
	}
	jule::Ptr<_1d7b77374_Token> _13013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_13013_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_13013_token.get()._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _13517_parts = _1d8343c82_ident_generics(&(*_self_));
	if ((_13517_parts.len() == 0LL)) {
		_1d8342eb2_push_err(&(*_self_), _13013_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>> _14117_types = jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>::alloc(0LL,static_cast<jule::I32>(_13517_parts.len()));
	{
		auto &expr = _13517_parts;
		auto it = expr.begin();
		_iter_begin_1ab2da6e5:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ab2da250_part = *it;
			{
				jule::I32 _14321_j = 0LL;
				jule::Ptr<_1d7a0e75b_TypeDecl> _14422_t;
				std::tie(_14422_t,std::ignore) = _1d833446a_build_type((*_self_)._field_p, _1ab2da250_part,(&(_14321_j)),true);
				if (_14321_j < static_cast<jule::I32>(static_cast<jule::I32>(_1ab2da250_part.len()))) {
					_1d8342eb2_push_err(&(*_self_), _1ab2da250_part[_14321_j],jule::Str("invalid syntax", 14));
				}
				_14117_types = jule::alloc_for_append(_14117_types,1);_14117_types.__push(_14422_t);
			}
			_iter_next_1ab2da6e5:;
			++it;
			goto _iter_begin_1ab2da6e5;
		}
		_iter_end_1ab2da6e5:;
	}
	return _14117_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d8343c82_ident_generics(_1d83428da_TypeBuilder* _self_) {
	jule::I32 _15413_first = (*((*_self_)._field_i));
	jule::I32 _15517_range_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1d7b77374_Token> _15717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (_15717_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _15717_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ab2de210:;
						{
							(_15517_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab2de276:;
						{
							(_15517_range_n)--;
						}
					}
					_match_end_1ab2de188:;
				}
			}
			if ((_15517_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1ab2dce34;
			}
		}
	_iter_next_1ab2dce34:;
	}
	_iter_end_1ab2dce34:;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _17117_tokens = (*_self_)._field_tokens.slice((_15413_first + 1LL),((*((*_self_)._field_i)) - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _17218_parts;
	jule::Slice<_1d77ca48e_Log> _17225_errors;
	std::tie(_17218_parts,_17225_errors) = _1d8330dd4_parts(_17117_tokens,static_cast<jule::U32>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17225_errors);
	}
	return _17218_parts;
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8343ee6_build_ident(_1d83428da_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U32>(23LLU))) {
		return _1d83437a9_build_namespace(&(*_self_));
	}
	jule::Ptr<_1d7b77374_Token> _18317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1d7a16d5c_IdentTypeDecl> _18417_it = jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_18317_token,_18317_token.get()._field_kind,false,jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>()));
	((*((*_self_)._field_i)))++;
	_18417_it.get()._field_generics=_1d8343a1d_build_generics(&(*_self_));
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_18317_token,jule::Any(jule::Any(_18417_it))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d834425a_build_cpp_link(_1d83428da_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U32>(20LLU))) {
		_1d8342eb2_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _20317_t = _1d8343ee6_build_ident(&(*_self_));
	_20317_t.get()._field_kind.operator jule::Ptr<_1d7a16d5c_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20317_t;
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83444be_build_fn(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _20917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1d7b8d29c_FnDecl> _21017_f = _1d833823d_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);
	if ((_21017_f == nullptr)) {
		return nullptr;
	}
	if ((!(_1d7b0b0e9_is_anon(_21017_f.ptr())))) {
		_1d8342eb2_push_err(&(*_self_), _21017_f.get()._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_20917_token,jule::Any(jule::Any(_21017_f))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344733_build_ptr(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _22417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) {
		_1d8342eb2_push_err(&(*_self_), _22417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	if ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U32>(35LLU)) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_22417_token,jule::Any(jule::Any(jule::new_ptr<_1d7a177ec_PtrTypeDecl>(_1d7a177ec_PtrTypeDecl(nullptr))))));
	}
	jule::Ptr<_1d7a0e75b_TypeDecl> _24117_elem = _1d8345a64_step(&(*_self_));
	if ((_24117_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_22417_token,jule::Any(jule::Any(jule::new_ptr<_1d7a177ec_PtrTypeDecl>(_1d7a177ec_PtrTypeDecl(_24117_elem))))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344997_build_sptr(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _25517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) {
		_1d8342eb2_push_err(&(*_self_), _25517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d7a0e75b_TypeDecl> _26217_elem = _1d8345a64_step(&(*_self_));
	if ((_26217_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_25517_token,jule::Any(jule::Any(jule::new_ptr<_1d7a17236_SptrTypeDecl>(_1d7a17236_SptrTypeDecl(_26217_elem))))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344c0b_build_op(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _27617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _27617_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab304753:;
			{
				return _1d8344733_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab3044ab:;
			{
				return _1d8344997_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab304522:;
			{
				return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(jule::Ptr<_1d7b77374_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d7a17236_SptrTypeDecl>(_1d7a17236_SptrTypeDecl(_1d8344997_build_sptr(&(*_self_))))))));
			}
		}
		else {
			_case_begin_1ab303b92:;
			{
				_1d8342eb2_push_err(&(*_self_), _27617_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1ab304445:;
	}
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8344e70_build_slc(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _29517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1d7a0e75b_TypeDecl> _29717_elem = _1d8345a64_step(&(*_self_));
	if ((_29717_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_29517_token,jule::Any(jule::Any(jule::new_ptr<_1d7a17423_SlcTypeDecl>(_1d7a17423_SlcTypeDecl(_29717_elem))))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83451d4_build_arr(_1d83428da_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) {
		_1d8342eb2_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::I32 _31813_expr_delta = (*((*_self_)._field_i));
	jule::Ptr<_1d7a0e75b_TypeDecl> _32017_elem = _1d8345a64_step(&(*_self_));
	if ((_32017_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1d7a179d9_ArrTypeDecl> _32517_arrt = jule::new_ptr<_1d7a179d9_ArrTypeDecl>(_1d7a179d9_ArrTypeDecl(_32017_elem,jule::Ptr<_1d7b09a43_Expr>()));
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _32917_expr_tokens = (*_self_)._field_tokens.slice(0LL,_31813_expr_delta);
	std::tie(std::ignore,_32917_expr_tokens) = _1d83309a5_range_last(_32917_expr_tokens);
	_32917_expr_tokens=_32917_expr_tokens.slice(1LL,(_32917_expr_tokens.len() - 1LL));
	jule::Ptr<_1d7b77374_Token> _33217_token = _32917_expr_tokens[0LL];
	if (((_32917_expr_tokens.len() == 1LL) && (_33217_token.get()._field_id == static_cast<jule::U32>(7LLU))) && (_33217_token.get()._field_kind == jule::Str("...", 3))) {
	} else {
		_32517_arrt.get()._field_size=_1d833317d_build_expr((*_self_)._field_p, _32917_expr_tokens);
	}
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_33217_token,jule::Any(jule::Any(_32517_arrt))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d834558b_build_map(_1d83428da_TypeBuilder* _self_,jule::I32 _34528_colon,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _34545_tokens) {
	jule::Ptr<_1d7b77374_Token> _34617_colon_token = (*_self_)._field_tokens[_34528_colon];
	if ((_34528_colon == 0LL) || ((_34528_colon + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_34545_tokens.len())))) {
		_1d8342eb2_push_err(&(*_self_), _34617_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _35117_key_tokens = _34545_tokens.slice(0LL,_34528_colon);
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _35217_val_tokens = _34545_tokens.slice((_34528_colon + 1LL));
	jule::Ptr<_1d7a17bc6_MapTypeDecl> _35317_mapt = jule::new_ptr<_1d7a17bc6_MapTypeDecl>(_1d7a17bc6_MapTypeDecl());
	jule::I32 _35517_j = 0LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _35618_keyt;
	jule::Bool _35628_ok;
	std::tie(_35618_keyt,_35628_ok) = _1d833446a_build_type((*_self_)._field_p, _35117_key_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if (_35517_j < static_cast<jule::I32>(static_cast<jule::I32>(_35117_key_tokens.len()))) {
		_1d8342eb2_push_err(&(*_self_), _35117_key_tokens[_35517_j],jule::Str("invalid syntax", 14));
	}
	_35317_mapt.get()._field_key=_35618_keyt;
	_35517_j=0LL;
	jule::Ptr<_1d7a0e75b_TypeDecl> _36518_valt;
	std::tie(_36518_valt,_35628_ok) = _1d833446a_build_type((*_self_)._field_p, _35217_val_tokens,(&(_35517_j)),(*_self_)._field_err);
	if ((!(_35628_ok))) {
		return nullptr;
	} else if (_35517_j < static_cast<jule::I32>(static_cast<jule::I32>(_35217_val_tokens.len()))) {
		_1d8342eb2_push_err(&(*_self_), _35217_val_tokens[_35517_j],jule::Str("invalid syntax", 14));
	}
	_35317_mapt.get()._field_val=_36518_valt;
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_34617_colon_token,jule::Any(jule::Any(_35317_mapt))));
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8345800_build_enumerable(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _38017_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((((*((*_self_)._field_i)) + 2LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_tokens.len()))) || (_38017_token.get()._field_id != static_cast<jule::U32>(3LLU))) || (_38017_token.get()._field_kind != jule::Str("[", 1))) {
		_1d8342eb2_push_err(&(*_self_), _38017_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	_38017_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_38017_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_38017_token.get()._field_kind == jule::Str("]", 1))) {
		return _1d8344e70_build_slc(&(*_self_));
	}
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _39418_map_tokens;
	jule::I32 _39430_colon;
	std::tie(_39418_map_tokens,_39430_colon) = _1d8342412_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39430_colon == -1LL)) {
		return _1d83451d4_build_arr(&(*_self_));
	}
	return _1d834558b_build_map(&(*_self_), _39430_colon,_39418_map_tokens);
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8345a64_step(_1d83428da_TypeBuilder* _self_) {
	jule::Ptr<_1d7b77374_Token> _40313_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _40313_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ab31ba78:;
			{
				return _1d8343545_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ab31bade:;
			{
				return _1d8343ee6_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ab31bb55:;
			{
				return _1d834425a_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ab31c705:;
			{
				return _1d83444be_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ab31c76b:;
			{
				return _1d8344c0b_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ab31c7d2:;
			{
				return _1d8345800_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1ab31a989:;
			{
				((*((*_self_)._field_i)))++;
				_1d8342eb2_push_err(&(*_self_), _40313_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1ab31b98a:;
	}
}



inline std::tuple<jule::Ptr<_1d7a0e75b_TypeDecl>,jule::Bool> _1d8345cc8_build(_1d83428da_TypeBuilder* _self_) {
	jule::Bool _42644_ok = jule::Bool();
	jule::Ptr<_1d7a0e75b_TypeDecl> _42717_root = _1d8345a64_step(&(*_self_));
	if ((_42717_root == nullptr)) {
		_42644_ok = false;
		return std::make_tuple(_1d8341d4b_build_void_type(),_42644_ok);
	}
	_42644_ok = true;
	return std::make_tuple(_42717_root,_42644_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1d83428da_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9945e62_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a948d04d_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9ba7327_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a95b51ca_set(_1a9ba7514_Decimal* _self_,jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I32 _23417_i = 0LL;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if (_23417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) {
		return _23332_ok;
	}
	{
		
		if (_23322_s[_23417_i] == '+') {
			_case_begin_1ab771d24:;
			{
				(_23417_i)++;
			}
		}
		else if (_23322_s[_23417_i] == '-') {
			_case_begin_1ab771ecd:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1ab771b15:;
	}
	jule::Bool _25117_sawdot = false;
	jule::Bool _25217_sawdigits = false;
	for (; _23417_i < static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len())); (_23417_i)++) {
		{
			{
				
				if (_23322_s[_23417_i] == '_') {
					_case_begin_1ab773c8d:;
					{
						goto _iter_next_1ab771791;
					}
				}
				else if (_23322_s[_23417_i] == '.') {
					_case_begin_1ab773d15:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						}
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1ab771791;
					}
				}
				else if (('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) {
					_case_begin_1ab773d8c:;
					{
						_25217_sawdigits=true;
						if ((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL)) {
							((*_self_)._field_dp)--;
							goto _iter_next_1ab771791;
						}
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if (_23322_s[_23417_i] != '0') {
							(*_self_)._field_trunc=true;
						}
						goto _iter_next_1ab771791;
					}
				}
				_match_end_1ab773b6c:;
			}
			goto _iter_end_1ab771791;
		}
	_iter_next_1ab771791:;
	}
	_iter_end_1ab771791:;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	}
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	}
	if ((_23417_i < static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) && (_1a97661a0_lower(_23322_s[_23417_i]) == 'e')) {
		(_23417_i)++;
		if (_23417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) {
			return _23332_ok;
		}
		jule::I32 _29721_esign = 1LL;
		if (_23322_s[_23417_i] == '+') {
			(_23417_i)++;
		} else if (_23322_s[_23417_i] == '-') {
			(_23417_i)++;
			_29721_esign=-1LL;
		}
		if (((_23417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9')) {
			return _23332_ok;
		}
		jule::I32 _30721_e = 0LL;
		for (; (_23417_i < static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_')); (_23417_i)++) {
			{
				if (_23322_s[_23417_i] == '_') {
					goto _iter_next_1ab77ba65;
				}
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_30721_e * 10LL))) + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_23322_s[_23417_i]))))) - '0');
				}
			}
		_iter_next_1ab77ba65:;
		}
		_iter_end_1ab77ba65:;
		(*_self_)._field_dp+=static_cast<jule::I32>(_30721_e * _29721_esign);
	}
	if (_23417_i != static_cast<jule::I32>(static_cast<jule::I32>(_23322_s.len()))) {
		return _23332_ok;
	}
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1a97920dd_float_bits(_1a9ba7514_Decimal* _self_,_1a9945e62_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I32 _32817_exp = 0LL;
	jule::U64 _32917_mant = 0LLU;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	}
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	}
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;
			if ((*_self_)._field_dp >= static_cast<jule::I32>(static_cast<jule::I32>(_1a952d30d_POWTAB.len()))) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a952d30d_POWTAB[(*_self_)._field_dp];
			}
			_1a9ba7833_shift(&(*_self_), static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1ab784067:;
	}
	_iter_end_1ab784067:;
	while (((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5'))) {
		{
			jule::I32 _36421_n = 0LL;
			if ((-((*_self_)._field_dp)) >= static_cast<jule::I32>(static_cast<jule::I32>(_1a952d30d_POWTAB.len()))) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a952d30d_POWTAB[(-((*_self_)._field_dp))];
			}
			_1a9ba7833_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1ab785bb2:;
	}
	_iter_end_1ab785bb2:;
	(_32817_exp)--;
	if (_32817_exp < static_cast<jule::I32>(static_cast<jule::I32>((_32730_flt._field_bias + 1LL)))) {
		jule::I32 _38117_n = (_32730_flt._field_bias + 1LL) - _32817_exp;
		_1a9ba7833_shift(&(*_self_), static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	}
	if ((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL))))) {
		goto _julec_label_overflow;
	}
	_1a9ba7833_shift(&(*_self_), static_cast<jule::I32>(static_cast<jule::I32>(1LL + _32730_flt._field_mantbits)));
	_32917_mant=static_cast<jule::U64>(_1a9ba7d0b_rounded_integer(&(*_self_)));
	if (_32917_mant == static_cast<jule::U64>(static_cast<jule::U64>(2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if ((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL))))) {
			goto _julec_label_overflow;
		}
	}
	if (((_32917_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)))) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>(((static_cast<jule::U32>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_32730_flt._field_bias)))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = _32917_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)) - 1LLU))));
	_41717_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL))))))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32730_flt._field_mantbits)) << _32730_flt._field_expbits);
	}
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1a9ba7701_assign(_1a9ba7514_Decimal* _self_,jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();
	jule::I32 _21417_n = 0LL;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);
			_21029_v-=static_cast<jule::U64>(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>(_21029_v + '0'));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1ab79395b:;
	}
	_iter_end_1ab79395b:;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1ab793a16:;
	}
	_iter_end_1ab793a16:;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1a9ba8070_trim((*_self_));
}



inline void _1a9ba7833_shift(_1a9ba7514_Decimal* _self_,jule::I32 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1ab79662e:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1ab7966a6:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1a9ba8416_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1ab796d7c:;
				}
				_iter_end_1ab796d7c:;
				_1a9ba8416_left_shift((*_self_),static_cast<jule::U32>(static_cast<jule::U32>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1ab79672d:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1a9ba81a2_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1ab797dd3:;
				}
				_iter_end_1ab797dd3:;
				_1a9ba81a2_right_shift((*_self_),static_cast<jule::U32>(static_cast<jule::U32>((-(_23528_k)))));
			}
		}
		_match_end_1ab79650d:;
	}
}



inline void _1a9ba7965_round_down(_1a9ba7514_Decimal* _self_,jule::I32 _25529_nd) {
	if ((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd)) {
		return;
	}
	(*_self_)._field_nd=_25529_nd;
	_1a9ba8070_trim((*_self_));
}



inline void _1a9ba7a97_round_up(_1a9ba7514_Decimal* _self_,jule::I32 _26427_nd) {
	if ((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd)) {
		return;
	}
	jule::I32 _27017_i = (_26427_nd - 1LL);
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];
			if (_27217_c < '9') {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I32>((_27017_i + 1LL));
				return;
			}
		}
	_iter_next_1ab79ad09:;
	}
	_iter_end_1ab79ad09:;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1a9ba7bc9_round(_1a9ba7514_Decimal* _self_,jule::I32 _29124_nd) {
	if ((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd)) {
		return;
	}
	if (_1a9ba8548_should_round_up((*_self_),_29124_nd)) {
		_1a9ba7a97_round_up(&(*_self_), _29124_nd);
	} else {
		_1a9ba7965_round_down(&(*_self_), _29124_nd);
	}
}



inline jule::U64 _1a9ba7d0b_rounded_integer(_1a9ba7514_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::I32 _30817_i = 0LL;
	jule::U64 _30917_n = 0LLU;
	for (; (_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_30917_n * 10LLU))) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1ab79e747:;
	}
	_iter_end_1ab79e747:;
	for (; _30817_i < (*_self_)._field_dp; (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1ab7a2b8a:;
	}
	_iter_end_1ab7a2b8a:;
	if (_1a9ba8548_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	}
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9ba7514_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c45e76_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(_1327_x))));
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c47164_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(_1627_x))));
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c473a6_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(_1928_x))));
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c4764d_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(_2227_x))));
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c478e5_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(_2527_x))));
}



inline jule::Ptr<_1a9c46e77_Const> static__1a9c47ae3_new_nil(void) {
	return jule::new_ptr<_1a9c46e77_Const>(_1a9c46e77_Const(jule::Any(jule::Any(nullptr))));
}



inline jule::I64 _1a9c481dc_read_i64(_1a9c46e77_Const* _self_) {
	if ((!(_1a9c4a585_is_i64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1a9c48451_read_u64(_1a9c46e77_Const* _self_) {
	if ((!(_1a9c4a7e9_is_u64(&(*_self_))))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1a9c486b5_read_bool(_1a9c46e77_Const* _self_) {
	if ((!(_1a9c4aa5d_is_bool(&(*_self_))))) {
		return false;
	}
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1a9c48929_read_str(_1a9c46e77_Const* _self_) {
	if ((!(_1a9c4acc2_is_str(&(*_self_))))) {
		return jule::Str();
	}
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1a9c48b8d_read_f64(_1a9c46e77_Const* _self_) {
	if ((!(_1a9c4b036_is_f64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1a9c48e02_as_i64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab9571a2:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab957218:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab956b1e:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ab9569dc:;
			{
				return 0LL;
			}
		}
		_match_end_1ab9567de:;
	}
}



inline jule::U64 _1a9c49166_as_u64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab959072:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab9590d8:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab9589bc:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ab958923:;
			{
				return 0LLU;
			}
		}
		_match_end_1ab9588bd:;
	}
}



inline jule::F64 _1a9c493ca_as_f64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab95ae42:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab95aea8:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab95a88c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1ab95a7e3:;
			{
				return 0LL;
			}
		}
		_match_end_1ab95a78d:;
	}
}



inline void _1a9c49650_set_i64(_1a9c46e77_Const* _self_,jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1a9c498c5_set_u64(_1a9c46e77_Const* _self_,jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1a9c49b4a_set_bool(_1a9c46e77_Const* _self_,jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1a9c49dc0_set_str(_1a9c46e77_Const* _self_,jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1a9c4a145_set_f64(_1a9c46e77_Const* _self_,jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1a9c4a321_set_nil(_1a9c46e77_Const* _self_) {
	(*_self_)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1a9c4a585_is_i64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ab9610bd:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab961354:;
			{
				return false;
			}
		}
		_match_end_1ab961156:;
	}
}



inline jule::Bool _1a9c4a7e9_is_u64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ab961dc1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab9617e9:;
			{
				return false;
			}
		}
		_match_end_1ab961794:;
	}
}



inline jule::Bool _1a9c4aa5d_is_bool(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ab9628a5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab9622cd:;
			{
				return false;
			}
		}
		_match_end_1ab962278:;
	}
}



inline jule::Bool _1a9c4acc2_is_str(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ab963389:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab962cb2:;
			{
				return false;
			}
		}
		_match_end_1ab962c5c:;
	}
}



inline jule::Bool _1a9c4b036_is_f64(_1a9c46e77_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ab963d6d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab963796:;
			{
				return false;
			}
		}
		_match_end_1ab963741:;
	}
}



inline jule::Bool _1a9c4b29a_is_nil(_1a9c46e77_Const* _self_) {
	return (*_self_)._field_data == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1a9c4b5a8_are_same_types(_1a9c46e77_Const* _self_,_1a9c46e77_Const _21033_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_)) == _1a9c4a585_is_i64(&_21033_x)) {
			_case_begin_1ab965e80:;
			{
				return true;
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_)) == _1a9c4a7e9_is_u64(&_21033_x)) {
			_case_begin_1ab96603a:;
			{
				return true;
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_)) == _1a9c4b036_is_f64(&_21033_x)) {
			_case_begin_1ab9660b2:;
			{
				return true;
			}
		}
		else if (_1a9c4aa5d_is_bool(&(*_self_)) == _1a9c4aa5d_is_bool(&_21033_x)) {
			_case_begin_1ab965c93:;
			{
				return true;
			}
		}
		else if (_1a9c4acc2_is_str(&(*_self_)) == _1a9c4acc2_is_str(&_21033_x)) {
			_case_begin_1ab965d09:;
			{
				return true;
			}
		}
		else if (_1a9c4b29a_is_nil(&(*_self_)) == _1a9c4b29a_is_nil(&_21033_x)) {
			_case_begin_1ab965d70:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab965831:;
			{
				return false;
			}
		}
		_match_end_1ab965765:;
	}
}



inline jule::Bool _1a9c4b8b6_and(_1a9c46e77_Const* _self_,_1a9c46e77_Const _23522_x) {
	{
		
		if (_1a9c4aa5d_is_bool(&(*_self_)) && _1a9c4aa5d_is_bool(&_23522_x)) {
			_case_begin_1ab969879:;
			{
				return _1a9c486b5_read_bool(&(*_self_)) && _1a9c486b5_read_bool(&_23522_x);
			}
		}
		else {
			_case_begin_1ab969280:;
			{
				return false;
			}
		}
		_match_end_1ab9691b4:;
	}
}



inline jule::Bool _1a9c4bbc4_or(_1a9c46e77_Const* _self_,_1a9c46e77_Const _24621_x) {
	{
		
		if (_1a9c4aa5d_is_bool(&(*_self_)) && _1a9c4aa5d_is_bool(&_24621_x)) {
			_case_begin_1ab96b293:;
			{
				return _1a9c486b5_read_bool(&(*_self_)) || _1a9c486b5_read_bool(&_24621_x);
			}
		}
		else {
			_case_begin_1ab96ab99:;
			{
				return false;
			}
		}
		_match_end_1ab96aacd:;
	}
}



inline jule::Bool _1a9c4bed2_eq(_1a9c46e77_Const* _self_,_1a9c46e77_Const _25721_x) {
	{
		
		if (_1a9c4b29a_is_nil(&(*_self_))) {
			_case_begin_1ab96c728:;
			{
				return _1a9c4b29a_is_nil(&_25721_x);
			}
		}
		else if (_1a9c4aa5d_is_bool(&(*_self_))) {
			_case_begin_1ab96c7d3:;
			{
				return _1a9c4aa5d_is_bool(&_25721_x) && (_1a9c486b5_read_bool(&(*_self_)) == _1a9c486b5_read_bool(&_25721_x));
			}
		}
		else if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab96c849:;
			{
				return _1a9c4acc2_is_str(&_25721_x) && (_1a9c48929_read_str(&(*_self_)) == _1a9c48929_read_str(&_25721_x));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab96c53b:;
			{
				return _1a9c481dc_read_i64(&(*_self_)) == static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_25721_x)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab96c5a2:;
			{
				return _1a9c48451_read_u64(&(*_self_)) == static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_25721_x)));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab96c618:;
			{
				return _1a9c48b8d_read_f64(&(*_self_)) == static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_25721_x)));
			}
		}
		else {
			_case_begin_1ab96b77c:;
			{
				return false;
			}
		}
		_match_end_1ab96b6b1:;
	}
}



inline jule::Bool _1a9c4c2e0_lt(_1a9c46e77_Const* _self_,_1a9c46e77_Const _28421_x) {
	{
		
		if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab9720e0:;
			{
				return _1a9c4acc2_is_str(&_28421_x) && (_1a9c48929_read_str(&(*_self_)) < _1a9c48929_read_str(&_28421_x));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9721bc:;
			{
				return _1a9c481dc_read_i64(&(*_self_)) < static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_28421_x)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab972233:;
			{
				return _1a9c48451_read_u64(&(*_self_)) < static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_28421_x)));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab971e25:;
			{
				return _1a9c48b8d_read_f64(&(*_self_)) < static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_28421_x)));
			}
		}
		else {
			_case_begin_1ab96eb9d:;
			{
				return false;
			}
		}
		_match_end_1ab96eb15:;
	}
}



inline jule::Bool _1a9c4c5ed_lt_eq(_1a9c46e77_Const* _self_,_1a9c46e77_Const _30724_x) {
	{
		
		if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab9753ac:;
			{
				return _1a9c4acc2_is_str(&_30724_x) && (_1a9c48929_read_str(&(*_self_)) <= _1a9c48929_read_str(&_30724_x));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab975489:;
			{
				return _1a9c481dc_read_i64(&(*_self_)) <= static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_30724_x)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab975500:;
			{
				return _1a9c48451_read_u64(&(*_self_)) <= static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_30724_x)));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab9751e2:;
			{
				return _1a9c48b8d_read_f64(&(*_self_)) <= static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_30724_x)));
			}
		}
		else {
			_case_begin_1ab972398:;
			{
				return false;
			}
		}
		_match_end_1ab9722dd:;
	}
}



inline jule::Bool _1a9c4c90b_gt(_1a9c46e77_Const* _self_,_1a9c46e77_Const _33021_x) {
	{
		
		if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab978877:;
			{
				return _1a9c4acc2_is_str(&_33021_x) && (_1a9c48929_read_str(&(*_self_)) > _1a9c48929_read_str(&_33021_x));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab978954:;
			{
				return _1a9c481dc_read_i64(&(*_self_)) > static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_33021_x)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9789ba:;
			{
				return _1a9c48451_read_u64(&(*_self_)) > static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_33021_x)));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab9786ac:;
			{
				return _1a9c48b8d_read_f64(&(*_self_)) > static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_33021_x)));
			}
		}
		else {
			_case_begin_1ab975665:;
			{
				return false;
			}
		}
		_match_end_1ab9755aa:;
	}
}



inline jule::Bool _1a9c4cc19_gt_eq(_1a9c46e77_Const* _self_,_1a9c46e77_Const _35324_x) {
	{
		
		if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab97bb44:;
			{
				return _1a9c4acc2_is_str(&_35324_x) && (_1a9c48929_read_str(&(*_self_)) >= _1a9c48929_read_str(&_35324_x));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab97bc21:;
			{
				return _1a9c481dc_read_i64(&(*_self_)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_35324_x)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab97bc87:;
			{
				return _1a9c48451_read_u64(&(*_self_)) >= static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_35324_x)));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab97b979:;
			{
				return _1a9c48b8d_read_f64(&(*_self_)) >= static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_35324_x)));
			}
		}
		else {
			_case_begin_1ab978b30:;
			{
				return false;
			}
		}
		_match_end_1ab978a75:;
	}
}



inline jule::Bool _1a9c4d027_add(_1a9c46e77_Const* _self_,_1a9c46e77_Const _37426_x) {
	{
		
		if (_1a9c4acc2_is_str(&(*_self_))) {
			_case_begin_1ab984eb0:;
			{
				if ((!(_1a9c4acc2_is_str(&_37426_x)))) {
					return false;
				}
				_1a9c49dc0_set_str(&(*_self_), _1a9c48929_read_str(&(*_self_)) + _1a9c48929_read_str(&_37426_x));
			}
		}
		else if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab98508c:;
			{
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_37426_x)))));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab985103:;
			{
				if (_1a9c4b036_is_f64(&_37426_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_37426_x)))));
				} else {
					_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) + static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_37426_x)))));
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab984ce5:;
			{
				if (_1a9c4b036_is_f64(&_37426_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_37426_x)))));
				} else {
					_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) + static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_37426_x)))));
				}
			}
		}
		else {
			_case_begin_1ab97beda:;
			{
				return false;
			}
		}
		_match_end_1ab97be30:;
	}
	return true;
}



inline jule::Bool _1a9c4d335_sub(_1a9c46e77_Const* _self_,_1a9c46e77_Const _40326_x) {
	{
		
		if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab98b604:;
			{
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_40326_x)))));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab98b6e2:;
			{
				if (_1a9c4b036_is_f64(&_40326_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_40326_x)))));
				} else {
					_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) - static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_40326_x)))));
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab98b758:;
			{
				if (_1a9c4b036_is_f64(&_40326_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_40326_x)))));
				} else {
					_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) - static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_40326_x)))));
				}
			}
		}
		else {
			_case_begin_1ab98b03d:;
			{
				return false;
			}
		}
		_match_end_1ab98a37d:;
	}
	return true;
}



inline jule::Bool _1a9c4d643_mul(_1a9c46e77_Const* _self_,_1a9c46e77_Const _42726_x) {
	{
		
		if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab991cbe:;
			{
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&_42726_x)))));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab991dac:;
			{
				if (_1a9c4b036_is_f64(&_42726_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_42726_x)))));
				} else {
					_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) * static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_42726_x)))));
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab991e23:;
			{
				if (_1a9c4b036_is_f64(&_42726_x)) {
					_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&_42726_x)))));
				} else {
					_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) * static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_42726_x)))));
				}
			}
		}
		else {
			_case_begin_1ab991708:;
			{
				return false;
			}
		}
		_match_end_1ab99098d:;
	}
	return true;
}



inline jule::Bool _1a9c4d951_div(_1a9c46e77_Const* _self_,_1a9c46e77_Const _45526_x) {
	{
		
		if (_1a9c4b036_is_f64(&(*_self_))) {
			_case_begin_1ab997203:;
			{
				jule::F64 _45817_l = _1a9c493ca_as_f64(&_45526_x);
				if ((_45817_l == 0LL)) {
					return false;
				}
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64(&(*_self_)))),_45817_l)));
			}
		}
		else if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9972e1:;
			{
				jule::F64 _46417_l = _1a9c493ca_as_f64(&_45526_x);
				if ((_46417_l == 0LL)) {
					return false;
				}
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))),_46417_l)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab997357:;
			{
				jule::F64 _47017_l = _1a9c493ca_as_f64(&_45526_x);
				if ((_47017_l == 0LL)) {
					return false;
				}
				_1a9c4a145_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c493ca_as_f64(&(*_self_)))),_47017_l)));
			}
		}
		else {
			_case_begin_1ab996b3c:;
			{
				return false;
			}
		}
		_match_end_1ab995e9e:;
	}
	return true;
}



inline jule::Bool _1a9c4dc5e_mod(_1a9c46e77_Const* _self_,_1a9c46e77_Const _48426_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab99b9aa:;
			{
				jule::I64 _48717_l = _1a9c48e02_as_i64(&_48426_x);
				if ((_48717_l == 0LL)) {
					return false;
				}
				_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))),_48717_l)));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab99baa9:;
			{
				jule::U64 _49317_l = _1a9c49166_as_u64(&_48426_x);
				if ((_49317_l == 0LLU)) {
					return false;
				}
				_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))),_49317_l)));
			}
		}
		else {
			_case_begin_1ab99b3a0:;
			{
				return false;
			}
		}
		_match_end_1ab99b317:;
	}
	return true;
}



inline jule::Bool _1a9c4e06c_bitwise_and(_1a9c46e77_Const* _self_,_1a9c46e77_Const _50634_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9a0261:;
			{
				_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) & static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_50634_x)))));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9a0360:;
			{
				_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) & static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_50634_x)))));
			}
		}
		else {
			_case_begin_1ab99eb56:;
			{
				return false;
			}
		}
		_match_end_1ab99ea8a:;
	}
	return true;
}



inline jule::Bool _1a9c4e37a_bitwise_or(_1a9c46e77_Const* _self_,_1a9c46e77_Const _52033_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9a2d46:;
			{
				_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) | static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_52033_x)))));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9a2e45:;
			{
				_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) | static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_52033_x)))));
			}
		}
		else {
			_case_begin_1ab9a273b:;
			{
				return false;
			}
		}
		_match_end_1ab9a2670:;
	}
	return true;
}



inline jule::Bool _1a9c4e688_xor(_1a9c46e77_Const* _self_,_1a9c46e77_Const _53426_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9a592b:;
			{
				_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64(&(*_self_)))) ^ static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64(&_53426_x)))));
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9a5a2a:;
			{
				_1a9c498c5_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64(&(*_self_)))) ^ static_cast<jule::U64>(static_cast<jule::U64>(_1a9c49166_as_u64(&_53426_x)))));
			}
		}
		else {
			_case_begin_1ab9a5321:;
			{
				return false;
			}
		}
		_match_end_1ab9a5255:;
	}
	return true;
}



inline jule::Bool _1a9c4e996_lshift(_1a9c46e77_Const* _self_,_1a9c46e77_Const _54829_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9a8874:;
			{
				jule::I64 _55117_l = _1a9c48e02_as_i64(&(*_self_));
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1a9c49166_as_u64(&_54829_x);
					_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(_55117_l << _55321_r));
				} else {
					_1a9c50117_lshift_unsig((*_self_),_54829_x);
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9a8973:;
			{
				_1a9c50117_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1ab9a8269:;
			{
				return false;
			}
		}
		_match_end_1ab9a819d:;
	}
	return true;
}



inline jule::Bool _1a9c4eca4_rshift(_1a9c46e77_Const* _self_,_1a9c46e77_Const _56829_x) {
	{
		
		if (_1a9c4a585_is_i64(&(*_self_))) {
			_case_begin_1ab9ab8bb:;
			{
				jule::I64 _57117_l = _1a9c48e02_as_i64(&(*_self_));
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1a9c49166_as_u64(&_56829_x);
					_1a9c49650_set_i64(&(*_self_), static_cast<jule::I64>(_57117_l >> _57321_r));
				} else {
					_1a9c50414_rshift_unsig((*_self_),_56829_x);
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(&(*_self_))) {
			_case_begin_1ab9ab9ba:;
			{
				_1a9c50414_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1ab9ab2b1:;
			{
				return false;
			}
		}
		_match_end_1ab9ab1e5:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c46e77_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9e37530_FileStream> static__1a9e358e6_new(jule::Ptr<_1d665b8d7_File> _1527_f) {
	return jule::new_ptr<_1a9e37530_FileStream>(_1a9e37530_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I32> _1a9e3b07d_read(_1a9e37530_FileStream* _self_,jule::Slice<jule::U8> _3131_buff) {
	jule::I32 _3148_n = jule::I32();
	_3148_n = static_cast<jule::I32>(({
		auto except = _1d66bb33c_read((*_self_)._field_buff.ptr(), _3131_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I32>(except.error);
			return jule::Exceptional<jule::I32>(except.error);
		} jule::I32();});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(),_3148_n);
}



inline jule::Exceptional<jule::I32> _1a9e3b38b_write(_1a9e37530_FileStream* _self_,jule::Slice<jule::U8> _3728_buff) {
	jule::I32 _3745_n = jule::I32();
	_3745_n = static_cast<jule::I32>(({
		auto except = _1d66b5d2b_write((*_self_)._field_buff.ptr(), _3728_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I32>(except.error);
			return jule::Exceptional<jule::I32>(except.error);
		} jule::I32();});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(),_3745_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1a9e3b6dd_read_line(_1a9e37530_FileStream* _self_) {
	
	jule::Slice<jule::U8> _4917_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5017_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I32 _5217_n = ({
				auto except = _1d66bb33c_read((*_self_)._field_buff.ptr(), _5017_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I32();});
			});
			if ((_5217_n == 0LL)) {
				goto _iter_end_1aba2d50e;
			}
			jule::U8 _5717_b = _5017_part[0LL];
			_4917_buff = jule::alloc_for_append(_4917_buff,1);_4917_buff.__push(_5717_b);
			if ((_5717_b == 10LLU)) {
				goto _iter_end_1aba2d50e;
			}
		}
	_iter_next_1aba2d50e:;
	}
	_iter_end_1aba2d50e:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4917_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e37530_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I32> _1a9e3db85_read(_1a9e3d4e2_ByteStream* _self_,jule::Slice<jule::U8> _2431_buff) {
	jule::I32 _2448_n = jule::I32();
	if ((!(_1a9e3e515_data(&(*_self_))))) {
		_2448_n = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(),_2448_n);
	}
	_2448_n=static_cast<jule::I32>(copy(_2431_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2448_n);
	return jule::Exceptional<jule::I32>(jule::Any(), _2448_n);
}



inline jule::Exceptional<jule::I32> _1a9e3de93_write(_1a9e3d4e2_ByteStream* _self_,jule::Slice<jule::U8> _3528_buff) {
	jule::I32 _3545_n = jule::I32();
	_3545_n=static_cast<jule::I32>(_3528_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3528_buff);
	return jule::Exceptional<jule::I32>(jule::Any(), _3545_n);
}



inline jule::Ptr<_1a9e3d4e2_ByteStream> static__1a9e3e2a1_new(void) {
	return jule::new_ptr<_1a9e3d4e2_ByteStream>();
}



inline jule::Bool _1a9e3e515_data(_1a9e3d4e2_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1a9e3e6e1_fit(_1a9e3d4e2_ByteStream* _self_) {
	if ((!(_1a9e3e515_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;
	}
	jule::Slice<jule::U8> _6017_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>((*_self_)._field_buff.len()));
	copy(_6017_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_6017_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e3d4e2_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9e40a88_Scanner> static__1a9e40eb7_new(jule::Trait<_1a9e3be3b_Reader> _1627_r) {
	return jule::new_ptr<_1a9e40a88_Scanner>(_1a9e40a88_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1a9e40a88_Scanner> static__1a9e4125e_newf(jule::Ptr<_1d665b8d7_File> _2428_f) {
	return jule::new_ptr<_1a9e40a88_Scanner>(_1a9e40a88_Scanner(jule::Trait<_1a9e3be3b_Reader>(static__1a9e358e6_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _1a9e4155b_reset(_1a9e40a88_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1a9e417c0_bytes(_1a9e40a88_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1a9e41a34_text(_1a9e40a88_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1a9e41c98_scan(_1a9e40a88_Scanner* _self_) {
	
	_1a9e4155b_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I32 _5417_n = ({
				auto except = _1a9e3be3b_Reader_mptr_data[((*_self_)._field_r).type_offset]._1a9e3bce8_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I32();});
			});
			if ((_5417_n == 0LL)) {
				goto _iter_end_1aba3a241;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1aba3a241;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_1aba3a241:;
	}
	_iter_end_1aba3a241:;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e40a88_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d84e62_FieldIns> _1a8d8049b_instance(jule::Ptr<_1bd010a02_Field> _self_) {
	return jule::new_ptr<_1a8d84e62_FieldIns>(_1a8d84e62_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_1a9d71c2d_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _1bd010a02_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d81d2c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d857c0_StructIns> _1a8d83070_instance(jule::Ptr<_1a8d82b41_Struct> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	jule::Ptr<_1a8d857c0_StructIns> _10017_ins = jule::new_ptr<_1a8d857c0_StructIns>(_1a8d857c0_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d84e62_FieldIns>>::alloc(0LL,static_cast<jule::I32>(_self_.get()._field_fields.len())),jule::Slice<jule::Ptr<_1a8d94db7_Fn>>(),jule::Bool(),static__1a8d9b3a7_new(),_1a8d81d2c_Operators()));
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1abb6e353:;
		if (it != expr.end()) {
			jule::Ptr<_1bd010a02_Field> _1abb6e551_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1a8d8049b_instance(_1abb6e551_f));
				if (((!(_1abb6e551_f.get()._field_mutable)) && (_1abb6e551_f.get()._field_kind.get()._field_kind != nullptr)) && _1a9d9c30d_mutable(_1abb6e551_f.get()._field_kind.get()._field_kind.ptr())) {
					_10017_ins.get()._field_mutable=true;
				}
			}
			_iter_next_1abb6e353:;
			++it;
			goto _iter_begin_1abb6e353;
		}
		_iter_end_1abb6e353:;
	}
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1a8d94db7_Fn>>::alloc(0LL,static_cast<jule::I32>(_self_.get()._field_methods.len()));
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1abb728b7:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d94db7_Fn> _1abb72389_f = *it;
				{
					jule::Ptr<_1a8d94db7_Fn> _11825_fins = jule::new_ptr<_1a8d94db7_Fn>((*(_1abb72389_f)));
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);
				}
				_iter_next_1abb728b7:;
				++it;
				goto _iter_begin_1abb728b7;
			}
			_iter_end_1abb728b7:;
		}
	}
	return _10017_ins;
}



inline jule::Ptr<_1a8d857c0_StructIns> _1a8d8337d_append_instance(_1a8d82b41_Struct* _self_,jule::Ptr<_1a8d857c0_StructIns>& _12939_ins) {
	if (((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL)) {
		return (*_self_)._field_instances[0LL];
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1abb7507e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1abb7518e_ains = *it;
			{
				if (_1a8d863a3_same(_1abb7518e_ains.ptr(), _12939_ins)) {
					return _1abb7518e_ains;
				}
			}
			_iter_next_1abb7507e:;
			++it;
			goto _iter_begin_1abb7507e;
		}
		_iter_end_1abb7507e:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);
	return nullptr;
}



inline jule::Ptr<_1a8d94db7_Fn> _1a8d83735_find_method(_1a8d82b41_Struct* _self_,jule::Str _14734_ident,jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb77218:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1abb77317_f = *it;
			{
				if ((_1abb77317_f.get()._field_statically == _14746_statically) && (_1abb77317_f.get()._field_ident == _14734_ident)) {
					return _1abb77317_f;
				}
			}
			_iter_next_1abb77218:;
			++it;
			goto _iter_begin_1abb77218;
		}
		_iter_end_1abb77218:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d2553e_Var> _1a8d83a43_find_static(_1a8d82b41_Struct* _self_,jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1abb78802:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1abb78901_v = *it;
			{
				if (_1abb78901_v.get()._field_ident == _15834_ident) {
					return _1abb78901_v;
				}
			}
			_iter_next_1abb78802:;
			++it;
			goto _iter_begin_1abb78802;
		}
		_iter_end_1abb78802:;
	}
	return nullptr;
}



inline jule::Ptr<_1bd010a02_Field> _1a8d83d51_find_field(_1a8d82b41_Struct* _self_,jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1abb79b22:;
		if (it != expr.end()) {
			jule::Ptr<_1bd010a02_Field> _1abb79c21_f = *it;
			{
				if (_1abb79c21_f.get()._field_ident == _16933_ident) {
					return _1abb79c21_f;
				}
			}
			_iter_next_1abb79b22:;
			++it;
			goto _iter_begin_1abb79b22;
		}
		_iter_end_1abb79b22:;
	}
	return nullptr;
}



inline jule::Bool _1a8d8415e_is_implements(_1a8d82b41_Struct* _self_,jule::Ptr<_1a8ea7a57_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1abb7ae42:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> &_1abb7b041_it = *it;
			{
				if (_17932_t == _1abb7b041_it) {
					return true;
				}
			}
			_iter_next_1abb7ae42:;
			++it;
			goto _iter_begin_1abb7ae42;
		}
		_iter_end_1abb7ae42:;
	}
	return false;
}



inline jule::Bool _1a8d8446c_is_derives(_1a8d82b41_Struct* _self_,jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1abb7c163:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> &_1abb7c262_d = *it;
			{
				if ((_1abb7c262_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if ((_1abb7c262_d.get()._field_args.len() == 1LL) && (_1abb7c262_d.get()._field_args[0LL].get()._field_kind == _18929_ident)) {
						return true;
					}
				}
			}
			_iter_next_1abb7c163:;
			++it;
			goto _iter_begin_1abb7c163;
		}
		_iter_end_1abb7c163:;
	}
	return false;
}



inline jule::Bool _1a8d8477a_is_uses(_1a8d82b41_Struct* _self_,jule::Ptr<_1a8d82b41_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1abb7e385:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> &_1abb7e484_u = *it;
			{
				while (_20126_s == _1abb7e484_u) {
					{
						return true;
					}
				_iter_next_1abb7e85d:;
				}
				_iter_end_1abb7e85d:;
			}
			_iter_next_1abb7e385:;
			++it;
			goto _iter_begin_1abb7e385;
		}
		_iter_end_1abb7e385:;
	}
	return false;
}



inline jule::Bool _1a8d849de_has_ref_accessible(_1a8d82b41_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb80265:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> &_1abb80364_m = *it;
			{
				if ((_1abb80364_m.get()._field_params.len() > 0LL) && _1a8d93e1b_is_ref(_1abb80364_m.get()._field_params[0LL].ptr())) {
					return true;
				}
			}
			_iter_next_1abb80265:;
			++it;
			goto _iter_begin_1abb80265;
		}
		_iter_end_1abb80265:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d82b41_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d84e62_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8742b_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d878e3_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d87c9a_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d88196_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8854d_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8887d_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d88dab_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d896d6_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d89a8d_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8a011_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8a3b8_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8a770_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8abe3_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b232_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8b771_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8bee1_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8c497_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8c83d_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8cb29_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8d1ac_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8d487_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8d883_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8dc6d_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8e08c_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8e477_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8e862_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d8ed18_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d902be_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d906a9_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d90a94_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d90d6e_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d914e0_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d916cc_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d919b8_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d91d5e_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d9214a_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d92da4_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8d971c7_ParamIns> _1a8d93943_instance(jule::Ptr<_1a8d9357a_Param> _self_) {
	return jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(_self_,jule::Ptr<_1a9d9ae66_TypeKind>()));
}



inline jule::Bool _1a8d93ba7_is_self(_1a8d9357a_Param* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1a8d93e1b_is_ref(_1a8d9357a_Param* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d9357a_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a8d95318_is_void(_1a8d94db7_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1a8d9557c_is_method(_1a8d94db7_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1a8d957e1_is_entry_point(_1a8d94db7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1a8d95a55_is_init(_1a8d94db7_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1a8d95cb9_is_anon(_1a8d94db7_Fn* _self_) {
	return _1d7b79d6b_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1a8d9602d_any_var(_1a8d94db7_Fn* _self_) {
	return ((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL);
}



inline jule::Bool _1a8d962d6_parameters_uses_generics(_1a8d94db7_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1abb95ec3:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d9357a_Param> &_1abb95654_p = *it;
			{
				if (_1a8d99e44_parameter_uses_generics(_1abb95654_p,(*_self_)._field_generics)) {
					return true;
				}
			}
			_iter_next_1abb95ec3:;
			++it;
			goto _iter_begin_1abb95ec3;
		}
		_iter_end_1abb95ec3:;
	}
	return false;
}



inline jule::Bool _1a8d96539_result_uses_generics(_1a8d94db7_Fn* _self_) {
	if (_1a8d95318_is_void(&(*_self_))) {
		return false;
	} else if (((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr)) {
		return false;
	}
	return _1a8d99a6a_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1a8d98063_FnIns> _1a8d9679d_instance_force(jule::Ptr<_1a8d94db7_Fn> _self_) {
	jule::Ptr<_1a8d98063_FnIns> _12717_ins = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),_self_,jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::new_ptr<_1a9cc76bc_Scope>(),static__1a8d9b3a7_new(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(),jule::Bool()));
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>::alloc(0LL,static_cast<jule::I32>(_self_.get()._field_params.len()));
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abb99bb9:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d9357a_Param> _1abb9a22a_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1a8d93943_instance(_1abb9a22a_p));
			}
			_iter_next_1abb99bb9:;
			++it;
			goto _iter_begin_1abb99bb9;
		}
		_iter_end_1abb99bb9:;
	}
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	}
	return _12717_ins;
}



inline jule::Ptr<_1a8d98063_FnIns> _1a8d96a12_instance(jule::Ptr<_1a8d94db7_Fn> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	return _1a8d9679d_instance_force(_self_);
}



inline jule::Ptr<_1a8d98063_FnIns> _1a8d96d20_append_instance(_1a8d94db7_Fn* _self_,jule::Ptr<_1a8d98063_FnIns>& _15539_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		}
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
		return nullptr;
	}
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1abba064d:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1abba07a2_ains = *it;
			{
				if (_1a8d99361_same(_1abba07a2_ains.ptr(), _15539_ins)) {
					return _1abba07a2_ains;
				}
			}
			_iter_next_1abba064d:;
			++it;
			goto _iter_begin_1abba064d;
		}
		_iter_end_1abba064d:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15539_ins);
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d94db7_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d975a1_to_str(_1a8d971c7_ParamIns* _self_) {
	jule::Str _19317_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19317_s+=jule::Str("mut ", 4);
	}
	if ((*_self_)._field_decl.get()._field_reference) {
		_19317_s+=jule::Str("&_:", 3);
	}
	if (_1a8d93ba7_is_self((*_self_)._field_decl.ptr())) {
		if (_1a8d93e1b_is_ref((*_self_)._field_decl.ptr())) {
			_19317_s+=jule::Str("&", 1);
		}
		_19317_s+=jule::Str("self", 4);
		return _19317_s;
	}
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19317_s+=jule::Str("...", 3);
	}
	if (((*_self_)._field_kind != nullptr)) {
		_19317_s+=_1a9d9b31d_to_str((*_self_)._field_kind.ptr());
	}
	return _19317_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d971c7_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d983c6_to_str(_1a8d98063_FnIns* _self_) {
	
	return _1a8d9966e_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1a8d986d4_equals(jule::Ptr<_1a8d98063_FnIns> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _24426_other) {
	jule::Ptr<_1a8d98063_FnIns> _24513_f = _1a9d9de9c_fnc(_24426_other.ptr());
	if ((_24513_f == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_exceptional != _24513_f.get()._field_decl.get()._field_exceptional) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_unsafety != _24513_f.get()._field_decl.get()._field_unsafety) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I32>(static_cast<jule::I32>(_24513_f.get()._field_generics.len()))) {
		return false;
	}
	if (_1a8d95318_is_void(_self_.get()._field_decl.ptr()) != _1a8d95318_is_void(_24513_f.get()._field_decl.ptr())) {
		return false;
	}
	jule::I32 _26617_i = 0LL;
	for (; _26617_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_generics.len())); (_26617_i)++) {
		{
			if ((!(_1a9d9b62b_equals(_self_.get()._field_generics[_26617_i], _24513_f.get()._field_generics[_26617_i])))) {
				return false;
			}
		}
	_iter_next_1abba80b2:;
	}
	_iter_end_1abba80b2:;
	jule::Fn<jule::Bool(jule::Ptr<_1a8d971c7_ParamIns>,jule::Ptr<_1a8d971c7_ParamIns>)> _27313_check_params = jule::Fn<jule::Bool(jule::Ptr<_1a8d971c7_ParamIns>,jule::Ptr<_1a8d971c7_ParamIns>)>([=](jule::Ptr<_1a8d971c7_ParamIns> _27331_p1,jule::Ptr<_1a8d971c7_ParamIns> _27346_p2) mutable -> jule::Bool {
		if (_27331_p1.get()._field_decl.get()._field_mutable != _27346_p2.get()._field_decl.get()._field_mutable) {
			return false;
		}
		if (_1a8d93ba7_is_self(_27331_p1.get()._field_decl.ptr())) {
			if ((!(_1a8d93ba7_is_self(_27346_p2.get()._field_decl.ptr())))) {
				return false;
			}
			if (_1a8d93e1b_is_ref(_27331_p1.get()._field_decl.ptr()) != _1a8d93e1b_is_ref(_27346_p2.get()._field_decl.ptr())) {
				return false;
			}
			return true;
		}
		if (_27331_p1.get()._field_decl.get()._field_reference != _27346_p2.get()._field_decl.get()._field_reference) {
			return false;
		}
		if (_27331_p1.get()._field_decl.get()._field_variadic != _27346_p2.get()._field_decl.get()._field_variadic) {
			return false;
		}
		return _1a9d9b62b_equals(_27331_p1.get()._field_kind, _27346_p2.get()._field_kind);
	});
	if (_24513_f.get()._field_params.len() != static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_params.len()))) {
		return false;
	}
	_26617_i=0LL;
	for (; _26617_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_params.len())); (_26617_i)++) {
		{
			if ((!(_27313_check_params(_self_.get()._field_params[_26617_i],_24513_f.get()._field_params[_26617_i])))) {
				return false;
			}
		}
	_iter_next_1abbb0b36:;
	}
	_iter_end_1abbb0b36:;
	if ((!(_1a8d95318_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1a9d9b62b_equals(_self_.get()._field_result, _24513_f.get()._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _1a8d98a7a_types(_1a8d98063_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1abbb3c9e:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9e94d_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1abbb3d15:;
			{
				return jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1abbb36c7:;
			{
				return _1a9d9e94d_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1abbb360b:;
	}
}



inline jule::Bool _1a8d98cde_is_builtin(_1a8d98063_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1a8d99053_is_anon(_1a8d98063_FnIns* _self_) {
	return (*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1a8d95cb9_is_anon((*_self_)._field_decl.ptr()));
}



inline jule::Bool _1a8d99361_same(_1a8d98063_FnIns* _self_,jule::Ptr<_1a8d98063_FnIns> _35023_f) {
	if (((*_self_)._field_decl != _35023_f.get()._field_decl) || (_35023_f.get()._field_generics.len() != static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1abbb7ec3:;
		if (it != expr.end()) {
			jule::I32 _1abbb80d3_i = it - expr.begin();
			jule::Ptr<_1a9d9ae66_TypeKind> &_1abbb8237_g = *it;
			{
				if ((!(_1a9d9b62b_equals(_1abbb8237_g, _35023_f.get()._field_generics[_1abbb80d3_i])))) {
					return false;
				}
			}
			_iter_next_1abbb7ec3:;
			++it;
			_1abbb80d3_i++;
			goto _iter_begin_1abbb7ec3;
		}
		_iter_end_1abbb7ec3:;
	}
	return true;
}



inline jule::Str _1a8d9966e_get_kind_str(_1a8d98063_FnIns* _self_,jule::Bool _36631_ident) {
	jule::Str _36717_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_36717_s+=jule::Str("unsafe ", 7);
	}
	_36717_s+=jule::Str("fn", 2);
	if (_36631_ident && ((*_self_)._field_decl != nullptr)) {
		_36717_s+=jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident;
	}
	if (((*_self_)._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1abbbb1c4:;
			if (it != expr.end()) {
				jule::I32 _1abbbb25c_i = it - expr.begin();
				jule::Ptr<_1a9d9ae66_TypeKind> &_1abbbb47c_t = *it;
				{
					_36717_s+=_1a9d9b31d_to_str(_1abbbb47c_t.ptr());
					if ((_1abbbb25c_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_generics.len()))) {
						_36717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1abbbb1c4:;
				++it;
				_1abbbb25c_i++;
				goto _iter_begin_1abbbb1c4;
			}
			_iter_end_1abbbb1c4:;
		}
		_36717_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_36717_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1abbbcea6:;
			if (it != expr.end()) {
				jule::I32 _1abbbd03e_i = it - expr.begin();
				jule::Ptr<_1d7b8c246_GenericDecl> &_1abbbd24d_g = *it;
				{
					_36717_s+=_1abbbd24d_g.get()._field_ident;
					if ((_1abbbd03e_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_decl.get()._field_generics.len()))) {
						_36717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1abbbcea6:;
				++it;
				_1abbbd03e_i++;
				goto _iter_begin_1abbbcea6;
			}
			_iter_end_1abbbcea6:;
		}
		_36717_s+=jule::Str("]", 1);
	}
	_36717_s+=jule::Str("(", 1);
	jule::I32 _40013_n = (*_self_)._field_params.len();
	if ((_40013_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1abbc02b6:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d971c7_ParamIns> &_1abbc03b5_p = *it;
				{
					_36717_s+=_1a8d975a1_to_str(_1abbc03b5_p.ptr());
					_36717_s+=jule::Str(",", 1);
				}
				_iter_next_1abbc02b6:;
				++it;
				goto _iter_begin_1abbc02b6;
			}
			_iter_end_1abbc02b6:;
		}
		(_36717_s).mut_slice(0LL,_36717_s.len() - 1LL);
	}
	_36717_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_36717_s+=jule::Str("!", 1);
	}
	if ((!(_1a8d95318_is_void((*_self_)._field_decl.ptr())))) {
		_36717_s+=jule::Str(":", 1);
		_36717_s+=_1a9d9b31d_to_str((*_self_)._field_result.ptr());
	}
	return _36717_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d98063_FnIns _Src) {
	_Stream << _1a8d983c6_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a8d9b121_ReferenceStack> static__1a8d9b3a7_new(void) {
	return jule::new_ptr<_1a8d9b121_ReferenceStack>();
}



inline jule::I32 _1a8d9b73c_len(_1a8d9b121_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*_self_)._field_buffer.len());
}



inline jule::Any _1a8d9ba4a_at(_1a8d9b121_ReferenceStack* _self_,jule::I32 _5825_i) {
	return (*_self_)._field_buffer[_5825_i];
}



inline void _1a8d9bcc0_push(_1a8d9b121_ReferenceStack* _self_,jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_6331_ref);
}



inline jule::Bool _1a8d9c0cd_exist_0(_1a8d9b121_ReferenceStack* _self_,jule::Ptr<_1a9d2553e_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ac255582:;
		if (it != expr.end()) {
			jule::Any &_1ac255791_ref = *it;
			{
				if (_1ac255791_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1ac255582:;
			++it;
			goto _iter_begin_1ac255582;
		}
		_iter_end_1ac255582:;
	}
	return false;
}

inline jule::Bool _1a8d9c0cd_exist_1(_1a8d9b121_ReferenceStack* _self_,jule::Ptr<_1a8d98063_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ac258189:;
		if (it != expr.end()) {
			jule::Any &_1ac258398_ref = *it;
			{
				if (_1ac258398_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1ac258189:;
			++it;
			goto _iter_begin_1ac258189;
		}
		_iter_end_1ac258189:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d9b121_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d9c485_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a8da1038_SymbolBuilder> _1a8da15ee_get_root(jule::Ptr<_1a8da1038_SymbolBuilder> _self_) {
	jule::Ptr<_1a8da1038_SymbolBuilder> _28117_root = _self_;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1abbc5002:;
	}
	_iter_end_1abbc5002:;
	return _28117_root;
}



inline void _1a8da19b7_push_err(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b77374_Token>& _28828_token,jule::Str _28843_fmt,jule::Slice<jule::Any> _28856_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a9d08698_compiler_err(_28828_token,true,_28843_fmt,_28856_args));
}



inline void _1a8da1d80_push_err_text(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b77374_Token>& _29233_token,jule::Str _29248_fmt,jule::Slice<jule::Any> _29261_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a9d08698_compiler_err(_29233_token,false,_29248_fmt,_29261_args));
}



inline void _1a8da219e_push_suggestion(_1a8da1038_SymbolBuilder* _self_,jule::Str _29734_fmt,jule::Slice<jule::Any> _29747_args) {
	{
		_1a9d09aa6_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,_29747_args);
	}
}



inline jule::Bool _1a8da259a_check_cpp_use_decl_path(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _30143_decl,jule::Str _30159_path) {
	jule::Bool _30172_ok = jule::Bool();
	jule::Str _30213_ext = _1d685245c_ext(_30159_path);
	if ((!(_1d77be0dc_is_valid_header_ext(_30213_ext))) && (!(_1d77be285_is_valid_cpp_ext(_30213_ext)))) {
		_1a8da19b7_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30213_ext)}));
		_30172_ok = false;
		return _30172_ok;
	}
	jule::Ptr<_1d665bac4_Status> _30913_info = ({
		auto except = static__1d67839ba_of(_30159_path);
		(except.ok()) ? (except.result) : ({{
			_1a8da19b7_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30172_ok = false;
			return _30172_ok;
			_30172_ok = false;
			return _30172_ok;
		} jule::Ptr<_1d665bac4_Status>();});
	});
	if (_1d5982acc_is_dir(_30913_info.ptr())) {
		_1a8da19b7_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30172_ok = false;
		return _30172_ok;
	}
	_30172_ok = true;
	return _30172_ok;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da28a8_build_cpp_header_import(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _32147_decl) {
	jule::Str _32217_path = _32147_decl.get()._field_link_path;
	if ((!(_1d77bdeaa_is_std_header_path(_32147_decl.get()._field_link_path)))) {
		_32217_path=_1d685188a_join(jule::Slice<jule::Str>({_1d7b7d15a_dir(_32147_decl.get()._field_token.get()._field_file.ptr()),_32147_decl.get()._field_link_path}));
		jule::Bool _32621_ok = _1a8da259a_check_cpp_use_decl_path(&(*_self_), _32147_decl,_32217_path);
		if ((!(_32621_ok))) {
			return nullptr;
		}
		std::tie(_32217_path,_32621_ok) = _1d6853edb_abs(_32217_path);
		if ((!(_32621_ok))) {
			_1a8da19b7_push_err(&(*_self_), _32147_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32147_decl.get()._field_link_path)}));
		}
	}
	return jule::new_ptr<_1a9d02351_ImportInfo>(_1a9d02351_ImportInfo(_32147_decl.get()._field_token,_32217_path,_32147_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<jule::Ptr<_1d7b77374_Token>>(),nullptr,jule::I32()));
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da2ba5_build_std_import(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _34940_decl) {
	jule::Str _35017_path = _34940_decl.get()._field_link_path.slice(5LL);
	_35017_path=_1d776bed0_replace(_35017_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_35017_path=_1d685188a_join(jule::Slice<jule::Str>({_1d77ddb12_PATH_STDLIB,_35017_path}));
	jule::Bool _35320_ok;
	std::tie(_35017_path,_35320_ok) = _1d6853edb_abs(_35017_path);
	if ((!(_35320_ok))) {
		_1a8da19b7_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1d665bac4_Status> _36013_info = ({
		auto except = static__1d67839ba_of(_35017_path);
		(except.ok()) ? (except.result) : ({{
			_1a8da19b7_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1d665bac4_Status>();});
	});
	if ((!(_1d5982acc_is_dir(_36013_info.ptr())))) {
		_1a8da19b7_push_err(&(*_self_), _34940_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_34940_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I32 _37013_i = (_1d687dc2a_find_last(_34940_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _37113_ident = _34940_decl.get()._field_link_path.slice(_37013_i);
	return jule::new_ptr<_1a9d02351_ImportInfo>(_1a9d02351_ImportInfo(_34940_decl.get()._field_token,_35017_path,_34940_decl.get()._field_link_path,_37113_ident,_34940_decl.get()._field_alias,jule::Bool(),false,true,_34940_decl.get()._field_full,jule::Slice<jule::Ptr<_1d7b77374_Token>>(),jule::new_ptr<_1a9d05013_Package>(_1a9d05013_Package(nullptr)),jule::I32()));
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da2eb3_build_ident_import(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _38843_decl) {
	jule::Str _38913_mod_path = _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee150_get_mod_path(_self_.get()._field_importer);
	if ((_38913_mod_path.len() == 0LL)) {
		_1a8da19b7_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1a8da219e_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _39617_path = _38843_decl.get()._field_link_path;
	_39617_path=_1d776bed0_replace(_39617_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_39617_path=_1d685188a_join(jule::Slice<jule::Str>({_38913_mod_path,_39617_path}));
	jule::Bool _40020_ok;
	std::tie(_39617_path,_40020_ok) = _1d6853edb_abs(_39617_path);
	if ((!(_40020_ok))) {
		_1a8da19b7_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1d665bac4_Status> _40713_info = ({
		auto except = static__1d67839ba_of(_39617_path);
		(except.ok()) ? (except.result) : ({{
			_1a8da19b7_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1d665bac4_Status>();});
	});
	if ((!(_1d5982acc_is_dir(_40713_info.ptr())))) {
		_1a8da19b7_push_err(_self_.ptr(), _38843_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38843_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I32 _41713_i = (_1d687dc2a_find_last(_38843_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _41813_ident = _38843_decl.get()._field_link_path.slice(_41713_i);
	return jule::new_ptr<_1a9d02351_ImportInfo>(_1a9d02351_ImportInfo(_38843_decl.get()._field_token,_39617_path,_38843_decl.get()._field_link_path,_41813_ident,_38843_decl.get()._field_alias,jule::Bool(),false,false,_38843_decl.get()._field_full,jule::Slice<jule::Ptr<_1d7b77374_Token>>(),jule::new_ptr<_1a9d05013_Package>(_1a9d05013_Package(nullptr)),jule::I32()));
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da32c1_build_import(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _43537_decl) {
	{
		
		if (_43537_decl.get()._field_cpp_linked) {
			_case_begin_1abbe3a9d:;
			{
				return _1a8da28a8_build_cpp_header_import(_self_.ptr(), _43537_decl);
			}
		}
		else if (_43537_decl.get()._field_std) {
			_case_begin_1abbe3b14:;
			{
				return _1a8da2ba5_build_std_import(_self_.ptr(), _43537_decl);
			}
		}
		else {
			_case_begin_1abbe34c6:;
			{
				return _1a8da2eb3_build_ident_import(_self_, _43537_decl);
			}
		}
		_match_end_1abbe340a:;
	}
}



inline jule::Bool _1a8da3623_check_duplicate_use_decl(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1a9d02351_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1a9d02351_ImportInfo> _44813_lpkg = _1a9d6c3bb_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>([=](jule::Ptr<_1a9d02351_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return _44644_pkg.get()._field_path == _44849_spkg.get()._field_path;
	}));
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	}
	_1a8da19b7_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1a8da219e_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1a8da3931_impl_import_selections(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1a9d02351_ImportInfo>& _46046_imp,jule::Ptr<_1d7b8ee80_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1abbe9697:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> _1abbe9796_ident = *it;
			{
				if (_1a9d04980_exist_ident(_46046_imp.ptr(), _1abbe9796_ident.get()._field_kind)) {
					_1a8da19b7_push_err(&(*_self_), _1abbe9796_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_1abbe9796_ident.get()._field_kind)}));
					_1a8da219e_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1abbe9697;
				}
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_1abbe9796_ident);
			}
			_iter_next_1abbe9697:;
			++it;
			goto _iter_begin_1abbe9697;
		}
		_iter_end_1abbe9697:;
	}
}



inline jule::Str _1a8da3c3e_get_as_link_path(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Str _47240_path) {
	if (_1d7728e59_has_prefix(_47240_path,_1d77ddb12_PATH_STDLIB)) {
		(_47240_path).mut_slice(_1d77ddb12_PATH_STDLIB.len());
		return jule::Str("std", 3) + _1d776bed0_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _47814_root;
	std::tie(_47814_root,std::ignore) = _1d6853edb_abs(_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee150_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());
	if ((_47240_path[0LL] == 92LLU)) {
		(_47240_path).mut_slice(1LL);
	}
	return _1d776bed0_replace(_47240_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1a8da4107_push_cycle_error(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1a8da1038_SymbolBuilder>& _48637_sb,jule::Str _48657_path,jule::Str& _48673_message) {
	
	jule::Str _48913_refers_to = _1d77ca8ce_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_1a8da3c3e_get_as_link_path(_self_, _1d7b7d15a_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1a8da3c3e_get_as_link_path(_self_, _48657_path))}));
	(_48673_message).buffer.insert(0, (((_1d68791dc_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));
}



inline void _1a8da44c0_push_cross_cycle_error(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1a8da1038_SymbolBuilder>& _49643_target,jule::Ptr<_1a9d02351_ImportInfo>& _49668_imp,jule::Ptr<_1d7b77374_Token>& _49687_error_token) {
	jule::Str _49717_message = jule::Str();
	_1a8da4107_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1a8da1038_SymbolBuilder> _50117_owner = _self_.get()._field_owner;
	jule::Ptr<_1a8da1038_SymbolBuilder> _50217_old = _self_;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1a8da4107_push_cycle_error(_self_, _50217_old.get()._field_owner,_1d7b7d15a_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if (_50117_owner.get()._field_owner == _49643_target) {
				_1a8da4107_push_cycle_error(_self_, _49643_target,_1d7b7d15a_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1abc03a03;
			}
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1abc03a03:;
	}
	_iter_end_1abc03a03:;
	_1a8da19b7_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _1a8da4877_check_import_cycles(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1a9d02351_ImportInfo> _51939_imp,jule::Ptr<_1d7b8ee80_UseDecl>& _51958_decl) {
	if (_51939_imp.get()._field_path == _1d7b7d15a_dir(_self_.get()._field_table.get()._field_file.ptr())) {
		_1a8da19b7_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_1a8da3c3e_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	}
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	}
	if (_1d7b7d15a_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1a8da44c0_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	jule::Ptr<_1a8da1038_SymbolBuilder> _53417_owner = _self_.get()._field_owner;
	_julec_label_iter:;
	if (_1d7b7d15a_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1a8da44c0_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _1a8da4c84_check_package_accessibility(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _55547_decl,jule::Str& _55564_mod,jule::Str& _55575_path) {
	if ((_1a9ceeedb_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1a9cee150_get_mod_path((*_self_)._field_importer) != _55564_mod) && _1d749edde_contains(_55575_path,jule::Str("internal", 8))) {
		_1a8da19b7_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1a8da512a_import_package(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1a9d02351_ImportInfo>& _56139_imp,jule::Ptr<_1d7b8ee80_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_1a9d02351_ImportInfo> _56617_port = _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee76b_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee150_get_mod_path(_self_.get()._field_importer);
		_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cede0d_set_mod_path(_self_.get()._field_importer, _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee45d_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1a8da4c84_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cede0d_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1a8da4877_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Str _58017_old_mod = _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cee150_get_mod_path(_self_.get()._field_importer);
		__JULE_DEFER({
			_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cede0d_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});
		if (_56139_imp.get()._field_std) {
			_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9cede0d_set_mod_path(_self_.get()._field_importer, _1d77ddb12_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_1d7a43eaa_Ast>> _58522_asts;
		jule::Slice<_1d77ca48e_Log> _58532_errors;
		std::tie(_58522_asts,_58532_errors) = _1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9ceeb23_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		_1a8da4c84_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1abc17231:;
			if (it != expr.end()) {
				jule::Ptr<_1d7a43eaa_Ast> _1abc1773c_ast = *it;
				{
					jule::Ptr<_1a9d6baa2_SymbolTable> _59425_table = nullptr;
					std::tie(_59425_table,_58532_errors) = _1a9db4de7_build_symbols(_1abc1773c_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1a8da1d80_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);
				}
				_iter_next_1abc17231:;
				++it;
				goto _iter_begin_1abc17231;
			}
			_iter_end_1abc17231:;
		}
	}
	_1a8da3931_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a8da5438_import_use_decl(jule::Ptr<_1a8da1038_SymbolBuilder> _self_,jule::Ptr<_1d7b8ee80_UseDecl>& _61340_decl) {
	jule::Ptr<_1a9d02351_ImportInfo> _61417_imp = _1a8da32c1_build_import(_self_, _61340_decl);
	if ((_61417_imp == nullptr)) {
		return nullptr;
	}
	jule::Bool _62017_ok = _1a8da3623_check_duplicate_use_decl(_self_.ptr(), _61417_imp);
	if ((!(_62017_ok))) {
		return nullptr;
	}
	_62017_ok=_1a8da512a_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);
	if (_62017_ok) {
		_1a9ceeedb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a9ceed98_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	}
	return nullptr;
}



inline void _1a8da5614_import_use_decls(jule::Ptr<_1a8da1038_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1abc1db83:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8ee80_UseDecl> _1abc1ddb4_decl = *it;
			{
				_1a8da5438_import_use_decl(_self_, _1abc1ddb4_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1abc1db83;
				}
			}
			_iter_next_1abc1db83:;
			++it;
			goto _iter_begin_1abc1db83;
		}
		_iter_end_1abc1db83:;
	}
}



inline void _1a8da5889_append_node(_1a8da1038_SymbolBuilder* _self_,_1d7b5c315_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b92405_Impl>>()) {
			_case_begin_1abc204ae:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1a8da09d8_build_impl(_64535_node._field_data.operator jule::Ptr<_1d7b92405_Impl>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8e8b9_TypeAliasDecl>>()) {
			_case_begin_1abc20525:;
			{
				jule::Ptr<_1a9d9a22e_TypeAlias> _65021_ta = _1a8d9cd6a_build_type_alias(_64535_node._field_data.operator jule::Ptr<_1d7b8e8b9_TypeAliasDecl>());
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b916e0_StructDecl>>()) {
			_case_begin_1abc2058b:;
			{
				jule::Ptr<_1a8d82b41_Struct> _65321_srct = _1a8d9d695_build_struct(_64535_node._field_data.operator jule::Ptr<_1d7b916e0_StructDecl>());
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d29c_FnDecl>>()) {
			_case_begin_1abc20602:;
			{
				jule::Ptr<_1a8d94db7_Fn> _65621_f = _1a8d9e2ab_build_fn(_64535_node._field_data.operator jule::Ptr<_1d7b8d29c_FnDecl>());
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b91cea_TraitDecl>>()) {
			_case_begin_1abc2103c:;
			{
				jule::Ptr<_1a8ea7a57_Trait> _65921_t = _1a8d9e7ea_build_trait(_64535_node._field_data.operator jule::Ptr<_1d7b91cea_TraitDecl>());
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d489_VarDecl>>()) {
			_case_begin_1abc210a3:;
			{
				jule::Ptr<_1a9d2553e_Var> _66221_v = _1a8da0499_build_var(_64535_node._field_data.operator jule::Ptr<_1d7b8d489_VarDecl>());
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b9058a_EnumDecl>>()) {
			_case_begin_1abc21119:;
			{
				jule::Ptr<_1a943b309_Enum> _66521_e = _1a8da00d1_build_enum(_64535_node._field_data.operator jule::Ptr<_1d7b9058a_EnumDecl>());
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);
			}
		}
		else {
			_case_begin_1abc20437:;
			{
				_1a8da19b7_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abc203d2:;
	}
}



inline void _1a8da5a65_append_nodes(_1a8da1038_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1abc283eb:;
		if (it != expr.end()) {
			_1d7b5c315_Node _1abc285a5_node = *it;
			{
				_1a8da5889_append_node(&(*_self_), _1abc285a5_node);
			}
			_iter_next_1abc283eb:;
			++it;
			goto _iter_begin_1abc283eb;
		}
		_iter_end_1abc283eb:;
	}
}



inline void _1a8da5cda_push_directive_pass(_1a8da1038_SymbolBuilder* _self_,jule::Ptr<_1d7a4352b_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1a8da19b7_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1d7b77374_Token> _68317_arg = _67843_d.get()._field_args[1LL];
		_1a8da19b7_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d7b77374_Token> _68713_arg = _67843_d.get()._field_args[0LL];
	if (_68713_arg.get()._field_id != static_cast<jule::U32>(6LLU)) {
		_1a8da19b7_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68713_arg.get()._field_kind[0LL] != '\"') {
		_1a8da19b7_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1a8d9c485_Pass(_67843_d.get()._field_tag,_68713_arg.get()._field_kind.slice(1LL,(_68713_arg.get()._field_kind.len() - 1LL))));
}



inline void _1a8da5eb6_append_top_directives(_1a8da1038_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1abc28eac:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1abc30227_d = *it;
			{
				{
					auto &_match_expr{ _1abc30227_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1abc309ca:;
						{
							_1a8da5cda_push_directive_pass(&(*_self_), _1abc30227_d);
						}
					}
					_match_end_1abc30975:;
				}
			}
			_iter_next_1abc28eac:;
			++it;
			goto _iter_begin_1abc28eac;
		}
		_iter_end_1abc28eac:;
	}
}



inline void _1a8da6192_build(jule::Ptr<_1a8da1038_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a9d6baa2_SymbolTable>(_1a9d6baa2_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_1a8d9c485_Pass>(),jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Slice<jule::Ptr<_1a8d82b41_Struct>>(),jule::Slice<jule::Ptr<_1a8d94db7_Fn>>(),jule::Slice<jule::Ptr<_1a8ea7a57_Trait>>(),jule::Slice<jule::Ptr<_1a943b309_Enum>>(),jule::Slice<jule::Ptr<_1a922a34b_Impl>>()));
	_1a8da5eb6_append_top_directives(_self_.ptr());
	_1a8da5614_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	_1a8da5a65_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a8da1038_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8e06a61_to_str(_1a8ea7a57_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a8e0859b_equals(jule::Ptr<_1a8ea7a57_Trait> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _2626_other) {
	jule::Ptr<_1a8ea7a57_Trait> _2713_trt = _1a9d9e475_trt(_2626_other.ptr());
	return _self_ == _2713_trt;
}



inline jule::Bool _1a8e31c67_is_builtin(_1a8ea7a57_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1a8d94db7_Fn> _1a8e8a71b_find_method(_1a8ea7a57_Trait* _self_,jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1abc3674a:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1abc36849_f = *it;
			{
				if (_1abc36849_f.get()._field_ident == _4034_ident) {
					return _1abc36849_f;
				}
			}
			_iter_next_1abc3674a:;
			++it;
			goto _iter_begin_1abc3674a;
		}
		_iter_end_1abc3674a:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8ea7a57_Trait _Src) {
	_Stream << _1a8e06a61_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a90ce552_auto_expr(_1a93b2c75_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a93b2c75_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a914022d_to_str(_1a943b309_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1a9140daa_equals(jule::Ptr<_1a943b309_Enum> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _3826_other) {
	jule::Ptr<_1a943b309_Enum> _3913_enm = _1a9d9d760_enm(_3826_other.ptr());
	return _self_ == _3913_enm;
}



inline jule::Ptr<_1a93b2c75_EnumItem> _1a922ac64_find_item(_1a943b309_Enum* _self_,jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1abc3a441:;
		if (it != expr.end()) {
			jule::Ptr<_1a93b2c75_EnumItem> _1abc3a540_item = *it;
			{
				if (_1abc3a540_item.get()._field_ident == _4732_ident) {
					return _1abc3a540_item;
				}
			}
			_iter_next_1abc3a441:;
			++it;
			goto _iter_begin_1abc3a441;
		}
		_iter_end_1abc3a441:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a943b309_Enum _Src) {
	_Stream << _1a914022d_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a9239723_is_trait_impl(_1a922a34b_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1a93b753d_is_struct_impl(_1a922a34b_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a922a34b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cc76bc_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cce0b9_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c78b46_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c78d33_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c89959_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9cb629e_is_while_next(_1a9c89b46_WhileIter* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c89b46_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9c89d33_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cb79dc_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cb7bc9_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cda405_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cda5e2_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cda7ce_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cda9bb_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdaba8_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9cb7db6_is_generic_type_match(_1a9cdad95_Match* _self_) {
	return ((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdad95_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9cb8867_is_default(_1a9cdb2b3_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdb2b3_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdb4a0_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdb68c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdb879_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdba66_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9cc9559_find_package(_1a9cdbc53_ScopeChecker* _self_,jule::Str _41335_ident) {
	return _1a9d0a546_find_package((*_self_)._field_s.ptr(), _41335_ident);
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9cba605_select_package(_1a9cdbc53_ScopeChecker* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _42337_selector) {
	return _1a9d0a854_select_package((*_self_)._field_s.ptr(), _42337_selector);
}



inline jule::Ptr<_1a9d2553e_Var> _1a9ca71b3_find_var(_1a9cdbc53_ScopeChecker* _self_,jule::Str _43431_ident,jule::Bool _43443_cpp_linked) {
	
	jule::Ptr<_1a9d2553e_Var> _43717_v = _1a9d6e027___find_var((*_self_)._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
	if ((_43717_v != nullptr)) {
		return _43717_v;
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _44217_parent = (*_self_)._field_parent;
	while ((_44217_parent != nullptr)) {
		{
			_43717_v=_1a9d6e027___find_var(_44217_parent.get()._field_table.ptr(), _43431_ident,_43443_cpp_linked,true);
			if ((_43717_v != nullptr)) {
				return _43717_v;
			}
			_44217_parent=_44217_parent.get()._field_parent;
		}
	_iter_next_1abc44912:;
	}
	_iter_end_1abc44912:;
	return _1a9d0ac0b_find_var((*_self_)._field_s.ptr(), _43431_ident,_43443_cpp_linked);
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9cdc061_find_type_alias(_1a9cdbc53_ScopeChecker* _self_,jule::Str _46138_ident,jule::Bool _46150_cpp_linked) {
	
	jule::Ptr<_1a9d9a22e_TypeAlias> _46417_ta = _1a9d6e478___find_type_alias((*_self_)._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
	if ((_46417_ta != nullptr)) {
		return _46417_ta;
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _46917_parent = (*_self_)._field_parent;
	while ((_46917_parent != nullptr)) {
		{
			_46417_ta=_1a9d6e478___find_type_alias(_46917_parent.get()._field_table.ptr(), _46138_ident,_46150_cpp_linked,true);
			if ((_46417_ta != nullptr)) {
				return _46417_ta;
			}
			_46917_parent=_46917_parent.get()._field_parent;
		}
	_iter_next_1abc4d9e8:;
	}
	_iter_end_1abc4d9e8:;
	return _1a9d0b0b3_find_type_alias((*_self_)._field_s.ptr(), _46138_ident,_46150_cpp_linked);
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9cdc418_find_struct(_1a9cdbc53_ScopeChecker* _self_,jule::Str _48634_ident,jule::Bool _48646_cpp_linked) {
	return _1a9d0b46a_find_struct((*_self_)._field_s.ptr(), _48634_ident,_48646_cpp_linked);
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9cdc7c0_find_fn(_1a9cdbc53_ScopeChecker* _self_,jule::Str _49530_ident,jule::Bool _49542_cpp_linked) {
	return _1a9d0b822_find_fn((*_self_)._field_s.ptr(), _49530_ident,_49542_cpp_linked);
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9cdcacd_find_trait(_1a9cdbc53_ScopeChecker* _self_,jule::Str _50433_ident) {
	return _1a9d0bb30_find_trait((*_self_)._field_s.ptr(), _50433_ident);
}



inline jule::Ptr<_1a943b309_Enum> _1a9cdcddb_find_enum(_1a9cdbc53_ScopeChecker* _self_,jule::Str _51332_ident) {
	return _1a9d0be3d_find_enum((*_self_)._field_s.ptr(), _51332_ident);
}



inline jule::Bool _1a9cdd21b_is_unsafe(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _52117_scope = _self_;
	_julec_label_iter:;
	if (_52117_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	}
	if ((_52117_scope.get()._field_parent != nullptr)) {
		_52117_scope=_52117_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1a9cdd480_is_root(_1a9cdbc53_ScopeChecker* _self_) {
	return ((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr);
}



inline void _1a9cdd65b_stop(_1a9cdbc53_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1a9cdd8c0_stopped(_1a9cdbc53_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1a9cddb34_is_deferred(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _55417_scope = _self_;
	_julec_label_iter:;
	if (_55417_scope.get()._field_scope.get()._field_deferred) {
		return true;
	}
	if ((_55417_scope.get()._field_parent != nullptr)) {
		_55417_scope=_55417_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9cddd98_get_root(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _57217_root = _self_;
	while ((_57217_root.get()._field_parent != nullptr) && (_57217_root.get()._field_owner == nullptr)) {
		{
			_57217_root=_57217_root.get()._field_parent;
		}
	_iter_next_1abc5c991:;
	}
	_iter_end_1abc5c991:;
	return _57217_root;
}



inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9cde10c_get_hard_root(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _58217_root = _self_;
	while ((_58217_root.get()._field_parent != nullptr)) {
		{
			_58217_root=_58217_root.get()._field_parent;
		}
	_iter_next_1abc5e058:;
	}
	_iter_end_1abc5e058:;
	return _58217_root;
}



inline jule::Ptr<_1a9cda405_Label> _1a9cde41a_find_label(_1a9cdbc53_ScopeChecker* _self_,jule::Str _59229_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1abc604dd:;
		if (it != expr.end()) {
			jule::Any _1abc605ba_st = *it;
			{
				{
					auto &_match_expr{ _1abc605ba_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a9cda405_Label>>()) {
						_case_begin_1abc60c08:;
						{
							jule::Ptr<_1a9cda405_Label> _59625_label = _1abc605ba_st.operator jule::Ptr<_1a9cda405_Label>();
							if (_59625_label.get()._field_ident == _59229_ident) {
								return _59625_label;
							}
						}
					}
					_match_end_1abc60ba3:;
				}
			}
			_iter_next_1abc604dd:;
			++it;
			goto _iter_begin_1abc604dd;
		}
		_iter_end_1abc604dd:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9cde728_find_label_scope(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Str _60836_ident) {
	jule::Ptr<_1a9cdb879_ScopeLabel> _60917_label = _1a9cdea36_find_label_all(_self_.ptr(), _60836_ident);
	if ((_60917_label != nullptr) && (_60917_label.get()._field_scope == _self_)) {
		return _60917_label;
	}
	return nullptr;
}



inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9cdea36_find_label_all(_1a9cdbc53_ScopeChecker* _self_,jule::Str _62033_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1abc639b9:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdb879_ScopeLabel> _1abc63c50_lbl = *it;
			{
				if (_1abc63c50_lbl.get()._field_label.get()._field_ident == _62033_ident) {
					return _1abc63c50_lbl;
				}
			}
			_iter_next_1abc639b9:;
			++it;
			goto _iter_begin_1abc639b9;
		}
		_iter_end_1abc639b9:;
	}
	return nullptr;
}



inline jule::Bool _1a9cdeddd_is_duplicated_ident(_1a9cdbc53_ScopeChecker* _self_,jule::U32 _63238_itself,jule::Str _63255_ident) {
	jule::Ptr<_1a9d2553e_Var> _63313_v = _1a9ca71b3_find_var(&(*_self_), _63255_ident,false);
	if ((_63313_v != nullptr) && (static_cast<jule::U32>(_63313_v) != _63238_itself)) {
		if ((_63313_v.get()._field_scope == nullptr)) {
			return false;
		}
		return (_63313_v.get()._field_scope == (*_self_)._field_scope) || (!(_1a9d0c317_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I32>(1LL))));
	}
	jule::Ptr<_1a9d9a22e_TypeAlias> _64113_ta = _1a9cdc061_find_type_alias(&(*_self_), _63255_ident,false);
	if ((_64113_ta != nullptr) && (static_cast<jule::U32>(_64113_ta) != _63238_itself)) {
		if ((_64113_ta.get()._field_scope == nullptr)) {
			return false;
		}
		return (_64113_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1a9d0c317_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I32>(1LL))));
	}
	return false;
}



inline void _1a9ce0163_check_var_decl(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d489_VarDecl> _65238_decl) {
	jule::Ptr<_1a9d2553e_Var> _65317_v = _1a8da0499_build_var(_65238_decl);
	_65317_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65317_v);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65317_v));
	});
	if (_1a9cdeddd_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_65317_v)),_65317_v.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _65317_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65317_v.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a9cdd65b_stop(_self_.ptr());
		return;
	}
	_1a9d19269_check_var_decl(_self_.get()._field_s, _65317_v,jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	if ((!(_1a9d25b5a_is_type_inferred(_65317_v.ptr()))) && ((_65317_v.get()._field_kind == nullptr) || (_65317_v.get()._field_kind.get()._field_kind == nullptr))) {
		return;
	}
	_1a9d1d4b0_check_type_var(_self_.get()._field_s, _65317_v,jule::Trait<_1a9db4325_Lookup>(_self_, 0));
}



inline void _1a9ce03d8_check_type_alias_decl(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _67645_decl) {
	jule::Ptr<_1a9d9a22e_TypeAlias> _67717_ta = _1a8d9cd6a_build_type_alias(_67645_decl);
	if (_1a9cdeddd_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_67717_ta)),_67717_ta.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _67717_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_67717_ta.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1a9cdd65b_stop(_self_.ptr());
		return;
	}
	_1a9d15199_check_type_alias_decl(_self_.get()._field_s, _67717_ta,jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_67717_ta);
	if ((_67717_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1a9cdd65b_stop(_self_.ptr());
	}
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce064c_get_child(_1a9cdbc53_ScopeChecker* _self_) {
	return jule::new_ptr<_1a9cc76bc_Scope>(_1a9cc76bc_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1a9ce0a15_check_child_ssc(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cdc3_ScopeTree>& _70040_tree,jule::Ptr<_1a9cc76bc_Scope>& _70063_s,jule::Ptr<_1a9cdbc53_ScopeChecker>& _70079_ssc) {
	_70079_ssc.get()._field_parent=_self_;
	_1a9ceab52_check(_70079_ssc, _70040_tree,_70063_s);
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce0dbc_check_child_sc(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cdc3_ScopeTree>& _70539_tree,jule::Ptr<_1a9cdbc53_ScopeChecker>& _70562_ssc) {
	jule::Ptr<_1a9cc76bc_Scope> _70617_s = _1a9ce064c_get_child(_self_.ptr());
	_1a9ce0a15_check_child_ssc(_self_, _70539_tree,_70617_s,_70562_ssc);
	return _70617_s;
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce11ca_check_child(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cdc3_ScopeTree>& _71136_tree) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _71217_ssc = _1a9ceadb6_new_child_checker(_self_);
	return _1a9ce0dbc_check_child_sc(_self_, _71136_tree,_71217_ssc);
}



inline void _1a9ce1450_check_anon_scope(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cdc3_ScopeTree> _71640_tree) {
	jule::Ptr<_1a9cc76bc_Scope> _71717_s = _1a9ce11ca_check_child(_self_, _71640_tree);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_71717_s));
}



inline void _1a9ce176e_process_error_call(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>& _72143_m,jule::Ptr<_1d7b77374_Token> _72174_err) {
	if (_1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _72617_root = _1a9cddd98_get_root(_self_);
	if ((!(_72617_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _72174_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_72143_m.get()._field_func=_72617_root.get()._field_owner;
}



inline void _1a9ce19e4_check_expr(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b09a43_Expr> _73434_expr) {
	jule::Ptr<_1a9d7379b_Eval> _73517_eval = _1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	_73517_eval.get()._field_ignored=true;
	jule::Ptr<_1a9d71c2d_Data> _73717_d = _1a9d8ce58_eval_expr(_73517_eval, _73434_expr);
	if ((_73717_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _73717_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
			_case_begin_1abc846dd:;
			{
				jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel> _74421_m = _73717_d.get()._field_model.operator jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>();
				_1a9ce176e_process_error_call(_self_, _74421_m,_73434_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d91d5e_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d9214a_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
			_case_begin_1abc84754:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_73717_d));
			}
		}
		else {
			_case_begin_1abc84259:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _73434_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abc84204:;
	}
}



inline void _1a9ce1c69_check_co_expr(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b89e03_CoExpr> _76237_expr) {
	jule::Ptr<_1a9d7379b_Eval> _76317_eval = _1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	_76317_eval.get()._field_ignored=true;
	jule::Ptr<_1a9d71c2d_Data> _76517_d = _1a9d8ce58_eval_expr(_76317_eval, _76237_expr.get()._field_expr);
	if ((_76517_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _76517_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
			_case_begin_1abc8ab45:;
			{
				jule::Ptr<_1a8d896d6_FnCallExprModel> _77221_model = _76517_d.get()._field_model.operator jule::Ptr<_1a8d896d6_FnCallExprModel>();
				if (_77221_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_77221_model.get()._field_is_co=true;
				_1a9d851c5_check_fn_of_concurrent_call(_76317_eval.ptr(), _77221_model.get()._field_func,_76237_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76517_d));
			}
		}
		else {
			_case_begin_1abc89a45:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _76237_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1abc89ec9:;
	}
}



inline jule::Ptr<_1a9cce0b9_If> _1a9ce2077_check_if(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e303_If> _78632_i) {
	jule::Ptr<_1a9cc76bc_Scope> _78717_s = _1a9ce11ca_check_child(_self_, _78632_i.get()._field_scope);
	jule::Ptr<_1a9d71c2d_Data> _78917_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _78632_i.get()._field_expr);
	if ((_78917_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a9da06b8_Prim> _79417_prim = _1a9d9d023_prim(_78917_d.get()._field_kind.ptr());
	if ((_79417_prim == nullptr) || (!(_1a9da3413_is_bool(_79417_prim.ptr())))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _78632_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1a9cce0b9_If>(_1a9cce0b9_If(_78917_d.get()._field_model,_78717_s));
}



inline jule::Ptr<_1a9c78b46_Else> _1a9ce2385_check_else(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e4e0_Else> _80634_e) {
	return jule::new_ptr<_1a9c78b46_Else>(_1a9c78b46_Else(_1a9ce11ca_check_child(_self_, _80634_e.get()._field_scope)));
}



inline void _1a9ce260a_check_conditional(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e6cc_Conditional> _81241_conditional) {
	jule::Ptr<_1a9c78d33_Conditional> _81317_c = jule::new_ptr<_1a9c78d33_Conditional>(_1a9c78d33_Conditional());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81317_c));
	_81317_c.get()._field_elifs=jule::Slice<jule::Ptr<_1a9cce0b9_If>>::alloc(0LL,static_cast<jule::I32>((_81241_conditional.get()._field_tail.len() + 1LL)));
	_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a9ce2077_check_if(_self_, _81241_conditional.get()._field_head));
	{
		auto &expr = _81241_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1abc95820:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8e303_If> _1abc96535_elif = *it;
			{
				_81317_c.get()._field_elifs = jule::alloc_for_append(_81317_c.get()._field_elifs,1);_81317_c.get()._field_elifs.__push(_1a9ce2077_check_if(_self_, _1abc96535_elif));
			}
			_iter_next_1abc95820:;
			++it;
			goto _iter_begin_1abc95820;
		}
		_iter_end_1abc95820:;
	}
	if ((_81241_conditional.get()._field_default != nullptr)) {
		_81317_c.get()._field_default=_1a9ce2385_check_else(_self_, _81241_conditional.get()._field_default);
	}
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce2a5b_check_iter_scope_sc(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::U32 _82839_it,jule::Ptr<_1d7b8cdc3_ScopeTree> _82856_tree,jule::Ptr<_1a9cdbc53_ScopeChecker> _82878_ssc) {
	_82878_ssc.get()._field_it=_82839_it;
	return _1a9ce0dbc_check_child_sc(_self_, _82856_tree,_82878_ssc);
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce2e13_check_iter_scope(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::U32 _83336_it,jule::Ptr<_1d7b8cdc3_ScopeTree>& _83354_tree) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _83417_ssc = _1a9ceadb6_new_child_checker(_self_);
	return _1a9ce2a5b_check_iter_scope_sc(_self_, _83336_it,_83354_tree,_83417_ssc);
}



inline void _1a9ce3188_check_inf_iter(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d863_Iter>& _83839_it) {
	jule::Ptr<_1a9c89959_InfIter> _83917_kind = jule::new_ptr<_1a9c89959_InfIter>(_1a9c89959_InfIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_83917_kind));
	_83917_kind.get()._field_scope=_1a9ce2e13_check_iter_scope(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_83917_kind)),_83839_it.get()._field_scope);
}



inline void _1a9ce340d_check_while_iter(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d863_Iter>& _84641_it) {
	jule::Ptr<_1d7b8da50_WhileKind> _84717_wh = _84641_it.get()._field_kind.operator jule::Ptr<_1d7b8da50_WhileKind>();
	if ((_84717_wh.get()._field_expr == nullptr) && (_84717_wh.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_1a9ce3188_check_inf_iter(_self_, _84641_it);
		return;
	}
	jule::Ptr<_1a9c89b46_WhileIter> _85317_kind = jule::new_ptr<_1a9c89b46_WhileIter>(_1a9c89b46_WhileIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85317_kind));
	_85317_kind.get()._field_scope=_1a9ce2e13_check_iter_scope(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_85317_kind)),_84641_it.get()._field_scope);
	if ((_84717_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1a9d71c2d_Data> _86021_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _84717_wh.get()._field_expr);
		if ((_86021_d == nullptr)) {
			return;
		}
		jule::Ptr<_1a9da06b8_Prim> _86517_prim = _1a9d9d023_prim(_86021_d.get()._field_kind.ptr());
		if ((_86517_prim == nullptr)) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _84641_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_1a9da3413_is_bool(_86517_prim.ptr())))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _84641_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_85317_kind.get()._field_expr=_86021_d.get()._field_model;
	}
	if (_1d7b2ce73_is_while_next(_84717_wh.ptr())) {
		if ((!(_1a9cacd9a_is_valid_ast_st_for_next_st(_84717_wh.get()._field_next)))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _84717_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I32 _88517_n = _self_.get()._field_scope.get()._field_stmts.len();
		_1a9ce98ed_check_node(_self_, _84717_wh.get()._field_next);
		if (_88517_n < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_scope.get()._field_stmts.len()))) {
			jule::Any _88825_st = _self_.get()._field_scope.get()._field_stmts[_88517_n];
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_88517_n);
			if ((!(_1a9cb4e29_is_valid_st_for_next_st(_88825_st)))) {
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _84717_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_85317_kind.get()._field_next=_88825_st;
		}
	}
}



inline void _1a9ce3683_check_range_iter(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d863_Iter>& _89941_it) {
	jule::Ptr<_1d7b8dc3c_RangeKind> _90017_rang = _89941_it.get()._field_kind.operator jule::Ptr<_1d7b8dc3c_RangeKind>();
	jule::Ptr<_1a9d71c2d_Data> _90217_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _90017_rang.get()._field_expr);
	if ((_90217_d == nullptr)) {
		return;
	}
	jule::Ptr<_1a9c89d33_RangeIter> _90717_kind = jule::new_ptr<_1a9c89d33_RangeIter>(_1a9c89d33_RangeIter(_90217_d,jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a9d2553e_Var>(),jule::Ptr<_1a9d2553e_Var>()));
	_1a9d67c35_RangeChecker _91117_rc = _1a9d67c35_RangeChecker(_self_,_90017_rang,_90717_kind,_90217_d);
	jule::Bool _91713_ok = _1a9d6962c_check(&_91117_rc);
	if ((!(_91713_ok))) {
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_90717_kind));
	jule::Ptr<_1a9cdbc53_ScopeChecker> _92417_ssc = _1a9ceadb6_new_child_checker(_self_);
	if ((_90717_kind.get()._field_key_a != nullptr)) {
		if ((!(_1a9d0c317_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a9cdeddd_is_duplicated_ident(_self_.ptr(), 0LLU,_90717_kind.get()._field_key_a.get()._field_ident)) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _90717_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90717_kind.get()._field_key_a.get()._field_ident)}));
			_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92417_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92417_ssc.get()._field_table.get()._field_vars,1);_92417_ssc.get()._field_table.get()._field_vars.__push(_90717_kind.get()._field_key_a);
	}
	if ((_90717_kind.get()._field_key_b != nullptr)) {
		if ((!(_1a9d0c317_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1a9cdeddd_is_duplicated_ident(_self_.ptr(), 0LLU,_90717_kind.get()._field_key_b.get()._field_ident)) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _90717_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_90717_kind.get()._field_key_b.get()._field_ident)}));
			_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92417_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92417_ssc.get()._field_table.get()._field_vars,1);_92417_ssc.get()._field_table.get()._field_vars.__push(_90717_kind.get()._field_key_b);
	}
	_90717_kind.get()._field_scope=_1a9ce2a5b_check_iter_scope_sc(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_90717_kind)),_89941_it.get()._field_scope,_92417_ssc);
}



inline void _1a9ce3908_check_iter(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d863_Iter> _94534_it) {
	if (_1d7b1097d_is_inf(_94534_it.ptr())) {
		_1a9ce3188_check_inf_iter(_self_, _94534_it);
		return;
	}
	{
		auto &_match_expr{ _94534_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8da50_WhileKind>>()) {
			_case_begin_1abcb5b1a:;
			{
				_1a9ce340d_check_while_iter(_self_, _94534_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8dc3c_RangeKind>>()) {
			_case_begin_1abcb4d7d:;
			{
				_1a9ce3683_check_range_iter(_self_, _94534_it);
			}
		}
		else {
			_case_begin_1abcb560e:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1abcb55a9:;
	}
}



inline jule::Bool _1a9ce3c16_check_valid_cont_label(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::U32 _96142_it) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _96217_scope = _self_;
	_julec_label_iter:;
	if (_96217_scope.get()._field_it == _96142_it) {
		return true;
	}
	if ((_96217_scope.get()._field_parent != nullptr)) {
		_96217_scope=_96217_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1a9ce4068_check_valid_break_label(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::U32 _97743_ptr) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _97817_scope = _self_;
	_julec_label_iter:;
	if (_97817_scope.get()._field_it == _97743_ptr) {
		return true;
	}
	if ((_97817_scope.get()._field_cse != 0LLU)) {
		jule::U32 _98617_mtch = static_cast<jule::U32>(((_1a9cdb2b3_Case*)(_97817_scope.get()._field_cse))->_field_owner);
		if (_98617_mtch == _97743_ptr) {
			return true;
		}
	}
	if ((_97817_scope.get()._field_parent != nullptr)) {
		_97817_scope=_97817_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1a9cb79dc_ContSt> _1a9ce4365_check_cont_valid_scope(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e116_ContSt> _100042_c) {
	if (_1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _100042_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_100042_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1a9cb79dc_ContSt>();
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _101017_scope = _self_;
	_julec_label_iter:;
	{
		
		if (((_101017_scope.get()._field_it == 0LLU) && (_101017_scope.get()._field_parent != nullptr)) && (_101017_scope.get()._field_owner == nullptr)) {
			_case_begin_1abcbdeb9:;
			{
				_101017_scope=_101017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101017_scope.get()._field_it != 0LLU)) {
			_case_begin_1abcbe041:;
			{
				return jule::new_ptr<_1a9cb79dc_ContSt>(_1a9cb79dc_ContSt(_101017_scope.get()._field_it));
			}
		}
		_match_end_1abcbdded:;
	}
	_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _100042_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a9ce45da_check_cont(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8e116_ContSt> _102430_c) {
	jule::Ptr<_1a9cb79dc_ContSt> _102517_cont = _1a9ce4365_check_cont_valid_scope(_self_, _102430_c);
	if ((_102517_cont == nullptr)) {
		return;
	}
	if ((_102430_c.get()._field_label != nullptr)) {
		jule::Ptr<_1a9cdb879_ScopeLabel> _103121_label = _1a9c8a11e_find_label_parent(_102430_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);
		if ((_103121_label == nullptr)) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
			return;
		}
		_103121_label.get()._field_used=true;
		if ((_103121_label.get()._field_pos + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_103121_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
			return;
		}
		jule::I32 _104417_i = (_103121_label.get()._field_pos + 1LL);
		if (_104417_i >= static_cast<jule::I32>(static_cast<jule::I32>(_103121_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _104825_st = _103121_label.get()._field_scope.get()._field_scope.get()._field_stmts[_104417_i];
			{
				auto &_match_expr{ _104825_st };
				
				if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
					_case_begin_1abcc6b09:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_104825_st.operator jule::Ptr<_1a9c89959_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a9c89d33_RangeIter>>()) {
					_case_begin_1abcc8567:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_104825_st.operator jule::Ptr<_1a9c89d33_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1a9c89b46_WhileIter>>()) {
					_case_begin_1abcc85cd:;
					{
						_102517_cont.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_104825_st.operator jule::Ptr<_1a9c89b46_WhileIter>()));
					}
				}
				else {
					_case_begin_1abcc8479:;
					{
						_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1abcc8424:;
			}
		}
	}
	if ((_102517_cont.get()._field_it != 0LLU)) {
		if ((!(_1a9ce3c16_check_valid_cont_label(_self_, _102517_cont.get()._field_it)))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _102430_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102430_c.get()._field_label.get()._field_kind)}));
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_102517_cont));
}



inline void _1a9ce4860_check_label(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8c433_LabelSt> _107135_l) {
	if ((_1a9cde41a_find_label(_self_.ptr(), _107135_l.get()._field_ident) != nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _107135_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107135_l.get()._field_ident)}));
		return;
	}
	jule::Ptr<_1a9cda405_Label> _107717_label = jule::new_ptr<_1a9cda405_Label>(_1a9cda405_Label(_107135_l.get()._field_ident));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_107717_label));
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>({jule::new_ptr<_1a9cdb879_ScopeLabel>(_1a9cdb879_ScopeLabel(_107135_l.get()._field_token,_107717_label,static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL))),_self_,jule::Bool()))}));
}



inline void _1a9ce4ad5_push_goto(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8c620_GotoSt> _109033_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a9cda5e2_GotoSt>(_1a9cda5e2_GotoSt(_109033_gt.get()._field_label.get()._field_kind))));
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>({jule::new_ptr<_1a9cdba66_ScopeGoto>(_1a9cdba66_ScopeGoto(_109033_gt,_self_,static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL)))))}));
}



inline void _1a9ce4d5a_check_postfix(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cbd6_AssignSt> _110237_a) {
	if ((_110237_a.get()._field_left.len() > 1LL)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1d7b09a43_Expr> _110817_expr = _110237_a.get()._field_left[0LL].get()._field_expr;
	jule::Ptr<_1a9d71c2d_Data> _110917_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _110817_expr);
	if ((_110917_d == nullptr)) {
		return;
	}
	_1a9cac608_check_assign(_self_.get()._field_s,_110917_d,nullptr,_110237_a.get()._field_setter);
	if ((_1a9d9d4eb_ptr(_110917_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9da723b_Ptr> _111721_ptr = _1a9d9d4eb_ptr(_110917_d.get()._field_kind.ptr());
		if (_1a9da7c0e_is_unsafe(_111721_ptr.ptr())) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110237_a.get()._field_setter.get()._field_kind),jule::Any(_1a9d9b31d_to_str(_110917_d.get()._field_kind.ptr()))}));
			return;
		}
	} else {
		if ((_1a9d9d023_prim(_110917_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9cda02b_is_num(_1a9d9d023_prim(_110917_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _110237_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110237_a.get()._field_setter.get()._field_kind),jule::Any(_1a9d9b31d_to_str(_110917_d.get()._field_kind.ptr()))}));
			return;
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a9cda7ce_Postfix>(_1a9cda7ce_Postfix(_110917_d.get()._field_model,_110237_a.get()._field_setter.get()._field_kind))));
}



inline jule::Bool _1a9ce5168_is_new_assign_ident(_1a9cdbc53_ScopeChecker* _self_,jule::Str _113538_ident) {
	if (_1d7b79ac4_is_ignore_ident(_113538_ident) || _113538_ident.empty()) {
		return false;
	}
	return _1a9d6e830_def_by_ident((*_self_)._field_table.ptr(), _113538_ident,false) == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1a9ce560d_check_structure_assign_op(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a8d857c0_StructIns>& _114350_s,jule::Ptr<_1d7b8cbd6_AssignSt>& _114370_a,jule::Ptr<_1a9d71c2d_Data>& _114389_r) {
	jule::Ptr<_1a8d98063_FnIns> _114617_overload = nullptr;
	{
		auto &_match_expr{ _114370_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1abce086a:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1abce055c:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1abce154c:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1abce15b3:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1abce1629:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1abce0282:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1abce02e8:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1abce035e:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1abce03c5:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1abce17e4:;
			{
				_114617_overload=_114350_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1abcdec54:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _114370_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114370_a.get()._field_setter.get()._field_kind),jule::Any(_1a8d85b77_to_str(_114350_s.ptr()))}));
				return false;
			}
		}
		_match_end_1abce022c:;
	}
	if ((_114617_overload == nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _114370_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114370_a.get()._field_setter.get()._field_kind),jule::Any(_1a8d85b77_to_str(_114350_s.ptr()))}));
		return false;
	}
	jule::Ptr<_1a8d971c7_ParamIns> _117817_p = _114617_overload.get()._field_params[1LL];
	return _1a9d12bad_check_assign_type(_self_.get()._field_s, _117817_p.get()._field_decl.get()._field_reference,_117817_p.get()._field_kind,_114389_r,_114370_a.get()._field_setter);
}



inline void _1a9ce5872_check_single_assign(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cbd6_AssignSt>& _118244_a) {
	jule::Ptr<_1a9d71c2d_Data> _118317_l = nullptr;
	if ((!(_1d7b79ac4_is_ignore_ident(_118244_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1d7b09a43_Expr> _118621_expr = _118244_a.get()._field_left[0LL].get()._field_expr;
		_118317_l=_1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _118621_expr);
		if ((_118317_l == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1a9d7379b_Eval> _119317_eval = nullptr;
	if ((_118317_l != nullptr)) {
		_119317_eval=_1a9d123a5_evalp(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0),_118317_l.get()._field_kind);
	} else {
		_119317_eval=_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	}
	_119317_eval.get()._field_unsafety=_1a9cdd21b_is_unsafe(_self_);
	jule::Ptr<_1a9d71c2d_Data> _120017_r = _1a9d8ce58_eval_expr(_119317_eval, _118244_a.get()._field_right);
	if ((_120017_r == nullptr)) {
		return;
	}
	if ((_118317_l == nullptr)) {
		if (_1a9d9c099_void(_120017_r.get()._field_kind.ptr())) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _118244_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120017_r));
		return;
	}
	if ((!(_1a9cac608_check_assign(_self_.get()._field_s,_118317_l,_120017_r,_118244_a.get()._field_setter)))) {
		return;
	}
	if ((_1a9d9e94d_tup(_120017_r.get()._field_kind.ptr()) != nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _118244_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a8d8742b_OperandExprModel> _122217_lm = jule::new_ptr<_1a8d8742b_OperandExprModel>(_1a8d8742b_OperandExprModel(_118317_l.get()._field_kind,_118317_l.get()._field_model));
	jule::Ptr<_1a8d8742b_OperandExprModel> _122617_rm = jule::new_ptr<_1a8d8742b_OperandExprModel>(_1a8d8742b_OperandExprModel(_120017_r.get()._field_kind,_120017_r.get()._field_model));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a9cda9bb_Assign>(_1a9cda9bb_Assign(_122217_lm,_122617_rm,_118244_a.get()._field_setter))));
	if ((_118244_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1a8d857c0_StructIns> _123321_strct = _1a9d9e211_strct(_118317_l.get()._field_kind.ptr());
		if ((_123321_strct != nullptr)) {
			_1a9ce560d_check_structure_assign_op(_self_, _123321_strct,_118244_a,_120017_r);
			return;
		}
		_118244_a.get()._field_setter.get()._field_kind=_118244_a.get()._field_setter.get()._field_kind.slice(0LL,(_118244_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1a9d90169_BinaryEval _124021_solver = static__1a9d90a60_new(_119317_eval,_118244_a.get()._field_setter);
		_120017_r=_1a9d954e3_solve_explicit(&_124021_solver, _118317_l,_120017_r);
		if ((_120017_r == nullptr)) {
			return;
		}
		_118244_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;
	}
	_1a9d5e138_AssignTypeChecker _124917_checker = _1a9d5e138_AssignTypeChecker(_self_.get()._field_s,_118317_l.get()._field_kind,_120017_r,_118244_a.get()._field_setter);
	if (_1a9d602b0_check(&_124917_checker)) {
		_122617_rm.get()._field_model=_120017_r.get()._field_model;
		_122217_lm.get()._field_model=_118317_l.get()._field_model;
	}
}



inline void _1a9ce5de4___process_end_part_of_multi_assign(_1a9cdbc53_ScopeChecker* _self_,jule::Ptr<_1a9cdaba8_MultiAssign> _126157_st,jule::Ptr<_1d7b8cbd6_AssignSt> _126213_a,jule::Ptr<_1d7b8c9e9_AssignLeft> _126231_lexpr,jule::Ptr<_1a9d71c2d_Data> _126255_l,jule::Ptr<_1a9d71c2d_Data> _126269_r) {
	if (_1d7b79ac4_is_ignore_ident(_126231_lexpr.get()._field_ident)) {
		if (_1a9d9c099_void(_126269_r.get()._field_kind.ptr())) {
			_1a9d0c955_push_err((*_self_)._field_s.ptr(), _126213_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(jule::Any(nullptr));
		return;
	}
	if (_126213_a.get()._field_declarative && _1a9ce5168_is_new_assign_ident(&(*_self_), _126231_lexpr.get()._field_ident)) {
		if (_1a9cdeddd_is_duplicated_ident(&(*_self_), 0LLU,_126231_lexpr.get()._field_ident)) {
			_1a9d0c955_push_err((*_self_)._field_s.ptr(), _126231_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126231_lexpr.get()._field_ident)}));
			_1a9d0cc74_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1a9cdd65b_stop(&(*_self_));
			return;
		}
		jule::Ptr<_1a9d2553e_Var> _128121_v = jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var((*_self_)._field_scope,_126231_lexpr.get()._field_token,_126231_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126231_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126231_lexpr.get()._field_reference,jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(_126213_a.get()._field_right,_126269_r)),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>()));
		_1a9d1d191_check_var((*_self_)._field_s, _128121_v);
		_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(jule::Any(_128121_v));
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128121_v);
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128121_v));
		return;
	}
	if (_126231_lexpr.get()._field_mutable || _126231_lexpr.get()._field_reference) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _126231_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126231_lexpr.get()._field_ident)}));
		_1a9d0cc74_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1a9cac608_check_assign((*_self_)._field_s,_126255_l,_126269_r,_126213_a.get()._field_setter)))) {
		return;
	}
	
	_1a9d149d4_check_validity_for_init_expr((*_self_)._field_s, _126255_l.get()._field_mutable,false,_126255_l.get()._field_kind,_126269_r,_126213_a.get()._field_setter);
	_1a9d5e138_AssignTypeChecker _131617_checker = _1a9d5e138_AssignTypeChecker((*_self_)._field_s,_126255_l.get()._field_kind,_126269_r,_126213_a.get()._field_setter);
	_1a9d602b0_check(&_131617_checker);
	_126157_st.get()._field_l = jule::alloc_for_append(_126157_st.get()._field_l,1);_126157_st.get()._field_l.__push(_126255_l.get()._field_model);
}



inline void _1a9ce6136_check_ret_multi_assign(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cbd6_AssignSt>& _132747_a) {
	jule::Ptr<_1a9d71c2d_Data> _132817_rd = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _132747_a.get()._field_right);
	if ((_132817_rd == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _133317_r = _1a9ca8d1e_get_datas_from_tuple_data(_132817_rd);
	{
		
		if (_132747_a.get()._field_left.len() > static_cast<jule::I32>(static_cast<jule::I32>(_133317_r.len()))) {
			_case_begin_1abd17d8c:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _132747_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_132747_a.get()._field_left.len() < static_cast<jule::I32>(static_cast<jule::I32>(_133317_r.len()))) {
			_case_begin_1abd17e14:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _132747_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1abd17ce3:;
	}
	jule::Ptr<_1a9cdaba8_MultiAssign> _134417_st = jule::new_ptr<_1a9cdaba8_MultiAssign>(_1a9cdaba8_MultiAssign(jule::Slice<jule::Any>(),_132817_rd.get()._field_model));
	if ((_1a9d9e94d_tup(_132817_rd.get()._field_kind.ptr()) == nullptr)) {
		_134417_st.get()._field_r=jule::Any(jule::new_ptr<_1a8d8d487_TupleExprModel>(_1a8d8d487_TupleExprModel(_133317_r)));
	}
	{
		auto &expr = _132747_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1abd1b566:;
		if (it != expr.end()) {
			jule::I32 _1abd1b28b_i = it - expr.begin();
			{
				jule::Ptr<_1d7b8c9e9_AssignLeft> _135321_lexpr = _132747_a.get()._field_left[_1abd1b28b_i];
				jule::Ptr<_1a9d71c2d_Data> _135421_l = nullptr;
				if ((!(_1d7b79ac4_is_ignore_ident(_135321_lexpr.get()._field_ident))) && ((!(_132747_a.get()._field_declarative)) || (!(_1a9ce5168_is_new_assign_ident(_self_.ptr(), _135321_lexpr.get()._field_ident))))) {
					_135421_l=_1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _135321_lexpr.get()._field_expr);
					if ((_135421_l == nullptr)) {
						goto _iter_next_1abd1b566;
					}
				}
				_1a9ce5de4___process_end_part_of_multi_assign(_self_.ptr(), _134417_st,_132747_a,_135321_lexpr,_135421_l,_133317_r[_1abd1b28b_i]);
			}
			_iter_next_1abd1b566:;
			++it;
			_1abd1b28b_i++;
			goto _iter_begin_1abd1b566;
		}
		_iter_end_1abd1b566:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_134417_st));
}



inline void _1a9ce63ab_check_multi_assign(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cbd6_AssignSt>& _137043_a) {
	{
		auto &_match_expr{ _137043_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>()) {
			_case_begin_1abd20812:;
			{
				_1a9ce6136_check_ret_multi_assign(_self_, _137043_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b89c16_UnsafeExpr>>()) {
			_case_begin_1abd20878:;
			{
				{
					auto &_match_expr{ _137043_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1d7b89c16_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>()) {
						_case_begin_1abd21cca:;
						{
							_1a9ce6136_check_ret_multi_assign(_self_, _137043_a);
							return;
						}
					}
					_match_end_1abd21c75:;
				}
			}
		}
		_match_end_1abd207ac:;
	}
	jule::Slice<jule::Any> _138317_right = _1a9ca9957_get_expr_models(_137043_a.get()._field_right.get()._field_kind);
	{
		
		if (_137043_a.get()._field_left.len() > static_cast<jule::I32>(static_cast<jule::I32>(_138317_right.len()))) {
			_case_begin_1abd22a67:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _137043_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_137043_a.get()._field_left.len() < static_cast<jule::I32>(static_cast<jule::I32>(_138317_right.len()))) {
			_case_begin_1abd22ade:;
			{
				_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _137043_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1abd2298a:;
	}
	jule::Ptr<_1a8d8d487_TupleExprModel> _139417_right_tuple = jule::new_ptr<_1a8d8d487_TupleExprModel>(_1a8d8d487_TupleExprModel());
	jule::Ptr<_1a9cdaba8_MultiAssign> _139617_st = jule::new_ptr<_1a9cdaba8_MultiAssign>(_1a9cdaba8_MultiAssign(jule::Slice<jule::Any>(),jule::Any(jule::Any(_139417_right_tuple))));
	{
		auto &expr = _137043_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1abd257c3:;
		if (it != expr.end()) {
			jule::I32 _1abd259c1_i = it - expr.begin();
			{
				jule::Ptr<_1d7b8c9e9_AssignLeft> _140121_lexpr = _137043_a.get()._field_left[_1abd259c1_i];
				jule::Ptr<_1a9d71c2d_Data> _140221_l = nullptr;
				if ((!(_1d7b79ac4_is_ignore_ident(_140121_lexpr.get()._field_ident))) && ((!(_137043_a.get()._field_declarative)) || (!(_1a9ce5168_is_new_assign_ident(_self_.ptr(), _140121_lexpr.get()._field_ident))))) {
					_140221_l=_1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _140121_lexpr.get()._field_expr);
					if ((_140221_l == nullptr)) {
						goto _iter_next_1abd257c3;
					}
				}
				jule::Ptr<_1d7b09a43_Expr> _141221_expr = jule::new_ptr<_1d7b09a43_Expr>(_1d7b09a43_Expr(_137043_a.get()._field_right.get()._field_token,jule::Ptr<_1d7b77374_Token>(),jule::Bool(),_138317_right[_1abd259c1_i]));
				jule::Ptr<_1a9d7379b_Eval> _141621_eval = nullptr;
				if ((_140221_l != nullptr)) {
					_141621_eval=_1a9d123a5_evalp(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0),_140221_l.get()._field_kind);
				} else {
					_141621_eval=_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0));
				}
				jule::Ptr<_1a9d71c2d_Data> _142221_r = _1a9d8ce58_eval_expr(_141621_eval, _141221_expr);
				if ((_142221_r == nullptr)) {
					goto _iter_next_1abd257c3;
				}
				_139417_right_tuple.get()._field_datas = jule::alloc_for_append(_139417_right_tuple.get()._field_datas,1);_139417_right_tuple.get()._field_datas.__push(_142221_r);
				_1a9ce5de4___process_end_part_of_multi_assign(_self_.ptr(), _139617_st,_137043_a,_140121_lexpr,_140221_l,_142221_r);
			}
			_iter_next_1abd257c3:;
			++it;
			_1abd259c1_i++;
			goto _iter_begin_1abd257c3;
		}
		_iter_end_1abd257c3:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_139617_st));
}



inline void _1a9ce6631_check_assign_st(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cbd6_AssignSt> _143539_a) {
	{
		
		if (_1d7b7bad7_is_postfix_op(_143539_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1abd2c91d:;
			{
				_1a9ce4d5a_check_postfix(_self_, _143539_a);
			}
		}
		else if ((_143539_a.get()._field_left.len() == 1LL) && (!(_143539_a.get()._field_declarative))) {
			_case_begin_1abd2c610:;
			{
				_1a9ce5872_check_single_assign(_self_, _143539_a);
			}
		}
		else {
			_case_begin_1abd2c599:;
			{
				_1a9ce63ab_check_multi_assign(_self_, _143539_a);
			}
		}
		_match_end_1abd2c4cd:;
	}
}



inline jule::Ptr<_1a9cc76bc_Scope> _1a9ce69d8_check_case_scope(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a9cdb2b3_Case>& _144637_c,jule::Ptr<_1d7b8cdc3_ScopeTree>& _144652_tree) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _144717_ssc = _1a9ceadb6_new_child_checker(_self_);
	_144717_ssc.get()._field_cse=static_cast<jule::U32>(static_cast<jule::U32>(_144637_c));
	return _1a9ce0dbc_check_child_sc(_self_, _144652_tree,_144717_ssc);
}



inline jule::Ptr<_1a9cdb2b3_Case> _1a9ce6ed3_check_case(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a9cdad95_Match> _145234_m,jule::I32 _145245_i,jule::Ptr<_1d7b8eaa6_Case> _145257_c,jule::Ptr<_1a9d71c2d_Data> _145287_expr) {
	jule::Ptr<_1a9cdb2b3_Case> _145317__case = _145234_m.get()._field_cases[_145245_i];
	_145317__case.get()._field_exprs=jule::Slice<jule::Ptr<_1a9d71c2d_Data>>::alloc(0LL,static_cast<jule::I32>(_145257_c.get()._field_exprs.len()));
	jule::Bool _145517_generic_matched = false;
	jule::Ptr<_1a9d7379b_Eval> _145617_eval = _1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0));
	{
		auto &expr = _145257_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1abd33c54:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1abd33e52_e = *it;
			{
				jule::Ptr<_1a9d71c2d_Data> _145821_d = _1a9d8c83c_eval_expr_kind(_145617_eval, _1abd33e52_e.get()._field_kind);
				if ((_145821_d == nullptr)) {
					goto _iter_next_1abd33c54;
				}
				if (_145234_m.get()._field_type_match) {
					_145317__case.get()._field_exprs = jule::alloc_for_append(_145317__case.get()._field_exprs,1);_145317__case.get()._field_exprs.__push(_145821_d);
					if ((_1a9ca858d_count_match_type(_145234_m,_145821_d.get()._field_kind) > 1LL)) {
						_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _1abd33e52_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_145821_d.get()._field_kind.ptr()))}));
					}
					if (_145287_expr.get()._field_kind.get()._field_generic) {
						_145517_generic_matched=_145517_generic_matched || _1a9d9b62b_equals(_145287_expr.get()._field_kind, _145821_d.get()._field_kind);
					} else {
						jule::Ptr<_1a8ea7a57_Trait> _147025_trt = _1a9d9e475_trt(_145287_expr.get()._field_kind.ptr());
						if ((_147025_trt != nullptr)) {
							_1a9d13153_check_type_compatibility(_self_.get()._field_s, _145287_expr.get()._field_kind,_145821_d.get()._field_kind,_1abd33e52_e.get()._field_token);
						}
					}
					goto _iter_next_1abd33c54;
				}
				if (_145821_d.get()._field_decl) {
					_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _1abd33e52_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1abd33c54;
				}
				_145317__case.get()._field_exprs = jule::alloc_for_append(_145317__case.get()._field_exprs,1);_145317__case.get()._field_exprs.__push(_145821_d);
				_1a9d5e138_AssignTypeChecker _148721_checker = _1a9d5e138_AssignTypeChecker(_self_.get()._field_s,_145287_expr.get()._field_kind,_145821_d,_1abd33e52_e.get()._field_token);
				_1a9d602b0_check(&_148721_checker);
			}
			_iter_next_1abd33c54:;
			++it;
			goto _iter_begin_1abd33c54;
		}
		_iter_end_1abd33c54:;
	}
	if (((!(_145234_m.get()._field_type_match)) || (!(_145287_expr.get()._field_kind.get()._field_generic))) || _145517_generic_matched) {
		_145317__case.get()._field_scope=_1a9ce69d8_check_case_scope(_self_, _145317__case,_145257_c.get()._field_scope);
	}
	return _145317__case;
}



inline void _1a9ce739b_check_cases(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8ec93_MatchCase>& _150136_m,jule::Ptr<_1a9cdad95_Match> _150155_rm,jule::Ptr<_1a9d71c2d_Data> _150171_expr) {
	_150155_rm.get()._field_cases=jule::Slice<jule::Ptr<_1a9cdb2b3_Case>>::alloc(0LL,static_cast<jule::I32>(_150136_m.get()._field_cases.len()));
	{
		auto &expr = _150136_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd3e017:;
		if (it != expr.end()) {
			jule::I32 _1abd3d9d9_i = it - expr.begin();
			{
				jule::Ptr<_1a9cdb2b3_Case> _150421__case = jule::new_ptr<_1a9cdb2b3_Case>(_1a9cdb2b3_Case(_150155_rm,jule::Ptr<_1a9cc76bc_Scope>(),jule::Slice<jule::Ptr<_1a9d71c2d_Data>>(),jule::Ptr<_1a9cdb2b3_Case>()));
				if ((_1abd3d9d9_i > 0LL)) {
					_150155_rm.get()._field_cases[(_1abd3d9d9_i - 1LL)].get()._field_next=_150421__case;
				}
				_150155_rm.get()._field_cases = jule::alloc_for_append(_150155_rm.get()._field_cases,1);_150155_rm.get()._field_cases.__push(_150421__case);
			}
			_iter_next_1abd3e017:;
			++it;
			_1abd3d9d9_i++;
			goto _iter_begin_1abd3e017;
		}
		_iter_end_1abd3e017:;
	}
	if ((_150155_rm.get()._field_default != nullptr) && (_150136_m.get()._field_cases.len() > 0LL)) {
		_150155_rm.get()._field_cases[(_150155_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150155_rm.get()._field_default;
	}
	{
		auto &expr = _150136_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd418aa:;
		if (it != expr.end()) {
			jule::I32 _1abd41beb_i = it - expr.begin();
			jule::Ptr<_1d7b8eaa6_Case> _1abd41d1c_c = *it;
			{
				_1a9ce6ed3_check_case(_self_, _150155_rm,_1abd41beb_i,_1abd41d1c_c,_150171_expr);
			}
			_iter_next_1abd418aa:;
			++it;
			_1abd41beb_i++;
			goto _iter_begin_1abd418aa;
		}
		_iter_end_1abd418aa:;
	}
}



inline jule::Ptr<_1a9cdb2b3_Case> _1a9ce7753_check_default(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a9cdad95_Match> _152237_m,jule::Ptr<_1d7b8e4e0_Else> _152252_d) {
	jule::Ptr<_1a9cdb2b3_Case> _152317_def = jule::new_ptr<_1a9cdb2b3_Case>(_1a9cdb2b3_Case(_152237_m,jule::Ptr<_1a9cc76bc_Scope>(),jule::Slice<jule::Ptr<_1a9d71c2d_Data>>(),jule::Ptr<_1a9cdb2b3_Case>()));
	_152317_def.get()._field_scope=_1a9ce69d8_check_case_scope(_self_, _152317_def,_152252_d.get()._field_scope);
	return _152317_def;
}



inline void _1a9ce79c8_check_comptime_panic(_1a9cdbc53_ScopeChecker* _self_,jule::Ptr<_1a9cc76bc_Scope>& _153040_s) {
	if ((_153040_s.get()._field_stmts.len() != 1LL)) {
		return;
	}
	jule::Any _153513_stmt = _153040_s.get()._field_stmts[0LL];
	{
		auto &_match_expr{ _153513_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1abd4579e:;
			{
				jule::Ptr<_1a9d71c2d_Data> _153817_d = _153513_stmt.operator jule::Ptr<_1a9d71c2d_Data>();
				{
					auto &_match_expr{ _153817_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>()) {
						_case_begin_1abd46591:;
						{
							jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel> _154121_m = _153817_d.get()._field_model.operator jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _154121_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
									_case_begin_1abd473e9:;
									{
										jule::Ptr<_1a9c46e77_Const> _154425_c = _154121_m.get()._field_expr.operator jule::Ptr<_1a9c46e77_Const>();
										if (_1a9c4acc2_is_str(_154425_c.ptr())) {
											_1a9d0c955_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_1a9c48929_read_str(_154425_c.ptr()))}));
										}
									}
								}
								_match_end_1abd47372:;
							}
						}
					}
					_match_end_1abd464d6:;
				}
			}
		}
		_match_end_1abd45749:;
	}
}



inline void _1a9ce7ce7_push_type_match(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1a9cdad95_Match> _155339_tm,jule::Ptr<_1d7b8ec93_MatchCase>& _155356_m) {
	if (_155339_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155339_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1abd496c6:;
			if (it != expr.end()) {
				jule::Ptr<_1a9cdb2b3_Case> _1abd497c5_c = *it;
				{
					if ((_1abd497c5_c.get()._field_scope != nullptr)) {
						_1a9ce79c8_check_comptime_panic(_self_.ptr(), _1abd497c5_c.get()._field_scope);
						_155339_tm.get()._field_default=_1abd497c5_c;
						_155339_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					}
				}
				_iter_next_1abd496c6:;
				++it;
				goto _iter_begin_1abd496c6;
			}
			_iter_end_1abd496c6:;
		}
		if ((_155356_m.get()._field_default != nullptr)) {
			_155339_tm.get()._field_cases=nullptr;
			_155339_tm.get()._field_default=_1a9ce7753_check_default(_self_, _155339_tm,_155356_m.get()._field_default);
			if ((_155339_tm.get()._field_default != nullptr)) {
				_1a9ce79c8_check_comptime_panic(_self_.ptr(), _155339_tm.get()._field_default.get()._field_scope);
			}
		}
	}
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155339_tm));
}



inline void _1a9ce806c_check_type_match(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8ec93_MatchCase>& _157741_m) {
	jule::Ptr<_1a9d71c2d_Data> _157817_d = _1a9d8cb4a_eval(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _157741_m.get()._field_expr);
	if ((_157817_d == nullptr)) {
		return;
	}
	if ((!(_157817_d.get()._field_kind.get()._field_generic)) && (!(((_1a9d9d023_prim(_157817_d.get()._field_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim(_157817_d.get()._field_kind.ptr()).ptr())) || (_1a9d9e475_trt(_157817_d.get()._field_kind.ptr()) != nullptr)))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _157741_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a9cdad95_Match> _158917_tm = jule::new_ptr<_1a9cdad95_Match>(_1a9cdad95_Match(_157817_d,true,jule::Slice<jule::Ptr<_1a9cdb2b3_Case>>(),jule::Ptr<_1a9cdb2b3_Case>()));
	if ((!(_158917_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_157741_m.get()._field_default != nullptr)) {
		_158917_tm.get()._field_default=_1a9ce7753_check_default(_self_, _158917_tm,_157741_m.get()._field_default);
	}
	_1a9ce739b_check_cases(_self_, _157741_m,_158917_tm,_157817_d);
	_1a9ce7ce7_push_type_match(_self_, _158917_tm,_157741_m);
}



inline void _1a9ce82e2_check_common_match(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8ec93_MatchCase>& _160243_m) {
	jule::Ptr<_1a9d71c2d_Data> _160317_d = nullptr;
	if ((_160243_m.get()._field_expr == nullptr)) {
		_160317_d=jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a9c473a6_new_bool(true)));
		_160317_d.get()._field_model=jule::Any(_160317_d.get()._field_constant);
	} else {
		_160317_d=_1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _160243_m.get()._field_expr);
		if ((_160317_d == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1a9cdad95_Match> _161717_mc = jule::new_ptr<_1a9cdad95_Match>(_1a9cdad95_Match(_160317_d,jule::Bool(),jule::Slice<jule::Ptr<_1a9cdb2b3_Case>>(),jule::Ptr<_1a9cdb2b3_Case>()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_161717_mc));
	if ((_160243_m.get()._field_default != nullptr)) {
		_161717_mc.get()._field_default=_1a9ce7753_check_default(_self_, _161717_mc,_160243_m.get()._field_default);
	}
	_1a9ce739b_check_cases(_self_, _160243_m,_161717_mc,_160317_d);
}



inline void _1a9ce8567_check_match(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8ec93_MatchCase> _162935_m) {
	if (_162935_m.get()._field_type_match) {
		_1a9ce806c_check_type_match(_self_, _162935_m);
		return;
	}
	_1a9ce82e2_check_common_match(_self_, _162935_m);
}



inline void _1a9ce87dc_check_fall(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8c80c_FallSt> _163730_f) {
	if (((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_scope.get()._field_stmts.len())))) || _1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _163730_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_1a9cdb2b3_Case* _164517__case = ((_1a9cdb2b3_Case*)(_self_.get()._field_cse));
	if ((_164517__case->_field_next == nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _163730_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1a9cdb4a0_FallSt>(_1a9cdb4a0_FallSt(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_164517__case->_field_next)))))))));
}



inline jule::Ptr<_1a9cb7bc9_BreakSt> _1a9ce8aea_check_break_with_label(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8de29_BreakSt> _165742_b) {
	jule::Ptr<_1a9cb7bc9_BreakSt> _165817_brk = _1a9ce8e08_check_plain_break(_self_, _165742_b);
	if ((_165817_brk == nullptr)) {
		return nullptr;
	}
	_165817_brk.get()._field_it=0LLU;
	_165817_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1a9cdb879_ScopeLabel> _166817_label = _1a9c8a11e_find_label_parent(_165742_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);
	if ((_166817_label == nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	}
	_166817_label.get()._field_used=true;
	if ((_166817_label.get()._field_pos + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>(_166817_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	}
	jule::I32 _168113_i = (_166817_label.get()._field_pos + 1LL);
	if (_168113_i >= static_cast<jule::I32>(static_cast<jule::I32>(_166817_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _168521_st = _166817_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168113_i];
		{
			auto &_match_expr{ _168521_st };
			
			if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
				_case_begin_1abd6676a:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_168521_st.operator jule::Ptr<_1a9c89959_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a9c89d33_RangeIter>>()) {
				_case_begin_1abd68481:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_168521_st.operator jule::Ptr<_1a9c89d33_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a9c89b46_WhileIter>>()) {
				_case_begin_1abd684e7:;
				{
					_165817_brk.get()._field_it=static_cast<jule::U32>(static_cast<jule::U32>(_168521_st.operator jule::Ptr<_1a9c89b46_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a9cdad95_Match>>()) {
				_case_begin_1abd6855d:;
				{
					_165817_brk.get()._field_mtch=static_cast<jule::U32>(static_cast<jule::U32>(_168521_st.operator jule::Ptr<_1a9cdad95_Match>()));
				}
			}
			else {
				_case_begin_1abd68393:;
				{
					_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1abd6833d:;
		}
	}
	if ((_165817_brk.get()._field_it != 0LLU)) {
		if ((!(_1a9ce4068_check_valid_break_label(_self_, _165817_brk.get()._field_it)))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		}
	}
	if ((_165817_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1a9ce4068_check_valid_break_label(_self_, _165817_brk.get()._field_mtch)))) {
			_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _165742_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_165742_b.get()._field_label.get()._field_kind)}));
		}
	}
	return _165817_brk;
}



inline jule::Ptr<_1a9cb7bc9_BreakSt> _1a9ce8e08_check_plain_break(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8de29_BreakSt> _171537_b) {
	if (_1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _172117_scope = _self_;
	_julec_label_iter:;
	{
		
		if ((((_172117_scope.get()._field_it == 0LLU) && (_172117_scope.get()._field_cse == 0LLU)) && (_172117_scope.get()._field_parent != nullptr)) && (_172117_scope.get()._field_owner == nullptr)) {
			_case_begin_1abd70059:;
			{
				_172117_scope=_172117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172117_scope.get()._field_it != 0LLU)) {
			_case_begin_1abd700d1:;
			{
				return jule::new_ptr<_1a9cb7bc9_BreakSt>(_1a9cb7bc9_BreakSt(_172117_scope.get()._field_it,jule::U32()));
			}
		}
		else if ((_172117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1abd70158:;
			{
				return jule::new_ptr<_1a9cb7bc9_BreakSt>(_1a9cb7bc9_BreakSt(jule::U32(),static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(((_1a9cdb2b3_Case*)(_172117_scope.get()._field_cse))->_field_owner)))))));
			}
		}
		_match_end_1abd6ee7c:;
	}
	_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1a9ce917d_check_break(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8de29_BreakSt> _173731_b) {
	if ((_173731_b.get()._field_label != nullptr)) {
		jule::Ptr<_1a9cb7bc9_BreakSt> _173921_brk = _1a9ce8aea_check_break_with_label(_self_, _173731_b);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_173921_brk));
		return;
	}
	jule::Ptr<_1a9cb7bc9_BreakSt> _174417_brk = _1a9ce8e08_check_plain_break(_self_, _173731_b);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174417_brk));
}



inline void _1a9ce9403_check_ret(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8d676_RetSt> _174833_r) {
	if (_1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _174833_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9cdb68c_RetSt> _175317_rt = jule::new_ptr<_1a9cdb68c_RetSt>(_1a9cdb68c_RetSt(_1a9cddd98_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_1a9d2553e_Var>>(),jule::Any()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175317_rt));
	jule::Ptr<_1a9d69dbe_RetTypeChecker> _175817_rtc = jule::new_ptr<_1a9d69dbe_RetTypeChecker>(_1a9d69dbe_RetTypeChecker(_self_,_175317_rt.get()._field_func,jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1d7b09a43_Expr>>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>(),_174833_r.get()._field_token,jule::Any()));
	jule::Bool _176313_ok = _1a9d6acb0_check(_175817_rtc.ptr(), _174833_r.get()._field_expr);
	if ((!(_176313_ok))) {
		return;
	}
	if ((_174833_r.get()._field_expr == nullptr) && (_175817_rtc.get()._field_vars.len() == 0LL)) {
		return;
	}
	_175317_rt.get()._field_vars=_175817_rtc.get()._field_vars;
	if ((_174833_r.get()._field_expr != nullptr)) {
		_175317_rt.get()._field_expr=_175817_rtc.get()._field_model;
	}
}



inline void _1a9ce9678_check_use_expr(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b09c30_UseExpr> _177934_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (_1a9cddb34_is_deferred(_self_)) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((_self_.get()._field_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_tree.get()._field_stmts.len()))) {
		_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _177934_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1a9ce98ed_check_node(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Any& _179535_node) {
	{
		auto &_match_expr{ _179535_node };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8cdc3_ScopeTree>>()) {
			_case_begin_1abd80553:;
			{
				_1a9ce1450_check_anon_scope(_self_, _179535_node.operator jule::Ptr<_1d7b8cdc3_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d489_VarDecl>>()) {
			_case_begin_1abd80751:;
			{
				_1a9ce0163_check_var_decl(_self_, _179535_node.operator jule::Ptr<_1d7b8d489_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8e8b9_TypeAliasDecl>>()) {
			_case_begin_1abd80113:;
			{
				_1a9ce03d8_check_type_alias_decl(_self_, _179535_node.operator jule::Ptr<_1d7b8e8b9_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b09a43_Expr>>()) {
			_case_begin_1abd806a7:;
			{
				_1a9ce19e4_check_expr(_self_, _179535_node.operator jule::Ptr<_1d7b09a43_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b89e03_CoExpr>>()) {
			_case_begin_1abd808d8:;
			{
				_1a9ce1c69_check_co_expr(_self_, _179535_node.operator jule::Ptr<_1d7b89e03_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8e6cc_Conditional>>()) {
			_case_begin_1abd80a70:;
			{
				_1a9ce260a_check_conditional(_self_, _179535_node.operator jule::Ptr<_1d7b8e6cc_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d863_Iter>>()) {
			_case_begin_1abd80ad6:;
			{
				_1a9ce3908_check_iter(_self_, _179535_node.operator jule::Ptr<_1d7b8d863_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8e116_ContSt>>()) {
			_case_begin_1abd80b4c:;
			{
				_1a9ce45da_check_cont(_self_, _179535_node.operator jule::Ptr<_1d7b8e116_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8c433_LabelSt>>()) {
			_case_begin_1abd80bb3:;
			{
				_1a9ce4860_check_label(_self_, _179535_node.operator jule::Ptr<_1d7b8c433_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8c620_GotoSt>>()) {
			_case_begin_1abd80c29:;
			{
				_1a9ce4ad5_push_goto(_self_, _179535_node.operator jule::Ptr<_1d7b8c620_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8cbd6_AssignSt>>()) {
			_case_begin_1abd80c90:;
			{
				_1a9ce6631_check_assign_st(_self_, _179535_node.operator jule::Ptr<_1d7b8cbd6_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8ec93_MatchCase>>()) {
			_case_begin_1abd80d06:;
			{
				_1a9ce8567_check_match(_self_, _179535_node.operator jule::Ptr<_1d7b8ec93_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8c80c_FallSt>>()) {
			_case_begin_1abd80d6c:;
			{
				_1a9ce87dc_check_fall(_self_, _179535_node.operator jule::Ptr<_1d7b8c80c_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8de29_BreakSt>>()) {
			_case_begin_1abd80dd3:;
			{
				_1a9ce917d_check_break(_self_, _179535_node.operator jule::Ptr<_1d7b8de29_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d676_RetSt>>()) {
			_case_begin_1abd80e49:;
			{
				_1a9ce9403_check_ret(_self_, _179535_node.operator jule::Ptr<_1d7b8d676_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b09c30_UseExpr>>()) {
			_case_begin_1abd80eb0:;
			{
				_1a9ce9678_check_use_expr(_self_, _179535_node.operator jule::Ptr<_1d7b09c30_UseExpr>());
			}
		}
		else {
			_case_begin_1abd802bc:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1abd8019b:;
	}
}



inline void _1a9ce9ac9_check_result(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	_1d7b5c315_Node _183517_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _183517_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b09c30_UseExpr>>()) {
			_case_begin_1abd89eca:;
			{
				jule::Ptr<_1d7b09c30_UseExpr> _183821_ue = _183517_stmt._field_data.operator jule::Ptr<_1d7b09c30_UseExpr>();
				jule::Ptr<_1a9d71c2d_Data> _183921_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _183821_ue.get()._field_expr);
				if ((_183921_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_183921_d));
				jule::Ptr<_1a9d69dbe_RetTypeChecker> _184421_rtc = jule::new_ptr<_1a9d69dbe_RetTypeChecker>(_1a9d69dbe_RetTypeChecker(_self_,jule::Ptr<_1a8d98063_FnIns>(),_1a8d98a7a_types(_self_.get()._field_result.ptr()),jule::Slice<jule::Ptr<_1d7b09a43_Expr>>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>(),_183821_ue.get()._field_expr.get()._field_token,jule::Any()));
				_1a9d6acb0_check(_184421_rtc.ptr(), _183821_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b09a43_Expr>>()) {
			_case_begin_1abd8b5e7:;
			{
				jule::Ptr<_1d7b09a43_Expr> _185121_expr = _183517_stmt._field_data.operator jule::Ptr<_1d7b09a43_Expr>();
				jule::Ptr<_1a9d71c2d_Data> _185221_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_.get()._field_s, jule::Trait<_1a9db4325_Lookup>(_self_, 0)), _185121_expr);
				if ((_185221_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_185221_d));
				{
					auto &_match_expr{ _185221_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
						_case_begin_1abd90ad5:;
						{
							jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel> _185925_m = _185221_d.get()._field_model.operator jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>();
							_1a9ce176e_process_error_call(_self_, _185925_m,_185121_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1abd90e9d:;
						{
							return;
						}
					}
					_match_end_1abd90e48:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8c620_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1d7b8de29_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1d7b8e116_ContSt>>() || _match_expr.type_is<jule::Ptr<_1d7b8d676_RetSt>>()) {
			_case_begin_1abd8b65d:;
			{
				_1a9ce98ed_check_node(_self_, _183517_stmt._field_data);
			}
		}
		else {
			_case_begin_1abd8abbd:;
			{
				_1a9ce98ed_check_node(_self_, _183517_stmt._field_data);
				return;
			}
		}
		_match_end_1abd8ab46:;
	}
	_self_.get()._field_result=nullptr;
}



inline void _1a9ce9ca5_check_tree(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_tree.get()._field_stmts.len())); (_self_.get()._field_i)++) {
		{
			_1d7b5c315_Node _188121_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];
			_1a9ce98ed_check_node(_self_, _188121_stmt._field_data);
			if (_1a9cdd8c0_stopped(_self_.ptr())) {
				return;
			}
		}
	_iter_next_1abd936cb:;
	}
	_iter_end_1abd936cb:;
	if ((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL)) {
		_1a9ce9ac9_check_result(_self_);
	}
}



inline void _1a9cea0c4_check_goto(_1a9cdbc53_ScopeChecker* _self_,jule::Ptr<_1a9cdba66_ScopeGoto>& _189234_gt,jule::Ptr<_1a9cdb879_ScopeLabel>& _189255_label) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _189317_gtsc = _189234_gt.get()._field_scope;
	while ((_189317_gtsc.get()._field_child_index - 1LL) > _189255_label.get()._field_scope.get()._field_child_index) {
		{
			_189317_gtsc=_189317_gtsc.get()._field_parent;
		}
	_iter_next_1abd96eb5:;
	}
	_iter_end_1abd96eb5:;
	jule::I32 _189817_n = 0LL;
	if (_189317_gtsc.get()._field_scope == _189255_label.get()._field_scope.get()._field_scope) {
		if (_189234_gt.get()._field_pos > _189255_label.get()._field_pos) {
			return;
		}
		_189817_n=_189234_gt.get()._field_pos;
	}
	jule::I32 _191117_i = (_189255_label.get()._field_pos - 1LL);
	if ((_189817_n == 0LL)) {
		{
			auto &expr = _189255_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1abd99704:;
			if (it != expr.end()) {
				jule::I32 _1abd99913_j = it - expr.begin();
				jule::Any _1abd99abc_stmt = *it;
				{
					if (_1a9ca5d71_stmt_is_goto_scope(_1abd99abc_stmt,_189317_gtsc.get()._field_scope)) {
						_189817_n=_1abd99913_j;
						goto _iter_end_1abd99704;
					}
				}
				_iter_next_1abd99704:;
				++it;
				_1abd99913_j++;
				goto _iter_begin_1abd99704;
			}
			_iter_end_1abd99704:;
		}
	}
	for (; _191117_i >= _189817_n; (_191117_i)--) {
		{
			jule::Any _192421_stmt = _189255_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191117_i];
			if (_1a9cb5666_st_is_def(_192421_stmt)) {
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _189234_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189234_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;
			}
		}
	_iter_next_1abd99209:;
	}
	_iter_end_1abd99209:;
}



inline void _1a9cea2a0_check_gotos(_1a9cdbc53_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1abd9c77e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdba66_ScopeGoto> _1abd9c88e_gt = *it;
			{
				jule::Ptr<_1a9cdb879_ScopeLabel> _193421_label = _1a9cdea36_find_label_all(&(*_self_), _1abd9c88e_gt.get()._field_gt.get()._field_label.get()._field_kind);
				if ((_193421_label == nullptr)) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1abd9c88e_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1abd9c88e_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1abd9c77e;
				}
				_193421_label.get()._field_used=true;
				_1a9cea0c4_check_goto(&(*_self_), _1abd9c88e_gt,_193421_label);
			}
			_iter_next_1abd9c77e:;
			++it;
			goto _iter_begin_1abd9c77e;
		}
		_iter_end_1abd9c77e:;
	}
}



inline void _1a9cea47b_check_labels(_1a9cdbc53_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1abda0430:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdb879_ScopeLabel> _1abda0540_l = *it;
			{
				if ((!(_1abda0540_l.get()._field_used))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1abda0540_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1abda0540_l.get()._field_label.get()._field_ident)}));
				}
			}
			_iter_next_1abda0430:;
			++it;
			goto _iter_begin_1abda0430;
		}
		_iter_end_1abda0430:;
	}
}



inline void _1a9cea657_check_vars(_1a9cdbc53_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1abda69a8:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1abda6cb6_v = *it;
			{
				if ((((!(_1abda6cb6_v.get()._field_used)) && (!(_1d7b79ac4_is_ignore_ident(_1abda6cb6_v.get()._field_ident)))) && (!(_1d7b79d6b_is_anon_ident(_1abda6cb6_v.get()._field_ident)))) && (_1abda6cb6_v.get()._field_ident != jule::Str("self", 4))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1abda6cb6_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1abda6cb6_v.get()._field_ident)}));
				}
			}
			_iter_next_1abda69a8:;
			++it;
			goto _iter_begin_1abda69a8;
		}
		_iter_end_1abda69a8:;
	}
}



inline void _1a9cea833_check_aliases(_1a9cdbc53_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1abda9280:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9a22e_TypeAlias> _1abda935c_a = *it;
			{
				if (((!(_1abda935c_a.get()._field_used)) && (!(_1d7b79ac4_is_ignore_ident(_1abda935c_a.get()._field_ident)))) && (!(_1d7b79d6b_is_anon_ident(_1abda935c_a.get()._field_ident)))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1abda935c_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1abda935c_a.get()._field_ident)}));
				}
			}
			_iter_next_1abda9280:;
			++it;
			goto _iter_begin_1abda9280;
		}
		_iter_end_1abda9280:;
	}
}



inline void _1a9ceab52_check(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_,jule::Ptr<_1d7b8cdc3_ScopeTree>& _197030_tree,jule::Ptr<_1a9cc76bc_Scope>& _197053_s) {
	_197053_s.get()._field_deferred=_197030_tree.get()._field_deferred;
	_197053_s.get()._field_unsafety=_197030_tree.get()._field_unsafety;
	jule::I32 _197413_errors = _self_.get()._field_s.get()._field_errors.len();
	_self_.get()._field_tree=_197030_tree;
	_self_.get()._field_scope=_197053_s;
	_1a9ce9ca5_check_tree(_self_);
	if (_197413_errors == static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_s.get()._field_errors.len()))) {
		_1a9cea657_check_vars(_self_.ptr());
		_1a9cea833_check_aliases(_self_.ptr());
		if (_1a9cdd480_is_root(_self_.ptr())) {
			_1a9cea2a0_check_gotos(_self_.ptr());
			_1a9cea47b_check_labels(_self_.ptr());
		}
	}
}



inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9ceadb6_new_child_checker(jule::Ptr<_1a9cdbc53_ScopeChecker> _self_) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _199417_base = _1a9c60d3c_new_scope_checker_base(_self_.get()._field_s,nullptr);
	_199417_base.get()._field_parent=_self_;
	_199417_base.get()._field_labels=_self_.get()._field_labels;
	_199417_base.get()._field_gotos=_self_.get()._field_gotos;
	_199417_base.get()._field_child_index=static_cast<jule::I32>((_self_.get()._field_child_index + 1LL));
	return _199417_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9cdbc53_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a9cebe61_check_cdef(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
			_case_begin_1abdb1265:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a8d94db7_Fn>().get()._field_cpp_linked) {
					goto _match_end_1abdb12ed;
				}
				goto _case_begin_1abdb14eb;
			}
		}
		else {
			_case_begin_1abdb14eb:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdb12ed:;
	}
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a9cec1d6_check_typedef(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1abdb4be7:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_cpp_linked) {
					goto _match_end_1abdb4565;
				}
				goto _case_begin_1abdb4763;
			}
		}
		else {
			_case_begin_1abdb4763:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdb4565:;
	}
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a9cec45b_check_derive(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1abdb7502:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1abdb758a;
				}
				goto _case_begin_1abdb7788;
			}
		}
		else {
			_case_begin_1abdb7788:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abdb758a:;
	}
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1abdbb9ac:;
		}
		else {
			_case_begin_1abdb9e3e:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1abdbb45c:;
	}
}



inline void _1a9cec6d1_check_namespace(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1abdbd0eb:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_cpp_linked))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
			_case_begin_1abdbd4b4:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a8d94db7_Fn>().get()._field_cpp_linked))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1abdbd52a:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a9d2553e_Var>().get()._field_cpp_linked))) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1abdbd382:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdbd184:;
	}
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d7b77374_Token> _9913_arg = _7439_d.get()._field_args[0LL];
	if (_9913_arg.get()._field_id != static_cast<jule::U32>(6LLU)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_9913_arg.get()._field_kind[0LL] != '\"') {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1abdc7985:;
			{
				if ((_1a9d95bec_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d7a4352b_Directive> _11625_typedef = jule::new_ptr<_1d7a4352b_Directive>(_1d7a4352b_Directive(_7439_d.get()._field_tag,jule::Slice<jule::Ptr<_1d7b77374_Token>>()));
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>({_11625_typedef}));
				}
			}
		}
		_match_end_1abdc7930:;
	}
}



inline void _1a9cec956_check_deprecated(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1abdbb58e:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_cpp_linked) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
			_case_begin_1abdca1c4:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a8d94db7_Fn>().get()._field_cpp_linked) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1abdca23a:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a9d2553e_Var>().get()._field_cpp_linked) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1abdca0e7:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdca092:;
	}
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;
	}
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1d7b77374_Token> _15013_arg = _12540_d.get()._field_args[0LL];
	if (_15013_arg.get()._field_id != static_cast<jule::U32>(6LLU)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15013_arg.get()._field_kind[0LL] != '\"') {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1a9cecbcb_check_test(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
			_case_begin_1abdd495e:;
			{
				jule::Ptr<_1a8d94db7_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1a8d94db7_Fn>();
				if (((!(_16717_f.get()._field_cpp_linked)) && (!(_1a8d95a55_is_init(_16717_f.ptr())))) && (!(_1a8d957e1_is_entry_point(_16717_f.ptr())))) {
					goto _match_end_1abdd42cc;
				}
				if (_1a8d9557c_is_method(_16717_f.ptr())) {
					_1a9d0c955_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1abdd42cc;
				}
				goto _case_begin_1abdd44ca;
			}
		}
		else {
			_case_begin_1abdd44ca:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdd42cc:;
	}
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1a9d0c955_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1a9cece51_check_directive(_1a9ceba21_DirectiveChecker* _self_,jule::Ptr<_1d7a4352b_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1abdd9502:;
			{
				_1a9cebe61_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1abdd8dc5:;
			{
				_1a9cec1d6_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1abdd8e3b:;
			{
				_1a9cec45b_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1abdd8ea2:;
			{
				_1a9cec6d1_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1abdd9018:;
			{
				_1a9cec956_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1abdd9db5:;
			{
				_1a9cecbcb_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1abdd9e2b:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1abdd8a1d:;
			{
				_1a9d0c955_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1abdd8d70:;
	}
}



inline void _1a9ced12c_check(_1a9ceba21_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1abdddced:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1abddde0d_d = *it;
			{
				_1a9cece51_check_directive(&(*_self_), _1abddde0d_d);
			}
			_iter_next_1abdddced:;
			++it;
			goto _iter_begin_1abdddced;
		}
		_iter_end_1abdddced:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a9ceba21_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0285c_find_package(_1a9d02351_ImportInfo* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d02b6a_select_package(_1a9d02351_ImportInfo* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d03022_find_var(_1a9d02351_ImportInfo* _self_,jule::Str _16931_ident,jule::Bool _16943_cpp_linked) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _16931_ident)))) {
		return nullptr;
	}
	return _1a9d00371_find_var_in_package((*_self_)._field_package.get()._field_files,_16931_ident,false);
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d033c9_find_type_alias(_1a9d02351_ImportInfo* _self_,jule::Str _18238_ident,jule::Bool _18250_cpp_linked) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _18238_ident)))) {
		return nullptr;
	}
	return _1a9d007e4_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_18238_ident,false);
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9d03781_find_struct(_1a9d02351_ImportInfo* _self_,jule::Str _19534_ident,jule::Bool _19546_cpp_linked) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _19534_ident)))) {
		return nullptr;
	}
	return _1a9d00bbd_find_struct_in_package((*_self_)._field_package.get()._field_files,_19534_ident,false);
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9d03b38_find_fn(_1a9d02351_ImportInfo* _self_,jule::Str _20830_ident,jule::Bool _20842_cpp_linked) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _20830_ident)))) {
		return nullptr;
	}
	return _1a9d010ec_find_fn_in_package((*_self_)._field_package.get()._field_files,_20830_ident,false);
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d03e46_find_trait(_1a9d02351_ImportInfo* _self_,jule::Str _22033_ident) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _22033_ident)))) {
		return nullptr;
	}
	return _1a9d0143d_find_trait_in_package((*_self_)._field_package.get()._field_files,_22033_ident);
}



inline jule::Ptr<_1a943b309_Enum> _1a9d04254_find_enum(_1a9d02351_ImportInfo* _self_,jule::Str _23232_ident) {
	if ((!(_1a9d04672_is_lookupable(&(*_self_), _23232_ident)))) {
		return nullptr;
	}
	return _1a9d0177e_find_enum_in_package((*_self_)._field_package.get()._field_files,_23232_ident);
}



inline jule::Bool _1a9d04672_is_lookupable(_1a9d02351_ImportInfo* _self_,jule::Str _24228_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	}
	if ((!((*_self_)._field_import_all))) {
		if (((*_self_)._field_alias.len() != 0LL) || _1a9d04980_exist_ident(&(*_self_), jule::Str("self", 4))) {
			return true;
		}
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1a9d04980_exist_ident(&(*_self_), _24228_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1a9d04980_exist_ident(_1a9d02351_ImportInfo* _self_,jule::Str _26226_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1abdec03c:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> &_1abdec23a_sident = *it;
			{
				if (_1abdec23a_sident.get()._field_kind == _26226_ident) {
					return true;
				}
			}
			_iter_next_1abdec03c:;
			++it;
			goto _iter_begin_1abdec03c;
		}
		_iter_end_1abdec03c:;
	}
	return false;
}



inline jule::Bool _1a9d04c38_is_accessible_via_selection(_1a9d02351_ImportInfo* _self_) {
	return ((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1a9d04980_exist_ident(&(*_self_), jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d02351_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d054ca_find_package(_1a9d05013_Package* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d057d8_select_package(_1a9d05013_Package* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d05b90_find_var(_1a9d05013_Package* _self_,jule::Str _29231_ident,jule::Bool _29243_cpp_linked) {
	return _1a9d00371_find_var_in_package((*_self_)._field_files,_29231_ident,_29243_cpp_linked);
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d06047_find_type_alias(_1a9d05013_Package* _self_,jule::Str _29838_ident,jule::Bool _29850_cpp_linked) {
	return _1a9d007e4_find_type_alias_in_package((*_self_)._field_files,_29838_ident,_29850_cpp_linked);
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9d063ee_find_struct(_1a9d05013_Package* _self_,jule::Str _30434_ident,jule::Bool _30446_cpp_linked) {
	return _1a9d00bbd_find_struct_in_package((*_self_)._field_files,_30434_ident,_30446_cpp_linked);
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9d067a6_find_fn(_1a9d05013_Package* _self_,jule::Str _31030_ident,jule::Bool _31042_cpp_linked) {
	return _1a9d010ec_find_fn_in_package((*_self_)._field_files,_31030_ident,_31042_cpp_linked);
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d06ab4_find_trait(_1a9d05013_Package* _self_,jule::Str _31633_ident) {
	return _1a9d0143d_find_trait_in_package((*_self_)._field_files,_31633_ident);
}



inline jule::Ptr<_1a943b309_Enum> _1a9d06dc2_find_enum(_1a9d05013_Package* _self_,jule::Str _32232_ident) {
	return _1a9d0177e_find_enum_in_package((*_self_)._field_files,_32232_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d05013_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0a546_find_package(_1a9d0a03a_Sema* _self_,jule::Str _22435_ident) {
	return _1a9d6c0ad_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d0a854_select_package(_1a9d0a03a_Sema* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _23437_selector) {
	return _1a9d6c3bb_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d0ac0b_find_var(_1a9d0a03a_Sema* _self_,jule::Str _24431_ident,jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1a9d2553e_Var> _24617_v = _1a9d00371_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);
	if ((_24617_v != nullptr)) {
		return _24617_v;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe08b81:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe08796_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe08796_imp,_24431_ident)))) {
					goto _iter_next_1abe08b81;
				}
				_24617_v=_1a9d03022_find_var(_1abe08796_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if ((_24617_v != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token)) {
					return _24617_v;
				}
			}
			_iter_next_1abe08b81:;
			++it;
			goto _iter_begin_1abe08b81;
		}
		_iter_end_1abe08b81:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d0b0b3_find_type_alias(_1a9d0a03a_Sema* _self_,jule::Str _27138_ident,jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1a9d9a22e_TypeAlias> _27317_ta = _1a9d007e4_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe0c080:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe0bb95_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe0bb95_imp,_27138_ident)))) {
					goto _iter_next_1abe0c080;
				}
				_27317_ta=_1a9d033c9_find_type_alias(_1abe0bb95_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if ((_27317_ta != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token)) {
					return _27317_ta;
				}
			}
			_iter_next_1abe0c080:;
			++it;
			goto _iter_begin_1abe0c080;
		}
		_iter_end_1abe0c080:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9d0b46a_find_struct(_1a9d0a03a_Sema* _self_,jule::Str _29834_ident,jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1a8d82b41_Struct> _30017_s = _1a9d00bbd_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);
	if ((_30017_s != nullptr)) {
		return _30017_s;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe0ecec:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe0e912_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe0e912_imp,_29834_ident)))) {
					goto _iter_next_1abe0ecec;
				}
				_30017_s=_1a9d03781_find_struct(_1abe0e912_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if ((_30017_s != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token)) {
					return _30017_s;
				}
			}
			_iter_next_1abe0ecec:;
			++it;
			goto _iter_begin_1abe0ecec;
		}
		_iter_end_1abe0ecec:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9d0b822_find_fn(_1a9d0a03a_Sema* _self_,jule::Str _32530_ident,jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1a8d94db7_Fn> _32717_f = _1a9d010ec_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);
	if ((_32717_f != nullptr)) {
		return _32717_f;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe12b02:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe12717_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe12717_imp,_32530_ident)))) {
					goto _iter_next_1abe12b02;
				}
				_32717_f=_1a9d03b38_find_fn(_1abe12717_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if ((_32717_f != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token)) {
					return _32717_f;
				}
			}
			_iter_next_1abe12b02:;
			++it;
			goto _iter_begin_1abe12b02;
		}
		_iter_end_1abe12b02:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d0bb30_find_trait(_1a9d0a03a_Sema* _self_,jule::Str _35233_ident) {
	jule::Ptr<_1a8ea7a57_Trait> _35417_t = _1a9d0143d_find_trait_in_package((*_self_)._field_files,_35233_ident);
	if ((_35417_t != nullptr)) {
		return _35417_t;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe155b6:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe151cb_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe151cb_imp,_35233_ident)))) {
					goto _iter_next_1abe155b6;
				}
				_35417_t=_1a9d03e46_find_trait(_1abe151cb_imp.ptr(), _35233_ident);
				if ((_35417_t != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token)) {
					return _35417_t;
				}
			}
			_iter_next_1abe155b6:;
			++it;
			goto _iter_begin_1abe155b6;
		}
		_iter_end_1abe155b6:;
	}
	return nullptr;
}



inline jule::Ptr<_1a943b309_Enum> _1a9d0be3d_find_enum(_1a9d0a03a_Sema* _self_,jule::Str _37932_ident) {
	jule::Ptr<_1a943b309_Enum> _38117_e = _1a9d0177e_find_enum_in_package((*_self_)._field_files,_37932_ident);
	if ((_38117_e != nullptr)) {
		return _38117_e;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe17ee2:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe17b07_imp = *it;
			{
				if ((!(_1a9d089d9_imp_is_lookupable(_1abe17b07_imp,_37932_ident)))) {
					goto _iter_next_1abe17ee2;
				}
				_38117_e=_1a9d04254_find_enum(_1abe17b07_imp.ptr(), _37932_ident);
				if ((_38117_e != nullptr) && _1a9d0d12b_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token)) {
					return _38117_e;
				}
			}
			_iter_next_1abe17ee2:;
			++it;
			goto _iter_begin_1abe17ee2;
		}
		_iter_end_1abe17ee2:;
	}
	return nullptr;
}



inline jule::Bool _1a9d0c317_is_flag(_1a9d0a03a_Sema* _self_,jule::I32 _40322_flags) {
	return ((*_self_)._field_flags & _40322_flags) == _40322_flags;
}



inline void _1a9d0c58c_set_current_file(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a9d6baa2_SymbolTable> _40539_f) {
	(*_self_)._field_file=_40539_f;
}



inline void _1a9d0c955_push_err(_1a9d0a03a_Sema* _self_,jule::Ptr<_1d7b77374_Token> _40727_token,jule::Str _40742_fmt,jule::Slice<jule::Any> _40755_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1a9d08698_compiler_err(_40727_token,true,_40742_fmt,_40755_args));
}



inline void _1a9d0cc74_push_suggestion(_1a9d0a03a_Sema* _self_,jule::Str _41234_fmt,jule::Slice<jule::Any> _41247_args) {
	{
		_1a9d09aa6_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_41234_fmt,_41247_args);
	}
}



inline jule::Bool _1a9d0d12b_is_accessible_define(_1a9d0a03a_Sema* _self_,jule::Bool _41735_public,jule::Ptr<_1d7b77374_Token> _41749_token) {
	return (_41735_public || (_41749_token.get()._field_file == nullptr)) || (_1d7b7d15a_dir((*_self_)._field_file.get()._field_file.ptr()) == _1d7b7d15a_dir(_41749_token.get()._field_file.ptr()));
}



inline jule::Bool _1a9d0d57c_is_duplicated_ident(_1a9d0a03a_Sema* _self_,jule::U32 _42434_itself,jule::Str _42451_ident,jule::Bool _42463_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1abe20945:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> &_1abe209de_f = *it;
			{
				if (_1a9d6ec81_is_duplicated_ident(_1abe209de_f.ptr(), _42434_itself,_42451_ident,_42463_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1abe209de_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1abe21281:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d02351_ImportInfo> &_1abe22084_imp = *it;
						{
							{
								auto &expr = _1abe22084_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1abe2255c:;
								if (it != expr.end()) {
									jule::Ptr<_1d7b77374_Token> &_1abe227d2_selected = *it;
									{
										if (_1abe227d2_selected.get()._field_kind == _42451_ident) {
											return true;
										}
									}
									_iter_next_1abe2255c:;
									++it;
									goto _iter_begin_1abe2255c;
								}
								_iter_end_1abe2255c:;
							}
						}
						_iter_next_1abe21281:;
						++it;
						goto _iter_begin_1abe21281;
					}
					_iter_end_1abe21281:;
				}
			}
			_iter_next_1abe20945:;
			++it;
			goto _iter_begin_1abe20945;
		}
		_iter_end_1abe20945:;
	}
	return false;
}



inline void _1a9d0d89b_check_directives(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _44141_d,jule::Any _44167_o) {
	_1a9ceba21_DirectiveChecker _44217_dc = _1a9ceba21_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_1d7a4352b_Directive>>>)((&(_44141_d)))),_44167_o);
	_1a9ced12c_check(&_44217_dc);
}



inline jule::Bool _1a9d0dcec_check_generic_quantity(_1a9d0a03a_Sema* _self_,jule::I32 _45041_required,jule::I32 _45056_given,jule::Ptr<_1d7b77374_Token> _45068_token) {
	jule::Bool _45085_ok = jule::Bool();
	{
		
		if ((_45041_required == 0LL) && (_45056_given > 0LL)) {
			_case_begin_1abe25de0:;
			{
				_1a9d0c955_push_err(&(*_self_), _45068_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if ((_45041_required > 0LL) && (_45056_given == 0LL)) {
			_case_begin_1abe25e9a:;
			{
				_1a9d0c955_push_err(&(*_self_), _45068_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (_45041_required < _45056_given) {
			_case_begin_1abe26011:;
			{
				_1a9d0c955_push_err(&(*_self_), _45068_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else if (_45041_required > _45056_given) {
			_case_begin_1abe25bc0:;
			{
				_1a9d0c955_push_err(&(*_self_), _45068_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_45085_ok = false;
				return _45085_ok;
			}
		}
		else {
			_case_begin_1abe2575d:;
			{
				_45085_ok = true;
				return _45085_ok;
			}
		}
		_match_end_1abe256b4:;
	}
}



inline jule::Bool _1a9d0e1e8_is_duplicated_import_selection(_1a9d0a03a_Sema* _self_,jule::U32 _46945_itself,jule::Str _46962_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe29c18:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> &_1abe29d06_imp = *it;
			{
				if (static_cast<jule::U32>(_1abe29d06_imp) == _46945_itself) {
					goto _iter_end_1abe29c18;
				}
				if (_1a9d04980_exist_ident(_1abe29d06_imp.ptr(), _46962_ident)) {
					return true;
				}
			}
			_iter_next_1abe29c18:;
			++it;
			goto _iter_begin_1abe29c18;
		}
		_iter_end_1abe29c18:;
	}
	return false;
}



inline jule::Any _1a9d0e58e_get_import_def(_1a9d0a03a_Sema* _self_,jule::Str _48429_ident,jule::Ptr<_1a9d02351_ImportInfo>& _48446_imp) {
	if (_1a9e19446_find_package_builtin_def(_48446_imp.get()._field_link_path,_48429_ident) != jule::Any(jule::Any(nullptr))) {
		return jule::Any(true);
	}
	{
		auto &expr = _48446_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe2c369:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1abe2c3ad_f = *it;
			{
				
				jule::Any _49121_def = _1a9d6e830_def_by_ident(_1abe2c3ad_f.ptr(), _48429_ident,false);
				if (_49121_def != jule::Any(jule::Any(nullptr))) {
					return _49121_def;
				}
			}
			_iter_next_1abe2c369:;
			++it;
			goto _iter_begin_1abe2c369;
		}
		_iter_end_1abe2c369:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a9d0e8e1_check_import_selections(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a9d02351_ImportInfo>& _50047_imp) {
	jule::Bool _50067_ok = jule::Bool();
	_50067_ok=true;
	{
		auto &expr = _50047_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1abe2e206:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> _1abe2e46a_ident = *it;
			{
				if ((_1abe2e46a_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1abe2e206;
				}
				if (_1a9d0e1e8_is_duplicated_import_selection(&(*_self_), static_cast<jule::U32>(static_cast<jule::U32>(_50047_imp)),_1abe2e46a_ident.get()._field_kind)) {
					_1a9d0c955_push_err(&(*_self_), _1abe2e46a_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abe2e46a_ident.get()._field_kind)}));
					_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_50067_ok=false;
					goto _iter_next_1abe2e206;
				}
				jule::Any _51421_def = _1a9d0e58e_get_import_def(&(*_self_), _1abe2e46a_ident.get()._field_kind,_50047_imp);
				{
					auto &_match_expr{ _51421_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1abe321e8:;
						{
							goto _iter_next_1abe2e206;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
						_case_begin_1abe3225e:;
						{
							jule::Ptr<_1a9d2553e_Var> _52025_v = _51421_def.operator jule::Ptr<_1a9d2553e_Var>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _52025_v.get()._field_public,_52025_v.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
						_case_begin_1abe32e85:;
						{
							jule::Ptr<_1a9d9a22e_TypeAlias> _52525_ta = _51421_def.operator jule::Ptr<_1a9d9a22e_TypeAlias>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _52525_ta.get()._field_public,_52525_ta.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
						_case_begin_1abe32eeb:;
						{
							jule::Ptr<_1a8d82b41_Struct> _53025_strct = _51421_def.operator jule::Ptr<_1a8d82b41_Struct>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _53025_strct.get()._field_public,_53025_strct.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8ea7a57_Trait>>()) {
						_case_begin_1abe33062:;
						{
							jule::Ptr<_1a8ea7a57_Trait> _53525_t = _51421_def.operator jule::Ptr<_1a8ea7a57_Trait>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _53525_t.get()._field_public,_53525_t.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a943b309_Enum>>()) {
						_case_begin_1abe330c8:;
						{
							jule::Ptr<_1a943b309_Enum> _54025_e = _51421_def.operator jule::Ptr<_1a943b309_Enum>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _54025_e.get()._field_public,_54025_e.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
						_case_begin_1abe3313e:;
						{
							jule::Ptr<_1a8d94db7_Fn> _54525_f = _51421_def.operator jule::Ptr<_1a8d94db7_Fn>();
							if (_1a9d0d12b_is_accessible_define(&(*_self_), _54525_f.get()._field_public,_54525_f.get()._field_token)) {
								goto _iter_next_1abe2e206;
							}
						}
					}
					else {
						_case_begin_1abe32061:;
						{
							_1a9d0c955_push_err(&(*_self_), _1abe2e46a_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_1abe2e46a_ident.get()._field_kind)}));
							_50067_ok=false;
							goto _iter_next_1abe2e206;
						}
					}
					_match_end_1abe3200b:;
				}
				_1a9d0c955_push_err(&(*_self_), _1abe2e46a_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_1abe2e46a_ident.get()._field_kind)}));
				_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_50067_ok=false;
			}
			_iter_next_1abe2e206:;
			++it;
			goto _iter_begin_1abe2e206;
		}
		_iter_end_1abe2e206:;
	}
	return _50067_ok;
}



inline jule::Bool _1a9d0ec32_is_use_alias_duplication(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a9d02351_ImportInfo>& _56244_imp) {
	if ((_56244_imp.get()._field_alias.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1abe39d8d:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1abe3a81c_imp2 = *it;
			{
				if (_1abe3a81c_imp2 == _56244_imp) {
					goto _iter_end_1abe39d8d;
				}
				if (_1abe3a81c_imp2.get()._field_alias == _56244_imp.get()._field_alias) {
					return true;
				}
				if ((_1abe3a81c_imp2.get()._field_ident == _1abe3a81c_imp2.get()._field_link_path) && (_1abe3a81c_imp2.get()._field_ident == _56244_imp.get()._field_alias)) {
					return true;
				}
			}
			_iter_next_1abe39d8d:;
			++it;
			goto _iter_begin_1abe39d8d;
		}
		_iter_end_1abe39d8d:;
	}
	return false;
}



inline jule::Bool _1a9d1002e_check_import(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a9d02351_ImportInfo>& _58336_imp) {
	if (_58336_imp.get()._field_cpp_linked || (_58336_imp.get()._field_package.get()._field_files.len() == 0LL)) {
		return true;
	}
	if (_1a9d0ec32_is_use_alias_duplication(&(*_self_), _58336_imp)) {
		_1a9d0c955_push_err(&(*_self_), _58336_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_58336_imp.get()._field_alias)}));
		_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!(_58336_imp.get()._field_duplicate))) {
		jule::Ptr<_1a9d0a03a_Sema> _59421_sema = jule::new_ptr<_1a9d0a03a_Sema>(_1a9d0a03a_Sema(jule::Slice<_1d77ca48e_Log>(),jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>(),jule::Ptr<_1a9d6baa2_SymbolTable>(),(*_self_)._field_flags));
		_1a9d224e7_check(_59421_sema, _58336_imp.get()._field_package.get()._field_files);
		if ((_59421_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_59421_sema.get()._field_errors);
			_59421_sema.get()._field_errors=nullptr;
			return false;
		}
	}
	return _1a9d0e8e1_check_import_selections(&(*_self_), _58336_imp);
}



inline void _1a9d1020a_check_imports(_1a9d0a03a_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1abe4244a:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1abe42659_file = *it;
			{
				_1a9d0c58c_set_current_file(&(*_self_), _1abe42659_file);
				{
					auto &expr = _1abe42659_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1abe432e7:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d02351_ImportInfo> _1abe433e6_imp = *it;
						{
							jule::Bool _61221_ok = _1a9d1002e_check_import(&(*_self_), _1abe433e6_imp);
							if ((!(_61221_ok))) {
								_1a9d0c955_push_err(&(*_self_), _1abe433e6_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1abe433e6_imp.get()._field_link_path)}));
								return;
							}
						}
						_iter_next_1abe432e7:;
						++it;
						goto _iter_begin_1abe432e7;
					}
					_iter_end_1abe432e7:;
				}
			}
			_iter_next_1abe4244a:;
			++it;
			goto _iter_begin_1abe4244a;
		}
		_iter_end_1abe4244a:;
	}
}



inline void _1a9d103d6_impl_file_impls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1abe440b7:;
		if (it != expr.end()) {
			jule::Ptr<_1a922a34b_Impl> _1abe44ddc_imp = *it;
			{
				_1a9d18e4a_impl_impl(_self_, _1abe44ddc_imp);
			}
			_iter_next_1abe440b7:;
			++it;
			goto _iter_begin_1abe440b7;
		}
		_iter_end_1abe440b7:;
	}
}



inline void _1a9d105b2_impl_impls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe46163:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1abe46372_file = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1abe46372_file);
				_1a9d103d6_impl_file_impls(_self_);
			}
			_iter_next_1abe46163:;
			++it;
			goto _iter_begin_1abe46163;
		}
		_iter_end_1abe46163:;
	}
}



inline void _1a9d1078d_check_enums(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abe47461:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1abe47670_file = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1abe47670_file);
				_1a9d16420_check_enum_decls(_self_);
			}
			_iter_next_1abe47461:;
			++it;
			goto _iter_begin_1abe47461;
		}
		_iter_end_1abe47461:;
	}
}



inline jule::Bool _1a9d10bde_check_type_with_refers(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9ed05_TypeSymbol>& _64547_t,jule::Trait<_1a9db4325_Lookup> _64613_l,jule::Ptr<_1a9da98d1_Referencer> _64628_referencer) {
	jule::Bool _64655_ok = jule::Bool();
	if (_1a9da0201_checked(_64547_t.ptr())) {
		_64655_ok = true;
		return _64655_ok;
	}
	_1a9daa55d_TypeChecker _65017_tc = _1a9daa55d_TypeChecker(_self_,_64613_l,_64628_referencer,jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool());
	if ((_64628_referencer != nullptr) && (_64628_referencer.get()._field_refs != nullptr)) {
		_65017_tc._field_owner_alias=_64628_referencer.get()._field_owner.operator jule::Ptr<_1a9d9a22e_TypeAlias>();
	}
	_1a9db1de4_check(&_65017_tc, _64547_t);
	_64655_ok = _1a9da0201_checked(_64547_t.ptr());
	return _64655_ok;
}



inline jule::Bool _1a9d11096_check_type(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9ed05_TypeSymbol>& _66935_t,jule::Trait<_1a9db4325_Lookup> _66955_l) {
	return _1a9d10bde_check_type_with_refers(_self_, _66935_t,_66955_l,nullptr);
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d11492_build_type_with_generics(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1d7a0e75b_TypeDecl>& _67549_t,jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _67613_generics) {
	jule::Ptr<_1a9daa55d_TypeChecker> _67717_tc = jule::new_ptr<_1a9daa55d_TypeChecker>(_1a9daa55d_TypeChecker(_self_,jule::Trait<_1a9db4325_Lookup>(_self_, 3),jule::Ptr<_1a9da98d1_Referencer>(),jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),_67613_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool()));
	return _1a9db1b6e_check_decl(_67717_tc.ptr(), _67549_t);
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d1178e_build_type(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1d7a0e75b_TypeDecl>& _68635_t) {
	return _1a9d11492_build_type_with_generics(_self_, _68635_t,nullptr);
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d11a9c_select_type(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1d7a0e75b_TypeDecl>& _69136_t) {
	jule::Ptr<_1a9daa55d_TypeChecker> _69217_tc = jule::new_ptr<_1a9daa55d_TypeChecker>(_1a9daa55d_TypeChecker(_self_,jule::Trait<_1a9db4325_Lookup>(_self_, 3),jule::Ptr<_1a9da98d1_Referencer>(),jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool()));
	return _1a9db1b6e_check_decl(_69217_tc.ptr(), _69136_t);
}



inline jule::Ptr<_1a9d7379b_Eval> _1a9d11eed_evalpd(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Trait<_1a9db4325_Lookup> _70230_l,jule::Ptr<_1a9d9ae66_TypeKind> _70245_p,jule::Ptr<_1a9d2553e_Var> _70263_owner) {
	jule::Ptr<_1a9d7379b_Eval> _70317_e = jule::new_ptr<_1a9d7379b_Eval>(_1a9d7379b_Eval(_self_,_70230_l,jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_70263_owner,jule::Ptr<_1a8d84e62_FieldIns>(),jule::Bool()));
	{
		auto &_match_expr{ _70230_l };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1abe540b6:;
			{
				_70317_e.get()._field_unsafety=_1a9cdd21b_is_unsafe(_70230_l.operator jule::Ptr<_1a9cdbc53_ScopeChecker>());
			}
		}
		_match_end_1abe54061:;
	}
	_70317_e.get()._field_prefix=_70245_p;
	return _70317_e;
}



inline jule::Ptr<_1a9d7379b_Eval> _1a9d123a5_evalp(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Trait<_1a9db4325_Lookup> _72029_l,jule::Ptr<_1a9d9ae66_TypeKind> _72044_p) {
	return _1a9d11eed_evalpd(_self_, _72029_l,_72044_p,nullptr);
}



inline jule::Ptr<_1a9d7379b_Eval> _1a9d126b3_eval(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Trait<_1a9db4325_Lookup> _72528_l) {
	return _1a9d123a5_evalp(_self_, _72528_l,nullptr);
}



inline jule::Bool _1a9d12bad_check_assign_type(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Bool _72937_dest_is_ref,jule::Ptr<_1a9d9ae66_TypeKind>& _72961_dest,jule::Ptr<_1a9d71c2d_Data>& _73014_d,jule::Ptr<_1d7b77374_Token> _73028_error_token) {
	if (_73014_d.get()._field_decl) {
		_1a9d0c955_push_err(_self_.ptr(), _73028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	}
	if (_72937_dest_is_ref) {
		if ((!(_1a9d9b62b_equals(_72961_dest, _73014_d.get()._field_kind)))) {
			_1a9d0c955_push_err(_self_.ptr(), _73028_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_72961_dest.ptr())),jule::Any(_1a9d9b31d_to_str(_73014_d.get()._field_kind.ptr()))}));
			return false;
		}
	} else {
		jule::Ptr<_1a9d5e138_AssignTypeChecker> _74121_atc = jule::new_ptr<_1a9d5e138_AssignTypeChecker>(_1a9d5e138_AssignTypeChecker(_self_,_72961_dest,_73014_d,_73028_error_token));
		jule::Bool _74717_ok = _1a9d602b0_check(_74121_atc.ptr());
		if ((!(_74717_ok))) {
			return false;
		}
	}
	if ((!(_1a9d725e1_is_const(_73014_d.ptr()))) || (_1a9d9d023_prim(_72961_dest.ptr()) == nullptr)) {
		return true;
	}
	jule::Str _75717_kind = _1a9d9d023_prim(_72961_dest.ptr()).get()._field_kind;
	{
		
		if (_1a9cd9415_is_sig_int(_75717_kind)) {
			_case_begin_1abe5b2aa:;
			{
				_1a9c49650_set_i64(_73014_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a9cd9701_is_unsig_int(_75717_kind)) {
			_case_begin_1abe5b332:;
			{
				_1a9c498c5_set_u64(_73014_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_73014_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a9cd9c84_is_float(_75717_kind)) {
			_case_begin_1abe5b3a9:;
			{
				_1a9c4a145_set_f64(_73014_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a9c493ca_as_f64(_73014_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1abe5b1cd:;
	}
	return true;
}



inline jule::Bool _1a9d13153_check_type_compatibility(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _77149_dest,jule::Ptr<_1a9d9ae66_TypeKind>& _77214_src,jule::Ptr<_1d7b77374_Token>& _77235_error_token) {
	if ((_77214_src == nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_77149_dest.ptr())),jule::Any(_1a9d9b31d_to_str(_77214_src.ptr()))}));
		return false;
	}
	if ((_1a9d9e94d_tup(_77214_src.ptr()) != nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_77149_dest.ptr())),jule::Any(_1a9d9b31d_to_str(_77214_src.ptr()))}));
		return false;
	}
	_1a9d5cdb2_TypeCompatibilityChecker _78617_tcc = _1a9d5cdb2_TypeCompatibilityChecker(_self_,_77149_dest,_77214_src,_77235_error_token);
	if (_1a9d5dae9_check(&_78617_tcc)) {
		return true;
	}
	_1a9d0c955_push_err(_self_.ptr(), _77235_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_77149_dest.ptr())),jule::Any(_1a9d9b31d_to_str(_77214_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9d1353d_build_non_generic_type_kind(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1d7a0e75b_TypeDecl>& _80752_ast,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>& _80814_generics) {
	jule::Ptr<_1a9daa55d_TypeChecker> _80917_tc = jule::new_ptr<_1a9daa55d_TypeChecker>(_1a9daa55d_TypeChecker(_self_,jule::Trait<_1a9db4325_Lookup>(_self_, 3),jule::Ptr<_1a9da98d1_Referencer>(),jule::Ptr<_1d7b77374_Token>(),_80814_generics,jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool()));
	return _1a9db1b6e_check_decl(_80917_tc.ptr(), _80752_ast);
}



inline void _1a9d137e6_build_fn_non_generic_type_kinds(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d98063_FnIns>& _81756_f) {
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _81817_generics = nullptr;
	if (_1a8d9557c_is_method(_81756_f.get()._field_decl.ptr())) {
		_81817_generics=jule::append(_81756_f.get()._field_decl.get()._field_generics,_81756_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_81817_generics=_81756_f.get()._field_decl.get()._field_generics;
	}
	{
		auto &expr = _81756_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abe65d64:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1abe65da8_p = *it;
			{
				if ((!(_1a8d93ba7_is_self(_1abe65da8_p.get()._field_decl.ptr())))) {
					_1abe65da8_p.get()._field_kind=_1a9d1353d_build_non_generic_type_kind(_self_, _1abe65da8_p.get()._field_decl.get()._field_kind.get()._field_decl,_81817_generics);
				}
			}
			_iter_next_1abe65d64:;
			++it;
			goto _iter_begin_1abe65d64;
		}
		_iter_end_1abe65d64:;
	}
	if ((!(_1a8d95318_is_void(_81756_f.get()._field_decl.ptr())))) {
		_81756_f.get()._field_result=_1a9d1353d_build_non_generic_type_kind(_self_, _81756_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_81817_generics);
	}
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9d13b37_get_trait_check_fn_kind(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _83548_f) {
	jule::Ptr<_1a8d98063_FnIns> _83617_ins = _1a8d9679d_instance_force(_83548_f);
	_1a9d137e6_build_fn_non_generic_type_kinds(_self_, _83617_ins);
	return _83617_ins;
}



inline jule::Bool _1a9d13e34_reload_fn_ins_types(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d98063_FnIns>& _84144_f) {
	jule::Bool _84157_ok = jule::Bool();
	if (_1a8d98cde_is_builtin(_84144_f.ptr()) || _1a8d99053_is_anon(_84144_f.ptr())) {
		_84157_ok = true;
		return _84157_ok;
	}
	jule::Ptr<_1a9d0a03a_Sema> _84617_sema = _84144_f.get()._field_decl.get()._field_sema;
	jule::Ptr<_1a9d6baa2_SymbolTable> _84817_old = _84144_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a9d0c58c_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _84817_old);
	});
	jule::Ptr<_1a9d6baa2_SymbolTable> _85017_file = _1a9d096bb_find_file(_84144_f.get()._field_decl.get()._field_sema.get()._field_files,_84144_f.get()._field_decl.get()._field_token.get()._field_file);
	if ((_85017_file != nullptr)) {
		_1a9d0c58c_set_current_file(_84144_f.get()._field_decl.get()._field_sema.ptr(), _85017_file);
	}
	jule::I32 _85517_size = _84144_f.get()._field_generics.len();
	if ((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr)) {
		_85517_size+=static_cast<jule::I32>(_84144_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _86017_generics = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>::alloc(0LL,_85517_size);
	{
		auto &expr = _84144_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1abe70489:;
		if (it != expr.end()) {
			jule::I32 _1abe70753_i = it - expr.begin();
			jule::Ptr<_1a9d9ae66_TypeKind> _1abe708b8_g = *it;
			{
				_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7b77374_Token>(),_84144_f.get()._field_decl.get()._field_generics[_1abe70753_i].get()._field_ident,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_1abe708b8_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>())));
			}
			_iter_next_1abe70489:;
			++it;
			_1abe70753_i++;
			goto _iter_begin_1abe70489;
		}
		_iter_end_1abe70489:;
	}
	if ((_84144_f.get()._field_decl != nullptr) && (_84144_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1a8d857c0_StructIns> _87221_owner = _84144_f.get()._field_owner;
		{
			auto &expr = _87221_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1abe71259:;
			if (it != expr.end()) {
				jule::I32 _1abe721c2_i = it - expr.begin();
				jule::Ptr<_1a9d9ae66_TypeKind> _1abe7237b_g = *it;
				{
					_86017_generics = jule::alloc_for_append(_86017_generics,1);_86017_generics.__push(jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7b77374_Token>(),_87221_owner.get()._field_decl.get()._field_generics[_1abe721c2_i].get()._field_ident,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_1abe7237b_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>())));
				}
				_iter_next_1abe71259:;
				++it;
				_1abe721c2_i++;
				goto _iter_begin_1abe71259;
			}
			_iter_end_1abe71259:;
		}
	}
	_84157_ok=true;
	{
		auto &expr = _84144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abe72744:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1abe739a9_p = *it;
			{
				if (_1a8d93ba7_is_self(_1abe739a9_p.get()._field_decl.ptr())) {
					if (_1a8d93e1b_is_ref(_1abe739a9_p.get()._field_decl.ptr())) {
						_1abe739a9_p.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da3bc7_Sptr>(_1a9da3bc7_Sptr(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_84144_f.get()._field_owner, 0))))), 6)));
					} else {
						_1abe739a9_p.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_84144_f.get()._field_owner, 0)));
					}
				} else {
					_1abe739a9_p.get()._field_kind=_1a9d11492_build_type_with_generics(_84617_sema, _1abe739a9_p.get()._field_decl.get()._field_kind.get()._field_decl,_86017_generics);
					if ((_1abe739a9_p.get()._field_kind != nullptr)) {
						_1abe739a9_p.get()._field_kind.get()._field_variadic=_1abe739a9_p.get()._field_decl.get()._field_variadic;
						if (_1abe739a9_p.get()._field_decl.get()._field_reference && (!(_1a9da85e4_is_valid_for_ref(_1abe739a9_p.get()._field_kind)))) {
							_1a9d0c955_push_err(_self_.ptr(), _1abe739a9_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_1abe739a9_p.get()._field_kind.ptr()))}));
						}
					} else {
						_84157_ok=false;
					}
				}
			}
			_iter_next_1abe72744:;
			++it;
			goto _iter_begin_1abe72744;
		}
		_iter_end_1abe72744:;
	}
	if ((!(_1a8d95318_is_void(_84144_f.get()._field_decl.ptr())))) {
		_84144_f.get()._field_result=_1a9d11492_build_type_with_generics(_84617_sema, _84144_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86017_generics);
		_84157_ok=(_84144_f.get()._field_result != nullptr) && _84157_ok;
	}
	if (_84617_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_84617_sema.get()._field_errors);
		_84617_sema.get()._field_errors=nullptr;
	}
	return _84157_ok;
}



inline jule::Bool _1a9d143eb_check_ref_validity_for_init_expr(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Bool _92552_left_mut,jule::Ptr<_1a9d71c2d_Data>& _92573_d,jule::Ptr<_1d7b77374_Token>& _92588_error_token) {
	{
		auto &_match_expr{ _92573_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1abe7be9b:;
			{
				goto _match_end_1abe7b1ba;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>>()) {
			_case_begin_1abe7b2b9:;
			{
				jule::Ptr<_1a8d8b771_TraitSubIdentExprModel> _93021_model = _92573_d.get()._field_model.operator jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>();
				if ((!(_1a9d08258_is_valid_model_for_ref(_93021_model.get()._field_expr)))) {
					_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93021_model.get()._field_method.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
			_case_begin_1abe7b330:;
			{
				jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _93621_model = _92573_d.get()._field_model.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>();
				if ((!(_1a9d08258_is_valid_model_for_ref(_93621_model.get()._field_expr.get()._field_model)))) {
					_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_93621_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8cb29_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>>()) {
			_case_begin_1abe7b396:;
			{
				_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d87c9a_UnaryExprModel>>()) {
			_case_begin_1abe7b40c:;
			{
				jule::Ptr<_1a8d87c9a_UnaryExprModel> _94621_unary = _92573_d.get()._field_model.operator jule::Ptr<_1a8d87c9a_UnaryExprModel>();
				if ((_94621_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1a9d08258_is_valid_model_for_ref(_92573_d.get()._field_model)))) {
						_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_1abe7b1ba;
				}
				goto _case_begin_1abe7b220;
			}
		}
		else {
			_case_begin_1abe7b220:;
			{
				_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1abe7b1ba:;
	}
	if (_92552_left_mut && (!(_92573_d.get()._field_mutable))) {
		_1a9d0c955_push_err(_self_.ptr(), _92588_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _1a9d149d4_check_validity_for_init_expr(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Bool _96748_left_mut,jule::Bool _96764_left_ref,jule::Ptr<_1a9d9ae66_TypeKind>& _96810_left_kind,jule::Ptr<_1a9d71c2d_Data>& _96837_d,jule::Ptr<_1d7b77374_Token>& _96852_error_token) {
	if ((_96748_left_mut && (!(_96837_d.get()._field_mutable))) && _1a9d9c30d_mutable(_96837_d.get()._field_kind.ptr())) {
		_1a9d0c955_push_err(_self_.ptr(), _96852_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_96837_d.get()._field_kind.ptr()))}));
		return false;
	}
	if (_96764_left_ref) {
		if ((!(_1a9d143eb_check_ref_validity_for_init_expr(_self_, _96748_left_mut,_96837_d,_96852_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_1a9d5e138_AssignTypeChecker> _97917_atc = jule::new_ptr<_1a9d5e138_AssignTypeChecker>(_1a9d5e138_AssignTypeChecker(_self_,jule::Ptr<_1a9d9ae66_TypeKind>(),_96837_d,_96852_error_token));
	return _1a9d5e80e_check_validity(_97917_atc.ptr());
}



inline jule::Bool _1a9d14d8b_check_type_alias_decl_kind(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9a22e_TypeAlias>& _98751_ta,jule::Trait<_1a9db4325_Lookup> _98771_l) {
	jule::Bool _98784_ok = jule::Bool();
	jule::Ptr<_1a9d6baa2_SymbolTable> _98817_old = _self_.get()._field_file;
	__JULE_DEFER({
		_1a9d0c58c_set_current_file(_self_.ptr(), _98817_old);
	});
	if ((_98751_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1a9d6baa2_SymbolTable> _99321_file = _1a9d096bb_find_file(_self_.get()._field_files,_98751_ta.get()._field_token.get()._field_file);
		if ((_99321_file != nullptr)) {
			_1a9d0c58c_set_current_file(_self_.ptr(), _99321_file);
		}
	}
	_98784_ok=_1a9d10bde_check_type_with_refers(_self_, _98751_ta.get()._field_kind,_98771_l,jule::new_ptr<_1a9da98d1_Referencer>(_1a9da98d1_Referencer(_98751_ta.get()._field_ident,jule::Any(jule::Any(_98751_ta)),(&(_98751_ta.get()._field_refers)))));
	if ((_98784_ok && (_1a9d9d9c4_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1a9d9d9c4_arr(_98751_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto) {
		_1a9d0c955_push_err(_self_.ptr(), _98751_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_98784_ok=false;
	}
	return _98784_ok;
}



inline void _1a9d15199_check_type_alias_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9a22e_TypeAlias>& _101046_ta,jule::Trait<_1a9db4325_Lookup> _101066_l) {
	if (_1d7b79ac4_is_ignore_ident(_101046_ta.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _101046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a9d14d8b_check_type_alias_decl_kind(_self_, _101046_ta,_101066_l);
}



inline void _1a9d15463_check_type_alias_decl_dup(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d9a22e_TypeAlias>& _101850_ta) {
	if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_101850_ta)),_101850_ta.get()._field_ident,_101850_ta.get()._field_cpp_linked)) {
		_1a9d0c955_push_err(_self_.ptr(), _101850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_101850_ta.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a9d14d8b_check_type_alias_decl_kind(_self_, _101850_ta,jule::Trait<_1a9db4325_Lookup>(_self_, 3));
}



inline jule::Bool _1a9d156b6_check_type_alias_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _102744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1abe91d29:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9a22e_TypeAlias> _1abe91e06_ta = *it;
			{
				_1a9d15463_check_type_alias_decl_dup(_self_, _1abe91e06_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_102744_ok = false;
					return _102744_ok;
				}
			}
			_iter_next_1abe91d29:;
			++it;
			goto _iter_begin_1abe91d29;
		}
		_iter_end_1abe91d29:;
	}
	_102744_ok = true;
	return _102744_ok;
}



inline void _1a9d1593b_check_enum_items_dup(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a943b309_Enum> _103939_e) {
	{
		auto &expr = _103939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abe93765:;
		if (it != expr.end()) {
			jule::Ptr<_1a93b2c75_EnumItem> &_1abe93864_item = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1abe93864_item.get()._field_ident)) {
					_1a9d0c955_push_err(&(*_self_), _1abe93864_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _103939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1abe94e2b:;
						if (it != expr.end()) {
							jule::Ptr<_1a93b2c75_EnumItem> &_1abe9505d_citem = *it;
							{
								if (_1abe93864_item == _1abe9505d_citem) {
									goto _iter_end_1abe94e2b;
								} else if (_1abe93864_item.get()._field_ident == _1abe9505d_citem.get()._field_ident) {
									_1a9d0c955_push_err(&(*_self_), _1abe93864_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abe93864_item.get()._field_ident)}));
									_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1abe94e2b;
								}
							}
							_iter_next_1abe94e2b:;
							++it;
							goto _iter_begin_1abe94e2b;
						}
						_iter_end_1abe94e2b:;
					}
				}
			}
			_iter_next_1abe93765:;
			++it;
			goto _iter_begin_1abe93765;
		}
		_iter_end_1abe93765:;
	}
}



inline void _1a9d15bb1_check_enum_items_str(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a943b309_Enum>& _105745_e) {
	{
		auto &expr = _105745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abe96d40:;
		if (it != expr.end()) {
			jule::Ptr<_1a93b2c75_EnumItem> _1abe96e61_item = *it;
			{
				if (_1a90ce552_auto_expr(_1abe96e61_item.ptr())) {
					_1abe96e61_item.get()._field_value=jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr>(),jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a9c4764d_new_str(_1abe96e61_item.get()._field_ident)))));
					_1abe96e61_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1abe96e61_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a9d71c2d_Data> _106725_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_, jule::Trait<_1a9db4325_Lookup>(_self_, 3)), _1abe96e61_item.get()._field_value.get()._field_expr);
					if ((_106725_d == nullptr)) {
						goto _iter_next_1abe96d40;
					}
					if ((!(_1a9d725e1_is_const(_106725_d.ptr())))) {
						_1a9d0c955_push_err(_self_.ptr(), _1abe96e61_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a9d12bad_check_assign_type(_self_, false,_105745_e.get()._field_kind.get()._field_kind,_106725_d,_1abe96e61_item.get()._field_token);
					_1abe96e61_item.get()._field_value.get()._field_data=_106725_d;
				}
			}
			_iter_next_1abe96d40:;
			++it;
			goto _iter_begin_1abe96d40;
		}
		_iter_end_1abe96d40:;
	}
}



inline void _1a9d15e36_check_enum_items_int(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a943b309_Enum>& _108245_e) {
	jule::Ptr<_1a9da06b8_Prim> _108313_prim = _1a9d9d023_prim(_108245_e.get()._field_kind.get()._field_kind.ptr());
	jule::U64 _108417_max = static_cast<jule::U64>(_1a9cd44ed_max(_1a9da0a2b_to_str(_108313_prim.ptr())));
	{
		auto &expr = _108245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1abe9cbd1:;
		if (it != expr.end()) {
			jule::I32 _1abe9cdce_i = it - expr.begin();
			jule::Ptr<_1a93b2c75_EnumItem> _1abe9d022_item = *it;
			{
				if ((_108417_max == 0LLU)) {
					_1a9d0c955_push_err(_self_.ptr(), _1abe9d022_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_108417_max)--;
				}
				if (_1a90ce552_auto_expr(_1abe9d022_item.ptr())) {
					_1abe9d022_item.get()._field_value=jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr>(),jule::new_ptr<_1a9d71c2d_Data>()));
					{
						
						if (_1a9cd9415_is_sig_int(_1a9da0a2b_to_str(_108313_prim.ptr()))) {
							_case_begin_1abea0277:;
							{
								_1abe9d022_item.get()._field_value.get()._field_data.get()._field_constant=static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1abe9cdce_i)))))))));
							}
						}
						else {
							_case_begin_1abe9ec9e:;
							{
								_1abe9d022_item.get()._field_value.get()._field_data.get()._field_constant=static__1a9c47164_new_u64(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_108417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1abe9cdce_i))))))));
							}
						}
						_match_end_1abe9ec49:;
					}
					_1abe9d022_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1abe9d022_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a9d71c2d_Data> _110325_d = _1a9d8ce58_eval_expr(_1a9d126b3_eval(_self_, jule::Trait<_1a9db4325_Lookup>(_self_, 3)), _1abe9d022_item.get()._field_value.get()._field_expr);
					if ((_110325_d == nullptr)) {
						goto _iter_next_1abe9cbd1;
					}
					if ((!(_1a9d725e1_is_const(_110325_d.ptr())))) {
						_1a9d0c955_push_err(_self_.ptr(), _1abe9d022_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a9d12bad_check_assign_type(_self_, false,_108245_e.get()._field_kind.get()._field_kind,_110325_d,_1abe9d022_item.get()._field_token);
					_1abe9d022_item.get()._field_value.get()._field_data=_110325_d;
				}
			}
			_iter_next_1abe9cbd1:;
			++it;
			_1abe9cdce_i++;
			goto _iter_begin_1abe9cbd1;
		}
		_iter_end_1abe9cbd1:;
	}
}



inline void _1a9d161ab_check_enum_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a943b309_Enum>& _111840_e) {
	if (_1d7b79ac4_is_ignore_ident(_111840_e.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_111840_e)),_111840_e.get()._field_ident,false)) {
		_1a9d0c955_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((_111840_e.get()._field_items.len() == 0LL)) {
		_1a9d0c955_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_111840_e.get()._field_ident)}));
	}
	_1a9d1593b_check_enum_items_dup(_self_.ptr(), _111840_e);
	if ((_111840_e.get()._field_kind != nullptr)) {
		if ((!(_1a9d11096_check_type(_self_, _111840_e.get()._field_kind,jule::Trait<_1a9db4325_Lookup>(_self_, 3))))) {
			return;
		}
	} else {
		_111840_e.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)))));
	}
	jule::Ptr<_1a9da06b8_Prim> _114517_t = _1a9d9d023_prim(_111840_e.get()._field_kind.get()._field_kind.ptr());
	if ((_114517_t == nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if (_1a9da3677_is_str(_114517_t.ptr())) {
			_case_begin_1abeab8b0:;
			{
				_1a9d15bb1_check_enum_items_str(_self_, _111840_e);
			}
		}
		else if (_1a9cd9998_is_int(_1a9da0a2b_to_str(_114517_t.ptr()))) {
			_case_begin_1abeab926:;
			{
				_1a9d15e36_check_enum_items_int(_self_, _111840_e);
			}
		}
		else {
			_case_begin_1abea8dda:;
			{
				_1a9d0c955_push_err(_self_.ptr(), _111840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1abeaabab:;
	}
}



inline jule::Bool _1a9d16420_check_enum_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _116338_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1abeaddbd:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b309_Enum> _1abeade9a_e = *it;
			{
				_1a9d161ab_check_enum_decl(_self_, _1abeade9a_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_116338_ok = false;
					return _116338_ok;
				}
			}
			_iter_next_1abeaddbd:;
			++it;
			goto _iter_begin_1abeaddbd;
		}
		_iter_end_1abeaddbd:;
	}
	_116338_ok = true;
	return _116338_ok;
}



inline jule::Bool _1a9d1672d_check_decl_generics(_1a9d0a03a_Sema* _self_,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>& _117539_generics) {
	jule::Bool _117572_ok = jule::Bool();
	_117572_ok=true;
	{
		auto &expr = _117539_generics;
		auto it = expr.begin();
		_iter_begin_1abeb0a90:;
		if (it != expr.end()) {
			jule::I32 _1abeb0d26_i = it - expr.begin();
			jule::Ptr<_1d7b8c246_GenericDecl> &_1abeb1035_g = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1abeb1035_g.get()._field_ident)) {
					_1a9d0c955_push_err(&(*_self_), _1abeb1035_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_117572_ok=false;
					goto _iter_next_1abeb0a90;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _117539_generics;
					auto it = expr.begin();
					_iter_begin_1abeb2553:;
					if (it != expr.end()) {
						jule::I32 _1abeb25ec_j = it - expr.begin();
						jule::Ptr<_1d7b8c246_GenericDecl> &_1abeb283e_ct = *it;
						{
							{
								
								if (_1abeb25ec_j >= _1abeb0d26_i) {
									_case_begin_1abeb3015:;
									{
										goto _iter_end_1abeb2553;
									}
								}
								else if (_1abeb1035_g.get()._field_ident == _1abeb283e_ct.get()._field_ident) {
									_case_begin_1abeb308c:;
									{
										_1a9d0c955_push_err(&(*_self_), _1abeb1035_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abeb1035_g.get()._field_ident)}));
										_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_117572_ok=false;
										goto _iter_end_1abeb2553;
									}
								}
								_match_end_1abeb2e05:;
							}
						}
						_iter_next_1abeb2553:;
						++it;
						_1abeb25ec_j++;
						goto _iter_begin_1abeb2553;
					}
					_iter_end_1abeb2553:;
				}
			}
			_iter_next_1abeb0a90:;
			++it;
			_1abeb0d26_i++;
			goto _iter_begin_1abeb0a90;
		}
		_iter_end_1abeb0a90:;
	}
	return _117572_ok;
}



inline jule::Bool _1a9d16a80_check_fn_decl_params_dup(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d94db7_Fn>& _120244_f) {
	jule::Bool _120254_ok = jule::Bool();
	_120254_ok=true;
	_julec_label_check:;
	{
		auto &expr = _120244_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abeb5eb3:;
		if (it != expr.end()) {
			jule::I32 _1abeb60b2_i = it - expr.begin();
			jule::Ptr<_1a8d9357a_Param> &_1abeb6249_p = *it;
			{
				{
					auto &expr = _120244_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1abeb68dc:;
					if (it != expr.end()) {
						jule::Ptr<_1d7b8c246_GenericDecl> &_1abeb69db_g = *it;
						{
							if (_1abeb6249_p.get()._field_ident == _1abeb69db_g.get()._field_ident) {
								_120254_ok=false;
								_1a9d0c955_push_err(&(*_self_), _1abeb6249_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abeb6249_p.get()._field_ident)}));
								_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1abeb5eb3;
							}
						}
						_iter_next_1abeb68dc:;
						++it;
						goto _iter_begin_1abeb68dc;
					}
					_iter_end_1abeb68dc:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _120244_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1abeb86d0:;
					if (it != expr.end()) {
						jule::I32 _1abeb6b0c_j = it - expr.begin();
						jule::Ptr<_1a8d9357a_Param> &_1abeb8801_jp = *it;
						{
							{
								
								if (_1abeb6b0c_j >= _1abeb60b2_i) {
									_case_begin_1abeb8e61:;
									{
										goto _iter_end_1abeb86d0;
									}
								}
								else if (_1d7b79d6b_is_anon_ident(_1abeb6249_p.get()._field_ident) || _1d7b79d6b_is_anon_ident(_1abeb8801_jp.get()._field_ident)) {
									_case_begin_1abeb8ed8:;
									{
										goto _iter_end_1abeb86d0;
									}
								}
								else if (_1abeb6249_p.get()._field_ident == _1abeb8801_jp.get()._field_ident) {
									_case_begin_1abeb9060:;
									{
										_120254_ok=false;
										_1a9d0c955_push_err(&(*_self_), _1abeb6249_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abeb6249_p.get()._field_ident)}));
										_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1abeb5eb3;
									}
								}
								_match_end_1abeb8d40:;
							}
						}
						_iter_next_1abeb86d0:;
						++it;
						_1abeb6b0c_j++;
						goto _iter_begin_1abeb86d0;
					}
					_iter_end_1abeb86d0:;
				}
			}
			_iter_next_1abeb5eb3:;
			++it;
			_1abeb60b2_i++;
			goto _iter_begin_1abeb5eb3;
		}
		_iter_end_1abeb5eb3:;
	}
	return _120254_ok;
}



inline jule::Bool _1a9d16dc1_check_fn_decl_result_dup(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d94db7_Fn>& _123644_f) {
	jule::Bool _123654_ok = jule::Bool();
	_123654_ok=true;
	if (_1a8d95318_is_void(_123644_f.ptr())) {
		return _123654_ok;
	}
	{
		auto &expr = _123644_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1abebc99d:;
		if (it != expr.end()) {
			jule::I32 _1abebc9e2_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> &_1abebcc12_v = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1abebcc12_v.get()._field_kind) || _1d7b79d6b_is_anon_ident(_1abebcc12_v.get()._field_kind)) {
					goto _iter_next_1abebc99d;
				}
				{
					auto &expr = _123644_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1abebdc46:;
					if (it != expr.end()) {
						jule::Ptr<_1d7b8c246_GenericDecl> &_1abebdd45_g = *it;
						{
							if (_1abebcc12_v.get()._field_kind == _1abebdd45_g.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1abebdc46:;
						++it;
						goto _iter_begin_1abebdc46;
					}
					_iter_end_1abebdc46:;
				}
				{
					auto &expr = _123644_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1abebe7e6:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d9357a_Param> &_1abebecbe_p = *it;
						{
							if (_1abebcc12_v.get()._field_kind == _1abebecbe_p.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1abebe7e6:;
						++it;
						goto _iter_begin_1abebe7e6;
					}
					_iter_end_1abebe7e6:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _123644_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1abec0e24:;
					if (it != expr.end()) {
						jule::I32 _1abec0ebd_j = it - expr.begin();
						jule::Ptr<_1d7b77374_Token> &_1abec11bb_jv = *it;
						{
							{
								
								if (_1abec0ebd_j >= _1abebc9e2_i) {
									_case_begin_1abec184d:;
									{
										goto _iter_end_1abec0e24;
									}
								}
								else if (_1abec11bb_jv.get()._field_kind == _1abebcc12_v.get()._field_kind) {
									_case_begin_1abec18c5:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1abec173d:;
							}
						}
						_iter_next_1abec0e24:;
						++it;
						_1abec0ebd_j++;
						goto _iter_begin_1abec0e24;
					}
					_iter_end_1abec0e24:;
				}
				goto _iter_next_1abebc99d;
				_julec_label_exist:;
				_1a9d0c955_push_err(&(*_self_), _1abebcc12_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abebcc12_v.get()._field_kind)}));
				_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_123654_ok=false;
			}
			_iter_next_1abebc99d:;
			++it;
			_1abebc9e2_i++;
			goto _iter_begin_1abebc99d;
		}
		_iter_end_1abebc99d:;
	}
	return _123654_ok;
}



inline void _1a9d17135_check_fn_decl_types(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _128144_f) {
	jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>> _128217_generics = _128144_f.get()._field_generics;
	if ((_128144_f.get()._field_owner != nullptr) && (_128144_f.get()._field_owner.get()._field_generics.len() != 0LL)) {
		_128217_generics=jule::append(_128217_generics,_128144_f.get()._field_owner.get()._field_generics);
	}
	{
		auto &expr = _128144_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1abec5cb4:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d9357a_Param> _1abec5d3b_p = *it;
			{
				if ((!(_1a8d93ba7_is_self(_1abec5d3b_p.ptr())))) {
					jule::Ptr<_1a9d9ae66_TypeKind> _128925_kind = _1a9d1353d_build_non_generic_type_kind(_self_, _1abec5d3b_p.get()._field_kind.get()._field_decl,_128217_generics);
					_1abec5d3b_p.get()._field_kind.get()._field_kind=_128925_kind;
				}
			}
			_iter_next_1abec5cb4:;
			++it;
			goto _iter_begin_1abec5cb4;
		}
		_iter_end_1abec5cb4:;
	}
	if ((!(_1a8d95318_is_void(_128144_f.ptr())))) {
		jule::Ptr<_1a9d9ae66_TypeKind> _129521_kind = _1a9d1353d_build_non_generic_type_kind(_self_, _128144_f.get()._field_result.get()._field_kind.get()._field_decl,_128217_generics);
		_128144_f.get()._field_result.get()._field_kind.get()._field_kind=_129521_kind;
	}
}



inline void _1a9d173ee_check_fn_decl_prototype(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _130248_f) {
	if (_130248_f.get()._field_exceptional && _130248_f.get()._field_cpp_linked) {
		_1a9d0c955_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;
	}
	if (_130248_f.get()._field_exceptional) {
		if (_1a8d957e1_is_entry_point(_130248_f.ptr())) {
			_1a9d0c955_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1a8d95a55_is_init(_130248_f.ptr())) {
			_1a9d0c955_push_err(_self_.ptr(), _130248_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!(_1a9d1672d_check_decl_generics(_self_.ptr(), _130248_f.get()._field_generics)))) {
			_case_begin_1abec9aed:;
		}
		else if ((!(_1a9d16a80_check_fn_decl_params_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1abec9b75:;
		}
		else if ((!(_1a9d16dc1_check_fn_decl_result_dup(_self_.ptr(), _130248_f)))) {
			_case_begin_1abecb2d6:;
		}
		_match_end_1abec9a10:;
	}
	_1a9d17135_check_fn_decl_types(_self_, _130248_f);
}



inline void _1a9d176a7_check_trait_decl_method(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _132548_f) {
	if (_1d7b79ac4_is_ignore_ident(_132548_f.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _132548_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a9d173ee_check_fn_decl_prototype(_self_, _132548_f);
	_132548_f.get()._field_sema=_self_;
}



inline void _1a9d17960_check_trait_decl_methods(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8ea7a57_Trait>& _133449_t) {
	{
		auto &expr = _133449_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abed0175:;
		if (it != expr.end()) {
			jule::I32 _1abed0274_i = it - expr.begin();
			jule::Ptr<_1a8d94db7_Fn> _1abed040b_f = *it;
			{
				_1a9d176a7_check_trait_decl_method(_self_, _1abed040b_f);
				_133449_t.get()._field_mutable=_133449_t.get()._field_mutable || _1abed040b_f.get()._field_params[0LL].get()._field_mutable;
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _133449_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1abed1bd2:;
					if (it != expr.end()) {
						jule::I32 _1abed2111_j = it - expr.begin();
						jule::Ptr<_1a8d94db7_Fn> _1abed2276_jf = *it;
						{
							{
								
								if (_1abed2111_j >= _1abed0274_i) {
									_case_begin_1abed2908:;
									{
										goto _iter_end_1abed1bd2;
									}
								}
								else if (_1abed040b_f.get()._field_ident == _1abed2276_jf.get()._field_ident) {
									_case_begin_1abed2980:;
									{
										_1a9d0c955_push_err(_self_.ptr(), _1abed040b_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1abed040b_f.get()._field_ident)}));
										_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1abed1bd2;
									}
								}
								_match_end_1abed27e8:;
							}
						}
						_iter_next_1abed1bd2:;
						++it;
						_1abed2111_j++;
						goto _iter_begin_1abed1bd2;
					}
					_iter_end_1abed1bd2:;
				}
			}
			_iter_next_1abed0175:;
			++it;
			_1abed0274_i++;
			goto _iter_begin_1abed0175;
		}
		_iter_end_1abed0175:;
	}
}



inline void _1a9d17bc4_check_trait_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8ea7a57_Trait>& _136541_t) {
	if (_1d7b79ac4_is_ignore_ident(_136541_t.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_136541_t)),_136541_t.get()._field_ident,false)) {
		_1a9d0c955_push_err(_self_.ptr(), _136541_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_136541_t.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a9d17960_check_trait_decl_methods(_self_, _136541_t);
}



inline jule::Bool _1a9d17e38_check_trait_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _137739_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1abed82b0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> _1abed838c_t = *it;
			{
				_1a9d17bc4_check_trait_decl(_self_, _1abed838c_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_137739_ok = false;
					return _137739_ok;
				}
			}
			_iter_next_1abed82b0:;
			++it;
			goto _iter_begin_1abed82b0;
		}
		_iter_end_1abed82b0:;
	}
	_137739_ok = true;
	return _137739_ok;
}



inline jule::Bool _1a9d18334_check_trait_impl_methods(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8ea7a57_Trait>& _138948_base,jule::Ptr<_1a922a34b_Impl>& _138963_ipl) {
	jule::Bool _138977_ok = jule::Bool();
	_138977_ok=true;
	{
		auto &expr = _138963_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abeda2e5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> &_1abeda559_f = *it;
			{
				if ((_1a8e8a71b_find_method(_138948_base.ptr(), _1abeda559_f.get()._field_ident) == nullptr)) {
					_1a9d0c955_push_err(&(*_self_), _1abeda559_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_138948_base.get()._field_ident),jule::Any(_1abeda559_f.get()._field_ident)}));
					_138977_ok=false;
				}
			}
			_iter_next_1abeda2e5:;
			++it;
			goto _iter_begin_1abeda2e5;
		}
		_iter_end_1abeda2e5:;
	}
	return _138977_ok;
}



inline jule::Bool _1a9d186ca_impl_to_struct(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _140039_dest,jule::Ptr<_1a922a34b_Impl>& _140059_ipl) {
	jule::Bool _140073_ok = jule::Bool();
	_140073_ok=true;
	{
		auto &expr = _140059_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1abedce0d:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1abedd172_f = *it;
			{
				if ((_1a8d83735_find_method(_140039_dest.ptr(), _1abedd172_f.get()._field_ident,_1abedd172_f.get()._field_statically) != nullptr) || (_1a8d83d51_find_field(_140039_dest.ptr(), _1abedd172_f.get()._field_ident) != nullptr)) {
					_1a9d0c955_push_err(_self_.ptr(), _1abedd172_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_1abedd172_f.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1abedce0d;
				}
				if ((_140039_dest.get()._field_generics.len() > 0LL) && (_1abedd172_f.get()._field_generics.len() > 0LL)) {
					{
						auto &expr = _1abedd172_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1abee0a7b:;
						if (it != expr.end()) {
							jule::Ptr<_1d7b8c246_GenericDecl> _1abee0b69_fg = *it;
							{
								{
									auto &expr = _140039_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1abee1274:;
									if (it != expr.end()) {
										jule::Ptr<_1d7b8c246_GenericDecl> _1abee1373_dg = *it;
										{
											if (_1abee0b69_fg.get()._field_ident == _1abee1373_dg.get()._field_ident) {
												_1a9d0c955_push_err(_self_.ptr(), _1abee0b69_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_140073_ok=false;
											}
										}
										_iter_next_1abee1274:;
										++it;
										goto _iter_begin_1abee1274;
									}
									_iter_end_1abee1274:;
								}
							}
							_iter_next_1abee0a7b:;
							++it;
							goto _iter_begin_1abee0a7b;
						}
						_iter_end_1abee0a7b:;
					}
				}
				_1a9d0d89b_check_directives(_self_, _1abedd172_f.get()._field_directives,jule::Any(_1abedd172_f));
				_1abedd172_f.get()._field_sema=_self_;
				_1abedd172_f.get()._field_owner=_140039_dest;
				_140039_dest.get()._field_methods = jule::alloc_for_append(_140039_dest.get()._field_methods,1);_140039_dest.get()._field_methods.__push(_1abedd172_f);
			}
			_iter_next_1abedce0d:;
			++it;
			goto _iter_begin_1abedce0d;
		}
		_iter_end_1abedce0d:;
	}
	{
		auto &expr = _140059_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1abee3c6b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1abedd293_v = *it;
			{
				
				if ((_1a8d83735_find_method(_140039_dest.ptr(), _1abedd293_v.get()._field_ident,true) != nullptr) || (_1a8d83a43_find_static(_140039_dest.ptr(), _1abedd293_v.get()._field_ident) != nullptr)) {
					_1a9d0c955_push_err(_self_.ptr(), _1abedd293_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_140039_dest.get()._field_ident),jule::Any(_1abedd293_v.get()._field_ident)}));
					_140073_ok=false;
					goto _iter_next_1abee3c6b;
				}
				_1a9d19269_check_var_decl(_self_, _1abedd293_v,jule::Trait<_1a9db4325_Lookup>(_self_, 3));
				_1a9d1d4b0_check_type_var(_self_, _1abedd293_v,jule::Trait<_1a9db4325_Lookup>(_self_, 3));
				_140039_dest.get()._field_statics = jule::alloc_for_append(_140039_dest.get()._field_statics,1);_140039_dest.get()._field_statics.__push(_1abedd293_v);
			}
			_iter_next_1abee3c6b:;
			++it;
			goto _iter_begin_1abee3c6b;
		}
		_iter_end_1abee3c6b:;
	}
	return _140073_ok;
}



inline void _1a9d18950_impl_trait(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a922a34b_Impl>& _144535_decl) {
	jule::Ptr<_1a9d9ae66_TypeKind> _144617_base_t = _1a9d11a9c_select_type(_self_, _144535_decl.get()._field_base);
	if ((_144617_base_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a8ea7a57_Trait> _145017_base = _1a9d9e475_trt(_144617_base_t.ptr());
	if ((_145017_base == nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _144535_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_144617_base_t.ptr()))}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _145717_dest_t = _1a9d11a9c_select_type(_self_, _144535_decl.get()._field_dest);
	if ((_145717_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a8d857c0_StructIns> _146117_dest_s = _1a9d9e211_strct(_145717_dest_t.ptr());
	if ((_146117_dest_s == nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_145717_dest_t.ptr()))}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a8d82b41_Struct> _146817_dest = _146117_dest_s.get()._field_decl;
	if (_1d7b7d15a_dir(_146817_dest.get()._field_token.get()._field_file.ptr()) != _1d7b7d15a_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a9d0c955_push_err(_self_.ptr(), _144535_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_145017_base.get()._field_implemented = jule::alloc_for_append(_145017_base.get()._field_implemented,1);_145017_base.get()._field_implemented.__push(_146817_dest);
	_146817_dest.get()._field_implements = jule::alloc_for_append(_146817_dest.get()._field_implements,1);_146817_dest.get()._field_implements.__push(_145017_base);
	if ((_144535_decl.get()._field_statics.len() > 0LL)) {
		_1a9d0c955_push_err(_self_.ptr(), _144535_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!(_1a9d18334_check_trait_impl_methods(_self_.ptr(), _145017_base,_144535_decl)))) {
			_case_begin_1abeee6d3:;
			{
				return;
			}
		}
		else if ((!(_1a9d186ca_impl_to_struct(_self_, _146817_dest,_144535_decl)))) {
			_case_begin_1abeee97a:;
			{
				return;
			}
		}
		_match_end_1abeec7ad:;
	}
}



inline void _1a9d18bc5_impl_struct(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a922a34b_Impl>& _149036_decl) {
	jule::Ptr<_1a9d9ae66_TypeKind> _149117_dest_t = _1a9d11a9c_select_type(_self_, _149036_decl.get()._field_dest);
	if ((_149117_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1a8d857c0_StructIns> _149517_dest_s = _1a9d9e211_strct(_149117_dest_t.ptr());
	if ((_149517_dest_s == nullptr)) {
		_1a9d0c955_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_149117_dest_t.ptr()))}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a8d82b41_Struct> _150217_dest = _149517_dest_s.get()._field_decl;
	if (_1d7b7d15a_dir(_150217_dest.get()._field_token.get()._field_file.ptr()) != _1d7b7d15a_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a9d0c955_push_err(_self_.ptr(), _149036_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!(_1a9d186ca_impl_to_struct(_self_, _150217_dest,_149036_decl)))) {
			_case_begin_1ac004ce3:;
			{
				return;
			}
		}
		_match_end_1ac0045a6:;
	}
}



inline void _1a9d18e4a_impl_impl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a922a34b_Impl>& _151534_decl) {
	{
		
		if (_1a9239723_is_trait_impl(_151534_decl.ptr())) {
			_case_begin_1ac005c17:;
			{
				_1a9d18950_impl_trait(_self_, _151534_decl);
			}
		}
		else if (_1a93b753d_is_struct_impl(_151534_decl.ptr())) {
			_case_begin_1ac005c8e:;
			{
				_1a9d18bc5_impl_struct(_self_, _151534_decl);
			}
		}
		_match_end_1ac005b07:;
	}
}



inline void _1a9d19269_check_var_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d2553e_Var>& _152639_decl,jule::Trait<_1a9db4325_Lookup> _152655_l) {
	if (_1d7b79ac4_is_ignore_ident(_152639_decl.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_1a9d25b5a_is_type_inferred(_152639_decl.ptr())) {
		if ((!(_1a9d258e6_is_initialized(_152639_decl.ptr())))) {
			_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		_1a9d11096_check_type(_self_, _152639_decl.get()._field_kind,_152655_l);
	}
	if (_152639_decl.get()._field_constant && _152639_decl.get()._field_reference) {
		_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_1a9d258e6_is_initialized(_152639_decl.ptr())))) {
		if (_152639_decl.get()._field_constant) {
			_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		}
		if (_152639_decl.get()._field_statically) {
			_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_152639_decl.get()._field_reference) {
			_1a9d0c955_push_err(_self_.ptr(), _152639_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1a9d194de_check_global_var_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d2553e_Var>& _156046_decl) {
	if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_156046_decl)),_156046_decl.get()._field_ident,_156046_decl.get()._field_cpp_linked)) {
		_1a9d0c955_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_156046_decl.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_156046_decl.get()._field_cpp_linked && _156046_decl.get()._field_constant) {
		_1a9d0c955_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	}
	if (((!(_156046_decl.get()._field_cpp_linked)) && (!(_156046_decl.get()._field_constant))) && (!(_156046_decl.get()._field_statically))) {
		_1a9d0c955_push_err(_self_.ptr(), _156046_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	_1a9d0d89b_check_directives(_self_, _156046_decl.get()._field_directives,jule::Any(_156046_decl));
	_1a9d19269_check_var_decl(_self_, _156046_decl,jule::Trait<_1a9db4325_Lookup>(_self_, 3));
}



inline jule::Bool _1a9d19753_check_global_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _157940_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac018477:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1ac018554_decl = *it;
			{
				_1a9d194de_check_global_var_decl(_self_, _1ac018554_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_157940_ok = false;
					return _157940_ok;
				}
			}
			_iter_next_1ac018477:;
			++it;
			goto _iter_begin_1ac018477;
		}
		_iter_end_1ac018477:;
	}
	_157940_ok = true;
	return _157940_ok;
}



inline jule::Bool _1a9d19b4e_check_struct_trait_impl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _159148_strct,jule::Ptr<_1a8ea7a57_Trait>& _159169_trt) {
	jule::Bool _159184_ok = jule::Bool();
	{
		auto &expr = _159169_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac01a600:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac01a6ee_tf = *it;
			{
				jule::Bool _159321_exist = false;
				jule::Ptr<_1a8d94db7_Fn> _159421_sf = _1a8d83735_find_method(_159148_strct.ptr(), _1ac01a6ee_tf.get()._field_ident,_1ac01a6ee_tf.get()._field_statically);
				jule::Ptr<_1a8d98063_FnIns> _159517_tf_k = _1a9d13b37_get_trait_check_fn_kind(_self_, _1ac01a6ee_tf);
				if ((_159421_sf != nullptr)) {
					jule::Ptr<_1a8d98063_FnIns> _159725_sf_k = _1a9d13b37_get_trait_check_fn_kind(_self_, _159421_sf);
					_159321_exist=((_159517_tf_k.get()._field_decl.get()._field_public == _159725_sf_k.get()._field_decl.get()._field_public) && (_159517_tf_k.get()._field_decl.get()._field_ident == _159725_sf_k.get()._field_decl.get()._field_ident)) && _1a8d986d4_equals(_159517_tf_k, jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_159725_sf_k, 1))));
				}
				if (_159321_exist) {
					jule::Ptr<_1d7a4352b_Directive> _160321_d = _1a9d95bec_find_directive(_159421_sf.get()._field_directives,jule::Str("deprecated", 10));
					if ((_160321_d != nullptr)) {
						_1a9d0c955_push_err(_self_.ptr(), _160321_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_159184_ok=false;
				} else {
					
					jule::Str _161025_s = _1a8d9966e_get_kind_str(_159517_tf_k.ptr(), true);
					if (_1ac01a6ee_tf.get()._field_public) {
						(_161025_s).buffer.insert(0, (jule::Str("pub ", 4)));
					}
					_1a9d0c955_push_err(_self_.ptr(), _159148_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_159169_trt.get()._field_ident),jule::Any(_161025_s)}));
					_159184_ok=false;
				}
			}
			_iter_next_1ac01a600:;
			++it;
			goto _iter_begin_1ac01a600;
		}
		_iter_end_1ac01a600:;
	}
	return _159184_ok;
}



inline jule::Bool _1a9d19e4b_check_struct_impls(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _162143_s) {
	jule::Bool _162157_ok = jule::Bool();
	_162157_ok=true;
	{
		auto &expr = _162143_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1ac022717:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> _1ac02297b_trt = *it;
			{
				_162157_ok=_1a9d19b4e_check_struct_trait_impl(_self_, _162143_s,_1ac02297b_trt) && _162157_ok;
			}
			_iter_next_1ac022717:;
			++it;
			goto _iter_begin_1ac022717;
		}
		_iter_end_1ac022717:;
	}
	return _162157_ok;
}



inline jule::Bool _1a9d1a259_check_struct_fields(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _162944_st) {
	jule::Bool _162959_ok = jule::Bool();
	_162959_ok=true;
	jule::Ptr<_1a9daa55d_TypeChecker> _163217_tc = jule::new_ptr<_1a9daa55d_TypeChecker>(_1a9daa55d_TypeChecker(_self_,jule::Trait<_1a9db4325_Lookup>(_self_, 3),jule::new_ptr<_1a9da98d1_Referencer>(_1a9da98d1_Referencer(_162944_st.get()._field_ident,jule::Any(jule::Any(_162944_st)),nullptr)),jule::Ptr<_1d7b77374_Token>(),_162944_st.get()._field_generics,jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool()));
	jule::I32 _164213_n = _162944_st.get()._field_instances.len();
	{
		auto &expr = _162944_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ac0242a7:;
		if (it != expr.end()) {
			jule::Ptr<_1bd010a02_Field> _1ac025495_f = *it;
			{
				_1ac025495_f.get()._field_owner=_162944_st;
				_1ac025495_f.get()._field_kind.get()._field_kind=_1a9db1b6e_check_decl(_163217_tc.ptr(), _1ac025495_f.get()._field_kind.get()._field_decl);
				_162959_ok=(_1ac025495_f.get()._field_kind.get()._field_kind != nullptr) && _162959_ok;
				{
					auto &expr = _162944_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1ac026b39:;
					if (it != expr.end()) {
						jule::Ptr<_1bd010a02_Field> _1ac026bb1_cf = *it;
						{
							if (_1ac025495_f == _1ac026bb1_cf) {
								goto _iter_end_1ac026b39;
							} else if (_1ac025495_f.get()._field_ident == _1ac026bb1_cf.get()._field_ident) {
								_1a9d0c955_push_err(_self_.ptr(), _1ac025495_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1ac025495_f.get()._field_ident)}));
								_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_162959_ok=false;
							}
						}
						_iter_next_1ac026b39:;
						++it;
						goto _iter_begin_1ac026b39;
					}
					_iter_end_1ac026b39:;
				}
			}
			_iter_next_1ac0242a7:;
			++it;
			goto _iter_begin_1ac0242a7;
		}
		_iter_end_1ac0242a7:;
	}
	if (_162959_ok && (_164213_n != static_cast<jule::I32>(static_cast<jule::I32>(_162944_st.get()._field_instances.len())))) {
		_163217_tc.get()._field_referencer=nullptr;
		_162944_st.get()._field_instances=_162944_st.get()._field_instances.slice(0LL,_164213_n);
		{
			auto &expr = _162944_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1ac028c29:;
			if (it != expr.end()) {
				jule::Ptr<_1bd010a02_Field> _1ac0290ae_f = *it;
				{
					_1ac0290ae_f.get()._field_kind.get()._field_kind=_1a9db1b6e_check_decl(_163217_tc.ptr(), _1ac0290ae_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1ac028c29:;
				++it;
				goto _iter_begin_1ac028c29;
			}
			_iter_end_1ac028c29:;
		}
	}
	return _162959_ok;
}



inline jule::Bool _1a9d1a5ab_check_struct_decl_methods(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _167150_s) {
	jule::Bool _167164_ok = jule::Bool();
	{
		auto &expr = _167150_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac02ac81:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac02ad80_m = *it;
			{
				_1a9d17135_check_fn_decl_types(_self_, _1ac02ad80_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167164_ok = false;
					return _167164_ok;
				}
			}
			_iter_next_1ac02ac81:;
			++it;
			goto _iter_begin_1ac02ac81;
		}
		_iter_end_1ac02ac81:;
	}
	_167164_ok = true;
	return _167164_ok;
}



inline void _1a9d1a820_check_struct_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _168142_s) {
	if (_1d7b79ac4_is_ignore_ident(_168142_s.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_168142_s)),_168142_s.get()._field_ident,_168142_s.get()._field_cpp_linked)) {
		_1a9d0c955_push_err(_self_.ptr(), _168142_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_168142_s.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a9d0d89b_check_directives(_self_, _168142_s.get()._field_directives,jule::Any(_168142_s));
	_168142_s.get()._field_sema=_self_;
	{
		
		if ((!(_1a9d1672d_check_decl_generics(_self_.ptr(), _168142_s.get()._field_generics)))) {
			_case_begin_1ac030406:;
		}
		else if ((!(_1a9d1a259_check_struct_fields(_self_, _168142_s)))) {
			_case_begin_1ac03046c:;
		}
		else if ((!(_1a9d1a5ab_check_struct_decl_methods(_self_, _168142_s)))) {
			_case_begin_1ac0304d3:;
		}
		else if ((!(_1a9d19e4b_check_struct_impls(_self_, _168142_s)))) {
			_case_begin_1ac030549:;
		}
		_match_end_1ac0302e6:;
	}
}



inline jule::Bool _1a9d1aa84_check_struct_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _170140_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac0326e4:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac0327c1_s = *it;
			{
				_1a9d1a820_check_struct_decl(_self_, _1ac0327c1_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_170140_ok = false;
					return _170140_ok;
				}
			}
			_iter_next_1ac0326e4:;
			++it;
			goto _iter_begin_1ac0326e4;
		}
		_iter_end_1ac0326e4:;
	}
	_170140_ok = true;
	return _170140_ok;
}



inline void _1a9d1ad09_check_fn_decl(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _171438_f) {
	if (_1d7b79ac4_is_ignore_ident(_171438_f.get()._field_ident)) {
		_1a9d0c955_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a9d0d89b_check_directives(_self_, _171438_f.get()._field_directives,jule::Any(_171438_f));
	_171438_f.get()._field_sema=_self_;
	_1a9d173ee_check_fn_decl_prototype(_self_, _171438_f);
	if (_1a9d0d57c_is_duplicated_ident(_self_.ptr(), static_cast<jule::U32>(static_cast<jule::U32>(_171438_f)),_171438_f.get()._field_ident,_171438_f.get()._field_cpp_linked)) {
		if ((_171438_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1a8d94db7_Fn> _172621_init = _1a9d0b822_find_fn(_self_.ptr(), jule::Str("init", 4),false);
			if ((_172621_init != nullptr)) {
				return;
			}
		}
		_1a9d0c955_push_err(_self_.ptr(), _171438_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_171438_f.get()._field_ident)}));
		_1a9d0cc74_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1a9d1b06d_check_fn_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	jule::Bool _173736_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac038be5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac038cc2_f = *it;
			{
				_1a9d1ad09_check_fn_decl(_self_, _1ac038cc2_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_173736_ok = false;
					return _173736_ok;
				}
			}
			_iter_next_1ac038be5:;
			++it;
			goto _iter_begin_1ac038be5;
		}
		_iter_end_1ac038be5:;
	}
	_173736_ok = true;
	return _173736_ok;
}



inline void _1a9d1b436_push_cycle_error(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d82b41_Struct>& _174932_st1,jule::Ptr<_1a8d82b41_Struct>& _174947_st2,jule::Str& _174966_message) {
	
	jule::Str _175213_refers_to = _1d77ca8ce_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_174932_st1.get()._field_ident),jule::Any(_174947_st2.get()._field_ident)}));
	(_174966_message).buffer.insert(0, (((_1d68791dc_repeat(jule::Str(" ", 1),4LL) + _175213_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a9d1b887_check_cross_cycle(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d82b41_Struct>& _175633_st1,jule::Ptr<_1a8d82b41_Struct>& _175648_st2,jule::Str& _175667_message) {
	{
		auto &expr = _175648_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1ac03d0d4:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> &_1ac03d1d3_u = *it;
			{
				if (_1ac03d1d3_u == _175633_st1) {
					_1a9d1b436_push_cycle_error(&(*_self_), _175648_st2,_1ac03d1d3_u,_175667_message);
					return false;
				}
				if ((!(_1a9d1b887_check_cross_cycle(&(*_self_), _175633_st1,_1ac03d1d3_u,_175667_message)))) {
					_1a9d1b436_push_cycle_error(&(*_self_), _175648_st2,_1ac03d1d3_u,_175667_message);
					return false;
				}
			}
			_iter_next_1ac03d0d4:;
			++it;
			goto _iter_begin_1ac03d0d4;
		}
		_iter_end_1ac03d0d4:;
	}
	return true;
}



inline jule::Bool _1a9d1bd4e_check_struct_derive_illegal_cycles(_1a9d0a03a_Sema* _self_,jule::Str _177253_derive,jule::Ptr<_1a8d82b41_Struct>& _177267_st1,jule::Ptr<_1a9d9ae66_TypeKind>& _177286_k) {
	jule::Bool _1772102_ok = jule::Bool();
	jule::Ptr<_1a8d82b41_Struct> _177317_st2 = _1a9da9271_get_struct_from_kind(_177286_k);
	if ((_177317_st2 == nullptr)) {
		_1772102_ok = true;
		return _1772102_ok;
	}
	if (_177267_st1 == _177317_st2) {
		_1a9d0c955_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_177267_st1.get()._field_ident)}));
		_1772102_ok = false;
		return _1772102_ok;
	}
	jule::Str _178517_message = jule::Str();
	if ((!(_1a9d1b887_check_cross_cycle(&(*_self_), _177267_st1,_177317_st2,_178517_message)))) {
		jule::Str _178821_err_msg = _178517_message;
		_178517_message=jule::Str();
		_1a9d1b436_push_cycle_error(&(*_self_), _177267_st1,_177317_st2,_178517_message);
		_178821_err_msg=_178821_err_msg + _178517_message;
		_1a9d0c955_push_err(&(*_self_), _177267_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_177253_derive),jule::Any(_178821_err_msg)}));
		_1772102_ok = false;
		return _1772102_ok;
	}
	_1772102_ok = true;
	return _1772102_ok;
}



inline jule::Bool _1a9d1c16d_check_struct_ins_derive_clone(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d857c0_StructIns> _179952_st) {
	jule::Bool _179970_ok = jule::Bool();
	if ((!(_1a8d8446c_is_derives(_179952_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_179970_ok = true;
		return _179970_ok;
	}
	{
		auto &expr = _179952_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ac045a7b:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d84e62_FieldIns> _1ac045c79_f = *it;
			{
				if ((_1ac045c79_f.get()._field_kind == nullptr)) {
					goto _iter_next_1ac045a7b;
				}
				if ((!(_1a9d9ca4a_supports_cloning(_1ac045c79_f.get()._field_kind.ptr())))) {
					_1a9d0c955_push_err(&(*_self_), _179952_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_1ac045c79_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_179970_ok = false;
					return _179970_ok;
				}
				if ((!(_1a9d1bd4e_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_179952_st.get()._field_decl,_1ac045c79_f.get()._field_kind)))) {
					_179970_ok = false;
					return _179970_ok;
				}
			}
			_iter_next_1ac045a7b:;
			++it;
			goto _iter_begin_1ac045a7b;
		}
		_iter_end_1ac045a7b:;
	}
	_179970_ok = true;
	return _179970_ok;
}



inline jule::Bool _1a9d1c4ae_check_struct_derive_clone(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d82b41_Struct>& _182249_st) {
	return _1a9d1c16d_check_struct_ins_derive_clone(&(*_self_), _1a8d83070_instance(_182249_st));
}



inline jule::Bool _1a9d1c712_check_file_derives(_1a9d0a03a_Sema* _self_) {
	jule::Bool _182639_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac04a212:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac04a2de_st = *it;
			{
				_182639_ok=_1a9d1c4ae_check_struct_derive_clone(&(*_self_), _1ac04a2de_st);
				if ((!(_182639_ok))) {
					goto _iter_end_1ac04a212;
				}
			}
			_iter_next_1ac04a212:;
			++it;
			goto _iter_begin_1ac04a212;
		}
		_iter_end_1ac04a212:;
	}
	return _182639_ok;
}



inline void _1a9d1c8dd_check_package_derives(_1a9d0a03a_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ac04b268:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac04b477_f = *it;
			{
				_1a9d0c58c_set_current_file(&(*_self_), _1ac04b477_f);
				jule::Bool _184117_ok = _1a9d1c712_check_file_derives(&(*_self_));
				if ((!(_184117_ok))) {
					return;
				}
			}
			_iter_next_1ac04b268:;
			++it;
			goto _iter_begin_1ac04b268;
		}
		_iter_end_1ac04b268:;
	}
}



inline void _1a9d1cab9_check_package_decls(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac04c9d9:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac04cbe8_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac04cbe8_f);
				if ((!(_1a9d156b6_check_type_alias_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1ac04c9d9:;
			++it;
			goto _iter_begin_1ac04c9d9;
		}
		_iter_end_1ac04c9d9:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac04cdc4:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac04cec3_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac04cec3_f);
				if ((!(_1a9d17e38_check_trait_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1ac04cdc4:;
			++it;
			goto _iter_begin_1ac04cdc4;
		}
		_iter_end_1ac04cdc4:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac04dcb5:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac04dd92_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac04dd92_f);
				if ((!(_1a9d19753_check_global_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1ac04dcb5:;
			++it;
			goto _iter_begin_1ac04dcb5;
		}
		_iter_end_1ac04dcb5:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac04ea52:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac04eb95_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac04eb95_f);
				if ((!(_1a9d1b06d_check_fn_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1ac04ea52:;
			++it;
			goto _iter_begin_1ac04ea52;
		}
		_iter_end_1ac04ea52:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0508dd:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0509ba_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0509ba_f);
				if ((!(_1a9d1aa84_check_struct_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1ac0508dd:;
			++it;
			goto _iter_begin_1ac0508dd;
		}
		_iter_end_1ac0508dd:;
	}
	_1a9d1c8dd_check_package_derives(_self_.ptr());
}



inline void _1a9d1ce2c_check_data_for_type_inference(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a9d71c2d_Data>& _188949_d,jule::Ptr<_1d7b77374_Token>& _188960_err_token) {
	{
		
		if (_1a9d72118_is_nil(_188949_d.ptr())) {
			_case_begin_1ac0532b4:;
			{
				_1a9d0c955_push_err(&(*_self_), _188960_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a9d7237c_is_void(_188949_d.ptr())) {
			_case_begin_1ac05333b:;
			{
				_1a9d0c955_push_err(&(*_self_), _188960_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_188949_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ac0533b3:;
			{
				_1a9d0c955_push_err(&(*_self_), _188960_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac0531b5:;
	}
}



inline void _1a9d1d191_check_var(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d2553e_Var>& _190034_v) {
	if (_190034_v.get()._field_cpp_linked) {
		return;
	}
	if (_1a9d25b5a_is_type_inferred(_190034_v.ptr())) {
		_190034_v.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_190034_v.get()._field_value.get()._field_data.get()._field_kind));
		_1a9d1ce2c_check_data_for_type_inference(_self_.ptr(), _190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1a9da67ce_Arr> _191121_arr = _1a9d9d9c4_arr(_190034_v.get()._field_kind.get()._field_kind.ptr());
		if ((_191121_arr != nullptr)) {
			if (_191121_arr.get()._field_auto) {
				jule::Ptr<_1a9da67ce_Arr> _191425_data_arr = _1a9d9d9c4_arr(_190034_v.get()._field_value.get()._field_data.get()._field_kind.ptr());
				if ((_191425_data_arr != nullptr)) {
					_191121_arr.get()._field_n=_191425_data_arr.get()._field_n;
				}
			}
		}
		_1a9d12bad_check_assign_type(_self_, _190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	}
	if (_190034_v.get()._field_reference && (!(_1a9da85e4_is_valid_for_ref(_190034_v.get()._field_kind.get()._field_kind)))) {
		_1a9d0c955_push_err(_self_.ptr(), _190034_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_190034_v.get()._field_kind.get()._field_kind.ptr()))}));
	}
	_1a9d149d4_check_validity_for_init_expr(_self_, _190034_v.get()._field_mutable,_190034_v.get()._field_reference,_190034_v.get()._field_kind.get()._field_kind,_190034_v.get()._field_value.get()._field_data,_190034_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_190034_v.get()._field_constant) {
		if ((!(_1a9d725e1_is_const(_190034_v.get()._field_value.get()._field_data.ptr())))) {
			_1a9d0c955_push_err(_self_.ptr(), _190034_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_190034_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	}
	if ((_1a9d9e94d_tup(_190034_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_190034_v.get()._field_kind.get()._field_kind=nullptr;
	}
}



inline void _1a9d1d4b0_check_type_var(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a9d2553e_Var>& _194939_decl,jule::Trait<_1a9db4325_Lookup> _194955_l) {
	if (_194939_decl.get()._field_cpp_linked || (!(_1a9d258e6_is_initialized(_194939_decl.ptr())))) {
		return;
	}
	jule::Ptr<_1a9d7379b_Eval> _195417_eval = nullptr;
	if ((_194939_decl.get()._field_kind != nullptr)) {
		_195417_eval=_1a9d11eed_evalpd(_self_, _194955_l,_194939_decl.get()._field_kind.get()._field_kind,_194939_decl);
	} else {
		_195417_eval=_1a9d11eed_evalpd(_self_, _194955_l,nullptr,_194939_decl);
	}
	_195417_eval.get()._field_immutable=(!(_194939_decl.get()._field_mutable));
	_194939_decl.get()._field_value.get()._field_data=_1a9d8ce58_eval_expr(_195417_eval, _194939_decl.get()._field_value.get()._field_expr);
	if ((_194939_decl.get()._field_value.get()._field_data == nullptr)) {
		return;
	}
	_1a9d1d191_check_var(_self_, _194939_decl);
}



inline void _1a9d1d68b_check_global_types(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac063912:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1ac0639de_decl = *it;
			{
				if ((_1a9d258e6_is_initialized(_1ac0639de_decl.ptr()) && (_1ac0639de_decl.get()._field_value.get()._field_data == nullptr)) || (_1a9d25b5a_is_type_inferred(_1ac0639de_decl.ptr()) && (_1ac0639de_decl.get()._field_kind.get()._field_kind == nullptr))) {
					_1a9d1d4b0_check_type_var(_self_, _1ac0639de_decl,jule::Trait<_1a9db4325_Lookup>(_self_, 3));
				}
			}
			_iter_next_1ac063912:;
			++it;
			goto _iter_begin_1ac063912;
		}
		_iter_end_1ac063912:;
	}
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9d1da43_ready_to_check_fn(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns>& _198142_s,jule::Ptr<_1a8d94db7_Fn>& _198162_f) {
	jule::Ptr<_1a8d98063_FnIns> _198217_ins = _1a8d96a12_instance(_198162_f);
	if ((_198162_f.get()._field_instances.len() != 0LL)) {
		return _198217_ins;
	}
	_198217_ins.get()._field_owner=_198142_s;
	_1a8d96d20_append_instance(_198162_f.ptr(), _198217_ins);
	_1a9d13e34_reload_fn_ins_types(_self_, _198217_ins);
	_198217_ins.get()._field_reloaded=true;
	return _198217_ins;
}



inline void _1a9d1dd62_check_type_method(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns>& _199342_s,jule::Ptr<_1a8d94db7_Fn>& _199362_f) {
	if (_199362_f.get()._field_cpp_linked) {
		return;
	}
	if ((_199362_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	_1a9d1da43_ready_to_check_fn(_self_, _199342_s,_199362_f);
	{
		auto &expr = _199362_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac069808:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1ac06984c_ins = *it;
			{
				if ((_1ac06984c_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1ac069808;
				}
				_1a9d210b7_check_fn_ins(_self_, _1ac06984c_ins);
			}
			_iter_next_1ac069808:;
			++it;
			goto _iter_begin_1ac069808;
		}
		_iter_end_1ac069808:;
	}
}



inline void _1a9d1e0d7_check_field_defaults(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns>& _201345_ins) {
	jule::Ptr<_1a9d7379b_Eval> _201417_eval = _1a9d126b3_eval(_self_, jule::Trait<_1a9db4325_Lookup>(_self_, 3));
	{
		auto &expr = _201345_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ac06bb7e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d84e62_FieldIns> _1ac06bd7c_f = *it;
			{
				if ((_1ac06bd7c_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1ac06bb7e;
				}
				_201417_eval.get()._field_prefix=_1ac06bd7c_f.get()._field_kind;
				_201417_eval.get()._field_field=_1ac06bd7c_f;
				_1ac06bd7c_f.get()._field_default=_1a9d8ce58_eval_expr(_201417_eval, _1ac06bd7c_f.get()._field_decl.get()._field_default);
				if ((_1ac06bd7c_f.get()._field_default == nullptr)) {
					goto _iter_next_1ac06bb7e;
				}
				
				_1a9d12bad_check_assign_type(_self_, false,_1ac06bd7c_f.get()._field_kind,_1ac06bd7c_f.get()._field_default,_1ac06bd7c_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1ac06bb7e:;
			++it;
			goto _iter_begin_1ac06bb7e;
		}
		_iter_end_1ac06bb7e:;
	}
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9d1e538_check_struct_ins_op(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns>& _203544_s,jule::Ptr<_1a8d94db7_Fn>& _203564_f,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)> _203572_p) {
	if ((_203564_f == nullptr) || (_203564_f.get()._field_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1a8d98063_FnIns> _203917_ins = _1a9d1da43_ready_to_check_fn(_self_, _203544_s,_203564_f);
	if (_203572_p(_203564_f)) {
		return _203917_ins;
	}
	return nullptr;
}



inline void _1a9d1e7ad_check_struct_ins(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns>& _204641_s) {
	_1a9d1e0d7_check_field_defaults(_self_, _204641_s);
	{
		auto &expr = _204641_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac073438:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac073537_f = *it;
			{
				_1a9d1dd62_check_type_method(_self_, _204641_s,_1ac073537_f);
			}
			_iter_next_1ac073438:;
			++it;
			goto _iter_begin_1ac073438;
		}
		_iter_end_1ac073438:;
	}
}



inline void _1a9d1ea33_check_type_struct(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _205342_s) {
	if (_205342_s.get()._field_cpp_linked) {
		return;
	}
	if ((_205342_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_205342_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a8d857c0_StructIns> _206421_ins = _1a8d83070_instance(_205342_s);
		_206421_ins.get()._field_checked=true;
		_1a8d8337d_append_instance(_205342_s.ptr(), _206421_ins);
	}
	{
		auto &expr = _205342_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac076392:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1ac075292_ins = *it;
			{
				_1a9d1e7ad_check_struct_ins(_self_, _1ac075292_ins);
			}
			_iter_next_1ac076392:;
			++it;
			goto _iter_begin_1ac076392;
		}
		_iter_end_1ac076392:;
	}
}



inline void _1a9d1ec0e_check_struct_types(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac077360:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac07743c_s = *it;
			{
				_1a9d1ea33_check_type_struct(_self_, _1ac07743c_s);
			}
			_iter_next_1ac077360:;
			++it;
			goto _iter_begin_1ac077360;
		}
		_iter_end_1ac077360:;
	}
}



inline void _1a9d1eec8_check_struct_ins_operators(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d857c0_StructIns> _208050_s) {
	{
		auto &expr = _208050_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac0786a2:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac0787a1_m = *it;
			{
				{
					auto &_match_expr{ _1ac0787a1_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1ac078b7a:;
						{
							_208050_s.get()._field_operators._field_eq=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _208468_f) mutable -> jule::Bool {
								return static__1a9d27046_eq(_208468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1ac0791b9:;
						{
							_208050_s.get()._field_operators._field_gt=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _208668_f) mutable -> jule::Bool {
								return static__1a9d272dd_gt(_208668_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1ac079230:;
						{
							_208050_s.get()._field_operators._field_gt_eq=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _208871_f) mutable -> jule::Bool {
								return static__1a9d27585_gt_eq(_208871_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1ac0792a7:;
						{
							_208050_s.get()._field_operators._field_lt=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _209068_f) mutable -> jule::Bool {
								return static__1a9d2782c_lt(_209068_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1ac07932e:;
						{
							_208050_s.get()._field_operators._field_lt_eq=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _209271_f) mutable -> jule::Bool {
								return static__1a9d27ac4_lt_eq(_209271_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1ac0793a6:;
						{
							_208050_s.get()._field_operators._field_shl=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _209469_f) mutable -> jule::Bool {
								return static__1a9d281ac_shl(_209469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1ac07942d:;
						{
							_208050_s.get()._field_operators._field_shr=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _209669_f) mutable -> jule::Bool {
								return static__1a9d28454_shr(_209669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1ac0794a5:;
						{
							_208050_s.get()._field_operators._field_add=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _209869_f) mutable -> jule::Bool {
								return static__1a9d286eb_add(_209869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1ac07952c:;
						{
							_208050_s.get()._field_operators._field_sub=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _210069_f) mutable -> jule::Bool {
								return static__1a9d28993_sub(_210069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1ac0795a4:;
						{
							_208050_s.get()._field_operators._field_div=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _210269_f) mutable -> jule::Bool {
								return static__1a9d28c3a_div(_210269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1ac07962b:;
						{
							_208050_s.get()._field_operators._field_mul=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _210469_f) mutable -> jule::Bool {
								return static__1a9d28ed2_mul(_210469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1ac0796a3:;
						{
							_208050_s.get()._field_operators._field_mod=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _210669_f) mutable -> jule::Bool {
								return static__1a9d29279_mod(_210669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1ac07972a:;
						{
							_208050_s.get()._field_operators._field_bit_and=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _210873_f) mutable -> jule::Bool {
								return static__1a9d29521_bit_and(_210873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1ac0797a2:;
						{
							_208050_s.get()._field_operators._field_bit_or=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _211072_f) mutable -> jule::Bool {
								return static__1a9d297b8_bit_or(_211072_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1ac079829:;
						{
							_208050_s.get()._field_operators._field_bit_xor=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _211273_f) mutable -> jule::Bool {
								return static__1a9d29a60_bit_xor(_211273_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1ac0798a1:;
						{
							_208050_s.get()._field_operators._field_neg=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _211469_f) mutable -> jule::Bool {
								return static__1a9d2a148_neg(_211469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1ac079928:;
						{
							_208050_s.get()._field_operators._field_pos=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _211669_f) mutable -> jule::Bool {
								return static__1a9d2a3e0_pos(_211669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1ac0799a0:;
						{
							_208050_s.get()._field_operators._field_bit_not=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _211873_f) mutable -> jule::Bool {
								return static__1a9d2a687_bit_not(_211873_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1ac079a27:;
						{
							_208050_s.get()._field_operators._field_add_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _212076_f) mutable -> jule::Bool {
								return static__1a9d2ac70_add_assign(_212076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1ac079a9e:;
						{
							_208050_s.get()._field_operators._field_sub_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _212276_f) mutable -> jule::Bool {
								return static__1a9d2b017_sub_assign(_212276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1ac079b26:;
						{
							_208050_s.get()._field_operators._field_div_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _212476_f) mutable -> jule::Bool {
								return static__1a9d2b2ae_div_assign(_212476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1ac079b9d:;
						{
							_208050_s.get()._field_operators._field_mul_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _212676_f) mutable -> jule::Bool {
								return static__1a9d2b556_mul_assign(_212676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1ac079c25:;
						{
							_208050_s.get()._field_operators._field_mod_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _212876_f) mutable -> jule::Bool {
								return static__1a9d2b7ed_mod_assign(_212876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1ac079c9c:;
						{
							_208050_s.get()._field_operators._field_shl_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _213076_f) mutable -> jule::Bool {
								return static__1a9d2ba95_shl_assign(_213076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1ac079d24:;
						{
							_208050_s.get()._field_operators._field_shr_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _213276_f) mutable -> jule::Bool {
								return static__1a9d2bd3c_shr_assign(_213276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1ac079d9b:;
						{
							_208050_s.get()._field_operators._field_bit_or_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _213479_f) mutable -> jule::Bool {
								return static__1a9d2c0d4_bit_or_assign(_213479_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1ac079e23:;
						{
							_208050_s.get()._field_operators._field_bit_and_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _213680_f) mutable -> jule::Bool {
								return static__1a9d2c37b_bit_and_assign(_213680_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1ac079e9a:;
						{
							_208050_s.get()._field_operators._field_bit_xor_assign=_1a9d1e538_check_struct_ins_op(_self_, _208050_s,_1ac0787a1_m,jule::Fn<jule::Bool(jule::Ptr<_1a8d94db7_Fn>)>([=](jule::Ptr<_1a8d94db7_Fn> _213880_f) mutable -> jule::Bool {
								return static__1a9d2c623_bit_xor_assign(_213880_f);
							}));
						}
					}
					_match_end_1ac078e33:;
				}
			}
			_iter_next_1ac0786a2:;
			++it;
			goto _iter_begin_1ac0786a2;
		}
		_iter_end_1ac0786a2:;
	}
}



inline void _1a9d20281_check_type_struct_operators(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d82b41_Struct>& _214352_s) {
	if (_214352_s.get()._field_cpp_linked) {
		return;
	}
	if ((_214352_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_214352_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a8d857c0_StructIns> _215421_ins = _1a8d83070_instance(_214352_s);
		_215421_ins.get()._field_checked=true;
		_1a8d8337d_append_instance(_214352_s.ptr(), _215421_ins);
	}
	_1a9d1eec8_check_struct_ins_operators(_self_, _214352_s.get()._field_instances[0LL]);
}



inline void _1a9d20490_check_struct_types_operators(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac0a77e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac0a78bd_s = *it;
			{
				_1a9d20281_check_type_struct_operators(_self_, _1ac0a78bd_s);
			}
			_iter_next_1ac0a77e1:;
			++it;
			goto _iter_begin_1ac0a77e1;
		}
		_iter_end_1ac0a77e1:;
	}
}



inline void _1a9d20704_check_rets(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d98063_FnIns>& _216834_f) {
	if (_1a8d95318_is_void(_216834_f.get()._field_decl.ptr())) {
		return;
	}
	_1a9d2289e_MissingRetChecker _217213_mrc = static__1a9d22c67_new();
	jule::Bool _217313_ok = _1a9d23c79_check(&_217213_mrc, _216834_f.get()._field_scope);
	if ((!(_217313_ok))) {
		_1a9d0c955_push_err(&(*_self_), _216834_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1a9d20a23_check_fn_ins_sc(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d98063_FnIns>& _217939_f,jule::Ptr<_1a9cdbc53_ScopeChecker>& _217955_sc) {
	if (_217939_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	_1a9d08cd6_append_ret_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a9d0908e_append_param_vars(_217955_sc.get()._field_table.get()._field_vars,_217939_f);
	_1a9d0938b_append_generic_type_aliases(_217955_sc.get()._field_table.get()._field_type_aliases,_217939_f);
	_1a9ceab52_check(_217955_sc, _217939_f.get()._field_decl.get()._field_scope,_217939_f.get()._field_scope);
	if ((!(_1a9cdd8c0_stopped(_217955_sc.ptr())))) {
		_1a9d20704_check_rets(&(*_self_), _217939_f);
	}
}



inline void _1a9d20d42_check_fn_ins_caller(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d98063_FnIns>& _219644_f,jule::Ptr<_1d7b77374_Token> _219659_caller) {
	if (_219644_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Ptr<_1a9d6baa2_SymbolTable> _220117_old = _219644_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a9d0c58c_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220117_old);
	});
	jule::Ptr<_1a9d6baa2_SymbolTable> _220317_file = _1a9d096bb_find_file(_219644_f.get()._field_decl.get()._field_sema.get()._field_files,_219644_f.get()._field_decl.get()._field_token.get()._field_file);
	if ((_220317_file != nullptr)) {
		_1a9d0c58c_set_current_file(_219644_f.get()._field_decl.get()._field_sema.ptr(), _220317_file);
	}
	jule::Ptr<_1a9cdbc53_ScopeChecker> _220817_sc = _1a9c7656c_new_scope_checker(_219644_f.get()._field_decl.get()._field_sema,_219644_f);
	_220817_sc.get()._field_called_from=_219659_caller;
	_1a9d20a23_check_fn_ins_sc(_self_.ptr(), _219644_f,_220817_sc);
	if (_219644_f.get()._field_decl.get()._field_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_219644_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_219644_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	}
}



inline void _1a9d210b7_check_fn_ins(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d98063_FnIns>& _221837_f) {
	_1a9d20d42_check_fn_ins_caller(_self_, _221837_f,nullptr);
}



inline void _1a9d2133c_check_type_fn(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _222238_f) {
	if (_222238_f.get()._field_cpp_linked) {
		return;
	}
	if ((_222238_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	{
		auto &expr = _222238_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac0b6448:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1ac0b60d5_ins = *it;
			{
				_1a9d210b7_check_fn_ins(_self_, _1ac0b60d5_ins);
			}
			_iter_next_1ac0b6448:;
			++it;
			goto _iter_begin_1ac0b6448;
		}
		_iter_end_1ac0b6448:;
	}
}



inline void _1a9d215b2_check_test_fn(_1a9d0a03a_Sema* _self_,jule::Ptr<_1a8d98063_FnIns>& _223737_f) {
	if (_223737_f.get()._field_decl.get()._field_public) {
		_1a9d0c955_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if ((_223737_f.get()._field_params.len() != 1LL) || (_223737_f.get()._field_result != nullptr)) {
		_1a9d0c955_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a9da3bc7_Sptr> _225017_sptr = _1a9d9d287_sptr(_223737_f.get()._field_params[0LL].get()._field_kind.ptr());
	if ((_225017_sptr == nullptr)) {
		_1a9d0c955_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a8d857c0_StructIns> _225713_s = _1a9d9e211_strct(_225017_sptr.get()._field_elem.ptr());
	if ((_225713_s == nullptr) || (!(_1a9d072bd_is_std_package(_225713_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7))))) {
		_1a9d0c955_push_err(&(*_self_), _223737_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a9d0cc74_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _1a9d21837_precheck_type_fn(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Ptr<_1a8d94db7_Fn>& _226541_f) {
	if (_226541_f.get()._field_cpp_linked) {
		return;
	}
	if ((_226541_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_226541_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1a8d98063_FnIns> _227621_ins = _1a8d96a12_instance(_226541_f);
		_226541_f.get()._field_instances = jule::alloc_for_append(_226541_f.get()._field_instances,1);_226541_f.get()._field_instances.__push(_227621_ins);
		_1a9d13e34_reload_fn_ins_types(_self_, _227621_ins);
		_227621_ins.get()._field_reloaded=true;
		if (_1a9d997a0_has_directive(_226541_f.get()._field_directives,jule::Str("test", 4))) {
			_1a9d215b2_check_test_fn(_self_.ptr(), _227621_ins);
		}
	}
}



inline void _1a9d21a13_precheck_fn_types(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1ac0c2bd5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> _1ac0c2cb2_decl = *it;
			{
				{
					auto &expr = _1ac0c2cb2_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac0c3279:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1ac0c34ee_m = *it;
						{
							_1a9d21837_precheck_type_fn(_self_, _1ac0c34ee_m);
						}
						_iter_next_1ac0c3279:;
						++it;
						goto _iter_begin_1ac0c3279;
					}
					_iter_end_1ac0c3279:;
				}
			}
			_iter_next_1ac0c2bd5:;
			++it;
			goto _iter_begin_1ac0c2bd5;
		}
		_iter_end_1ac0c2bd5:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac0c2da0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac0c3037_decl = *it;
			{
				_1a9d21837_precheck_type_fn(_self_, _1ac0c3037_decl);
			}
			_iter_next_1ac0c2da0:;
			++it;
			goto _iter_begin_1ac0c2da0;
		}
		_iter_end_1ac0c2da0:;
	}
}



inline void _1a9d21bde_check_fn_types(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac0c4b2c:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac0c4c09_decl = *it;
			{
				_1a9d2133c_check_type_fn(_self_, _1ac0c4c09_decl);
			}
			_iter_next_1ac0c4b2c:;
			++it;
			goto _iter_begin_1ac0c4b2c;
		}
		_iter_end_1ac0c4b2c:;
	}
}



inline void _1a9d21dba_check_package_types(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0c59a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0c5bb6_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0c5bb6_f);
				_1a9d1d68b_check_global_types(_self_);
			}
			_iter_next_1ac0c59a7:;
			++it;
			goto _iter_begin_1ac0c59a7;
		}
		_iter_end_1ac0c59a7:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0c5d4d:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0c5de7_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0c5de7_f);
				_1a9d21a13_precheck_fn_types(_self_);
			}
			_iter_next_1ac0c5d4d:;
			++it;
			goto _iter_begin_1ac0c5d4d;
		}
		_iter_end_1ac0c5d4d:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0c6aeb:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0c6bc8_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0c6bc8_f);
				_1a9d20490_check_struct_types_operators(_self_);
			}
			_iter_next_1ac0c6aeb:;
			++it;
			goto _iter_begin_1ac0c6aeb;
		}
		_iter_end_1ac0c6aeb:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0c7bda:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0c7855_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0c7855_f);
				_1a9d1ec0e_check_struct_types(_self_);
			}
			_iter_next_1ac0c7bda:;
			++it;
			goto _iter_begin_1ac0c7bda;
		}
		_iter_end_1ac0c7bda:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0c83e4:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0c84c1_f = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0c84c1_f);
				_1a9d21bde_check_fn_types(_self_);
			}
			_iter_next_1ac0c83e4:;
			++it;
			goto _iter_begin_1ac0c83e4;
		}
		_iter_end_1ac0c83e4:;
	}
}



inline void _1a9d22096_set_file_sema_fields(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac0ca0e9:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac0ca1c6_f = *it;
			{
				_1ac0ca1c6_f.get()._field_sema=_self_;
			}
			_iter_next_1ac0ca0e9:;
			++it;
			goto _iter_begin_1ac0ca0e9;
		}
		_iter_end_1ac0ca0e9:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac0caa56:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac0ca36e_st = *it;
			{
				_1ac0ca36e_st.get()._field_sema=_self_;
			}
			_iter_next_1ac0caa56:;
			++it;
			goto _iter_begin_1ac0caa56;
		}
		_iter_end_1ac0caa56:;
	}
}



inline void _1a9d22272_set_sema_fields(jule::Ptr<_1a9d0a03a_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac0cb43b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac0cb64a_file = *it;
			{
				_1a9d0c58c_set_current_file(_self_.ptr(), _1ac0cb64a_file);
				_1a9d22096_set_file_sema_fields(_self_);
			}
			_iter_next_1ac0cb43b:;
			++it;
			goto _iter_begin_1ac0cb43b;
		}
		_iter_end_1ac0cb43b:;
	}
}



inline void _1a9d224e7_check(jule::Ptr<_1a9d0a03a_Sema> _self_,jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _235330_files) {
	_self_.get()._field_files=_235330_files;
	_1a9d1020a_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a9d1078d_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a9d22272_set_sema_fields(_self_);
	_1a9d105b2_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a9d1cab9_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a9d21dba_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d0a03a_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a9d2289e_MissingRetChecker static__1a9d22c67_new(void) {
	return _1a9d2289e_MissingRetChecker(jule::Slice<jule::U32>::alloc(16LL),jule::Bool());
}



inline jule::Bool _1a9d23042_check_conditional(_1a9d2289e_MissingRetChecker* _self_,jule::Ptr<_1a9c78d33_Conditional> _239936_c) {
	{
		auto &expr = _239936_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac0d1595:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cce0b9_If> _1ac0d1694_elif = *it;
			{
				if ((_1ac0d1694_elif == nullptr)) {
					return false;
				}
				if ((!(_1a9d2396b_check_scope(&(*_self_), _1ac0d1694_elif.get()._field_scope)))) {
					return false;
				}
			}
			_iter_next_1ac0d1595:;
			++it;
			goto _iter_begin_1ac0d1595;
		}
		_iter_end_1ac0d1595:;
	}
	return (_239936_c.get()._field_default != nullptr) && _1a9d2396b_check_scope(&(*_self_), _239936_c.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a9d23350_check_match(_1a9d2289e_MissingRetChecker* _self_,jule::Ptr<_1a9cdad95_Match> _241130_m) {
	{
		auto &expr = _241130_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac0d3d5b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdb2b3_Case> _1ac0d3e5a_c = *it;
			{
				if ((_1ac0d3e5a_c == nullptr)) {
					return false;
				}
				jule::I32 _241617_n = (*_self_)._field_breaked.len();
				jule::Bool _241717_ok = _1a9d2396b_check_scope(&(*_self_), _1ac0d3e5a_c.get()._field_scope);
				{
					
					if (_241617_n != static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_breaked.len()))) {
						_case_begin_1ac0d5577:;
						{
							return false;
						}
					}
					else if ((!(_241717_ok))) {
						_case_begin_1ac0d55ee:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							}
							goto _case_begin_1ac0d5676;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1ac0d5676:;
						{
							(*_self_)._field_falled=false;
							if ((_1ac0d3e5a_c.get()._field_next == nullptr)) {
								return false;
							}
							goto _iter_next_1ac0d3d5b;
						}
					}
					_match_end_1ac0d54cd:;
				}
			}
			_iter_next_1ac0d3d5b:;
			++it;
			goto _iter_begin_1ac0d3d5b;
		}
		_iter_end_1ac0d3d5b:;
	}
	return (_241130_m.get()._field_default != nullptr) && _1a9d2396b_check_scope(&(*_self_), _241130_m.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a9d2365d_check_inf_iter(_1a9d2289e_MissingRetChecker* _self_,jule::Ptr<_1a9c89959_InfIter> _243733_it) {
	jule::I32 _243813_n = (*_self_)._field_breaked.len();
	if (_1a9d2396b_check_scope(&(*_self_), _243733_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
		return true;
	}
	if (_243813_n != static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_breaked.len()))) {
		jule::U32 _244417_itaddr = static_cast<jule::U32>(_243733_it);
		{
			auto expr = (*_self_)._field_breaked.slice(_243813_n);
			auto it = expr.begin();
			_iter_begin_1ac0d9a87:;
			if (it != expr.end()) {
				jule::U32 _1ac0d9b31_addr = *it;
				{
					if (_244417_itaddr == _1ac0d9b31_addr) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
						return false;
					}
				}
				_iter_next_1ac0d9a87:;
				++it;
				goto _iter_begin_1ac0d9a87;
			}
			_iter_end_1ac0d9a87:;
		}
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_243813_n);
	}
	return true;
}



inline jule::Bool _1a9d2396b_check_scope(_1a9d2289e_MissingRetChecker* _self_,jule::Ptr<_1a9cc76bc_Scope> _245630_s) {
	if ((_245630_s == nullptr)) {
		return false;
	}
	{
		auto &expr = _245630_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ac0db4c3:;
		if (it != expr.end()) {
			jule::Any _1ac0db10a_st = *it;
			{
				{
					auto &_match_expr{ _1ac0db10a_st };
					
					if (_match_expr.type_is<jule::Ptr<_1a9cdb4a0_FallSt>>()) {
						_case_begin_1ac0dbd42:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9cb7bc9_BreakSt>>()) {
						_case_begin_1ac0dbda8:;
						{
							jule::U32 _246621_addr = _1ac0db10a_st.operator jule::Ptr<_1a9cb7bc9_BreakSt>().get()._field_it;
							if ((_246621_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_246621_addr);
							}
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9cb79dc_ContSt>>()) {
						_case_begin_1ac0dbe1e:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
						_case_begin_1ac0dbe85:;
						{
							if (_1a9d2365d_check_inf_iter(&(*_self_), _1ac0db10a_st.operator jule::Ptr<_1a9c89959_InfIter>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9cdb68c_RetSt>>()) {
						_case_begin_1ac0dbeeb:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9cc76bc_Scope>>()) {
						_case_begin_1ac0dc062:;
						{
							if (_1a9d2396b_check_scope(&(*_self_), _1ac0db10a_st.operator jule::Ptr<_1a9cc76bc_Scope>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
						_case_begin_1ac0dc0c8:;
						{
							{
								auto &_match_expr{ _1ac0db10a_st.operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
									_case_begin_1ac0e0bd1:;
									{
										return true;
									}
								}
								_match_end_1ac0e0b7b:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9c78d33_Conditional>>()) {
						_case_begin_1ac0dc13e:;
						{
							if (_1a9d23042_check_conditional(&(*_self_), _1ac0db10a_st.operator jule::Ptr<_1a9c78d33_Conditional>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a9cdad95_Match>>()) {
						_case_begin_1ac0dc1a5:;
						{
							if (_1a9d23350_check_match(&(*_self_), _1ac0db10a_st.operator jule::Ptr<_1a9cdad95_Match>())) {
								return true;
							}
						}
					}
					_match_end_1ac0dbbcc:;
				}
			}
			_iter_next_1ac0db4c3:;
			++it;
			goto _iter_begin_1ac0db4c3;
		}
		_iter_end_1ac0db4c3:;
	}
	return false;
}



inline jule::Bool _1a9d23c79_check(_1a9d2289e_MissingRetChecker* _self_,jule::Ptr<_1a9cc76bc_Scope> _250224_s) {
	return _1a9d2396b_check_scope(&(*_self_), _250224_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d2289e_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d24571_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9d258e6_is_initialized(_1a9d2553e_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1a9d25b5a_is_type_inferred(_1a9d2553e_Var* _self_) {
	return ((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d2553e_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a9d266b6_dispose(jule::Ptr<_1a8d94db7_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1a8d95318_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1a8d93e1b_is_ref(_1027_f.get()._field_params[0LL].ptr())));
}



inline jule::Bool static__1a9d2695d_to_str(jule::Ptr<_1a8d94db7_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1a8d95318_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1a8d93e1b_is_ref(_2526_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1a8d98063_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];
	jule::Ptr<_1a9da06b8_Prim> _4113_prim = _1a9d9d023_prim(_4017_ins.get()._field_result.ptr());
	if ((_4113_prim == nullptr)) {
		return false;
	}
	return _1a9da3677_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1a9d26c9e_logical(jule::Ptr<_1a8d94db7_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1a8d95318_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1a8d93e1b_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1a8d98063_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];
	jule::Ptr<_1a9da06b8_Prim> _6713_prim = _1a9d9d023_prim(_6617_ins.get()._field_result.ptr());
	if ((_6713_prim == nullptr) || (!(_1a9da3413_is_bool(_6713_prim.ptr())))) {
		return false;
	}
	return _6617_ins.get()._field_owner == _1a9d9e211_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr());
}



inline jule::Bool static__1a9d27046_eq(jule::Ptr<_1a8d94db7_Fn> _7522_f) {
	return static__1a9d26c9e_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1a9d272dd_gt(jule::Ptr<_1a8d94db7_Fn> _8022_f) {
	return static__1a9d26c9e_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1a9d27585_gt_eq(jule::Ptr<_1a8d94db7_Fn> _8525_f) {
	return static__1a9d26c9e_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1a9d2782c_lt(jule::Ptr<_1a8d94db7_Fn> _9022_f) {
	return static__1a9d26c9e_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1a9d27ac4_lt_eq(jule::Ptr<_1a8d94db7_Fn> _9525_f) {
	return static__1a9d26c9e_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1a9d27e15_result(jule::Ptr<_1a8d94db7_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1a8d95318_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1a8d93e1b_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1a8d98063_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];
	return _1a9d9e211_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner;
}



inline jule::Bool static__1a9d281ac_shl(jule::Ptr<_1a8d94db7_Fn> _12223_f) {
	return static__1a9d27e15_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1a9d28454_shr(jule::Ptr<_1a8d94db7_Fn> _12723_f) {
	return static__1a9d27e15_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1a9d286eb_add(jule::Ptr<_1a8d94db7_Fn> _13223_f) {
	return static__1a9d27e15_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1a9d28993_sub(jule::Ptr<_1a8d94db7_Fn> _13723_f) {
	return static__1a9d27e15_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1a9d28c3a_div(jule::Ptr<_1a8d94db7_Fn> _14223_f) {
	return static__1a9d27e15_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1a9d28ed2_mul(jule::Ptr<_1a8d94db7_Fn> _14723_f) {
	return static__1a9d27e15_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1a9d29279_mod(jule::Ptr<_1a8d94db7_Fn> _15223_f) {
	return static__1a9d27e15_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1a9d29521_bit_and(jule::Ptr<_1a8d94db7_Fn> _15727_f) {
	return static__1a9d27e15_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1a9d297b8_bit_or(jule::Ptr<_1a8d94db7_Fn> _16226_f) {
	return static__1a9d27e15_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1a9d29a60_bit_xor(jule::Ptr<_1a8d94db7_Fn> _16727_f) {
	return static__1a9d27e15_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1a9d29da1_unary(jule::Ptr<_1a8d94db7_Fn>& _17122_f,jule::Str _17130_ident) {
	if ((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1a8d95318_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1a8d93e1b_is_ref(_17122_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1a8d98063_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];
	return _1a9d9e211_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner;
}



inline jule::Bool static__1a9d2a148_neg(jule::Ptr<_1a8d94db7_Fn> _19223_f) {
	return static__1a9d29da1_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1a9d2a3e0_pos(jule::Ptr<_1a8d94db7_Fn> _19723_f) {
	return static__1a9d29da1_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1a9d2a687_bit_not(jule::Ptr<_1a8d94db7_Fn> _20227_f) {
	return static__1a9d29da1_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1a9d2a9c8_assign(jule::Ptr<_1a8d94db7_Fn>& _20623_f,jule::Str _20631_ident) {
	if ((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1a8d95318_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1a8d93e1b_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	return true;
}



inline jule::Bool static__1a9d2ac70_add_assign(jule::Ptr<_1a8d94db7_Fn> _22730_f) {
	return static__1a9d2a9c8_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1a9d2b017_sub_assign(jule::Ptr<_1a8d94db7_Fn> _23230_f) {
	return static__1a9d2a9c8_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1a9d2b2ae_div_assign(jule::Ptr<_1a8d94db7_Fn> _23730_f) {
	return static__1a9d2a9c8_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1a9d2b556_mul_assign(jule::Ptr<_1a8d94db7_Fn> _24230_f) {
	return static__1a9d2a9c8_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1a9d2b7ed_mod_assign(jule::Ptr<_1a8d94db7_Fn> _24730_f) {
	return static__1a9d2a9c8_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1a9d2ba95_shl_assign(jule::Ptr<_1a8d94db7_Fn> _25230_f) {
	return static__1a9d2a9c8_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1a9d2bd3c_shr_assign(jule::Ptr<_1a8d94db7_Fn> _25730_f) {
	return static__1a9d2a9c8_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1a9d2c0d4_bit_or_assign(jule::Ptr<_1a8d94db7_Fn> _26233_f) {
	return static__1a9d2a9c8_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1a9d2c37b_bit_and_assign(jule::Ptr<_1a8d94db7_Fn> _26734_f) {
	return static__1a9d2a9c8_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1a9d2c623_bit_xor_assign(jule::Ptr<_1a8d94db7_Fn> _27234_f) {
	return static__1a9d2a9c8_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d26045_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a9d5d148_push_err(_1a9d5cdb2_TypeCompatibilityChecker* _self_,jule::Str _11727_fmt,jule::Slice<jule::Any> _11740_args) {
	_1a9d0c955_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,_11740_args);
}



inline jule::Bool _1a9d5d3ac_check_trait(_1a9d5cdb2_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1a9d9bd35_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	}
	jule::Ptr<_1a8ea7a57_Trait> _12613_trt = _1a9d9e475_trt((*_self_)._field_dest.ptr());
	jule::Bool _12717_ref = false;
	{
		
		if ((_1a9d9d287_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ac121ccd:;
			{
				_12717_ref=true;
				(*_self_)._field_src=_1a9d9d287_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1a9d9e211_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				}
				goto _case_begin_1ac121d99;
			}
		}
		else if ((_1a9d9e211_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ac121d99:;
			{
				jule::Ptr<_1a8d857c0_StructIns> _13717_s = _1a9d9e211_strct((*_self_)._field_src.ptr());
				if ((!(_1a8d8415e_is_implements(_13717_s.get()._field_decl.ptr(), _12613_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				}
				if ((!(_12717_ref)) && _1a9d3dd2c_trait_has_reference_receiver(_12613_trt)) {
					_1a9d5d148_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				}
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1a9d9e475_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ac121e10:;
			{
				_12132_ok = _12613_trt == _1a9d9e475_trt((*_self_)._field_src.ptr());
				return _12132_ok;
			}
		}
		else {
			_case_begin_1ac12165c:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1ac1215e6:;
	}
}



inline jule::Bool _1a9d5d621_check_ptr(_1a9d5cdb2_TypeCompatibilityChecker* _self_) {
	jule::Bool _15530_ok = jule::Bool();
	if (_1a9d9bd35_is_nil((*_self_)._field_src.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	}
	jule::Ptr<_1a9da723b_Ptr> _16017_dest = _1a9d9d4eb_ptr((*_self_)._field_dest.ptr());
	if (_1a9da7c0e_is_unsafe(_16017_dest.ptr())) {
		_15530_ok = true;
		return _15530_ok;
	}
	_15530_ok = _1a9d9b62b_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15530_ok;
}



inline jule::Bool _1a9d5d885_check_prim(_1a9d5cdb2_TypeCompatibilityChecker* _self_) {
	jule::Bool _16931_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1a9da06b8_Prim> _17117_prim = _1a9d9d023_prim((*_self_)._field_dest.ptr());
		if ((_17117_prim != nullptr) && _1a9da38db_is_any(_17117_prim.ptr())) {
			_16931_ok = true;
			return _16931_ok;
		}
	}
	_16931_ok = _1a9d9b62b_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16931_ok;
}



inline jule::Bool _1a9d5dae9_check(_1a9d5cdb2_TypeCompatibilityChecker* _self_) {
	jule::Bool _17926_ok = jule::Bool();
	if ((_1a9d9d4eb_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_17926_ok = _1a9d5d621_check_ptr(&(*_self_));
		return _17926_ok;
	}
	if (_1a9d9c572_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1a9d9bd35_is_nil((*_self_)._field_src.ptr())) {
			_17926_ok = true;
			return _17926_ok;
		}
	}
	{
		
		if ((_1a9d9d023_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ac12c3d2:;
			{
				_17926_ok = _1a9d5d885_check_prim(&(*_self_));
				return _17926_ok;
			}
		}
		else if ((_1a9d9e475_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ac12c0a2:;
			{
				_17926_ok = _1a9d5d3ac_check_trait(&(*_self_));
				return _17926_ok;
			}
		}
		else {
			_case_begin_1ac12b9b9:;
			{
				_17926_ok = _1a9d9b62b_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _17926_ok;
			}
		}
		_match_end_1ac12b8dc:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d5cdb2_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d5e59a_push_err(_1a9d5e138_AssignTypeChecker* _self_,jule::Str _20927_fmt,jule::Slice<jule::Any> _20940_args) {
	_1a9d0c955_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_20927_fmt,_20940_args);
}



inline jule::Bool _1a9d5e80e_check_validity(_1a9d5e138_AssignTypeChecker* _self_) {
	jule::Bool _21417_valid = true;
	{
		
		if ((_1a9d9de9c_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac130209:;
			{
				jule::Ptr<_1a8d98063_FnIns> _21717_f = _1a9d9de9c_fnc((*_self_)._field_d.get()._field_kind.ptr());
				{
					
					if (_1a8d98cde_is_builtin(_21717_f.ptr())) {
						_case_begin_1ac1316b1:;
						{
							_1a9d5e59a_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_21717_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1ac131738:;
						{
							_1a9d5e59a_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if (_1a8d9557c_is_method(_21717_f.get()._field_decl.ptr())) {
						_case_begin_1ac1317b0:;
						{
							_1a9d5e59a_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					else if ((_21717_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1ac131837:;
						{
							_1a9d5e59a_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_21417_valid=false;
						}
					}
					_match_end_1ac1315c3:;
				}
			}
		}
		else if ((_1a9d9e94d_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac130281:;
			{
				_1a9d5e59a_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_21417_valid=false;
			}
		}
		_match_end_1ac13013d:;
	}
	return _21417_valid;
}



inline jule::Bool _1a9d5ea73_check_const(_1a9d5e138_AssignTypeChecker* _self_) {
	if ((((!(_1a9d725e1_is_const((*_self_)._field_d.ptr()))) || (_1a9d9d023_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1a9cda02b_is_num(_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind)))) {
		return false;
	}
	if ((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant) {
		return false;
	}
	jule::Str _25313_kind = _1a9d9d023_prim((*_self_)._field_dest.ptr()).get()._field_kind;
	{
		
		if (_1a9cd9c84_is_float(_25313_kind)) {
			_case_begin_1ac138c7e:;
			{
				if ((!(_1a9d5c8d9_float_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a9d5e59a_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1a9cd9998_is_int(_25313_kind)) {
			_case_begin_1ac138d7d:;
			{
				if ((!(_1a9d5cc80_int_assignable(_25313_kind,(*_self_)._field_d)))) {
					_1a9d5e59a_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_1ac1386c9:;
			{
				return false;
			}
		}
		_match_end_1ac138674:;
	}
	return true;
}



inline jule::Bool _1a9d5ecd7_is_prim(_1a9d5e138_AssignTypeChecker* _self_) {
	if ((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic) {
		return false;
	}
	if (_1a9d9bac1_cpp_linked((*_self_)._field_dest.ptr()) || _1a9d9bac1_cpp_linked((*_self_)._field_d.get()._field_kind.ptr())) {
		return false;
	}
	return (_1a9d9d023_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr);
}



inline jule::Bool _1a9d6004b_check_compatibility(_1a9d5e138_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ac13dcd9:;
			{
				return false;
			}
		}
		else if ((!(_1a9d5e80e_check_validity(&(*_self_))))) {
			_case_begin_1ac13dd61:;
			{
				return false;
			}
		}
		else if (_1a9d5ea73_check_const(&(*_self_))) {
			_case_begin_1ac13ddd8:;
			{
				return true;
			}
		}
		else if ((_1a9d9d760_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac13de60:;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _29521_dkind = (*_self_)._field_dest;
				if ((_1a9d9d760_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_29521_dkind=_1a9d9d760_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1a9d9d023_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ac13db96;
				}
				if (_1a9cd6775_types_are_compatible(_1a9d9d023_prim(_1a9d9d760_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1a9d9d023_prim(_29521_dkind.ptr()).get()._field_kind)) {
					return true;
				}
			}
		}
		else if (_1a9d5ecd7_is_prim(&(*_self_))) {
			_case_begin_1ac13ded7:;
			{
				jule::Ptr<_1a9da06b8_Prim> _30517_dest = _1a9d9d023_prim((*_self_)._field_dest.ptr());
				if (_1a9da38db_is_any(_30517_dest.ptr())) {
					return true;
				}
				jule::Ptr<_1a9da06b8_Prim> _30921_src = _1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr());
				if (_1a9cd6775_types_are_compatible(_30517_dest.get()._field_kind,_30921_src.get()._field_kind)) {
					return true;
				}
			}
		}
		_match_end_1ac13db96:;
	}
	return _1a9d13153_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1a9d602b0_check(_1a9d5e138_AssignTypeChecker* _self_) {
	jule::Bool _31813_ok = _1a9d6004b_check_compatibility(&(*_self_));
	if (_31813_ok) {
		_1a9db2257_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	}
	return _31813_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d5e138_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d61019_push_generic(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _33636_k,jule::I32 _33650_i) {
	(*_self_)._field_f.get()._field_generics[_33650_i]=_33636_k;
}



inline jule::Bool _1a9d612e4_annotate_prim(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _34044_k) {
	jule::Bool _34060_ok = jule::Bool();
	jule::Str _34113_kind = _1a9d9b31d_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac148860:;
		if (it != expr.end()) {
			jule::I32 _1ac1488d7_i = it - expr.begin();
			jule::Ptr<_1d7b8c246_GenericDecl> _1ac148ae6_g = *it;
			{
				if (_34113_kind != _1ac148ae6_g.get()._field_ident) {
					goto _iter_next_1ac148860;
				}
				jule::Ptr<_1a9d9ae66_TypeKind> _34717_t = (*_self_)._field_f.get()._field_generics[_1ac1488d7_i];
				{
					
					if ((_34717_t == nullptr)) {
						_case_begin_1ac149d17:;
						{
							_1a9d61019_push_generic(&(*_self_), _34044_k,_1ac1488d7_i);
						}
					}
					else if ((!(_1a9d9b62b_equals(_34717_t, _34044_k)))) {
						_case_begin_1ac149d8e:;
						{
							_34060_ok = false;
							return _34060_ok;
						}
					}
					_match_end_1ac149c29:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_34044_k.get()._field_kind;
				_34060_ok = true;
				return _34060_ok;
			}
			_iter_next_1ac148860:;
			++it;
			_1ac1488d7_i++;
			goto _iter_begin_1ac148860;
		}
		_iter_end_1ac148860:;
	}
	_34060_ok = false;
	return _34060_ok;
}



inline jule::Bool _1a9d61602_annotate_slc(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _36343_k) {
	jule::Bool _36359_ok = jule::Bool();
	jule::Ptr<_1a9da4634_Slc> _36417_pslc = _1a9d9dc38_slc((*((*_self_)._field_k)).ptr());
	if ((_36417_pslc == nullptr)) {
		_36359_ok = false;
		return _36359_ok;
	}
	jule::Ptr<_1a9da4634_Slc> _36917_slc = _1a9d9dc38_slc(_36343_k.ptr());
	(*_self_)._field_k=(&(_36417_pslc.get()._field_elem));
	_36359_ok = _1a9d62d0c_annotate_kind(&(*_self_), _36917_slc.get()._field_elem);
	return _36359_ok;
}



inline jule::Bool _1a9d619a9_check_map_key(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>* _37443_k,jule::Ptr<_1a9d9ae66_TypeKind>& _37463_ck) {
	jule::Bool _37480_ok = jule::Bool();
	jule::Ptr<_1a9d9ae66_TypeKind>* _37517_old = (*_self_)._field_k;
	(*_self_)._field_k=_37443_k;
	_37480_ok=_1a9d62d0c_annotate_kind(&(*_self_), _37463_ck);
	(*_self_)._field_k=_37517_old;
	return _37480_ok;
}



inline jule::Bool _1a9d61cb7_annotate_map(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _38243_k) {
	jule::Bool _38259_ok = jule::Bool();
	jule::Ptr<_1a9da5bda_Map> _38317_pmap = _1a9d9e6d9_map((*((*_self_)._field_k)).ptr());
	if ((_38317_pmap == nullptr)) {
		_38259_ok = false;
		return _38259_ok;
	}
	jule::Ptr<_1a9da5bda_Map> _38817_m = _1a9d9e6d9_map(_38243_k.ptr());
	_38259_ok = _1a9d619a9_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_key)),_38817_m.get()._field_key) && _1a9d619a9_check_map_key(&(*_self_), (&(_38317_pmap.get()._field_val)),_38817_m.get()._field_val);
	return _38259_ok;
}



inline jule::Bool _1a9d620c5_annotate_fn(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _39442_k) {
	jule::Bool _39458_ok = jule::Bool();
	jule::Ptr<_1a8d98063_FnIns> _39517_pf = _1a9d9de9c_fnc((*((*_self_)._field_k)).ptr());
	if ((_39517_pf == nullptr)) {
		_39458_ok = false;
		return _39458_ok;
	}
	jule::Ptr<_1a8d98063_FnIns> _39917_f = _1a9d9de9c_fnc(_39442_k.ptr());
	{
		
		if (_39517_pf.get()._field_params.len() != static_cast<jule::I32>(static_cast<jule::I32>(_39917_f.get()._field_params.len()))) {
			_case_begin_1ac15584a:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		else if (_1a8d95318_is_void(_39517_pf.get()._field_decl.ptr()) != _1a8d95318_is_void(_39917_f.get()._field_decl.ptr())) {
			_case_begin_1ac1558c2:;
			{
				_39458_ok = false;
				return _39458_ok;
			}
		}
		_match_end_1ac15577e:;
	}
	_39458_ok=true;
	jule::Ptr<_1a9d9ae66_TypeKind>* _40817_old = (*_self_)._field_k;
	{
		auto &expr = _39917_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac156e78:;
		if (it != expr.end()) {
			jule::I32 _1ac15764e_i = it - expr.begin();
			jule::Ptr<_1a8d971c7_ParamIns> _1ac1577b4_fp = *it;
			{
				(*_self_)._field_k=(&(_39517_pf.get()._field_params[_1ac15764e_i].get()._field_kind));
				_39458_ok=_1a9d62d0c_annotate_kind(&(*_self_), _1ac1577b4_fp.get()._field_kind) && _39458_ok;
			}
			_iter_next_1ac156e78:;
			++it;
			_1ac15764e_i++;
			goto _iter_begin_1ac156e78;
		}
		_iter_end_1ac156e78:;
	}
	if ((!(_1a8d95318_is_void(_39517_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_39517_pf.get()._field_result));
		_39458_ok=_1a9d62d0c_annotate_kind(&(*_self_), _39917_f.get()._field_result) && _39458_ok;
	}
	(*_self_)._field_k=_40817_old;
	return _39458_ok;
}



inline jule::Bool _1a9d623d3_annotate_ptr(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _42343_k) {
	jule::Bool _42359_ok = jule::Bool();
	jule::Ptr<_1a9da723b_Ptr> _42417_pptr = _1a9d9d4eb_ptr((*((*_self_)._field_k)).ptr());
	if ((_42417_pptr == nullptr)) {
		_42359_ok = false;
		return _42359_ok;
	}
	jule::Ptr<_1a9da723b_Ptr> _42917_ptr = _1a9d9d4eb_ptr(_42343_k.ptr());
	(*_self_)._field_k=(&(_42417_pptr.get()._field_elem));
	_42359_ok = _1a9d62d0c_annotate_kind(&(*_self_), _42917_ptr.get()._field_elem);
	return _42359_ok;
}



inline jule::Bool _1a9d626e1_annotate_sptr(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _43444_k) {
	jule::Bool _43460_ok = jule::Bool();
	jule::Ptr<_1a9da3bc7_Sptr> _43517_ssptr = _1a9d9d287_sptr((*((*_self_)._field_k)).ptr());
	if ((_43517_ssptr == nullptr)) {
		_43460_ok = false;
		return _43460_ok;
	}
	jule::Ptr<_1a9da3bc7_Sptr> _44017_sptr = _1a9d9d287_sptr(_43444_k.ptr());
	(*_self_)._field_k=(&(_43517_ssptr.get()._field_elem));
	_43460_ok = _1a9d62d0c_annotate_kind(&(*_self_), _44017_sptr.get()._field_elem);
	return _43460_ok;
}



inline jule::Bool _1a9d629ee_annotate_any(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _44543_k) {
	jule::Bool _44559_ok = jule::Bool();
	jule::Str _44613_kind = _1a9d9b31d_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac160943:;
		if (it != expr.end()) {
			jule::I32 _1ac160987_i = it - expr.begin();
			jule::Ptr<_1d7b8c246_GenericDecl> _1ac160b96_g = *it;
			{
				if (_44613_kind != _1ac160b96_g.get()._field_ident) {
					goto _iter_next_1ac160943;
				}
				jule::Ptr<_1a9d9ae66_TypeKind> _45217_t = (*_self_)._field_f.get()._field_generics[_1ac160987_i];
				{
					
					if ((_45217_t == nullptr)) {
						_case_begin_1ac161db7:;
						{
							_1a9d61019_push_generic(&(*_self_), _44543_k,_1ac160987_i);
						}
					}
					else if ((!(_1a9d9b62b_equals(_45217_t, _44543_k)))) {
						_case_begin_1ac161e3e:;
						{
							_44559_ok = false;
							return _44559_ok;
						}
					}
					_match_end_1ac161cc9:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_44543_k.get()._field_kind;
				_44559_ok = true;
				return _44559_ok;
			}
			_iter_next_1ac160943:;
			++it;
			_1ac160987_i++;
			goto _iter_begin_1ac160943;
		}
		_iter_end_1ac160943:;
	}
	_44559_ok = false;
	return _44559_ok;
}



inline jule::Bool _1a9d62d0c_annotate_kind(_1a9d60986_DynamicTypeAnnotation* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _46844_k) {
	jule::Bool _46860_ok = jule::Bool();
	if (((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr)) {
		return _46860_ok;
	}
	{
		
		if (_1a9d629ee_annotate_any(&(*_self_), _46844_k)) {
			_case_begin_1ac164c00:;
			{
				_46860_ok = true;
				return _46860_ok;
			}
		}
		else if ((_1a9d9d023_prim(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac164c66:;
			{
				_46860_ok = _1a9d612e4_annotate_prim(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a9d9dc38_slc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac164925:;
			{
				_46860_ok = _1a9d61602_annotate_slc(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a9d9e6d9_map(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac16498b:;
			{
				_46860_ok = _1a9d61cb7_annotate_map(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a9d9de9c_fnc(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac164a02:;
			{
				_46860_ok = _1a9d620c5_annotate_fn(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a9d9d4eb_ptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac16454b:;
			{
				_46860_ok = _1a9d623d3_annotate_ptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else if ((_1a9d9d287_sptr(_46844_k.ptr()) != nullptr)) {
			_case_begin_1ac1645b2:;
			{
				_46860_ok = _1a9d626e1_annotate_sptr(&(*_self_), _46844_k);
				return _46860_ok;
			}
		}
		else {
			_case_begin_1ac1644d5:;
			{
				_46860_ok = false;
				return _46860_ok;
			}
		}
		_match_end_1ac16432b:;
	}
}



inline jule::Bool _1a9d63071_annotate(_1a9d60986_DynamicTypeAnnotation* _self_) {
	jule::Bool _49336_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_49336_ok = _1a9d62d0c_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d60986_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d63c97_push_err_token(_1a9d63747_FnCallArgChecker* _self_,jule::Ptr<_1d7b77374_Token> _50933_token,jule::Str _50948_fmt,jule::Slice<jule::Any> _50961_args) {
	_1a9d0c955_push_err((*_self_)._field_e.get()._field_s.ptr(), _50933_token,_50948_fmt,_50961_args);
}



inline void _1a9d640b6_push_err(_1a9d63747_FnCallArgChecker* _self_,jule::Str _51327_fmt,jule::Slice<jule::Any> _51340_args) {
	_1a9d63c97_push_err_token(&(*_self_), (*_self_)._field_error_token,_51327_fmt,_51340_args);
}



inline jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>> _1a9d6432a_get_params(_1a9d63747_FnCallArgChecker* _self_) {
	if ((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1a8d93ba7_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr())) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	}
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1a9d64638_check_counts(_1a9d63747_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I32 _52717_n = _52632_params.len();
	if ((_52717_n > 0LL) && _1a8d93ba7_is_self(_52632_params[0LL].get()._field_decl.ptr())) {
		(_52717_n)--;
	}
	jule::I32 _53217_diff = _52717_n - static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_args.len()));
	{
		
		if ((_53217_diff == 0LL)) {
			_case_begin_1ac1771eb:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_52717_n > 0LL) && _52632_params[(_52717_n - 1LL)].get()._field_decl.get()._field_variadic) {
			_case_begin_1ac177273:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_53217_diff < 0LL) || (_53217_diff > static_cast<jule::I32>(static_cast<jule::I32>(_52632_params.len())))) {
			_case_begin_1ac1772ea:;
			{
				_1a9d640b6_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_1ac17711e:;
	}
	jule::Str _54317_idents = jule::Str();
	for (; (_53217_diff > 0LL); (_53217_diff)--) {
		{
			_54317_idents+=jule::Str(", ", 2) + _52632_params[_52717_n - _53217_diff].get()._field_decl.get()._field_ident;
		}
	_iter_next_1ac1797b4:;
	}
	_iter_end_1ac1797b4:;
	(_54317_idents).mut_slice(2LL);
	_1a9d640b6_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54317_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _1a9d64a89_check_arg(_1a9d63747_FnCallArgChecker* _self_,jule::Ptr<_1a8d971c7_ParamIns>& _55333_p,jule::Ptr<_1a9d71c2d_Data>& _55352_arg,jule::Ptr<_1d7b77374_Token>& _55369_error_token) {
	jule::Bool _55392_ok = jule::Bool();
	if ((*_self_)._field_dynamic_annotation && _1a8d99e44_parameter_uses_generics(_55333_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics)) {
		_55392_ok=(!(_55333_p.get()._field_decl.get()._field_variadic));
		if (_55392_ok) {
			_1a9d60986_DynamicTypeAnnotation _55725_dta = _1a9d60986_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_55333_p,_55352_arg,_55369_error_token,nullptr);
			_55392_ok=_1a9d63071_annotate(&_55725_dta);
		}
		if ((!(_55392_ok))) {
			_1a9d63c97_push_err_token(&(*_self_), _55369_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55392_ok = false;
			return _55392_ok;
		}
	}
	if (_1a9d149d4_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_mutable,_55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token)) {
		_1a9d12bad_check_assign_type((*_self_)._field_e.get()._field_s, _55333_p.get()._field_decl.get()._field_reference,_55333_p.get()._field_kind,_55352_arg,_55369_error_token);
	}
	_55392_ok = true;
	return _55392_ok;
}



inline jule::Bool _1a9d64e41_push(_1a9d63747_FnCallArgChecker* _self_,jule::Ptr<_1a8d971c7_ParamIns>& _58028_p,jule::Ptr<_1d7b09a43_Expr> _58046_arg) {
	jule::Bool _58060_ok = jule::Bool();
	jule::Ptr<_1a9d9ae66_TypeKind> _58117_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _58213_old_immut = (*_self_)._field_e.get()._field_immutable;
	jule::Ptr<_1a9d71c2d_Data> _58317_d = nullptr;
	(*_self_)._field_e.get()._field_immutable=(!(_58028_p.get()._field_decl.get()._field_mutable));
	if ((!((*_self_)._field_dynamic_annotation)) && (!(_58028_p.get()._field_decl.get()._field_variadic))) {
		(*_self_)._field_e.get()._field_prefix=_58028_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	}
	_58317_d=_1a9d8c83c_eval_expr_kind((*_self_)._field_e, _58046_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_58117_old;
	(*_self_)._field_e.get()._field_immutable=_58213_old_immut;
	if ((_58317_d == nullptr)) {
		_58060_ok = false;
		return _58060_ok;
	}
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_58317_d));
	_58060_ok = _1a9d64a89_check_arg(&(*_self_), _58028_p,_58317_d,_58046_arg.get()._field_token);
	return _58060_ok;
}



inline jule::Bool _1a9d652e8_push_variadic(_1a9d63747_FnCallArgChecker* _self_,jule::Ptr<_1a8d971c7_ParamIns>& _60437_p,jule::I32 _60455_i) {
	jule::Bool _60465_ok = jule::Bool();
	_60465_ok=true;
	jule::Bool _60617_variadiced = false;
	jule::Bool _60713_more = (_60455_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_args.len()));
	jule::Ptr<_1a8d89a8d_SliceExprModel> _60817_model = jule::new_ptr<_1a8d89a8d_SliceExprModel>(_1a8d89a8d_SliceExprModel(_60437_p.get()._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1a9d9ae66_TypeKind> _61217_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _61713_variadic = _60437_p.get()._field_kind.get()._field_variadic;
	_60437_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_60437_p.get()._field_kind.get()._field_variadic=_61713_variadic;
	});
	for (; _60455_i < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_args.len())); (_60455_i)++) {
		{
			jule::Ptr<_1d7b09a43_Expr> _62421_arg = (*_self_)._field_args[_60455_i];
			{
				auto &_match_expr{ _62421_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1d7b8a4b9_VariadicExpr>>()) {
					_case_begin_1ac18a0aa:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_60437_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_1ac189b7b:;
					{
						(*_self_)._field_e.get()._field_prefix=_60437_p.get()._field_kind;
					}
				}
				_match_end_1ac189b04:;
			}
			jule::Ptr<_1a9d71c2d_Data> _63721_d = _1a9d8cb4a_eval((*_self_)._field_e, _62421_arg);
			if ((_63721_d == nullptr)) {
				_60465_ok=false;
				goto _iter_next_1ac1892a7;
			}
			if (_63721_d.get()._field_kind.get()._field_variadic) {
				_60617_variadiced=true;
				{
					auto &_match_expr{ _63721_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d89a8d_SliceExprModel>>()) {
						_case_begin_1ac18c761:;
						{
							_60817_model=_63721_d.get()._field_model.operator jule::Ptr<_1a8d89a8d_SliceExprModel>();
							_60817_model.get()._field_elem_kind=_60437_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1ac18c266:;
						{
							_60817_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_63721_d));
						}
					}
					_match_end_1ac18c211:;
				}
				_60437_p.get()._field_kind.get()._field_variadic=true;
				_60465_ok=_60465_ok && _1a9d64a89_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token);
				(_60455_i)++;
				goto _iter_end_1ac1892a7;
			}
			_60465_ok=_60465_ok && _1a9d64a89_check_arg(&(*_self_), _60437_p,_63721_d,_62421_arg.get()._field_token);
			_60817_model.get()._field_elems = jule::alloc_for_append(_60817_model.get()._field_elems,1);_60817_model.get()._field_elems.__push(_63721_d.get()._field_model);
		}
	_iter_next_1ac1892a7:;
	}
	_iter_end_1ac1892a7:;
	(*_self_)._field_e.get()._field_prefix=_61217_old;
	if (_60617_variadiced && _60713_more) {
		_1a9d63c97_push_err_token(&(*_self_), (*_self_)._field_args[_60455_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if ((_60817_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_60817_model));
	}
	return _60465_ok;
}



inline jule::Bool _1a9d65606_check_args(_1a9d63747_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>& _68334_params) {
	jule::Bool _68357_ok = jule::Bool();
	jule::Bool _68413_arg = (*_self_)._field_e.get()._field_arg;
	(*_self_)._field_e.get()._field_arg=true;
	_68357_ok=true;
	jule::I32 _68817_i = 0LL;
	_julec_label_iter:;
	while (_68817_i < static_cast<jule::I32>(static_cast<jule::I32>(_68334_params.len()))) {
		{
			jule::Ptr<_1a8d971c7_ParamIns> _69121_p = _68334_params[_68817_i];
			{
				
				if (_1a8d93ba7_is_self(_69121_p.get()._field_decl.ptr())) {
					_case_begin_1ac1949aa:;
					{
						goto _match_end_1ac193aca;
					}
				}
				else if (_69121_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1ac193eb5:;
					{
						_68357_ok=_1a9d652e8_push_variadic(&(*_self_), _69121_p,_68817_i) && _68357_ok;
						goto _iter_end_1ac193190;
					}
				}
				else if ((*_self_)._field_args.len() <= _68817_i) {
					_case_begin_1ac193ba7:;
					{
						_68357_ok=false;
						goto _iter_end_1ac193190;
					}
				}
				else {
					_case_begin_1ac193b41:;
					{
						_68357_ok=_1a9d64e41_push(&(*_self_), _69121_p,(*_self_)._field_args[_68817_i]) && _68357_ok;
					}
				}
				_match_end_1ac193aca:;
			}
			(_68817_i)++;
		}
	_iter_next_1ac193190:;
	}
	_iter_end_1ac193190:;
	(*_self_)._field_e.get()._field_arg=_68413_arg;
	return _68357_ok;
}



inline jule::Bool _1a9d658ae_check_dynamic_type_annotation(_1a9d63747_FnCallArgChecker* _self_) {
	jule::Bool _71350_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac19713e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9ae66_TypeKind> _1ac19721b_g = *it;
			{
				if ((_1ac19721b_g == nullptr)) {
					_1a9d640b6_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_71350_ok = false;
					return _71350_ok;
				}
			}
			_iter_next_1ac19713e:;
			++it;
			goto _iter_begin_1ac19713e;
		}
		_iter_end_1ac19713e:;
	}
	_71350_ok = true;
	return _71350_ok;
}



inline jule::Bool _1a9d65b12_check(_1a9d63747_FnCallArgChecker* _self_) {
	jule::Bool _72326_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>> _72417_params = _1a9d6432a_get_params(&(*_self_));
	_72326_ok=_1a9d64638_check_counts(&(*_self_), _72417_params);
	if ((!(_72326_ok))) {
		_72326_ok = false;
		return _72326_ok;
	}
	_72326_ok=_1a9d65606_check_args(&(*_self_), _72417_params);
	if (_72326_ok && (*_self_)._field_dynamic_annotation) {
		_72326_ok=_1a9d658ae_check_dynamic_type_annotation(&(*_self_));
	}
	return _72326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d63747_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d6665c_push_err(_1a9d66151_StructLitChecker* _self_,jule::Ptr<_1d7b77374_Token> _74727_token,jule::Str _74742_fmt,jule::Slice<jule::Any> _74755_args) {
	_1a9d73c74_push_err((*_self_)._field_e.ptr(), _74727_token,_74742_fmt,_74755_args);
}



inline void _1a9d6697b_push_suggestion(_1a9d66151_StructLitChecker* _self_,jule::Str _75234_fmt,jule::Slice<jule::Any> _75247_args) {
	_1a9d74093_push_suggestion((*_self_)._field_e.ptr(), _75234_fmt,_75247_args);
}



inline void _1a9d66d44_push_match(_1a9d66151_StructLitChecker* _self_,jule::Ptr<_1a8d84e62_FieldIns>& _75634_f,jule::Ptr<_1a9d71c2d_Data>& _75653_d,jule::Ptr<_1d7b77374_Token>& _75668_error_token) {
	
	if (_1a9d149d4_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_75634_f.get()._field_kind,_75653_d,_75668_error_token)) {
		_1a9d12bad_check_assign_type((*_self_)._field_e.get()._field_s, false,_75634_f.get()._field_kind,_75653_d,_75668_error_token);
	}
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1a8d88196_StructArgExprModel>(_1a8d88196_StructArgExprModel(_75634_f,_75653_d.get()._field_model)));
}



inline void _1a9d67163_check_pair(_1a9d66151_StructLitChecker* _self_,jule::Ptr<_1d7b8b146_FieldExprPair>& _76934_pair,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>& _76961_exprs) {
	jule::Ptr<_1a8d84e62_FieldIns> _77117_f = _1a8d86a68_find_field((*_self_)._field_s.ptr(), _76934_pair.get()._field_field.get()._field_kind);
	if ((_77117_f == nullptr)) {
		_1a9d6665c_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		return;
	}
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _77117_f.get()._field_decl.get()._field_public,_77117_f.get()._field_decl.get()._field_token)))) {
		_1a9d6665c_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
		_1a9d6697b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _76961_exprs;
		auto it = expr.begin();
		_iter_begin_1ac1a5999:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1ac1a5a87_expr = *it;
			{
				{
					auto &_match_expr{ _1ac1a5a87_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8b146_FieldExprPair>>()) {
						_case_begin_1ac1a6291:;
						{
							jule::Ptr<_1d7b8b146_FieldExprPair> _78625_dpair = _1ac1a5a87_expr.get()._field_kind.operator jule::Ptr<_1d7b8b146_FieldExprPair>();
							{
								
								if (_76934_pair == _78625_dpair) {
									_case_begin_1ac1a701c:;
									{
										goto _iter_end_1ac1a5999;
									}
								}
								else if (_76934_pair.get()._field_field.get()._field_kind == _78625_dpair.get()._field_field.get()._field_kind) {
									_case_begin_1ac1a7094:;
									{
										_1a9d6665c_push_err(&(*_self_), _76934_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_76934_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1ac1a5999;
									}
								}
								_match_end_1ac1a6e51:;
							}
						}
					}
					_match_end_1ac1a6219:;
				}
			}
			_iter_next_1ac1a5999:;
			++it;
			goto _iter_begin_1ac1a5999;
		}
		_iter_end_1ac1a5999:;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _79717_prefix = (*_self_)._field_e.get()._field_prefix;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_79717_prefix;
	});
	(*_self_)._field_e.get()._field_prefix=_77117_f.get()._field_kind;
	jule::Ptr<_1a9d71c2d_Data> _80117_d = _1a9d8c83c_eval_expr_kind((*_self_)._field_e, jule::Any(_76934_pair.get()._field_expr));
	if ((_80117_d == nullptr)) {
		return;
	}
	_1a9d66d44_push_match(&(*_self_), _77117_f,_80117_d,_76934_pair.get()._field_field);
}



inline jule::Bool _1a9d67471_ready_exprs(_1a9d66151_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>& _80835_exprs) {
	jule::Bool _80917_ok = true;
	{
		auto &expr = _80835_exprs;
		auto it = expr.begin();
		_iter_begin_1ac1ab21e:;
		if (it != expr.end()) {
			jule::I32 _1ac1ab2b8_i = it - expr.begin();
			jule::Ptr<_1d7b09a43_Expr> _1ac1ab50a_expr = *it;
			{
				{
					auto &_match_expr{ _1ac1ab50a_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8b70c_KeyValPair>>()) {
						_case_begin_1ac1abc58:;
						{
							jule::Ptr<_1d7b8b70c_KeyValPair> _81325_pair = _1ac1ab50a_expr.get()._field_kind.operator jule::Ptr<_1d7b8b70c_KeyValPair>();
							{
								auto &_match_expr{ _81325_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
									_case_begin_1ac1ac40c:;
									{
										goto _match_end_1ac1acb6b;
									}
								}
								else {
									_case_begin_1ac1acbc1:;
									{
										_1a9d6665c_push_err(&(*_self_), _81325_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_80917_ok=false;
										goto _iter_next_1ac1ab21e;
									}
								}
								_match_end_1ac1acb6b:;
							}
							_80835_exprs[_1ac1ab2b8_i].get()._field_kind=jule::Any(jule::new_ptr<_1d7b8b146_FieldExprPair>(_1d7b8b146_FieldExprPair(_81325_pair.get()._field_key.get()._field_token,_81325_pair.get()._field_val)));
						}
					}
					_match_end_1ac1abbd1:;
				}
			}
			_iter_next_1ac1ab21e:;
			++it;
			_1ac1ab2b8_i++;
			goto _iter_begin_1ac1ab21e;
		}
		_iter_end_1ac1ab21e:;
	}
	return _80917_ok;
}



inline void _1a9d676e6_check(_1a9d66151_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1d7b09a43_Expr>>& _83229_exprs) {
	if ((_83229_exprs.len() == 0LL)) {
		return;
	}
	if ((!(_1a9d67471_ready_exprs(&(*_self_), _83229_exprs)))) {
		return;
	}
	jule::Bool _84117_paired = false;
	{
		auto &expr = _83229_exprs;
		auto it = expr.begin();
		_iter_begin_1ac1b0685:;
		if (it != expr.end()) {
			jule::I32 _1ac1b083e_i = it - expr.begin();
			jule::Ptr<_1d7b09a43_Expr> _1ac1b0a70_expr = *it;
			{
				{
					auto &_match_expr{ _1ac1b0a70_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8b146_FieldExprPair>>()) {
						_case_begin_1ac1b4942:;
						{
							jule::Ptr<_1d7b8b146_FieldExprPair> _84525_pair = _1ac1b0a70_expr.get()._field_kind.operator jule::Ptr<_1d7b8b146_FieldExprPair>();
							if ((_1ac1b083e_i > 0LL) && (!(_84117_paired))) {
								_1a9d6665c_push_err(&(*_self_), _84525_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_84117_paired=true;
							_1a9d67163_check_pair(&(*_self_), _84525_pair,_83229_exprs);
						}
					}
					else {
						_case_begin_1ac1b12bd:;
						{
							if (_84117_paired) {
								_1a9d6665c_push_err(&(*_self_), _1ac1b0a70_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1ac1b083e_i >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_s.get()._field_fields.len()))) {
								_1a9d6665c_push_err(&(*_self_), _1ac1b0a70_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1ac1b0685;
							}
							jule::Ptr<_1a8d84e62_FieldIns> _86025_field = (*_self_)._field_s.get()._field_fields[_1ac1b083e_i];
							jule::Ptr<_1a9d9ae66_TypeKind> _86225_prefix = (*_self_)._field_e.get()._field_prefix;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_86225_prefix;
							});
							(*_self_)._field_e.get()._field_prefix=_86025_field.get()._field_kind;
							jule::Ptr<_1a9d71c2d_Data> _86625_d = _1a9d8c83c_eval_expr_kind((*_self_)._field_e, _1ac1b0a70_expr.get()._field_kind);
							if ((_86625_d == nullptr)) {
								goto _iter_next_1ac1b0685;
							}
							_1a9d66d44_push_match(&(*_self_), _86025_field,_86625_d,_1ac1b0a70_expr.get()._field_token);
						}
					}
					_match_end_1ac1b1246:;
				}
			}
			_iter_next_1ac1b0685:;
			++it;
			_1ac1b083e_i++;
			goto _iter_begin_1ac1b0685;
		}
		_iter_end_1ac1b0685:;
	}
	if ((!(_84117_paired))) {
		jule::I32 _87717_n = (*_self_)._field_s.get()._field_fields.len();
		jule::I32 _87821_diff = _87717_n - static_cast<jule::I32>(static_cast<jule::I32>(_83229_exprs.len()));
		{
			
			if ((_87821_diff <= 0LL)) {
				_case_begin_1ac1b7bdc:;
				{
					return;
				}
			}
			_match_end_1ac1b7b10:;
		}
		jule::Str _88421_idents = jule::Str();
		for (; (_87821_diff > 0LL); (_87821_diff)--) {
			{
				_88421_idents+=jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[_87717_n - _87821_diff].get()._field_decl.get()._field_ident;
			}
		_iter_next_1ac1b0d17:;
		}
		_iter_end_1ac1b0d17:;
		(_88421_idents).mut_slice(2LL);
		_1a9d6665c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_88421_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d66151_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d681ca_build_var(_1a9d67c35_RangeChecker* _self_,jule::Ptr<_1d7b8d489_VarDecl>& _90329_decl) {
	jule::Ptr<_1a9d2553e_Var> _90417_v = _1a8da0499_build_var(_90329_decl);
	return _90417_v;
}



inline void _1a9d683a6_set_size_key(_1a9d67c35_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_a=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac1bd011:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1a9d24571_IterRelation>(_1a9d24571_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a9d2553e_Var>()));
			}
		}
		_match_end_1ac1bce89:;
	}
}



inline void _1a9d687b3_check_range_expr_validity(_1a9d67c35_RangeChecker* _self_,jule::Ptr<_1a9d71c2d_Data>& _93449_d,jule::Ptr<_1a9d2553e_Var>& _93460_key,jule::Ptr<_1a9d9ae66_TypeKind>& _93476_k) {
	jule::Bool _93517__mut = _93460_key.get()._field_mutable;
	if (_93517__mut && (!(_1a9d9c30d_mutable(_93476_k.ptr())))) {
		_93517__mut=false;
	}
	_1a9d149d4_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _93517__mut,_93460_key.get()._field_reference,_93460_key.get()._field_kind.get()._field_kind,_93449_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1a9d6897d_check_slice(_1a9d67c35_RangeChecker* _self_) {
	_1a9d683a6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a9da4634_Slc> _95317_slc = _1a9d9dc38_slc((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_95317_slc.get()._field_elem));
	_1a9d687b3_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_95317_slc.get()._field_elem);
}



inline void _1a9d68b59_check_array(_1a9d67c35_RangeChecker* _self_) {
	_1a9d683a6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a9da67ce_Arr> _96617_arr = _1a9d9d9c4_arr((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_96617_arr.get()._field_elem));
	_1a9d687b3_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96617_arr.get()._field_elem);
}



inline void _1a9d68d35_check_map_key_a(_1a9d67c35_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a9da5bda_Map> _97817_m = _1a9d9e6d9_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_a=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_97817_m.get()._field_key));
	jule::Ptr<_1a9d71c2d_Data> _98217_d = jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d)));
	_98217_d.get()._field_kind=_97817_m.get()._field_key;
	_1a9d687b3_check_range_expr_validity(&(*_self_), _98217_d,(*_self_)._field_kind.get()._field_key_a,_97817_m.get()._field_key);
}



inline void _1a9d69011_check_map_key_b(_1a9d67c35_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a9da5bda_Map> _99317_m = _1a9d9e6d9_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_99317_m.get()._field_val));
	jule::Ptr<_1a9d71c2d_Data> _99717_d = jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d)));
	_99717_d.get()._field_kind=_99317_m.get()._field_val;
	_1a9d687b3_check_range_expr_validity(&(*_self_), _99717_d,(*_self_)._field_kind.get()._field_key_b,_99317_m.get()._field_val);
}



inline void _1a9d691dc_check_map(_1a9d67c35_RangeChecker* _self_) {
	_1a9d68d35_check_map_key_a(&(*_self_));
	_1a9d69011_check_map_key_b(&(*_self_));
}



inline void _1a9d693b8_check_str(_1a9d67c35_RangeChecker* _self_) {
	_1a9d683a6_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1d7b79ac4_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_b=_1a9d681ca_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _1a9d6962c_check(_1a9d67c35_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ac1d4a3e:;
		}
		else if ((_1a9d9dc38_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1d3c08:;
			{
				_1a9d6897d_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1a9d9d9c4_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1d3c6e:;
			{
				_1a9d68b59_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1a9d9e6d9_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac1d3cd5:;
			{
				_1a9d691dc_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1ac1d3b92:;
			{
				jule::Ptr<_1a9da06b8_Prim> _103617_prim = _1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr());
				if ((_103617_prim != nullptr) && _1a9da3677_is_str(_103617_prim.ptr())) {
					_1a9d693b8_check_str(&(*_self_));
					return true;
				}
			}
		}
		_match_end_1ac1d3ac6:;
	}
	_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d67c35_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d6a375_prepare_types(_1a9d69dbe_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a8d98a7a_types((*_self_)._field_f.ptr());
	}
}



inline void _1a9d6a5ea_prepare_exprs(_1a9d69dbe_RetTypeChecker* _self_,jule::Ptr<_1d7b09a43_Expr>& _106537_e) {
	if ((_106537_e == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _106537_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8960b_TupleExpr>>()) {
			_case_begin_1ac1da69e:;
			{
				(*_self_)._field_exprs=_106537_e.get()._field_kind.operator jule::Ptr<_1d7b8960b_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1ac1d9e73:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_106537_e);
			}
		}
		_match_end_1ac1d9e1d:;
	}
}



inline void _1a9d6a7c6_ret_vars(_1a9d69dbe_RetTypeChecker* _self_) {
	if (((*_self_)._field_f == nullptr) || _1a8d95318_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		return;
	}
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a9d2553e_Var>>::alloc(0LL,static_cast<jule::I32>((*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len()));
	jule::Ptr<_1a9cdbc53_ScopeChecker> _108317_root_scope = _1a9cddd98_get_root((*_self_)._field_sc);
	jule::I32 _108517_j = 0LL;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ac1dd55e:;
		if (it != expr.end()) {
			jule::I32 _1ac1dd9c1_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ac1ddbd0_ident = *it;
			{
				if ((!(_1d7b79ac4_is_ignore_ident(_1ac1ddbd0_ident.get()._field_kind))) && (!(_1d7b79d6b_is_anon_ident(_1ac1ddbd0_ident.get()._field_kind)))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_108317_root_scope.get()._field_table.get()._field_vars[_108517_j]);
					(_108517_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var(jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1d7b77374_Token>(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),(*_self_)._field_types[_1ac1dd9c1_i])),jule::Ptr<_1a9d72ca6_Value>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>())));
				}
			}
			_iter_next_1ac1dd55e:;
			++it;
			_1ac1dd9c1_i++;
			goto _iter_begin_1ac1dd55e;
		}
		_iter_end_1ac1dd55e:;
	}
	if ((_108517_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	}
}



inline void _1a9d6a9a2_check_exprs(_1a9d69dbe_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _110917_datas = jule::Slice<jule::Ptr<_1a9d71c2d_Data>>::alloc(0LL,static_cast<jule::I32>((*_self_)._field_exprs.len()));
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac1e28a4:;
		if (it != expr.end()) {
			jule::I32 _1ac1e22cc_i = it - expr.begin();
			jule::Ptr<_1d7b09a43_Expr> _1ac1e29a3_expr = *it;
			{
				if (_1ac1e22cc_i >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_types.len()))) {
					goto _iter_end_1ac1e28a4;
				}
				jule::Ptr<_1a9d9ae66_TypeKind> _111621_t = (*_self_)._field_types[_1ac1e22cc_i];
				jule::Ptr<_1a9d71c2d_Data> _111821_d = _1a9d8ce58_eval_expr(_1a9d123a5_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a9db4325_Lookup>((*_self_)._field_sc, 0),_111621_t), _1ac1e29a3_expr);
				if ((_111821_d == nullptr)) {
					goto _iter_next_1ac1e28a4;
				}
				_110917_datas = jule::alloc_for_append(_110917_datas,1);_110917_datas.__push(_111821_d);
				if ((!(_111821_d.get()._field_mutable)) && _1a9d9c30d_mutable(_111821_d.get()._field_kind.ptr())) {
					_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1a9d5e138_AssignTypeChecker _113021_ac = _1a9d5e138_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_111621_t,_111821_d,(*_self_)._field_error_token);
				_1a9d602b0_check(&_113021_ac);
			}
			_iter_next_1ac1e28a4:;
			++it;
			_1ac1e22cc_i++;
			goto _iter_begin_1ac1e28a4;
		}
		_iter_end_1ac1e28a4:;
	}
	if ((_110917_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1a8d8d487_TupleExprModel>(_1a8d8d487_TupleExprModel(_110917_datas)));
	} else if ((_110917_datas.len() == 1LL)) {
		(*_self_)._field_model=_110917_datas[0LL].get()._field_model;
	}
}



inline jule::Bool _1a9d6acb0_check(_1a9d69dbe_RetTypeChecker* _self_,jule::Ptr<_1d7b09a43_Expr>& _114929_e) {
	_1a9d6a375_prepare_types(&(*_self_));
	_1a9d6a5ea_prepare_exprs(&(*_self_), _114929_e);
	_1a9d6a7c6_ret_vars(&(*_self_));
	jule::I32 _115413_n = (*_self_)._field_exprs.len();
	if ((_115413_n == 0LL) && ((*_self_)._field_types.len() > 0LL)) {
		if ((!(_1a8d9602d_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_115413_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1a8d95318_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_115413_n > static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_types.len()))) {
		_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_115413_n < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_types.len()))) {
		_1a9d0c955_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	_1a9d6a9a2_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d69dbe_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d6c0ad_find_package(_1a9d6baa2_SymbolTable* _self_,jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ac1eea04:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac1eeb03_pkg = *it;
			{
				if (_1ac1eeb03_pkg.get()._field_ident == _2535_ident) {
					return _1ac1eeb03_pkg;
				}
			}
			_iter_next_1ac1eea04:;
			++it;
			goto _iter_begin_1ac1eea04;
		}
		_iter_end_1ac1eea04:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1a9d6c3bb_select_package(_1a9d6baa2_SymbolTable* _self_,jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ac200cbe:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac1eec9b_pkg = *it;
			{
				if (_3737_selector(_1ac1eec9b_pkg)) {
					return _1ac1eec9b_pkg;
				}
			}
			_iter_next_1ac200cbe:;
			++it;
			goto _iter_begin_1ac200cbe;
		}
		_iter_end_1ac200cbe:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d6c773_find_var(_1a9d6baa2_SymbolTable* _self_,jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return _1a9d6e027___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d6cb2a_find_type_alias(_1a9d6baa2_SymbolTable* _self_,jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return _1a9d6e478___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9d6ced2_find_struct(_1a9d6baa2_SymbolTable* _self_,jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac2048a5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac2049a4_s = *it;
			{
				if ((_1ac2049a4_s.get()._field_ident == _6434_ident) && (_1ac2049a4_s.get()._field_cpp_linked == _6446_cpp_linked)) {
					return _1ac2049a4_s;
				}
			}
			_iter_next_1ac2048a5:;
			++it;
			goto _iter_begin_1ac2048a5;
		}
		_iter_end_1ac2048a5:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9d6d389_find_fn(_1a9d6baa2_SymbolTable* _self_,jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac2062d0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac2063ce_f = *it;
			{
				if ((_1ac2063ce_f.get()._field_ident == _7530_ident) && (_1ac2063ce_f.get()._field_cpp_linked == _7542_cpp_linked)) {
					return _1ac2063ce_f;
				}
			}
			_iter_next_1ac2062d0:;
			++it;
			goto _iter_begin_1ac2062d0;
		}
		_iter_end_1ac2062d0:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d6d697_find_trait(_1a9d6baa2_SymbolTable* _self_,jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ac2078b9:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> _1ac2079b8_t = *it;
			{
				if (_1ac2079b8_t.get()._field_ident == _8633_ident) {
					return _1ac2079b8_t;
				}
			}
			_iter_next_1ac2078b9:;
			++it;
			goto _iter_begin_1ac2078b9;
		}
		_iter_end_1ac2078b9:;
	}
	return nullptr;
}



inline jule::Ptr<_1a943b309_Enum> _1a9d6d9a5_find_enum(_1a9d6baa2_SymbolTable* _self_,jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ac208bd9:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b309_Enum> _1ac208cd8_e = *it;
			{
				if (_1ac208cd8_e.get()._field_ident == _9732_ident) {
					return _1ac208cd8_e;
				}
			}
			_iter_next_1ac208bd9:;
			++it;
			goto _iter_begin_1ac208bd9;
		}
		_iter_end_1ac208bd9:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d6e027___find_var(_1a9d6baa2_SymbolTable* _self_,jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I32 _11021_i = ((*_self_)._field_vars.len() - 1LL);
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a9d2553e_Var> _11225_v = (*_self_)._field_vars[_11021_i];
				if ((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_1ac20a290:;
		}
		_iter_end_1ac20a290:;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1ac20aa21:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d2553e_Var> _1ac20bc0e_v = *it;
				{
					if ((_1ac20bc0e_v.get()._field_ident == _10829_ident) && (_1ac20bc0e_v.get()._field_cpp_linked == _10841_cpp_linked)) {
						return _1ac20bc0e_v;
					}
				}
				_iter_next_1ac20aa21:;
				++it;
				goto _iter_begin_1ac20aa21;
			}
			_iter_end_1ac20aa21:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d6e478___find_type_alias(_1a9d6baa2_SymbolTable* _self_,jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I32 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a9d9a22e_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];
				if ((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_1ac20d1c7:;
		}
		_iter_end_1ac20d1c7:;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1ac20d958:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d9a22e_TypeAlias> _1ac20eb46_ta = *it;
				{
					if ((_1ac20eb46_ta.get()._field_ident == _12736_ident) && (_1ac20eb46_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
						return _1ac20eb46_ta;
					}
				}
				_iter_next_1ac20d958:;
				++it;
				goto _iter_begin_1ac20d958;
			}
			_iter_end_1ac20d958:;
		}
	}
	return nullptr;
}



inline jule::Any _1a9d6e830_def_by_ident(_1a9d6baa2_SymbolTable* _self_,jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac210ae2:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1ac210c35_v = *it;
			{
				if ((_1ac210c35_v.get()._field_ident == _14831_ident) && (_1ac210c35_v.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ac210c35_v);
				}
			}
			_iter_next_1ac210ae2:;
			++it;
			goto _iter_begin_1ac210ae2;
		}
		_iter_end_1ac210ae2:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ac210b8b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9a22e_TypeAlias> _1ac210d23_ta = *it;
			{
				if ((_1ac210d23_ta.get()._field_ident == _14831_ident) && (_1ac210d23_ta.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ac210d23_ta);
				}
			}
			_iter_next_1ac210b8b:;
			++it;
			goto _iter_begin_1ac210b8b;
		}
		_iter_end_1ac210b8b:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac212792:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1ac211b59_s = *it;
			{
				if ((_1ac211b59_s.get()._field_ident == _14831_ident) && (_1ac211b59_s.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ac211b59_s);
				}
			}
			_iter_next_1ac212792:;
			++it;
			goto _iter_begin_1ac212792;
		}
		_iter_end_1ac212792:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac21352e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac21284c_f = *it;
			{
				if ((_1ac21284c_f.get()._field_ident == _14831_ident) && (_1ac21284c_f.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1ac21284c_f);
				}
			}
			_iter_next_1ac21352e:;
			++it;
			goto _iter_begin_1ac21352e;
		}
		_iter_end_1ac21352e:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ac210e11:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> _1ac213584_t = *it;
			{
				if (_1ac213584_t.get()._field_ident == _14831_ident) {
					return jule::Any(_1ac213584_t);
				}
			}
			_iter_next_1ac210e11:;
			++it;
			goto _iter_begin_1ac210e11;
		}
		_iter_end_1ac210e11:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ac214d7c:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b309_Enum> _1ac2148c6_e = *it;
			{
				if (_1ac2148c6_e.get()._field_ident == _14831_ident) {
					return jule::Any(_1ac2148c6_e);
				}
			}
			_iter_next_1ac214d7c:;
			++it;
			goto _iter_begin_1ac214d7c;
		}
		_iter_end_1ac214d7c:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a9d6ec81_is_duplicated_ident(_1a9d6baa2_SymbolTable* _self_,jule::U32 _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac215ed2:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> &_1ac2160d1_v = *it;
			{
				if (((static_cast<jule::U32>(_1ac2160d1_v) != _19534_itself) && (_1ac2160d1_v.get()._field_ident == _19551_ident)) && (_1ac2160d1_v.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ac215ed2:;
			++it;
			goto _iter_begin_1ac215ed2;
		}
		_iter_end_1ac215ed2:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ac2172e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9a22e_TypeAlias> &_1ac2161be_ta = *it;
			{
				if (((static_cast<jule::U32>(_1ac2161be_ta) != _19534_itself) && (_1ac2161be_ta.get()._field_ident == _19551_ident)) && (_1ac2161be_ta.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ac2172e1:;
			++it;
			goto _iter_begin_1ac2172e1;
		}
		_iter_end_1ac2172e1:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ac2173e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> &_1ac2182ae_s = *it;
			{
				if (((static_cast<jule::U32>(_1ac2182ae_s) != _19534_itself) && (_1ac2182ae_s.get()._field_ident == _19551_ident)) && (_1ac2182ae_s.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ac2173e0:;
			++it;
			goto _iter_begin_1ac2173e0;
		}
		_iter_end_1ac2173e0:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ac218413:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> &_1ac219326_f = *it;
			{
				if (((static_cast<jule::U32>(_1ac219326_f) != _19534_itself) && (_1ac219326_f.get()._field_ident == _19551_ident)) && (_1ac219326_f.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1ac218413:;
			++it;
			goto _iter_begin_1ac218413;
		}
		_iter_end_1ac218413:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ac21a624:;
		if (it != expr.end()) {
			jule::Ptr<_1a8ea7a57_Trait> &_1ac21a349_t = *it;
			{
				if ((static_cast<jule::U32>(_1ac21a349_t) != _19534_itself) && (_1ac21a349_t.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1ac21a624:;
			++it;
			goto _iter_begin_1ac21a624;
		}
		_iter_end_1ac21a624:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ac21a6ce:;
		if (it != expr.end()) {
			jule::Ptr<_1a943b309_Enum> &_1ac2162ac_e = *it;
			{
				if ((static_cast<jule::U32>(_1ac2162ac_e) != _19534_itself) && (_1ac2162ac_e.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1ac21a6ce:;
			++it;
			goto _iter_begin_1ac21a6ce;
		}
		_iter_end_1ac21a6ce:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d6baa2_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9d72118_is_nil(_1a9d71c2d_Data* _self_) {
	return _1a9d9bd35_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a9d7237c_is_void(_1a9d71c2d_Data* _self_) {
	return _1a9d9c099_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a9d725e1_is_const(_1a9d71c2d_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1a9d728ee_good_operand(_1a9d71c2d_Data* _self_,jule::Ptr<_1a9d71c2d_Data>& _9636_other) {
	return (((_1a9d9d023_prim(_9636_other.get()._field_kind.ptr()) == nullptr) || (!(_1a9da38db_is_any(_1a9d9d023_prim(_9636_other.get()._field_kind.ptr()).ptr())))) && (_1a9d9e475_trt(_9636_other.get()._field_kind.ptr()) == nullptr)) && (!(_1a9d9bd35_is_nil((*_self_)._field_kind.ptr())));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d71c2d_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d72ca6_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a9d73c74_push_err(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _12427_token,jule::Str _12442_fmt,jule::Slice<jule::Any> _12455_args) {
	_1a9d0c955_push_err((*_self_)._field_s.ptr(), _12427_token,_12442_fmt,_12455_args);
}



inline void _1a9d74093_push_suggestion(_1a9d7379b_Eval* _self_,jule::Str _12934_fmt,jule::Slice<jule::Any> _12947_args) {
	_1a9d0cc74_push_suggestion((*_self_)._field_s.ptr(), _12934_fmt,_12947_args);
}



inline void _1a9d7426e_allow_builtin(_1a9d7379b_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a9d7444a_disallow_builtin(_1a9d7379b_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1a9d746ae_is_unsafe(_1a9d7379b_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a9d74923_is_global(_1a9d7379b_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d0a03a_Sema>>()) {
			_case_begin_1ac223d03:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac224089:;
			{
				return false;
			}
		}
		_match_end_1ac223d8b:;
	}
}



inline jule::Bool _1a9d74c31_apply_numeric_prefix(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _15644_d) {
	if (((((_15644_d == nullptr) || (_15644_d.get()._field_cast_kind != nullptr)) || (!(_1a9d725e1_is_const(_15644_d.ptr())))) || (_1a9d9d023_prim(_15644_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr)) {
		return false;
	}
	jule::Ptr<_1a9da06b8_Prim> _16413_prim = _1a9d9d023_prim((*_self_)._field_prefix.ptr());
	if ((_16413_prim == nullptr)) {
		return false;
	}
	{
		
		if (_1a9cd9c84_is_float(_1a9da0a2b_to_str(_16413_prim.ptr()))) {
			_case_begin_1ac2271be:;
			{
				_15644_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>((*((*_self_)._field_prefix)));
				_1a9c4a145_set_f64(_15644_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a9c493ca_as_f64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a9cd9415_is_sig_int(_1a9da0a2b_to_str(_16413_prim.ptr()))) {
			_case_begin_1ac226de4:;
			{
				if ((!(_1a9d5ca1b_sig_assignable(_1a9da0a2b_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>((*((*_self_)._field_prefix)));
				_1a9c49650_set_i64(_15644_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a9cd9701_is_unsig_int(_1a9da0a2b_to_str(_16413_prim.ptr()))) {
			_case_begin_1ac226e6b:;
			{
				if ((!(_1a9d5cb4d_unsig_assignable(_1a9da0a2b_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>((*((*_self_)._field_prefix)));
				_1a9c498c5_set_u64(_15644_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_15644_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ac227103:;
	}
	return true;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d74e95_lit_nil(_1a9d7379b_Eval* _self_) {
	jule::Ptr<_1a9c46e77_Const> _19317_constant = static__1a9c47ae3_new_nil();
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_19317_constant)),false,_19317_constant));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d752a3_lit_str(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _20423_l) {
	jule::Str _20517_s = _20423_l.get()._field_value.slice(1LL,(_20423_l.get()._field_value.len() - 1LL));
	if (_1d7b786c7_is_raw_str(_20423_l.get()._field_value)) {
		_20517_s=_1a9d5b9d7_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	} else {
		_20517_s=_1a9d5bc5c_to_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	}
	jule::Ptr<_1a9c46e77_Const> _21117_constant = static__1a9c4764d_new_str(_20517_s);
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_21117_constant)),false,_21117_constant));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d755b1_lit_bool(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _22524_l) {
	jule::Ptr<_1a9c46e77_Const> _22617_constant = static__1a9c473a6_new_bool((_22524_l.get()._field_value == jule::Str("true", 4)));
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_22617_constant)),false,_22617_constant));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d758be_lit_rune(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _23924_l) {
	
	
	jule::Str _24313_lt = _23924_l.get()._field_value.slice(1LL,(_23924_l.get()._field_value.len() - 1LL));
	jule::I32 _24413_r = _1a9d5b8a5_to_rune(static_cast<jule::Slice<jule::U8>>(_24313_lt));
	jule::Ptr<_1a9d71c2d_Data> _24517_data = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24413_r)))));
	jule::Bool _25313_is_ascii = _1a9d59dd1_is_ascii(_24413_r);
	if (_25313_is_ascii) {
		_24517_data.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24517_data.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i32", 3)), 5)));
	}
	_24517_data.get()._field_model=jule::Any(jule::new_ptr<_1a8d916cc_RuneExprModel>(_1a8d916cc_RuneExprModel(_24413_r)));
	_24517_data.get()._field_is_rune=true;
	return _24517_data;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d75bcc_lit_float(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _26925_l) {
	
	jule::F64 _27213_f = ({
		auto except = _1a96c9058_parse_float(_26925_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});
	jule::Ptr<_1a9c46e77_Const> _27317_constant = static__1a9c478e5_new_f64(_27213_f);
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_27317_constant)),false,_27317_constant));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d75eda_lit_int(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _28727_l) {
	
	jule::Str _29017_lit = _28727_l.get()._field_value;
	jule::I32 _29117_base = 0LL;
	{
		
		if (_1d7728e59_has_prefix(_29017_lit,jule::Str("0x", 2))) {
			_case_begin_1ac23ab72:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=16LL;
			}
		}
		else if (_1d7728e59_has_prefix(_29017_lit,jule::Str("0b", 2))) {
			_case_begin_1ac23ad1a:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=2LL;
			}
		}
		else if (_1d7728e59_has_prefix(_29017_lit,jule::Str("0o", 2))) {
			_case_begin_1ac23ad81:;
			{
				(_29017_lit).mut_slice(2LL);
				_29117_base=8LL;
			}
		}
		else if ((_29017_lit[0LL] == '0') && (_29017_lit.len() > 1LL)) {
			_case_begin_1ac23a6bb:;
			{
				(_29017_lit).mut_slice(1LL);
				_29117_base=8LL;
			}
		}
		else {
			_case_begin_1ac23a655:;
			{
				_29117_base=10LL;
			}
		}
		_match_end_1ac23a5de:;
	}
	jule::Ptr<_1a9d71c2d_Data> _31117_d = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a9c46e77_Const>()));
	jule::Bool _31717_ok = true;
	jule::I64 _31813_sig = ({
		auto except = _1a990d512_parse_int(_29017_lit,_29117_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31717_ok=false;
			0LL;
		});
	});
	if (_31717_ok) {
		_31117_d.get()._field_constant=static__1a9c45e76_new_i64(_31813_sig);
		_31117_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32817_unsig = ({
			auto except = _1a9833d61_parse_uint(_29017_lit,_29117_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a9d73c74_push_err(&(*_self_), _28727_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a9d74093_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});
		_31117_d.get()._field_constant=static__1a9c47164_new_u64(_32817_unsig);
		_31117_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("uint", 4)), 5)));
	}
	_31117_d.get()._field_model=jule::Any(_31117_d.get()._field_constant);
	if ((!(_1a9d74c31_apply_numeric_prefix(&(*_self_), _31117_d)))) {
		_1a9d96291_fit_bitsize(_31117_d);
	}
	return _31117_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d762e8_lit_num(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr>& _34927_l) {
	{
		
		if (_1d7b792dd_is_float(_34927_l.get()._field_value)) {
			_case_begin_1ac2448e5:;
			{
				return _1a9d75bcc_lit_float(&(*_self_), _34927_l);
			}
		}
		else {
			_case_begin_1ac24431d:;
			{
				return _1a9d75eda_lit_int(&(*_self_), _34927_l);
			}
		}
		_match_end_1ac244252:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d76606_eval_lit(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b89a29_LitExpr> _35827_lit) {
	{
		
		if (_1d7a3099c_is_nil(_35827_lit.ptr())) {
			_case_begin_1ac24640d:;
			{
				return _1a9d74e95_lit_nil(&(*_self_));
			}
		}
		else if (_1d7b78430_is_str(_35827_lit.get()._field_value)) {
			_case_begin_1ac2464a7:;
			{
				return _1a9d752a3_lit_str(&(*_self_), _35827_lit);
			}
		}
		else if (_1d7b79046_is_bool(_35827_lit.get()._field_value)) {
			_case_begin_1ac24652e:;
			{
				return _1a9d755b1_lit_bool(&(*_self_), _35827_lit);
			}
		}
		else if (_1d7b7896e_is_rune(_35827_lit.get()._field_value)) {
			_case_begin_1ac246232:;
			{
				return _1a9d758be_lit_rune(&(*_self_), _35827_lit);
			}
		}
		else if (_1d7b79585_is_num(_35827_lit.get()._field_value)) {
			_case_begin_1ac2462a9:;
			{
				return _1a9d762e8_lit_num(&(*_self_), _35827_lit);
			}
		}
		else {
			_case_begin_1ac245cc0:;
			{
				return nullptr;
			}
		}
		_match_end_1ac245c04:;
	}
}



inline jule::Any _1a9d76914_find_builtins(_1a9d7379b_Eval* _self_,jule::Str _37532_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d02351_ImportInfo>>()) {
			_case_begin_1ac249510:;
			{
				jule::Any _37821_def = _1a9d96082_find_builtins_import(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a9d02351_ImportInfo>());
				if (_37821_def != jule::Any(jule::Any(nullptr))) {
					return _37821_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d0a03a_Sema>>()) {
			_case_begin_1ac249576:;
			{
				jule::Any _38321_def = _1a9d96c20_find_builtins_sema(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a9d0a03a_Sema>());
				if (_38321_def != jule::Any(jule::Any(nullptr))) {
					return _38321_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1ac2495ed:;
			{
				jule::Any _38821_def = _1a9d96c20_find_builtins_sema(_37532_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>().get()._field_s);
				if (_38821_def != jule::Any(jule::Any(nullptr))) {
					return _38821_def;
				}
			}
		}
		_match_end_1ac2492bd:;
	}
	if ((*_self_)._field_dis_builtin) {
		return jule::Any(nullptr);
	}
	return _1a9dc291b_find_builtin_def(_37532_ident);
}



inline jule::Any _1a9d76cbb_get_def(_1a9d7379b_Eval* _self_,jule::Str _39926_ident,jule::Bool _39938_cpp_linked) {
	if ((!(_39938_cpp_linked))) {
		jule::Ptr<_1a943b309_Enum> _40121_enm = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db41d2_find_enum((*_self_)._field_lookup, _39926_ident);
		if ((_40121_enm != nullptr)) {
			return jule::Any(_40121_enm);
		}
	}
	jule::Ptr<_1a9d2553e_Var> _40717_v = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db2ea0_find_var((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_40717_v != nullptr)) {
		return jule::Any(_40717_v);
	}
	jule::Ptr<_1a8d94db7_Fn> _41217_f = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db3ab6_find_fn((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_41217_f != nullptr)) {
		return jule::Any(_41217_f);
	}
	jule::Ptr<_1a8d82b41_Struct> _41717_s = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db370e_find_struct((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_41717_s != nullptr)) {
		return jule::Any(_41717_s);
	}
	jule::Ptr<_1a9d9a22e_TypeAlias> _42217_ta = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db3357_find_type_alias((*_self_)._field_lookup, _39926_ident,_39938_cpp_linked);
	if ((_42217_ta != nullptr)) {
		return jule::Any(_42217_ta);
	}
	return _1a9d76914_find_builtins(&(*_self_), _39926_ident);
}



inline void _1a9d77041_push_reference(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d9b121_ReferenceStack>& _43038_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1ac254240:;
			{
				jule::Ptr<_1a9cdbc53_ScopeChecker> _43321_sc = _1a9cddd98_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>());
				if ((!(_1a8d9c0cd_exist_1(_43038_references.ptr(), _43321_sc.get()._field_owner)))) {
					_1a8d9bcc0_push(_43038_references.ptr(), jule::Any(_43321_sc.get()._field_owner));
				}
			}
		}
		else {
			_case_begin_1ac2531a6:;
			{
				if (((*_self_)._field_owner != nullptr) && (!(_1a8d9c0cd_exist_0(_43038_references.ptr(), (*_self_)._field_owner)))) {
					_1a8d9bcc0_push(_43038_references.ptr(), jule::Any((*_self_)._field_owner));
				}
			}
		}
		_match_end_1ac252ea8:;
	}
}



inline void _1a9d772b6_push_reference_to_fn(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d98063_FnIns>& _44444_f) {
	_1a9d77041_push_reference(&(*_self_), _44444_f.get()._field_references);
}



inline void _1a9d7753b_push_reference_to_var(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d2553e_Var>& _44845_v) {
	if ((_44845_v.get()._field_references != nullptr)) {
		_1a9d77041_push_reference(&(*_self_), _44845_v.get()._field_references);
	}
}



inline void _1a9d77805_push_reference_to_struct(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d857c0_StructIns>& _45448_s) {
	_1a9d77041_push_reference(&(*_self_), _45448_s.get()._field_references);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d77b02___eval_enum(_1a9d7379b_Eval* _self_,jule::Ptr<_1a943b309_Enum> _45830_enm) {
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_45830_enm, 3))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d77ea9_eval_enum(_1a9d7379b_Eval* _self_,jule::Ptr<_1a943b309_Enum> _47032_enm,jule::Ptr<_1d7b77374_Token> _47044_error_token) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _47032_enm.get()._field_public,_47032_enm.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _47044_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_47032_enm.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _1a9d77b02___eval_enum(&(*_self_), _47032_enm);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d782b7___eval_struct(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d857c0_StructIns> _48032_s) {
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_48032_s, 0))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_48032_s)),true,nullptr));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7866e_eval_struct(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d857c0_StructIns> _49334_s,jule::Ptr<_1d7b77374_Token> _49349_error_token) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _49334_s.get()._field_decl.get()._field_public,_49334_s.get()._field_decl.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _49349_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_49334_s.get()._field_decl.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a9d78c9b_check_deprecated(&(*_self_), _49334_s.get()._field_decl.get()._field_directives,_49349_error_token);
	return _1a9d782b7___eval_struct(&(*_self_), _49334_s);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7897c_eval_fn_ins(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d98063_FnIns> _50530_f) {
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_50530_f, 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_50530_f)),false,nullptr));
}



inline void _1a9d78c9b_check_deprecated(_1a9d7379b_Eval* _self_,jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _51840_directives,jule::Ptr<_1d7b77374_Token> _51882_tok) {
	if (_1a9d746ae_is_unsafe(&(*_self_))) {
		return;
	}
	jule::Ptr<_1d7a4352b_Directive> _52313_d = _1a9d95bec_find_directive(_51840_directives,jule::Str("deprecated", 10));
	if ((_52313_d != nullptr)) {
		if ((_52313_d.get()._field_args.len() == 0LL)) {
			_1a9d73c74_push_err(&(*_self_), _51882_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a9d73c74_push_err(&(*_self_), _51882_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_52313_d.get()._field_args[0LL].get()._field_kind)}));
		}
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d79153_eval_fn(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d94db7_Fn> _53430_f,jule::Ptr<_1d7b77374_Token> _53438_error_token) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _53430_f.get()._field_public,_53430_f.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _53438_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_53430_f.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a9d78c9b_check_deprecated(&(*_self_), _53430_f.get()._field_directives,_53438_error_token);
	jule::Ptr<_1a8d98063_FnIns> _54317_ins = _1a8d96a12_instance(_53430_f);
	_1a9d772b6_push_reference_to_fn(&(*_self_), _54317_ins);
	return _1a9d7897c_eval_fn_ins(&(*_self_), _54317_ins);
}



inline void _1a9d79560_push_illegal_cycle_error(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d2553e_Var>& _54844_v1,jule::Ptr<_1a9d2553e_Var>& _54855_v2,jule::Str& _54870_message) {
	
	jule::Str _55113_refers_to = _1d77ca8ce_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54844_v1.get()._field_ident),jule::Any(_54855_v2.get()._field_ident)}));
	(_54870_message).buffer.insert(0, (((_1d68791dc_repeat(jule::Str(" ", 1),4LL) + _55113_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a9d79906_check_cross_cycle(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d2553e_Var>& _55537_v,jule::Str& _55551_message) {
	{
		auto &expr = _55537_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1ac26ee70:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> &_1ac27006e_d = *it;
			{
				if (_1ac27006e_d == (*_self_)._field_owner) {
					_1a9d79560_push_illegal_cycle_error(&(*_self_), _55537_v,_1ac27006e_d,_55551_message);
					return false;
				}
				if ((!(_1a9d79906_check_cross_cycle(&(*_self_), _1ac27006e_d,_55551_message)))) {
					_1a9d79560_push_illegal_cycle_error(&(*_self_), _55537_v,_1ac27006e_d,_55551_message);
					return false;
				}
			}
			_iter_next_1ac26ee70:;
			++it;
			goto _iter_begin_1ac26ee70;
		}
		_iter_end_1ac26ee70:;
	}
	return true;
}



inline jule::Bool _1a9d79cad_check_illegal_cycles(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d2553e_Var>& _57444_v,jule::Ptr<_1d7b77374_Token> _57453_decl_token) {
	jule::Bool _57475_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57475_ok = true;
		return _57475_ok;
	}
	if ((*_self_)._field_owner == _57444_v) {
		_1a9d73c74_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57475_ok = false;
		return _57475_ok;
	}
	jule::Str _58617_message = jule::Str();
	if ((!(_1a9d79906_check_cross_cycle(&(*_self_), _57444_v,_58617_message)))) {
		jule::Str _58921_err_msg = _58617_message;
		_58617_message=jule::Str();
		_1a9d79560_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57444_v,_58617_message);
		_58921_err_msg=_58921_err_msg + _58617_message;
		_1a9d73c74_push_err(&(*_self_), _57453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58921_err_msg)}));
		_57475_ok = false;
		return _57475_ok;
	}
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57444_v);
	_57475_ok = true;
	return _57475_ok;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a165_eval_var(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d2553e_Var> _60131_v,jule::Ptr<_1d7b77374_Token> _60140_error_token) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _60131_v.get()._field_public,_60131_v.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _60140_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_60131_v.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a9d78c9b_check_deprecated(&(*_self_), _60131_v.get()._field_directives,_60140_error_token);
	_60131_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d0a03a_Sema>>()) {
			_case_begin_1ac279694:;
			{
				jule::Bool _61517_ok = _1a9d79cad_check_illegal_cycles(&(*_self_), _60131_v,_60140_error_token);
				if ((!(_61517_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1ac27971b:;
			{
				if ((!(_60131_v.get()._field_reference)) || _1a9d746ae_is_unsafe(&(*_self_))) {
					goto _match_end_1ac27963e;
				}
				jule::Ptr<_1a9cdbc53_ScopeChecker> _62321_s = (*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>();
				while ((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr)) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1ac27a5da:;
				}
				_iter_end_1ac27a5da:;
				if (((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_anon) && (_60131_v.get()._field_scope != _62321_s.get()._field_owner.get()._field_scope)) {
					_1a9d73c74_push_err(&(*_self_), _60140_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_60131_v.get()._field_ident)}));
				}
			}
		}
		_match_end_1ac27963e:;
	}
	_1a9d7753b_push_reference_to_var(&(*_self_), _60131_v);
	if ((!(_60131_v.get()._field_cpp_linked)) && ((_60131_v.get()._field_value == nullptr) || (_60131_v.get()._field_value.get()._field_data == nullptr))) {
		if (_60131_v.get()._field_constant) {
			_1a9d1d4b0_check_type_var((*_self_)._field_s, _60131_v,jule::Trait<_1a9db4325_Lookup>((*_self_)._field_s, 3));
			if ((_60131_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			}
		}
	}
	if ((_60131_v.get()._field_kind == nullptr) || (_60131_v.get()._field_kind.get()._field_kind == nullptr)) {
		if ((_60131_v.get()._field_scope != nullptr)) {
			return nullptr;
		}
		_1a9d1d4b0_check_type_var((*_self_)._field_s, _60131_v,(*_self_)._field_lookup);
		if ((_60131_v.get()._field_kind == nullptr) || (_60131_v.get()._field_kind.get()._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1a9d71c2d_Data> _66317_d = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(_60131_v.get()._field_kind.get()._field_kind,jule::Ptr<_1a9d9ae66_TypeKind>(),_60131_v.get()._field_mutable,_60131_v.get()._field_reference,(!(_60131_v.get()._field_constant)),jule::Bool(),jule::Any(jule::Any(_60131_v)),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
	if (((!(_60131_v.get()._field_cpp_linked)) && _1a9d258e6_is_initialized(_60131_v.ptr())) && (_60131_v.get()._field_value.get()._field_data != nullptr)) {
		_66317_d.get()._field_is_rune=_60131_v.get()._field_value.get()._field_data.get()._field_is_rune;
	}
	if (_60131_v.get()._field_constant && (_60131_v.get()._field_value.get()._field_data.get()._field_constant != nullptr)) {
		_66317_d.get()._field_constant=jule::new_ptr<_1a9c46e77_Const>((*(_60131_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66317_d.get()._field_model=jule::Any(_66317_d.get()._field_constant);
	}
	if (_1a9d725e1_is_const(_66317_d.ptr())) {
		_1a9d74c31_apply_numeric_prefix(&(*_self_), _66317_d);
	}
	return _66317_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a51c_eval_type_alias(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9a22e_TypeAlias> _68738_ta,jule::Ptr<_1d7b77374_Token> _68754_error_token) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _68738_ta.get()._field_public,_68738_ta.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _68754_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68738_ta.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_68738_ta.get()._field_used=true;
	jule::Trait<_1a9d9aa37_Kind> _69617_kind = _68738_ta.get()._field_kind.get()._field_kind.get()._field_kind;
	jule::Ptr<_1a9d71c2d_Data> _69717_d = nullptr;
	{
		auto &_match_expr{ _69617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d857c0_StructIns>>()) {
			_case_begin_1ac28ad26:;
			{
				_69717_d=_1a9d782b7___eval_struct(&(*_self_), _69617_kind.operator jule::Ptr<_1a8d857c0_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a943b309_Enum>>()) {
			_case_begin_1ac28a5ea:;
			{
				_69717_d=_1a9d77b02___eval_enum(&(*_self_), _69617_kind.operator jule::Ptr<_1a943b309_Enum>());
			}
		}
		else {
			_case_begin_1ac289066:;
			{
				_69717_d=jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_68738_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1a9c46e77_Const>()));
				if (_68738_ta.get()._field_cpp_linked) {
					_69717_d.get()._field_kind.get()._field_cpp_ident=_68738_ta.get()._field_ident;
				} else {
					_69717_d.get()._field_kind.get()._field_cpp_ident=_68738_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				}
				_69717_d.get()._field_model=jule::Any(_69717_d.get()._field_kind);
			}
		}
		_match_end_1ac289011:;
	}
	_69717_d.get()._field_kind.get()._field_generic=_68738_ta.get()._field_generic;
	return _69717_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7a8c4_eval_def(_1a9d7379b_Eval* _self_,jule::Any _72131_def,jule::Ptr<_1d7b77374_Token> _72141_ident) {
	{
		auto &_match_expr{ _72131_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac28d015:;
			{
				return _1a9d7a165_eval_var(&(*_self_), _72131_def.operator jule::Ptr<_1a9d2553e_Var>(),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a943b309_Enum>>()) {
			_case_begin_1ac28d07b:;
			{
				return _1a9d77ea9_eval_enum(&(*_self_), _72131_def.operator jule::Ptr<_1a943b309_Enum>(),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1ac28d0e2:;
			{
				return _1a9d7866e_eval_struct(&(*_self_), _1a8d83070_instance(_72131_def.operator jule::Ptr<_1a8d82b41_Struct>()),_72141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d94db7_Fn>>()) {
			_case_begin_1ac28d158:;
			{
				jule::Ptr<_1a8d94db7_Fn> _73021_f = _72131_def.operator jule::Ptr<_1a8d94db7_Fn>();
				if ((_73021_f.get()._field_ident != jule::Str("init", 4))) {
					return _1a9d79153_eval_fn(&(*_self_), _73021_f,_72141_ident);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1ac28d1be:;
			{
				return _1a9d7897c_eval_fn_ins(&(*_self_), _72131_def.operator jule::Ptr<_1a8d98063_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
			_case_begin_1ac28d235:;
			{
				return _1a9d7a51c_eval_type_alias(&(*_self_), _72131_def.operator jule::Ptr<_1a9d9a22e_TypeAlias>(),_72141_ident);
			}
		}
		_match_end_1ac28cdb1:;
	}
	_1a9d73c74_push_err(&(*_self_), _72141_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_72141_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7abd2_eval_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b8a0e0_IdentExpr> _74329_ident) {
	jule::Any _74417_def = _1a9d76cbb_get_def(&(*_self_), _74329_ident.get()._field_ident,_74329_ident.get()._field_cpp_linked);
	return _1a9d7a8c4_eval_def(&(*_self_), _74417_def,_74329_ident.get()._field_token);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7aee0_eval_unary(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8a2cc_UnaryExpr> _74834_u) {
	_1a9d8d3cb_UnaryEval _74917_unary = static__1a9d8d882_new(_self_);
	return _1a9d8eb2a_eval(&_74917_unary, _74834_u);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b2ed_eval_variadic(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8a4b9_VariadicExpr> _75337_v) {
	if ((_75337_v.get()._field_expr == nullptr)) {
		_1a9d73c74_push_err(_self_.ptr(), _75337_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _75917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75917_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _76317_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_75337_v.get()._field_expr));
	if ((_76317_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a9d9ccae_variadicable(_76317_d.get()._field_kind.ptr())))) {
		_1a9d73c74_push_err(_self_.ptr(), _75337_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_76317_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	jule::Ptr<_1a9da4634_Slc> _77313_slc = _1a9d9dc38_slc(_76317_d.get()._field_kind.ptr());
	_76317_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(_77313_slc.get()._field_elem.get()._field_cpp_ident,_77313_slc.get()._field_elem.get()._field_generic,true,_77313_slc.get()._field_elem.get()._field_kind));
	return _76317_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b60b_eval_unsafe(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b89c16_UnsafeExpr> _78335_u) {
	jule::Bool _78413_unsafety = _self_.get()._field_unsafety;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a9d71c2d_Data> _78717_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_78335_u.get()._field_expr));
	_self_.get()._field_unsafety=_78413_unsafety;
	return _78717_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7b919_eval_arr(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8b8e9_SliceExpr> _79432_s) {
	jule::Ptr<_1a9da67ce_Arr> _79617_pt = _1a9d9d9c4_arr(_self_.get()._field_prefix.ptr());
	jule::Ptr<_1a9da67ce_Arr> _79817_arr = jule::new_ptr<_1a9da67ce_Arr>(_1a9da67ce_Arr(false,0LL,_79617_pt.get()._field_elem));
	jule::Bool _80417_filled = false;
	if ((_79432_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79432_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1d7b8a4b9_VariadicExpr>>()) {
				_case_begin_1ac2a018c:;
				{
					if ((_79432_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1d7b8a4b9_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1ac2a0115;
					}
					if (_79617_pt.get()._field_auto) {
						_1a9d73c74_push_err(_self_.ptr(), _79432_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_80417_filled=true;
					_79432_s.get()._field_exprs=_79432_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1ac2a0115:;
		}
	}
	_79817_arr.get()._field_n=static_cast<jule::I32>(_79432_s.get()._field_exprs.len());
	if ((!(_79617_pt.get()._field_auto))) {
		if (_79817_arr.get()._field_n > _79617_pt.get()._field_n) {
			_1a9d73c74_push_err(_self_.ptr(), _79432_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_79817_arr.get()._field_n < _79617_pt.get()._field_n) {
			_79817_arr.get()._field_n=_79617_pt.get()._field_n;
		}
	}
	jule::Ptr<_1a8d8c83d_ArrayExprModel> _83317_model = jule::new_ptr<_1a8d8c83d_ArrayExprModel>(_1a8d8c83d_ArrayExprModel(_79817_arr,jule::Slice<jule::Any>()));
	if (_80417_filled) {
		_83317_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_83317_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I32>(_79432_s.get()._field_exprs.len()));
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _84217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_79817_arr.get()._field_elem;
	{
		auto &expr = _79432_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac2a5835:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1ac2a5967_elem = *it;
			{
				jule::Ptr<_1a9d71c2d_Data> _84521_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_1ac2a5967_elem));
				if ((_84521_d == nullptr)) {
					goto _iter_next_1ac2a5835;
				}
				_1a9d12bad_check_assign_type(_self_.get()._field_s, false,_79817_arr.get()._field_elem,_84521_d,_79432_s.get()._field_token);
				_83317_model.get()._field_elems = jule::alloc_for_append(_83317_model.get()._field_elems,1);_83317_model.get()._field_elems.__push(_84521_d.get()._field_model);
			}
			_iter_next_1ac2a5835:;
			++it;
			goto _iter_begin_1ac2a5835;
		}
		_iter_end_1ac2a5835:;
	}
	_self_.get()._field_prefix=_84217_prefix;
	if (_80417_filled) {
		_83317_model.get()._field_elems = jule::alloc_for_append(_83317_model.get()._field_elems,1);_83317_model.get()._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_79817_arr, 10))),jule::Ptr<_1a9d9ae66_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_83317_model)),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7bcc1_eval_exp_slc(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8b8e9_SliceExpr> _86936_s,jule::Ptr<_1a9d9ae66_TypeKind> _86955_elem_type) {
	jule::Ptr<_1a9da4634_Slc> _87017_slc = jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_86955_elem_type));
	jule::Ptr<_1a8d89a8d_SliceExprModel> _87417_model = jule::new_ptr<_1a8d89a8d_SliceExprModel>(_1a8d89a8d_SliceExprModel(_86955_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I32>(_86936_s.get()._field_exprs.len()))));
	jule::Ptr<_1a9d9ae66_TypeKind> _87917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_87017_slc.get()._field_elem;
	{
		auto &expr = _86936_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac2aa890:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1ac2aa98e_elem = *it;
			{
				jule::Ptr<_1a9d71c2d_Data> _88221_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_1ac2aa98e_elem));
				if ((_88221_d == nullptr)) {
					goto _iter_next_1ac2aa890;
				}
				_1a9d12bad_check_assign_type(_self_.get()._field_s, false,_87017_slc.get()._field_elem,_88221_d,_86936_s.get()._field_token);
				_87417_model.get()._field_elems = jule::alloc_for_append(_87417_model.get()._field_elems,1);_87417_model.get()._field_elems.__push(_88221_d.get()._field_model);
			}
			_iter_next_1ac2aa890:;
			++it;
			goto _iter_begin_1ac2aa890;
		}
		_iter_end_1ac2aa890:;
	}
	_self_.get()._field_prefix=_87917_prefix;
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_87017_slc, 7))),jule::Ptr<_1a9d9ae66_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_87417_model)),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7c0ce_eval_slice_expr(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8b8e9_SliceExpr> _90039_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a9d9d9c4_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ac2adeae:;
				{
					return _1a9d7b919_eval_arr(_self_, _90039_s);
				}
			}
			else if ((_1a9d9dc38_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ac2ae036:;
				{
					jule::Ptr<_1a9da4634_Slc> _90625_pt = _1a9d9dc38_slc(_self_.get()._field_prefix.ptr());
					return _1a9d7bcc1_eval_exp_slc(_self_, _90039_s,_90625_pt.get()._field_elem);
				}
			}
			_match_end_1ac2add9e:;
		}
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _91117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	if ((_90039_s.get()._field_exprs.len() == 0LL)) {
		_1a9d73c74_push_err(_self_.ptr(), _90039_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _91917_first_elem = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_90039_s.get()._field_exprs[0LL]));
	if ((_91917_first_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _92417_d = _1a9d7bcc1_eval_exp_slc(_self_, _90039_s,_91917_first_elem.get()._field_kind);
	_self_.get()._field_prefix=_91117_prefix;
	return _92417_d;
}



inline void _1a9d7c442_check_integer_indexing_by_data(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _93054_d,jule::Ptr<_1d7b77374_Token> _93064_token) {
	jule::Str _93113_err_key = _1a9d97ec9_check_data_for_integer_indexing(_93054_d);
	{
		auto &_match_expr{ _93113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ac2b4dc7:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ac2b4bc9:;
			{
				_1a9d73c74_push_err(&(*_self_), _93064_token,_93113_err_key,jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_93054_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1ac2b458b:;
			{
				_1a9d73c74_push_err(&(*_self_), _93064_token,_93113_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac2b4a86:;
	}
}



inline void _1a9d7c7e9_indexing_ptr(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _94236_d,jule::Ptr<_1a9d71c2d_Data>& _94251_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _94266_i) {
	_1a9d7c442_check_integer_indexing_by_data(&(*_self_), _94251_index,_94266_i.get()._field_token);
	jule::Ptr<_1a9da723b_Ptr> _94517_ptr = _1a9d9d4eb_ptr(_94236_d.get()._field_kind.ptr());
	{
		
		if (_1a9da7c0e_is_unsafe(_94517_ptr.ptr())) {
			_case_begin_1ac2b7d86:;
			{
				_1a9d73c74_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!(_1a9d746ae_is_unsafe(&(*_self_))))) {
			_case_begin_1ac2b7e0d:;
			{
				_1a9d73c74_push_err(&(*_self_), _94266_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac2b7c76:;
	}
	_94236_d.get()._field_kind=_94517_ptr.get()._field_elem;
}



inline void _1a9d7cbb2_indexing_arr(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _95736_d,jule::Ptr<_1a9d71c2d_Data>& _95751_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _95766_i) {
	jule::Ptr<_1a9da67ce_Arr> _95817_arr = _1a9d9d9c4_arr(_95736_d.get()._field_kind.ptr());
	_95736_d.get()._field_kind=_95817_arr.get()._field_elem;
	_1a9d7c442_check_integer_indexing_by_data(&(*_self_), _95751_index,_95766_i.get()._field_token);
	if (_1a9d725e1_is_const(_95751_index.ptr()) && (_1a9c493ca_as_f64(_95751_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_95817_arr.get()._field_n))))) {
		_1a9d73c74_push_err(&(*_self_), _95766_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a9d7d07a_indexing_slc(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _96636_d,jule::Ptr<_1a9d71c2d_Data>& _96651_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _96666_i) {
	jule::Ptr<_1a9da4634_Slc> _96717_slc = _1a9d9dc38_slc(_96636_d.get()._field_kind.ptr());
	_96636_d.get()._field_kind=_96717_slc.get()._field_elem;
	_1a9d7c442_check_integer_indexing_by_data(&(*_self_), _96651_index,_96666_i.get()._field_token);
	if ((!(_1a9d725e1_is_const(_96651_index.ptr())))) {
		return;
	}
	{
		auto &_match_expr{ _96636_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d89a8d_SliceExprModel>>()) {
			_case_begin_1ac2c0410:;
			{
				jule::Ptr<_1a8d89a8d_SliceExprModel> _97721_m = _96636_d.get()._field_model.operator jule::Ptr<_1a8d89a8d_SliceExprModel>();
				jule::F64 _97817_indx = _1a9c493ca_as_f64(_96651_index.get()._field_constant.ptr());
				if (_97817_indx >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_97721_m.get()._field_elems.len())))) {
					_1a9d73c74_push_err(&(*_self_), _96666_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96636_d.get()._field_model=_97721_m.get()._field_elems[static_cast<jule::I32>(static_cast<jule::U64>(_97817_indx))];
					_96636_d.get()._field_decl=true;
				}
			}
		}
		_match_end_1ac2c03aa:;
	}
}



inline void _1a9d7d443_indexing_map(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _98836_d,jule::Ptr<_1a9d71c2d_Data>& _98851_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _98870_i) {
	if ((_98851_index == nullptr)) {
		return;
	}
	jule::Ptr<_1a9da5bda_Map> _99317_m = _1a9d9e6d9_map(_98836_d.get()._field_kind.ptr());
	_1a9d5e138_AssignTypeChecker _99417_atc = _1a9d5e138_AssignTypeChecker((*_self_)._field_s,_99317_m.get()._field_key,_98851_index,_98870_i.get()._field_token);
	_1a9d602b0_check(&_99417_atc);
	_98836_d.get()._field_kind=_99317_m.get()._field_val;
}



inline void _1a9d7d80b_indexing_str(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _100536_d,jule::Ptr<_1a9d71c2d_Data>& _100551_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _100566_i) {
	
	_100536_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_100551_index == nullptr)) {
		return;
	}
	_1a9d7c442_check_integer_indexing_by_data(&(*_self_), _100551_index,_100566_i.get()._field_token);
	if ((!(_1a9d725e1_is_const(_100551_index.ptr())))) {
		_100536_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a9d725e1_is_const(_100536_d.ptr())) {
		jule::Ptr<_1d7b77374_Token> _102117_error_token = _100566_i.get()._field_token;
		jule::I64 _102217_j = _1a9c48e02_as_i64(_100551_index.get()._field_constant.ptr());
		jule::Str _102317_s = _1a9c48929_read_str(_100536_d.get()._field_constant.ptr());
		if (static_cast<jule::I32>(_102217_j) >= static_cast<jule::I32>(static_cast<jule::I32>(_102317_s.len()))) {
			_1a9d73c74_push_err(&(*_self_), _102117_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1a9c498c5_set_u64(_100536_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102317_s[static_cast<jule::I32>(_102217_j)])));
		}
	}
}



inline void _1a9d7dbc4_to_indexing(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _103235_d,jule::Ptr<_1a9d71c2d_Data>& _103250_index,jule::Ptr<_1d7b897e8_IndexingExpr>& _103269_i) {
	{
		
		if ((_1a9d9d4eb_ptr(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac2d1784:;
			{
				_1a9d7c7e9_indexing_ptr(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a9d9d9c4_arr(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac2d180b:;
			{
				_1a9d7cbb2_indexing_arr(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a9d9dc38_slc(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac2d1883:;
			{
				_1a9d7d07a_indexing_slc(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a9d9e6d9_map(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac2d190a:;
			{
				_1a9d7d443_indexing_map(&(*_self_), _103235_d,_103250_index,_103269_i);
				return;
			}
		}
		else if ((_1a9d9d023_prim(_103235_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac2d1982:;
			{
				jule::Ptr<_1a9da06b8_Prim> _104717_prim = _1a9d9d023_prim(_103235_d.get()._field_kind.ptr());
				{
					
					if (_1a9da3677_is_str(_104717_prim.ptr())) {
						_case_begin_1ac2d616d:;
						{
							_1a9d7d80b_indexing_str(&(*_self_), _103235_d,_103250_index,_103269_i);
							return;
						}
					}
					_match_end_1ac2d60b3:;
				}
			}
		}
		_match_end_1ac2d1663:;
	}
	_1a9d73c74_push_err(&(*_self_), _103269_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_103235_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1a9d7e0c0_push_generics_from_index_data(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _105854_decl,jule::Ptr<_1d7b897e8_IndexingExpr>& _105881_i) {
	{
		auto &_match_expr{ _105881_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8a2cc_UnaryExpr>>()) {
			_case_begin_1ac2d92b4:;
			{
				jule::Ptr<_1a9d71c2d_Data> _106321_d = _1a9d7aee0_eval_unary(_self_, _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d7b8a2cc_UnaryExpr>());
				if ((!(_106321_d.get()._field_decl))) {
					_1a9d73c74_push_err(_self_.ptr(), _105881_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(jule::Ptr<_1d7b77374_Token>(),jule::Any(jule::Any(_106321_d.get()._field_kind)))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a0e75b_TypeDecl>>()) {
			_case_begin_1ac2d932a:;
			{
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(_105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d7a0e75b_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
			_case_begin_1ac2d858d:;
			{
				jule::Ptr<_1d7b8a0e0_IdentExpr> _107421_expr = _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d7b8a0e0_IdentExpr>();
				_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(jule::Ptr<_1d7b77374_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_107421_expr.get()._field_token,_107421_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>())))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8960b_TupleExpr>>()) {
			_case_begin_1ac2d8604:;
			{
				{
					auto &expr = _105881_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1d7b8960b_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ac2dd96c:;
					if (it != expr.end()) {
						jule::Ptr<_1d7b09a43_Expr> _1ac2dd9b1_expr = *it;
						{
							{
								auto &_match_expr{ _1ac2dd9b1_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1d7a0e75b_TypeDecl>>()) {
									_case_begin_1ac2de220:;
									{
										_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(_1ac2dd9b1_expr.get()._field_kind.operator jule::Ptr<_1d7a0e75b_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
									_case_begin_1ac2de286:;
									{
										jule::Ptr<_1d7b8a0e0_IdentExpr> _108729_expr = _1ac2dd9b1_expr.get()._field_kind.operator jule::Ptr<_1d7b8a0e0_IdentExpr>();
										_105854_decl.get()._field_generics = jule::alloc_for_append(_105854_decl.get()._field_generics,1);_105854_decl.get()._field_generics.__push(jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(jule::Ptr<_1d7b77374_Token>(),jule::Any(jule::Any(jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_108729_expr.get()._field_token,_108729_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>())))))));
									}
								}
								_match_end_1ac2de198:;
							}
						}
						_iter_next_1ac2dd96c:;
						++it;
						goto _iter_begin_1ac2dd96c;
					}
					_iter_end_1ac2dd96c:;
				}
			}
		}
		else {
			_case_begin_1ac2d8527:;
			{
				_1a9d73c74_push_err(_self_.ptr(), _105881_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1ac2d84c2:;
	}
	return true;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7e4aa_eval_ident_decl_from_indexing(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1a9d71c2d_Data>& _110354_d,jule::Ptr<_1d7b897e8_IndexingExpr>& _110369_i) {
	jule::Ptr<_1d7a0e75b_TypeDecl> _110417_tdecl = jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl());
	jule::Ptr<_1d7a16d5c_IdentTypeDecl> _110517_decl = nullptr;
	{
		auto &_match_expr{ _110369_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
			_case_begin_1ac2e3202:;
			{
				jule::Ptr<_1d7b8a0e0_IdentExpr> _110821_expr = _110369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d7b8a0e0_IdentExpr>();
				_110517_decl=jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_110821_expr.get()._field_token,_110821_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>()));
				_110417_tdecl.get()._field_kind=jule::Any(_110517_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a893_NsSelectionExpr>>()) {
			_case_begin_1ac2e3268:;
			{
				jule::Ptr<_1d7b8a893_NsSelectionExpr> _111521_expr = _110369_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1d7b8a893_NsSelectionExpr>();
				_110517_decl=jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_111521_expr.get()._field_ident,_111521_expr.get()._field_ident.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>()));
				_110417_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1d7a17049_NamespaceTypeDecl>(_1d7a17049_NamespaceTypeDecl(_111521_expr.get()._field_ns,_110517_decl)));
			}
		}
		else {
			_case_begin_1ac2e2465:;
			{
				_1a9d73c74_push_err(_self_.ptr(), _110369_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac2e2410:;
	}
	if ((!(_1a9d7e0c0_push_generics_from_index_data(_self_, _110517_decl,_110369_i)))) {
		return nullptr;
	}
	return _1a9d8436c_eval_type(_self_.ptr(), _110417_tdecl);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d7e7a7_eval_indexing(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b897e8_IndexingExpr> _113437_i) {
	jule::Ptr<_1a9d9ae66_TypeKind> _113517_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113517_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _113917_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_113437_i.get()._field_expr));
	if ((_113917_d == nullptr)) {
		return nullptr;
	}
	if (_113917_d.get()._field_decl) {
		return _1a9d7e4aa_eval_ident_decl_from_indexing(_self_, _113917_d,_113437_i);
	}
	_1a9d71c2d_Data _114917_old_d = (*(_113917_d));
	jule::Ptr<_1a9d71c2d_Data> _115117_index = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_113437_i.get()._field_index));
	if ((_115117_index == nullptr)) {
		return nullptr;
	}
	_113917_d.get()._field_decl=false;
	_1a9d7dbc4_to_indexing(_self_.ptr(), _113917_d,_115117_index,_113437_i);
	if (_1a9d725e1_is_const(_113917_d.ptr())) {
		_113917_d.get()._field_decl=false;
		_113917_d.get()._field_model=jule::Any(_113917_d.get()._field_constant);
	} else if (_113917_d.get()._field_decl) {
		_113917_d.get()._field_decl=false;
	} else {
		_113917_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8a011_IndexingExprModel>(_1a8d8a011_IndexingExprModel(_113437_i.get()._field_token,jule::new_ptr<_1a9d71c2d_Data>(_114917_old_d),_115117_index)));
	}
	return _113917_d;
}



inline std::tuple<jule::Ptr<_1a9d71c2d_Data>,jule::Ptr<_1a9d71c2d_Data>> _1a9d7eab5_eval_slicing_exprs(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8c059_SlicingExpr>& _118243_s) {
	jule::Ptr<_1a9d9ae66_TypeKind> _118317_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118317_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _118717_l = nullptr;
	jule::Ptr<_1a9d71c2d_Data> _118817_r = nullptr;
	if ((_118243_s.get()._field_start != nullptr)) {
		_118717_l=_1a9d8c83c_eval_expr_kind(_self_, jule::Any(_118243_s.get()._field_start));
		if ((_118717_l != nullptr)) {
			_1a9d7c442_check_integer_indexing_by_data(_self_.ptr(), _118717_l,_118243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_118717_l=jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1a9c45e76_new_i64(0LL)));
		_118717_l.get()._field_model=jule::Any(_118717_l.get()._field_constant);
	}
	if ((_118243_s.get()._field_to != nullptr)) {
		_118817_r=_1a9d8c83c_eval_expr_kind(_self_, jule::Any(_118243_s.get()._field_to));
		if ((_118817_r != nullptr)) {
			_1a9d7c442_check_integer_indexing_by_data(_self_.ptr(), _118817_r,_118243_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_118717_l,_118817_r);
}



inline void _1a9d7ed3a_slicing_arr(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _121731_d) {
	jule::Ptr<_1a9d9ae66_TypeKind> _121817_elem_type = _1a9d9d9c4_arr(_121731_d.get()._field_kind.ptr()).get()._field_elem;
	_121731_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_121817_elem_type)), 7)));
	_121731_d.get()._field_lvalue=false;
	_121731_d.get()._field_mutable=_121731_d.get()._field_mutable || (!(_1a9d9c30d_mutable(_121817_elem_type.ptr())));
}



inline void _1a9d80203_slicing_str(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _123231_d,jule::Ptr<_1a9d71c2d_Data>& _123242_l,jule::Ptr<_1a9d71c2d_Data>& _123253_r) {
	_123231_d.get()._field_lvalue=false;
	_123231_d.get()._field_mutable=true;
	if ((!(_1a9d725e1_is_const(_123231_d.ptr())))) {
		return;
	}
	if ((_123242_l == nullptr) || (_123253_r == nullptr)) {
		_123231_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a9d725e1_is_const(_123242_l.ptr()) && _1a9d725e1_is_const(_123253_r.ptr())) {
		jule::I64 _124517_left = _1a9c48e02_as_i64(_123242_l.get()._field_constant.ptr());
		if ((_124517_left < 0LL)) {
			return;
		}
		jule::Str _125017_s = _1a9c48929_read_str(_123231_d.get()._field_constant.ptr());
		jule::I64 _125121_right = 0LL;
		if ((_123253_r == nullptr)) {
			_125121_right=static_cast<jule::I64>(static_cast<jule::I64>(_125017_s.len()));
		} else {
			_125121_right=static_cast<jule::I64>(_1a9c48e02_as_i64(_123253_r.get()._field_constant.ptr()));
		}
		if (_124517_left > _125121_right) {
			return;
		}
		_1a9c49dc0_set_str(_123231_d.get()._field_constant.ptr(), _125017_s.slice(static_cast<jule::I32>(_124517_left),static_cast<jule::I32>(_125121_right)));
		_123231_d.get()._field_decl=true;
	} else {
		_123231_d.get()._field_constant=nullptr;
	}
}



inline void _1a9d80665_check_slicing(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data>& _126837_d,jule::Ptr<_1a9d71c2d_Data>& _126848_l,jule::Ptr<_1a9d71c2d_Data>& _126859_r,jule::Ptr<_1d7b8c059_SlicingExpr>& _126870_s) {
	{
		
		if ((_1a9d9d9c4_arr(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac30b649:;
			{
				_1a9d7ed3a_slicing_arr(&(*_self_), _126837_d);
				return;
			}
		}
		else if ((_1a9d9dc38_slc(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac30b6c1:;
			{
				return;
			}
		}
		else if ((_1a9d9d023_prim(_126837_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac30b748:;
			{
				jule::Ptr<_1a9da06b8_Prim> _127617_prim = _1a9d9d023_prim(_126837_d.get()._field_kind.ptr());
				{
					
					if (_1a9da3677_is_str(_127617_prim.ptr())) {
						_case_begin_1ac30dbac:;
						{
							_1a9d80203_slicing_str(&(*_self_), _126837_d,_126848_l,_126859_r);
							return;
						}
					}
					_match_end_1ac30db02:;
				}
			}
		}
		_match_end_1ac30b54a:;
	}
	_1a9d73c74_push_err(&(*_self_), _126870_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_126837_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d80973_eval_slicing(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8c059_SlicingExpr> _128736_s) {
	jule::Ptr<_1a9d71c2d_Data> _128817_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_128736_s.get()._field_expr));
	if ((_128817_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _129318_l;
	jule::Ptr<_1a9d71c2d_Data> _129325_r;
	std::tie(_129318_l,_129325_r) = _1a9d7eab5_eval_slicing_exprs(_self_, _128736_s);
	if ((_129318_l == nullptr)) {
		return _128817_d;
	}
	_128817_d.get()._field_decl=false;
	_1a9d80665_check_slicing(_self_.ptr(), _128817_d,_129318_l,_129325_r,_128736_s);
	_128817_d.get()._field_cast_kind=nullptr;
	if (_1a9d725e1_is_const(_128817_d.ptr())) {
		_128817_d.get()._field_decl=false;
		_128817_d.get()._field_model=jule::Any(_128817_d.get()._field_constant);
	} else if (_128817_d.get()._field_decl) {
		_128817_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1a8d8b232_SlicingExprModel> _131221_model = jule::new_ptr<_1a8d8b232_SlicingExprModel>(_1a8d8b232_SlicingExprModel(_128736_s.get()._field_token,_128817_d.get()._field_model,_129318_l.get()._field_model,jule::Any()));
		if ((_129325_r != nullptr)) {
			_131221_model.get()._field_right=_129325_r.get()._field_model;
		}
		_128817_d.get()._field_model=jule::Any(_131221_model);
	}
	return _128817_d;
}



inline void _1a9d80d3b_cast_ptr(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _132531_t,jule::Ptr<_1a9d71c2d_Data> _132549_d,jule::Ptr<_1d7b77374_Token> _132559_error_token) {
	jule::Ptr<_1a9da3bc7_Sptr> _132613_sptr = _1a9d9d287_sptr(_132549_d.get()._field_kind.ptr());
	if ((_132613_sptr != nullptr)) {
		if ((!(_1a9d9b62b_equals(_1a9d9d4eb_ptr(_132531_t.ptr()).get()._field_elem, _132613_sptr.get()._field_elem)))) {
			_1a9d73c74_push_err(&(*_self_), _132559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_132549_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_132531_t.ptr()))}));
		}
		return;
	}
	if ((!(_1a9d746ae_is_unsafe(&(*_self_))))) {
		_1a9d73c74_push_err(&(*_self_), _132559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a9da06b8_Prim> _133913_prim = _1a9d9d023_prim(_132549_d.get()._field_kind.ptr());
	if ((_1a9d9d4eb_ptr(_132549_d.get()._field_kind.ptr()) == nullptr) && ((_133913_prim == nullptr) || (!(_1a9cd9998_is_int(_1a9da0a2b_to_str(_133913_prim.ptr())))))) {
		_1a9d73c74_push_err(&(*_self_), _132559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_132549_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_132531_t.ptr()))}));
	}
	_132549_d.get()._field_constant=nullptr;
}



inline void _1a9d81204_cast_struct(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _134734_t,jule::Ptr<_1a9d71c2d_Data> _134752_d,jule::Ptr<_1d7b77374_Token> _134762_error_token) {
	jule::Ptr<_1a8ea7a57_Trait> _134817_tr = _1a9d9e475_trt(_134752_d.get()._field_kind.ptr());
	if ((_134817_tr == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _134762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_134752_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_134734_t.ptr()))}));
		return;
	}
	jule::Ptr<_1a8d857c0_StructIns> _135417_s = _1a9d9e211_strct(_134734_t.ptr());
	_1a9d77805_push_reference_to_struct(&(*_self_), _135417_s);
	if ((!(_1a8d8415e_is_implements(_135417_s.get()._field_decl.ptr(), _134817_tr)))) {
		_1a9d73c74_push_err(&(*_self_), _134762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_134752_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_134734_t.ptr()))}));
	}
}



inline void _1a9d815bc_cast_ref(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _136231_t,jule::Ptr<_1a9d71c2d_Data> _136249_d,jule::Ptr<_1d7b77374_Token> _136259_error_token) {
	jule::Ptr<_1a9da3bc7_Sptr> _136317_sptr = _1a9d9d287_sptr(_136231_t.ptr());
	jule::Ptr<_1a9da723b_Ptr> _136517_ptr = _1a9d9d4eb_ptr(_136249_d.get()._field_kind.ptr());
	if ((_136517_ptr != nullptr) && _1a9d9b62b_equals(_136317_sptr.get()._field_elem, _136517_ptr.get()._field_elem)) {
		if ((!(_1a9d746ae_is_unsafe(&(*_self_))))) {
			_1a9d73c74_push_err(&(*_self_), _136259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_1a9d9e211_strct(_136317_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1a9d81204_cast_struct(&(*_self_), _136317_sptr.get()._field_elem,_136249_d,_136259_error_token);
		return;
	}
	_1a9d73c74_push_err(&(*_self_), _136259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_136249_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_136231_t.ptr()))}));
}



inline void _1a9d81985_cast_slc(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _138431_t,jule::Ptr<_1a9d71c2d_Data> _138449_d,jule::Ptr<_1d7b77374_Token> _138459_error_token) {
	if ((_1a9d9d760_enm(_138449_d.get()._field_kind.ptr()) != nullptr)) {
		if ((_1a9d9d023_prim(_1a9d9d760_enm(_138449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a9da3677_is_str(_1a9d9d023_prim(_1a9d9d760_enm(_138449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr())))) {
			_1a9d73c74_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_138431_t.ptr()))}));
			return;
		}
	} else if ((_1a9d9d023_prim(_138449_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9da3677_is_str(_1a9d9d023_prim(_138449_d.get()._field_kind.ptr()).ptr())))) {
		_1a9d73c74_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_138431_t.ptr()))}));
		return;
	}
	_138431_t=_1a9d9dc38_slc(_138431_t.ptr()).get()._field_elem;
	jule::Ptr<_1a9da06b8_Prim> _139613_prim = _1a9d9d023_prim(_138431_t.ptr());
	if ((_139613_prim == nullptr) || ((!(_1a9da1c4c_is_u8(_139613_prim.ptr()))) && (!(_1a9da1774_is_i32(_139613_prim.ptr()))))) {
		_1a9d73c74_push_err(&(*_self_), _138459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_138449_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_138431_t.ptr()))}));
	}
}



inline void _1a9d81ca4_cast_str(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _140231_d,jule::Ptr<_1d7b77374_Token> _140241_error_token) {
	if ((_1a9d9d760_enm(_140231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a943b309_Enum> _140421_e = _1a9d9d760_enm(_140231_d.get()._field_kind.ptr());
		if ((_1a9d9d023_prim(_140421_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1a9da3677_is_str(_1a9d9d023_prim(_140421_e.get()._field_kind.get()._field_kind.ptr()).ptr())) {
			return;
		}
	}
	if ((_1a9d9d023_prim(_140231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9da06b8_Prim> _141117_prim = _1a9d9d023_prim(_140231_d.get()._field_kind.ptr());
		if ((!(_1a9da1c4c_is_u8(_141117_prim.ptr()))) && (!(_1a9da1774_is_i32(_141117_prim.ptr())))) {
			_1a9d73c74_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a9d9b31d_to_str(_140231_d.get()._field_kind.ptr()))}));
		}
		return;
	}
	if ((_1a9d9dc38_slc(_140231_d.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a9d9b31d_to_str(_140231_d.get()._field_kind.ptr()))}));
		return;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _142317_t = _1a9d9dc38_slc(_140231_d.get()._field_kind.ptr()).get()._field_elem;
	jule::Ptr<_1a9da06b8_Prim> _142413_prim = _1a9d9d023_prim(_142317_t.ptr());
	if ((_142413_prim == nullptr) || ((!(_1a9da1c4c_is_u8(_142413_prim.ptr()))) && (!(_1a9da1774_is_i32(_142413_prim.ptr()))))) {
		_1a9d73c74_push_err(&(*_self_), _140241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a9d9b31d_to_str(_140231_d.get()._field_kind.ptr()))}));
	}
}



inline void _1a9d8216c_cast_int(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _143031_t,jule::Ptr<_1a9d71c2d_Data> _143049_d,jule::Ptr<_1d7b77374_Token> _143059_error_token) {
	if (_1a9d725e1_is_const(_143049_d.ptr())) {
		jule::Ptr<_1a9da06b8_Prim> _143217_prim = _1a9d9d023_prim(_143031_t.ptr());
		{
			
			if (_1a9cd9415_is_sig_int(_143217_prim.get()._field_kind)) {
				_case_begin_1ac336311:;
				{
					_1a9c49650_set_i64(_143049_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_143049_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a9cd9701_is_unsig_int(_143217_prim.get()._field_kind)) {
				_case_begin_1ac336388:;
				{
					_1a9c498c5_set_u64(_143049_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_143049_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ac336245:;
		}
	}
	if ((_1a9d9d760_enm(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a943b309_Enum> _144217_e = _1a9d9d760_enm(_143049_d.get()._field_kind.ptr());
		if (_1a9cda02b_is_num(_1a9d9b31d_to_str(_144217_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	if ((_1a9d9d287_sptr(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9da06b8_Prim> _144917_prim = _1a9d9d023_prim(_143031_t.ptr());
		if ((!(_1a9da319e_is_uintptr(_144917_prim.ptr())))) {
			_1a9d73c74_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_143031_t.ptr()))}));
		}
		return;
	}
	if ((_1a9d9d4eb_ptr(_143049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a9da06b8_Prim> _145617_prim = _1a9d9d023_prim(_143031_t.ptr());
		if (_1a9da319e_is_uintptr(_145617_prim.ptr())) {
		} else if ((!(_1a9d746ae_is_unsafe(&(*_self_))))) {
			_1a9d73c74_push_err(&(*_self_), _143059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_1a9da1774_is_i32(_145617_prim.ptr()))) && (!(_1a9da19d8_is_i64(_145617_prim.ptr())))) && (!(_1a9da1eb1_is_u16(_145617_prim.ptr())))) && (!(_1a9da2225_is_u32(_145617_prim.ptr())))) && (!(_1a9da2489_is_u64(_145617_prim.ptr())))) {
			_1a9d73c74_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_143031_t.ptr()))}));
		}
		return;
	}
	jule::Ptr<_1a9da06b8_Prim> _146713_prim = _1a9d9d023_prim(_143049_d.get()._field_kind.ptr());
	if ((_146713_prim != nullptr) && _1a9cda02b_is_num(_1a9da0a2b_to_str(_146713_prim.ptr()))) {
		return;
	}
	_1a9d73c74_push_err(&(*_self_), _143059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_143049_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_143031_t.ptr()))}));
}



inline void _1a9d82535_cast_num(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _147531_t,jule::Ptr<_1a9d71c2d_Data> _147549_d,jule::Ptr<_1d7b77374_Token> _147559_error_token) {
	if (_1a9d725e1_is_const(_147549_d.ptr())) {
		jule::Ptr<_1a9da06b8_Prim> _147717_prim = _1a9d9d023_prim(_147531_t.ptr());
		{
			
			if (_1a9cd9c84_is_float(_147717_prim.get()._field_kind)) {
				_case_begin_1ac343de0:;
				{
					_1a9c4a145_set_f64(_147549_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a9c493ca_as_f64(_147549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a9cd9415_is_sig_int(_147717_prim.get()._field_kind)) {
				_case_begin_1ac343e67:;
				{
					_1a9c49650_set_i64(_147549_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_147549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1a9cd9701_is_unsig_int(_147717_prim.get()._field_kind)) {
				_case_begin_1ac343ede:;
				{
					_1a9c498c5_set_u64(_147549_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_147549_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ac343d13:;
		}
	}
	if ((_1a9d9d760_enm(_147549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a943b309_Enum> _148917_e = _1a9d9d760_enm(_147549_d.get()._field_kind.ptr());
		if (_1a9cda02b_is_num(_1a9d9b31d_to_str(_148917_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	jule::Ptr<_1a9da06b8_Prim> _149513_prim = _1a9d9d023_prim(_147549_d.get()._field_kind.ptr());
	if ((_149513_prim != nullptr) && _1a9cda02b_is_num(_1a9da0a2b_to_str(_149513_prim.ptr()))) {
		return;
	}
	_1a9d73c74_push_err(&(*_self_), _147559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_147549_d.get()._field_kind.ptr())),jule::Any(_1a9d9b31d_to_str(_147531_t.ptr()))}));
}



inline void _1a9d828ed_cast_prim(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _150332_t,jule::Ptr<_1a9d71c2d_Data> _150350_d,jule::Ptr<_1d7b77374_Token> _150360_error_token) {
	jule::Ptr<_1a9da06b8_Prim> _150413_prim = _1a9d9d023_prim(_150332_t.ptr());
	{
		
		if (_1a9da38db_is_any(_150413_prim.ptr())) {
			_case_begin_1ac34adb4:;
		}
		else if (_1a9da3677_is_str(_150413_prim.ptr())) {
			_case_begin_1ac34aaa6:;
			{
				_1a9d81ca4_cast_str(&(*_self_), _150350_d,_150360_error_token);
			}
		}
		else if (_1a9cd9998_is_int(_1a9da0a2b_to_str(_150413_prim.ptr()))) {
			_case_begin_1ac34ab1c:;
			{
				_1a9d8216c_cast_int(&(*_self_), _150332_t,_150350_d,_150360_error_token);
			}
		}
		else if (_1a9cda02b_is_num(_1a9da0a2b_to_str(_150413_prim.ptr()))) {
			_case_begin_1ac34ab83:;
			{
				_1a9d82535_cast_num(&(*_self_), _150332_t,_150350_d,_150360_error_token);
			}
		}
		else {
			_case_begin_1ac34aa40:;
			{
				_1a9d73c74_push_err(&(*_self_), _150360_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_150332_t.ptr()))}));
			}
		}
		_match_end_1ac34a9c9:;
	}
}



inline void _1a9d82c1c_cast_constant(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _151937_t,jule::Ptr<_1a9d71c2d_Data>& _151956_d) {
	if ((_151956_d == nullptr) || (!(_1a9d725e1_is_const(_151956_d.ptr())))) {
		return;
	}
	jule::Ptr<_1a9da06b8_Prim> _152313_prim = _1a9d9d023_prim(_151937_t.ptr());
	_1a9d9855c_cast_const_by_type(_152313_prim.get()._field_kind,_151956_d);
	_151956_d.get()._field_model=jule::Any(_151956_d.get()._field_constant);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d831b2_eval_cast_by_type_n_data(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _152847_t,jule::Ptr<_1a9d71c2d_Data> _152865_d,jule::Ptr<_1d7b77374_Token> _152879_error_token) {
	if ((_152865_d != nullptr) && _152865_d.get()._field_decl) {
		_1a9d73c74_push_err(&(*_self_), _152879_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if ((_1a9d9d023_prim(_152865_d.get()._field_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim(_152865_d.get()._field_kind.ptr()).ptr())) {
			_case_begin_1ac352b24:;
			{
				if ((_1a9d9d760_enm(_152847_t.ptr()) != nullptr)) {
					_1a9d73c74_push_err(&(*_self_), _152879_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a9d74093_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((_1a9d9d4eb_ptr(_152847_t.ptr()) != nullptr)) {
			_case_begin_1ac352b8a:;
			{
				_1a9d80d3b_cast_ptr(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a9d9d287_sptr(_152847_t.ptr()) != nullptr)) {
			_case_begin_1ac352c01:;
			{
				_1a9d815bc_cast_ref(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a9d9dc38_slc(_152847_t.ptr()) != nullptr)) {
			_case_begin_1ac352c67:;
			{
				_1a9d81985_cast_slc(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a9d9e211_strct(_152847_t.ptr()) != nullptr)) {
			_case_begin_1ac353b25:;
			{
				_1a9d81204_cast_struct(&(*_self_), _152847_t,_152865_d,_152879_error_token);
			}
		}
		else if ((_1a9d9d023_prim(_152847_t.ptr()) != nullptr)) {
			_case_begin_1ac353b8b:;
			{
				_1a9d828ed_cast_prim(&(*_self_), _152847_t,_152865_d,_152879_error_token);
				_1a9d82c1c_cast_constant(&(*_self_), _152847_t,_152865_d);
			}
		}
		else {
			_case_begin_1ac351c55:;
			{
				_1a9d73c74_push_err(&(*_self_), _152879_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_152847_t.ptr()))}));
				_152865_d=nullptr;
			}
		}
		_match_end_1ac351c00:;
	}
	if ((_152865_d == nullptr)) {
		return nullptr;
	}
	_152865_d.get()._field_mutable=_152865_d.get()._field_mutable || ((!(_1a9d9c30d_mutable(_152865_d.get()._field_kind.ptr()))) && _1a9d9c30d_mutable(_152847_t.ptr()));
	_152865_d.get()._field_lvalue=false;
	_152865_d.get()._field_decl=false;
	if ((_1a9d9d760_enm(_152865_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9d9b62b_equals(_1a9d9d760_enm(_152865_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152847_t)))) {
		_152865_d.get()._field_cast_kind=_152847_t;
		_1a9d979e0_apply_cast_kind(_152865_d);
		_152865_d.get()._field_model.operator jule::Ptr<_1a8d88dab_CastingExprModel>().get()._field_token=_152879_error_token;
	} else {
		_152865_d.get()._field_kind=_152847_t;
	}
	return _152865_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d834ae_eval_cast(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8a6a6_CastExpr> _157833_c) {
	jule::Ptr<_1a9d9ed05_TypeSymbol> _157917_t = _1a8d9c7d7_build_type(_157833_c.get()._field_kind);
	jule::Bool _158013_ok = _1a9d11096_check_type(_self_.get()._field_s, _157917_t,_self_.get()._field_lookup);
	if ((!(_158013_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _158517_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158517_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _158917_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_157833_c.get()._field_expr));
	if ((_158917_d == nullptr)) {
		return nullptr;
	}
	return _1a9d831b2_eval_cast_by_type_n_data(_self_.ptr(), _157917_t.get()._field_kind,_158917_d,_157833_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d837bc_eval_ns_selection(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b8a893_NsSelectionExpr> _159736_s) {
	jule::Str _159813_path = _1a9da8baa_build_link_path_by_tokens(_159736_s.get()._field_ns);
	jule::Ptr<_1a9d02351_ImportInfo> _159917_imp = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db2ae8_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>([=](jule::Ptr<_1a9d02351_ImportInfo> _159953_imp) mutable -> jule::Bool {
		if ((_159736_s.get()._field_ns.len() == 1LL) && (_159953_imp.get()._field_alias == _159813_path)) {
			return true;
		}
		return (_159953_imp.get()._field_link_path == _159813_path) && _1a9d04c38_is_accessible_via_selection(_159953_imp.ptr());
	}));
	if ((_159917_imp == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _159736_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_159813_path)}));
		return nullptr;
	}
	jule::Trait<_1a9db4325_Lookup> _161117_lookup = (*_self_)._field_lookup;
	(*_self_)._field_lookup=jule::Trait<_1a9db4325_Lookup>(_159917_imp, 1);
	
	_1a9d7444a_disallow_builtin(&(*_self_));
	jule::Any _161617_def = _1a9d76cbb_get_def(&(*_self_), _159736_s.get()._field_ident.get()._field_kind,false);
	_1a9d7426e_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_161117_lookup;
	jule::Ptr<_1a9d71c2d_Data> _162017_d = _1a9d7a8c4_eval_def(&(*_self_), _161617_def,_159736_s.get()._field_ident);
	return _162017_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d83c62_eval_struct_lit_explicit(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1a8d857c0_StructIns> _162548_s,jule::Slice<jule::Ptr<_1d7b09a43_Expr>> _162613_exprs,jule::Ptr<_1d7b77374_Token> _162633_error_token) {
	jule::Bool _162713_ok = _1a9d0dcec_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_162548_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_162548_s.get()._field_generics.len()),_162633_error_token);
	if ((!(_162713_ok))) {
		return nullptr;
	}
	if ((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162548_s.get()._field_decl)) {
		_1a9d73c74_push_err(_self_.ptr(), _162633_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_162548_s.get()._field_decl.get()._field_ident)}));
	}
	_1a9d77805_push_reference_to_struct(_self_.ptr(), _162548_s);
	_1a9d78c9b_check_deprecated(_self_.ptr(), _162548_s.get()._field_decl.get()._field_directives,_162633_error_token);
	_1a9d66151_StructLitChecker _164017_slc = _1a9d66151_StructLitChecker(_self_,_162633_error_token,_162548_s,jule::Slice<jule::Ptr<_1a8d88196_StructArgExprModel>>());
	_1a9d676e6_check(&_164017_slc, _162613_exprs);
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_162548_s, 0))),jule::Ptr<_1a9d9ae66_TypeKind>(),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8854d_StructLitExprModel>(_1a8d8854d_StructLitExprModel(_162548_s,_164017_slc._field_args)))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8405e_eval_struct_lit(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8b333_StructLit> _165939_lit) {
	jule::Ptr<_1a9d9ed05_TypeSymbol> _166017_t = _1a8d9c7d7_build_type(_165939_lit.get()._field_kind);
	jule::Bool _166113_ok = _1a9d11096_check_type(_self_.get()._field_s, _166017_t,_self_.get()._field_lookup);
	if ((!(_166113_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a8d857c0_StructIns> _166617_s = _1a9d9e211_strct(_166017_t.get()._field_kind.ptr());
	if ((_166617_s == nullptr)) {
		if ((_1a9d9d287_sptr(_166017_t.get()._field_kind.ptr()) != nullptr)) {
			_166617_s=_1a9d9e211_strct(_1a9d9d287_sptr(_166017_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166617_s != nullptr)) {
				goto _julec_label_eval;
			}
		}
		_1a9d73c74_push_err(_self_.ptr(), _165939_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1a9d71c2d_Data> _167917_d = _1a9d83c62_eval_struct_lit_explicit(_self_, _166617_s,_165939_lit.get()._field_exprs,_165939_lit.get()._field_kind.get()._field_token);
	if ((_1a9d9d287_sptr(_166017_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a8d8854d_StructLitExprModel> _168121_model = _167917_d.get()._field_model.operator jule::Ptr<_1a8d8854d_StructLitExprModel>();
		_1a9d9658d_make_struct_lit_alloc(_167917_d,_168121_model);
	}
	return _167917_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8436c_eval_type(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7a0e75b_TypeDecl> _168732_t) {
	jule::Ptr<_1a9d9ed05_TypeSymbol> _168817_tk = _1a8d9c7d7_build_type(_168732_t);
	jule::Bool _168913_ok = _1a9d11096_check_type((*_self_)._field_s, _168817_tk,(*_self_)._field_lookup);
	if ((!(_168913_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(_168817_tk.get()._field_kind,jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_168817_tk.get()._field_kind)),true,jule::Ptr<_1a9c46e77_Const>()));
}



inline void _1a9d8468b_call_type_fn(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8ae59_FnCallExpr>& _170037_fc,jule::Ptr<_1a9d71c2d_Data>& _170059_d) {
	if ((_170037_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_self_.ptr(), _170037_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_170059_d.get()._field_kind.ptr()))}));
	} else if ((_170037_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_self_.ptr(), _170037_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_170037_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_self_.ptr(), _170037_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((_170037_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1a9d9ae66_TypeKind> _171021_prefix = _self_.get()._field_prefix;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1a9d71c2d_Data> _171221_arg = _1a9d8c83c_eval_expr_kind(_self_, _170037_fc.get()._field_args[0LL].get()._field_kind);
		_self_.get()._field_prefix=_171021_prefix;
		if ((_171221_arg != nullptr)) {
			_170059_d=_1a9d831b2_eval_cast_by_type_n_data(_self_.ptr(), _170059_d.get()._field_kind,_171221_arg,_170037_fc.get()._field_args[0LL].get()._field_token);
		}
	}
	if ((_170059_d != nullptr)) {
		_170059_d.get()._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1a9d84a43_check_fn_call_generics(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d98063_FnIns> _172445_f,jule::Ptr<_1d7b8ae59_FnCallExpr> _172513_fc) {
	jule::Bool _172532_ok = jule::Bool();
	jule::Bool _172542_dynamic_annotation = jule::Bool();
	{
		
		if (((_172445_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172513_fc.get()._field_generics.len() == 0LL)) && (_172445_f.get()._field_params.len() > 0LL)) {
			_case_begin_1ac37e623:;
			{
				_172542_dynamic_annotation=true;
				_172445_f.get()._field_generics=jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>::alloc(static_cast<jule::I32>(_172445_f.get()._field_decl.get()._field_generics.len()));
				_172532_ok = true;
				_172542_dynamic_annotation = true;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		else if ((!(_1a9d0dcec_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I32>(_172445_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_172513_fc.get()._field_generics.len()),_172513_fc.get()._field_token)))) {
			_case_begin_1ac37e689:;
			{
				_172532_ok = false;
				_172542_dynamic_annotation = false;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		else {
			_case_begin_1ac37dc4e:;
			{
				_172445_f.get()._field_generics=jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>::alloc(0LL,static_cast<jule::I32>(_172445_f.get()._field_decl.get()._field_generics.len()));
				{
					auto &expr = _172513_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ac37e26b:;
					if (it != expr.end()) {
						jule::Ptr<_1d7a0e75b_TypeDecl> _1ac37ec72_g = *it;
						{
							jule::Ptr<_1a9d9ed05_TypeSymbol> _173825_k = _1a8d9c7d7_build_type(_1ac37ec72_g);
							_172532_ok=_1a9d11096_check_type((*_self_)._field_s, _173825_k,(*_self_)._field_lookup);
							if ((!(_172532_ok))) {
								_172532_ok = false;
								_172542_dynamic_annotation = false;
								return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
							}
							_172445_f.get()._field_generics = jule::alloc_for_append(_172445_f.get()._field_generics,1);_172445_f.get()._field_generics.__push(_173825_k.get()._field_kind);
						}
						_iter_next_1ac37e26b:;
						++it;
						goto _iter_begin_1ac37e26b;
					}
					_iter_end_1ac37e26b:;
				}
				_172532_ok = true;
				_172542_dynamic_annotation = false;
				return std::make_tuple(_172532_ok,_172542_dynamic_annotation);
			}
		}
		_match_end_1ac37dba5:;
	}
}



inline void _1a9d84d62_call_builtin_fn(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8ae59_FnCallExpr>& _175040_fc,jule::Ptr<_1a9d71c2d_Data>& _175062_d) {
	_175062_d=_1a9d9de9c_fnc(_175062_d.get()._field_kind.ptr()).get()._field_caller(_self_,_175040_fc,_175062_d);
	if ((_175062_d == nullptr)) {
		return;
	}
	_175062_d.get()._field_mutable=true;
}



inline void _1a9d851c5_check_fn_of_concurrent_call(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d98063_FnIns>& _175847_f,jule::Ptr<_1d7b77374_Token> _175858_error_token) {
	if (_1a9d746ae_is_unsafe(&(*_self_))) {
		return;
	}
	{
		auto &expr = _175847_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac3875e8:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> &_1ac387708_p = *it;
			{
				if (_1ac387708_p.get()._field_decl.get()._field_reference) {
					_1a9d73c74_push_err(&(*_self_), _175858_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_1ac3875e8:;
			++it;
			goto _iter_begin_1ac3875e8;
		}
		_iter_end_1ac3875e8:;
	}
}



inline void _1a9d855c1_process_exceptional_handler(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d98063_FnIns>& _177151_f,jule::Ptr<_1d7b8ae59_FnCallExpr>& _177167_fc,jule::Ptr<_1a9d71c2d_Data>& _177189_d) {
	jule::Bool _177213_result_needed = (!(_1a8d95318_is_void(_177151_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored)));
	jule::Ptr<_1a9cdbc53_ScopeChecker> _177317_csc = nullptr;
	jule::Ptr<_1a9cc76bc_Scope> _177417_ch = nullptr;
	jule::Ptr<_1a8d896d6_FnCallExprModel> _177617_model = _177189_d.get()._field_model.operator jule::Ptr<_1a8d896d6_FnCallExprModel>();
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d0a03a_Sema>>()) {
			_case_begin_1ac38adc1:;
			{
				jule::Ptr<_1a9d0a03a_Sema> _178021_s = (*_self_)._field_lookup.operator jule::Ptr<_1a9d0a03a_Sema>();
				_177317_csc=_1a9c7656c_new_scope_checker(_178021_s,nullptr);
				if (_177213_result_needed) {
					_177317_csc.get()._field_result=_177151_f;
				}
				_177417_ch=jule::new_ptr<_1a9cc76bc_Scope>();
				_177317_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177317_csc.get()._field_table.get()._field_vars,1);_177317_csc.get()._field_table.get()._field_vars.__push(_1a9d968ce_build_error_var(_177417_ch,_177167_fc));
				_1a9ceab52_check(_177317_csc, _177167_fc.get()._field_exception,_177417_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1ac38ae37:;
			{
				jule::Ptr<_1a9cdbc53_ScopeChecker> _178921_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>();
				_177317_csc=_1a9ceadb6_new_child_checker(_178921_sc);
				if (_177213_result_needed) {
					_177317_csc.get()._field_result=_177151_f;
				}
				_177417_ch=_1a9ce064c_get_child(_178921_sc.ptr());
				_177317_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177317_csc.get()._field_table.get()._field_vars,1);_177317_csc.get()._field_table.get()._field_vars.__push(_1a9d968ce_build_error_var(_177417_ch,_177167_fc));
				_1a9ce0a15_check_child_ssc(_178921_sc, _177167_fc.get()._field_exception,_177417_ch,_177317_csc);
			}
		}
		_match_end_1ac38ad6b:;
	}
	_177617_model.get()._field_assigned=_177213_result_needed;
	_177617_model.get()._field_except=_177417_ch;
	if (_177213_result_needed && (_177317_csc.get()._field_result != nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _177167_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a9d858ce_call_fn(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8ae59_FnCallExpr>& _180732_fc,jule::Ptr<_1a9d71c2d_Data>& _180754_d) {
	jule::Ptr<_1a8d98063_FnIns> _180817_f = _1a9d9de9c_fnc(_180754_d.get()._field_kind.ptr());
	if (_1a8d98cde_is_builtin(_180817_f.ptr())) {
		_1a9d84d62_call_builtin_fn(_self_, _180732_fc,_180754_d);
		return;
	}
	if ((!(_1a8d9557c_is_method(_180817_f.get()._field_decl.ptr()))) && _1a9d997a0_has_directive(_180817_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		_1a9d73c74_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180754_d=nullptr;
		return;
	}
	if ((((!(_180754_d.get()._field_mutable)) && _1a8d9557c_is_method(_180817_f.get()._field_decl.ptr())) && (!(_180817_f.get()._field_decl.get()._field_statically))) && _180817_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable) {
		_1a9d73c74_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if ((!(_1a9d746ae_is_unsafe(_self_.ptr()))) && _180817_f.get()._field_decl.get()._field_unsafety) {
		_1a9d73c74_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _182618_ok;
	jule::Bool _182622_dynamic_annotation;
	std::tie(_182618_ok,_182622_dynamic_annotation) = _1a9d84a43_check_fn_call_generics(_self_.ptr(), _180817_f,_180732_fc);
	if ((!(_182618_ok))) {
		_180754_d=nullptr;
		return;
	}
	jule::Ptr<_1a9d0a03a_Sema> _183217_old = _self_.get()._field_s;
	if ((_180817_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180817_f.get()._field_decl.get()._field_owner.get()._field_sema;
	}
	__JULE_DEFER({
		if (_183217_old != _self_.get()._field_s) {
			_183217_old.get()._field_errors=jule::append(_183217_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		}
		_self_.get()._field_s=_183217_old;
	});
	if ((!(_182622_dynamic_annotation))) {
		if ((!(_180817_f.get()._field_reloaded))) {
			_182618_ok=_1a9d13e34_reload_fn_ins_types(_self_.get()._field_s, _180817_f);
			if ((!(_182618_ok))) {
				_180754_d=nullptr;
				return;
			}
			_180817_f.get()._field_reloaded=true;
		}
	} else {
		_1a9d137e6_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180817_f);
	}
	_1a9d63747_FnCallArgChecker _185817_fcac = _1a9d63747_FnCallArgChecker(_self_,_180732_fc.get()._field_args,_180732_fc.get()._field_token,_180817_f,_182622_dynamic_annotation,jule::Slice<jule::Any>());
	if ((_180817_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183217_old);
		_182618_ok=_1a9d65b12_check(&_185817_fcac);
		std::tie(_183217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183217_old);
	} else {
		_182618_ok=_1a9d65b12_check(&_185817_fcac);
	}
	if ((!(_182618_ok)) && _182622_dynamic_annotation) {
		_180754_d=nullptr;
		return;
	}
	jule::Ptr<_1a8d98063_FnIns> _187817_exist_instance = _1a8d96d20_append_instance(_180817_f.get()._field_decl.ptr(), _180817_f);
	if ((_187817_exist_instance != nullptr)) {
		_180817_f=_187817_exist_instance;
	}
	jule::Any _188317_call_model = _180754_d.get()._field_model;
	if (_1a8d95318_is_void(_180817_f.get()._field_decl.ptr())) {
		_180754_d=_1a9d97bdd_build_void_data();
	} else {
		if (_182622_dynamic_annotation) {
			_182618_ok=_1a9d13e34_reload_fn_ins_types(_self_.get()._field_s, _180817_f);
			if ((!(_182618_ok))) {
				_180754_d=nullptr;
				return;
			}
			_180817_f.get()._field_reloaded=true;
		}
		_180754_d.get()._field_kind=_180817_f.get()._field_result;
		_180754_d.get()._field_lvalue=false;
	}
	_180754_d.get()._field_mutable=true;
	_180754_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d896d6_FnCallExprModel>(_1a8d896d6_FnCallExprModel(_180732_fc.get()._field_token,_180817_f,jule::Bool(),_188317_call_model,_185817_fcac._field_arg_models,jule::Ptr<_1a9cc76bc_Scope>(),jule::Bool())));
	if (_180817_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1d7a33b59_unhandled(_180732_fc.ptr())) {
				_case_begin_1ac3a2558:;
				{
					_1a9d73c74_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a9d74093_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1d7a36112_ignored(_180732_fc.ptr())) {
				_case_begin_1ac3a224a:;
				{
					goto _match_end_1ac3a2118;
				}
			}
			else {
				_case_begin_1ac3a21d4:;
				{
					_1a9d855c1_process_exceptional_handler(_self_.ptr(), _180817_f,_180732_fc,_180754_d);
				}
			}
			_match_end_1ac3a2118:;
		}
	} else if ((!(_1d7a33b59_unhandled(_180732_fc.ptr())))) {
		_1a9d73c74_push_err(_self_.ptr(), _180732_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_180817_f.get()._field_generics.len() > 0LL) && (_187817_exist_instance == nullptr)) {
		_1a9d20d42_check_fn_ins_caller(_self_.get()._field_s, _180817_f,_180732_fc.get()._field_token);
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d85bdc_eval_fn_call(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8ae59_FnCallExpr> _193136_fc) {
	jule::Ptr<_1a9d9ae66_TypeKind> _193217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_193217_prefix;
	});
	{
		auto &_match_expr{ _193136_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
			_case_begin_1ac3a6c11:;
			{
				if ((_193136_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1a9dd8d50_builtin_caller_error(_self_,_193136_fc);
				}
			}
		}
		_match_end_1ac3a6bab:;
	}
	jule::Ptr<_1a9d71c2d_Data> _194517_d = _1a9d8c83c_eval_expr_kind(_self_, _193136_fc.get()._field_expr.get()._field_kind);
	if ((_194517_d == nullptr)) {
		return nullptr;
	}
	if (_194517_d.get()._field_decl) {
		_1a9d8468b_call_type_fn(_self_, _193136_fc,_194517_d);
		return _194517_d;
	}
	if ((_1a9d9de9c_fnc(_194517_d.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err(_self_.ptr(), _193136_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a9d858ce_call_fn(_self_, _193136_fc,_194517_d);
	return _194517_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d86094_eval_enum_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1a943b309_Enum> _196439_enm,jule::Ptr<_1d7b77374_Token> _196451_ident) {
	jule::Ptr<_1a9d71c2d_Data> _196517_d = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_196439_enm, 3))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a9c46e77_Const>()));
	jule::Ptr<_1a93b2c75_EnumItem> _197417_item = _1a922ac64_find_item(_196439_enm.ptr(), _196451_ident.get()._field_kind);
	if ((_197417_item == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _196451_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_196439_enm.get()._field_ident),jule::Any(_196451_ident.get()._field_kind)}));
	} else {
		_196517_d.get()._field_constant=jule::new_ptr<_1a9c46e77_Const>((*(_197417_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196517_d.get()._field_model=jule::Any(_196517_d.get()._field_constant);
		_1a9d982b5_apply_cast_model_by_enum(_196517_d,_196439_enm);
	}
	return _196517_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8644b_eval_struct_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1a8d857c0_StructIns> _198641_s,jule::Ptr<_1d7b77374_Token> _198656_ident) {
	jule::Ptr<_1a9d71c2d_Data> _198717_d = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a9c46e77_Const>()));
	
	jule::Ptr<_1a8d94db7_Fn> _199517_method = _1a8d8675a_find_method(_198641_s.ptr(), _198656_ident.get()._field_kind,true);
	if ((_199517_method != nullptr)) {
		if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _199517_method.get()._field_public,_199517_method.get()._field_token)))) {
			_1a9d73c74_push_err(&(*_self_), _198656_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_198656_ident.get()._field_kind)}));
			_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1a8d98063_FnIns> _200221_ins = _1a8d96a12_instance(_199517_method);
		_200221_ins.get()._field_owner=_198641_s;
		_1a9d772b6_push_reference_to_fn(&(*_self_), _200221_ins);
		_198717_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8c497_StructStaticIdentExprModel>(_1a8d8c497_StructStaticIdentExprModel(_198641_s,_198717_d.get()._field_model,_200221_ins)));
		_198717_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_200221_ins, 1)));
		return _198717_d;
	}
	jule::Ptr<_1a9d2553e_Var> _201617_sttc = _1a8d83a43_find_static(_198641_s.get()._field_decl.ptr(), _198656_ident.get()._field_kind);
	if ((_201617_sttc != nullptr)) {
		return _1a9d7a165_eval_var(&(*_self_), _201617_sttc,_198656_ident);
	}
	_1a9d73c74_push_err(&(*_self_), _198656_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_198641_s.get()._field_decl.get()._field_ident),jule::Any(_198656_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8689c_eval_trait_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _202543_d,jule::Ptr<_1a8ea7a57_Trait> _202557_trt,jule::Ptr<_1d7b77374_Token> _202574_ident) {
	jule::Ptr<_1a8d94db7_Fn> _202617_f = _1a8e8a71b_find_method(_202557_trt.ptr(), _202574_ident.get()._field_kind);
	if ((_202617_f == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _202574_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_202557_trt.get()._field_ident),jule::Any(_202574_ident.get()._field_kind)}));
		return nullptr;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a8d96a12_instance(_202617_f), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8b771_TraitSubIdentExprModel>(_1a8d8b771_TraitSubIdentExprModel(_202574_ident,_202543_d.get()._field_model,_202617_f,_202557_trt)))),false,jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d86d97_eval_struct_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _204844_d,jule::Ptr<_1a8d857c0_StructIns> _204858_s,jule::Ptr<_1d7b8aa80_SubIdentExpr> _204877_si,jule::Bool _204896_ref) {
	jule::Ptr<_1a8d84e62_FieldIns> _204917_f = _1a8d86a68_find_field(_204858_s.ptr(), _204877_si.get()._field_ident.get()._field_kind);
	if ((_204917_f != nullptr)) {
		if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _204917_f.get()._field_decl.get()._field_public,_204917_f.get()._field_decl.get()._field_token)))) {
			_1a9d73c74_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_204917_f.get()._field_decl.get()._field_ident)}));
			_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _205621_model = jule::new_ptr<_1a8d8bee1_StructSubIdentExprModel>(_1a8d8bee1_StructSubIdentExprModel(_204877_si.get()._field_ident,jule::new_ptr<_1a9d71c2d_Data>((*(_204844_d))),_204844_d.get()._field_kind,jule::Ptr<_1a8d98063_FnIns>(),_204917_f));
		_204844_d.get()._field_model=jule::Any(_205621_model);
		_204844_d.get()._field_kind=_204917_f.get()._field_kind;
		_204844_d.get()._field_lvalue=true;
		if (_204917_f.get()._field_decl.get()._field_mutable && (!(_204844_d.get()._field_mutable))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
					_case_begin_1ac3be4dc:;
					{
						jule::Ptr<_1a9cdbc53_ScopeChecker> _207025_scope = _1a9cddd98_get_root((*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>());
						_204844_d.get()._field_mutable=(_207025_scope.get()._field_owner != nullptr) && (_207025_scope.get()._field_owner.get()._field_owner == _204858_s);
					}
				}
				_match_end_1ac3be487:;
			}
		}
		return _204844_d;
	}
	
	jule::Ptr<_1a8d94db7_Fn> _207917_m = _1a8d8675a_find_method(_204858_s.ptr(), _204877_si.get()._field_ident.get()._field_kind,false);
	if ((_207917_m == nullptr)) {
		_1a9d73c74_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_204858_s.get()._field_decl.get()._field_ident),jule::Any(_204877_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	}
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _207917_m.get()._field_public,_207917_m.get()._field_token)))) {
		_1a9d73c74_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_207917_m.get()._field_ident)}));
		_1a9d74093_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if (_1a8d93e1b_is_ref(_207917_m.get()._field_params[0LL].ptr()) && (!(_204896_ref))) {
		_1a9d73c74_push_err(&(*_self_), _204877_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	_1a9d78c9b_check_deprecated(&(*_self_), _207917_m.get()._field_directives,_204877_si.get()._field_ident);
	jule::Ptr<_1a8d98063_FnIns> _209517_ins = _1a8d96a12_instance(_207917_m);
	_209517_ins.get()._field_owner=_204858_s;
	_1a9d772b6_push_reference_to_fn(&(*_self_), _209517_ins);
	jule::Ptr<_1a9d71c2d_Data> _209817_model = jule::new_ptr<_1a9d71c2d_Data>((*(_204844_d)));
	_204844_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8bee1_StructSubIdentExprModel>(_1a8d8bee1_StructSubIdentExprModel(_204877_si.get()._field_ident,_209817_model,_204844_d.get()._field_kind,_209517_ins,jule::Ptr<_1a8d84e62_FieldIns>())));
	_204844_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_209517_ins, 1)));
	return _204844_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8724e_eval_slice_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _210943_d,jule::Ptr<_1d7b77374_Token> _210957_ident) {
	{
		auto &_match_expr{ _210957_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac3c9629:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ac3c845d:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("cap()", 5))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac3c84c4:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_210943_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_210943_d.get()._field_kind,_210943_d.get()._field_model,_210957_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac3c812d:;
			{
				_1a9d73c74_push_err(&(*_self_), _210957_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_210943_d.get()._field_kind.ptr())),jule::Any(_210957_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3c835e:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d87606_eval_array_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _216843_d,jule::Ptr<_1d7b77374_Token> _216857_ident) {
	{
		auto &_match_expr{ _216857_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac3ce6c8:;
			{
				jule::Ptr<_1a9c46e77_Const> _217121_c = static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a9d9d9c4_arr(_216843_d.get()._field_kind.ptr()).get()._field_n)));
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_217121_c)),jule::Bool(),_217121_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ac3d070c:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_216843_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_216843_d.get()._field_kind,_216843_d.get()._field_model,_216857_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac3ce112:;
			{
				_1a9d73c74_push_err(&(*_self_), _216857_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_216843_d.get()._field_kind.ptr())),jule::Any(_216857_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3ce343:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d879ad_eval_map_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _221341_d,jule::Ptr<_1d7b77374_Token> _221355_ident) {
	jule::Ptr<_1a9da5bda_Map> _221417_map_kind = _1a9d9e6d9_map(_221341_d.get()._field_kind.ptr());
	{
		auto &_match_expr{ _221355_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac3d656a:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1ac3d6339:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("clear", 5))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1ac3d63a0:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_221417_map_kind.get()._field_key)), 7))),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("keys", 4))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1ac3d6416:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_221417_map_kind.get()._field_val)), 7))),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("values", 6))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1ac3d503b:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("key", 3))),_221417_map_kind.get()._field_key))}),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9dc4ab6_builtin_caller_common),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("has", 3))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1ac3d50a2:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("key", 3))),_221417_map_kind.get()._field_key))}),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e069e9_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),_221341_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_221341_d.get()._field_kind,_221341_d.get()._field_model,_221355_ident,jule::Str("del", 3))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac3d4832:;
			{
				_1a9d73c74_push_err(&(*_self_), _221355_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a9da604d_to_str(_221417_map_kind.ptr())),jule::Any(_221355_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3d4e3c:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d87d65_eval_str_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _233641_d,jule::Ptr<_1d7b77374_Token> _233655_ident) {
	jule::Ptr<_1a9d9ae66_TypeKind> _233717_str_kind = jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("str", 3)), 5)));
	{
		auto &_match_expr{ _233655_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ac3e1cb2:;
			{
				jule::Ptr<_1a9d71c2d_Data> _234021_sd = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
				if (_1a9d725e1_is_const(_233641_d.ptr())) {
					_234021_sd.get()._field_constant=static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48929_read_str(_233641_d.get()._field_constant.ptr()).len())));
					_234021_sd.get()._field_model=jule::Any(_234021_sd.get()._field_constant);
				} else {
					_234021_sd.get()._field_model=jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_233641_d.get()._field_kind,_233641_d.get()._field_model,_233655_ident,jule::Str("len()", 5))));
				}
				return _234021_sd;
			}
		}
		else {
			_case_begin_1ac3e0189:;
			{
				_1a9d73c74_push_err(&(*_self_), _233655_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_233717_str_kind.ptr())),jule::Any(_233655_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3e0ad5:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d88173_eval_int_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _236139_ident) {
	
	{
		auto &_match_expr{ _236139_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac3e5ed6:;
			{
				jule::Ptr<_1a9c46e77_Const> _236621_c = static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a9cd44ed_max(jule::Str("int", 3)))));
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_236621_c)),jule::Bool(),_236621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac3e604c:;
			{
				jule::Ptr<_1a9c46e77_Const> _237321_c = static__1a9c45e76_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a9cd4212_min(jule::Str("int", 3)))));
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_237321_c)),jule::Bool(),_237321_c));
			}
		}
		else {
			_case_begin_1ac3e5029:;
			{
				_1a9d73c74_push_err(&(*_self_), _236139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_236139_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3e4ec4:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d88481_eval_uint_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _238540_ident) {
	
	{
		auto &_match_expr{ _238540_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac3ea1e9:;
			{
				jule::Ptr<_1a9c46e77_Const> _239021_c = static__1a9c47164_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1a9cd44ed_max(jule::Str("uint", 4)))));
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_239021_c)),jule::Bool(),_239021_c));
			}
		}
		else {
			_case_begin_1ac3e923c:;
			{
				_1a9d73c74_push_err(&(*_self_), _238540_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_238540_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3e91d7:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8878e_eval_i8_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _240238_ident) {
	
	
	
	{
		auto &_match_expr{ _240238_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac3ed72a:;
			{
				jule::Ptr<_1a9c46e77_Const> _240921_c = static__1a9c45e76_new_i64(127LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_240921_c)),jule::Bool(),_240921_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac3ed791:;
			{
				jule::Ptr<_1a9c46e77_Const> _241621_c = static__1a9c45e76_new_i64(-128LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_241621_c)),jule::Bool(),_241621_c));
			}
		}
		else {
			_case_begin_1ac3ec32d:;
			{
				_1a9d73c74_push_err(&(*_self_), _240238_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_240238_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac3ec6d5:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d88a9c_eval_i16_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _242839_ident) {
	
	
	
	{
		auto &_match_expr{ _242839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac402960:;
			{
				jule::Ptr<_1a9c46e77_Const> _243521_c = static__1a9c45e76_new_i64(32767LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_243521_c)),jule::Bool(),_243521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac4029c6:;
			{
				jule::Ptr<_1a9c46e77_Const> _244221_c = static__1a9c45e76_new_i64(-32768LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_244221_c)),jule::Bool(),_244221_c));
			}
		}
		else {
			_case_begin_1ac401563:;
			{
				_1a9d73c74_push_err(&(*_self_), _242839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_242839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac40191a:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d88daa_eval_i32_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _245439_ident) {
	
	
	
	{
		auto &_match_expr{ _245439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac406b95:;
			{
				jule::Ptr<_1a9c46e77_Const> _246121_c = static__1a9c45e76_new_i64(2147483647LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246121_c)),jule::Bool(),_246121_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac406c0b:;
			{
				jule::Ptr<_1a9c46e77_Const> _246821_c = static__1a9c45e76_new_i64(-2147483648LL);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246821_c)),jule::Bool(),_246821_c));
			}
		}
		else {
			_case_begin_1ac405798:;
			{
				_1a9d73c74_push_err(&(*_self_), _245439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_245439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac405b83:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d891b8_eval_i64_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _248039_ident) {
	
	
	
	{
		auto &_match_expr{ _248039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac40ad42:;
			{
				jule::Ptr<_1a9c46e77_Const> _248721_c = static__1a9c45e76_new_i64(jule::MAX_I64);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_248721_c)),jule::Bool(),_248721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac40ada8:;
			{
				jule::Ptr<_1a9c46e77_Const> _249421_c = static__1a9c45e76_new_i64(jule::MIN_I64);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_249421_c)),jule::Bool(),_249421_c));
			}
		}
		else {
			_case_begin_1ac4099bc:;
			{
				_1a9d73c74_push_err(&(*_self_), _248039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_248039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac409d0d:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d894c6_eval_u8_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _250638_ident) {
	
	
	{
		auto &_match_expr{ _250638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac40eede:;
			{
				jule::Ptr<_1a9c46e77_Const> _251221_c = static__1a9c47164_new_u64(255LLU);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u8", 2)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_251221_c)),jule::Bool(),_251221_c));
			}
		}
		else {
			_case_begin_1ac40d74b:;
			{
				_1a9d73c74_push_err(&(*_self_), _250638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_250638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac40de88:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d897d4_eval_u16_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _252439_ident) {
	
	
	{
		auto &_match_expr{ _252439_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac412e48:;
			{
				jule::Ptr<_1a9c46e77_Const> _253021_c = static__1a9c47164_new_u64(65535LLU);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u16", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_253021_c)),jule::Bool(),_253021_c));
			}
		}
		else {
			_case_begin_1ac4116a5:;
			{
				_1a9d73c74_push_err(&(*_self_), _252439_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_252439_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac411de2:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d89ae2_eval_u32_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _254239_ident) {
	
	
	{
		auto &_match_expr{ _254239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac415da2:;
			{
				jule::Ptr<_1a9c46e77_Const> _254821_c = static__1a9c47164_new_u64(4294967295LLU);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_254821_c)),jule::Bool(),_254821_c));
			}
		}
		else {
			_case_begin_1ac41460e:;
			{
				_1a9d73c74_push_err(&(*_self_), _254239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_254239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac414d4b:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d89e00_eval_u64_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _256039_ident) {
	
	
	{
		auto &_match_expr{ _256039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac418cb7:;
			{
				jule::Ptr<_1a9c46e77_Const> _256621_c = static__1a9c47164_new_u64(jule::MAX_U64);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_256621_c)),jule::Bool(),_256621_c));
			}
		}
		else {
			_case_begin_1ac417568:;
			{
				_1a9d73c74_push_err(&(*_self_), _256039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_256039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac417c2d:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a20d_eval_f32_type_tatic(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _257838_ident) {
	
	
	
	
	{
		auto &_match_expr{ _257838_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac41c2b5:;
			{
				jule::Ptr<_1a9c46e77_Const> _258621_c = static__1a9c478e5_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_258621_c)),jule::Bool(),_258621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac41c32b:;
			{
				jule::Ptr<_1a9c46e77_Const> _259321_c = static__1a9c478e5_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259321_c)),jule::Bool(),_259321_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ac41c12d:;
			{
				jule::Ptr<_1a9c46e77_Const> _260021_c = static__1a9c478e5_new_f64(0.000000000000000000000000000000000000000000001401298464324817);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_260021_c)),jule::Bool(),_260021_c));
			}
		}
		else {
			_case_begin_1ac41ae40:;
			{
				_1a9d73c74_push_err(&(*_self_), _257838_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_257838_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac41b24d:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a51b_eval_f64_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b77374_Token> _261239_ident) {
	
	
	
	
	{
		auto &_match_expr{ _261239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ac422694:;
			{
				jule::Ptr<_1a9c46e77_Const> _262021_c = static__1a9c478e5_new_f64(jule::MAX_F64);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262021_c)),jule::Bool(),_262021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ac42270a:;
			{
				jule::Ptr<_1a9c46e77_Const> _262721_c = static__1a9c478e5_new_f64(jule::MIN_F64);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262721_c)),jule::Bool(),_262721_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ac42250c:;
			{
				jule::Ptr<_1a9c46e77_Const> _263421_c = static__1a9c478e5_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_263421_c)),jule::Bool(),_263421_c));
			}
		}
		else {
			_case_begin_1ac421022:;
			{
				_1a9d73c74_push_err(&(*_self_), _261239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_261239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac42162c:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8a8c3_eval_prim_static(_1a9d7379b_Eval* _self_,jule::Str _264635_kind,jule::Ptr<_1d7b77374_Token> _264646_ident) {
	{
		auto &_match_expr{ _264635_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac42629c:;
			{
				return _1a9d88173_eval_int_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac426313:;
			{
				return _1a9d88481_eval_uint_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac426379:;
			{
				return _1a9d8878e_eval_i8_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac4263e0:;
			{
				return _1a9d88a9c_eval_i16_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac426dd5:;
			{
				return _1a9d88daa_eval_i32_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac426e4b:;
			{
				return _1a9d891b8_eval_i64_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac426eb2:;
			{
				return _1a9d894c6_eval_u8_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac427028:;
			{
				return _1a9d897d4_eval_u16_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac4271c1:;
			{
				return _1a9d89ae2_eval_u32_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac427237:;
			{
				return _1a9d89e00_eval_u64_type_static(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac42729d:;
			{
				return _1a9d8a20d_eval_f32_type_tatic(&(*_self_), _264646_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac427314:;
			{
				return _1a9d8a51b_eval_f64_type_static(&(*_self_), _264646_ident);
			}
		}
		else {
			_case_begin_1ac425e8e:;
			{
				_1a9d73c74_push_err(&(*_self_), _264646_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_264635_kind),jule::Any(_264646_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac42606b:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8ac7a_eval_type_static(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _267839_d,jule::Ptr<_1d7b8aa80_SubIdentExpr> _267853_si) {
	{
		
		if ((_1a9d9d023_prim(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac42dbbc:;
			{
				return _1a9d8a8c3_eval_prim_static(&(*_self_), _1a9da0a2b_to_str(_1a9d9d023_prim(_267839_d.get()._field_kind.ptr()).ptr()),_267853_si.get()._field_ident);
			}
		}
		else if ((_1a9d9d760_enm(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac42dc33:;
			{
				return _1a9d86094_eval_enum_static(&(*_self_), _1a9d9d760_enm(_267839_d.get()._field_kind.ptr()),_267853_si.get()._field_ident);
			}
		}
		else if ((_1a9d9e211_strct(_267839_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac42da35:;
			{
				return _1a9d8644b_eval_struct_static(&(*_self_), _1a9d9e211_strct(_267839_d.get()._field_kind.ptr()),_267853_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1ac42c99b:;
			{
				_1a9d73c74_push_err(&(*_self_), _267853_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_267839_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac42c902:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b132_eval_obj_sub_ident(_1a9d7379b_Eval* _self_,jule::Ptr<_1a9d71c2d_Data> _269241_d,jule::Ptr<_1d7b8aa80_SubIdentExpr> _269255_si) {
	if (_1d7b79ac4_is_ignore_ident(_269255_si.get()._field_ident.get()._field_kind)) {
		_1a9d73c74_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _269817_kind = _269241_d.get()._field_kind;
	{
		
		if ((_1a9d9d4eb_ptr(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac438567:;
			{
				jule::Ptr<_1a9da723b_Ptr> _270117_ptr = _1a9d9d4eb_ptr(_269241_d.get()._field_kind.ptr());
				if (_1a9da7c0e_is_unsafe(_270117_ptr.ptr())) {
					goto _match_end_1ac438457;
				}
				if ((!(_269255_si.get()._field_is_self)) && (!(_1a9d746ae_is_unsafe(&(*_self_))))) {
					_1a9d73c74_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				_269817_kind=_1a9d9d4eb_ptr(_269241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1a9d9d287_sptr(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac4385de:;
			{
				_269817_kind=_1a9d9d287_sptr(_269241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1ac438457:;
	}
	{
		
		if ((_1a9d9e475_trt(_269241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac43b26d:;
			{
				return _1a9d8689c_eval_trait_sub_ident(&(*_self_), _269241_d,_1a9d9e475_trt(_269241_d.get()._field_kind.ptr()),_269255_si.get()._field_ident);
			}
		}
		else if ((_1a9d9e211_strct(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1ac43b2d4:;
			{
				jule::Ptr<_1a8d857c0_StructIns> _271717_s = _1a9d9e211_strct(_269817_kind.ptr());
				if (_1a9d972e7_is_instanced_struct(_271717_s)) {
					jule::Bool _271925_used_reference_elem = (_1a9d9d287_sptr(_269241_d.get()._field_kind.ptr()) != nullptr);
					return _1a9d86d97_eval_struct_sub_ident(&(*_self_), _269241_d,_1a9d9e211_strct(_269817_kind.ptr()),_269255_si,_271925_used_reference_elem);
				}
			}
		}
		else if ((_1a9d9dc38_slc(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1ac43b34a:;
			{
				return _1a9d8724e_eval_slice_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a9d9d9c4_arr(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1ac43b3b1:;
			{
				return _1a9d87606_eval_array_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a9d9e6d9_map(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1ac43ba10:;
			{
				return _1a9d879ad_eval_map_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
			}
		}
		else if ((_1a9d9d023_prim(_269817_kind.ptr()) != nullptr)) {
			_case_begin_1ac43ba76:;
			{
				jule::Ptr<_1a9da06b8_Prim> _272917_p = _1a9d9d023_prim(_269817_kind.ptr());
				{
					auto &_match_expr{ _272917_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1ac44196b:;
						{
							return _1a9d87d65_eval_str_sub_ident(&(*_self_), _269241_d,_269255_si.get()._field_ident);
						}
					}
					_match_end_1ac44296c:;
				}
			}
		}
		_match_end_1ac438688:;
	}
	_1a9d73c74_push_err(&(*_self_), _269255_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_269241_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b440_eval_sub_ident(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8aa80_SubIdentExpr> _273938_si) {
	jule::Ptr<_1a9d9ae66_TypeKind> _274017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_274017_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _274417_d = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_273938_si.get()._field_expr));
	if ((_274417_d == nullptr)) {
		return nullptr;
	}
	if (_274417_d.get()._field_decl) {
		return _1a9d8ac7a_eval_type_static(_self_.ptr(), _274417_d,_273938_si);
	}
	return _1a9d8b132_eval_obj_sub_ident(_self_.ptr(), _274417_d,_273938_si);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8b74d_eval_tuple(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8960b_TupleExpr> _275634_tup) {
	jule::Ptr<_1a9da5129_Tuple> _275717_tup_t = jule::new_ptr<_1a9da5129_Tuple>(_1a9da5129_Tuple());
	_275717_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>::alloc(0LL,static_cast<jule::I32>(_275634_tup.get()._field_expr.len()));
	jule::Ptr<_1a8d8d487_TupleExprModel> _276017_model = jule::new_ptr<_1a8d8d487_TupleExprModel>(_1a8d8d487_TupleExprModel(jule::Slice<jule::Ptr<_1a9d71c2d_Data>>::alloc(0LL,static_cast<jule::I32>(_275634_tup.get()._field_expr.len()))));
	jule::Bool _276417_ok = true;
	{
		auto &expr = _275634_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1ac448b82:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1ac448c81_expr = *it;
			{
				jule::Ptr<_1a9d71c2d_Data> _276621_d = _1a9d8c83c_eval_expr_kind(_self_, _1ac448c81_expr.get()._field_kind);
				if ((_276621_d == nullptr)) {
					_276417_ok=false;
					goto _iter_next_1ac448b82;
				}
				_275717_tup_t.get()._field_types = jule::alloc_for_append(_275717_tup_t.get()._field_types,1);_275717_tup_t.get()._field_types.__push(_276621_d.get()._field_kind);
				_276017_model.get()._field_datas = jule::alloc_for_append(_276017_model.get()._field_datas,1);_276017_model.get()._field_datas.__push(_276621_d);
			}
			_iter_next_1ac448b82:;
			++it;
			goto _iter_begin_1ac448b82;
		}
		_iter_end_1ac448b82:;
	}
	if ((!(_276417_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_275717_tup_t, 8))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_276017_model)),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8bb05_eval_map(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1a9da5bda_Map> _278532_m,jule::Ptr<_1d7b8b520_BraceLit> _278545_lit) {
	jule::Ptr<_1a8d8abe3_MapExprModel> _278617_model = jule::new_ptr<_1a8d8abe3_MapExprModel>(_1a8d8abe3_MapExprModel(_278532_m.get()._field_key,_278532_m.get()._field_val,jule::Slice<jule::Ptr<_1a8d8a770_KeyValPairExprModel>>()));
	{
		auto &expr = _278545_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac44c548:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b09a43_Expr> _1ac44c746_expr = *it;
			{
				{
					auto &_match_expr{ _1ac44c746_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1d7b8b70c_KeyValPair>>()) {
						_case_begin_1ac44cacb:;
						{
							goto _match_end_1ac44cd84;
						}
					}
					else {
						_case_begin_1ac44ce0b:;
						{
							_1a9d73c74_push_err(_self_.ptr(), _278545_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ac44cd84:;
				}
				jule::Ptr<_1d7b8b70c_KeyValPair> _280121_pair = _1ac44c746_expr.get()._field_kind.operator jule::Ptr<_1d7b8b70c_KeyValPair>();
				jule::Ptr<_1a9d71c2d_Data> _280321_key = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_280121_pair.get()._field_key));
				if ((_280321_key == nullptr)) {
					return nullptr;
				}
				jule::Ptr<_1a9d71c2d_Data> _280821_val = _1a9d8c83c_eval_expr_kind(_self_, jule::Any(_280121_pair.get()._field_val));
				if ((_280821_val == nullptr)) {
					return nullptr;
				}
				_1a9d12bad_check_assign_type(_self_.get()._field_s, false,_278532_m.get()._field_key,_280321_key,_280121_pair.get()._field_colon);
				_1a9d12bad_check_assign_type(_self_.get()._field_s, false,_278532_m.get()._field_val,_280821_val,_280121_pair.get()._field_colon);
				_278617_model.get()._field_entries = jule::alloc_for_append(_278617_model.get()._field_entries,1);_278617_model.get()._field_entries.__push(jule::new_ptr<_1a8d8a770_KeyValPairExprModel>(_1a8d8a770_KeyValPairExprModel(_280321_key.get()._field_model,_280821_val.get()._field_model)));
			}
			_iter_next_1ac44c548:;
			++it;
			goto _iter_begin_1ac44c548;
		}
		_iter_end_1ac44c548:;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_278532_m, 9))),jule::Ptr<_1a9d9ae66_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_278617_model)),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8be13_eval_brace_lit(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8b520_BraceLit> _282938_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ac453ac1:;
			{
				_1a9d73c74_push_err(_self_.ptr(), _282938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a9d9e6d9_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac453b37:;
			{
				return _1a9d8bb05_eval_map(_self_, _1a9d9e6d9_map(_self_.get()._field_prefix.ptr()),_282938_lit);
			}
		}
		else if ((_1a9d9e211_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ac453906:;
			{
				return _1a9d83c62_eval_struct_lit_explicit(_self_, _1a9d9e211_strct(_self_.get()._field_prefix.ptr()),_282938_lit.get()._field_exprs,_282938_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1ac452c46:;
			{
				_1a9d73c74_push_err(_self_.ptr(), _282938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac452b7a:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c221_eval_anon_fn(_1a9d7379b_Eval* _self_,jule::Ptr<_1d7b8d29c_FnDecl> _284435_decl) {
	_1a9daa55d_TypeChecker _284517_tc = _1a9daa55d_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_1a9da98d1_Referencer>(),jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1a8d98063_FnIns> _284917_ins = _1a9db1245_build_fn(&_284517_tc, _284435_decl);
	_284917_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
			_case_begin_1ac4574a9:;
			{
				jule::Ptr<_1a9cdbc53_ScopeChecker> _285421_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>();
				jule::Ptr<_1a9cdbc53_ScopeChecker> _285521_scc = _1a9ceadb6_new_child_checker(_285421_sc);
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_child_index=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284917_ins;
				_1a9d20a23_check_fn_ins_sc((*_self_)._field_s.ptr(), _284917_ins,_285521_scc);
			}
		}
		else {
			_case_begin_1ac4584bb:;
			{
				_1a9d210b7_check_fn_ins((*_self_)._field_s, _284917_ins);
			}
		}
		_match_end_1ac458466:;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_284917_ins, 1))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8a3b8_AnonFnExprModel>(_1a8d8a3b8_AnonFnExprModel(_284917_ins,_1a9d74923_is_global(&(*_self_)))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c52e_eval_binop(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b8ac6c_BinopExpr> _287734_op) {
	_1a9d90169_BinaryEval _287817_bs = static__1a9d9071e_new_plain(_self_);
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a9da06b8_Prim> _288217_prim = _1a9d9d023_prim(_self_.get()._field_prefix.ptr());
		if ((_288217_prim == nullptr) || (!(_1a9cda02b_is_num(_1a9da0a2b_to_str(_288217_prim.ptr()))))) {
			jule::Ptr<_1a9d9ae66_TypeKind> _288425_prefix = _self_.get()._field_prefix;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288425_prefix;
			});
			return _1a9d95801_eval(&_287817_bs, _287734_op);
		}
	}
	return _1a9d95801_eval(&_287817_bs, _287734_op);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8c83c_eval_expr_kind(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Any _289438_kind) {
	jule::Ptr<_1a9d71c2d_Data> _289517_d = nullptr;
	{
		auto &_match_expr{ _289438_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b09a43_Expr>>()) {
			_case_begin_1ac4619d0:;
			{
				_289517_d=_1a9d8c83c_eval_expr_kind(_self_, _289438_kind.operator jule::Ptr<_1d7b09a43_Expr>().get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b89a29_LitExpr>>()) {
			_case_begin_1ac461a46:;
			{
				_289517_d=_1a9d76606_eval_lit(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d7b89a29_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a0e0_IdentExpr>>()) {
			_case_begin_1ac461aac:;
			{
				_289517_d=_1a9d7abd2_eval_ident(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d7b8a0e0_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a2cc_UnaryExpr>>()) {
			_case_begin_1ac461c99:;
			{
				_289517_d=_1a9d7aee0_eval_unary(_self_, _289438_kind.operator jule::Ptr<_1d7b8a2cc_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a4b9_VariadicExpr>>()) {
			_case_begin_1ac461d10:;
			{
				_289517_d=_1a9d7b2ed_eval_variadic(_self_, _289438_kind.operator jule::Ptr<_1d7b8a4b9_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b89c16_UnsafeExpr>>()) {
			_case_begin_1ac461d76:;
			{
				_289517_d=_1a9d7b60b_eval_unsafe(_self_, _289438_kind.operator jule::Ptr<_1d7b89c16_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8b8e9_SliceExpr>>()) {
			_case_begin_1ac461ded:;
			{
				_289517_d=_1a9d7c0ce_eval_slice_expr(_self_, _289438_kind.operator jule::Ptr<_1d7b8b8e9_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b897e8_IndexingExpr>>()) {
			_case_begin_1ac461e75:;
			{
				_289517_d=_1a9d7e7a7_eval_indexing(_self_, _289438_kind.operator jule::Ptr<_1d7b897e8_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8c059_SlicingExpr>>()) {
			_case_begin_1ac461eec:;
			{
				_289517_d=_1a9d80973_eval_slicing(_self_, _289438_kind.operator jule::Ptr<_1d7b8c059_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a6a6_CastExpr>>()) {
			_case_begin_1ac462074:;
			{
				_289517_d=_1a9d834ae_eval_cast(_self_, _289438_kind.operator jule::Ptr<_1d7b8a6a6_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8a893_NsSelectionExpr>>()) {
			_case_begin_1ac4620eb:;
			{
				_289517_d=_1a9d837bc_eval_ns_selection(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d7b8a893_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8b333_StructLit>>()) {
			_case_begin_1ac462173:;
			{
				_289517_d=_1a9d8405e_eval_struct_lit(_self_, _289438_kind.operator jule::Ptr<_1d7b8b333_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a0e75b_TypeDecl>>()) {
			_case_begin_1ac4621ea:;
			{
				_289517_d=_1a9d8436c_eval_type(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d7a0e75b_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>()) {
			_case_begin_1ac462272:;
			{
				_289517_d=_1a9d85bdc_eval_fn_call(_self_, _289438_kind.operator jule::Ptr<_1d7b8ae59_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8aa80_SubIdentExpr>>()) {
			_case_begin_1ac4622e9:;
			{
				_289517_d=_1a9d8b440_eval_sub_ident(_self_, _289438_kind.operator jule::Ptr<_1d7b8aa80_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8960b_TupleExpr>>()) {
			_case_begin_1ac462371:;
			{
				_289517_d=_1a9d8b74d_eval_tuple(_self_, _289438_kind.operator jule::Ptr<_1d7b8960b_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8b520_BraceLit>>()) {
			_case_begin_1ac4623e8:;
			{
				_289517_d=_1a9d8be13_eval_brace_lit(_self_, _289438_kind.operator jule::Ptr<_1d7b8b520_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d29c_FnDecl>>()) {
			_case_begin_1ac462470:;
			{
				_289517_d=_1a9d8c221_eval_anon_fn(_self_.ptr(), _289438_kind.operator jule::Ptr<_1d7b8d29c_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8ac6c_BinopExpr>>()) {
			_case_begin_1ac4624e7:;
			{
				_289517_d=_1a9d8c52e_eval_binop(_self_, _289438_kind.operator jule::Ptr<_1d7b8ac6c_BinopExpr>());
			}
		}
		_match_end_1ac461914:;
	}
	if ((_289517_d == nullptr)) {
		return nullptr;
	}
	if ((_289517_d.get()._field_kind == nullptr)) {
		return _289517_d;
	}
	if ((!(_289517_d.get()._field_decl)) && (_self_.get()._field_prefix != nullptr)) {
		if (((((((!(_1a9d9bac1_cpp_linked(_289517_d.get()._field_kind.ptr()))) && (_289517_d.get()._field_cast_kind == nullptr)) && (!(_289517_d.get()._field_kind.get()._field_variadic))) && (!(_289517_d.get()._field_lvalue))) && (!(_1a9d725e1_is_const(_289517_d.ptr())))) && (_1a9d9d023_prim(_289517_d.get()._field_kind.ptr()) != nullptr)) && _1a9cda02b_is_num(_1a9d9d023_prim(_289517_d.get()._field_kind.ptr()).get()._field_kind)) {
			_289517_d.get()._field_cast_kind=_289517_d.get()._field_kind;
		}
		_1a9d979e0_apply_cast_kind(_289517_d);
		if ((_1a9d9d023_prim(_289517_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9da38db_is_any(_1a9d9d023_prim(_289517_d.get()._field_kind.ptr()).ptr())))) {
			if ((_1a9d9d023_prim(_self_.get()._field_prefix.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim(_self_.get()._field_prefix.ptr()).ptr())) {
				_289517_d.get()._field_cast_kind=_self_.get()._field_prefix;
				_1a9d977d1_apply_cast_kind_model(_289517_d);
				_289517_d.get()._field_cast_kind=nullptr;
			}
		}
	}
	return _289517_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8cb4a_eval(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b09a43_Expr> _297128_expr) {
	jule::Ptr<_1a9d71c2d_Data> _297217_d = _1a9d8c83c_eval_expr_kind(_self_, _297128_expr.get()._field_kind);
	if ((_297217_d == nullptr) || (_297217_d.get()._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((_1a9d9de9c_fnc(_297217_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac47422e:;
			{
				jule::Ptr<_1a8d98063_FnIns> _297921_f = _1a9d9de9c_fnc(_297217_d.get()._field_kind.ptr());
				if (_1a8d98cde_is_builtin(_297921_f.ptr())) {
					goto _match_end_1ac473c23;
				}
				if (_297921_f.get()._field_generics.len() != static_cast<jule::I32>(static_cast<jule::I32>(_297921_f.get()._field_decl.get()._field_generics.len()))) {
					_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _297128_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_1a8d9557c_is_method(_297921_f.get()._field_decl.ptr())) {
					_1a9d0c955_push_err(_self_.get()._field_s.ptr(), _297128_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1ac473c23:;
	}
	return _297217_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8ce58_eval_expr(jule::Ptr<_1a9d7379b_Eval> _self_,jule::Ptr<_1d7b09a43_Expr> _299733_expr) {
	jule::Ptr<_1a9d71c2d_Data> _299817_d = _1a9d8cb4a_eval(_self_, _299733_expr);
	{
		
		if ((_299817_d == nullptr)) {
			_case_begin_1ac4783ba:;
			{
				return nullptr;
			}
		}
		else if (_299817_d.get()._field_decl) {
			_case_begin_1ac478431:;
			{
				_1a9d73c74_push_err(_self_.ptr(), _299733_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1ac477ce3:;
			{
				return _299817_d;
			}
		}
		_match_end_1ac477c6b:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d7379b_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a9d8d3cb_UnaryEval static__1a9d8d882_new(jule::Ptr<_1a9d7379b_Eval> _301823_e) {
	return _1a9d8d3cb_UnaryEval(_301823_e,jule::Ptr<_1a9d71c2d_Data>(),jule::Ptr<_1d7b8a2cc_UnaryExpr>());
}



inline void _1a9d8da5d_minus(_1a9d8d3cb_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac479e7c:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac47a400:;
			{
				if ((!(_1a9cda02b_is_num(_1a9d9b31d_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac47a466:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1ac479b08:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1ac479a3c:;
	}
	if (_1a9d725e1_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a9c4b036_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac47d6de:;
				{
					_1a9c4a145_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a9c4a585_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac47d766:;
				{
					_1a9c49650_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a9c4a7e9_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac47d7dd:;
				{
					_1a9c49650_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1ac47d48b:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a9d8dc39_plus(_1a9d8d3cb_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac48366c:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac483ae0:;
			{
				if ((!(_1a9cda02b_is_num(_1a9d9b31d_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac483b56:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1ac4832e8:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1ac48322c:;
	}
	if (_1a9d725e1_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a9c4b036_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac486dce:;
				{
					_1a9c4a145_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(static_cast<jule::F64>(static_cast<jule::F64>(_1a9c48b8d_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a9c4a585_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac486e56:;
				{
					_1a9c49650_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a9c4a7e9_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac486ecd:;
				{
					_1a9c49650_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c48e02_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1ac486b7b:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a9d8de15_caret(_1a9d8d3cb_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ac48be39:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac48c3ac:;
			{
				if ((!(_1a9cd9998_is_int(_1a9d9b31d_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac48c423:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1ac48bab5:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1ac48b9e9:;
	}
	if (_1a9d725e1_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a9c4a585_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac49069b:;
				{
					_1a9c49650_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(static_cast<jule::I64>(static_cast<jule::I64>(_1a9c481dc_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1a9c4a7e9_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac490712:;
				{
					_1a9c498c5_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(static_cast<jule::U64>(static_cast<jule::U64>(_1a9c48451_read_u64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1ac490448:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a9d8e0e1_excl(_1a9d8d3cb_UnaryEval* _self_) {
	jule::Ptr<_1a9da06b8_Prim> _313713_t = _1a9d9d023_prim((*_self_)._field_d.get()._field_kind.ptr());
	if ((_313713_t == nullptr) || (!(_1a9da3413_is_bool(_313713_t.ptr())))) {
		(*_self_)._field_d=nullptr;
		return;
	}
	if (_1a9d725e1_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1a9c4aa5d_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ac4958e3:;
				{
					_1a9c49b4a_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1a9c486b5_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1ac4957e4:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a9d8e2bc_star(_1a9d8d3cb_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_1a9d9d4eb_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac498dbe:;
			{
				if ((!(_1a9d746ae_is_unsafe((*_self_)._field_e.ptr())))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1a9da723b_Ptr> _316921_t = _1a9d9d4eb_ptr((*_self_)._field_d.get()._field_kind.ptr());
				if (_1a9da7c0e_is_unsafe(_316921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;
				}
				(*_self_)._field_d.get()._field_kind=_316921_t.get()._field_elem;
			}
		}
		else if ((_1a9d9d287_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac499342:;
			{
				(*_self_)._field_d.get()._field_kind=_1a9d9d287_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1ac498a6c:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1ac498a17:;
	}
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1a9d8e498_amper(_1a9d8d3cb_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8854d_StructLitExprModel>>()) {
			_case_begin_1ac4a047a:;
			{
				jule::Ptr<_1a8d8854d_StructLitExprModel> _318921_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a8d8854d_StructLitExprModel>();
				_1a9d9658d_make_struct_lit_alloc((*_self_)._field_d,_318921_lit);
			}
		}
		else {
			_case_begin_1ac49d786:;
			{
				{
					
					if (_1a9da8061_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1ac49e127:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da723b_Ptr>(_1a9da723b_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_1ac49dca3:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1ac49dc09:;
				}
			}
		}
		_match_end_1ac49d731:;
	}
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	}
}



inline void _1a9d8e674_type_decl(_1a9d8d3cb_UnaryEval* _self_) {
	_1a9daa55d_TypeChecker _321317_tc = _1a9daa55d_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_1a9da98d1_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac4a5183:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9daead4_build_ptr_from_type(&_321317_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac4a51e9:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9dae4b8_build_sptr_from_type(&_321317_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_1ac4a2911:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1ac4a378b:;
	}
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1a9d8e850_eval_data(_1a9d8d3cb_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ac4a85c6:;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _323521_prefix = (*_self_)._field_e.get()._field_prefix;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a9d8c83c_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_323521_prefix;
			}
		}
		else {
			_case_begin_1ac4a7d45:;
			{
				(*_self_)._field_d=_1a9d8c83c_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1ac4a8252:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d8eb2a_eval(_1a9d8d3cb_UnaryEval* _self_,jule::Ptr<_1d7b8a2cc_UnaryExpr> _324427_u) {
	(*_self_)._field_u=_324427_u;
	_1a9d8e850_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	}
	if ((*_self_)._field_d.get()._field_decl) {
		_1a9d8e674_type_decl(&(*_self_));
		return (*_self_)._field_d;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _325517_cast_kind = (*_self_)._field_d.get()._field_cast_kind;
	jule::Ptr<_1a9d9ae66_TypeKind> _325613_kind = (*_self_)._field_d.get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ac4aca92:;
			{
				_1a9d8da5d_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ac4acb08:;
			{
				_1a9d8dc39_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ac4acb6e:;
			{
				_1a9d8de15_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ac4acbd5:;
			{
				_1a9d8e0e1_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac4ad224:;
			{
				_1a9d8e2bc_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac4ad28a:;
			{
				_1a9d8e498_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1ac4aab6c:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1ac4ac8e9:;
	}
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ac4b02d1:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str(_325613_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a9d725e1_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1ac4b0347:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		else if ((_325517_cast_kind != nullptr)) {
			_case_begin_1ac4b03ad:;
			{
				(*_self_)._field_d.get()._field_cast_kind=_325517_cast_kind;
				_1a9d979e0_apply_cast_kind((*_self_)._field_d);
			}
		}
		_match_end_1ac4aecb4:;
	}
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d8d3cb_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a9d90169_BinaryEval static__1a9d9071e_new_plain(jule::Ptr<_1a9d7379b_Eval> _329729_e) {
	return _1a9d90169_BinaryEval(_329729_e,jule::Ptr<_1a9d71c2d_Data>(),jule::Ptr<_1a9d71c2d_Data>(),jule::Ptr<_1d7b77374_Token>());
}



inline _1a9d90169_BinaryEval static__1a9d90a60_new(jule::Ptr<_1a9d7379b_Eval> _330323_e,jule::Ptr<_1d7b77374_Token> _330337_op) {
	return _1a9d90169_BinaryEval(_330323_e,jule::Ptr<_1a9d71c2d_Data>(),jule::Ptr<_1a9d71c2d_Data>(),_330337_op);
}



inline jule::Bool _1a9d90d18_check_type_compatibility(_1a9d90169_BinaryEval* _self_) {
	return _1a9d13153_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1a9d910d2_check_struct_common_operator_compatibility(_1a9d90169_BinaryEval* _self_) {
	jule::Ptr<_1a8d98063_FnIns> _331717_overload = nullptr;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ac4b686a:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ac4b655c:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ac4b76a1:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ac4b7717:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ac4b777d:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac4b62a4:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac4b631a:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac4b6381:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ac4b63e7:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ac4b7959:;
			{
				_331717_overload=_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1ac4b623d:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1ac4b61d8:;
	}
	if ((_331717_overload == nullptr)) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	}
	jule::Ptr<_1a8d971c7_ParamIns> _334917_p = _331717_overload.get()._field_params[1LL];
	return _1a9d12bad_check_assign_type((*_self_)._field_e.get()._field_s, _334917_p.get()._field_decl.get()._field_reference,_334917_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d91346_eval_nil(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d9c572_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_1a9d9b31d_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4c2b2e:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4c1039:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1ac4c27bb:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d915aa_eval_enum(_1a9d90169_BinaryEval* _self_) {
	jule::Ptr<_1a943b309_Enum> _337417_enm = _1a9d9d760_enm((*_self_)._field_l.get()._field_kind.ptr());
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4c4856:;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _337821_rkind = (*_self_)._field_r.get()._field_kind;
				if ((_1a9d9d760_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_337821_rkind=_1a9d9d760_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				}
				if ((!(_1a9d13153_check_type_compatibility((*_self_)._field_e.get()._field_s, _337417_enm.get()._field_kind.get()._field_kind,_337821_rkind,(*_self_)._field_op)))) {
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		_match_end_1ac4c50c6:;
	}
	if ((_1a9d9d760_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_337417_enm != _1a9d9d760_enm((*_self_)._field_r.get()._field_kind.ptr()))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_337417_enm.get()._field_ident),jule::Any(_1a9d9b31d_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac4cadac:;
			{
				if ((!(_1a9cda02b_is_num(_1a9d9b31d_to_str(_337417_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ac4cae23:;
			{
				if ((_1a9d9d023_prim(_337417_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a9cd9998_is_int(_1a9da0a2b_to_str(_1a9d9d023_prim(_337417_enm.get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ac4c9086:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_337417_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1ac4c9a8c:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d9181e_eval_sptr(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4d1665:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4d0ca2:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4d108d:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d91a83_eval_ptr(_1a9d90169_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ac4d3ba6:;
			{
				if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1ac4d35bd:;
			{
				if ((_1a9d9d4eb_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				}
				if (_1a9da7c0e_is_unsafe(_1a9d9d4eb_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				}
				if ((!(_1a9d97605_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ac4d2633:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4d3502:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d91ce7_eval_arr(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4dc132:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4da806:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4daae2:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d9205b_eval_slc(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4deb29:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4dd342:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4dd5d9:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d922c0_eval_fn(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4e2621:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4e0d39:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4e10d1:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d92534_eval_struct(_1a9d90169_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ac4e35de:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ac4e3655:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ac4e36bb:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac4e3732:;
			{
				if ((_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4e3798:;
			{
				if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		_match_end_1ac4e3523:;
	}
	if ((!(_1a9d910d2_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	}
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d92798_eval_trait(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac4ee881:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac4ede9b:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac4edb38:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d92a0c_eval_any(_1a9d90169_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac502a82:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac50084e:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1ac50171d:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d92c71_eval_bool(_1a9d90169_BinaryEval* _self_) {
	if ((!(_1a9d90d18_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1ac505579:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ac503c92:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1a9d9b31d_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ac504039:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d92ed5_eval_str(_1a9d90169_BinaryEval* _self_) {
	jule::Str _364717_rk = _1a9d9b31d_to_str((*_self_)._field_r.get()._field_kind.ptr());
	if ((_364717_rk != jule::Str("str", 3))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_364717_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ac508b65:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac508bcb:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		else {
			_case_begin_1ac5068aa:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1ac506855:;
	}
}



inline void _1a9d931b1_set_type_to_greater(_1a9d90169_BinaryEval* _self_) {
	if (_1a9d725e1_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1a9d725e1_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if (_1a9d725e1_is_const((*_self_)._field_r.ptr())) {
		return;
	}
	_julec_label_set:;
	if (_1a9cd82e3_is_greater(_1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	}
}



inline void _1a9d93403_check_mod_data(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _369038_d) {
	if ((!(_1a9d725e1_is_const(_369038_d.ptr())))) {
		if ((_1a9d9d023_prim(_369038_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9cd9998_is_int(_1a9d9d023_prim(_369038_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_1a9d5ca1b_sig_assignable(jule::Str("i64", 3),_369038_d)) {
			_case_begin_1ac5109b3:;
			{
				_1a9c49650_set_i64(_369038_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_369038_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a9d5cb4d_unsig_assignable(jule::Str("u64", 3),_369038_d)) {
			_case_begin_1ac5106d8:;
			{
				_1a9c498c5_set_u64(_369038_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_369038_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1ac510672:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac50dbae:;
	}
}



inline void _1a9d935ce_mod(_1a9d90169_BinaryEval* _self_) {
	_1a9d93403_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1a9d93403_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a9d939ca_numbers_are_compatibile(_1a9d90169_BinaryEval* _self_,jule::Str& _371239_lk,jule::Str& _371249_rk) {
	if ((!(_1a9cda02b_is_num(_371249_rk)))) {
		return false;
	}
	if (_1a9d725e1_is_const((*_self_)._field_l.ptr())) {
		return true;
	}
	if ((_371239_lk == jule::Str("f32", 3))) {
		if (_1a9d725e1_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_371249_rk == jule::Str("f32", 3));
	}
	if ((_371239_lk == jule::Str("f64", 3))) {
		if (_1a9d725e1_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_371249_rk == jule::Str("f64", 3));
	}
	if (_1a9d725e1_is_const((*_self_)._field_r.ptr())) {
		return true;
	}
	return _371239_lk == _371249_rk;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d93c2d_eval_float(_1a9d90169_BinaryEval* _self_) {
	jule::Str _374213_lk = _1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _374313_rk = _1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	if ((!(_1a9d939ca_numbers_are_compatibile(&(*_self_), _374213_lk,_374313_rk)))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ac51823a:;
			{
				if ((!(_1a9d725e1_is_const((*_self_)._field_l.ptr()))) || (!(_1a9d5cc80_int_assignable(jule::Str("i64", 3),(*_self_)._field_l)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				if ((!(_1a9d725e1_is_const((*_self_)._field_r.ptr()))) || (!(_1a9d5cc80_int_assignable(jule::Str("u64", 3),(*_self_)._field_r)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				_1a9c49650_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1a9c498c5_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1a9d96eb7_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1ac5195d2:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac520187:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		_match_end_1ac520132:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ac522200:;
			{
				_1a9d931b1_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac522266:;
			{
				if ((!(_1a9cd9998_is_int(_374313_rk)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_374213_lk),jule::Any(_374313_rk)}));
					return nullptr;
				}
				_1a9d935ce_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1ac519a77:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac5207d6:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d93e92_eval_int(_1a9d90169_BinaryEval* _self_) {
	jule::Str _380613_lk = _1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _380713_rk = _1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ac524e5b:;
			{
				if ((!(_1a9cd9998_is_int(_380613_lk))) || (!(_1a9cd9998_is_int(_380713_rk)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_380613_lk),jule::Any(_380713_rk)}));
					return nullptr;
				}
				if ((!(_1a9d96eb7_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1ac525841:;
	}
	if ((!(_1a9d939ca_numbers_are_compatibile(&(*_self_), _380613_lk,_380713_rk)))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_380613_lk),jule::Any(_380713_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac525db3:;
			{
				return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
			}
		}
		_match_end_1ac529306:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ac52b759:;
			{
				_1a9d931b1_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac52b7c0:;
			{
				_1a9d935ce_mod(&(*_self_));
				_1a9d931b1_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ac52945a:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ac529d51:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d94206_eval_prim(_1a9d90169_BinaryEval* _self_) {
	jule::Ptr<_1a9da06b8_Prim> _386513_prim = _1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr());
	{
		
		if (_1a9da3413_is_bool(_386513_prim.ptr())) {
			_case_begin_1ac52db79:;
			{
				return _1a9d92c71_eval_bool(&(*_self_));
			}
		}
		else if (_1a9da3677_is_str(_386513_prim.ptr())) {
			_case_begin_1ac52dc01:;
			{
				return _1a9d92ed5_eval_str(&(*_self_));
			}
		}
		_match_end_1ac52daad:;
	}
	if ((_1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a9da0a2b_to_str(_386513_prim.ptr())),jule::Any(_1a9d9b31d_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		
		if (_1a9cd9c84_is_float(_386513_prim.get()._field_kind)) {
			_case_begin_1ac531918:;
			{
				return _1a9d93c2d_eval_float(&(*_self_));
			}
		}
		else if (_1a9cd9998_is_int(_386513_prim.get()._field_kind)) {
			_case_begin_1ac5319d4:;
			{
				return _1a9d93e92_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1ac5311ba:;
			{
				return nullptr;
			}
		}
		_match_end_1ac531154:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d9446a_eval_op(_1a9d90169_BinaryEval* _self_) {
	{
		
		if (_1a9d9c099_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ac53340e:;
			{
				_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr())) {
			_case_begin_1ac533475:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ac53351e;
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
			_case_begin_1ac53351e:;
			{
				return _1a9d92a0c_eval_any(&(*_self_));
			}
		}
		else if (_1a9d9bd35_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ac533596:;
			{
				return _1a9d91346_eval_nil(&(*_self_));
			}
		}
		else if ((_1a9d9d760_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac532d9d:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ac532e25;
			}
		}
		else if ((_1a9d9d760_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac532e25:;
			{
				return _1a9d915aa_eval_enum(&(*_self_));
			}
		}
		else if ((_1a9d9d287_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac532e9c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ac53361d;
			}
		}
		else if ((_1a9d9d287_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac53361d:;
			{
				return _1a9d9181e_eval_sptr(&(*_self_));
			}
		}
		else if ((_1a9d9d4eb_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac533684:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ac5336ea;
			}
		}
		else if ((_1a9d9d4eb_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac5336ea:;
			{
				return _1a9d91a83_eval_ptr(&(*_self_));
			}
		}
		else if ((_1a9d9d9c4_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac533761:;
			{
				return _1a9d91ce7_eval_arr(&(*_self_));
			}
		}
		else if ((_1a9d9dc38_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac5337c7:;
			{
				return _1a9d9205b_eval_slc(&(*_self_));
			}
		}
		else if ((_1a9d9de9c_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac53383d:;
			{
				return _1a9d922c0_eval_fn(&(*_self_));
			}
		}
		else if ((_1a9d9e475_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac5338b5:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ac53393c;
			}
		}
		else if ((_1a9d9e475_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac53393c:;
			{
				return _1a9d92798_eval_trait(&(*_self_));
			}
		}
		else if ((_1a9d9e211_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac5339b4:;
			{
				return _1a9d92534_eval_struct(&(*_self_));
			}
		}
		else if ((_1a9d9d023_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac533a3b:;
			{
				return _1a9d94206_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1ac532d37:;
			{
				return nullptr;
			}
		}
		_match_end_1ac532c6b:;
	}
}



inline void _1a9d946e0_eval_const(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _393534_d) {
	{
		
		if ((_393534_d == nullptr)) {
			_case_begin_1ac542be3:;
			{
				return;
			}
		}
		else if ((!(_1a9d725e1_is_const((*_self_)._field_l.ptr()))) || (!(_1a9d725e1_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1ac542c6a:;
			{
				_393534_d.get()._field_constant=nullptr;
				return;
			}
		}
		_match_end_1ac542ad3:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ac543cb0:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac543d7b:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ac5443a9:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool(_1a9c4bbc4_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ac544420:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool(_1a9c4b8b6_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ac544486:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ac54450d:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ac544585:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ac54460c:;
			{
				_393534_d.get()._field_constant=static__1a9c473a6_new_bool((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ac544684:;
			{
				_1a9c4d027_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ac54470b:;
			{
				_1a9c4d335_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac544783:;
			{
				_1a9c4d643_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ac54480a:;
			{
				jule::Bool _397217_ok = _1a9c4d951_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_397217_ok)) && (_1a9c493ca_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1a9da06b8_Prim> _397721_prim = _1a9d9d023_prim(_393534_d.get()._field_kind.ptr());
				{
					
					if (_1a9cd9415_is_sig_int(_397721_prim.get()._field_kind)) {
						_case_begin_1ac5522eb:;
						{
							_1a9c49650_set_i64(_393534_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_393534_d.get()._field_constant.ptr())));
						}
					}
					else if (_1a9cd9701_is_unsig_int(_397721_prim.get()._field_kind)) {
						_case_begin_1ac552373:;
						{
							_1a9c498c5_set_u64(_393534_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_393534_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1ac552230:;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac544882:;
			{
				jule::Bool _398517_ok = _1a9c4dc5e_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_398517_ok)) && (_1a9c493ca_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ac544909:;
			{
				_1a9c4e37a_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ac544981:;
			{
				_1a9c4e06c_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ac544a08:;
			{
				_1a9c4e688_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ac544a80:;
			{
				_1a9c4e996_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ac544b07:;
			{
				_1a9c4eca4_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_393534_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1ac543b06:;
	}
	_1a9d982b5_apply_cast_model_by_enum(_393534_d,_1a9d9d760_enm(_393534_d.get()._field_kind.ptr()));
	jule::Ptr<_1a9da06b8_Prim> _400917_prim = _1a9d9d023_prim(_393534_d.get()._field_kind.ptr());
	if ((_400917_prim == nullptr) || (!(_1a9cda02b_is_num(_1a9da0a2b_to_str(_400917_prim.ptr()))))) {
		_393534_d.get()._field_model=jule::Any(_393534_d.get()._field_constant);
		return;
	}
	if (((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2))) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant)) {
			_393534_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_400917_prim=_1a9d9d023_prim(_393534_d.get()._field_kind.ptr());
		}
	}
	_1a9d96291_fit_bitsize(_393534_d);
	_1a9d9855c_cast_const_by_type(_400917_prim.get()._field_kind,_393534_d);
}



inline void _1a9d94965_check_data(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _402534_d) {
	jule::Ptr<_1a8d98063_FnIns> _402613_f = _1a9d9de9c_fnc(_402534_d.get()._field_kind.ptr());
	if (((_402613_f != nullptr) && (_402613_f.get()._field_decl != nullptr)) && _1a8d9557c_is_method(_402613_f.get()._field_decl.ptr())) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1a9d94b41_check_datas(_1a9d90169_BinaryEval* _self_) {
	_1a9d94965_check_data(&(*_self_), (*_self_)._field_l);
	_1a9d94965_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1a9d94db6_set_model(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _403733_d) {
	if (_1a9d725e1_is_const(_403733_d.ptr())) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant)) {
			return;
		}
	}
	jule::Ptr<_1a9d71c2d_Data> _404518_l = (*_self_)._field_l;
	jule::Ptr<_1a9d71c2d_Data> _404525_r = (*_self_)._field_r;
	std::tie(_404518_l,_404525_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a9d728ee_good_operand(_404518_l.ptr(), _404525_r)))) {
		std::tie(_404518_l,_404525_r) = std::make_tuple(_404525_r,_404518_l);
	}
	_403733_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d878e3_BinopExprModel>(_1a8d878e3_BinopExprModel(jule::new_ptr<_1a8d8742b_OperandExprModel>(_1a8d8742b_OperandExprModel(_404518_l.get()._field_kind,_404518_l.get()._field_model)),jule::new_ptr<_1a8d8742b_OperandExprModel>(_1a8d8742b_OperandExprModel(_404525_r.get()._field_kind,_404525_r.get()._field_model)),(*_self_)._field_op)));
}



inline void _1a9d9513b_post_eval(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _406333_d) {
	_406333_d.get()._field_lvalue=false;
	_1a9d94db6_set_model(&(*_self_), _406333_d);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d954e3_solve_explicit(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1a9d71c2d_Data>& _406838_l,jule::Ptr<_1a9d71c2d_Data>& _406853_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_406838_l,_406853_r);
	_1a9d94b41_check_datas(&(*_self_));
	jule::Ptr<_1a9d71c2d_Data> _407317_d = _1a9d9446a_eval_op(&(*_self_));
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_406838_l,_406853_r);
	_1a9d946e0_eval_const(&(*_self_), _407317_d);
	if ((_407317_d != nullptr)) {
		_407317_d.get()._field_mutable=true;
		_1a9d9513b_post_eval(&(*_self_), _407317_d);
	}
	return _407317_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d95801_eval(_1a9d90169_BinaryEval* _self_,jule::Ptr<_1d7b8ac6c_BinopExpr>& _408828_op) {
	if ((_408828_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1a9d73c74_push_err((*_self_)._field_e.ptr(), _408828_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a9d74093_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _409517_l = _1a9d8c83c_eval_expr_kind((*_self_)._field_e, jule::Any(_408828_op.get()._field_left));
	if ((_409517_l == nullptr) || (_409517_l.get()._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _410017_prefix = (*_self_)._field_e.get()._field_prefix;
	(*_self_)._field_e.get()._field_prefix=_409517_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_410017_prefix;
	});
	jule::Ptr<_1a9d71c2d_Data> _410317_r = _1a9d8c83c_eval_expr_kind((*_self_)._field_e, jule::Any(_408828_op.get()._field_right));
	if ((_410317_r == nullptr) || (_410317_r.get()._field_kind == nullptr)) {
		return nullptr;
	}
	(*_self_)._field_op=_408828_op.get()._field_op;
	jule::Ptr<_1a9d71c2d_Data> _411017_d = _1a9d954e3_solve_explicit(&(*_self_), _409517_l,_410317_r);
	if (((_411017_d != nullptr) && _409517_l.get()._field_is_rune) && _410317_r.get()._field_is_rune) {
		_411017_d.get()._field_is_rune=true;
	}
	return _411017_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d90169_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d9a22e_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9d9b31d_to_str(_1a9d9ae66_TypeKind* _self_) {
	if (_1a9d9bd35_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	}
	jule::Str _7717_kind = jule::Str();
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	}
	if (_1a9d9bac1_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1a9d9aa37_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1a9d9a5d6_to_str((*_self_)._field_kind);
	}
	return _7717_kind;
}



inline jule::Bool _1a9d9b62b_equals(jule::Ptr<_1a9d9ae66_TypeKind> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _9326_other) {
	if (_1a9d9bd35_is_nil(_self_.ptr())) {
		return _1a9d9bd35_is_nil(_9326_other.ptr());
	}
	if (_1a9d9bac1_cpp_linked(_self_.ptr())) {
		return _1a9d9bac1_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident);
	}
	return _1a9d9aa37_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1a9d9a8e4_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1a9d9bac1_cpp_linked(_1a9d9ae66_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1a9d9bd35_is_nil(_1a9d9ae66_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1a9d9c099_void(_1a9d9ae66_TypeKind* _self_) {
	jule::Ptr<_1a9da06b8_Prim> _11613_prim = _1a9d9d023_prim(&(*_self_));
	return (_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4));
}



inline jule::Bool _1a9d9c30d_mutable(_1a9d9ae66_TypeKind* _self_) {
	{
		_1a9d9ae66_TypeKind* _12321__self = (&((*_self_)));
		if ((_1a9d9e211_strct(_12321__self) != nullptr)) {
			return _1a9d9e211_strct(_12321__self).get()._field_mutable;
		}
		if ((_1a9d9e475_trt(_12321__self) != nullptr)) {
			return _1a9d9e475_trt(_12321__self).get()._field_mutable;
		}
		if ((_1a9d9d023_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1a9da06b8_Prim> _13221_p = _1a9d9d023_prim(_12321__self);
			return _1a9da38db_is_any(_13221_p.ptr());
		}
		if ((_1a9d9d9c4_arr(_12321__self) != nullptr)) {
			return _1a9d9c30d_mutable(_1a9d9d9c4_arr(_12321__self).get()._field_elem.ptr());
		}
		return ((_1a9d9dc38_slc(_12321__self) != nullptr) || (_1a9d9d4eb_ptr(_12321__self) != nullptr)) || (_1a9d9d287_sptr(_12321__self) != nullptr);
	}
}



inline jule::Bool _1a9d9c572_nil_compatible(_1a9d9ae66_TypeKind* _self_) {
	{
		_1a9d9ae66_TypeKind* _14721__self = (&((*_self_)));
		jule::Ptr<_1a9da06b8_Prim> _14917_prim = _1a9d9d023_prim(_14721__self);
		if ((_14917_prim != nullptr) && _1a9da38db_is_any(_14917_prim.ptr())) {
			return true;
		}
		return (((((_1a9d9bd35_is_nil(_14721__self) || (_1a9d9de9c_fnc(_14721__self) != nullptr)) || (_1a9d9d287_sptr(_14721__self) != nullptr)) || (_1a9d9d4eb_ptr(_14721__self) != nullptr)) || (_1a9d9e475_trt(_14721__self) != nullptr)) || (_1a9d9dc38_slc(_14721__self) != nullptr)) || (_1a9d9e6d9_map(_14721__self) != nullptr);
	}
}



inline jule::Bool _1a9d9c7d6_performs_rc(_1a9d9ae66_TypeKind* _self_) {
	{
		_1a9d9ae66_TypeKind* _16721__self = (&((*_self_)));
		return ((_1a9d9d287_sptr(_16721__self) != nullptr) || (_1a9d9dc38_slc(_16721__self) != nullptr)) || (_1a9d9e475_trt(_16721__self) != nullptr);
	}
}



inline jule::Bool _1a9d9ca4a_supports_cloning(_1a9d9ae66_TypeKind* _self_) {
	{
		_1a9d9ae66_TypeKind* _17521__self = (&((*_self_)));
		{
			
			if ((_1a9d9d023_prim(_17521__self) != nullptr)) {
				_case_begin_1ac5810b6:;
				{
					return (!(_1a9da38db_is_any(_1a9d9d023_prim(_17521__self).ptr())));
				}
			}
			else if ((_1a9d9d760_enm(_17521__self) != nullptr)) {
				_case_begin_1ac58112c:;
				{
					return true;
				}
			}
			else if ((_1a9d9de9c_fnc(_17521__self) != nullptr)) {
				_case_begin_1ac580d1e:;
				{
					return true;
				}
			}
			else if ((_1a9d9d4eb_ptr(_17521__self) != nullptr)) {
				_case_begin_1ac580d85:;
				{
					return true;
				}
			}
			else if ((_1a9d9dc38_slc(_17521__self) != nullptr)) {
				_case_begin_1ac580deb:;
				{
					return _1a9d9ca4a_supports_cloning(_1a9d9dc38_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a9d9e6d9_map(_17521__self) != nullptr)) {
				_case_begin_1ac580923:;
				{
					jule::Ptr<_1a9da5bda_Map> _18821_m = _1a9d9e6d9_map(_17521__self);
					return _1a9d9ca4a_supports_cloning(_18821_m.get()._field_key.ptr()) && _1a9d9ca4a_supports_cloning(_18821_m.get()._field_val.ptr());
				}
			}
			else if ((_1a9d9d9c4_arr(_17521__self) != nullptr)) {
				_case_begin_1ac580989:;
				{
					return _1a9d9ca4a_supports_cloning(_1a9d9d9c4_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a9d9d287_sptr(_17521__self) != nullptr)) {
				_case_begin_1ac580a00:;
				{
					return _1a9d9ca4a_supports_cloning(_1a9d9d287_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a9d9e211_strct(_17521__self) != nullptr)) {
				_case_begin_1ac580a66:;
				{
					jule::Ptr<_1a8d857c0_StructIns> _19525_s = _1a9d9e211_strct(_17521__self);
					return ((_19525_s.get()._field_decl != nullptr) && (!(_19525_s.get()._field_decl.get()._field_cpp_linked))) && _1a8d8446c_is_derives(_19525_s.get()._field_decl.ptr(), jule::Str("Clone", 5));
				}
			}
			else {
				_case_begin_1ac5808ac:;
				{
					return false;
				}
			}
			_match_end_1ac580835:;
		}
	}
}



inline jule::Bool _1a9d9ccae_variadicable(_1a9d9ae66_TypeKind* _self_) {
	{
		_1a9d9ae66_TypeKind* _20821__self = (&((*_self_)));
		return (_1a9d9dc38_slc(_20821__self) != nullptr);
	}
}



inline jule::Ptr<_1a9da06b8_Prim> _1a9d9d023_prim(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da06b8_Prim>>()) {
			_case_begin_1ac588b07:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da06b8_Prim>();
			}
		}
		else {
			_case_begin_1ac57d8cc:;
			{
				return nullptr;
			}
		}
		_match_end_1ac57d877:;
	}
}



inline jule::Ptr<_1a9da3bc7_Sptr> _1a9d9d287_sptr(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da3bc7_Sptr>>()) {
			_case_begin_1ac5898a5:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da3bc7_Sptr>();
			}
		}
		else {
			_case_begin_1ac57d998:;
			{
				return nullptr;
			}
		}
		_match_end_1ac57d943:;
	}
}



inline jule::Ptr<_1a9da723b_Ptr> _1a9d9d4eb_ptr(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da723b_Ptr>>()) {
			_case_begin_1ac58950e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da723b_Ptr>();
			}
		}
		else {
			_case_begin_1ac58972e:;
			{
				return nullptr;
			}
		}
		_match_end_1ac5896c9:;
	}
}



inline jule::Ptr<_1a943b309_Enum> _1a9d9d760_enm(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a943b309_Enum>>()) {
			_case_begin_1ac590119:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a943b309_Enum>();
			}
		}
		else {
			_case_begin_1ac5902e5:;
			{
				return nullptr;
			}
		}
		_match_end_1ac590290:;
	}
}



inline jule::Ptr<_1a9da67ce_Arr> _1a9d9d9c4_arr(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da67ce_Arr>>()) {
			_case_begin_1ac590d73:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da67ce_Arr>();
			}
		}
		else {
			_case_begin_1ac59104e:;
			{
				return nullptr;
			}
		}
		_match_end_1ac590ee9:;
	}
}



inline jule::Ptr<_1a9da4634_Slc> _1a9d9dc38_slc(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da4634_Slc>>()) {
			_case_begin_1ac591acc:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da4634_Slc>();
			}
		}
		else {
			_case_begin_1ac591ca8:;
			{
				return nullptr;
			}
		}
		_match_end_1ac591c53:;
	}
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9d9de9c_fnc(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1ac592836:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8d98063_FnIns>();
			}
		}
		else {
			_case_begin_1ac592a12:;
			{
				return nullptr;
			}
		}
		_match_end_1ac5929ac:;
	}
}



inline jule::Ptr<_1a8d857c0_StructIns> _1a9d9e211_strct(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d857c0_StructIns>>()) {
			_case_begin_1ac593590:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8d857c0_StructIns>();
			}
		}
		else {
			_case_begin_1ac59376b:;
			{
				return nullptr;
			}
		}
		_match_end_1ac593716:;
	}
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d9e475_trt(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a8ea7a57_Trait>>()) {
			_case_begin_1ac5942e9:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a8ea7a57_Trait>();
			}
		}
		else {
			_case_begin_1ac5944c5:;
			{
				return nullptr;
			}
		}
		_match_end_1ac594470:;
	}
}



inline jule::Ptr<_1a9da5bda_Map> _1a9d9e6d9_map(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da5bda_Map>>()) {
			_case_begin_1ac595053:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da5bda_Map>();
			}
		}
		else {
			_case_begin_1ac595273:;
			{
				return nullptr;
			}
		}
		_match_end_1ac59521d:;
	}
}



inline jule::Ptr<_1a9da5129_Tuple> _1a9d9e94d_tup(_1a9d9ae66_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9da5129_Tuple>>()) {
			_case_begin_1ac595d01:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a9da5129_Tuple>();
			}
		}
		else {
			_case_begin_1ac596021:;
			{
				return nullptr;
			}
		}
		_match_end_1ac595ebb:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d9ae66_TypeKind _Src) {
	_Stream << _1a9d9b31d_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a9da0201_checked(_1a9d9ed05_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1a9da03cc_remove_kind(_1a9d9ed05_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9d9ed05_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9da0a2b_to_str(_1a9da06b8_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a9da0d39_equals(jule::Ptr<_1a9da06b8_Prim> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _35126_other) {
	jule::Ptr<_1a9da06b8_Prim> _35213_prim = _1a9d9d023_prim(_35126_other.ptr());
	if ((_35213_prim == nullptr)) {
		return false;
	}
	return _self_.get()._field_kind == _35213_prim.get()._field_kind;
}



inline jule::Bool _1a9da129b_is_i8(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1a9da1510_is_i16(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1a9da1774_is_i32(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1a9da19d8_is_i64(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1a9da1c4c_is_u8(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1a9da1eb1_is_u16(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1a9da2225_is_u32(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1a9da2489_is_u64(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1a9da26ed_is_f32(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1a9da2962_is_f64(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1a9da2bc6_is_int(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1a9da2e3a_is_uint(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1a9da319e_is_uintptr(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a9da3413_is_bool(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1a9da3677_is_str(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1a9da38db_is_any(_1a9da06b8_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da06b8_Prim _Src) {
	_Stream << _1a9da0a2b_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da403a_to_str(_1a9da3bc7_Sptr* _self_) {
	return jule::Str("&", 1) + _1a9d9b31d_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a9da4348_equals(jule::Ptr<_1a9da3bc7_Sptr> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _42026_other) {
	jule::Ptr<_1a9da3bc7_Sptr> _42113_sptr = _1a9d9d287_sptr(_42026_other.ptr());
	if ((_42113_sptr == nullptr)) {
		return false;
	}
	return _1a9d9b62b_equals(_self_.get()._field_elem, _42113_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da3bc7_Sptr _Src) {
	_Stream << _1a9da403a_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da4aa7_to_str(_1a9da4634_Slc* _self_) {
	return jule::Str("[]", 2) + _1a9d9b31d_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a9da4db5_equals(jule::Ptr<_1a9da4634_Slc> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _43926_other) {
	jule::Ptr<_1a9da4634_Slc> _44013_slc = _1a9d9dc38_slc(_43926_other.ptr());
	if ((_44013_slc == nullptr)) {
		return false;
	}
	return _1a9d9b62b_equals(_self_.get()._field_elem, _44013_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da4634_Slc _Src) {
	_Stream << _1a9da4aa7_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da5525_to_str(_1a9da5129_Tuple* _self_) {
	jule::Str _45617_s = jule::Str("(", 1);
	_45617_s+=_1a9d9b31d_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ac5a842e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9ae66_TypeKind> &_1ac5a85a5_t = *it;
			{
				_45617_s+=jule::Str(",", 1);
				_45617_s+=_1a9d9b31d_to_str(_1ac5a85a5_t.ptr());
			}
			_iter_next_1ac5a842e:;
			++it;
			goto _iter_begin_1ac5a842e;
		}
		_iter_end_1ac5a842e:;
	}
	_45617_s+=jule::Str(")", 1);
	return _45617_s;
}



inline jule::Bool _1a9da5833_equals(jule::Ptr<_1a9da5129_Tuple> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _46726_other) {
	jule::Ptr<_1a9da5129_Tuple> _46813_tup = _1a9d9e94d_tup(_46726_other.ptr());
	if ((_46813_tup == nullptr)) {
		return false;
	}
	if (_self_.get()._field_types.len() != static_cast<jule::I32>(static_cast<jule::I32>(_46813_tup.get()._field_types.len()))) {
		return false;
	}
	jule::I32 _47717_i = 0LL;
	for (; _47717_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_types.len())); (_47717_i)++) {
		{
			if ((!(_1a9d9b62b_equals(_self_.get()._field_types[_47717_i], _46813_tup.get()._field_types[_47717_i])))) {
				return false;
			}
		}
	_iter_next_1ac5ab223:;
	}
	_iter_end_1ac5ab223:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da5129_Tuple _Src) {
	_Stream << _1a9da5525_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da604d_to_str(_1a9da5bda_Map* _self_) {
	jule::Str _49717_s = jule::Str("[", 1);
	_49717_s+=_1a9d9b31d_to_str((*_self_)._field_key.ptr());
	_49717_s+=jule::Str(":", 1);
	_49717_s+=_1a9d9b31d_to_str((*_self_)._field_val.ptr());
	_49717_s+=jule::Str("]", 1);
	return _49717_s;
}



inline jule::Bool _1a9da635b_equals(jule::Ptr<_1a9da5bda_Map> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _50626_other) {
	jule::Ptr<_1a9da5bda_Map> _50713_map = _1a9d9e6d9_map(_50626_other.ptr());
	if ((_50713_map == nullptr)) {
		return false;
	}
	return _1a9d9b62b_equals(_self_.get()._field_key, _50713_map.get()._field_key) && _1a9d9b62b_equals(_self_.get()._field_val, _50713_map.get()._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da5bda_Map _Src) {
	_Stream << _1a9da604d_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da6b42_to_str(_1a9da67ce_Arr* _self_) {
	jule::Str _52517_s = jule::Str("[", 1);
	_52517_s+=_1a9ba8a98_itoa((*_self_)._field_n);
	_52517_s+=jule::Str("]", 1);
	_52517_s+=_1a9d9b31d_to_str((*_self_)._field_elem.ptr());
	return _52517_s;
}



inline jule::Bool _1a9da6e50_equals(jule::Ptr<_1a9da67ce_Arr> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _53326_other) {
	jule::Ptr<_1a9da67ce_Arr> _53413_arr = _1a9d9d9c4_arr(_53326_other.ptr());
	if ((_53413_arr == nullptr)) {
		return false;
	}
	return (_self_.get()._field_n == _53413_arr.get()._field_n) && _1a9d9b62b_equals(_self_.get()._field_elem, _53413_arr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da67ce_Arr _Src) {
	_Stream << _1a9da6b42_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a9da759e_to_str(_1a9da723b_Ptr* _self_) {
	if (_1a9da7c0e_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + _1a9d9b31d_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a9da78ac_equals(jule::Ptr<_1a9da723b_Ptr> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _55726_other) {
	jule::Ptr<_1a9da723b_Ptr> _55813_ptr = _1a9d9d4eb_ptr(_55726_other.ptr());
	if ((_55813_ptr == nullptr)) {
		return false;
	}
	return _1a9d9b62b_equals(_self_.get()._field_elem, _55813_ptr.get()._field_elem);
}



inline jule::Bool _1a9da7c0e_is_unsafe(_1a9da723b_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da723b_Ptr _Src) {
	_Stream << _1a9da759e_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9da98d1_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a9daac23_push_err(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7b77374_Token> _71927_token,jule::Str _71942_fmt,jule::Slice<jule::Any> _71955_args) {
	_1a9d0c955_push_err((*_self_)._field_s.ptr(), _71927_token,_71942_fmt,_71955_args);
}



inline void _1a9daadee_allow_builtin(_1a9daa55d_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a9dab0ca_disallow_builtin(_1a9daa55d_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1a9da06b8_Prim> _1a9dab3d8_build_prim(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _73130_decl) {
	if ((!(_1a9da9518_is_prim(_73130_decl.get()._field_ident)))) {
		_1a9daac23_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_73130_decl.get()._field_generics.len() > 0LL)) {
		_1a9daac23_push_err(&(*_self_), _73130_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_73130_decl.get()._field_ident)}));
		return nullptr;
	}
	return _1a9da8e41_build_prim_type(_73130_decl.get()._field_ident);
}



inline void _1a9dab7a1_push_cycle_error(_1a9daa55d_TypeChecker* _self_,jule::Any _74531_def1,jule::Any _74542_def2,jule::Str& _74558_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _74813_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _74829_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _74829_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
				_case_begin_1ac5be18c:;
				{
					return _74829_def.operator jule::Ptr<_1a9d9a22e_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
				_case_begin_1ac5be9b7:;
				{
					return _74829_def.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a943b309_Enum>>()) {
				_case_begin_1ac5bea2d:;
				{
					return _74829_def.operator jule::Ptr<_1a943b309_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1ac5be346:;
				{
					return jule::Str();
				}
			}
			_match_end_1ac5be225:;
		}
	});
	jule::Str _76113_def1_ident = _74813_get_ident(_74531_def1);
	jule::Str _76213_def2_ident = _74813_get_ident(_74542_def2);
	jule::Str _76313_refers_to = _1d77ca8ce_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_76113_def1_ident),jule::Any(_76213_def2_ident)}));
	(_74558_message).buffer.insert(0, (((_1d68791dc_repeat(jule::Str(" ", 1),4LL) + _76313_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a9dabb58_check_cross_cycle(_1a9daa55d_TypeChecker* _self_,jule::Any _76732_decl,jule::Str& _76748_message) {
	{
		auto &_match_expr{ _76732_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
			_case_begin_1ac5c2a31:;
			{
				jule::Ptr<_1a9d9a22e_TypeAlias> _77017_ta = _76732_decl.operator jule::Ptr<_1a9d9a22e_TypeAlias>();
				{
					auto &expr = _77017_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1ac5c35e2:;
					if (it != expr.end()) {
						jule::Any &_1ac5c389a_d = *it;
						{
							{
								
								if (_1ac5c389a_d == (*_self_)._field_referencer.get()._field_owner) {
									_case_begin_1ac5c3eb6:;
									{
										_1a9dab7a1_push_cycle_error(&(*_self_), jule::Any(_77017_ta),_1ac5c389a_d,_76748_message);
										return false;
									}
								}
								else if ((!(_1a9dabb58_check_cross_cycle(&(*_self_), _1ac5c389a_d,_76748_message)))) {
									_case_begin_1ac5c403d:;
									{
										_1a9dab7a1_push_cycle_error(&(*_self_), jule::Any(_77017_ta),_1ac5c389a_d,_76748_message);
										return false;
									}
								}
								_match_end_1ac5c3da6:;
							}
						}
						_iter_next_1ac5c35e2:;
						++it;
						goto _iter_begin_1ac5c35e2;
					}
					_iter_end_1ac5c35e2:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1ac5c2a97:;
			{
				jule::Ptr<_1a8d82b41_Struct> _78217_s = _76732_decl.operator jule::Ptr<_1a8d82b41_Struct>();
				{
					auto &expr = _78217_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1ac5c3b20:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d82b41_Struct> &_1ac5c3b75_d = *it;
						{
							{
								
								if ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_1ac5c3b75_d))) {
									_case_begin_1ac5c6716:;
									{
										_1a9dab7a1_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_1ac5c3b75_d),_76748_message);
										return false;
									}
								}
								else if ((!(_1a9dabb58_check_cross_cycle(&(*_self_), jule::Any(_1ac5c3b75_d),_76748_message)))) {
									_case_begin_1ac5c678d:;
									{
										_1a9dab7a1_push_cycle_error(&(*_self_), jule::Any(_78217_s),jule::Any(_1ac5c3b75_d),_76748_message);
										return false;
									}
								}
								_match_end_1ac5c6606:;
							}
						}
						_iter_next_1ac5c3b20:;
						++it;
						goto _iter_begin_1ac5c3b20;
					}
					_iter_end_1ac5c3b20:;
				}
			}
		}
		_match_end_1ac5c2954:;
	}
	return true;
}



inline jule::Bool _1a9dac010_check_illegal_cycles(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _80140_ident,jule::Any _80167_decl) {
	jule::Bool _80180_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_80180_ok = true;
		return _80180_ok;
	}
	{
		auto &_match_expr{ _80167_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1ac5c8bbe:;
			{
				if ((*_self_)._field_not_plain || _80167_decl.operator jule::Ptr<_1a8d82b41_Struct>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
			_case_begin_1ac5c8c35:;
			{
				if (_80167_decl.operator jule::Ptr<_1a9d9a22e_TypeAlias>().get()._field_cpp_linked) {
					_80180_ok = true;
					return _80180_ok;
				}
			}
		}
		_match_end_1ac5c8d89:;
	}
	if (_80167_decl == (*_self_)._field_referencer.get()._field_owner) {
		_1a9daac23_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_80180_ok = false;
		return _80180_ok;
	}
	jule::Str _82417_message = jule::Str();
	if ((!(_1a9dabb58_check_cross_cycle(&(*_self_), _80167_decl,_82417_message)))) {
		jule::Str _82721_err_msg = _82417_message;
		_82417_message=jule::Str();
		_1a9dab7a1_push_cycle_error(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_80167_decl,_82417_message);
		_82721_err_msg=_82721_err_msg + _82417_message;
		_1a9daac23_push_err(&(*_self_), _80140_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_82721_err_msg)}));
		_80180_ok = false;
		return _80180_ok;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d9a22e_TypeAlias>>()) {
			_case_begin_1ac5cd9c6:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({_80167_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1ac5cda3c:;
			{
				{
					auto &_match_expr{ _80167_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
						_case_begin_1ac5ce213:;
						{
							jule::Ptr<_1a8d82b41_Struct> _84325_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a8d82b41_Struct>();
							_84325_s.get()._field_depends = jule::alloc_for_append(_84325_s.get()._field_depends,1);_84325_s.get()._field_depends.__push(_80167_decl.operator jule::Ptr<_1a8d82b41_Struct>());
						}
					}
					_match_end_1ac5ce147:;
				}
			}
		}
		_match_end_1ac5cd971:;
	}
	_80180_ok = true;
	return _80180_ok;
}



inline jule::Trait<_1a9d9aa37_Kind> _1a9dac3b7_from_type_alias(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _85135_decl,jule::Ptr<_1a9d9a22e_TypeAlias>& _85162_ta) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _85162_ta.get()._field_public,_85162_ta.get()._field_token)))) {
		_1a9daac23_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	}
	_85162_ta.get()._field_used=true;
	if ((_85135_decl.get()._field_generics.len() > 0LL)) {
		_1a9daac23_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr)) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ac5d42d4:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d9a22e_TypeAlias> _1ac5d4702_bg = *it;
				{
					if ((_1ac5d4702_bg == _85162_ta) || ((_85162_ta.get()._field_kind.get()._field_kind != nullptr) && _1a9d9b62b_equals(_85162_ta.get()._field_kind.get()._field_kind, _1ac5d4702_bg.get()._field_kind.get()._field_kind))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1ac5d42d4;
					}
				}
				_iter_next_1ac5d42d4:;
				++it;
				goto _iter_begin_1ac5d42d4;
			}
			_iter_end_1ac5d42d4:;
		}
	}
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ac5d647e:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d9a22e_TypeAlias> _1ac5d65e4_bg = *it;
				{
					if (_1ac5d65e4_bg == _85162_ta) {
						_1a9daac23_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = _85162_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1ac5d7bde:;
						if (it != expr.end()) {
							jule::Ptr<_1a9d9a22e_TypeAlias> _1ac5d6b88_dg = *it;
							{
								if (_1ac5d65e4_bg == _1ac5d6b88_dg) {
									_1a9daac23_push_err(&(*_self_), _85135_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_85135_decl.get()._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_1ac5d7bde:;
							++it;
							goto _iter_begin_1ac5d7bde;
						}
						_iter_end_1ac5d7bde:;
					}
				}
				_iter_next_1ac5d647e:;
				++it;
				goto _iter_begin_1ac5d647e;
			}
			_iter_end_1ac5d647e:;
		}
	}
	jule::Bool _89317_ok = _1a9dac010_check_illegal_cycles(&(*_self_), _85135_decl,jule::Any(_85162_ta));
	if ((!(_89317_ok))) {
		return nullptr;
	}
	_89317_ok=_1a9d14d8b_check_type_alias_decl_kind((*_self_)._field_s, _85162_ta,(*_self_)._field_lookup);
	if ((!(_89317_ok))) {
		return nullptr;
	}
	if (_85162_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr)) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_85162_ta);
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _91017_tk = jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),_85162_ta.get()._field_generic,jule::Bool(),_85162_ta.get()._field_kind.get()._field_kind.get()._field_kind));
	if (_85162_ta.get()._field_cpp_linked) {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_ident;
	} else {
		_91017_tk.get()._field_cpp_ident=_85162_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	}
	return jule::Trait<_1a9d9aa37_Kind>(_91017_tk, 4);
}



inline jule::Ptr<_1a943b309_Enum> _1a9dac76e_from_enum(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _92229_decl,jule::Ptr<_1a943b309_Enum>& _92256_e) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _92256_e.get()._field_public,_92256_e.get()._field_token)))) {
		_1a9daac23_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_92229_decl.get()._field_generics.len() > 0LL)) {
		_1a9daac23_push_err(&(*_self_), _92229_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_92229_decl.get()._field_ident)}));
		return nullptr;
	}
	return _92256_e;
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9dacb26_from_trait(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _93430_decl,jule::Ptr<_1a8ea7a57_Trait>& _93457_t) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _93457_t.get()._field_public,_93457_t.get()._field_token)))) {
		_1a9daac23_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_93430_decl.get()._field_generics.len() > 0LL)) {
		_1a9daac23_push_err(&(*_self_), _93430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_93430_decl.get()._field_ident)}));
		return nullptr;
	}
	return _93457_t;
}



inline jule::Bool _1a9dacecd_check_struct_ins(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a8d857c0_StructIns>& _94640_ins,jule::Ptr<_1d7b77374_Token>& _94658_error_token) {
	jule::Bool _94681_ok = jule::Bool();
	if (_94640_ins.get()._field_checked) {
		_94681_ok = true;
		return _94681_ok;
	}
	_94640_ins.get()._field_checked=true;
	if (((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_94640_ins.get()._field_decl)))) {
		_94681_ok = true;
		return _94681_ok;
	}
	jule::Ptr<_1a9d6baa2_SymbolTable> _95717_old_file = (*_self_)._field_s.get()._field_file;
	__JULE_DEFER({
		_1a9d0c58c_set_current_file((*_self_)._field_s.ptr(), _95717_old_file);
	});
	jule::Ptr<_1a9d6baa2_SymbolTable> _96017_file = _1a9d096bb_find_file((*_self_)._field_s.get()._field_files,_94640_ins.get()._field_decl.get()._field_token.get()._field_file);
	if ((_96017_file != nullptr)) {
		_1a9d0c58c_set_current_file((*_self_)._field_s.ptr(), _96017_file);
	}
	jule::Ptr<_1a9da98d1_Referencer> _96517_referencer = jule::new_ptr<_1a9da98d1_Referencer>(_1a9da98d1_Referencer(_94640_ins.get()._field_decl.get()._field_ident,jule::Any(jule::Any(_94640_ins.get()._field_decl)),nullptr));
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _97017_generics = jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>::alloc(0LL,static_cast<jule::I32>(_94640_ins.get()._field_generics.len()));
	{
		auto &expr = _94640_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac5e7bbb:;
		if (it != expr.end()) {
			jule::I32 _1ac5e766b_i = it - expr.begin();
			jule::Ptr<_1a9d9ae66_TypeKind> _1ac5e7d20_g = *it;
			{
				_97017_generics = jule::alloc_for_append(_97017_generics,1);_97017_generics.__push(jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7b77374_Token>(),_94640_ins.get()._field_decl.get()._field_generics[_1ac5e766b_i].get()._field_ident,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_1ac5e7d20_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>())));
			}
			_iter_next_1ac5e7bbb:;
			++it;
			_1ac5e766b_i++;
			goto _iter_begin_1ac5e7bbb;
		}
		_iter_end_1ac5e7bbb:;
	}
	jule::Ptr<_1a9d6baa2_SymbolTable> _98017_old_sema_file = _94640_ins.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a9d0c58c_set_current_file(_94640_ins.get()._field_decl.get()._field_sema.ptr(), _98017_old_sema_file);
	});
	_1a9daa55d_TypeChecker _98517_tc = _1a9daa55d_TypeChecker(_94640_ins.get()._field_decl.get()._field_sema,jule::Trait<_1a9db4325_Lookup>(_94640_ins.get()._field_decl.get()._field_sema, 3),_96517_referencer,jule::Ptr<_1d7b77374_Token>(),jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>(),_97017_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9a22e_TypeAlias>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>(),jule::Bool());
	{
		auto &expr = _94640_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ac5e9a69:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d84e62_FieldIns> _1ac5ea33e_field = *it;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _99421_kind = _1a9db1b6e_check_decl(&_98517_tc, _1ac5ea33e_field.get()._field_decl.get()._field_kind.get()._field_decl);
				_94681_ok=(_99421_kind != nullptr);
				if (((_94640_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _94640_ins.get()._field_decl.get()._field_sema)) && (_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL)) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_94640_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				}
				if (_94681_ok) {
					_1ac5ea33e_field.get()._field_kind=_99421_kind;
					_94640_ins.get()._field_mutable=_94640_ins.get()._field_mutable || ((!(_1ac5ea33e_field.get()._field_decl.get()._field_mutable)) && _1a9d9c30d_mutable(_1ac5ea33e_field.get()._field_kind.ptr()));
					_1a9d1c16d_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _94640_ins);
				}
			}
			_iter_next_1ac5e9a69:;
			++it;
			goto _iter_begin_1ac5e9a69;
		}
		_iter_end_1ac5e9a69:;
	}
	if ((_94640_ins.get()._field_generics.len() > 0LL)) {
		_1a9d1eec8_check_struct_ins_operators((*_self_)._field_s, _94640_ins);
		_1a9d1e7ad_check_struct_ins((*_self_)._field_s, _94640_ins);
	}
	_94681_ok = true;
	return _94681_ok;
}



inline void _1a9dad297_append_used_struct_reference(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a8d82b41_Struct>& _101652_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1ac601587:;
			{
				jule::Ptr<_1a8d82b41_Struct> _102321_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1a8d82b41_Struct>();
				if ((!(_1a8d8477a_is_uses(_102321_ref_s.ptr(), _101652_s)))) {
					_102321_ref_s.get()._field_uses = jule::alloc_for_append(_102321_ref_s.get()._field_uses,1);_102321_ref_s.get()._field_uses.__push(_101652_s);
				}
			}
		}
		_match_end_1ac601532:;
	}
}



inline jule::Ptr<_1a8d857c0_StructIns> _1a9dad63d_build_struct_instance(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _103045_decl,jule::Ptr<_1a8d82b41_Struct>& _103072_s) {
	jule::Ptr<_1a9da98d1_Referencer> _103217_referencer = (*_self_)._field_referencer;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>> _103417_banned_generics = (*_self_)._field_banned_generics;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1a9cdbc53_ScopeChecker>>()) {
				_case_begin_1ac6046de:;
				{
					jule::Ptr<_1a9cdbc53_ScopeChecker> _104125_sc = (*_self_)._field_lookup.operator jule::Ptr<_1a9cdbc53_ScopeChecker>();
					jule::Ptr<_1a9cdbc53_ScopeChecker> _104225_hard = _1a9cde10c_get_hard_root(_104125_sc);
					if ((_104225_hard.get()._field_owner.get()._field_owner == nullptr) || (_104225_hard.get()._field_owner.get()._field_owner.get()._field_decl != _103072_s)) {
						goto _match_end_1ac604689;
					}
					jule::I32 _104621_n = _104225_hard.get()._field_owner.get()._field_generics.len() + static_cast<jule::I32>(static_cast<jule::I32>(_104225_hard.get()._field_owner.get()._field_owner.get()._field_generics.len()));
					(*_self_)._field_banned_generics=_104225_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_104621_n);
				}
			}
			_match_end_1ac604689:;
		}
	} else {
		(*_self_)._field_inscatch=true;
	}
	jule::Ptr<_1a8d857c0_StructIns> _105617_ins = _1a8d83070_instance(_103072_s);
	_105617_ins.get()._field_generics=jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>::alloc(0LL,static_cast<jule::I32>(_103045_decl.get()._field_generics.len()));
	{
		auto &expr = _103045_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac608270:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a0e75b_TypeDecl> _1ac607cdb_g = *it;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _105921_kind = _1a9db1861_build(&(*_self_), _1ac607cdb_g.get()._field_kind);
				if ((_105921_kind == nullptr)) {
					return nullptr;
				}
				_105617_ins.get()._field_generics = jule::alloc_for_append(_105617_ins.get()._field_generics,1);_105617_ins.get()._field_generics.__push(_105921_kind);
			}
			_iter_next_1ac608270:;
			++it;
			goto _iter_begin_1ac608270;
		}
		_iter_end_1ac608270:;
	}
	(*_self_)._field_banned_generics=_103417_banned_generics;
	(*_self_)._field_referencer=_103217_referencer;
	return _105617_ins;
}



inline jule::Ptr<_1a8d857c0_StructIns> _1a9dad9e5_from_struct(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _107335_decl,jule::Ptr<_1a8d82b41_Struct>& _107362_s) {
	if ((!(_1a9d0d12b_is_accessible_define((*_self_)._field_s.ptr(), _107362_s.get()._field_public,_107362_s.get()._field_token)))) {
		_1a9daac23_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_107335_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((*_self_)._field_selection) {
		if ((_107335_decl.get()._field_generics.len() > 0LL)) {
			_1a9daac23_push_err(&(*_self_), _107335_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_ptr<_1a8d857c0_StructIns>(_1a8d857c0_StructIns(jule::Bool(),_107362_s,jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d84e62_FieldIns>>(),jule::Slice<jule::Ptr<_1a8d94db7_Fn>>(),jule::Bool(),jule::Ptr<_1a8d9b121_ReferenceStack>(),_1a8d81d2c_Operators()));
	}
	if ((_107362_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _109617_ok = (*_self_)._field_not_plain || _1a9dac010_check_illegal_cycles(&(*_self_), _107335_decl,jule::Any(_107362_s));
	if ((!(_109617_ok))) {
		return nullptr;
	}
	_1a9dad297_append_used_struct_reference(&(*_self_), _107362_s);
	jule::Ptr<_1a8d857c0_StructIns> _110217_ins = _1a9dad63d_build_struct_instance(&(*_self_), _107335_decl,_107362_s);
	if ((_110217_ins == nullptr)) {
		return nullptr;
	}
	_109617_ok=_1a9d0dcec_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I32>(_110217_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_110217_ins.get()._field_generics.len()),_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a8d857c0_StructIns> _111217_exist_instance = _1a8d8337d_append_instance(_107362_s.ptr(), _110217_ins);
	if ((_111217_exist_instance != nullptr)) {
		return _111217_exist_instance;
	}
	_109617_ok=_1a9dacecd_check_struct_ins(&(*_self_), _110217_ins,_107335_decl.get()._field_token);
	if ((!(_109617_ok))) {
		return nullptr;
	}
	return _110217_ins;
}



inline jule::Trait<_1a9d9aa37_Kind> _1a9dadd9c_get_def(_1a9daa55d_TypeChecker* _self_,jule::Trait<_1a9db4325_Lookup> _113426_l,jule::Ptr<_1d7a16d5c_IdentTypeDecl>& _113442_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1ac613b82:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8c246_GenericDecl> _1ac613c2b_g = *it;
			{
				if (_1ac613c2b_g.get()._field_ident == _113442_decl.get()._field_ident) {
					return jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(_1ac613c2b_g.get()._field_ident), 5);
				}
			}
			_iter_next_1ac613b82:;
			++it;
			goto _iter_begin_1ac613b82;
		}
		_iter_end_1ac613b82:;
	}
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1ac614314:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9a22e_TypeAlias> _1ac613d6e_g = *it;
			{
				if (_1ac613d6e_g.get()._field_ident == _113442_decl.get()._field_ident) {
					jule::Ptr<_1a8d857c0_StructIns> _114325_st = _1a9d9e211_strct(_1ac613d6e_g.get()._field_kind.get()._field_kind.ptr());
					if ((_114325_st != nullptr)) {
						jule::Bool _114525_ok = _1a9dac010_check_illegal_cycles(&(*_self_), _113442_decl,jule::Any(_114325_st.get()._field_decl));
						if ((!(_114525_ok))) {
							return nullptr;
						}
					}
					return _1ac613d6e_g.get()._field_kind.get()._field_kind.get()._field_kind;
				}
			}
			_iter_next_1ac614314:;
			++it;
			goto _iter_begin_1ac614314;
		}
		_iter_end_1ac614314:;
	}
	if ((!(_113442_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1a943b309_Enum> _115521_e = _1a9db4325_Lookup_mptr_data[(_113426_l).type_offset]._1a9db41d2_find_enum(_113426_l, _113442_decl.get()._field_ident);
		if ((_115521_e != nullptr)) {
			return jule::Trait<_1a9d9aa37_Kind>(_1a9dac76e_from_enum(&(*_self_), _113442_decl,_115521_e), 3);
		}
		jule::Ptr<_1a8ea7a57_Trait> _116021_t = _1a9db4325_Lookup_mptr_data[(_113426_l).type_offset]._1a9db3dc4_find_trait(_113426_l, _113442_decl.get()._field_ident);
		if ((_116021_t == nullptr) && (!((*_self_)._field_dis_builtin))) {
			_116021_t=_1a9dc1ec0_find_builtin_trait(_113442_decl.get()._field_ident);
		}
		if ((_116021_t != nullptr)) {
			return jule::Trait<_1a9d9aa37_Kind>(_1a9dacb26_from_trait(&(*_self_), _113442_decl,_116021_t), 2);
		}
	} else if ((*_self_)._field_selection) {
		_1a9daac23_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a8d82b41_Struct> _117217_s = _1a9db4325_Lookup_mptr_data[(_113426_l).type_offset]._1a9db370e_find_struct(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);
	if ((_117217_s != nullptr)) {
		return jule::Trait<_1a9d9aa37_Kind>(_1a9dad9e5_from_struct(&(*_self_), _113442_decl,_117217_s), 0);
	}
	jule::Ptr<_1a9d9a22e_TypeAlias> _117717_ta = _1a9db4325_Lookup_mptr_data[(_113426_l).type_offset]._1a9db3357_find_type_alias(_113426_l, _113442_decl.get()._field_ident,_113442_decl.get()._field_cpp_linked);
	if ((_117717_ta == nullptr) && (!((*_self_)._field_dis_builtin))) {
		_117717_ta=_1a9dc1486_find_builtin_type_alias(_113442_decl.get()._field_ident);
	}
	if ((_117717_ta != nullptr)) {
		return _1a9dac3b7_from_type_alias(&(*_self_), _113442_decl,_117717_ta);
	}
	_1a9daac23_push_err(&(*_self_), _113442_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_113442_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a9d9aa37_Kind> _1a9dae1aa_build_ident(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a16d5c_IdentTypeDecl> _118934_decl) {
	{
		
		if (_1a9da9518_is_prim(_118934_decl.get()._field_ident)) {
			_case_begin_1ac61ea8e:;
			{
				return jule::Trait<_1a9d9aa37_Kind>(_1a9dab3d8_build_prim(&(*_self_), _118934_decl), 5);
			}
		}
		else {
			_case_begin_1ac61dd13:;
			{
				return _1a9dadd9c_get_def(&(*_self_), (*_self_)._field_lookup,_118934_decl);
			}
		}
		_match_end_1ac61dc47:;
	}
}



inline jule::Ptr<_1a9da3bc7_Sptr> _1a9dae4b8_build_sptr_from_type(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _119844_elem) {
	{
		
		if ((_119844_elem == nullptr)) {
			_case_begin_1ac620474:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9e211_strct(_119844_elem.ptr()) != nullptr)) {
			_case_begin_1ac6204eb:;
			{
				jule::Ptr<_1a8d857c0_StructIns> _120417_s = _1a9d9e211_strct(_119844_elem.ptr());
				if ((_120417_s.get()._field_decl != nullptr) && _120417_s.get()._field_decl.get()._field_cpp_linked) {
					_1a9daac23_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_1a9d9d9c4_arr(_119844_elem.ptr()) != nullptr) && _1a9d9d9c4_arr(_119844_elem.ptr()).get()._field_auto) {
			_case_begin_1ac620573:;
			{
				_1a9daac23_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac61ee46:;
	}
	return jule::new_ptr<_1a9da3bc7_Sptr>(_1a9da3bc7_Sptr(_119844_elem));
}



inline jule::Ptr<_1a9da3bc7_Sptr> _1a9dae7c6_build_sptr(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a17236_SptrTypeDecl> _121833_decl) {
	jule::Bool _121913_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121913_not_plain;
	});
	jule::Ptr<_1a9d9ae66_TypeKind> _122317_elem = _1a9db1b6e_check_decl(&(*_self_), _121833_decl.get()._field_elem);
	return _1a9dae4b8_build_sptr_from_type(&(*_self_), _122317_elem);
}



inline jule::Ptr<_1a9da723b_Ptr> _1a9daead4_build_ptr_from_type(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a9d9ae66_TypeKind>& _122743_elem) {
	{
		
		if ((_122743_elem == nullptr)) {
			_case_begin_1ac625bd8:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9d9c4_arr(_122743_elem.ptr()) != nullptr) && _1a9d9d9c4_arr(_122743_elem.ptr()).get()._field_auto) {
			_case_begin_1ac625c60:;
			{
				_1a9daac23_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a9da723b_Ptr>();
			}
		}
		_match_end_1ac625ac8:;
	}
	return jule::new_ptr<_1a9da723b_Ptr>(_1a9da723b_Ptr(_122743_elem));
}



inline jule::Ptr<_1a9da723b_Ptr> _1a9daede2_build_ptr(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a177ec_PtrTypeDecl> _124232_decl) {
	jule::Bool _124313_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_124313_not_plain;
	});
	jule::Ptr<_1a9d9ae66_TypeKind> _124717_elem = nullptr;
	if ((!(_1d7a2b118_is_unsafe(_124232_decl.ptr())))) {
		_124717_elem=_1a9db1b6e_check_decl(&(*_self_), _124232_decl.get()._field_elem);
		return _1a9daead4_build_ptr_from_type(&(*_self_), _124717_elem);
	}
	return jule::new_ptr<_1a9da723b_Ptr>(_1a9da723b_Ptr(_124717_elem));
}



inline jule::Ptr<_1a9da4634_Slc> _1a9db0200_build_slc(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a17423_SlcTypeDecl> _125932_decl) {
	jule::Bool _126013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126013_not_plain;
	});
	jule::Ptr<_1a9d9ae66_TypeKind> _126417_elem = _1a9db1b6e_check_decl(&(*_self_), _125932_decl.get()._field_elem);
	{
		
		if ((_126417_elem == nullptr)) {
			_case_begin_1ac62b97a:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9d9c4_arr(_126417_elem.ptr()) != nullptr) && _1a9d9d9c4_arr(_126417_elem.ptr()).get()._field_auto) {
			_case_begin_1ac62ba02:;
			{
				_1a9daac23_push_err(&(*_self_), _125932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac62b8ae:;
	}
	return jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(_126417_elem));
}



inline jule::Ptr<_1a9da67ce_Arr> _1a9db050d_build_arr(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a179d9_ArrTypeDecl> _128032_decl) {
	jule::Bool _128113_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_128113_not_plain;
	});
	jule::I32 _128517_n = 0LL;
	if ((!(_1d7a2c768_auto_sized(_128032_decl.ptr())))) {
		jule::Ptr<_1a9d71c2d_Data> _128821_size = _1a9d8ce58_eval_expr(_1a9d126b3_eval((*_self_)._field_s, (*_self_)._field_lookup), _128032_decl.get()._field_size);
		if ((_128821_size == nullptr)) {
			return nullptr;
		}
		if ((!(_1a9d725e1_is_const(_128821_size.ptr())))) {
			_1a9daac23_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1a9d9d023_prim(_128821_size.get()._field_kind.ptr()) == nullptr) || (!(_1a9cd9998_is_int(_1a9d9d023_prim(_128821_size.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a9daac23_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_128517_n=static_cast<jule::I32>(static_cast<jule::I32>(_1a9c48e02_as_i64(_128821_size.get()._field_constant.ptr())));
		if ((_128517_n < 0LL)) {
			_1a9daac23_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1a9cce4e8_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_128517_n) > static_cast<jule::F64>(static_cast<jule::F64>(_1a9cd44ed_max(jule::Str("int", 3)))))) {
			_1a9daac23_push_err(&(*_self_), _128032_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _131117_elem = _1a9db1b6e_check_decl(&(*_self_), _128032_decl.get()._field_elem);
	{
		
		if ((_131117_elem == nullptr)) {
			_case_begin_1ac636248:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9d9c4_arr(_131117_elem.ptr()) != nullptr) && _1a9d9d9c4_arr(_131117_elem.ptr()).get()._field_auto) {
			_case_begin_1ac6362ae:;
			{
				_1a9daac23_push_err(&(*_self_), _128032_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac63606c:;
	}
	return jule::new_ptr<_1a9da67ce_Arr>(_1a9da67ce_Arr(_1d7a2c768_auto_sized(_128032_decl.ptr()),_128517_n,_131117_elem));
}



inline jule::Ptr<_1a9da5bda_Map> _1a9db081b_build_map(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a17bc6_MapTypeDecl> _132932_decl) {
	jule::Bool _133013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_133013_not_plain;
	});
	jule::Ptr<_1a9d9ae66_TypeKind> _133417_key = _1a9db1b6e_check_decl(&(*_self_), _132932_decl.get()._field_key);
	if ((_133417_key == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _133917_val = _1a9db1b6e_check_decl(&(*_self_), _132932_decl.get()._field_val);
	if ((_133917_val == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9d760_enm(_133917_val.ptr()) != nullptr)) {
		_1a9daac23_push_err(&(*_self_), _132932_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_ptr<_1a9da5bda_Map>(_1a9da5bda_Map(_133417_key,_133917_val));
}



inline jule::Ptr<_1a9da5129_Tuple> _1a9db0b29_build_tuple(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a17610_TupleTypeDecl> _135334_decl) {
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _135417_types = jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>::alloc(0LL,static_cast<jule::I32>(_135334_decl.get()._field_types.len()));
	{
		auto &expr = _135334_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ac63cbab:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a0e75b_TypeDecl> _1ac63c606_t = *it;
			{
				jule::Ptr<_1a9d9ae66_TypeKind> _135621_kind = _1a9db1b6e_check_decl(&(*_self_), _1ac63c606_t);
				if ((_135621_kind == nullptr)) {
					return nullptr;
				}
				_135417_types = jule::alloc_for_append(_135417_types,1);_135417_types.__push(_135621_kind);
			}
			_iter_next_1ac63cbab:;
			++it;
			goto _iter_begin_1ac63cbab;
		}
		_iter_end_1ac63cbab:;
	}
	return jule::new_ptr<_1a9da5129_Tuple>(_1a9da5129_Tuple(_135417_types));
}



inline jule::Bool _1a9db0e37_check_fn_types(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a8d98063_FnIns>& _136638_f) {
	jule::Bool _136651_ok = jule::Bool();
	{
		auto &expr = _136638_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac63ea37:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1ac63eb36_p = *it;
			{
				_1ac63eb36_p.get()._field_kind=_1a9db1861_build(&(*_self_), _1ac63eb36_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_136651_ok=(_1ac63eb36_p.get()._field_kind != nullptr);
				if ((!(_136651_ok))) {
					_136651_ok = false;
					return _136651_ok;
				}
			}
			_iter_next_1ac63ea37:;
			++it;
			goto _iter_begin_1ac63ea37;
		}
		_iter_end_1ac63ea37:;
	}
	if ((!(_1a8d95318_is_void(_136638_f.get()._field_decl.ptr())))) {
		_136638_f.get()._field_result=_1a9db1861_build(&(*_self_), _136638_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_136651_ok = (_136638_f.get()._field_result != nullptr);
		return _136651_ok;
	}
	_136651_ok = true;
	return _136651_ok;
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9db1245_build_fn(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7b8d29c_FnDecl> _138331_decl) {
	if ((_138331_decl.get()._field_generics.len() > 0LL)) {
		_1a9daac23_push_err(&(*_self_), _138331_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a8d94db7_Fn> _138917_f = _1a8d9e2ab_build_fn(_138331_decl);
	jule::Ptr<_1a8d98063_FnIns> _139017_ins = _1a8d9679d_instance_force(_138917_f);
	_139017_ins.get()._field_anon=true;
	jule::Bool _139313_ok = _1a9db0e37_check_fn_types(&(*_self_), _139017_ins);
	if ((!(_139313_ok))) {
		return nullptr;
	}
	return _139017_ins;
}



inline jule::Trait<_1a9d9aa37_Kind> _1a9db1553_build_by_namespace(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a17049_NamespaceTypeDecl> _140141_decl) {
	jule::Str _140213_path = _1a9da8baa_build_link_path_by_tokens(_140141_decl.get()._field_idents);
	jule::Ptr<_1a9d02351_ImportInfo> _140317_imp = _1a9db4325_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a9db2ae8_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a9d02351_ImportInfo>)>([=](jule::Ptr<_1a9d02351_ImportInfo> _140353_imp) mutable -> jule::Bool {
		if ((_140141_decl.get()._field_idents.len() == 1LL) && (_140353_imp.get()._field_alias == _140213_path)) {
			return true;
		}
		return (_140353_imp.get()._field_link_path == _140213_path) && _1a9d04c38_is_accessible_via_selection(_140353_imp.ptr());
	}));
	if ((_140317_imp == nullptr) || (!(_1a9d04672_is_lookupable(_140317_imp.ptr(), jule::Str("self", 4))))) {
		_1a9daac23_push_err(&(*_self_), _140141_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_140213_path)}));
		return nullptr;
	}
	_1a9dab0ca_disallow_builtin(&(*_self_));
	jule::Trait<_1a9d9aa37_Kind> _141617_kind = _1a9dadd9c_get_def(&(*_self_), jule::Trait<_1a9db4325_Lookup>(_140317_imp, 1),_140141_decl.get()._field_kind);
	_1a9daadee_allow_builtin(&(*_self_));
	return _141617_kind;
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9db1861_build(_1a9daa55d_TypeChecker* _self_,jule::Any& _142229_decl_kind) {
	jule::Trait<_1a9d9aa37_Kind> _142317_kind = nullptr;
	{
		auto &_match_expr{ _142229_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d9ae66_TypeKind>>()) {
			_case_begin_1ac64a9cc:;
			{
				_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_142229_decl_kind.operator jule::Ptr<_1a9d9ae66_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a16d5c_IdentTypeDecl>>()) {
			_case_begin_1ac64aa43:;
			{
				jule::Trait<_1a9d9aa37_Kind> _142821_t = _1a9dae1aa_build_ident(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a16d5c_IdentTypeDecl>());
				if ((_142821_t != nullptr)) {
					_142317_kind=_142821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a17236_SptrTypeDecl>>()) {
			_case_begin_1ac64aaa9:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da3bc7_Sptr> _143421_t = _1a9dae7c6_build_sptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a17236_SptrTypeDecl>());
				if ((_143421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_143421_t, 6);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a177ec_PtrTypeDecl>>()) {
			_case_begin_1ac64ab20:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da723b_Ptr> _144021_t = _1a9daede2_build_ptr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a177ec_PtrTypeDecl>());
				if ((_144021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_144021_t, 11);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a17423_SlcTypeDecl>>()) {
			_case_begin_1ac64b55a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da4634_Slc> _144621_t = _1a9db0200_build_slc(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a17423_SlcTypeDecl>());
				if ((_144621_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_144621_t, 7);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a179d9_ArrTypeDecl>>()) {
			_case_begin_1ac64b5c1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da67ce_Arr> _145221_t = _1a9db050d_build_arr(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a179d9_ArrTypeDecl>());
				if ((_145221_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_145221_t, 10);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a17bc6_MapTypeDecl>>()) {
			_case_begin_1ac64b637:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da5bda_Map> _145821_t = _1a9db081b_build_map(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a17bc6_MapTypeDecl>());
				if ((_145821_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_145821_t, 9);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a17610_TupleTypeDecl>>()) {
			_case_begin_1ac64b69d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a9da5129_Tuple> _146421_t = _1a9db0b29_build_tuple(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a17610_TupleTypeDecl>());
				if ((_146421_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_146421_t, 8);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8d29c_FnDecl>>()) {
			_case_begin_1ac64b846:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a8d98063_FnIns> _147021_t = _1a9db1245_build_fn(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7b8d29c_FnDecl>());
				if ((_147021_t != nullptr)) {
					_142317_kind=jule::Trait<_1a9d9aa37_Kind>(_147021_t, 1);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7a17049_NamespaceTypeDecl>>()) {
			_case_begin_1ac64b8ac:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a9d9aa37_Kind> _147621_t = _1a9db1553_build_by_namespace(&(*_self_), _142229_decl_kind.operator jule::Ptr<_1d7a17049_NamespaceTypeDecl>());
				if ((_147621_t != nullptr)) {
					_142317_kind=_147621_t;
				}
			}
		}
		else {
			_case_begin_1ac64a878:;
			{
				_1a9daac23_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ac64a7ac:;
	}
	if ((_142317_kind == nullptr)) {
		return nullptr;
	}
	{
		auto &_match_expr{ _142317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d9ae66_TypeKind>>()) {
			_case_begin_1ac657115:;
			{
				return _142317_kind.operator jule::Ptr<_1a9d9ae66_TypeKind>();
			}
		}
		else {
			_case_begin_1ac656c80:;
			{
				return jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_142317_kind));
			}
		}
		_match_end_1ac656c2a:;
	}
}



inline jule::Ptr<_1a9d9ae66_TypeKind> _1a9db1b6e_check_decl(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1d7a0e75b_TypeDecl>& _149734_decl) {
	jule::Ptr<_1d7b77374_Token> _149917_error_token = (*_self_)._field_error_token;
	(*_self_)._field_error_token=_149734_decl.get()._field_token;
	jule::Ptr<_1a9d9ae66_TypeKind> _150217_kind = _1a9db1861_build(&(*_self_), _149734_decl.get()._field_kind);
	(*_self_)._field_error_token=_149917_error_token;
	return _150217_kind;
}



inline void _1a9db1de4_check(_1a9daa55d_TypeChecker* _self_,jule::Ptr<_1a9d9ed05_TypeSymbol>& _150829_t) {
	if ((_150829_t.get()._field_decl == nullptr)) {
		return;
	}
	jule::Ptr<_1a9d9ae66_TypeKind> _151217_kind = _1a9db1b6e_check_decl(&(*_self_), _150829_t.get()._field_decl);
	if ((_151217_kind == nullptr)) {
		_1a9da03cc_remove_kind(_150829_t.ptr());
		return;
	}
	_150829_t.get()._field_kind=_151217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9daa55d_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d796d621_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1d79a8491_push_err(_1d79bd86e_DirectiveEval* _self_,jule::Ptr<_1d7b77374_Token> _2127_t,jule::Str _2138_fmt,jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1d77ca48e_Log(static_cast<jule::I32>(1LL),_2127_t.get()._field_row,_2127_t.get()._field_column,_2127_t.get()._field_file.get()._field_path,_1d77ca8ce_logf(_2138_fmt,_2151_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d79abc25_split_operans(_1d79bd86e_DirectiveEval* _self_,jule::Str _3332_op,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>::alloc(0LL,10LL);
	jule::I32 _3617_i = 0LL;
	jule::I32 _3717_range_n = 0LL;
	jule::I32 _3817_last = 0LL;
	for (; _3617_i < static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_3352_tokens.len())) - 1LL))); (_3617_i)++) {
		{
			jule::Ptr<_1d7b77374_Token> _4017_b = _3352_tokens[_3617_i];
			if (_4017_b.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ac7b771a:;
						{
							(_3717_range_n)++;
							goto _iter_next_1ac7b6a5a;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ac7b7a6c:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1ac7b79a1:;
				}
			}
			if ((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U32>(7LLU))) {
				goto _iter_next_1ac7b6a5a;
			}
			if (_4017_b.get()._field_kind == _3332_op) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			}
		}
	_iter_next_1ac7b6a5a:;
	}
	_iter_end_1ac7b6a5a:;
	if (_3817_last < static_cast<jule::I32>(static_cast<jule::I32>(_3352_tokens.len()))) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));
	} else {
		_1d79a8491_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3417_parts;
}



inline jule::Bool _1d79ac1dc_eval_directive_ident(_1d79bd86e_DirectiveEval* _self_,jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ac7bbd18:;
		if (it != expr.end()) {
			jule::Str &_1ac7bb70d_var = *it;
			{
				if (_1ac7bb70d_var == _7335_ident) {
					return true;
				}
			}
			_iter_next_1ac7bbd18:;
			++it;
			goto _iter_begin_1ac7bbd18;
		}
		_iter_end_1ac7bbd18:;
	}
	return false;
}



inline jule::Bool _1d79ac440_eval_directive_part(_1d79bd86e_DirectiveEval* _self_,jule::Slice<jule::Ptr<_1d7b77374_Token>> _8742_part) {
	jule::Bool _8813_logical_not = (_8742_part[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1));
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	}
	if ((_8742_part.len() > 1LL)) {
		_1d79a8491_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _9817_result = _1d79ac1dc_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	}
	return _9817_result;
}



inline jule::Bool _1d79ad7a4_eval(_1d79bd86e_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1d79a8491_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11117_result = false;
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _11317_logical_or_parts = _1d79abc25_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	}
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1ac7c32d6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ac7c30c7_part = *it;
			{
				jule::Bool _11921_and = true;
				jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _12021_logical_and_parts = _1d79abc25_split_operans(&(*_self_), jule::Str("&&", 2),_1ac7c30c7_part);
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				}
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1ac7c4837:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1d7b77374_Token>> _1ac7c4628_and_part = *it;
						{
							jule::Ptr<_1d7b77374_Token> _12621_first = _1ac7c4628_and_part[0LL];
							if ((_12621_first.get()._field_id == static_cast<jule::U32>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1))) {
								jule::Ptr<_1d7b77374_Token> _12825_end = _1ac7c4628_and_part[(_1ac7c4628_and_part.len() - 1LL)];
								if ((_12825_end.get()._field_id != static_cast<jule::U32>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1))) {
									_1d79a8491_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1ac7c4628_and_part=_1ac7c4628_and_part.slice(1LL,(_1ac7c4628_and_part.len() - 1LL));
							}
							_11921_and=_11921_and && _1d79ac440_eval_directive_part(&(*_self_), _1ac7c4628_and_part);
						}
						_iter_next_1ac7c4837:;
						++it;
						goto _iter_begin_1ac7c4837;
					}
					_iter_end_1ac7c4837:;
				}
				_11117_result=_11117_result || _11921_and;
			}
			_iter_next_1ac7c32d6:;
			++it;
			goto _iter_begin_1ac7c32d6;
		}
		_iter_end_1ac7c32d6:;
	}
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1d79bd86e_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1bce6e620_JuleImporter> static__1bce2ca95_new(_1d796d621_CompileInfo _5823_info) {
	jule::Ptr<_1bce6e620_JuleImporter> _5917_imp = jule::new_ptr<_1bce6e620_JuleImporter>(_1bce6e620_JuleImporter(jule::Slice<jule::Str>({_1d77ddb12_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>>(),jule::Slice<jule::Str>()));
	_1d796de3a_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _1bce2e701_all_packages(_1bce6e620_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1bce3188a_set_mod_path(_1bce6e620_JuleImporter* _self_,jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1bce4e15a_get_mod_path(_1bce6e620_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1bd016e9d_mod_by_id(_1bce6e620_JuleImporter* _self_,jule::I32 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1bd0231a7_get_import(_1bce6e620_JuleImporter* _self_,jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ac7cc279:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac7cc378_p = *it;
			{
				if (_1ac7cc378_p.get()._field_path == _8733_path) {
					return _1ac7cc378_p;
				}
			}
			_iter_next_1ac7cc279:;
			++it;
			goto _iter_begin_1ac7cc279;
		}
		_iter_end_1ac7cc279:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>,jule::Slice<_1d77ca48e_Log>> _1bd024d24_import_package(_1bce6e620_JuleImporter* _self_,jule::Str _9637_path,jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1d5957c39_DirEntry>> _9717_dirents = ({
		auto except = static__1d674750b_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1d77ca48e_Log>({_1bce291bd_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
			return std::make_tuple(nullptr,jule::Slice<_1d77ca48e_Log>({_1bce291bd_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
		} jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>();});
	});
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1d79bab79_find_module_file_deep(_9637_path);
		if (_10217_new_mod != (*_self_)._field_mod) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1d77ca48e_Log> _10525_errs = _1d79cd9d3_check_module_file((*_self_)._field_mod);
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_1d7a43eaa_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>::alloc(0LL,static_cast<jule::I32>(_9717_dirents.len()));
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1ac7d2427:;
		if (it != expr.end()) {
			jule::Ptr<_1d5957c39_DirEntry> _1ac7ce0c2_dirent = *it;
			{
				if (_1d5982acc_is_dir(_1ac7ce0c2_dirent.get()._field_stat.ptr()) || (!(_1d770b106_has_suffix(_1ac7ce0c2_dirent.get()._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_1ac7d2427;
				}
				jule::Str _11917__path = _1d685188a_join(jule::Slice<jule::Str>({_9637_path,_1ac7ce0c2_dirent.get()._field_name}));
				jule::Ptr<_1d7b7c764_File> _12021_file = _1d7b7dc93_new_file_set(_11917__path);
				_1d7b7cde6_fill(_12021_file.ptr(), _1bcde93d0_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1d77ca48e_Log> _12221_errors = _1d7b89452_lex(_12021_file,static_cast<jule::I32>(0LL));
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_1d82bd305_FileInfo> _12721_finfo = _1d82bd6ce_parse_file(_12021_file);
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				}
				if ((!(_1d796c796_is_pass_file_annotation(_1ac7ce0c2_dirent.get()._field_name)))) {
					goto _iter_next_1ac7d2427;
				}
				jule::Bool _13718_r;
				jule::Slice<_1d77ca48e_Log> _13725_logs;
				std::tie(_13718_r,_13725_logs) = _1bd03312e_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				}
				if ((!(_13718_r))) {
					goto _iter_next_1ac7d2427;
				}
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);
			}
			_iter_next_1ac7d2427:;
			++it;
			goto _iter_begin_1ac7d2427;
		}
		_iter_end_1ac7d2427:;
	}
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1bd02c9b9_imported(_1bce6e620_JuleImporter* _self_,jule::Ptr<_1a9d02351_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ac7d9154:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac7d9253_p = *it;
			{
				if ((_1ac7d9253_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_1ac7d9253_p.get()._field_link_path == _15335_imp.get()._field_link_path)) {
					return;
				}
			}
			_iter_next_1ac7d9154:;
			++it;
			goto _iter_begin_1ac7d9154;
		}
		_iter_end_1ac7d9154:;
	}
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1ac7da3db:;
			if (it != expr.end()) {
				jule::I32 _1ac7da4c9_i = it - expr.begin();
				jule::Str _1ac7da6b6_mod = *it;
				{
					if ((*_self_)._field_mod == _1ac7da6b6_mod) {
						_15335_imp.get()._field_mod_id=_1ac7da4c9_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_1ac7da3db:;
				++it;
				_1ac7da4c9_i++;
				goto _iter_begin_1ac7da3db;
			}
			_iter_end_1ac7da3db:;
		}
		_15335_imp.get()._field_mod_id=static_cast<jule::I32>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);
		_julec_label_setted:;
	}
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);
}



inline std::tuple<jule::Bool,jule::Slice<_1d77ca48e_Log>> _1bd03312e_is_pass_build_directives(_1bce6e620_JuleImporter* _self_,jule::Ptr<_1d7a43eaa_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1ac7dd4bb:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1ac7dd620_td = *it;
			{
				if ((_1ac7dd620_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1ac7dd4bb;
				}
				_1d79bd86e_DirectiveEval _18421_de = _1d79bd86e_DirectiveEval(jule::Slice<_1d77ca48e_Log>(),_1ac7dd620_td,(*_self_)._field_vars);
				jule::Bool _18817_result = _1d79ad7a4_eval(&_18421_de);
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				}
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_1ac7dd4bb:;
			++it;
			goto _iter_begin_1ac7dd4bb;
		}
		_iter_end_1ac7dd4bb:;
	}
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1bce6e620_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1bd03a5a9_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a8d63803_is_common_ordered_0(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>& _1737_s,jule::Ptr<_1a8d82b41_Struct> _1746_t) {
	jule::Ptr<_1a8d82b41_Struct>* _1817_p = (&(_1746_t.get()._field_depends[0LL]));
	jule::Ptr<_1a8d82b41_Struct>* _1913_end = _1817_p + static_cast<jule::I32>(static_cast<jule::I32>(_1746_t.get()._field_depends.len()));
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_1ac81ae77:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> &_1ac81b0ed_tt = *it;
			{
				{
					if (_1ac81b0ed_tt == _1746_t) {
						goto _iter_end_1ac81ae77;
					}
					if (((*(_1817_p)).get()._field_cpp_linked || ((*(_1817_p)).get()._field_depends.len() == 0LL)) || (_1ac81b0ed_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_1ac81ae77:;
			++it;
			goto _iter_begin_1ac81ae77;
		}
		_iter_end_1ac81ae77:;
	}
	return false;
}



inline void static__1a8d7014a_order_common_0(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>& _3840_s) {
	jule::I32 _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_1ac8159cc:;
		if (it != expr.end()) {
			jule::I32 _1ac815a76_j = it - expr.begin();
			jule::Ptr<_1a8d82b41_Struct> _1ac815cb8_t = *it;
			{
				if (_1ac815cb8_t.get()._field_cpp_linked || (_1ac815cb8_t.get()._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_1ac815a76_j);
					(_3917_i)++;
				}
			}
			_iter_next_1ac8159cc:;
			++it;
			_1ac815a76_j++;
			goto _iter_begin_1ac8159cc;
		}
		_iter_end_1ac8159cc:;
	}
	jule::I32 _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::I32>(static_cast<jule::I32>(_3840_s.len())); (_4717_j)++) {
		{
			jule::I32 _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_3840_s.len())) - 1LL))); (_4921_k)++) {
				{
					if ((!(static__1a8d63803_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::I32>((_4921_k + 1LL)));
					}
				}
			_iter_next_1ac81788b:;
			}
			_iter_end_1ac81788b:;
		}
	_iter_next_1ac8153a0:;
	}
	_iter_end_1ac8153a0:;
}



inline void static__1a8d7be48_order_structures(jule::Slice<jule::Ptr<_1a8d82b41_Struct>>& _6041_structs) {
	static__1a8d7014a_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1bd03a796_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1a9e45b7b_optimize_child(jule::Ptr<_1a9e4598e_ScopeDeadCode> _self_,jule::Ptr<_1a9cc76bc_Scope>& _2639_s) {
	jule::Ptr<_1a9e4598e_ScopeDeadCode> _2717_sdc = jule::new_ptr<_1a9e4598e_ScopeDeadCode>(_1a9e4598e_ScopeDeadCode(_self_,_2639_s,(&(_2639_s.get()._field_stmts)),jule::I32()));
	{
		_1a9e46022_optimize_stmts(_2717_sdc);
	}
}



inline void _1a9e45cad_eliminate_followed(_1a9e4598e_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1a9e4598e_ScopeDeadCode> _3717_parent = (*_self_)._field_parent;
	while ((_3717_parent != nullptr)) {
		{
			(*(_3717_parent.get()._field_stmts))=(*(_3717_parent.get()._field_stmts)).slice(0LL,(_3717_parent.get()._field_i + 1LL));
			_3717_parent=_3717_parent.get()._field_parent;
		}
	_iter_next_1ac831245:;
	}
	_iter_end_1ac831245:;
}



inline void _1a9e45de0_optimize_stmt(jule::Ptr<_1a9e4598e_ScopeDeadCode> _self_,jule::Any _4444_st) {
	{
		auto &_match_expr{ _4444_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cc76bc_Scope>>()) {
			_case_begin_1ac833643:;
			{
				jule::Ptr<_1a9cc76bc_Scope> _4721_scope = _4444_st.operator jule::Ptr<_1a9cc76bc_Scope>();
				if (_4721_scope.get()._field_deferred) {
					_1a9e46154_eliminate_dead_code_of_scope(_4721_scope);
				} else {
					_1a9e45b7b_optimize_child(_self_, _4721_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1ac8336ba:;
			{
				{
					auto &_match_expr{ _4444_st.operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>()) {
						_case_begin_1ac8353e2:;
						{
							_1a9e45cad_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1ac83538c:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdb68c_RetSt>>()) {
			_case_begin_1ac833742:;
			{
				_1a9e45cad_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_1ac833500:;
	}
}



inline void _1a9e46022_optimize_stmts(jule::Ptr<_1a9e4598e_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_stmts->len())); (_self_.get()._field_i)++) {
		{
			_1a9e45de0_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1ac830673:;
	}
	_iter_end_1ac830673:;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e4598e_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__1a9e662a6_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a9e663d8_print(jule::Str _1925_escape,jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1a9e662a6_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e660b9_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a9e6731d_log_flat(_1d77ca48e_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a9e6752c_log_error(_1d77ca48e_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a9e662a6_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a9ba8a98_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a9ba8a98_itoa(_1930_l._field_column));
	}
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1d776c92b_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::I32 _3721_offset = ((_1930_l._field_line.len() - static_cast<jule::I32>(static_cast<jule::I32>(_3621_line.len()))) + 1LL);
		jule::I32 _3821_old_len = _3621_line.len();
		_3621_line=_1d776c92b_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::I32>(static_cast<jule::I32>(_3621_line.len()))) {
			_3721_offset+=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_3821_old_len - static_cast<jule::I32>(static_cast<jule::I32>(_3621_line.len()))))) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a9ba8a98_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1d68791dc_repeat(jule::Str(" ", 1),static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1d68791dc_repeat(jule::Str(" ", 1),static_cast<jule::I32>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1d68791dc_repeat(jule::Str(" ", 1),static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a9e663d8_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a9e6773b_log(_1d77ca48e_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1ac86ea7a:;
			{
				static__1a9e6731d_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1ac87abda:;
			{
				static__1a9e6752c_log_error(_6524_l);
			}
		}
		_match_end_1ac87ab41:;
	}
}



inline void static__1a9e6794a_print_logs(jule::Slice<_1d77ca48e_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1ac87b16e:;
		if (it != expr.end()) {
			_1d77ca48e_Log &_1ac87c14d_l = *it;
			{
				static__1a9e6773b_log(_1ac87c14d_l);
			}
			_iter_next_1ac87b16e:;
			++it;
			goto _iter_begin_1ac87b16e;
		}
		_iter_end_1ac87b16e:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a9ba8a98_itoa(static_cast<jule::I32>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9e67098_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4accb4_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4ad8ec_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4ba8a4_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4bae26_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4bb322_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa4bc6ca_ScopeOptimizer> static__1aa4bcba3_new(jule::Ptr<_1a9cc76bc_Scope> _4527_scope) {
	return jule::new_ptr<_1aa4bc6ca_ScopeOptimizer>(_1aa4bc6ca_ScopeOptimizer(jule::I32(),_4527_scope));
}



inline void _1aa4bce28_set_current_stmt(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=_5139_stmt;
}



inline void _1aa4bd19d_optimize_data(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9d71c2d_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
			_case_begin_1ac88b954:;
			{
				jule::Ptr<_1a8d896d6_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1a8d896d6_FnCallExprModel>();
				if (_1d580edbb_PRODUCTION) {
					if ((!(_1a8d98cde_is_builtin(_5821_m.get()._field_func.ptr()))) && _1aa4c1080_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5))) {
						_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(nullptr));
						return;
					}
				}
			}
		}
		_match_end_1ac88b8bb:;
	}
	static__1aa4c37ad_optimize(_5536_d.get()._field_model);
}



inline void _1aa4bd423_optimize_var(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9d2553e_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1aa4c37ad_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1aa4bd698_optimize_conditional(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9c78d33_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac890bde:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cce0b9_If> _1ac890d43_elif = *it;
			{
				static__1aa4c37ad_optimize(_1ac890d43_elif.get()._field_expr);
				_1aa4c09a8_optimize_child(&(*_self_), _1ac890d43_elif.get()._field_scope);
			}
			_iter_next_1ac890bde:;
			++it;
			goto _iter_begin_1ac890bde;
		}
		_iter_end_1ac890bde:;
	}
	if ((_7643_c.get()._field_default != nullptr)) {
		_1aa4c09a8_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	}
	if ((!(_1d5811bd1_OPT_COND))) {
		return;
	}
	jule::Bool _8917_const_case = false;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac893153:;
		if (it != expr.end()) {
			jule::I32 _1ac8931a8_i = it - expr.begin();
			jule::Ptr<_1a9cce0b9_If> _1ac8933c8_elif = *it;
			{
				if ((!(_1aa4c13d2_is_constant_valid_conditional_case(_1ac8933c8_elif)))) {
					goto _iter_next_1ac893153;
				}
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_1ac8931a8_i);
				_7643_c.get()._field_default=jule::new_ptr<_1a9c78b46_Else>(_1a9c78b46_Else(_1ac8933c8_elif.get()._field_scope));
				goto _iter_end_1ac893153;
			}
			_iter_next_1ac893153:;
			++it;
			_1ac8931a8_i++;
			goto _iter_begin_1ac893153;
		}
		_iter_end_1ac893153:;
	}
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1a9cce0b9_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));
	jule::Ptr<_1a9cce0b9_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));
	for (; _10917_i <= _11013_end; (_10917_i)++) {
		{
			{
				if (_1aa4c1c51_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				}
			}
		}
	_iter_next_1ac895e36:;
	}
	_iter_end_1ac895e36:;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	if ((!(_8917_const_case))) {
		return;
	}
	jule::I32 _12817_only = -1LL;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac897784:;
		if (it != expr.end()) {
			jule::I32 _1ac89781c_j = it - expr.begin();
			jule::Ptr<_1a9cce0b9_If> _1ac897a3c_elif = *it;
			{
				if ((_1ac897a3c_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;
					}
					_12817_only=_1ac89781c_j;
				}
			}
			_iter_next_1ac897784:;
			++it;
			_1ac89781c_j++;
			goto _iter_begin_1ac897784;
		}
		_iter_end_1ac897784:;
	}
	if ((_12817_only != -1LL)) {
		_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	}
}



inline void _1aa4bdaa5_build_default_constat_true_case(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cdb2b3_Case> _14554_case,jule::I32& _14572_i,jule::Ptr<_1a9cdad95_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I32 _14713_start = _14572_i;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1ac89a369;
			}
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1a9cdb4a0_FallSt>>()) {
					_case_begin_1ac89aa2e:;
					{
						(_14572_i)++;
						if (_14572_i >= static_cast<jule::I32>(static_cast<jule::I32>(_14585_m.get()._field_cases.len()))) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1ac89a369;
						}
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1ac89c008:;
					{
						goto _iter_end_1ac89a369;
					}
				}
				_match_end_1ac89bea3:;
			}
		}
	_iter_next_1ac89a369:;
	}
	_iter_end_1ac89a369:;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1aa4bdd19_optimize_match(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cdad95_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac89e78b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdb2b3_Case> _1ac89e8e0_case = *it;
			{
				{
					auto &expr = _1ac89e8e0_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ac8a002d:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d71c2d_Data> _1ac8a00e9_expr = *it;
						{
							static__1aa4c37ad_optimize(_1ac8a00e9_expr.get()._field_model);
						}
						_iter_next_1ac8a002d:;
						++it;
						goto _iter_begin_1ac8a002d;
					}
					_iter_end_1ac8a002d:;
				}
				_1aa4c09a8_optimize_child(&(*_self_), _1ac89e8e0_case.get()._field_scope);
			}
			_iter_next_1ac89e78b:;
			++it;
			goto _iter_begin_1ac89e78b;
		}
		_iter_end_1ac89e78b:;
	}
	if ((_17137_m.get()._field_default != nullptr)) {
		_1aa4c09a8_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	}
	if ((!(_1d5811bd1_OPT_COND))) {
		return;
	}
	jule::Bool _18617_const_case = false;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac8a1bbc:;
		if (it != expr.end()) {
			jule::I32 _1ac8a1c22_i = it - expr.begin();
			jule::Ptr<_1a9cdb2b3_Case> _1ac8a1e42_case = *it;
			{
				if ((!(_1aa4c1976_is_constant_valid_match_case(_1ac8a1e42_case)))) {
					goto _iter_next_1ac8a1bbc;
				}
				_18617_const_case=true;
				_1aa4bdaa5_build_default_constat_true_case(&(*_self_), _1ac8a1e42_case,_1ac8a1c22_i,_17137_m);
				goto _iter_end_1ac8a1bbc;
			}
			_iter_next_1ac8a1bbc:;
			++it;
			_1ac8a1c22_i++;
			goto _iter_begin_1ac8a1bbc;
		}
		_iter_end_1ac8a1bbc:;
	}
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1a9cdb2b3_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));
	jule::Ptr<_1a9cdb2b3_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));
	for (; _20317_i <= _20413_end; (_20317_i)++) {
		{
			{
				if (_1aa4c202b_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				}
			}
		}
	_iter_next_1ac8a46c5:;
	}
	_iter_end_1ac8a46c5:;
	if ((!(_18617_const_case))) {
		return;
	}
	jule::I32 _21817_only = -1LL;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac8a597e:;
		if (it != expr.end()) {
			jule::I32 _1ac8a5a17_j = it - expr.begin();
			jule::Ptr<_1a9cdb2b3_Case> _1ac8a5c37_case = *it;
			{
				if ((_1ac8a5c37_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;
					}
					_21817_only=_1ac8a5a17_j;
				}
			}
			_iter_next_1ac8a597e:;
			++it;
			_1ac8a5a17_j++;
			goto _iter_begin_1ac8a597e;
		}
		_iter_end_1ac8a597e:;
	}
	if ((_21817_only != -1LL)) {
		_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	}
}



inline void _1aa4be08e_optimize_range_iter(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9c89d33_RangeIter> _23542_it) {
	static__1aa4c37ad_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1aa4c09a8_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1aa4be314_optimize_while_iter(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9c89b46_WhileIter> _24042_it) {
	static__1aa4c37ad_optimize(_24042_it.get()._field_expr);
	_1aa4c0733_optimize_stmt(&(*_self_), _24042_it.get()._field_next);
	_1aa4c09a8_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1aa4be622_substr(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cda9bb_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8b232_SlicingExprModel>>()) {
			_case_begin_1ac8aaea1:;
			{
				jule::Ptr<_1a8d8b232_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a8d8b232_SlicingExprModel>();
				if (_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model) {
					_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1aa4bae26_MutSlicingExprModel>(_1aa4bae26_MutSlicingExprModel(_24921_sem.get()._field_token,_24921_sem.get()._field_expr,_24921_sem.get()._field_left,_24921_sem.get()._field_right))));
					return true;
				}
			}
		}
		_match_end_1ac8aae18:;
	}
	return false;
}



inline jule::Bool _1aa4be930_str_insert(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cda9bb_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
			_case_begin_1ac8ad8ee:;
			{
				jule::Ptr<_1a8d878e3_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1a8d878e3_BinopExprModel>();
				if (_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model) {
					_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1aa4bb322_StrInsertBeginExprModel>(_1aa4bb322_StrInsertBeginExprModel(_26333_a.get()._field_l.get()._field_model,_26621_m.get()._field_left.get()._field_model))));
					return true;
				}
			}
		}
		_match_end_1ac8ad866:;
	}
	return false;
}



inline jule::Bool _1aa4bec3d_str_assign(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cda9bb_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	}
	jule::Ptr<_1a9da06b8_Prim> _28213_lp = _1a9d9d023_prim(_27833_a.get()._field_l.get()._field_kind.ptr());
	if ((_28213_lp == nullptr) || (!(_1a9da3677_is_str(_28213_lp.ptr())))) {
		return false;
	}
	{
		
		if (_1aa4be622_substr(&(*_self_), _27833_a) || _1aa4be930_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1ac8b275a:;
			{
				return true;
			}
		}
		_match_end_1ac8b2705:;
	}
	return false;
}



inline void _1aa4beeb3_optimize_assign(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cda9bb_Assign> _29438_assign) {
	if (_1d5811230_OPT_COPY && _1aa4bec3d_str_assign(&(*_self_), _29438_assign)) {
		return;
	}
	static__1aa4c37ad_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1aa4c37ad_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ac8b4020:;
			{
				if (_1d581154e_OPT_MATH && (_1a9d9e211_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr)) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1a8d878e3_BinopExprModel>(_1a8d878e3_BinopExprModel(_29438_assign.get()._field_l,_29438_assign.get()._field_r,_29438_assign.get()._field_op)));
					static__1aa4c37ad_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
							_case_begin_1ac8b76c7:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1a8d8742b_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=_30725_model;
								return;
							}
						}
						_match_end_1ac8b7672:;
					}
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;
				}
			}
		}
		_match_end_1ac8b5087:;
	}
	if (_1d581140b_OPT_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>>()) {
				_case_begin_1ac8b9289:;
				{
					jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>();
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1a8d89a8d_SliceExprModel>>()) {
							_case_begin_1ac8ba1d0:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>() || _match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
										_case_begin_1ac8ba9d8:;
										{
											_1aa4bce28_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1aa4ba8a4_PushToSliceExprModel>(_1aa4ba8a4_PushToSliceExprModel(_32825_m.get()._field_dest,_32825_m.get()._field_elements.operator jule::Ptr<_1a8d89a8d_SliceExprModel>()))));
										}
									}
									_match_end_1ac8ba950:;
								}
							}
						}
						_match_end_1ac8ba17a:;
					}
				}
			}
			_match_end_1ac8b9223:;
		}
	}
}



inline void _1aa4c0238_optimize_multi_assign(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cdaba8_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ac8bb1ae:;
		if (it != expr.end()) {
			jule::I32 _1ac8b9575_i = it - expr.begin();
			jule::Any _1ac8bbdc4_l = *it;
			{
				static__1aa4c37ad_optimize(_1ac8bbdc4_l);
				_34444_assign.get()._field_l[_1ac8b9575_i]=_1ac8bbdc4_l;
			}
			_iter_next_1ac8bb1ae:;
			++it;
			_1ac8b9575_i++;
			goto _iter_begin_1ac8bb1ae;
		}
		_iter_end_1ac8bb1ae:;
	}
	static__1aa4c37ad_optimize(_34444_assign.get()._field_r);
}



inline void _1aa4c04ad_optimize_ret(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cdb68c_RetSt> _35235_r) {
	static__1aa4c37ad_optimize(_35235_r.get()._field_expr);
}



inline void _1aa4c0733_optimize_stmt(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Any _35636_stmt) {
	{
		auto &_match_expr{ _35636_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cc76bc_Scope>>()) {
			_case_begin_1ac8bdaa7:;
			{
				_1aa4c09a8_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9cc76bc_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1ac8bdb51:;
			{
				_1aa4bd19d_optimize_data(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9d71c2d_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac8bdbb7:;
			{
				_1aa4bd423_optimize_var(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9d2553e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c78d33_Conditional>>()) {
			_case_begin_1ac8bdc2d:;
			{
				_1aa4bd698_optimize_conditional(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9c78d33_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89d33_RangeIter>>()) {
			_case_begin_1ac8bdc94:;
			{
				_1aa4be08e_optimize_range_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9c89d33_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89b46_WhileIter>>()) {
			_case_begin_1ac8bdd0a:;
			{
				_1aa4be314_optimize_while_iter(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9c89b46_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
			_case_begin_1ac8bdd71:;
			{
				_1aa4c09a8_optimize_child(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9c89959_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cda9bb_Assign>>()) {
			_case_begin_1ac8bdde8:;
			{
				_1aa4beeb3_optimize_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9cda9bb_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdaba8_MultiAssign>>()) {
			_case_begin_1ac8bde70:;
			{
				_1aa4c0238_optimize_multi_assign(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9cdaba8_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdad95_Match>>()) {
			_case_begin_1ac8bdee7:;
			{
				_1aa4bdd19_optimize_match(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9cdad95_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdb68c_RetSt>>()) {
			_case_begin_1ac8be06e:;
			{
				_1aa4c04ad_optimize_ret(&(*_self_), _35636_stmt.operator jule::Ptr<_1a9cdb68c_RetSt>());
			}
		}
		_match_end_1ac8bd975:;
	}
}



inline void _1aa4c09a8_optimize_child(_1aa4bc6ca_ScopeOptimizer* _self_,jule::Ptr<_1a9cc76bc_Scope> _38337_child) {
	jule::Ptr<_1aa4bc6ca_ScopeOptimizer> _38417_so = static__1aa4bcba3_new(_38337_child);
	_1aa4c0b84_optimize(_38417_so.ptr());
}



inline void _1aa4c0b84_optimize(_1aa4bc6ca_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ac8c6252:;
		if (it != expr.end()) {
			jule::I32 _1ac8c6340_i = it - expr.begin();
			jule::Any _1ac8c6494_stmt = *it;
			{
				(*_self_)._field_i=_1ac8c6340_i;
				_1aa4c0733_optimize_stmt(&(*_self_), _1ac8c6494_stmt);
			}
			_iter_next_1ac8c6252:;
			++it;
			_1ac8c6340_i++;
			goto _iter_begin_1ac8c6252;
		}
		_iter_end_1ac8c6252:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4bc6ca_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1aa4c37ad_optimize(jule::Any& _5333_model) {
	{
		
		if (_1d5811a5a_OPT_PTR || _1d581154e_OPT_MATH || _1d58116c5_OPT_ACCESS || _1d5811bd1_OPT_COND) {
			_case_begin_1ac8c6818:;
			{
				jule::Ptr<_1aa4c2d84_ExprOptimizer> _6021_exop = jule::new_ptr<_1aa4c2d84_ExprOptimizer>(_1aa4c2d84_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5333_model))))));
				_1aa4c8c47_do(_6021_exop.ptr());
			}
		}
		_match_end_1ac8c673b:;
	}
}



inline jule::Bool _1aa4c3abb_str_cond(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d878e3_BinopExprModel> _6727_m) {
	jule::Ptr<_1a9da06b8_Prim> _6813_lp = _1a9d9d023_prim(_6727_m.get()._field_left.get()._field_kind.ptr());
	if ((_6813_lp == nullptr) || (!(_1a9da3677_is_str(_6813_lp.ptr())))) {
		return false;
	}
	if ((_6727_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6727_m.get()._field_op.get()._field_kind != jule::Str("!=", 2))) {
		return false;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac8caed2:;
			{
				std::tie(_6727_m.get()._field_left,_6727_m.get()._field_right) = std::make_tuple(_6727_m.get()._field_right,_6727_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1ac8cae7c:;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac8cc676:;
			{
				goto _match_end_1ac8cbeb1;
			}
		}
		else {
			_case_begin_1ac8cc027:;
			{
				return true;
			}
		}
		_match_end_1ac8cbeb1:;
	}
	_julec_label_opt:;
	jule::Ptr<_1a9c46e77_Const> _8713_c = _6727_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a9c46e77_Const>();
	if ((!(_1a9c48929_read_str(_8713_c.ptr()).empty()))) {
		return false;
	}
	{
		auto &_match_expr{ _6727_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ac8cd2ae:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,_6727_m.get()._field_left.get()._field_model,jule::Ptr<_1d7b77374_Token>(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ac8cd6dd:;
			{
				jule::Ptr<_1d7b77374_Token> _9921_op = _6727_m.get()._field_op;
				_9921_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a8d87c9a_UnaryExprModel>(_1a8d87c9a_UnaryExprModel(jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d8d1ac_CommonSubIdentExprModel>(_1a8d8d1ac_CommonSubIdentExprModel(_6727_m.get()._field_left.get()._field_kind,_6727_m.get()._field_left.get()._field_model,jule::Ptr<_1d7b77374_Token>(),jule::Str("empty()", 7))))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>())),_9921_op)));
			}
		}
		_match_end_1ac8cd622:;
	}
	return true;
}



inline void _1aa4c3d41_binary(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d878e3_BinopExprModel> _11525_m) {
	static__1aa4c37ad_optimize(_11525_m.get()._field_left.get()._field_model);
	static__1aa4c37ad_optimize(_11525_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11525_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac8d1a10:;
			{
				goto _match_end_1ac8d2879;
			}
		}
		else {
			_case_begin_1ac8d28e0:;
			{
				return;
			}
		}
		_match_end_1ac8d2879:;
	}
	if (_1d5811bd1_OPT_COND && _1aa4c3abb_str_cond(&(*_self_), _11525_m)) {
		return;
	}
	if ((!(_1d581154e_OPT_MATH))) {
		return;
	}
	{
		auto &_match_expr{ _11525_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ac8d3aab:;
			{
				jule::Bool _13518_ok;
				jule::U64 _13522_x;
				std::tie(_13518_ok,_13522_x) = _1aa4c9187_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_13518_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1a9c46e77_Const> _13825_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a9c46e77_Const>();
					_1a9c498c5_set_u64(_13825_c.ptr(), _13522_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ac8d3b22:;
			{
				jule::Bool _14318_ok;
				jule::U64 _14322_x;
				std::tie(_14318_ok,_14322_x) = _1aa4c9187_check_for_bit_shift_opt(_11525_m.get()._field_left,_11525_m.get()._field_right);
				if (_14318_ok) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1a9c46e77_Const> _14625_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a9c46e77_Const>();
					_1a9c498c5_set_u64(_14625_c.ptr(), _14322_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ac8d3b88:;
			{
				jule::Ptr<_1a9c46e77_Const> _15121_c = _11525_m.get()._field_right.get()._field_model.operator jule::Ptr<_1a9c46e77_Const>();
				jule::F64 _15217_d = _1a9c493ca_as_f64(_15121_c.ptr());
				if ((_15217_d == 2LL)) {
					_11525_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1a9c49650_set_i64(_15121_c.ptr(), 1LL);
				}
			}
		}
		_match_end_1ac8d3924:;
	}
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1aa4accb4_UnsafeBinopExprModel>(_1aa4accb4_UnsafeBinopExprModel(_11525_m)));
}



inline void _1aa4c40b6_unary(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d87c9a_UnaryExprModel> _16324_m) {
	static__1aa4c37ad_optimize(_16324_m.get()._field_expr.get()._field_model);
	if (_1d5811a5a_OPT_PTR && (_16324_m.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _16324_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a8d87c9a_UnaryExprModel>>()) {
				_case_begin_1ac8daac4:;
				{
					jule::Ptr<_1a8d87c9a_UnaryExprModel> _16825_um = _16324_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a8d87c9a_UnaryExprModel>();
					if ((_16825_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_expr.get()._field_model;
					}
				}
			}
			_match_end_1ac8daa3b:;
		}
	}
}



inline void _1aa4c433b_structure_lit(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8854d_StructLitExprModel> _17632_m) {
	{
		auto &expr = _17632_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1ac8dcbc5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d88196_StructArgExprModel> _1ac8dcd29_arg = *it;
			{
				static__1aa4c37ad_optimize(_1ac8dcd29_arg.get()._field_expr);
			}
			_iter_next_1ac8dcbc5:;
			++it;
			goto _iter_begin_1ac8dcbc5;
		}
		_iter_end_1ac8dcbc5:;
	}
}



inline void _1aa4c45b1_alloc_structure(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8887d_AllocStructLitExprModel> _18234_m) {
	_1aa4c433b_structure_lit(&(*_self_), _18234_m.get()._field_lit);
}



inline void _1aa4c4836_casting(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d88dab_CastingExprModel> _18626_m) {
	static__1aa4c37ad_optimize(_18626_m.get()._field_expr);
}



inline void _1aa4c4aab_args(_1aa4c2d84_ExprOptimizer* _self_,jule::Slice<jule::Any> _19023_args) {
	{
		auto &expr = _19023_args;
		auto it = expr.begin();
		_iter_begin_1ac8e03e2:;
		if (it != expr.end()) {
			jule::I32 _1ac8e0513_i = it - expr.begin();
			jule::Any _1ac8e0755_arg = *it;
			{
				static__1aa4c37ad_optimize(_1ac8e0755_arg);
				_19023_args[_1ac8e0513_i]=_1ac8e0755_arg;
			}
			_iter_next_1ac8e03e2:;
			++it;
			_1ac8e0513_i++;
			goto _iter_begin_1ac8e03e2;
		}
		_iter_end_1ac8e03e2:;
	}
}



inline void _1aa4c4d31_scope(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a9cc76bc_Scope>& _19725_s) {
	jule::Ptr<_1aa4bc6ca_ScopeOptimizer> _19817_scopt = static__1aa4bcba3_new(_19725_s);
	_1aa4c0b84_optimize(_19817_scopt.ptr());
}



inline void _1aa4c50a6_func_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d896d6_FnCallExprModel> _20228_m) {
	static__1aa4c37ad_optimize(_20228_m.get()._field_expr);
	_1aa4c4aab_args(&(*_self_), _20228_m.get()._field_args);
	if ((_20228_m.get()._field_except != nullptr)) {
		_1aa4c4d31_scope(&(*_self_), _20228_m.get()._field_except);
	}
}



inline void _1aa4c532b_slice(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d89a8d_SliceExprModel> _21024_m) {
	_1aa4c4aab_args(&(*_self_), _21024_m.get()._field_elems);
}



inline void _1aa4c55a1_array(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8c83d_ArrayExprModel> _21424_m) {
	if ((_21424_m.get()._field_elems.len() == 2LL) && (_21424_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		jule::Any _21621_elem = _21424_m.get()._field_elems[0LL];
		static__1aa4c37ad_optimize(_21621_elem);
		_21424_m.get()._field_elems[0LL]=_21621_elem;
	}
	_1aa4c4aab_args(&(*_self_), _21424_m.get()._field_elems);
}



inline void _1aa4c5826_indexing(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8a011_IndexingExprModel> _22327_m) {
	static__1aa4c37ad_optimize(_22327_m.get()._field_expr.get()._field_model);
	static__1aa4c37ad_optimize(_22327_m.get()._field_index.get()._field_model);
	if ((!(_1d58116c5_OPT_ACCESS))) {
		return;
	}
	jule::Bool _22913_array = (_1a9d9d9c4_arr(_22327_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);
	if (_22913_array && _1a9d725e1_is_const(_22327_m.get()._field_index.ptr())) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1aa4ad8ec_UnsafeIndexingExprModel>(_1aa4ad8ec_UnsafeIndexingExprModel(_22327_m)));
		return;
	}
	{
		auto &_match_expr{ _22327_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac8ea254:;
			{
				jule::Ptr<_1a9d2553e_Var> _23917_i = _22327_m.get()._field_index.get()._field_model.operator jule::Ptr<_1a9d2553e_Var>();
				if (_23917_i.get()._field_mutable || (_23917_i.get()._field_iter_relation == nullptr)) {
					goto _match_end_1ac8ea188;
				}
				{
					auto &_match_expr{ _22327_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
						_case_begin_1ac8eb93c:;
						{
							jule::Ptr<_1a9d2553e_Var> _24521_r = _22327_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a9d2553e_Var>();
							if (_23917_i.get()._field_iter_relation.get()._field_range == _24521_r) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1aa4ad8ec_UnsafeIndexingExprModel>(_1aa4ad8ec_UnsafeIndexingExprModel(_22327_m)));
							}
						}
					}
					_match_end_1ac8eb8d7:;
				}
			}
		}
		_match_end_1ac8ea188:;
	}
}



inline void _1aa4c5a9b_anon_func(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8a3b8_AnonFnExprModel> _25628_m) {
	_1aa4c4d31_scope(&(*_self_), _25628_m.get()._field_func.get()._field_scope);
}



inline void _1aa4c5d21_map(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8abe3_MapExprModel> _26022_m) {
	{
		auto &expr = _26022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1ac8ee269:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d8a770_KeyValPairExprModel> _1ac8ee3bd_pair = *it;
			{
				static__1aa4c37ad_optimize(_1ac8ee3bd_pair.get()._field_key);
				static__1aa4c37ad_optimize(_1ac8ee3bd_pair.get()._field_val);
			}
			_iter_next_1ac8ee269:;
			++it;
			goto _iter_begin_1ac8ee269;
		}
		_iter_end_1ac8ee269:;
	}
}



inline void _1aa4c6096_slicing(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8b232_SlicingExprModel> _26726_m) {
	static__1aa4c37ad_optimize(_26726_m.get()._field_expr);
	static__1aa4c37ad_optimize(_26726_m.get()._field_left);
	if (_26726_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		static__1aa4c37ad_optimize(_26726_m.get()._field_right);
	}
}



inline void _1aa4c631b_trait_sub(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8b771_TraitSubIdentExprModel> _27528_m) {
	static__1aa4c37ad_optimize(_27528_m.get()._field_expr);
}



inline void _1aa4c6591_structure_sub(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _27932_m) {
	static__1aa4c37ad_optimize(_27932_m.get()._field_expr.get()._field_model);
}



inline void _1aa4c6816_common_sub(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel> _28329_m) {
	static__1aa4c37ad_optimize(_28329_m.get()._field_expr);
}



inline void _1aa4c6a8b_tuple(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8d487_TupleExprModel> _28724_m) {
	{
		auto &expr = _28724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ac90413c:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d71c2d_Data> _1ac904291_d = *it;
			{
				static__1aa4c37ad_optimize(_1ac904291_d.get()._field_model);
			}
			_iter_next_1ac90413c:;
			++it;
			goto _iter_begin_1ac90413c;
		}
		_iter_end_1ac90413c:;
	}
}



inline void _1aa4c6d11_new_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel> _29327_m) {
	if (_29327_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		static__1aa4c37ad_optimize(_29327_m.get()._field_init);
	}
}



inline void _1aa4c7086_out_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel> _29927_m) {
	static__1aa4c37ad_optimize(_29927_m.get()._field_expr);
}



inline void _1aa4c730b_outln_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel> _30329_m) {
	static__1aa4c37ad_optimize(_30329_m.get()._field_expr);
}



inline void _1aa4c7581_panic_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel> _30729_m) {
	static__1aa4c37ad_optimize(_30729_m.get()._field_expr);
}



inline void _1aa4c7806_assert_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel> _31130_m) {
	static__1aa4c37ad_optimize(_31130_m.get()._field_expr);
}



inline void _1aa4c7a7b_error_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel> _31529_m) {
	static__1aa4c37ad_optimize(_31529_m.get()._field_err);
}



inline void _1aa4c7d01_make_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel> _31928_m) {
	if (_31928_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		static__1aa4c37ad_optimize(_31928_m.get()._field_len);
	}
	if (_31928_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		static__1aa4c37ad_optimize(_31928_m.get()._field_cap);
	}
}



inline void _1aa4c8076_append_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel> _32830_m) {
	static__1aa4c37ad_optimize(_32830_m.get()._field_dest);
	static__1aa4c37ad_optimize(_32830_m.get()._field_elements);
}



inline void _1aa4c82eb_clone_call(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel> _33329_m) {
	static__1aa4c37ad_optimize(_33329_m.get()._field_expr);
}



inline void _1aa4c8571_sizeof(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d90d6e_SizeofExprModel> _33725_m) {
	static__1aa4c37ad_optimize(_33725_m.get()._field_expr);
}



inline void _1aa4c87e6_alignof(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d914e0_AlignofExprModel> _34126_m) {
	static__1aa4c37ad_optimize(_34126_m.get()._field_expr);
}



inline void _1aa4c8a6b_integrated_to_str(_1aa4c2d84_ExprOptimizer* _self_,jule::Ptr<_1a8d919b8_IntegratedToStrExprModel> _34536_m) {
	static__1aa4c37ad_optimize(_34536_m.get()._field_expr);
}



inline void _1aa4c8c47_do(_1aa4c2d84_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1ac90e994:;
			{
				(*((*_self_)._field_model))=(*((*_self_)._field_model)).operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model;
				_1aa4c8c47_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
			_case_begin_1ac90ec80:;
			{
				_1aa4c3d41_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d878e3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d87c9a_UnaryExprModel>>()) {
			_case_begin_1ac90ece6:;
			{
				_1aa4c40b6_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d87c9a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8854d_StructLitExprModel>>()) {
			_case_begin_1ac90ed5c:;
			{
				_1aa4c433b_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8854d_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8887d_AllocStructLitExprModel>>()) {
			_case_begin_1ac90edc3:;
			{
				_1aa4c45b1_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8887d_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d88dab_CastingExprModel>>()) {
			_case_begin_1ac90ee39:;
			{
				_1aa4c4836_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d88dab_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
			_case_begin_1ac90eea0:;
			{
				_1aa4c50a6_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d896d6_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d89a8d_SliceExprModel>>()) {
			_case_begin_1ac910016:;
			{
				_1aa4c532b_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d89a8d_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8c83d_ArrayExprModel>>()) {
			_case_begin_1ac91007c:;
			{
				_1aa4c55a1_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8c83d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8a011_IndexingExprModel>>()) {
			_case_begin_1ac9100e3:;
			{
				_1aa4c5826_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8a011_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8a3b8_AnonFnExprModel>>()) {
			_case_begin_1ac91016a:;
			{
				_1aa4c5a9b_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8a3b8_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8abe3_MapExprModel>>()) {
			_case_begin_1ac9101e2:;
			{
				_1aa4c5d21_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8abe3_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b232_SlicingExprModel>>()) {
			_case_begin_1ac910269:;
			{
				_1aa4c6096_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8b232_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>>()) {
			_case_begin_1ac9102e1:;
			{
				_1aa4c631b_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
			_case_begin_1ac910368:;
			{
				_1aa4c6591_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>>()) {
			_case_begin_1ac9103e0:;
			{
				_1aa4c6816_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d487_TupleExprModel>>()) {
			_case_begin_1ac910467:;
			{
				_1aa4c6a8b_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8d487_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>>()) {
			_case_begin_1ac9104de:;
			{
				_1aa4c7086_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ac910566:;
			{
				_1aa4c730b_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>>()) {
			_case_begin_1ac9105dd:;
			{
				_1aa4c6d11_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ac910665:;
			{
				_1aa4c7581_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ac9106dc:;
			{
				_1aa4c7806_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ac910764:;
			{
				_1aa4c7a7b_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ac9107db:;
			{
				_1aa4c7d01_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ac910863:;
			{
				_1aa4c8076_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ac9108da:;
			{
				_1aa4c82eb_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d90d6e_SizeofExprModel>>()) {
			_case_begin_1ac910962:;
			{
				_1aa4c8571_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d90d6e_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d914e0_AlignofExprModel>>()) {
			_case_begin_1ac9109d9:;
			{
				_1aa4c87e6_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d914e0_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>>()) {
			_case_begin_1ac910a61:;
			{
				_1aa4c8a6b_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>());
			}
		}
		_match_end_1ac90e93e:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4c2d84_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa4c9b9e_Optimizer> static__1aa4ca0bc_new(jule::Ptr<_1bce27b17_IR>& _2128_ir) {
	return jule::new_ptr<_1aa4c9b9e_Optimizer>(_1aa4c9b9e_Optimizer(_2128_ir));
}



inline void _1aa4ca342_optimize_global(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a9d2553e_Var>& _2739_v) {
	if ((!(_2739_v.get()._field_cpp_linked))) {
		static__1aa4c37ad_optimize(_2739_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1aa4ca5b7_optimize_function(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a8d94db7_Fn>& _3341_func) {
	if (_3341_func.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _3341_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac926acc:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1ac926dda_ins = *it;
			{
				jule::Ptr<_1aa4bc6ca_ScopeOptimizer> _3821_so = static__1aa4bcba3_new(_1ac926dda_ins.get()._field_scope);
				_1aa4c0b84_optimize(_3821_so.ptr());
			}
			_iter_next_1ac926acc:;
			++it;
			goto _iter_begin_1ac926acc;
		}
		_iter_end_1ac926acc:;
	}
}



inline void _1aa4ca83c_optimize_struct(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a8d82b41_Struct>& _4339_s) {
	if (_4339_s.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _4339_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ac92835e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1ac92866c_ins = *it;
			{
				{
					auto &expr = _1ac92866c_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1ac928d32:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d84e62_FieldIns> _1ac928ded_f = *it;
						{
							if ((_1ac928ded_f.get()._field_default != nullptr)) {
								static__1aa4c37ad_optimize(_1ac928ded_f.get()._field_default.get()._field_model);
							}
						}
						_iter_next_1ac928d32:;
						++it;
						goto _iter_begin_1ac928d32;
					}
					_iter_end_1ac928d32:;
				}
				{
					auto &expr = _1ac92866c_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ac9295a2:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1ac928edb_m = *it;
						{
							_1aa4ca5b7_optimize_function(&(*_self_), _1ac928edb_m);
						}
						_iter_next_1ac9295a2:;
						++it;
						goto _iter_begin_1ac9295a2;
					}
					_iter_end_1ac9295a2:;
				}
			}
			_iter_next_1ac92835e:;
			++it;
			goto _iter_begin_1ac92835e;
		}
		_iter_end_1ac92835e:;
	}
}



inline void _1aa4caab2_optimize_globals(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a9d05013_Package>& _5940_p) {
	{
		auto &expr = _5940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac92aa37:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac92ab8b_f = *it;
			{
				{
					auto &expr = _1ac92ab8b_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1ac92b2c9:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d2553e_Var> _1ac92b395_v = *it;
						{
							_1aa4ca342_optimize_global(&(*_self_), _1ac92b395_v);
						}
						_iter_next_1ac92b2c9:;
						++it;
						goto _iter_begin_1ac92b2c9;
					}
					_iter_end_1ac92b2c9:;
				}
			}
			_iter_next_1ac92aa37:;
			++it;
			goto _iter_begin_1ac92aa37;
		}
		_iter_end_1ac92aa37:;
	}
}



inline void _1aa4cad37_optimize_functions(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a9d05013_Package>& _6742_p) {
	{
		auto &expr = _6742_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac92c198:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac92c2ec_f = *it;
			{
				{
					auto &expr = _1ac92c2ec_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ac92c93a:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1ac92ca06_func = *it;
						{
							_1aa4ca5b7_optimize_function(&(*_self_), _1ac92ca06_func);
						}
						_iter_next_1ac92c93a:;
						++it;
						goto _iter_begin_1ac92c93a;
					}
					_iter_end_1ac92c93a:;
				}
			}
			_iter_next_1ac92c198:;
			++it;
			goto _iter_begin_1ac92c198;
		}
		_iter_end_1ac92c198:;
	}
}



inline void _1aa4cb0ac_optimize_structs(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a9d05013_Package>& _7540_p) {
	{
		auto &expr = _7540_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac92d7c6:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac92d8e7_f = *it;
			{
				{
					auto &expr = _1ac92d8e7_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ac92e035:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d82b41_Struct> _1ac92e101_s = *it;
						{
							_1aa4ca83c_optimize_struct(&(*_self_), _1ac92e101_s);
						}
						_iter_next_1ac92e035:;
						++it;
						goto _iter_begin_1ac92e035;
					}
					_iter_end_1ac92e035:;
				}
			}
			_iter_next_1ac92d7c6:;
			++it;
			goto _iter_begin_1ac92d7c6;
		}
		_iter_end_1ac92d7c6:;
	}
}



inline void _1aa4cb332_optimize_package(_1aa4c9b9e_Optimizer* _self_,jule::Ptr<_1a9d05013_Package>& _8340_p) {
	_1aa4caab2_optimize_globals(&(*_self_), _8340_p);
	_1aa4cad37_optimize_functions(&(*_self_), _8340_p);
	_1aa4cb0ac_optimize_structs(&(*_self_), _8340_p);
}



inline void _1aa4cb50d_optimize(_1aa4c9b9e_Optimizer* _self_) {
	{
		
		if (_1d5811bd1_OPT_COND || _1d581140b_OPT_APPEND || _1d5811230_OPT_COPY) {
			_case_begin_1ac9316db:;
			{
				goto _match_end_1ac93118b;
			}
		}
		else {
			_case_begin_1ac931257:;
			{
				return;
			}
		}
		_match_end_1ac93118b:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac931a1b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac931c6e_u = *it;
			{
				if ((!(_1ac931c6e_u.get()._field_cpp_linked))) {
					_1aa4cb332_optimize_package(&(*_self_), _1ac931c6e_u.get()._field_package);
				}
			}
			_iter_next_1ac931a1b:;
			++it;
			goto _iter_begin_1ac931a1b;
		}
		_iter_end_1ac931a1b:;
	}
	_1aa4cb332_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4c9b9e_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1aa54bced_unix(_1aa54b913_AbsTime* _self_) {
	jule::Bool _5617_leap = false;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);
	if ((_5817_m >= 12LLU) || (_5817_m < 0LLU)) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		}
		_5717_y+=_6021_adj;
	}
	jule::U64 _6817_t = _1aa5514a6_unix_year_to_seconds(_5717_y,_5617_leap);
	_6817_t+=static_cast<jule::U64>(_1aa55183b_unix_month_to_seconds(_5817_m,_5617_leap));
	_6817_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((*_self_)._field_day - 1LLU)))));
	_6817_t+=static_cast<jule::U64>(3600LLU * (*_self_)._field_hour);
	_6817_t+=static_cast<jule::U64>(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa54b913_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1aa54c0d9_Time static__1aa54c480_unix(jule::U64 _9124_sec) {
	return _1aa54c0d9_Time(_9124_sec);
}



inline _1aa54c0d9_Time static__1aa54c67d_now(void) {
	return static__1aa54c480_unix(static_cast<jule::U64>(_1aa551165_unix()));
}



inline jule::U64 _1aa54cace_unix(_1aa54c0d9_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1aa54cd43_day(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_day;
}



inline jule::U64 _1aa54d0a7_month(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_month;
}



inline jule::U64 _1aa54d31b_year(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_year;
}



inline jule::U64 _1aa54d580_second(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_second;
}



inline jule::U64 _1aa54d7e4_minute(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1aa54da58_hour(_1aa54c0d9_Time* _self_) {
	return _1aa54dcbc_abs(&(*_self_))._field_hour;
}



inline _1aa54b913_AbsTime _1aa54dcbc_abs(_1aa54c0d9_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);
	jule::U64 _12817_days = (_12713_secs / 86400LLU);
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	}
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	}
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_14217_c_cycles * 36524LLU));
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_14817_q_cycles * 1461LLU));
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	}
	_13617_rem_days-=static_cast<jule::U64>((_15417_rem_years * 365LLU));
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);
	if ((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU))) {
		_16017_leap=1LLU;
	}
	jule::U64 _16417_y_day = ((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap;
	if (_16417_y_day >= static_cast<jule::U64>(static_cast<jule::U64>(365LLU + _16017_leap))) {
		_16417_y_day-=static_cast<jule::U64>(365LLU + _16017_leap);
	}
	jule::U64 _16917_months = 0LLU;
	for (; _1aa54ae62_MDAYS[static_cast<jule::I32>(_16917_months)] <= _13617_rem_days; (_16917_months)++) {
		{
			_13617_rem_days-=_1aa54ae62_MDAYS[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1ac9577cd:;
	}
	_iter_end_1ac9577cd:;
	_1aa54b913_AbsTime _17417_t = _1aa54b913_AbsTime();
	_17417_t._field_year=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15417_rem_years + static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _14817_q_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(100LLU * _14217_c_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(400LLU * _13517_qc_cycles)))) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	}
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12817_days))) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	}
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((_12917_rem_secs / 60LLU))) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa54c0d9_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1aa54e4d7_nanoseconds(jule::I64 _22731_d) {
	return static_cast<jule::I64>((_22731_d * 1LL));
}



inline jule::I64 static__1aa54e77e_microseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000LL));
}



inline jule::I64 static__1aa54ea26_milliseconds(jule::I64 _23732_d) {
	return static_cast<jule::I64>((_23732_d * 1000000LL));
}



inline jule::I64 static__1aa54ecbd_seconds(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 1000000000LL));
}



inline jule::I64 static__1aa550065_minutes(jule::I64 _24727_d) {
	return static_cast<jule::I64>((_24727_d * 60000000000LL));
}



inline jule::I64 static__1aa55030c_hours(jule::I64 _25225_d) {
	return static_cast<jule::I64>((_25225_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa54e0a8_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa3470d2_TestCoder> static__1aa347555_new(jule::Ptr<_1aa51504c_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1aa3470d2_TestCoder>(_1aa3470d2_TestCoder(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Ptr<_1a8d94db7_Fn>(),_2828_oc));
}



inline jule::Ptr<_1a9d02351_ImportInfo> _1aa3795a9_find_testing_package(_1aa3470d2_TestCoder* _self_) {
	{
		auto &expr = (*_self_)._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1ac994c27:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac994d7b_imp = *it;
			{
				if ((_1ac994d7b_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _1ac994d7b_imp;
				}
			}
			_iter_next_1ac994c27:;
			++it;
			goto _iter_begin_1ac994c27;
		}
		_iter_end_1ac994c27:;
	}
	return nullptr;
}



inline void _1aa3797b8_append_test(_1aa3470d2_TestCoder* _self_,jule::Str& _4335_obj,jule::Ptr<_1a8d98063_FnIns> _4349_f) {
	_4335_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_4335_obj+=_1aa37a0b0_call_tm_reset(&(*_self_));
	_4335_obj+=jule::Str(";\n", 2);
	_4335_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_4335_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("jule::outln(", 12);
	_4335_obj+=_1aa4d55e4_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4349_f.get()._field_decl.get()._field_ident));
	_4335_obj+=jule::Str(");\n", 3);
	_4335_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_4335_obj+=static__1aa4d972a_func_ins(_4349_f);
	_4335_obj+=jule::Str("(_t);\n", 6);
	_4335_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_4335_obj+=jule::Str("post_test();\n", 13);
}



inline void _1aa379ad7_append_package_tests(_1aa3470d2_TestCoder* _self_,jule::Str& _6044_obj,jule::Ptr<_1a9d05013_Package>& _6059_p) {
	{
		auto &expr = _6059_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac99a942:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac99a997_file = *it;
			{
				{
					auto &expr = _1ac99a997_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ac99b1a1:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1ac99b26c_f = *it;
						{
							if (_1aa5597bc_has_directive(_1ac99b26c_f.get()._field_directives,jule::Str("test", 4))) {
								_1aa3797b8_append_test(&(*_self_), _6044_obj,_1ac99b26c_f.get()._field_instances[0LL]);
							}
						}
						_iter_next_1ac99b1a1:;
						++it;
						goto _iter_begin_1ac99b1a1;
					}
					_iter_end_1ac99b1a1:;
				}
			}
			_iter_next_1ac99a942:;
			++it;
			goto _iter_begin_1ac99a942;
		}
		_iter_end_1ac99a942:;
	}
}



inline jule::Bool _1aa379d4b_ready_testing_package(_1aa3470d2_TestCoder* _self_) {
	jule::Ptr<_1a9d02351_ImportInfo> _7117_p = _1aa3795a9_find_testing_package(&(*_self_));
	if ((_7117_p == nullptr)) {
		return false;
	}
	(*_self_)._field_t=_1a9d03781_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	(*_self_)._field_tm_reset=_1a8d8675a_find_method((*_self_)._field_t.ptr(), jule::Str("reset", 5),false);
	(*_self_)._field_tm_failed=_1a8d8675a_find_method((*_self_)._field_t.ptr(), jule::Str("failed", 6),false);
	(*_self_)._field_tm_skipped=_1a8d8675a_find_method((*_self_)._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline jule::Str _1aa37a0b0_call_tm_reset(_1aa3470d2_TestCoder* _self_) {
	jule::Str _8717_obj = static__1aa4d9483_func((*_self_)._field_tm_reset);
	_8717_obj+=jule::Str("(_t)", 4);
	return _8717_obj;
}



inline jule::Str _1aa37a324_call_tm_failed(_1aa3470d2_TestCoder* _self_) {
	jule::Str _9317_obj = static__1aa4d9483_func((*_self_)._field_tm_failed);
	_9317_obj+=jule::Str("(_t)", 4);
	return _9317_obj;
}



inline jule::Str _1aa37a588_call_tm_skipped(_1aa3470d2_TestCoder* _self_) {
	jule::Str _9917_obj = static__1aa4d9483_func((*_self_)._field_tm_skipped);
	_9917_obj+=jule::Str("(_t)", 4);
	return _9917_obj;
}



inline void _1aa37a80d_serialize(_1aa3470d2_TestCoder* _self_,jule::Str& _10637_obj) {
	_10637_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((!(_1aa379d4b_ready_testing_package(&(*_self_))))) {
		_10637_obj+=jule::Str("}", 1);
		_1aa51edae_done_indent((*_self_)._field_oc.ptr());
		return;
	}
	_10637_obj+=static__1aa55b22a_as_sptr(static__1aa55d11c_structure_ins((*_self_)._field_t));
	_10637_obj+=jule::Str(" _t = jule::new_ptr<", 20);
	_10637_obj+=static__1aa55d11c_structure_ins((*_self_)._field_t);
	_10637_obj+=jule::Str(">(); _t.ref = nullptr;\n", 23);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("++total;\n", 9);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("if (", 4);
	_10637_obj+=_1aa37a324_call_tm_failed(&(*_self_));
	_10637_obj+=jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("else if (", 9);
	_10637_obj+=_1aa37a588_call_tm_skipped(&(*_self_));
	_10637_obj+=jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("};\n", 3);
	_1aa379ad7_append_package_tests(&(*_self_), _10637_obj,(*_self_)._field_oc.get()._field_ir.get()._field_main);
	_10637_obj+=jule::Str("\n\n", 2);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154);
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_10637_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_10637_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3470d2_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa3b797c_ScopeCoder> static__1aa3be511_new(jule::Ptr<_1aa51504c_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1aa3b797c_ScopeCoder>(_1aa3b797c_ScopeCoder(_4724_oc));
}



inline jule::Str _1aa3deb19_range_index_iter(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c89d33_RangeIter>& _5340_it) {
	jule::Str _5413_begin = static__1aa4daa8e_iter_begin(static_cast<jule::U32>(static_cast<jule::U32>(_5340_it)));
	jule::Str _5513_next = static__1aa4db0cd_iter_next(static_cast<jule::U32>(static_cast<jule::U32>(_5340_it)));
	jule::Str _5717_obj = jule::Str("{\n", 2);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("auto ", 5);
	if (_1d5811230_OPT_COPY && _1aa4b765e_is_copy_optimizable(_5340_it.get()._field_expr)) {
		_5717_obj+=jule::Str("&", 1);
	}
	_5717_obj+=jule::Str("expr = ", 7);
	_5717_obj+=_1aa4d3c52_model((*_self_)._field_oc.get()._field_ec.ptr(), _5340_it.get()._field_expr.get()._field_model);
	_5717_obj+=jule::Str(";\n", 2);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_5413_begin;
	_5717_obj+=jule::Str(":;\n", 3);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((_5340_it.get()._field_key_a != nullptr)) {
		_5717_obj+=_1aa55282b_var_init_expr((*_self_)._field_oc.ptr(), _5340_it.get()._field_key_a,jule::Str("it - expr.begin()", 17));
		_5717_obj+=jule::Str("\n", 1);
		_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	if ((_5340_it.get()._field_key_b != nullptr)) {
		if (_1d5811230_OPT_COPY) {
			_5340_it.get()._field_key_b.get()._field_reference=_1aa4b7791_is_iter_copy_optimizable(_5340_it.get()._field_expr,_5340_it.get()._field_key_b);
		}
		_5717_obj+=_1aa55282b_var_init_expr((*_self_)._field_oc.ptr(), _5340_it.get()._field_key_b,jule::Str("*it", 3));
		_5717_obj+=jule::Str("\n", 1);
		_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	_5717_obj+=_1aa411201_scope(&(*_self_), _5340_it.get()._field_scope);
	_5717_obj+=jule::Str("\n", 1);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_5513_next;
	_5717_obj+=jule::Str(":;\n", 3);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("++it;\n", 6);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((_5340_it.get()._field_key_a != nullptr)) {
		_5717_obj+=static__1aa4da7e7_var(_5340_it.get()._field_key_a);
		_5717_obj+=jule::Str("++;\n", 4);
		_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	_5717_obj+=jule::Str("goto ", 5);
	_5717_obj+=_5413_begin;
	_5717_obj+=jule::Str(";\n", 2);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("}\n", 2);
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=static__1aa4dad36_iter_end(static_cast<jule::U32>(static_cast<jule::U32>(_5340_it)));
	_5717_obj+=jule::Str(":;\n", 3);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_5717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_5717_obj+=jule::Str("}", 1);
	return _5717_obj;
}



inline jule::Str _1aa3e226a_range_hashmap_iter(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c89d33_RangeIter>& _12342_it) {
	jule::Str _12413_begin = static__1aa4daa8e_iter_begin(static_cast<jule::U32>(static_cast<jule::U32>(_12342_it)));
	jule::Str _12513_next = static__1aa4db0cd_iter_next(static_cast<jule::U32>(static_cast<jule::U32>(_12342_it)));
	jule::Str _12717_obj = jule::Str("{\n", 2);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("auto ", 5);
	if (_1d5811230_OPT_COPY && _1aa4b765e_is_copy_optimizable(_12342_it.get()._field_expr)) {
		_12717_obj+=jule::Str("&", 1);
	}
	_12717_obj+=jule::Str("expr = ", 7);
	_12717_obj+=_1aa4d3c52_model((*_self_)._field_oc.get()._field_ec.ptr(), _12342_it.get()._field_expr.get()._field_model);
	_12717_obj+=jule::Str(";\n", 2);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_12413_begin;
	_12717_obj+=jule::Str(":;\n", 3);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((_12342_it.get()._field_key_a != nullptr)) {
		if (_1d5811230_OPT_COPY) {
			_12342_it.get()._field_key_a.get()._field_reference=_1aa4b7791_is_iter_copy_optimizable(_12342_it.get()._field_expr,_12342_it.get()._field_key_a);
		}
		_12717_obj+=_1aa55282b_var_init_expr((*_self_)._field_oc.ptr(), _12342_it.get()._field_key_a,jule::Str("it->first", 9));
		_12717_obj+=jule::Str("\n", 1);
		_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	if ((_12342_it.get()._field_key_b != nullptr)) {
		if (_1d5811230_OPT_COPY) {
			_12342_it.get()._field_key_b.get()._field_reference=_1aa4b7791_is_iter_copy_optimizable(_12342_it.get()._field_expr,_12342_it.get()._field_key_b);
		}
		_12717_obj+=_1aa55282b_var_init_expr((*_self_)._field_oc.ptr(), _12342_it.get()._field_key_b,jule::Str("it->second", 10));
		_12717_obj+=jule::Str("\n", 1);
		_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	_12717_obj+=_1aa411201_scope(&(*_self_), _12342_it.get()._field_scope);
	_12717_obj+=jule::Str("\n", 1);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_12513_next;
	_12717_obj+=jule::Str(":;\n", 3);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("++it;\n", 6);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("goto ", 5);
	_12717_obj+=_12413_begin;
	_12717_obj+=jule::Str(";\n", 2);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("}\n", 2);
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=static__1aa4dad36_iter_end(static_cast<jule::U32>(static_cast<jule::U32>(_12342_it)));
	_12717_obj+=jule::Str(":;\n", 3);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_12717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_12717_obj+=jule::Str("}", 1);
	return _12717_obj;
}



inline jule::Str _1aa400025_if_case(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cce0b9_If> _19130_i) {
	jule::Str _19217_obj = jule::Str();
	if (_19130_i.get()._field_expr != jule::Any(jule::Any(nullptr))) {
		_19217_obj+=jule::Str("if (", 4);
		_19217_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _19130_i.get()._field_expr);
		_19217_obj+=jule::Str(") ", 2);
	}
	_19217_obj+=_1aa411201_scope(&(*_self_), _19130_i.get()._field_scope);
	return _19217_obj;
}



inline jule::Str _1aa4077be_conditional(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c78d33_Conditional> _20234_c) {
	jule::Str _20317_obj = jule::Str();
	{
		auto &expr = _20234_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ac9d41ea:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cce0b9_If> _1ac9d43e8_elif = *it;
			{
				if ((_1ac9d43e8_elif == nullptr)) {
					goto _iter_next_1ac9d41ea;
				}
				if ((_20317_obj.len() != 0LL)) {
					_20317_obj+=jule::Str(" else ", 6);
				}
				_20317_obj+=_1aa400025_if_case(&(*_self_), _1ac9d43e8_elif);
			}
			_iter_next_1ac9d41ea:;
			++it;
			goto _iter_begin_1ac9d41ea;
		}
		_iter_end_1ac9d41ea:;
	}
	if ((_20234_c.get()._field_default != nullptr)) {
		if ((_20317_obj.len() != 0LL)) {
			_20317_obj+=jule::Str(" else ", 6);
		}
		_20317_obj+=_1aa411201_scope(&(*_self_), _20234_c.get()._field_default.get()._field_scope);
	}
	return _20317_obj;
}



inline jule::Str _1aa4693ad_inf_iter(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c89959_InfIter> _22231_it) {
	jule::Str _22317_obj = jule::Str("for (;;) {\n", 11);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_22317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_22317_obj+=_1aa411201_scope(&(*_self_), _22231_it.get()._field_scope);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_22317_obj+=jule::Str("\n", 1);
	_22317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_22317_obj+=static__1aa4db0cd_iter_next(static_cast<jule::U32>(static_cast<jule::U32>(_22231_it)));
	_22317_obj+=jule::Str(":;\n", 3);
	_22317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_22317_obj+=jule::Str("}\n", 2);
	_22317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_22317_obj+=static__1aa4dad36_iter_end(static_cast<jule::U32>(static_cast<jule::U32>(_22231_it)));
	_22317_obj+=jule::Str(":;", 2);
	return _22317_obj;
}



inline jule::Str _1aa469c60_while_iter(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c89b46_WhileIter> _24333_it) {
	jule::Str _24417_obj = jule::Str();
	if ((_24333_it.get()._field_expr != jule::Any(jule::Any(nullptr))) && (_24333_it.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_24417_obj+=jule::Str("while (", 7);
		_24417_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24333_it.get()._field_expr);
		_24417_obj+=jule::Str(") {\n", 4);
	} else {
		_24417_obj+=jule::Str("for (; ", 7);
		if (_24333_it.get()._field_expr != jule::Any(jule::Any(nullptr))) {
			_24417_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24333_it.get()._field_expr);
		}
		_24417_obj+=jule::Str("; ", 2);
		if (_24333_it.get()._field_next != jule::Any(jule::Any(nullptr))) {
			jule::Str _25621_st = _1aa3b86b4_st(&(*_self_), _24333_it.get()._field_next);
			_24417_obj+=_25621_st.slice(0LL,(_25621_st.len() - 1LL));
		}
		_24417_obj+=jule::Str(") {\n", 4);
	}
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1aa411201_scope(&(*_self_), _24333_it.get()._field_scope);
	_24417_obj+=jule::Str("\n", 1);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_24417_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_24417_obj+=static__1aa4db0cd_iter_next(static_cast<jule::U32>(static_cast<jule::U32>(_24333_it)));
	_24417_obj+=jule::Str(":;\n", 3);
	_24417_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_24417_obj+=jule::Str("}\n", 2);
	_24417_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_24417_obj+=static__1aa4dad36_iter_end(static_cast<jule::U32>(static_cast<jule::U32>(_24333_it)));
	_24417_obj+=jule::Str(":;", 2);
	return _24417_obj;
}



inline jule::Str _1aa46e171_range_iter(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9c89d33_RangeIter> _27933_it) {
	{
		
		if ((_1a9d9dc38_slc(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e3ec9:;
			{
				return _1aa3deb19_range_index_iter(&(*_self_), _27933_it);
			}
		}
		else if ((_1a9d9d9c4_arr(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e4040:;
			{
				return _1aa3deb19_range_index_iter(&(*_self_), _27933_it);
			}
		}
		else if ((_1a9d9e6d9_map(_27933_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac9e44b3:;
			{
				return _1aa3e226a_range_hashmap_iter(&(*_self_), _27933_it);
			}
		}
		else {
			_case_begin_1ac9e3902:;
			{
				return _1aa3deb19_range_index_iter(&(*_self_), _27933_it);
			}
		}
		_match_end_1ac9e3836:;
	}
}



inline jule::Str _1aa476c39_cont(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cb79dc_ContSt> _29219_c) {
	jule::Str _29317_obj = jule::Str("goto ", 5);
	_29317_obj+=static__1aa4db0cd_iter_next(_29219_c.get()._field_it);
	_29317_obj+=jule::Str(";", 1);
	return _29317_obj;
}



inline jule::Str _1aa47a7ed_label(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cda405_Label> _29920_l) {
	return (static__1aa4db375_label(_29920_l.get()._field_ident) + jule::Str(":;", 2));
}



inline jule::Str _1aa47ab50_goto_st(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cda5e2_GotoSt> _30322_gt) {
	jule::Str _30417_obj = jule::Str("goto ", 5);
	_30417_obj+=static__1aa4db375_label(_30322_gt.get()._field_ident);
	_30417_obj+=jule::Str(";", 1);
	return _30417_obj;
}



inline jule::Str _1aa47b5e0_postfix(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cda7ce_Postfix> _31030_p) {
	jule::Str _31117_obj = jule::Str("(", 1);
	_31117_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31030_p.get()._field_expr);
	_31117_obj+=jule::Str(")", 1);
	_31117_obj+=_31030_p.get()._field_op;
	_31117_obj+=jule::Str(";", 1);
	return _31117_obj;
}



inline jule::Str _1aa47db53_assign(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cda9bb_Assign> _31929_a) {
	jule::Str _32017_obj = _1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31929_a.get()._field_l.get()._field_model);
	_32017_obj+=_31929_a.get()._field_op.get()._field_kind;
	_32017_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31929_a.get()._field_r.get()._field_model);
	_32017_obj+=jule::Str(";", 1);
	return _32017_obj;
}



inline jule::Str _1aa47e538_multi_assign(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdaba8_MultiAssign> _32735_a) {
	jule::Str _32817_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _32735_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1ac9ee27b:;
		if (it != expr.end()) {
			jule::Any _1ac9ee479_l = *it;
			{
				if (_1ac9ee479_l == jule::Any(jule::Any(nullptr))) {
					_32817_obj+=jule::Str("std::ignore", 11);
				} else {
					_32817_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1ac9ee479_l);
				}
				_32817_obj+=jule::Str(",", 1);
			}
			_iter_next_1ac9ee27b:;
			++it;
			goto _iter_begin_1ac9ee27b;
		}
		_iter_end_1ac9ee27b:;
	}
	(_32817_obj).mut_slice(0LL,_32817_obj.len() - 1LL);
	_32817_obj+=jule::Str(") = ", 4);
	_32817_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32735_a.get()._field_r);
	_32817_obj+=jule::Str(";", 1);
	return _32817_obj;
}



inline jule::Str _1aa47ee1d_match_expr(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdad95_Match>& _34634_m) {
	if ((!(_1a9d725e1_is_const(_34634_m.get()._field_expr.ptr())))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_1a9c4aa5d_is_bool(_34634_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1a9c486b5_read_bool(_34634_m.get()._field_expr.get()._field_constant.ptr())))) {
		return _1aa4d3c52_model((*_self_)._field_oc.get()._field_ec.ptr(), _34634_m.get()._field_expr.get()._field_model);
	}
	return jule::Str();
}



inline jule::Str _1aa480803_case(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdad95_Match> _35627_m,jule::Ptr<_1a9cdb2b3_Case> _35642_c) {
	jule::Str _35717_obj = jule::Str();
	if ((_35642_c.get()._field_exprs.len() != 0LL) && (!(_1a9cb7db6_is_generic_type_match(_35627_m.ptr())))) {
		if ((_35627_m.get()._field_cases.len() > 0LL) && (_35627_m.get()._field_cases[0LL] == _35642_c)) {
			_35717_obj+=jule::Str("if (", 4);
		} else {
			_35717_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _35642_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1aca05826:;
			if (it != expr.end()) {
				jule::I32 _1aca05e64_i = it - expr.begin();
				jule::Ptr<_1a9d71c2d_Data> _1aca06580_expr = *it;
				{
					{
						
						if ((!(_35627_m.get()._field_type_match))) {
							_case_begin_1aca07c46:;
							{
								jule::Str _36825_case_expr = _1aa47ee1d_match_expr(&(*_self_), _35627_m);
								if (_1a9d728ee_good_operand(_35627_m.get()._field_expr.ptr(), _1aca06580_expr)) {
									if ((_36825_case_expr.len() != 0LL)) {
										_35717_obj+=_36825_case_expr;
										_35717_obj+=jule::Str(" == ", 4);
									}
									_35717_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca06580_expr.get()._field_model);
								} else {
									_35717_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca06580_expr.get()._field_model);
									if ((_36825_case_expr.len() != 0LL)) {
										_35717_obj+=jule::Str(" == ", 4);
										_35717_obj+=_36825_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_1aca06b24:;
							{
								_35717_obj+=jule::Str("_match_expr", 11);
								_35717_obj+=jule::Str(".type_is<", 9);
								_35717_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca06580_expr.get()._field_model);
								_35717_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_1aca06a58:;
					}
					if ((_1aca05e64_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_35642_c.get()._field_exprs.len()))) {
						_35717_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_1aca05826:;
				++it;
				_1aca05e64_i++;
				goto _iter_begin_1aca05826;
			}
			_iter_end_1aca05826:;
		}
		_35717_obj+=jule::Str(") ", 2);
	} else if ((_35627_m.get()._field_default == _35642_c) && (_35627_m.get()._field_cases.len() != 0LL)) {
		_35717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
		_35717_obj+=jule::Str("else ", 5);
	}
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_35717_obj+=jule::Str("{\n", 2);
	_35717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_35717_obj+=static__1aa4db8b4_case_begin(static_cast<jule::U32>(static_cast<jule::U32>(_35642_c)));
	_35717_obj+=jule::Str(":;\n", 3);
	if ((_35642_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_35717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
		_35717_obj+=_1aa411201_scope(&(*_self_), _35642_c.get()._field_scope);
		_35717_obj+=jule::Str("\n", 1);
	}
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_35717_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_35717_obj+=jule::Str("}", 1);
	return _35717_obj;
}



inline jule::Str _1aa4811d8_match_st(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdad95_Match> _41831_m) {
	if ((_41831_m.get()._field_cases.len() == 0LL) && (_41831_m.get()._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _42313_generic_type_match = _1a9cb7db6_is_generic_type_match(_41831_m.ptr());
	if (_42313_generic_type_match && ((_41831_m.get()._field_default == nullptr) || (_41831_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42817_obj = jule::Str("{\n", 2);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_42817_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((!(_42313_generic_type_match)) && (!(_1a9d725e1_is_const(_41831_m.get()._field_expr.ptr())))) {
		if (_1d5811230_OPT_COPY && _1aa4b765e_is_copy_optimizable(_41831_m.get()._field_expr)) {
			_42817_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42817_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42817_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _41831_m.get()._field_expr.get()._field_model);
		_42817_obj+=jule::Str(" };\n", 4);
		_42817_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	}
	if ((_41831_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _41831_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1aca15e74:;
			if (it != expr.end()) {
				jule::Ptr<_1a9cdb2b3_Case> _1aca16172_c = *it;
				{
					if ((_1aca16172_c == nullptr)) {
						goto _iter_next_1aca15e74;
					}
					_42817_obj+=jule::Str("\n", 1);
					_42817_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
					_42817_obj+=_1aa480803_case(&(*_self_), _41831_m,_1aca16172_c);
				}
				_iter_next_1aca15e74:;
				++it;
				goto _iter_begin_1aca15e74;
			}
			_iter_end_1aca15e74:;
		}
	}
	if ((_41831_m.get()._field_default != nullptr)) {
		_42817_obj+=jule::Str("\n", 1);
		_42817_obj+=_1aa480803_case(&(*_self_), _41831_m,_41831_m.get()._field_default);
	}
	_42817_obj+=jule::Str("\n", 1);
	_42817_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_42817_obj+=static__1aa4db61c_match_end(static_cast<jule::U32>(static_cast<jule::U32>(_41831_m)));
	_42817_obj+=jule::Str(":;", 2);
	_42817_obj+=jule::Str("\n", 1);
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_42817_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_42817_obj+=jule::Str("}", 1);
	return _42817_obj;
}



inline jule::Str _1aa4832d9_fall_st(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdb4a0_FallSt> _47622_f) {
	jule::Str _47717_obj = jule::Str("goto ", 5);
	_47717_obj+=static__1aa4db8b4_case_begin(_47622_f.get()._field_dest_case);
	_47717_obj+=jule::Str(";", 1);
	return _47717_obj;
}



inline jule::Str _1aa48410e_break_st(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cb7bc9_BreakSt> _48323_b) {
	jule::Str _48417_obj = jule::Str("goto ", 5);
	if ((_48323_b.get()._field_it != 0LLU)) {
		_48417_obj+=static__1aa4dad36_iter_end(_48323_b.get()._field_it);
	} else {
		_48417_obj+=static__1aa4db61c_match_end(_48323_b.get()._field_mtch);
	}
	_48417_obj+=jule::Str(";", 1);
	return _48417_obj;
}



inline jule::Str _1aa4849b1_ret_with_vars(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdb68c_RetSt> _49436_r) {
	jule::Str _49517_obj = jule::Str();
	{
		auto &expr = _49436_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aca1d7a6:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d2553e_Var> _1aca1d9a4_v = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1aca1d9a4_v.get()._field_ident)) {
					_49517_obj+=_1aa4d467b_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca1d9a4_v.get()._field_kind.get()._field_kind);
				} else {
					_49517_obj+=static__1aa4da7e7_var(_1aca1d9a4_v);
				}
				_49517_obj+=jule::Str(",", 1);
			}
			_iter_next_1aca1d7a6:;
			++it;
			goto _iter_begin_1aca1d7a6;
		}
		_iter_end_1aca1d7a6:;
	}
	(_49517_obj).mut_slice(0LL,_49517_obj.len() - 1LL);
	jule::Str _50717_oobj = jule::Str("return ", 7);
	if (_49436_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50717_oobj+=jule::Str("jule::Exceptional<", 18);
		_50717_oobj+=static__1aa55e728_kind(_49436_r.get()._field_func.get()._field_result);
		_50717_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((_49436_r.get()._field_vars.len() > 1LL)) {
		_50717_oobj+=jule::Str("std::make_tuple(", 16);
		_50717_oobj+=_49517_obj;
		_50717_oobj+=jule::Str(")", 1);
	} else {
		_50717_oobj+=_49517_obj;
	}
	if (_49436_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50717_oobj+=jule::Str(")", 1);
	}
	_50717_oobj+=jule::Str(";", 1);
	return _50717_oobj;
}



inline jule::Str _1aa485363_ret_tuple(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdb68c_RetSt> _53132_r) {
	jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _53217_datas = _53132_r.get()._field_expr.operator jule::Ptr<_1a8d8d487_TupleExprModel>().get()._field_datas;
	jule::Str _53317_obj = jule::Str();
	{
		auto &expr = _53132_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aca249cc:;
		if (it != expr.end()) {
			jule::I32 _1aca24acb_i = it - expr.begin();
			jule::Ptr<_1a9d2553e_Var> _1aca24c63_v = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1aca24c63_v.get()._field_ident)) {
					goto _iter_next_1aca249cc;
				}
				jule::Any _53921_model = _53217_datas[_1aca24acb_i].get()._field_model;
				if (_53921_model == jule::Any(jule::Any(_1aca24c63_v))) {
					goto _iter_next_1aca249cc;
				}
				jule::Str _54417_ident = static__1aa4da7e7_var(_1aca24c63_v);
				_53317_obj+=_54417_ident;
				_53317_obj+=jule::Str(" = ", 3);
				_53317_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _53921_model);
				_53317_obj+=jule::Str(";\n", 2);
				_53317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
			}
			_iter_next_1aca249cc:;
			++it;
			_1aca24acb_i++;
			goto _iter_begin_1aca249cc;
		}
		_iter_end_1aca249cc:;
	}
	jule::Str _55217_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _53217_datas;
		auto it = expr.begin();
		_iter_begin_1aca24ec7:;
		if (it != expr.end()) {
			jule::I32 _1aca2504e_i = it - expr.begin();
			jule::Ptr<_1a9d71c2d_Data> _1aca2797a_d = *it;
			{
				jule::Ptr<_1a9d2553e_Var> _55421_v = _53132_r.get()._field_vars[_1aca2504e_i];
				if (_1d7b79ac4_is_ignore_ident(_55421_v.get()._field_ident)) {
					_55217_oobj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca2797a_d.get()._field_model);
				} else {
					_55217_oobj+=static__1aa4da7e7_var(_55421_v);
				}
				_55217_oobj+=jule::Str(",", 1);
			}
			_iter_next_1aca24ec7:;
			++it;
			_1aca2504e_i++;
			goto _iter_begin_1aca24ec7;
		}
		_iter_end_1aca24ec7:;
	}
	(_55217_oobj).mut_slice(0LL,_55217_oobj.len() - 1LL);
	_55217_oobj+=jule::Str(")", 1);
	if (_53132_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_53317_obj+=jule::Str("return jule::Exceptional<", 25);
		_53317_obj+=static__1aa55e728_kind(_53132_r.get()._field_func.get()._field_result);
		_53317_obj+=jule::Str(">(jule::Any(),", 14);
		_53317_obj+=_55217_oobj;
		_53317_obj+=jule::Str(")", 1);
	} else {
		_53317_obj+=jule::Str("return ", 7);
		_53317_obj+=_55217_oobj;
	}
	_53317_obj+=jule::Str(";", 1);
	return _53317_obj;
}



inline jule::Str _1aa485e8a_ret_with_exprs(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdb68c_RetSt> _58137_r) {
	if ((_58137_r.get()._field_vars.len() > 1LL)) {
		return _1aa485363_ret_tuple(&(*_self_), _58137_r);
	}
	if ((_58137_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1a9d2553e_Var> _58821_v = _58137_r.get()._field_vars[0LL];
		if ((!(_1d7b79ac4_is_ignore_ident(_58821_v.get()._field_ident))) && (_58137_r.get()._field_expr != jule::Any(jule::Any(_58821_v)))) {
			jule::Str _59021_ident = static__1aa4da7e7_var(_58821_v);
			jule::Str _59125_obj = _59021_ident;
			_59125_obj+=jule::Str(" = ", 3);
			_59125_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
			_59125_obj+=jule::Str(";\n", 2);
			_59125_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
			if (_58137_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_59125_obj+=jule::Str("return jule::Exceptional<", 25);
				_59125_obj+=static__1aa55e728_kind(_58137_r.get()._field_func.get()._field_result);
				_59125_obj+=jule::Str(">(jule::Any(),", 14);
				_59125_obj+=_59021_ident;
				_59125_obj+=jule::Str(")", 1);
			} else {
				_59125_obj+=jule::Str("return ", 7);
				_59125_obj+=_59021_ident;
			}
			_59125_obj+=jule::Str(";", 1);
			return _59125_obj;
		}
	}
	if (_58137_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		jule::Str _61221_obj = jule::Str("return jule::Exceptional<", 25);
		_61221_obj+=static__1aa55e728_kind(_58137_r.get()._field_func.get()._field_result);
		_61221_obj+=jule::Str(">(jule::Any(),", 14);
		_61221_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
		_61221_obj+=jule::Str(")", 1);
		_61221_obj+=jule::Str(";", 1);
		return _61221_obj;
	}
	jule::Str _62117_obj = jule::Str("return ", 7);
	_62117_obj+=_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), _58137_r.get()._field_expr);
	_62117_obj+=jule::Str(";", 1);
	return _62117_obj;
}



inline jule::Str _1aa37ea10_ret_st(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cdb68c_RetSt> _62729_r) {
	if ((_62729_r.get()._field_expr == jule::Any(jule::Any(nullptr))) && (_62729_r.get()._field_vars.len() == 0LL)) {
		if (_62729_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62729_r.get()._field_expr == jule::Any(jule::Any(nullptr))) {
		return _1aa4849b1_ret_with_vars(&(*_self_), _62729_r);
	}
	return _1aa485e8a_ret_with_exprs(&(*_self_), _62729_r);
}



inline jule::Str _1aa3bde06_ret_with_defaults(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _64240_result) {
	jule::Str _64317_obj = jule::Str("return ", 7);
	if ((_1a9d9e94d_tup(_64240_result.ptr()) != nullptr)) {
		_64317_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _1a9d9e94d_tup(_64240_result.ptr()).get()._field_types;
			auto it = expr.begin();
			_iter_begin_1aca381b6:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d9ae66_TypeKind> _1aca382e8_t = *it;
				{
					_64317_obj+=_1aa4d467b_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1aca382e8_t);
					_64317_obj+=jule::Str(",", 1);
				}
				_iter_next_1aca381b6:;
				++it;
				goto _iter_begin_1aca381b6;
			}
			_iter_end_1aca381b6:;
		}
		(_64317_obj).mut_slice(0LL,_64317_obj.len() - 1LL);
		_64317_obj+=jule::Str(")", 1);
	} else {
		_64317_obj+=_1aa4d467b_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _64240_result);
	}
	_64317_obj+=jule::Str(";", 1);
	return _64317_obj;
}



inline jule::Str _1aa4b0613_var(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9d2553e_Var> _65926_v) {
	if (_65926_v.get()._field_constant) {
		return jule::Str();
	}
	return _1aa55295d_var((*_self_)._field_oc.ptr(), _65926_v);
}



inline jule::Str _1aa3b86b4_st(_1aa3b797c_ScopeCoder* _self_,jule::Any _66725_st) {
	if (_66725_st == jule::Any(jule::Any(nullptr))) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _66725_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cc76bc_Scope>>()) {
			_case_begin_1aca3be45:;
			{
				return _1aa411201_scope(&(*_self_), _66725_st.operator jule::Ptr<_1a9cc76bc_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1aca3c62c:;
			{
				return _1aa4b0613_var(&(*_self_), _66725_st.operator jule::Ptr<_1a9d2553e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1aca3c693:;
			{
				return (_1aa4d4060_expr((*_self_)._field_oc.get()._field_ec.ptr(), jule::Any(_66725_st.operator jule::Ptr<_1a9d71c2d_Data>())) + jule::Str(";", 1));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c78d33_Conditional>>()) {
			_case_begin_1aca3c3da:;
			{
				return _1aa4077be_conditional(&(*_self_), _66725_st.operator jule::Ptr<_1a9c78d33_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
			_case_begin_1aca3c451:;
			{
				return _1aa4693ad_inf_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a9c89959_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89b46_WhileIter>>()) {
			_case_begin_1aca3c4b7:;
			{
				return _1aa469c60_while_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a9c89b46_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89d33_RangeIter>>()) {
			_case_begin_1aca3c52d:;
			{
				return _1aa46e171_range_iter(&(*_self_), _66725_st.operator jule::Ptr<_1a9c89d33_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cb79dc_ContSt>>()) {
			_case_begin_1aca3c72b:;
			{
				return _1aa476c39_cont(&(*_self_), _66725_st.operator jule::Ptr<_1a9cb79dc_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cda405_Label>>()) {
			_case_begin_1aca3c792:;
			{
				return _1aa47a7ed_label(&(*_self_), _66725_st.operator jule::Ptr<_1a9cda405_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cda5e2_GotoSt>>()) {
			_case_begin_1aca3c808:;
			{
				return _1aa47ab50_goto_st(&(*_self_), _66725_st.operator jule::Ptr<_1a9cda5e2_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cda7ce_Postfix>>()) {
			_case_begin_1aca3c86e:;
			{
				return _1aa47b5e0_postfix(&(*_self_), _66725_st.operator jule::Ptr<_1a9cda7ce_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cda9bb_Assign>>()) {
			_case_begin_1aca3c8d5:;
			{
				return _1aa47db53_assign(&(*_self_), _66725_st.operator jule::Ptr<_1a9cda9bb_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdaba8_MultiAssign>>()) {
			_case_begin_1aca3c94b:;
			{
				return _1aa47e538_multi_assign(&(*_self_), _66725_st.operator jule::Ptr<_1a9cdaba8_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdad95_Match>>()) {
			_case_begin_1aca3c9c3:;
			{
				return _1aa4811d8_match_st(&(*_self_), _66725_st.operator jule::Ptr<_1a9cdad95_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdb4a0_FallSt>>()) {
			_case_begin_1aca3ca4a:;
			{
				return _1aa4832d9_fall_st(&(*_self_), _66725_st.operator jule::Ptr<_1a9cdb4a0_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cb7bc9_BreakSt>>()) {
			_case_begin_1aca3cac2:;
			{
				return _1aa48410e_break_st(&(*_self_), _66725_st.operator jule::Ptr<_1a9cb7bc9_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdb68c_RetSt>>()) {
			_case_begin_1aca3cb49:;
			{
				return _1aa37ea10_ret_st(&(*_self_), _66725_st.operator jule::Ptr<_1a9cdb68c_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4ba8a4_PushToSliceExprModel>>()) {
			_case_begin_1aca3cbc1:;
			{
				return _1aa4d159b_push_to_slice((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1aa4ba8a4_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4bae26_MutSlicingExprModel>>()) {
			_case_begin_1aca3cc48:;
			{
				return _1aa4d3636_mut_slicing((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1aa4bae26_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4bb322_StrInsertBeginExprModel>>()) {
			_case_begin_1aca3ccc0:;
			{
				return _1aa4d3944_str_insert_begin((*_self_)._field_oc.get()._field_ec.ptr(), _66725_st.operator jule::Ptr<_1aa4bb322_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1aca3b8e5:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_1aca3c0ee:;
	}
}



inline void _1aa409925_scope_end(_1aa3b797c_ScopeCoder* _self_,jule::Str& _71733_obj,jule::Ptr<_1a9cc76bc_Scope>& _71748_s) {
	{
		auto &expr = _71748_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1aca4a0b8:;
		if (it != expr.end()) {
			jule::Any _1aca4a1b7_st = *it;
			{
				_71733_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
				_71733_obj+=_1aa3b86b4_st(&(*_self_), _1aca4a1b7_st);
				_71733_obj+=jule::Str("\n", 1);
			}
			_iter_next_1aca4a0b8:;
			++it;
			goto _iter_begin_1aca4a0b8;
		}
		_iter_end_1aca4a0b8:;
	}
	_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	_71733_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_71733_obj+=jule::Str("}", 1);
	if (_71748_s.get()._field_deferred) {
		_71733_obj=((jule::Str("__JULE_DEFER(", 13) + _71733_obj) + jule::Str(");", 2));
	}
}



inline jule::Str _1aa411201_scope(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a9cc76bc_Scope> _73428_s) {
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	jule::Str _73617_obj = jule::Str("{\n", 2);
	_1aa409925_scope_end(&(*_self_), _73617_obj,_73428_s);
	return _73617_obj;
}



inline jule::Str _1aa4511ca_func_scope(_1aa3b797c_ScopeCoder* _self_,jule::Ptr<_1a8d98063_FnIns> _74233_f) {
	if ((_74233_f.get()._field_scope == nullptr)) {
		return jule::Str();
	}
	jule::Str _74617_obj = jule::Str("{\n", 2);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	if ((!(_1a8d95318_is_void(_74233_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _74921_types = _1a8d98a7a_types(_74233_f.ptr());
		{
			auto &expr = _74233_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1aca503ba:;
			if (it != expr.end()) {
				jule::I32 _1aca5050d_i = it - expr.begin();
				jule::Ptr<_1d7b77374_Token> _1aca5072d_ident = *it;
				{
					if (_1d7b79ac4_is_ignore_ident(_1aca5072d_ident.get()._field_kind) || _1d7b79d6b_is_anon_ident(_1aca5072d_ident.get()._field_kind)) {
						goto _iter_next_1aca503ba;
					}
					_74617_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
					_74617_obj+=static__1aa55e728_kind(_74921_types[_1aca5050d_i]);
					_74617_obj+=jule::Str(" ", 1);
					_74617_obj+=static__1aa4d91db_to_local(_1aca5072d_ident.get()._field_row,_1aca5072d_ident.get()._field_column,_1aca5072d_ident.get()._field_kind);
					_74617_obj+=jule::Str(" = ", 3);
					_74617_obj+=_1aa4d467b_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _74921_types[_1aca5050d_i]);
					_74617_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1aca503ba:;
				++it;
				_1aca5050d_i++;
				goto _iter_begin_1aca503ba;
			}
			_iter_end_1aca503ba:;
		}
	}
	_1aa409925_scope_end(&(*_self_), _74617_obj,_74233_f.get()._field_scope);
	if (_74233_f.get()._field_decl.get()._field_exceptional && _1a8d95318_is_void(_74233_f.get()._field_decl.ptr())) {
		_74617_obj=(_74617_obj.slice(0LL,(_74617_obj.len() - 2LL)) + jule::Str(" return jule::VoidExceptional(); }", 34));
	}
	return _74617_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3b797c_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa37e504_ExprCoder> static__1aa3b80ed_new(jule::Ptr<_1aa51504c_ObjectCoder>& _8924_oc) {
	return jule::new_ptr<_1aa37e504_ExprCoder>(_1aa37e504_ExprCoder(_8924_oc));
}



inline jule::Str _1aa4ad07d_string(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9c46e77_Const>& _9522_c) {
	jule::Str _9613_content = _1a9c48929_read_str(_9522_c.ptr());
	if ((_9613_content.len() == 0LL)) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _10013_bytes = static_cast<jule::Slice<jule::U8>>(_9613_content);
	jule::Str _10113_len = _1a9ba8966_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10013_bytes.len())),10LL);
	jule::Str _10213_lit = _1aa4d55e4_cstr_lit(_10013_bytes);
	return ((((jule::Str("jule::Str(", 10) + _10213_lit) + jule::Str(", ", 2)) + _10113_len) + jule::Str(")", 1));
}



inline jule::Str _1aa4ad1b0_boolean(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9c46e77_Const>& _10623_c) {
	if (_1a9c486b5_read_bool(_10623_c.ptr())) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _1aa4516c5_nil_lit(_1aa37e504_ExprCoder* _self_) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1aa451807_ftoa_special_cases(_1aa37e504_ExprCoder* _self_,jule::F64& _11734_x) {
	{
		
		if (_1a9b23bab_is_nan(_11734_x)) {
			_case_begin_1aca5a518:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1a9aee390_is_inf(_11734_x,1LL)) {
			_case_begin_1aca5a67d:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1a9aee390_is_inf(_11734_x,-1LL)) {
			_case_begin_1aca5a6e4:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_1aca59e41:;
			{
				return jule::Str();
			}
		}
		_match_end_1aca59d75:;
	}
}



inline jule::Str _1aa451939_float32(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9c46e77_Const>& _13023_c) {
	jule::F64 _13113_x = _1a9c493ca_as_f64(_13023_c.ptr());
	jule::Str _13413_f = _1aa451807_ftoa_special_cases(&(*_self_), _13113_x);
	if ((!(_13413_f.empty()))) {
		return _13413_f;
	}
	{
		
		if ((_13113_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1aca5d6c5:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if ((_13113_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1aca5d0ed:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_1aca5ca26:;
			{
				return (_1aa4d5935_ftoa(_13113_x,32LL) + jule::Str("f", 1));
			}
		}
		_match_end_1aca5cc24:;
	}
}



inline jule::Str _1aa4cb6ea_float64(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9c46e77_Const>& _14923_c) {
	jule::F64 _15013_x = _1a9c493ca_as_f64(_14923_c.ptr());
	jule::Str _15313_f = _1aa451807_ftoa_special_cases(&(*_self_), _15013_x);
	if ((!(_15313_f.empty()))) {
		return _15313_f;
	}
	{
		
		if ((_15013_x == jule::MAX_F64)) {
			_case_begin_1aca60e47:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if ((_15013_x == jule::MIN_F64)) {
			_case_begin_1aca60c8d:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_1aca606b6:;
			{
				return _1aa4d5935_ftoa(_15013_x,64LL);
			}
		}
		_match_end_1aca608b4:;
	}
}



inline jule::Str _1aa4cb82c_constant(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9c46e77_Const> _16927_c,jule::Bool _16938_fx32) {
	{
		
		if (_1a9c4acc2_is_str(_16927_c.ptr())) {
			_case_begin_1aca62a2b:;
			{
				return _1aa4ad07d_string(&(*_self_), _16927_c);
			}
		}
		else if (_1a9c4aa5d_is_bool(_16927_c.ptr())) {
			_case_begin_1aca62a92:;
			{
				return _1aa4ad1b0_boolean(&(*_self_), _16927_c);
			}
		}
		else if (_1a9c4b036_is_f64(_16927_c.ptr())) {
			_case_begin_1aca62b19:;
			{
				{
					
					if (_16938_fx32) {
						_case_begin_1aca648da:;
						{
							return _1aa451939_float32(&(*_self_), _16927_c);
						}
					}
					else {
						_case_begin_1aca64313:;
						{
							return _1aa4cb6ea_float64(&(*_self_), _16927_c);
						}
					}
					_match_end_1aca64247:;
				}
			}
		}
		else if (_1a9c4a585_is_i64(_16927_c.ptr())) {
			_case_begin_1aca62641:;
			{
				return _1aa4d5bcc_itoa(static_cast<jule::I64>(_1a9c481dc_read_i64(_16927_c.ptr())));
			}
		}
		else if (_1a9c4a7e9_is_u64(_16927_c.ptr())) {
			_case_begin_1aca626b8:;
			{
				return _1aa4d600c_utoa(static_cast<jule::U64>(_1a9c48451_read_u64(_16927_c.ptr())));
			}
		}
		else if (_1a9c4b29a_is_nil(_16927_c.ptr())) {
			_case_begin_1aca62740:;
			{
				return _1aa4516c5_nil_lit(&(*_self_));
			}
		}
		else {
			_case_begin_1aca625b9:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_1aca62520:;
	}
}



inline jule::Str _1aa4cb95e_div_by_zero_binary(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1d7b77374_Token>& _19338_op,jule::Ptr<_1a8d8742b_OperandExprModel>& _19355_l,jule::Ptr<_1a8d8742b_OperandExprModel>& _19382_r) {
	jule::Str _19417_op_func = jule::Str();
	{
		auto &_match_expr{ _19338_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1aca678ee:;
			{
				_19417_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1aca67998:;
			{
				_19417_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_1aca67899:;
	}
	jule::Str _20417_obj = jule::Str("jule::", 6);
	_20417_obj+=_19417_op_func;
	_20417_obj+=jule::Str("(", 1);
	if ((!(_1d580edbb_PRODUCTION))) {
		_20417_obj+=jule::Str("\"", 1);
		_20417_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _19338_op);
		_20417_obj+=jule::Str("\",", 2);
	}
	_20417_obj+=_1aa4d4060_expr(&(*_self_), _19355_l.get()._field_model);
	_20417_obj+=jule::Str(",", 1);
	_20417_obj+=_1aa4d4060_expr(&(*_self_), _19382_r.get()._field_model);
	_20417_obj+=jule::Str(")", 1);
	return _20417_obj;
}



inline jule::Str _1aa4cba91_unsafe_binary(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d878e3_BinopExprModel> _21936_m) {
	jule::Str _22017_obj = jule::Str("(", 1);
	_22017_obj+=_1aa4d3c52_model(&(*_self_), _21936_m.get()._field_left.get()._field_model);
	_22017_obj+=jule::Str(" ", 1);
	_22017_obj+=_21936_m.get()._field_op.get()._field_kind;
	_22017_obj+=jule::Str(" ", 1);
	_22017_obj+=_1aa4d3c52_model(&(*_self_), _21936_m.get()._field_right.get()._field_model);
	_22017_obj+=jule::Str(")", 1);
	return _22017_obj;
}



inline jule::Str _1aa4cbbc3_binary(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d878e3_BinopExprModel> _23029_m) {
	{
		auto &_match_expr{ _23029_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1aca6dc24:;
			{
				if ((_1a9d9e211_strct(_23029_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					return _1aa4cb95e_div_by_zero_binary(&(*_self_), _23029_m.get()._field_op,_23029_m.get()._field_left,_23029_m.get()._field_right);
				}
			}
		}
		_match_end_1aca6dbbe:;
	}
	return _1aa4cba91_unsafe_binary(&(*_self_), _23029_m);
}



inline jule::Str _1aa4cbd05_var(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9d2553e_Var> _24122_m) {
	if (_24122_m.get()._field_cpp_linked) {
		jule::Ptr<_1d7a4352b_Directive> _24317_d = _1aa559437_find_directive(_24122_m.get()._field_directives,jule::Str("namespace", 9));
		if ((_24317_d != nullptr)) {
			jule::Str _24525_obj = _1aa4d49cd_concat_all_parts(_24317_d.get()._field_args);
			_24525_obj+=jule::Str("::", 2);
			_24525_obj+=static__1aa4da7e7_var(_24122_m);
			return _24525_obj;
		}
	}
	return static__1aa4da7e7_var(_24122_m);
}



inline jule::Str _1aa4cbe37_structure(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d82b41_Struct> _25424_m) {
	return static__1aa55cd75_structure(_25424_m);
}



inline jule::Str _1aa4cc069_structure_ins(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d857c0_StructIns> _25832_m) {
	return static__1aa55d11c_structure_ins(_25832_m);
}



inline jule::Str _1aa4cc19b_unary(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d87c9a_UnaryExprModel> _26228_m) {
	{
		auto &_match_expr{ _26228_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1aca74c91:;
			{
				jule::Str _26521_obj = jule::Str("(~(", 3);
				_26521_obj+=_1aa4d4060_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
				_26521_obj+=jule::Str("))", 2);
				return _26521_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1aca74d07:;
			{
				if (_1d580edbb_PRODUCTION || (_1a9d9d287_sptr(_26228_m.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					goto _match_end_1aca74c3b;
				}
				jule::Str _27321_obj = _1aa4d4060_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
				_27321_obj+=jule::Str(".get(\"", 6);
				_27321_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _26228_m.get()._field_op);
				_27321_obj+=jule::Str("\")", 2);
				return _27321_obj;
			}
		}
		_match_end_1aca74c3b:;
	}
	jule::Str _28017_obj = jule::Str("(", 1);
	_28017_obj+=_26228_m.get()._field_op.get()._field_kind;
	_28017_obj+=jule::Str("(", 1);
	_28017_obj+=_1aa4d4060_expr(&(*_self_), _26228_m.get()._field_expr.get()._field_model);
	_28017_obj+=jule::Str("))", 2);
	return _28017_obj;
}



inline jule::Str _1aa4cc2cd_cpp_structure_lit(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8854d_StructLitExprModel> _28840_m) {
	jule::Str _28917_obj = jule::Str("(", 1) + static__1aa55d11c_structure_ins(_28840_m.get()._field_strct);
	_28917_obj+=jule::Str("){", 2);
	if ((_28840_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28840_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aca7a813:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1aca7a88a_f = *it;
				{
					if (_28840_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28840_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_1aca7b3e6:;
							if (it != expr.end()) {
								jule::Ptr<_1a8d88196_StructArgExprModel> _1aca7b4e5_arg = *it;
								{
									if (_1aca7b4e5_arg.get()._field_field == _1aca7a88a_f) {
										_28917_obj+=jule::Str(".", 1);
										_28917_obj+=static__1aa4da550_field(_1aca7a88a_f.get()._field_decl);
										_28917_obj+=jule::Str("=", 1);
										_28917_obj+=_1aa4d4060_expr(&(*_self_), _1aca7b4e5_arg.get()._field_expr);
										_28917_obj+=jule::Str(",", 1);
										goto _iter_next_1aca7a813;
									}
								}
								_iter_next_1aca7b3e6:;
								++it;
								goto _iter_begin_1aca7b3e6;
							}
							_iter_end_1aca7b3e6:;
						}
						goto _iter_next_1aca7a813;
					}
					_28917_obj+=static__1aa4da550_field(_1aca7a88a_f.get()._field_decl);
					_28917_obj+=jule::Str(": ", 2);
					{
						auto &expr = _28840_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1aca7d76c:;
						if (it != expr.end()) {
							jule::Ptr<_1a8d88196_StructArgExprModel> _1aca7d7e4_arg = *it;
							{
								if (_1aca7d7e4_arg.get()._field_field == _1aca7a88a_f) {
									_28917_obj+=_1aa4d4060_expr(&(*_self_), _1aca7d7e4_arg.get()._field_expr);
									_28917_obj+=jule::Str(",", 1);
									goto _iter_next_1aca7a813;
								}
							}
							_iter_next_1aca7d76c:;
							++it;
							goto _iter_begin_1aca7d76c;
						}
						_iter_end_1aca7d76c:;
					}
					_28917_obj+=_1aa4d467b_init_expr(&(*_self_), _1aca7a88a_f.get()._field_kind);
					_28917_obj+=jule::Str(",", 1);
				}
				_iter_next_1aca7a813:;
				++it;
				goto _iter_begin_1aca7a813;
			}
			_iter_end_1aca7a813:;
		}
		(_28917_obj).mut_slice(0LL,_28917_obj.len() - 1LL);
	}
	_28917_obj+=jule::Str("}", 1);
	return _28917_obj;
}



inline jule::Str _1aa4cc410_structure_lit(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8854d_StructLitExprModel> _32536_m) {
	if (_32536_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		return _1aa4cc2cd_cpp_structure_lit(&(*_self_), _32536_m);
	}
	jule::Str _33017_obj = static__1aa4da2a8_structure_ins(_32536_m.get()._field_strct);
	_33017_obj+=jule::Str("(", 1);
	if ((_32536_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32536_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1aca82e7a:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1aca83002_f = *it;
				{
					{
						auto &expr = _32536_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1aca83651:;
						if (it != expr.end()) {
							jule::Ptr<_1a8d88196_StructArgExprModel> _1aca83750_arg = *it;
							{
								if (_1aca83750_arg.get()._field_field == _1aca83002_f) {
									_33017_obj+=_1aa4d4060_expr(&(*_self_), _1aca83750_arg.get()._field_expr);
									_33017_obj+=jule::Str(",", 1);
									goto _iter_next_1aca82e7a;
								}
							}
							_iter_next_1aca83651:;
							++it;
							goto _iter_begin_1aca83651;
						}
						_iter_end_1aca83651:;
					}
					_33017_obj+=_1aa4d467b_init_expr(&(*_self_), _1aca83002_f.get()._field_kind);
					_33017_obj+=jule::Str(",", 1);
				}
				_iter_next_1aca82e7a:;
				++it;
				goto _iter_begin_1aca82e7a;
			}
			_iter_end_1aca82e7a:;
		}
		(_33017_obj).mut_slice(0LL,_33017_obj.len() - 1LL);
	}
	_33017_obj+=jule::Str(")", 1);
	return _33017_obj;
}



inline jule::Str _1aa4cc542_alloc_structure(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8887d_AllocStructLitExprModel> _35138_m) {
	jule::Str _35217_obj = jule::Str("jule::new_ptr<", 14);
	_35217_obj+=static__1aa4da2a8_structure_ins(_35138_m.get()._field_lit.get()._field_strct);
	_35217_obj+=jule::Str(">(", 2);
	_35217_obj+=_1aa4cc410_structure_lit(&(*_self_), _35138_m.get()._field_lit);
	_35217_obj+=jule::Str(")", 1);
	return _35217_obj;
}



inline jule::Str _1aa4cc674_casting(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d88dab_CastingExprModel> _36030_m) {
	jule::Str _36117_obj = jule::Str();
	{
		
		if ((_1a9d9d023_prim(_36030_m.get()._field_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim(_36030_m.get()._field_kind.ptr()).ptr())) {
			_case_begin_1aca886cd:;
			{
				_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str("(", 1);
				_36117_obj+=_1aa4d3c52_model(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(")", 1);
			}
		}
		else if ((_1a9d9d4eb_ptr(_36030_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a9d9d4eb_ptr(_36030_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aca89965:;
			{
				_36117_obj+=jule::Str("((", 2);
				_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str(")(", 2);
				_36117_obj+=_1aa4d4060_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str("))", 2);
			}
		}
		else if ((_1a9d9e475_trt(_36030_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a9d9d023_prim(_36030_m.get()._field_expr_kind.ptr()) != nullptr) && _1a9da38db_is_any(_1a9d9d023_prim(_36030_m.get()._field_expr_kind.ptr()).ptr())) {
			_case_begin_1aca899cb:;
			{
				_36117_obj+=_1aa4d3c52_model(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(".", 1);
				if (_1d580edbb_PRODUCTION) {
					_36117_obj+=jule::Str("operator ", 9);
					_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
					_36117_obj+=jule::Str("()", 2);
				} else {
					if ((_1a9d9e475_trt(_36030_m.get()._field_expr_kind.ptr()) != nullptr) && (_1a9d9d287_sptr(_36030_m.get()._field_kind.ptr()) != nullptr)) {
						_36117_obj+=jule::Str("cast_ptr<", 9);
						_36117_obj+=static__1aa55e728_kind(_1a9d9d287_sptr(_36030_m.get()._field_kind.ptr()).get()._field_elem);
					} else {
						_36117_obj+=jule::Str("cast<", 5);
						_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
					}
					_36117_obj+=jule::Str(">(\"", 3);
					_36117_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _36030_m.get()._field_token);
					_36117_obj+=jule::Str("\")", 2);
				}
			}
		}
		else if ((_1a9d9e475_trt(_36030_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1aca883c0:;
			{
				_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str("(", 1);
				_36117_obj+=_1aa4d4060_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(", ", 2);
				_36117_obj+=_1a9ba8a98_itoa(static_cast<jule::I32>(_1aa520ce4_find_type_offset((*_self_)._field_oc.ptr(), _1a9d9e475_trt(_36030_m.get()._field_kind.ptr()),_36030_m.get()._field_expr_kind)));
				_36117_obj+=jule::Str(")", 1);
			}
		}
		else {
			_case_begin_1aca88359:;
			{
				_36117_obj+=jule::Str("static_cast<", 12);
				_36117_obj+=static__1aa55e728_kind(_36030_m.get()._field_kind);
				_36117_obj+=jule::Str(">(", 2);
				_36117_obj+=_1aa4d4060_expr(&(*_self_), _36030_m.get()._field_expr);
				_36117_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1aca882d2:;
	}
	return _36117_obj;
}



inline jule::Str _1aa4cc7a6_args(_1aa37e504_ExprCoder* _self_,jule::Slice<jule::Any> _41227_args) {
	if ((_41227_args.len() == 0LL)) {
		return jule::Str();
	}
	jule::Str _41617_obj = jule::Str();
	{
		auto &expr = _41227_args;
		auto it = expr.begin();
		_iter_begin_1aca8deb9:;
		if (it != expr.end()) {
			jule::Any _1aca96147_a = *it;
			{
				_41617_obj+=_1aa4d4060_expr(&(*_self_), _1aca96147_a);
				_41617_obj+=jule::Str(",", 1);
			}
			_iter_next_1aca8deb9:;
			++it;
			goto _iter_begin_1aca8deb9;
		}
		_iter_end_1aca8deb9:;
	}
	(_41617_obj).mut_slice(0LL,_41617_obj.len() - 1LL);
	return _41617_obj;
}



inline jule::Str _1aa4cc8d8_model_for_call(_1aa37e504_ExprCoder* _self_,jule::Any _42537_expr) {
	{
		auto &_match_expr{ _42537_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1aca97896:;
			{
				return _1aa4ce81e_func_ins(&(*_self_), _42537_expr.operator jule::Ptr<_1a8d98063_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
			_case_begin_1aca9791d:;
			{
				jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _43021_ssie = _42537_expr.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>();
				if ((_43021_ssie.get()._field_method != nullptr)) {
					return _1aa4ce81e_func_ins(&(*_self_), _43021_ssie.get()._field_method);
				}
			}
		}
		_match_end_1aca97764:;
	}
	return _1aa4d3c52_model(&(*_self_), _42537_expr);
}



inline void _1aa4cca1a_push_call_inf(_1aa37e504_ExprCoder* _self_,jule::Str& _43837_obj,jule::Ptr<_1a8d896d6_FnCallExprModel>& _43848_m) {
	if (_1d580edbb_PRODUCTION || ((!(_43848_m.get()._field_func.get()._field_anon)) && (!(_1aa4d6590_is_builtin_call_has_debuginf(_43848_m))))) {
		_43837_obj+=jule::Str("(", 1);
		return;
	}
	if (_43848_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _43848_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
				_case_begin_1aca9bceb:;
				{
					if (_43848_m.get()._field_expr.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_43837_obj+=jule::Str("(", 1);
						return;
					}
					goto _case_begin_1aca9b7ce;
				}
			}
			else {
				_case_begin_1aca9b7ce:;
				{
					_43837_obj+=jule::Str(".call", 5);
				}
			}
			_match_end_1aca9b779:;
		}
	}
	_43837_obj+=jule::Str("(\"", 2);
	_43837_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _43848_m.get()._field_token);
	_43837_obj+=jule::Str("\"", 1);
	if ((_43848_m.get()._field_args.len() != 0LL)) {
		_43837_obj+=jule::Str(",", 1);
	}
}



inline jule::Str _1aa4ccb4c_pure_func_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d896d6_FnCallExprModel>& _46338_m) {
	jule::Str _46417_obj = _1aa4cc8d8_model_for_call(&(*_self_), _46338_m.get()._field_expr);
	if ((!(_1a8d98cde_is_builtin(_46338_m.get()._field_func.ptr())))) {
		if (_46338_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_46338_m.get()._field_func.get()._field_generics.len() > 0LL)) {
			if ((!(_1aa5597bc_has_directive(_46338_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_46417_obj+=jule::Str("<", 1);
				{
					auto &expr = _46338_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1acaa0aad:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d9ae66_TypeKind> _1acaa0cab_g = *it;
						{
							_46417_obj+=static__1aa55e728_kind(_1acaa0cab_g);
							_46417_obj+=jule::Str(",", 1);
						}
						_iter_next_1acaa0aad:;
						++it;
						goto _iter_begin_1acaa0aad;
					}
					_iter_end_1acaa0aad:;
				}
				(_46417_obj).mut_slice(0LL,_46417_obj.len() - 1LL);
				_46417_obj+=jule::Str(">", 1);
			}
		}
	}
	_1aa4cca1a_push_call_inf(&(*_self_), _46417_obj,_46338_m);
	jule::Bool _47917_locinfo = false;
	jule::Str _48017_wrap_receiver = jule::Str();
	if (((!(_1a8d98cde_is_builtin(_46338_m.get()._field_func.ptr()))) && (_46338_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1a8d93ba7_is_self(_46338_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
		{
			auto &_match_expr{ _46338_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
				_case_begin_1acaa396d:;
				{
					jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _48425_ssie = _46338_m.get()._field_expr.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>();
					{
						
						if (_1a8d93e1b_is_ref(_46338_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1acaa4ed0:;
							{
								_46417_obj+=_1aa4d3c52_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
							}
						}
						else if ((_1a9d9d287_sptr(_48425_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1acaa6ed2:;
							{
								_46417_obj+=_1aa4d3c52_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
								_46417_obj+=jule::Str(".ptr(", 5);
								if ((!(_1d580edbb_PRODUCTION))) {
									_46417_obj+=jule::Str("\"", 1);
									_46417_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _46338_m.get()._field_token);
									_46417_obj+=jule::Str("\"", 1);
								}
								_46417_obj+=jule::Str(")", 1);
							}
						}
						else {
							_case_begin_1acaa474e:;
							{
								if ((_1a9d9e211_strct(_48425_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_46417_obj+=jule::Str("&", 1);
									if ((!(_48425_ssie.get()._field_expr.get()._field_lvalue))) {
										_48017_wrap_receiver=_1aa4d3c52_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
									}
								}
								if ((!(_48017_wrap_receiver.empty()))) {
									_46417_obj+=jule::Str("_wrap_copy", 10);
								} else {
									_46417_obj+=_1aa4d3c52_model(&(*_self_), jule::Any(_48425_ssie.get()._field_expr));
								}
							}
						}
						_match_end_1acaa46c7:;
					}
					if ((_46338_m.get()._field_args.len() > 0LL)) {
						_46417_obj+=jule::Str(", ", 2);
					}
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>>()) {
				_case_begin_1acaa39d4:;
				{
					_46417_obj+=_1aa4d3c52_model(&(*_self_), _46338_m.get()._field_expr.operator jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_1d580edbb_PRODUCTION))) {
						_47917_locinfo=true;
					}
					if ((_46338_m.get()._field_args.len() > 0LL)) {
						_46417_obj+=jule::Str(", ", 2);
					}
				}
			}
			_match_end_1acaa38d5:;
		}
	}
	_46417_obj+=_1aa4cc7a6_args(&(*_self_), _46338_m.get()._field_args);
	if (_47917_locinfo) {
		_46417_obj+=jule::Str(", \"", 3);
		_46417_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _46338_m.get()._field_token);
		_46417_obj+=jule::Str("\"", 1);
	}
	_46417_obj+=jule::Str(")", 1);
	if ((!(_48017_wrap_receiver.empty()))) {
		(_46417_obj).buffer.insert(0, (((jule::Str("({ auto _wrap_copy = ", 21) + _48017_wrap_receiver) + jule::Str("; ", 2))));
		_46417_obj+=jule::Str("; })", 4);
	}
	if (_46338_m.get()._field_is_co) {
		(_46417_obj).buffer.insert(0, (jule::Str("__JULE_CO(", 10)));
		_46417_obj+=jule::Str(")", 1);
	}
	return _46417_obj;
}



inline jule::Str _1aa4ccc7e_func_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d896d6_FnCallExprModel> _54532_m) {
	if ((_1a8d98cde_is_builtin(_54532_m.get()._field_func.ptr()) || (!(_54532_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_54532_m.get()._field_except != nullptr) && (_54532_m.get()._field_except.get()._field_stmts.len() == 0LL))) {
		return _1aa4ccb4c_pure_func_call(&(*_self_), _54532_m);
	}
	jule::Str _55317_obj = jule::Str("({\n", 3);
	_1aa51de35_add_indent((*_self_)._field_oc.ptr());
	_55317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_55317_obj+=jule::Str("auto except = ", 14);
	_55317_obj+=_1aa4ccb4c_pure_func_call(&(*_self_), _54532_m);
	_55317_obj+=jule::Str(";\n", 2);
	_55317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	if ((_54532_m.get()._field_except != nullptr)) {
		if ((_54532_m.get()._field_func.get()._field_result == nullptr) || (!(_54532_m.get()._field_assigned))) {
			_55317_obj+=jule::Str("if (!except.ok()) ", 18);
			_55317_obj+=_1aa411201_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54532_m.get()._field_except);
			_55317_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _56621_forwarded = _1aa4d62a4_is_forwarded(_54532_m.get()._field_except);
			_55317_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_56621_forwarded) {
				_55317_obj+=jule::Str("{", 1);
			}
			_55317_obj+=_1aa411201_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54532_m.get()._field_except);
			if (_56621_forwarded) {
				_55317_obj+=jule::Str(" ", 1);
				_55317_obj+=_1aa4d467b_init_expr(&(*_self_), _54532_m.get()._field_func.get()._field_result);
				_55317_obj+=jule::Str(";}", 2);
			}
			_55317_obj+=jule::Str(");\n", 3);
		}
		_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	} else {
		_55317_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55317_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_55317_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _54532_m.get()._field_token);
		_55317_obj+=jule::Str("\"));\n", 5);
		if ((!(_1a8d95318_is_void(_54532_m.get()._field_func.get()._field_decl.ptr())))) {
			_55317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
			_55317_obj+=jule::Str("(except.result);\n", 17);
		}
		_1aa51edae_done_indent((*_self_)._field_oc.ptr());
	}
	_55317_obj+=_1aa5205c9_indent((*_self_)._field_oc.ptr());
	_55317_obj+=jule::Str("})", 2);
	return _55317_obj;
}



inline jule::Str _1aa4ccdb1_slice(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d89a8d_SliceExprModel> _59728_m) {
	if ((_59728_m.get()._field_elems.len() == 0LL)) {
		return (static__1aa55c050_as_slice(_59728_m.get()._field_elem_kind) + jule::Str("()", 2));
	}
	jule::Str _60117_obj = static__1aa55c050_as_slice(_59728_m.get()._field_elem_kind);
	_60117_obj+=jule::Str("({", 2);
	_60117_obj+=_1aa4cc7a6_args(&(*_self_), _59728_m.get()._field_elems);
	_60117_obj+=jule::Str("})", 2);
	return _60117_obj;
}



inline jule::Str _1aa4ccee3_indexing(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8a011_IndexingExprModel> _60831_m) {
	jule::Str _60917_obj = _1aa4d3c52_model(&(*_self_), _60831_m.get()._field_expr.get()._field_model);
	{
		
		if (_1d580edbb_PRODUCTION || (_1a9d9d4eb_ptr(_60831_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a9d9e6d9_map(_60831_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acabd999:;
			{
				_60917_obj+=jule::Str("[", 1);
				_60917_obj+=_1aa4d4060_expr(&(*_self_), _60831_m.get()._field_index.get()._field_model);
				_60917_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1acabca64:;
			{
				_60917_obj+=jule::Str(".at(\"", 5);
				_60917_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _60831_m.get()._field_token);
				_60917_obj+=jule::Str("\",", 2);
				_60917_obj+=_1aa4d4060_expr(&(*_self_), _60831_m.get()._field_index.get()._field_model);
				_60917_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1acabca0e:;
	}
	return _60917_obj;
}



inline jule::Str _1aa4cd125_unsafe_indexing(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1aa4ad8ec_UnsafeIndexingExprModel> _62838_m) {
	jule::Str _62917_obj = _1aa4d3c52_model(&(*_self_), _62838_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_1d580edbb_PRODUCTION || (_1a9d9d4eb_ptr(_62838_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a9d9e6d9_map(_62838_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1acac2bbd:;
			{
				_62917_obj+=jule::Str("[", 1);
				_62917_obj+=_1aa4d4060_expr(&(*_self_), _62838_m.get()._field_node.get()._field_index.get()._field_model);
				_62917_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1acac1c44:;
			{
				_62917_obj+=jule::Str(".__at(", 6);
				_62917_obj+=_1aa4d4060_expr(&(*_self_), _62838_m.get()._field_node.get()._field_index.get()._field_model);
				_62917_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1acac1bde:;
	}
	return _62917_obj;
}



inline jule::Str _1aa4cd257_anon_func(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8a3b8_AnonFnExprModel> _64632_m) {
	jule::Str _64717_obj = static__1aa55e481_func(_64632_m.get()._field_func);
	_64717_obj+=jule::Str("([=]", 4);
	_64717_obj+=_1aa537921_params_ins((*_self_)._field_oc.ptr(), _64632_m.get()._field_func.get()._field_params);
	_64717_obj+=jule::Str(" mutable -> ", 12);
	_64717_obj+=static__1aa55de42_func_ins_result(_64632_m.get()._field_func);
	_64717_obj+=jule::Str(" ", 1);
	_64717_obj+=_1aa4511ca_func_scope((*_self_)._field_oc.get()._field_sc.ptr(), _64632_m.get()._field_func);
	_64717_obj+=jule::Str(")", 1);
	return _64717_obj;
}



inline jule::Str _1aa4cd389_map(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8abe3_MapExprModel> _65826_m) {
	jule::Str _65917_obj = jule::Str("jule::Map<", 10);
	_65917_obj+=static__1aa55e728_kind(_65826_m.get()._field_key_kind);
	_65917_obj+=jule::Str(",", 1);
	_65917_obj+=static__1aa55e728_kind(_65826_m.get()._field_val_kind);
	_65917_obj+=jule::Str(">({", 3);
	if ((_65826_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _65826_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1acaca19d:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d8a770_KeyValPairExprModel> _1acaca29c_pair = *it;
				{
					jule::Str _66625_pair_obj = jule::Str("{", 1);
					_66625_pair_obj+=_1aa4d4060_expr(&(*_self_), _1acaca29c_pair.get()._field_key);
					_66625_pair_obj+=jule::Str(",", 1);
					_66625_pair_obj+=_1aa4d4060_expr(&(*_self_), _1acaca29c_pair.get()._field_val);
					_66625_pair_obj+=jule::Str("}", 1);
					_65917_obj+=_66625_pair_obj;
					_65917_obj+=jule::Str(",", 1);
				}
				_iter_next_1acaca19d:;
				++it;
				goto _iter_begin_1acaca19d;
			}
			_iter_end_1acaca19d:;
		}
		(_65917_obj).mut_slice(0LL,_65917_obj.len() - 1LL);
	}
	_65917_obj+=jule::Str("})", 2);
	return _65917_obj;
}



inline jule::Str _1aa4cd4bb_slicing(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8b232_SlicingExprModel> _68030_m) {
	jule::Str _68117_obj = _1aa4d3c52_model(&(*_self_), _68030_m.get()._field_expr);
	_68117_obj+=jule::Str(".slice(", 7);
	if ((!(_1d580edbb_PRODUCTION))) {
		_68117_obj+=jule::Str("\"", 1);
		_68117_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _68030_m.get()._field_token);
		_68117_obj+=jule::Str("\",", 2);
	}
	_68117_obj+=_1aa4d4060_expr(&(*_self_), _68030_m.get()._field_left);
	if (_68030_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_68117_obj+=jule::Str(",", 1);
		_68117_obj+=_1aa4d4060_expr(&(*_self_), _68030_m.get()._field_right);
	}
	_68117_obj+=jule::Str(")", 1);
	return _68117_obj;
}



inline jule::Str _1aa4cd5ed_trait_sub(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8b771_TraitSubIdentExprModel> _69732_m) {
	jule::Str _69817_obj = static__1aa4d99c2_trait_decl(_69732_m.get()._field_trt);
	_69817_obj+=jule::Str("_mptr_data", 10);
	_69817_obj+=jule::Str("[(", 2);
	_69817_obj+=_1aa4d3c52_model(&(*_self_), _69732_m.get()._field_expr);
	_69817_obj+=jule::Str(").type_offset].", 15);
	_69817_obj+=static__1aa4d9483_func(_69732_m.get()._field_method);
	return _69817_obj;
}



inline jule::Str _1aa4cd7c9_structure_sub(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _70736_m) {
	jule::Str _70817_obj = _1aa4d3c52_model(&(*_self_), jule::Any(_70736_m.get()._field_expr));
	if ((_70736_m.get()._field_field != nullptr)) {
		if ((_1a9d9d4eb_ptr(_70736_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70817_obj+=jule::Str("->", 2);
		} else if ((_1a9d9d287_sptr(_70736_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70817_obj+=jule::Str(".get(", 5);
			if ((!(_1d580edbb_PRODUCTION))) {
				_70817_obj+=jule::Str("\"", 1);
				_70817_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _70736_m.get()._field_token);
				_70817_obj+=jule::Str("\"", 1);
			}
			_70817_obj+=jule::Str(").", 2);
		} else {
			_70817_obj+=jule::Str(".", 1);
		}
		_70817_obj+=static__1aa4da550_field(_70736_m.get()._field_field.get()._field_decl);
	}
	return _70817_obj;
}



inline jule::Str _1aa4cdad7_common_ident(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8cb29_CommonIdentExprModel> _72827_m) {
	return _72827_m.get()._field_ident;
}



inline jule::Str _1aa4cdde5_common_sub(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel> _73233_m) {
	jule::Str _73317_obj = _1aa4d3c52_model(&(*_self_), _73233_m.get()._field_expr);
	{
		
		if ((_1a9d9d4eb_ptr(_73233_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1acad861d:;
			{
				_73317_obj+=jule::Str("->", 2);
			}
		}
		else if ((_1a9d9d287_sptr(_73233_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1acad8365:;
			{
				_73317_obj+=jule::Str(".get(", 5);
				if ((!(_1d580edbb_PRODUCTION))) {
					_73317_obj+=jule::Str("\n", 1);
					_73317_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _73233_m.get()._field_token);
					_73317_obj+=jule::Str("\n", 1);
				}
				_73317_obj+=jule::Str(").", 2);
			}
		}
		else {
			_case_begin_1acad8002:;
			{
				_73317_obj+=jule::Str(".", 1);
			}
		}
		_match_end_1acad7e9c:;
	}
	_73317_obj+=_73233_m.get()._field_ident;
	return _73317_obj;
}



inline jule::Str _1aa4ce203_array(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8c83d_ArrayExprModel> _75228_m) {
	jule::Str _75317_obj = static__1aa55d3b4_array(_75228_m.get()._field_kind);
	if ((_75228_m.get()._field_elems.len() == 0LL)) {
		_75317_obj+=jule::Str("()", 2);
		return _75317_obj;
	}
	if ((_75228_m.get()._field_elems.len() == 2LL) && (_75228_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		_75317_obj+=jule::Str("(", 1);
		_75317_obj+=_1aa4d4060_expr(&(*_self_), _75228_m.get()._field_elems[0LL]);
		_75317_obj+=jule::Str(")", 1);
		return _75317_obj;
	}
	_75317_obj+=jule::Str("({", 2);
	_75317_obj+=_1aa4cc7a6_args(&(*_self_), _75228_m.get()._field_elems);
	_75317_obj+=jule::Str("})", 2);
	return _75317_obj;
}



inline jule::Str _1aa4ce511_func_ins_common(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d98063_FnIns> _77534_m) {
	jule::Str _77617_obj = static__1aa55e481_func(_77534_m);
	_77617_obj+=jule::Str("(", 1);
	_77617_obj+=_1aa4ce81e_func_ins(&(*_self_), _77534_m);
	_77617_obj+=jule::Str(")", 1);
	return _77617_obj;
}



inline jule::Str _1aa4ce81e_func_ins(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d98063_FnIns> _78427_m) {
	if ((_78427_m.get()._field_decl != nullptr) && _78427_m.get()._field_decl.get()._field_cpp_linked) {
		jule::Ptr<_1d7a4352b_Directive> _78617_d = _1aa559437_find_directive(_78427_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_78617_d != nullptr)) {
			jule::Str _78825_obj = _1aa4d49cd_concat_all_parts(_78617_d.get()._field_args);
			_78825_obj+=jule::Str("::", 2);
			_78825_obj+=static__1aa4d972a_func_ins(_78427_m);
			return _78825_obj;
		}
	}
	return static__1aa4d972a_func_ins(_78427_m);
}



inline jule::Str _1aa4ceb2c_tuple(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8d487_TupleExprModel> _79728_m) {
	jule::Str _79817_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _79728_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1acae40a7:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d71c2d_Data> _1acae42a5_d = *it;
			{
				_79817_obj+=_1aa4d4060_expr(&(*_self_), _1acae42a5_d.get()._field_model);
				_79817_obj+=jule::Str(",", 1);
			}
			_iter_next_1acae40a7:;
			++it;
			goto _iter_begin_1acae40a7;
		}
		_iter_end_1acae40a7:;
	}
	(_79817_obj).mut_slice(0LL,_79817_obj.len() - 1LL);
	_79817_obj+=jule::Str(")", 1);
	return _79817_obj;
}



inline jule::Str _1aa4cee3a_new_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel> _80831_m) {
	jule::Str _80917_obj = jule::Str("jule::new_ptr<", 14);
	_80917_obj+=static__1aa55e728_kind(_80831_m.get()._field_kind);
	_80917_obj+=jule::Str(">(", 2);
	if (_80831_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		_80917_obj+=_1aa4d4060_expr(&(*_self_), _80831_m.get()._field_init);
	}
	_80917_obj+=jule::Str(")", 1);
	return _80917_obj;
}



inline jule::Str _1aa4d0248_out_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel> _81931_m) {
	if (_81931_m.get()._field_debug && _1d580edbb_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82317_obj = jule::Str("jule::out(", 10);
	_82317_obj+=_1aa4d4060_expr(&(*_self_), _81931_m.get()._field_expr);
	_82317_obj+=jule::Str(")", 1);
	return _82317_obj;
}



inline jule::Str _1aa4d0556_outln_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel> _82933_m) {
	if (_82933_m.get()._field_debug && _1d580edbb_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83317_obj = jule::Str("jule::outln(", 12);
	_83317_obj+=_1aa4d4060_expr(&(*_self_), _82933_m.get()._field_expr);
	_83317_obj+=jule::Str(")", 1);
	return _83317_obj;
}



inline jule::Str _1aa4d0864_panic_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel> _83933_m) {
	jule::Str _84017_obj = jule::Str("jule::panic(", 12);
	_84017_obj+=_1aa4d4060_expr(&(*_self_), _83933_m.get()._field_expr);
	_84017_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_84017_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _83933_m.get()._field_token);
	_84017_obj+=jule::Str("\"));", 4);
	return _84017_obj;
}



inline jule::Str _1aa4d0b72_assert_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel> _84834_m) {
	if (_1d580edbb_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _85217_obj = jule::Str("if (!(", 6);
	_85217_obj+=_1aa4d4060_expr(&(*_self_), _84834_m.get()._field_expr);
	_85217_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_85217_obj+=_1aa4d55e4_cstr_lit(static_cast<jule::Slice<jule::U8>>(_84834_m.get()._field_log));
	_85217_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_85217_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _84834_m.get()._field_token);
	_85217_obj+=jule::Str("\"));", 4);
	return _85217_obj;
}



inline jule::Str _1aa4d0e80_error_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel> _86233_m) {
	jule::Str _86317_obj = jule::Str("return ", 7);
	if (_1a8d95318_is_void(_86233_m.get()._field_func.get()._field_decl.ptr())) {
		_86317_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_86317_obj+=jule::Str("jule::Exceptional<", 18);
		_86317_obj+=static__1aa55e728_kind(_86233_m.get()._field_func.get()._field_result);
		_86317_obj+=jule::Str(">(", 2);
	}
	_86317_obj+=_1aa4d4060_expr(&(*_self_), _86233_m.get()._field_err);
	_86317_obj+=jule::Str(")", 1);
	return _86317_obj;
}



inline jule::Str _1aa4d128d_make_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel> _87632_m) {
	jule::Str _87717_obj = jule::Str();
	if (_87632_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		_87717_obj+=_1aa4d4060_expr(&(*_self_), _87632_m.get()._field_len);
	} else {
		_87717_obj+=jule::Str("0", 1);
	}
	if (_87632_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		_87717_obj+=jule::Str(",", 1) + _1aa4d4060_expr(&(*_self_), _87632_m.get()._field_cap);
	}
	if ((_1a9d9d760_enm(_1a9d9dc38_slc(_87632_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_87717_obj+=jule::Str(",", 1);
		_87717_obj+=_1aa4d467b_init_expr(&(*_self_), _1a9d9dc38_slc(_87632_m.get()._field_kind.ptr()).get()._field_elem);
		if (_87632_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
			(_87717_obj).buffer.insert(0, ((static__1aa55e728_kind(_87632_m.get()._field_kind) + jule::Str("::alloc(", 8))));
		} else {
			(_87717_obj).buffer.insert(0, ((static__1aa55e728_kind(_87632_m.get()._field_kind) + jule::Str("::alloc_def(", 12))));
		}
	} else {
		(_87717_obj).buffer.insert(0, ((static__1aa55e728_kind(_87632_m.get()._field_kind) + jule::Str("::alloc(", 8))));
	}
	_87717_obj+=jule::Str(")", 1);
	return _87717_obj;
}



inline jule::Str _1aa4d159b_push_to_slice(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1aa4ba8a4_PushToSliceExprModel> _90336_m) {
	jule::Str _90413_dest = _1aa4d3c52_model(&(*_self_), _90336_m.get()._field_dest);
	jule::Str _90517_obj = _90413_dest;
	_90517_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_90517_obj+=_90413_dest;
	_90517_obj+=jule::Str(",", 1);
	_90517_obj+=_1a9ba8a98_itoa(static_cast<jule::I32>(_90336_m.get()._field_elems.get()._field_elems.len()));
	_90517_obj+=jule::Str(");", 2);
	{
		auto &expr = _90336_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1acb08198:;
		if (it != expr.end()) {
			jule::Any _1acb09b28_e = *it;
			{
				_90517_obj+=_90413_dest;
				_90517_obj+=jule::Str(".__push(", 8);
				_90517_obj+=_1aa4d3c52_model(&(*_self_), _1acb09b28_e);
				_90517_obj+=jule::Str(");", 2);
			}
			_iter_next_1acb08198:;
			++it;
			goto _iter_begin_1acb08198;
		}
		_iter_end_1acb08198:;
	}
	return _90517_obj;
}



inline jule::Str _1aa4d18a9_append_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel> _92134_m) {
	jule::Str _92217_obj = jule::Str("jule::append(", 13);
	_92217_obj+=_1aa4d3c52_model(&(*_self_), _92134_m.get()._field_dest);
	_92217_obj+=jule::Str(",", 1);
	_92217_obj+=_1aa4d3c52_model(&(*_self_), _92134_m.get()._field_elements);
	_92217_obj+=jule::Str(")", 1);
	return _92217_obj;
}



inline jule::Str _1aa4d1bb7_clone_call(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel> _93033_m) {
	jule::Str _93117_obj = jule::Str("jule::clone(", 12);
	_93117_obj+=_1aa4d3c52_model(&(*_self_), _93033_m.get()._field_expr);
	_93117_obj+=jule::Str(")", 1);
	return _93117_obj;
}



inline jule::Str _1aa4d1ec5_sizeof(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d90d6e_SizeofExprModel> _93729_m) {
	jule::Str _93817_obj = jule::Str("sizeof(", 7);
	_93817_obj+=_1aa4d4060_expr(&(*_self_), _93729_m.get()._field_expr);
	_93817_obj+=jule::Str(")", 1);
	return _93817_obj;
}



inline jule::Str _1aa4d22d3_alignof(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d914e0_AlignofExprModel> _94430_m) {
	jule::Str _94517_obj = jule::Str("alignof(", 8);
	_94517_obj+=_1aa4d4060_expr(&(*_self_), _94430_m.get()._field_expr);
	_94517_obj+=jule::Str(")", 1);
	return _94517_obj;
}



inline jule::Str _1aa4d25e1_rune_lit(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d916cc_RuneExprModel> _95123_m) {
	if ((_95123_m.get()._field_code <= 127LL)) {
		jule::Str _95321_b = _1aa4d5061_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95123_m.get()._field_code)));
		if ((_95321_b == jule::Str("'", 1))) {
			_95321_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _95321_b) + jule::Str("'", 1));
	}
	return _1aa4d5bcc_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95123_m.get()._field_code)));
}



inline jule::Str _1aa4d28ee_structure_static(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d8c497_StructStaticIdentExprModel> _96235_m) {
	return static__1aa4d972a_func_ins(_96235_m.get()._field_method);
}



inline jule::Str _1aa4d2c0c_integrated_to_str(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d919b8_IntegratedToStrExprModel> _96640_m) {
	jule::Str _96717_obj = jule::Str("jule::to_str(", 13);
	_96717_obj+=_1aa4d3c52_model(&(*_self_), _96640_m.get()._field_expr);
	_96717_obj+=jule::Str(")", 1);
	return _96717_obj;
}



inline jule::Str _1aa4d301a_backend_emit(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d91d5e_BackendEmitExprModel> _97335_m) {
	if ((_97335_m.get()._field_exprs.len() == 0LL)) {
		return _97335_m.get()._field_code;
	}
	{
		auto &expr = _97335_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1acb1675b:;
		if (it != expr.end()) {
			jule::I32 _1acb16b24_i = it - expr.begin();
			jule::Any _1acb16d22_expr = *it;
			{
				_97335_m.get()._field_exprs[_1acb16b24_i]=jule::Any(_1aa4d4060_expr(&(*_self_), _1acb16d22_expr));
			}
			_iter_next_1acb1675b:;
			++it;
			_1acb16b24_i++;
			goto _iter_begin_1acb1675b;
		}
		_iter_end_1acb1675b:;
	}
	return _1a9e19314_format(_97335_m.get()._field_code,_97335_m.get()._field_exprs);
}



inline jule::Str _1aa4d3328_free(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a8d9214a_FreeExprModel> _98327_m) {
	if (_1d5812c48_RC) {
		return (_1aa4d4060_expr(&(*_self_), _98327_m.get()._field_expr) + jule::Str(".dealloc()", 10));
	}
	return (_1aa4d4060_expr(&(*_self_), _98327_m.get()._field_expr) + jule::Str(".__free()", 9));
}



inline jule::Str _1aa4d3636_mut_slicing(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1aa4bae26_MutSlicingExprModel> _99034_m) {
	jule::Str _99117_obj = jule::Str("(", 1);
	_99117_obj+=_1aa4d3c52_model(&(*_self_), _99034_m.get()._field_expr);
	_99117_obj+=jule::Str(").mut_slice(", 12);
	if ((!(_1d580edbb_PRODUCTION))) {
		_99117_obj+=jule::Str("\"", 1);
		_99117_obj+=_1aa5222e0_loc_info((*_self_)._field_oc.ptr(), _99034_m.get()._field_token);
		_99117_obj+=jule::Str("\",", 2);
	}
	_99117_obj+=_1aa4d4060_expr(&(*_self_), _99034_m.get()._field_left);
	if (_99034_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_99117_obj+=jule::Str(",", 1);
		_99117_obj+=_1aa4d4060_expr(&(*_self_), _99034_m.get()._field_right);
	}
	_99117_obj+=jule::Str(");", 2);
	return _99117_obj;
}



inline jule::Str _1aa4d3944_str_insert_begin(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1aa4bb322_StrInsertBeginExprModel> _100839_m) {
	jule::Str _100917_obj = jule::Str("(", 1);
	_100917_obj+=_1aa4d3c52_model(&(*_self_), _100839_m.get()._field_dest);
	_100917_obj+=jule::Str(").buffer.insert(0, (", 20);
	_100917_obj+=_1aa4d3c52_model(&(*_self_), _100839_m.get()._field_expr);
	_100917_obj+=jule::Str("));", 3);
	return _100917_obj;
}



inline jule::Str _1aa4d3c52_model(_1aa37e504_ExprCoder* _self_,jule::Any _101728_m) {
	{
		auto &_match_expr{ _101728_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1acb23d0c:;
			{
				return _1aa4d3c52_model(&(*_self_), _101728_m.operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d9ae66_TypeKind>>()) {
			_case_begin_1acb24747:;
			{
				return static__1aa55e728_kind(_101728_m.operator jule::Ptr<_1a9d9ae66_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1acb2411a:;
			{
				return _1aa4cb82c_constant(&(*_self_), _101728_m.operator jule::Ptr<_1a9c46e77_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1acb24181:;
			{
				return _1aa4cbd05_var(&(*_self_), _101728_m.operator jule::Ptr<_1a9d2553e_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8ea7a57_Trait>>()) {
			_case_begin_1acb241e7:;
			{
				return static__1aa4d99c2_trait_decl(_101728_m.operator jule::Ptr<_1a8ea7a57_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d82b41_Struct>>()) {
			_case_begin_1acb2425d:;
			{
				return _1aa4cbe37_structure(&(*_self_), _101728_m.operator jule::Ptr<_1a8d82b41_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d857c0_StructIns>>()) {
			_case_begin_1acb243e5:;
			{
				return _1aa4cc069_structure_ins(&(*_self_), _101728_m.operator jule::Ptr<_1a8d857c0_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1acb2445b:;
			{
				return _1aa4ce511_func_ins_common(&(*_self_), _101728_m.operator jule::Ptr<_1a8d98063_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4accb4_UnsafeBinopExprModel>>()) {
			_case_begin_1acb244c2:;
			{
				return _1aa4cba91_unsafe_binary(&(*_self_), _101728_m.operator jule::Ptr<_1aa4accb4_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
			_case_begin_1acb24549:;
			{
				return _1aa4cbbc3_binary(&(*_self_), _101728_m.operator jule::Ptr<_1a8d878e3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d87c9a_UnaryExprModel>>()) {
			_case_begin_1acb245c1:;
			{
				return _1aa4cc19b_unary(&(*_self_), _101728_m.operator jule::Ptr<_1a8d87c9a_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8854d_StructLitExprModel>>()) {
			_case_begin_1acb24b21:;
			{
				return _1aa4cc410_structure_lit(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8854d_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8887d_AllocStructLitExprModel>>()) {
			_case_begin_1acb24b87:;
			{
				return _1aa4cc542_alloc_structure(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8887d_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d88dab_CastingExprModel>>()) {
			_case_begin_1acb24bed:;
			{
				return _1aa4cc674_casting(&(*_self_), _101728_m.operator jule::Ptr<_1a8d88dab_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
			_case_begin_1acb24c64:;
			{
				return _1aa4ccc7e_func_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d896d6_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d89a8d_SliceExprModel>>()) {
			_case_begin_1acb24cca:;
			{
				return _1aa4ccdb1_slice(&(*_self_), _101728_m.operator jule::Ptr<_1a8d89a8d_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8c83d_ArrayExprModel>>()) {
			_case_begin_1acb24d52:;
			{
				return _1aa4ce203_array(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8c83d_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4ad8ec_UnsafeIndexingExprModel>>()) {
			_case_begin_1acb24dc9:;
			{
				return _1aa4cd125_unsafe_indexing(&(*_self_), _101728_m.operator jule::Ptr<_1aa4ad8ec_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8a011_IndexingExprModel>>()) {
			_case_begin_1acb24e51:;
			{
				return _1aa4ccee3_indexing(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8a011_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8a3b8_AnonFnExprModel>>()) {
			_case_begin_1acb24ec8:;
			{
				return _1aa4cd257_anon_func(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8a3b8_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8abe3_MapExprModel>>()) {
			_case_begin_1acb25050:;
			{
				return _1aa4cd389_map(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8abe3_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b232_SlicingExprModel>>()) {
			_case_begin_1acb250c7:;
			{
				return _1aa4cd4bb_slicing(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8b232_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>>()) {
			_case_begin_1acb2514e:;
			{
				return _1aa4cd5ed_trait_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
			_case_begin_1acb251c6:;
			{
				return _1aa4cd7c9_structure_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8cb29_CommonIdentExprModel>>()) {
			_case_begin_1acb2524d:;
			{
				return _1aa4cdad7_common_ident(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8cb29_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>>()) {
			_case_begin_1acb252c5:;
			{
				return _1aa4cdde5_common_sub(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d487_TupleExprModel>>()) {
			_case_begin_1acb2534c:;
			{
				return _1aa4ceb2c_tuple(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8d487_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>>()) {
			_case_begin_1acb253c4:;
			{
				return _1aa4d0248_out_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1acb2544b:;
			{
				return _1aa4d0556_outln_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>>()) {
			_case_begin_1acb254c3:;
			{
				return _1aa4cee3a_new_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8e477_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>>()) {
			_case_begin_1acb2554a:;
			{
				return _1aa4d0864_panic_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8e862_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>>()) {
			_case_begin_1acb255c2:;
			{
				return _1aa4d0b72_assert_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
			_case_begin_1acb25649:;
			{
				return _1aa4d0e80_error_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>>()) {
			_case_begin_1acb256c1:;
			{
				return _1aa4d128d_make_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d902be_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>>()) {
			_case_begin_1acb25748:;
			{
				return _1aa4d18a9_append_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d906a9_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>>()) {
			_case_begin_1acb257c0:;
			{
				return _1aa4d1bb7_clone_call(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8e08c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d90d6e_SizeofExprModel>>()) {
			_case_begin_1acb25847:;
			{
				return _1aa4d1ec5_sizeof(&(*_self_), _101728_m.operator jule::Ptr<_1a8d90d6e_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d914e0_AlignofExprModel>>()) {
			_case_begin_1acb258be:;
			{
				return _1aa4d22d3_alignof(&(*_self_), _101728_m.operator jule::Ptr<_1a8d914e0_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d916cc_RuneExprModel>>()) {
			_case_begin_1acb25946:;
			{
				return _1aa4d25e1_rune_lit(&(*_self_), _101728_m.operator jule::Ptr<_1a8d916cc_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8c497_StructStaticIdentExprModel>>()) {
			_case_begin_1acb259bd:;
			{
				return _1aa4d28ee_structure_static(&(*_self_), _101728_m.operator jule::Ptr<_1a8d8c497_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>>()) {
			_case_begin_1acb25a45:;
			{
				return _1aa4d2c0c_integrated_to_str(&(*_self_), _101728_m.operator jule::Ptr<_1a8d919b8_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d91d5e_BackendEmitExprModel>>()) {
			_case_begin_1acb25abc:;
			{
				return _1aa4d301a_backend_emit(&(*_self_), _101728_m.operator jule::Ptr<_1a8d91d5e_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d9214a_FreeExprModel>>()) {
			_case_begin_1acb25b44:;
			{
				return _1aa4d3328_free(&(*_self_), _101728_m.operator jule::Ptr<_1a8d9214a_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4bae26_MutSlicingExprModel>>()) {
			_case_begin_1acb25bbb:;
			{
				return _1aa4d3636_mut_slicing(&(*_self_), _101728_m.operator jule::Ptr<_1aa4bae26_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa4bb322_StrInsertBeginExprModel>>()) {
			_case_begin_1acb25c43:;
			{
				return _1aa4d3944_str_insert_begin(&(*_self_), _101728_m.operator jule::Ptr<_1aa4bb322_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1acb23eb6:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_1acb23d95:;
	}
}



inline jule::Str _1aa4d4060_expr(_1aa37e504_ExprCoder* _self_,jule::Any _111427_e) {
	jule::Str _111517_obj = _1aa4d3c52_model(&(*_self_), _111427_e);
	if ((_111517_obj.len() == 0LL) || (_111517_obj[0LL] != '(')) {
		return _111517_obj;
	}
	{
		auto &_match_expr{ _111427_e };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
			_case_begin_1acb3e443:;
			{
				(_111517_obj).mut_slice(1LL,_111517_obj.len() - 1LL);
			}
		}
		_match_end_1acb3e29a:;
	}
	return _111517_obj;
}



inline jule::Str _1aa4d436d_val(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9d72ca6_Value> _112626_v) {
	if (_1a9d725e1_is_const(_112626_v.get()._field_data.ptr())) {
		return _1aa4cb82c_constant(&(*_self_), _112626_v.get()._field_data.get()._field_constant,(_112626_v.get()._field_data.get()._field_kind != nullptr) && _1a9da26ed_is_f32(_1a9d9d023_prim(_112626_v.get()._field_data.get()._field_kind.ptr()).ptr()));
	}
	return _1aa4d4060_expr(&(*_self_), _112626_v.get()._field_data.get()._field_model);
}



inline jule::Str _1aa4d467b_init_expr(_1aa37e504_ExprCoder* _self_,jule::Ptr<_1a9d9ae66_TypeKind> _113332_t) {
	if ((_1a9d9d4eb_ptr(_113332_t.ptr()) != nullptr)) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1a943b309_Enum> _113717_enm = _1a9d9d760_enm(_113332_t.ptr());
	if ((_113717_enm != nullptr)) {
		return _1aa4d436d_val(&(*_self_), _113717_enm.get()._field_items[0LL].get()._field_value);
	}
	return (static__1aa55e728_kind(_113332_t) + jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa37e504_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aa4d6eec_clone_func_decl(jule::Ptr<_1a8d82b41_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1aa55cd75_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1aa4d7294_clone_func_def(jule::Ptr<_1a8d82b41_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1aa55cd75_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4d6bbc_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aa4d8718_to_ident(jule::Str _3024_ident) {
	return jule::Str("_", 1) + _3024_ident;
}



inline jule::Str static__1aa4d89b0_addr(jule::U32 _3520_addr) {
	return jule::Str("_", 1) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3520_addr)),15LL);
}



inline jule::Str static__1aa4d8d01_to_out(jule::Str _4422_ident,jule::U32 _4434_addr) {
	if ((_4434_addr != 0LLU)) {
		jule::Str _4621_obj = static__1aa4d89b0_addr(_4434_addr);
		_4621_obj+=jule::Str("_", 1);
		_4621_obj+=_4422_ident;
		return _4621_obj;
	}
	return static__1aa4d8718_to_ident(_4422_ident);
}



inline jule::Str static__1aa4d91db_to_local(jule::I32 _6024_row,jule::I32 _6034_col,jule::Str _6044_ident) {
	jule::Str _6117_obj = _1a9ba8a98_itoa(_6024_row);
	_6117_obj+=_1a9ba8a98_itoa(_6034_col);
	_6117_obj+=jule::Str("_", 1);
	_6117_obj+=_6044_ident;
	return static__1aa4d8718_to_ident(_6117_obj);
}



inline jule::Str static__1aa4d9483_func(jule::Ptr<_1a8d94db7_Fn>& _6921_f) {
	{
		
		if (_6921_f.get()._field_cpp_linked) {
			_case_begin_1acb4b42d:;
			{
				return _6921_f.get()._field_ident;
			}
		}
		else if ((_6921_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1acb4ae00:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1a8d9557c_is_method(_6921_f.ptr())) {
			_case_begin_1acb4ae66:;
			{
				jule::Str _7621_obj = static__1aa4d8d01_to_out(_6921_f.get()._field_ident,static_cast<jule::U32>(static_cast<jule::U32>(_6921_f)));
				if (_6921_f.get()._field_statically) {
					(_7621_obj).buffer.insert(0, (jule::Str("static_", 7)));
					return _7621_obj;
				}
				return _7621_obj;
			}
		}
		else {
			_case_begin_1acb4a185:;
			{
				return static__1aa4d8d01_to_out(_6921_f.get()._field_ident,static_cast<jule::U32>(static_cast<jule::U32>(_6921_f)));
			}
		}
		_match_end_1acb4a10d:;
	}
}



inline jule::Str static__1aa4d972a_func_ins(jule::Ptr<_1a8d98063_FnIns>& _8829_f) {
	if (_1a8d98cde_is_builtin(_8829_f.ptr())) {
		return jule::Str("jule::", 6) + _8829_f.get()._field_decl.get()._field_ident;
	}
	if (_8829_f.get()._field_decl.get()._field_cpp_linked || (_8829_f.get()._field_generics.len() == 0LL)) {
		return static__1aa4d9483_func(_8829_f.get()._field_decl);
	}
	{
		auto &expr = _8829_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acb4e574:;
		if (it != expr.end()) {
			jule::I32 _1acb4e61d_i = it - expr.begin();
			jule::Ptr<_1a8d98063_FnIns> _1acb4e81b_ins = *it;
			{
				if (_1a8d99361_same(_1acb4e81b_ins.ptr(), _8829_f)) {
					jule::Str _9725_obj = static__1aa4d9483_func(_8829_f.get()._field_decl);
					_9725_obj+=jule::Str("_", 1);
					_9725_obj+=_1a9ba8a98_itoa(_1acb4e61d_i);
					return _9725_obj;
				}
			}
			_iter_next_1acb4e574:;
			++it;
			_1acb4e61d_i++;
			goto _iter_begin_1acb4e574;
		}
		_iter_end_1acb4e574:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1aa4d99c2_trait_decl(jule::Ptr<_1a8ea7a57_Trait> _10726_t) {
	if (_1a8e31c67_is_builtin(_10726_t.ptr())) {
		return jule::Str("jule::", 6) + _10726_t.get()._field_ident;
	}
	return static__1aa4d8d01_to_out(_10726_t.get()._field_ident,static_cast<jule::U32>(static_cast<jule::U32>(_10726_t)));
}



inline jule::Str static__1aa4d9c69_param(jule::Ptr<_1a8d9357a_Param>& _11522_p) {
	if (_1d7b79d6b_is_anon_ident(_11522_p.get()._field_ident) || _1d7b79ac4_is_ignore_ident(_11522_p.get()._field_ident)) {
		return jule::Str();
	}
	if (_1a8d93ba7_is_self(_11522_p.ptr())) {
		return jule::Str("_self_", 6);
	}
	if ((_11522_p.get()._field_token == nullptr)) {
		return static__1aa4d91db_to_local(0LL,0LL,_11522_p.get()._field_ident);
	}
	return static__1aa4d91db_to_local(_11522_p.get()._field_token.get()._field_row,_11522_p.get()._field_token.get()._field_column,_11522_p.get()._field_ident);
}



inline jule::Str static__1aa4da011_structure(jule::Ptr<_1a8d82b41_Struct>& _12926_s) {
	if (_12926_s.get()._field_cpp_linked) {
		if (_1aa5597bc_has_directive(_12926_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12926_s.get()._field_ident;
		}
		return jule::Str("struct ", 7) + _12926_s.get()._field_ident;
	}
	return static__1aa4d8d01_to_out(_12926_s.get()._field_ident,static_cast<jule::U32>(static_cast<jule::U32>(_12926_s)));
}



inline jule::Str static__1aa4da2a8_structure_ins(jule::Ptr<_1a8d857c0_StructIns>& _14034_s) {
	if (_14034_s.get()._field_decl.get()._field_cpp_linked || (_14034_s.get()._field_generics.len() == 0LL)) {
		return static__1aa4da011_structure(_14034_s.get()._field_decl);
	}
	{
		auto &expr = _14034_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acb57170:;
		if (it != expr.end()) {
			jule::I32 _1acb57219_i = it - expr.begin();
			jule::Ptr<_1a8d857c0_StructIns> _1acb57417_ins = *it;
			{
				if (_1a8d863a3_same(_1acb57417_ins.ptr(), _14034_s)) {
					jule::Str _14625_obj = static__1aa4da011_structure(_14034_s.get()._field_decl);
					_14625_obj+=jule::Str("_", 1);
					_14625_obj+=_1a9ba8a98_itoa(_1acb57219_i);
					return _14625_obj;
				}
			}
			_iter_next_1acb57170:;
			++it;
			_1acb57219_i++;
			goto _iter_begin_1acb57170;
		}
		_iter_end_1acb57170:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1aa4da550_field(jule::Ptr<_1bd010a02_Field>& _15622_f) {
	if (_15622_f.get()._field_owner.get()._field_cpp_linked) {
		return _15622_f.get()._field_ident;
	}
	return jule::Str("_field_", 7) + _15622_f.get()._field_ident;
}



inline jule::Str static__1aa4da7e7_var(jule::Ptr<_1a9d2553e_Var> _16423_v) {
	{
		
		if (_16423_v.get()._field_cpp_linked) {
			_case_begin_1acb5a43c:;
			{
				return _16423_v.get()._field_ident;
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1acb596c2:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1acb59738:;
			{
				if ((_1a9d9d287_sptr(_16423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				}
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16423_v.get()._field_scope != nullptr)) {
			_case_begin_1acb5979e:;
			{
				return static__1aa4d91db_to_local(_16423_v.get()._field_token.get()._field_row,_16423_v.get()._field_token.get()._field_column,_16423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1acb5965b:;
			{
				return static__1aa4d8d01_to_out(_16423_v.get()._field_ident,static_cast<jule::U32>(static_cast<jule::U32>(_16423_v)));
			}
		}
		_match_end_1acb59606:;
	}
}



inline jule::Str static__1aa4daa8e_iter_begin(jule::U32 _18326_it) {
	return jule::Str("_iter_begin_", 12) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18326_it)),15LL);
}



inline jule::Str static__1aa4dad36_iter_end(jule::U32 _18824_it) {
	return jule::Str("_iter_end_", 10) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18824_it)),15LL);
}



inline jule::Str static__1aa4db0cd_iter_next(jule::U32 _19325_it) {
	return jule::Str("_iter_next_", 11) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19325_it)),15LL);
}



inline jule::Str static__1aa4db375_label(jule::Str _19821_ident) {
	return jule::Str("_julec_label_", 13) + _19821_ident;
}



inline jule::Str static__1aa4db61c_match_end(jule::U32 _20325_m) {
	return jule::Str("_match_end_", 11) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20325_m)),15LL);
}



inline jule::Str static__1aa4db8b4_case_begin(jule::U32 _20826_c) {
	return jule::Str("_case_begin_", 12) + _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20826_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4d82a6_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa52150e_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa514d60_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aa559de9_to_str(_1aa5599ed_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1aa55a207_equals(jule::Ptr<_1aa5599ed_CustomType> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _5326_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5599ed_CustomType _Src) {
	_Stream << _1aa559de9_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1aa55a944_to_type(jule::Str _7327_id) {
	_7327_id=_1a9cceb47_real_kind_of(_7327_id);
	if ((97LL <= _7327_id[0LL]) && (_7327_id[0LL] <= 122LLU)) {
		_7327_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _7327_id;
}



inline jule::Str static__1aa55abdb_prim(jule::Ptr<_1a9da06b8_Prim> _8220_p) {
	return static__1aa55a944_to_type(_1a9da0a2b_to_str(_8220_p.ptr()));
}



inline jule::Str static__1aa55ae83_tuple(jule::Ptr<_1a9da5129_Tuple> _8725_t) {
	jule::Str _8817_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _8725_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1acc3ac7b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d9ae66_TypeKind> _1acc3ad7a_tk = *it;
			{
				_8817_obj+=static__1aa55e728_kind(_1acc3ad7a_tk);
				_8817_obj+=jule::Str(",", 1);
			}
			_iter_next_1acc3ac7b:;
			++it;
			goto _iter_begin_1acc3ac7b;
		}
		_iter_end_1acc3ac7b:;
	}
	(_8817_obj).mut_slice(0LL,_8817_obj.len() - 1LL);
	_8817_obj+=jule::Str(">", 1);
	return _8817_obj;
}



inline jule::Str static__1aa55b22a_as_sptr(jule::Str _9923_elem) {
	jule::Str _10017_obj = jule::Str("jule::Ptr<", 10);
	_10017_obj+=_9923_elem;
	_10017_obj+=jule::Str(">", 1);
	return _10017_obj;
}



inline jule::Str static__1aa55b4c2_as_ptr(jule::Str _10722_elem) {
	return (_10722_elem + jule::Str("*", 1));
}



inline jule::Str static__1aa55b769_sptr(jule::Ptr<_1a9da3bc7_Sptr> _11224_sptr) {
	return static__1aa55b22a_as_sptr(static__1aa55e728_kind(_11224_sptr.get()._field_elem));
}



inline jule::Str static__1aa55ba11_ptr(jule::Ptr<_1a9da723b_Ptr> _11723_p) {
	
	if (_1a9da7c0e_is_unsafe(_11723_p.ptr())) {
		return jule::Str("void*", 5);
	}
	jule::Str _12217_elem = static__1aa55e728_kind(_11723_p.get()._field_elem);
	_12217_elem+=jule::Str("*", 1);
	return _12217_elem;
}



inline jule::Str static__1aa55bca8_enum_decl(jule::Ptr<_1a943b309_Enum> _12829_e) {
	return static__1aa55e728_kind(_12829_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1aa55c050_as_slice(jule::Ptr<_1a9d9ae66_TypeKind> _13228_elem) {
	jule::Str _13317_obj = jule::Str("jule::Slice<", 12);
	_13317_obj+=static__1aa55e728_kind(_13228_elem);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__1aa55c2e7_slice(jule::Ptr<_1a9da4634_Slc> _14025_s) {
	return static__1aa55c050_as_slice(_14025_s.get()._field_elem);
}



inline jule::Str static__1aa55c58e_map(jule::Ptr<_1a9da5bda_Map> _14523_m) {
	jule::Str _14617_obj = jule::Str("jule::Map<", 10);
	_14617_obj+=static__1aa55e728_kind(_14523_m.get()._field_key);
	_14617_obj+=jule::Str(",", 1);
	_14617_obj+=static__1aa55e728_kind(_14523_m.get()._field_val);
	_14617_obj+=jule::Str(">", 1);
	return _14617_obj;
}



inline jule::Str static__1aa55c836_trait_ident(jule::Str _15427_ident) {
	jule::Str _15517_obj = jule::Str("jule::Trait<", 12);
	_15517_obj+=_15427_ident;
	_15517_obj+=jule::Str(">", 1);
	return _15517_obj;
}



inline jule::Str static__1aa55cacd_trait_decl(jule::Ptr<_1a8ea7a57_Trait> _16226_t) {
	return static__1aa55c836_trait_ident(static__1aa4d99c2_trait_decl(_16226_t));
}



inline jule::Str static__1aa55cd75_structure(jule::Ptr<_1a8d82b41_Struct> _16725_s) {
	jule::Str _16817_rep = jule::Str();
	if (_16725_s.get()._field_cpp_linked && (!(_1aa5597bc_has_directive(_16725_s.get()._field_directives,jule::Str("typedef", 7))))) {
		_16817_rep+=jule::Str("struct ", 7);
	}
	_16817_rep+=static__1aa4da011_structure(_16725_s);
	return _16817_rep;
}



inline jule::Str static__1aa55d11c_structure_ins(jule::Ptr<_1a8d857c0_StructIns> _17733_s) {
	if (_17733_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17921_ident = static__1aa4da2a8_structure_ins(_17733_s);
		if ((_17733_s.get()._field_generics.len() > 0LL)) {
			_17921_ident+=jule::Str("<", 1);
			{
				auto &expr = _17733_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1acc4743b:;
				if (it != expr.end()) {
					jule::Ptr<_1a9d9ae66_TypeKind> _1acc477d2_g = *it;
					{
						_17921_ident+=static__1aa55e728_kind(_1acc477d2_g);
						_17921_ident+=jule::Str(",", 1);
					}
					_iter_next_1acc4743b:;
					++it;
					goto _iter_begin_1acc4743b;
				}
				_iter_end_1acc4743b:;
			}
			(_17921_ident).mut_slice(0LL,_17921_ident.len() - 1LL);
			_17921_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1d7a4352b_Directive> _18917_d = _1aa559437_find_directive(_17733_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_18917_d != nullptr)) {
			(_17921_ident).buffer.insert(0, ((_1aa4d49cd_concat_all_parts(_18917_d.get()._field_args) + jule::Str("::", 2))));
		}
		return _17921_ident;
	}
	return static__1aa4da2a8_structure_ins(_17733_s);
}



inline jule::Str static__1aa55d3b4_array(jule::Ptr<_1a9da67ce_Arr> _19925_a) {
	jule::Str _20017_obj = jule::Str("jule::Array<", 12);
	_20017_obj+=static__1aa55e728_kind(_19925_a.get()._field_elem);
	_20017_obj+=jule::Str(",", 1);
	_20017_obj+=_1a9ba8a98_itoa(_19925_a.get()._field_n);
	_20017_obj+=jule::Str(">", 1);
	return _20017_obj;
}



inline jule::Str static__1aa55d65b_param(jule::Ptr<_1a8d9357a_Param>& _20926_p) {
	jule::Str _21017_obj = jule::Str();
	if (_20926_p.get()._field_variadic) {
		_21017_obj+=jule::Str("jule::Slice<", 12);
		_21017_obj+=static__1aa55e728_kind(_20926_p.get()._field_kind.get()._field_kind);
		_21017_obj+=jule::Str(">", 1);
	} else {
		_21017_obj+=static__1aa55e728_kind(_20926_p.get()._field_kind.get()._field_kind);
	}
	if (_20926_p.get()._field_reference) {
		_21017_obj+=jule::Str("&", 1);
	}
	return _21017_obj;
}



inline jule::Str static__1aa55d903_param_ins(jule::Ptr<_1a8d971c7_ParamIns>& _22530_p) {
	jule::Str _22617_obj = jule::Str();
	if (_22530_p.get()._field_decl.get()._field_variadic) {
		_22617_obj+=jule::Str("jule::Slice<", 12);
		_22617_obj+=static__1aa55e728_kind(_22530_p.get()._field_kind);
		_22617_obj+=jule::Str(">", 1);
	} else {
		_22617_obj+=static__1aa55e728_kind(_22530_p.get()._field_kind);
	}
	if (_22530_p.get()._field_decl.get()._field_reference) {
		_22617_obj+=jule::Str("&", 1);
	}
	return _22617_obj;
}



inline jule::Str static__1aa55db9a_func_result(jule::Ptr<_1a8d94db7_Fn>& _24132_f) {
	if (_1a8d95318_is_void(_24132_f.ptr())) {
		if (_24132_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_24132_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1aa55e728_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	}
	return static__1aa55e728_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1aa55de42_func_ins_result(jule::Ptr<_1a8d98063_FnIns>& _25536_f) {
	if (_1a8d95318_is_void(_25536_f.get()._field_decl.ptr())) {
		if (_25536_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_25536_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1aa55e728_kind(_25536_f.get()._field_result)) + jule::Str(">", 1));
	}
	return static__1aa55e728_kind(_25536_f.get()._field_result);
}



inline jule::Str static__1aa55e1d9_anon_func(jule::Ptr<_1a8d98063_FnIns> _26829_f) {
	jule::Str _26917_decl = static__1aa55de42_func_ins_result(_26829_f);
	_26917_decl+=jule::Str("(", 1);
	if ((_26829_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26829_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1acc54800:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d971c7_ParamIns> _1acc548ee_param = *it;
				{
					if (_1a8d93ba7_is_self(_1acc548ee_param.get()._field_decl.ptr())) {
						goto _iter_next_1acc54800;
					}
					_26917_decl+=static__1aa55d903_param_ins(_1acc548ee_param);
					_26917_decl+=jule::Str(",", 1);
				}
				_iter_next_1acc54800:;
				++it;
				goto _iter_begin_1acc54800;
			}
			_iter_end_1acc54800:;
		}
		(_26917_decl).mut_slice(0LL,_26917_decl.len() - 1LL);
	} else {
		_26917_decl+=jule::Str("void", 4);
	}
	_26917_decl+=jule::Str(")", 1);
	return _26917_decl;
}



inline jule::Str static__1aa55e481_func(jule::Ptr<_1a8d98063_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);
	_28917_obj+=static__1aa55e1d9_anon_func(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;
}



inline jule::Str static__1aa55e728_kind(jule::Ptr<_1a9d9ae66_TypeKind> _29624_k) {
	{
		
		if (_1a9d9bac1_cpp_linked(_29624_k.ptr())) {
			_case_begin_1acc571b5:;
			{
				return _29624_k.get()._field_cpp_ident;
			}
		}
		else if ((_1a9d9d023_prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc5733b:;
			{
				return static__1aa55abdb_prim(_1a9d9d023_prim(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9e94d_tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc573a2:;
			{
				return static__1aa55ae83_tuple(_1a9d9e94d_tup(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9d287_sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc57429:;
			{
				return static__1aa55b769_sptr(_1a9d9d287_sptr(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9d4eb_ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc574a1:;
			{
				return static__1aa55ba11_ptr(_1a9d9d4eb_ptr(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9d760_enm(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc57528:;
			{
				return static__1aa55bca8_enum_decl(_1a9d9d760_enm(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9dc38_slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc575a0:;
			{
				return static__1aa55c2e7_slice(_1a9d9dc38_slc(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9e6d9_map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc57627:;
			{
				return static__1aa55c58e_map(_1a9d9e6d9_map(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9e475_trt(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc5769e:;
			{
				return static__1aa55cacd_trait_decl(_1a9d9e475_trt(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9e211_strct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc57726:;
			{
				return static__1aa55d11c_structure_ins(_1a9d9e211_strct(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9d9c4_arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc5779d:;
			{
				return static__1aa55d3b4_array(_1a9d9d9c4_arr(_29624_k.ptr()));
			}
		}
		else if ((_1a9d9de9c_fnc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1acc57825:;
			{
				return static__1aa55e481_func(_1a9d9de9c_fnc(_29624_k.ptr()));
			}
		}
		_match_end_1acc570d8:;
	}
	{
		auto &_match_expr{ _29624_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa5599ed_CustomType>>()) {
			_case_begin_1acc60421:;
			{
				return _29624_k.get()._field_kind.operator jule::Ptr<_1aa5599ed_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1acc5e6d9:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1acc5e684:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1aa55a427_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1acc7cbbe_name(_1aa594b8c_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acc7cd01_what(_1aa594b8c_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1acc7ce33_reset(_1aa594b8c_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acc7d065_short(_1aa594b8c_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594b8c_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acc809b3_name(_1aa594b8c_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acc80bc2_what(_1aa594b8c_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1acc7d1ca_reset(_1aa594b8c_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acc8071b_short(_1aa594b8c_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594b8c_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acc83b92_name(_1aa594b8c_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acc83da1_what(_1aa594b8c_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1acc838ea_reset(_1aa594b8c_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acc84621_short(_1aa594b8c_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594b8c_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acc86db5_name(_1aa594b8c_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acc870c4_what(_1aa594b8c_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1acc86b1d_reset(_1aa594b8c_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acc87844_short(_1aa594b8c_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594b8c_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1acc8a094_name(_1aa594b8c_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1acc8a2a3_what(_1aa594b8c_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1acc89cec_reset(_1aa594b8c_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1acc8aa23_short(_1aa594b8c_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594b8c_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa595e02_FlagSet> static__1aa5961dd_new(void) {
	return jule::new_ptr<_1aa595e02_FlagSet>(_1aa595e02_FlagSet(jule::Slice<jule::Trait<_1aa563e47_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1aa563e47_CommonFlag> _1aa5966a5_find_flag(_1aa595e02_FlagSet* _self_,jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acc93b3b:;
		if (it != expr.end()) {
			jule::Trait<_1aa563e47_CommonFlag> _1acc93ce5_flag = *it;
			{
				if (_1aa563e47_CommonFlag_mptr_data[(_1acc93ce5_flag).type_offset]._1aa59442d_name(_1acc93ce5_flag) == _7132_name) {
					return _1acc93ce5_flag;
				}
			}
			_iter_next_1acc93b3b:;
			++it;
			goto _iter_begin_1acc93b3b;
		}
		_iter_end_1acc93b3b:;
	}
	return nullptr;
}



inline jule::Trait<_1aa563e47_CommonFlag> _1aa5969b3_find_flag_short(_1aa595e02_FlagSet* _self_,jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acc94de5:;
		if (it != expr.end()) {
			jule::Trait<_1aa563e47_CommonFlag> _1acc9509e_flag = *it;
			{
				if (_1aa563e47_CommonFlag_mptr_data[(_1acc9509e_flag).type_offset]._1aa594560_short(_1acc9509e_flag) == _8138_name) {
					return _1acc9509e_flag;
				}
			}
			_iter_next_1acc94de5:;
			++it;
			goto _iter_begin_1acc94de5;
		}
		_iter_end_1acc94de5:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1aa563e47_CommonFlag>> _1aa596c27_flags(_1aa595e02_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aa597035_parse(_1aa595e02_FlagSet* _self_,jule::Slice<jule::Str> _11528_args) {
	_1aa59860d_ArgParser _11617_ap = _1aa59860d_ArgParser((*_self_),_11528_args,jule::Slice<jule::Str>(),jule::I32());
	({
		auto except = _1aa5999e9_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1aa597211_reset(_1aa595e02_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1acc985d0:;
		if (it != expr.end()) {
			jule::Trait<_1aa563e47_CommonFlag> _1acc98789_f = *it;
			{
				_1aa563e47_CommonFlag_mptr_data[(_1acc98789_f).type_offset]._1aa5947c4_reset(_1acc98789_f);
			}
			_iter_next_1acc985d0:;
			++it;
			goto _iter_begin_1acc985d0;
		}
		_iter_end_1acc985d0:;
	}
}



inline jule::Ptr<_1aa594b8c_Flag_4> _1aa597662_add_flag_common_0(_1aa595e02_FlagSet* _self_,jule::Str _13141_name,jule::I32 _13152_short,jule::Str _13165_what) {
	{
		
{
			_case_begin_1acd16c9c:;
			{
				goto _match_end_1acd16be2;
			}
		}
		_match_end_1acd16be2:;
	}
	if ((_1aa5966a5_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	if ((_13152_short != 0LL) && (_1aa5969b3_find_flag_short(&(*_self_), _13152_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	}
	jule::Ptr<_1aa594b8c_Flag_4> _14817_flag = jule::new_ptr<_1aa594b8c_Flag_4>(_1aa594b8c_Flag_4(_13141_name,_13152_short,jule::Str(),_13165_what,jule::Ptr<jule::Str>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aa563e47_CommonFlag>(_14817_flag, 4));
	return _14817_flag;
}

inline jule::Ptr<_1aa594b8c_Flag_3> _1aa597662_add_flag_common_1(_1aa595e02_FlagSet* _self_,jule::Str _13141_name,jule::I32 _13152_short,jule::Str _13165_what) {
	{
		
{
			_case_begin_1acd20e71:;
			{
				goto _match_end_1acd20db6;
			}
		}
		_match_end_1acd20db6:;
	}
	if ((_1aa5966a5_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	if ((_13152_short != 0LL) && (_1aa5969b3_find_flag_short(&(*_self_), _13152_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	}
	jule::Ptr<_1aa594b8c_Flag_3> _14817_flag = jule::new_ptr<_1aa594b8c_Flag_3>(_1aa594b8c_Flag_3(_13141_name,_13152_short,jule::Bool(),_13165_what,jule::Ptr<jule::Bool>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aa563e47_CommonFlag>(_14817_flag, 3));
	return _14817_flag;
}





inline void _1aa5980be_add_var_0(_1aa595e02_FlagSet* _self_,jule::Ptr<jule::Str> _17537_var,jule::Str _17546_name,jule::I32 _17557_short,jule::Str _17570_what) {
	jule::Ptr<_1aa594b8c_Flag_4> _17617_flag = _1aa597662_add_flag_common_0(&(*_self_), _17546_name,_17557_short,_17570_what);
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1aa5980be_add_var_1(_1aa595e02_FlagSet* _self_,jule::Ptr<jule::Bool> _17537_var,jule::Str _17546_name,jule::I32 _17557_short,jule::Str _17570_what) {
	jule::Ptr<_1aa594b8c_Flag_3> _17617_flag = _1aa597662_add_flag_common_1(&(*_self_), _17546_name,_17557_short,_17570_what);
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa595e02_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8d85b77_to_str(_1a8d857c0_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1abb82c4b:;
			if (it != expr.end()) {
				jule::Ptr<_1a9d9ae66_TypeKind> &_1abb82cd4_g = *it;
				{
					_24417_kind+=_1a9d9b31d_to_str(_1abb82cd4_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1abb82c4b:;
				++it;
				goto _iter_begin_1abb82c4b;
			}
			_iter_end_1abb82c4b:;
		}
		(_24417_kind).mut_slice(0LL,_24417_kind.len() - 1LL);
		_24417_kind+=jule::Str("]", 1);
	}
	return _24417_kind;
}



inline jule::Bool _1a8d85e85_equals(jule::Ptr<_1a8d857c0_StructIns> _self_,jule::Ptr<_1a9d9ae66_TypeKind> _25926_other) {
	jule::Ptr<_1a8d857c0_StructIns> _26013_s = _1a9d9e211_strct(_25926_other.ptr());
	if ((_26013_s == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl != _26013_s.get()._field_decl) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I32>(static_cast<jule::I32>(_26013_s.get()._field_generics.len()))) {
		return false;
	}
	jule::I32 _27317_i = 0LL;
	for (; _27317_i < static_cast<jule::I32>(static_cast<jule::I32>(_self_.get()._field_generics.len())); (_27317_i)++) {
		{
			if ((!(_1a9d9b62b_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			}
		}
	_iter_next_1abb86d4e:;
	}
	_iter_end_1abb86d4e:;
	return true;
}



inline jule::Bool _1a8d863a3_same(_1a8d857c0_StructIns* _self_,jule::Ptr<_1a8d857c0_StructIns> _28723_s) {
	if (((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1abb899de:;
		if (it != expr.end()) {
			jule::I32 _1abb89aee_i = it - expr.begin();
			jule::Ptr<_1a9d9ae66_TypeKind> &_1abb89c53_g = *it;
			{
				if ((!(_1a9d9b62b_equals(_1abb89c53_g, _28723_s.get()._field_generics[_1abb89aee_i])))) {
					return false;
				}
			}
			_iter_next_1abb899de:;
			++it;
			_1abb89aee_i++;
			goto _iter_begin_1abb899de;
		}
		_iter_end_1abb899de:;
	}
	return true;
}



inline jule::Ptr<_1a8d94db7_Fn> _1a8d8675a_find_method(_1a8d857c0_StructIns* _self_,jule::Str _30234_ident,jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1abb8b79e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1abb8b89d_f = *it;
			{
				if ((_1abb8b89d_f.get()._field_statically == _30246_statically) && (_1abb8b89d_f.get()._field_ident == _30234_ident)) {
					return _1abb8b89d_f;
				}
			}
			_iter_next_1abb8b79e:;
			++it;
			goto _iter_begin_1abb8b79e;
		}
		_iter_end_1abb8b79e:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d84e62_FieldIns> _1a8d86a68_find_field(_1a8d857c0_StructIns* _self_,jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1abb8cd88:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d84e62_FieldIns> _1abb8ce87_f = *it;
			{
				if (_1abb8ce87_f.get()._field_decl.get()._field_ident == _31333_ident) {
					return _1abb8ce87_f;
				}
			}
			_iter_next_1abb8cd88:;
			++it;
			goto _iter_begin_1abb8cd88;
		}
		_iter_end_1abb8cd88:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a8d857c0_StructIns _Src) {
	_Stream << _1a8d85b77_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa51504c_ObjectCoder> static__1aa53614a_new(jule::Ptr<_1bce27b17_IR>& _7528_ir,_1aa52150e_SerializationInfo _7537_info) {
	jule::Ptr<_1aa51504c_ObjectCoder> _7617_oc = jule::new_ptr<_1aa51504c_ObjectCoder>(_1aa51504c_ObjectCoder(_7528_ir,_7537_info,jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Slice<jule::Ptr<_1aa514d60_TraitHash>>(),jule::Ptr<_1aa37e504_ExprCoder>(),jule::Ptr<_1aa3b797c_ScopeCoder>()));
	_7617_oc.get()._field_ec=static__1aa3b80ed_new(_7617_oc);
	_7617_oc.get()._field_sc=static__1aa3be511_new(_7617_oc);
	return _7617_oc;
}



inline void _1aa51de35_add_indent(_1aa51504c_ObjectCoder* _self_) {
	
	(*_self_)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1aa51edae_done_indent(_1aa51504c_ObjectCoder* _self_) {
	(*_self_)._field_indent_buffer=(*_self_)._field_indent_buffer.slice(0LL,((*_self_)._field_indent_buffer.len() - 1LL));
}



inline jule::Str _1aa5205c9_indent(_1aa51504c_ObjectCoder* _self_) {
	return (*_self_)._field_indent_buffer;
}



inline jule::I32 _1aa520ce4_find_type_offset(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8ea7a57_Trait> _10131_t,jule::Ptr<_1a9d9ae66_TypeKind> _10146_k) {
	jule::Ptr<_1a8d857c0_StructIns> _10217_s = nullptr;
	if ((_1a9d9d287_sptr(_10146_k.ptr()) != nullptr)) {
		_10146_k=_1a9d9d287_sptr(_10146_k.ptr()).get()._field_elem;
	}
	if ((_1a9d9e211_strct(_10146_k.ptr()) == nullptr)) {
		return -1LL;
	}
	_10217_s=_1a9d9e211_strct(_10146_k.ptr());
	{
		auto &expr = (*_self_)._field_trait_map;
		auto it = expr.begin();
		_iter_begin_1acb659ca:;
		if (it != expr.end()) {
			jule::Ptr<_1aa514d60_TraitHash> &_1acb65a63_hash = *it;
			{
				if ((_1acb65a63_hash.get()._field_t == _10131_t) && (_1acb65a63_hash.get()._field_s == _10217_s)) {
					return _1acb65a63_hash.get()._field_i;
				}
			}
			_iter_next_1acb659ca:;
			++it;
			goto _iter_begin_1acb659ca;
		}
		_iter_end_1acb659ca:;
	}
	return -1LL;
}



inline jule::Str _1aa5222e0_loc_info(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1d7b77374_Token>& _11924_t) {
	jule::Str _12017_loc = _11924_t.get()._field_file.get()._field_path;
	if (_1d580edbb_PRODUCTION) {
		{
			
			if (_1d7728e59_has_prefix(_12017_loc,_1d77ddb12_PATH_STDLIB)) {
				_case_begin_1acb67658:;
				{
					(_12017_loc).mut_slice(_1d682eacc_dir(_1d77ddb12_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_1d7728e59_has_prefix(_12017_loc,(*_self_)._field_ir.get()._field_root)) {
				_case_begin_1acb676d0:;
				{
					(_12017_loc).mut_slice(_1d682eacc_dir((*_self_)._field_ir.get()._field_root).len() + 1LL);
				}
			}
			_match_end_1acb67548:;
		}
	}
	_12017_loc+=jule::Str(":", 1);
	_12017_loc+=_1a9ba8a98_itoa(_11924_t.get()._field_row);
	_12017_loc+=jule::Str(":", 1);
	_12017_loc+=_1a9ba8a98_itoa(_11924_t.get()._field_column);
	return _1aa4d534c_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12017_loc));
}



inline jule::Str _1aa51ba9d_links(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _14417_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acb6a9d0:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acb6aaac_pkg = *it;
			{
				{
					
					if ((!(_1acb6aaac_pkg.get()._field_cpp_linked))) {
						_case_begin_1acb6b1ea:;
						{
							goto _iter_next_1acb6a9d0;
						}
					}
					else if (_1d77bdeaa_is_std_header_path(_1acb6aaac_pkg.get()._field_path)) {
						_case_begin_1acb6b272:;
						{
							_14417_obj+=jule::Str("#include ", 9);
							_14417_obj+=_1acb6aaac_pkg.get()._field_path;
							_14417_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_1acb6b0da:;
				}
			}
			_iter_next_1acb6a9d0:;
			++it;
			goto _iter_begin_1acb6a9d0;
		}
		_iter_end_1acb6a9d0:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acb6ac00:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acb6ac44_pkg = *it;
			{
				{
					
					if ((!(_1acb6ac44_pkg.get()._field_cpp_linked))) {
						_case_begin_1acb6c8e4:;
						{
							goto _iter_next_1acb6ac00;
						}
					}
					else if (_1aa5584d0_is_cpp_header_file(_1acb6ac44_pkg.get()._field_path)) {
						_case_begin_1acb6c96b:;
						{
							_14417_obj+=jule::Str("#include \"", 10);
							_14417_obj+=_1acb6ac44_pkg.get()._field_path;
							_14417_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_1acb6c7d4:;
				}
			}
			_iter_next_1acb6ac00:;
			++it;
			goto _iter_begin_1acb6ac00;
		}
		_iter_end_1acb6ac00:;
	}
	return _14417_obj;
}



inline jule::Str _1aa516d0c_param_ins(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d971c7_ParamIns>& _17029_p) {
	jule::Str _17117_obj = static__1aa55d903_param_ins(_17029_p);
	_17117_obj+=jule::Str(" ", 1);
	_17117_obj+=static__1aa4d9c69_param(_17029_p.get()._field_decl);
	return _17117_obj;
}



inline jule::Str _1aa51e650_param(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d9357a_Param>& _17829_p) {
	jule::Str _17917_obj = static__1aa55d65b_param(_17829_p);
	if (((!(_17829_p.get()._field_ident.empty())) && (!(_1d7b79ac4_is_ignore_ident(_17829_p.get()._field_ident)))) && (!(_1d7b79d6b_is_anon_ident(_17829_p.get()._field_ident)))) {
		_17917_obj+=jule::Str(" ", 1);
		_17917_obj+=static__1aa4d9c69_param(_17829_p);
	}
	return _17917_obj;
}



inline jule::Str _1aa5161c4_params(_1aa51504c_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a8d9357a_Param>>& _18830_params) {
	if ((_18830_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _19217_obj = jule::Str("(", 1);
	{
		auto &expr = _18830_params;
		auto it = expr.begin();
		_iter_begin_1acb72ac5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d9357a_Param> _1acb73895_p = *it;
			{
				if (_1a8d93ba7_is_self(_1acb73895_p.ptr())) {
					if (_1a8d93e1b_is_ref(_1acb73895_p.ptr())) {
						_19217_obj+=_1aa51e650_param(&(*_self_), _1acb73895_p);
					}
				} else {
					_19217_obj+=_1aa51e650_param(&(*_self_), _1acb73895_p);
				}
				_19217_obj+=jule::Str(",", 1);
			}
			_iter_next_1acb72ac5:;
			++it;
			goto _iter_begin_1acb72ac5;
		}
		_iter_end_1acb72ac5:;
	}
	(_19217_obj).mut_slice(0LL,_19217_obj.len() - 1LL);
	return (_19217_obj + jule::Str(")", 1));
}



inline jule::Str _1aa537921_params_ins(_1aa51504c_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>& _20934_params) {
	{
		
		if ((_20934_params.len() == 0LL)) {
			_case_begin_1acb75b72:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1acb75aa6:;
	}
	jule::Str _21517_obj = jule::Str("(", 1);
	{
		auto &expr = _20934_params;
		auto it = expr.begin();
		_iter_begin_1acb73b5e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1acb762e3_p = *it;
			{
				_21517_obj+=_1aa516d0c_param_ins(&(*_self_), _1acb762e3_p);
				_21517_obj+=jule::Str(",", 1);
			}
			_iter_next_1acb73b5e:;
			++it;
			goto _iter_begin_1acb73b5e;
		}
		_iter_end_1acb73b5e:;
	}
	(_21517_obj).mut_slice(0LL,_21517_obj.len() - 1LL);
	return (_21517_obj + jule::Str(")", 1));
}



inline jule::Str _1aa551d7a_params_decls(_1aa51504c_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>& _22736_params) {
	if ((_22736_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _23217_obj = jule::Str("(", 1);
	{
		auto &expr = _22736_params;
		auto it = expr.begin();
		_iter_begin_1acb77ba7:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1acb78c1e_p = *it;
			{
				_23217_obj+=static__1aa55d903_param_ins(_1acb78c1e_p);
				_23217_obj+=jule::Str(",", 1);
			}
			_iter_next_1acb77ba7:;
			++it;
			goto _iter_begin_1acb77ba7;
		}
		_iter_end_1acb77ba7:;
	}
	(_23217_obj).mut_slice(0LL,_23217_obj.len() - 1LL);
	return (_23217_obj + jule::Str(")", 1));
}



inline void _1aa551eac_prepare_structure(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d82b41_Struct>& _24341_s) {
	{
		auto &expr = _24341_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acb7a391:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1acb7a4e5_ins = *it;
			{
				{
					auto &expr = _1acb7a4e5_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1acb7ab33:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1acb7abee_m = *it;
						{
							if (_1acb7abee_m.get()._field_statically) {
								goto _iter_next_1acb7ab33;
							}
							{
								auto &expr = _1acb7abee_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1acb7b43b:;
								if (it != expr.end()) {
									jule::Ptr<_1a8d98063_FnIns> _1acb7b6e4_ins = *it;
									{
										jule::Ptr<_1a8d971c7_ParamIns> _25029_p = _1acb7b6e4_ins.get()._field_params[0LL];
										if ((!(_1a8d93e1b_is_ref(_25029_p.get()._field_decl.ptr())))) {
											_25029_p.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1aa5599ed_CustomType>(_1aa5599ed_CustomType(static__1aa55b4c2_as_ptr(static__1aa55e728_kind(_25029_p.get()._field_kind)))), 12)));
										} else {
											_25029_p.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1aa5599ed_CustomType>(_1aa5599ed_CustomType(static__1aa55e728_kind(_25029_p.get()._field_kind))), 12)));
										}
									}
									_iter_next_1acb7b43b:;
									++it;
									goto _iter_begin_1acb7b43b;
								}
								_iter_end_1acb7b43b:;
							}
						}
						_iter_next_1acb7ab33:;
						++it;
						goto _iter_begin_1acb7ab33;
					}
					_iter_end_1acb7ab33:;
				}
			}
			_iter_next_1acb7a391:;
			++it;
			goto _iter_begin_1acb7a391;
		}
		_iter_end_1acb7a391:;
	}
}



inline void _1aa5520de_prepare_structures(_1aa51504c_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acb7b01d:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1acb7b815_s = *it;
			{
				if ((!(_1acb7b815_s.get()._field_cpp_linked)) && (_1acb7b815_s.get()._field_token != nullptr)) {
					_1aa551eac_prepare_structure(&(*_self_), _1acb7b815_s);
				}
			}
			_iter_next_1acb7b01d:;
			++it;
			goto _iter_begin_1acb7b01d;
		}
		_iter_end_1acb7b01d:;
	}
}



inline void _1aa552221_build_trait_wrapper(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1aa514d60_TraitHash>& _27743_hash) {
	{
		auto &expr = _27743_hash.get()._field_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1acb80ab1:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1acb80b8d_m = *it;
			{
				jule::Str _27917_ident = _1acb80b8d_m.get()._field_ident;
				_1acb80b8d_m.get()._field_instances[0LL].get()._field_scope=nullptr;
				jule::Bool _28117_ptr = (!(_1a8d93e1b_is_ref(_1acb80b8d_m.get()._field_params[0LL].ptr())));
				jule::Ptr<_1a8d94db7_Fn> _28321_sm = _1a8d8675a_find_method(_27743_hash.get()._field_s.ptr(), _1acb80b8d_m.get()._field_ident,false);
				if ((_28321_sm == nullptr) || (_28321_sm.get()._field_instances.len() == 0LL)) {
					goto _iter_next_1acb80ab1;
				}
				_1acb80b8d_m.get()._field_ident=(_27917_ident + jule::Str("_", 1)) + _1a9ba8a98_itoa(_27743_hash.get()._field_i);
				(*_self_)._field_trait_wrappers+=_1aa555c3b_func(&(*_self_), _1acb80b8d_m);
				_1acb80b8d_m.get()._field_ident=_27917_ident;
				_1aa51de35_add_indent(&(*_self_));
				(*_self_)._field_trait_wrappers+=jule::Str("{\n", 2);
				(*_self_)._field_trait_wrappers+=_1aa5205c9_indent(&(*_self_));
				if ((!(_1a8d95318_is_void(_28321_sm.ptr())))) {
					(*_self_)._field_trait_wrappers+=jule::Str("return ", 7);
				}
				(*_self_)._field_trait_wrappers+=static__1aa4d9483_func(_28321_sm);
				(*_self_)._field_trait_wrappers+=jule::Str("(", 1);
				if (_28117_ptr) {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.safe_ptr<", 16);
					(*_self_)._field_trait_wrappers+=static__1aa55d11c_structure_ins(_27743_hash.get()._field_s);
					(*_self_)._field_trait_wrappers+=jule::Str(">(", 2);
					if ((!(_1d580edbb_PRODUCTION))) {
						(*_self_)._field_trait_wrappers+=jule::Str("_00___file", 10);
					}
					(*_self_)._field_trait_wrappers+=jule::Str(")", 1);
				} else {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.data.as<", 15);
					(*_self_)._field_trait_wrappers+=static__1aa55cd75_structure(_28321_sm.get()._field_owner);
					(*_self_)._field_trait_wrappers+=jule::Str(">()", 3);
				}
				{
					auto expr = _1acb80b8d_m.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1acb889a9:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d9357a_Param> _1acb86820_mp = *it;
						{
							(*_self_)._field_trait_wrappers+=jule::Str(", ", 2);
							(*_self_)._field_trait_wrappers+=static__1aa4d9c69_param(_1acb86820_mp);
						}
						_iter_next_1acb889a9:;
						++it;
						goto _iter_begin_1acb889a9;
					}
					_iter_end_1acb889a9:;
				}
				(*_self_)._field_trait_wrappers+=jule::Str(");\n}\n", 5);
				_1aa51edae_done_indent(&(*_self_));
			}
			_iter_next_1acb80ab1:;
			++it;
			goto _iter_begin_1acb80ab1;
		}
		_iter_end_1acb80ab1:;
	}
}



inline void _1aa552353_trait_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8ea7a57_Trait>& _32134_t) {
	jule::Str _32213_ident = static__1aa4d99c2_trait_decl(_32134_t);
	jule::Str _32413_type_data = (_32213_ident + jule::Str("MptrData", 8));
	(*_self_)._field_trait_data_t+=jule::Str("struct ", 7);
	(*_self_)._field_trait_data_t+=_32413_type_data;
	(*_self_)._field_trait_data_t+=jule::Str(" {\n", 3);
	{
		auto &expr = _32134_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1acb8b2b4:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1acb8b3b3_m = *it;
			{
				jule::Ptr<_1a8d98063_FnIns> _33021_ins = _1acb8b3b3_m.get()._field_instances[0LL];
				jule::Ptr<_1a8d971c7_ParamIns> _33121_p = _33021_ins.get()._field_params[0LL];
				_33121_p.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_32134_t, 2)));
				{
					auto expr = _33021_ins.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1acb8cb89:;
					if (it != expr.end()) {
						jule::I32 _1acb8cd54_i = it - expr.begin();
						jule::Ptr<_1a8d971c7_ParamIns> _1acb8ce97_ip = *it;
						{
							if (_1d7b79d6b_is_anon_ident(_1acb8ce97_ip.get()._field_decl.get()._field_ident)) {
								_1acb8ce97_ip.get()._field_decl.get()._field_ident=jule::Str("_", 1) + _1a9ba8a98_itoa(_1acb8cd54_i);
							}
						}
						_iter_next_1acb8cb89:;
						++it;
						_1acb8cd54_i++;
						goto _iter_begin_1acb8cb89;
					}
					_iter_end_1acb8cb89:;
				}
				if ((!(_1d580edbb_PRODUCTION))) {
					_33021_ins.get()._field_params = jule::alloc_for_append(_33021_ins.get()._field_params,1);_33021_ins.get()._field_params.__push(jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1aa5599ed_CustomType>(_1aa5599ed_CustomType(jule::Str("const char*", 11))), 12))))));
				}
				_1aa51de35_add_indent(&(*_self_));
				(*_self_)._field_trait_data_t+=_1aa55483e_func_decl(&(*_self_), _1acb8b3b3_m,true);
				_1aa51edae_done_indent(&(*_self_));
			}
			_iter_next_1acb8b2b4:;
			++it;
			goto _iter_begin_1acb8b2b4;
		}
		_iter_end_1acb8b2b4:;
	}
	(*_self_)._field_trait_data_t+=_1aa5205c9_indent(&(*_self_));
	(*_self_)._field_trait_data_t+=jule::Str("};", 2);
	(*_self_)._field_trait_data_t+=jule::Str("\n\n", 2);
	jule::I32 _36113_n = (*_self_)._field_trait_map.len();
	jule::I32 _36217_i = 0LL;
	{
		auto &expr = _32134_t.get()._field_implemented;
		auto it = expr.begin();
		_iter_begin_1acb92243:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1acb92397_s = *it;
			{
				{
					auto &expr = _1acb92397_s.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1acb92991:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d857c0_StructIns> _1acb92a5c_ins = *it;
						{
							jule::Ptr<_1aa514d60_TraitHash> _36525_hash = jule::new_ptr<_1aa514d60_TraitHash>(_1aa514d60_TraitHash(_32134_t,_1acb92a5c_ins,_36217_i));
							(_36217_i)++;
							_1aa552221_build_trait_wrapper(&(*_self_), _36525_hash);
							(*_self_)._field_trait_map = jule::alloc_for_append((*_self_)._field_trait_map,1);(*_self_)._field_trait_map.__push(_36525_hash);
						}
						_iter_next_1acb92991:;
						++it;
						goto _iter_begin_1acb92991;
					}
					_iter_end_1acb92991:;
				}
			}
			_iter_next_1acb92243:;
			++it;
			goto _iter_begin_1acb92243;
		}
		_iter_end_1acb92243:;
	}
	(*_self_)._field_trait_declarations+=jule::Str("struct ", 7);
	(*_self_)._field_trait_declarations+=_32213_ident;
	(*_self_)._field_trait_declarations+=jule::Str(" {};\n", 5);
	_1aa51de35_add_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("static ", 7);
	(*_self_)._field_trait_data+=_32413_type_data;
	(*_self_)._field_trait_data+=jule::Str(" ", 1);
	(*_self_)._field_trait_data+=_32213_ident;
	(*_self_)._field_trait_data+=jule::Str("_mptr_data[] = {\n", 17);
	{
		auto expr = (*_self_)._field_trait_map.slice(_36113_n);
		auto it = expr.begin();
		_iter_begin_1acb95587:;
		if (it != expr.end()) {
			jule::Ptr<_1aa514d60_TraitHash> _1acb95675_hash = *it;
			{
				(*_self_)._field_trait_data+=_1aa5205c9_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("{\n", 2);
				_1aa51de35_add_indent(&(*_self_));
				{
					auto &expr = _1acb95675_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1acb968da:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1acb969c8_m = *it;
						{
							jule::Str _39221_m_ident = static__1aa4d9483_func(_1acb969c8_m);
							(*_self_)._field_trait_data+=_1aa5205c9_indent(&(*_self_));
							(*_self_)._field_trait_data+=jule::Str(".", 1);
							(*_self_)._field_trait_data+=_39221_m_ident;
							(*_self_)._field_trait_data+=jule::Str("=", 1);
							(*_self_)._field_trait_data+=_39221_m_ident;
							(*_self_)._field_trait_data+=jule::Str("_", 1);
							(*_self_)._field_trait_data+=_1a9ba8a98_itoa(_1acb95675_hash.get()._field_i);
							(*_self_)._field_trait_data+=jule::Str(",\n", 2);
						}
						_iter_next_1acb968da:;
						++it;
						goto _iter_begin_1acb968da;
					}
					_iter_end_1acb968da:;
				}
				_1aa51edae_done_indent(&(*_self_));
				(*_self_)._field_trait_data+=_1aa5205c9_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("},\n", 3);
			}
			_iter_next_1acb95587:;
			++it;
			goto _iter_begin_1acb95587;
		}
		_iter_end_1acb95587:;
	}
	_1aa51edae_done_indent(&(*_self_));
	(*_self_)._field_trait_data+=_1aa5205c9_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("};", 2);
}



inline void _1aa552485_trait_decls(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d05013_Package>& _41235_p) {
	{
		auto &expr = _41235_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acb9a504:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1acb9a658_f = *it;
			{
				{
					auto &expr = _1acb9a658_f.get()._field_traits;
					auto it = expr.begin();
					_iter_begin_1acb9ac96:;
					if (it != expr.end()) {
						jule::Ptr<_1a8ea7a57_Trait> _1acb9ad62_t = *it;
						{
							if ((_1acb9ad62_t.get()._field_token != nullptr)) {
								_1aa552353_trait_decl(&(*_self_), _1acb9ad62_t);
							}
						}
						_iter_next_1acb9ac96:;
						++it;
						goto _iter_begin_1acb9ac96;
					}
					_iter_end_1acb9ac96:;
				}
			}
			_iter_next_1acb9a504:;
			++it;
			goto _iter_begin_1acb9a504;
		}
		_iter_end_1acb9a504:;
	}
}



inline jule::Str _1aa5525b7_structure_plain_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d82b41_Struct>& _42344_s) {
	jule::Str _42417_obj = jule::Str();
	{
		auto &expr = _42344_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acb9c4e5:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1acb9c616_ins = *it;
			{
				_42417_obj+=jule::Str("\nstruct ", 8);
				_42417_obj+=static__1aa4da2a8_structure_ins(_1acb9c616_ins);
				_42417_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1acb9c4e5:;
			++it;
			goto _iter_begin_1acb9c4e5;
		}
		_iter_end_1acb9c4e5:;
	}
	return _42417_obj;
}



inline jule::Str _1aa5526e9_structure_plain_decls(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _43517_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acb9db01:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1acb9db78_s = *it;
			{
				if ((!(_1acb9db78_s.get()._field_cpp_linked)) && (_1acb9db78_s.get()._field_token != nullptr)) {
					_43517_obj+=_1aa5525b7_structure_plain_decl(&(*_self_), _1acb9db78_s);
					_43517_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1acb9db01:;
			++it;
			goto _iter_begin_1acb9db01;
		}
		_iter_end_1acb9db01:;
	}
	return _43517_obj;
}



inline jule::Str _1aa55282b_var_init_expr(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d2553e_Var>& _44637_v,jule::Str _44646_init) {
	jule::Str _44717_obj = jule::Str();
	if (_44637_v.get()._field_statically) {
		_44717_obj+=jule::Str("static ", 7);
	}
	_44717_obj+=static__1aa55e728_kind(_44637_v.get()._field_kind.get()._field_kind);
	_44717_obj+=jule::Str(" ", 1);
	if (_44637_v.get()._field_reference) {
		_44717_obj+=jule::Str("&", 1);
	}
	_44717_obj+=static__1aa4da7e7_var(_44637_v);
	if ((!(_44646_init.empty()))) {
		_44717_obj+=jule::Str(" = ", 3);
		_44717_obj+=_44646_init;
	}
	_44717_obj+=jule::Str(";", 1);
	return _44717_obj;
}



inline jule::Str _1aa55295d_var(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d2553e_Var> _46726_v) {
	if (_1d7b79ac4_is_ignore_ident(_46726_v.get()._field_ident)) {
		return jule::Str();
	}
	if ((_46726_v.get()._field_value != nullptr) && (_46726_v.get()._field_value.get()._field_expr != nullptr)) {
		if (_46726_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
			return _1aa55282b_var_init_expr(&(*_self_), _46726_v,_1aa4d436d_val((*_self_)._field_ec.ptr(), _46726_v.get()._field_value));
		}
		return _1aa55282b_var_init_expr(&(*_self_), _46726_v,jule::Str());
	}
	return _1aa55282b_var_init_expr(&(*_self_), _46726_v,_1aa4d467b_init_expr((*_self_)._field_ec.ptr(), _46726_v.get()._field_kind.get()._field_kind));
}



inline jule::Str _1aa552a90_field_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d84e62_FieldIns>& _48134_f) {
	jule::Str _48217_obj = static__1aa55e728_kind(_48134_f.get()._field_kind);
	_48217_obj+=jule::Str(" ", 1);
	_48217_obj+=static__1aa4da550_field(_48134_f.get()._field_decl);
	_48217_obj+=jule::Str(" = ", 3);
	if ((_48134_f.get()._field_default == nullptr)) {
		_48217_obj+=_1aa4d467b_init_expr((*_self_)._field_ec.ptr(), _48134_f.get()._field_kind);
	} else {
		_48217_obj+=_1aa4d4060_expr((*_self_)._field_ec.ptr(), _48134_f.get()._field_default.get()._field_model);
	}
	_48217_obj+=jule::Str(";", 1);
	return _48217_obj;
}



inline jule::Str _1aa552bc2_structure_constructor(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _49745_s) {
	jule::Str _49817_obj = static__1aa4da2a8_structure_ins(_49745_s);
	_49817_obj+=jule::Str("(", 1);
	if ((_49745_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _49745_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acba99ec:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1acba9b2e_f = *it;
				{
					_49817_obj+=static__1aa55e728_kind(_1acba9b2e_f.get()._field_kind);
					_49817_obj+=jule::Str(" __param_", 9);
					_49817_obj+=_1acba9b2e_f.get()._field_decl.get()._field_ident;
					_49817_obj+=jule::Str(", ", 2);
				}
				_iter_next_1acba99ec:;
				++it;
				goto _iter_begin_1acba99ec;
			}
			_iter_end_1acba99ec:;
		}
		(_49817_obj).mut_slice(0LL,_49817_obj.len() - 2LL);
	} else {
		_49817_obj+=jule::Str("void", 4);
	}
	_49817_obj+=jule::Str(")", 1);
	if ((_49745_s.get()._field_fields.len() > 0LL)) {
		_49817_obj+=jule::Str(": ", 2);
		{
			auto &expr = _49745_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acbabaa9:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1acbabb42_f = *it;
				{
					_49817_obj+=static__1aa4da550_field(_1acbabb42_f.get()._field_decl);
					_49817_obj+=jule::Str("(", 1);
					_49817_obj+=jule::Str("__param_", 8);
					_49817_obj+=_1acbabb42_f.get()._field_decl.get()._field_ident;
					_49817_obj+=jule::Str("), ", 3);
				}
				_iter_next_1acbabaa9:;
				++it;
				goto _iter_begin_1acbabaa9;
			}
			_iter_end_1acbabaa9:;
		}
		(_49817_obj).mut_slice(0LL,_49817_obj.len() - 2LL);
	}
	_49817_obj+=jule::Str(" {}", 3);
	return _49817_obj;
}



inline jule::Str _1aa552d04_structure_destructor(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _53044_s) {
	
	jule::Ptr<_1a8d94db7_Fn> _53213_dispose_method = _1a8d8675a_find_method(_53044_s.ptr(), jule::Str("dispose", 7),false);
	jule::Bool _53317_disposed = static__1a9d266b6_dispose(_53213_dispose_method);
	if ((!(_53317_disposed))) {
		return jule::Str();
	}
	jule::Str _53817_obj = jule::Str("~", 1);
	_53817_obj+=static__1aa4da2a8_structure_ins(_53044_s);
	_53817_obj+=jule::Str("(void) { ", 9);
	_53817_obj+=static__1aa4d9483_func(_53213_dispose_method);
	_53817_obj+=jule::Str("(this); }", 9);
	return _53817_obj;
}



inline void _1aa552e36_structure_operator_eq(_1aa51504c_ObjectCoder* _self_,jule::Str& _54645_obj,jule::Str& _54656_ident,jule::Ptr<_1a8d857c0_StructIns>& _54673_s) {
	if ((_54673_s.get()._field_operators._field_eq != nullptr)) {
		_1aa55319a_structure_operator(&(*_self_), _54645_obj,_54656_ident,_54673_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;
	}
	_54645_obj+=_1aa5205c9_indent(&(*_self_));
	if (_1d581184b_OPT_INLINE) {
		_54645_obj+=jule::Str("inline ", 7);
	}
	_54645_obj+=jule::Str("bool operator==(", 16);
	_54645_obj+=_54656_ident;
	_54645_obj+=jule::Str(" _other) {", 10);
	if ((_54673_s.get()._field_fields.len() > 0LL)) {
		_1aa51de35_add_indent(&(*_self_));
		_54645_obj+=jule::Str("\n", 1);
		_54645_obj+=_1aa5205c9_indent(&(*_self_));
		_54645_obj+=jule::Str("return ", 7);
		_1aa51de35_add_indent(&(*_self_));
		jule::I32 _56621_n = 0LL;
		{
			auto &expr = _54673_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acbb5530:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1acbb5684_f = *it;
				{
					jule::Ptr<_1a8d857c0_StructIns> _56921_strct = _1a9d9e211_strct(_1acbb5684_f.get()._field_kind.ptr());
					if (((_56921_strct != nullptr) && (_56921_strct.get()._field_decl != nullptr)) && _56921_strct.get()._field_decl.get()._field_cpp_linked) {
						goto _iter_next_1acbb5530;
					}
					(_56621_n)++;
					_54645_obj+=jule::Str("\n", 1);
					_54645_obj+=_1aa5205c9_indent(&(*_self_));
					_54645_obj+=jule::Str("this->", 6);
					jule::Str _57821_f_ident = static__1aa4da550_field(_1acbb5684_f.get()._field_decl);
					_54645_obj+=_57821_f_ident;
					_54645_obj+=jule::Str(" == _other.", 11);
					_54645_obj+=_57821_f_ident;
					_54645_obj+=jule::Str(" &&", 3);
				}
				_iter_next_1acbb5530:;
				++it;
				goto _iter_begin_1acbb5530;
			}
			_iter_end_1acbb5530:;
		}
		_1aa51edae_done_indent(&(*_self_));
		if ((_56621_n > 0LL)) {
			(_54645_obj).mut_slice(0LL,_54645_obj.len() - 3LL);
		} else {
			_54645_obj+=jule::Str("true", 4);
		}
		_54645_obj+=jule::Str(";\n", 2);
		_1aa51edae_done_indent(&(*_self_));
		_54645_obj+=_1aa5205c9_indent(&(*_self_));
		_54645_obj+=jule::Str("}", 1);
	} else {
		_54645_obj+=jule::Str(" return true; }", 15);
	}
	_54645_obj+=jule::Str("\n\n", 2);
}



inline void _1aa553068_structure_operator_not_eq(_1aa51504c_ObjectCoder* _self_,jule::Str& _60049_obj,jule::Str& _60060_ident,jule::Ptr<_1a8d857c0_StructIns>& _60077_s) {
	_60049_obj+=_1aa5205c9_indent(&(*_self_));
	if (_1d581184b_OPT_INLINE) {
		_60049_obj+=jule::Str("inline ", 7);
	}
	_60049_obj+=jule::Str("bool operator!=(", 16);
	_60049_obj+=_60060_ident;
	_60049_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _1aa55319a_structure_operator(_1aa51504c_ObjectCoder* _self_,jule::Str& _61142_obj,jule::Str& _61153_ident,jule::Ptr<_1a8d98063_FnIns>& _61170_f,jule::Str _61181_op) {
	if ((_61170_f == nullptr)) {
		return;
	}
	jule::Bool _61613_unary = (_61170_f.get()._field_params.len() == 1LL);
	jule::Bool _61713_assignment = _1a8d95318_is_void(_61170_f.get()._field_decl.ptr());
	_61142_obj+=_1aa5205c9_indent(&(*_self_));
	if (_1d581184b_OPT_INLINE) {
		_61142_obj+=jule::Str("inline ", 7);
	}
	if (_61713_assignment) {
		_61142_obj+=_61153_ident;
		_61142_obj+=jule::Str("&", 1);
	} else {
		if ((_1a9d9d023_prim(_61170_f.get()._field_result.ptr()) == nullptr)) {
			_61142_obj+=_61153_ident;
		} else {
			_61142_obj+=jule::Str("jule::Bool", 10);
		}
	}
	_61142_obj+=jule::Str(" operator", 9);
	_61142_obj+=_61181_op;
	_61142_obj+=jule::Str("(", 1);
	if ((!(_61613_unary))) {
		jule::Ptr<_1a8d971c7_ParamIns> _63921_p = _61170_f.get()._field_params[1LL];
		_61142_obj+=static__1aa55d903_param_ins(_63921_p);
		_61142_obj+=jule::Str(" _other", 7);
	}
	_61142_obj+=jule::Str(") { ", 4);
	if ((!(_61713_assignment))) {
		_61142_obj+=jule::Str("return ", 7);
	}
	_61142_obj+=static__1aa4d972a_func_ins(_61170_f);
	if ((!(_61613_unary))) {
		_61142_obj+=jule::Str("(this, _other); ", 16);
		if (_61713_assignment) {
			_61142_obj+=jule::Str("return *this; ", 14);
		}
		_61142_obj+=jule::Str("}", 1);
	} else {
		_61142_obj+=jule::Str("(this); }", 9);
	}
	_61142_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _1aa55340e_structure_operators(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _66043_s) {
	jule::Str _66113_ident = static__1aa4da2a8_structure_ins(_66043_s);
	jule::Str _66217_obj = jule::Str();
	_1aa552e36_structure_operator_eq(&(*_self_), _66217_obj,_66113_ident,_66043_s);
	_1aa553068_structure_operator_not_eq(&(*_self_), _66217_obj,_66113_ident,_66043_s);
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1aa55319a_structure_operator(&(*_self_), _66217_obj,_66113_ident,_66043_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
	return _66217_obj;
}



inline jule::Str _1aa553761_structure_derive_defs_decls(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _70147_s) {
	jule::Str _70217_obj = jule::Str();
	if (_1a8d8446c_is_derives(_70147_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_70217_obj+=_1aa5205c9_indent(&(*_self_));
		_70217_obj+=static__1aa4d6eec_clone_func_decl(_70147_s.get()._field_decl);
		_70217_obj+=jule::Str(";\n\n", 3);
	}
	return _70217_obj;
}



inline jule::Str _1aa553a5d_structure_ins_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _71142_s) {
	jule::Str _71217_obj = jule::Str();
	if ((_71142_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _71142_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1acbd7ad5:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d94db7_Fn> _1acbd7c39_m = *it;
				{
					_71217_obj+=_1aa55483e_func_decl(&(*_self_), _1acbd7c39_m,false);
				}
				_iter_next_1acbd7ad5:;
				++it;
				goto _iter_begin_1acbd7ad5;
			}
			_iter_end_1acbd7ad5:;
		}
	}
	_71217_obj+=jule::Str("struct ", 7);
	jule::Str _72113_out_ident = static__1aa4da2a8_structure_ins(_71142_s);
	_71217_obj+=_72113_out_ident;
	_71217_obj+=jule::Str(" {\n", 3);
	_1aa51de35_add_indent(&(*_self_));
	if ((_71142_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _71142_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acbd9950:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1acbd9a71_f = *it;
				{
					_71217_obj+=_1aa5205c9_indent(&(*_self_));
					_71217_obj+=_1aa552a90_field_decl(&(*_self_), _1acbd9a71_f);
					_71217_obj+=jule::Str("\n", 1);
				}
				_iter_next_1acbd9950:;
				++it;
				goto _iter_begin_1acbd9950;
			}
			_iter_end_1acbd9950:;
		}
		_71217_obj+=jule::Str("\n\n", 2);
		_71217_obj+=_1aa5205c9_indent(&(*_self_));
		_71217_obj+=_1aa552bc2_structure_constructor(&(*_self_), _71142_s);
		_71217_obj+=jule::Str("\n\n", 2);
	}
	_71217_obj+=_1aa5205c9_indent(&(*_self_));
	_71217_obj+=_1aa552d04_structure_destructor(&(*_self_), _71142_s);
	_71217_obj+=jule::Str("\n\n", 2);
	_71217_obj+=_1aa5205c9_indent(&(*_self_));
	_71217_obj+=_72113_out_ident;
	_71217_obj+=jule::Str("(void) = default;\n\n", 19);
	_71217_obj+=_1aa553761_structure_derive_defs_decls(&(*_self_), _71142_s);
	_71217_obj+=_1aa55340e_structure_operators(&(*_self_), _71142_s);
	_71217_obj+=jule::Str("\n", 1);
	_1aa51edae_done_indent(&(*_self_));
	_71217_obj+=(_1aa5205c9_indent(&(*_self_)) + jule::Str("};", 2));
	return _71217_obj;
}



inline jule::Str _1aa553d6b_structure_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d82b41_Struct>& _76038_s) {
	jule::Str _76117_obj = jule::Str();
	{
		auto &expr = _76038_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acbde3c2:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1acbde4e3_ins = *it;
			{
				_76117_obj+=_1aa553a5d_structure_ins_decl(&(*_self_), _1acbde4e3_ins);
			}
			_iter_next_1acbde3c2:;
			++it;
			goto _iter_begin_1acbde3c2;
		}
		_iter_end_1acbde3c2:;
	}
	return _76117_obj;
}



inline jule::Str _1aa5540d0_structure_decls(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _77017_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acbe08e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1acbe0967_s = *it;
			{
				if ((!(_1acbe0967_s.get()._field_cpp_linked)) && (_1acbe0967_s.get()._field_token != nullptr)) {
					_77017_obj+=_1aa553d6b_structure_decl(&(*_self_), _1acbe0967_s);
					_77017_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1acbe08e0:;
			++it;
			goto _iter_begin_1acbe08e0;
		}
		_iter_end_1acbe08e0:;
	}
	return _77017_obj;
}



inline jule::Str _1aa554487_func_head(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d98063_FnIns>& _78033_f,jule::Bool _78044_ptr) {
	jule::Str _78117_obj = jule::Str();
	if (((!(_78044_ptr)) && _1d581184b_OPT_INLINE) && (!(_1a8d957e1_is_entry_point(_78033_f.get()._field_decl.ptr())))) {
		_78117_obj+=jule::Str("inline ", 7);
	}
	_78117_obj+=static__1aa55de42_func_ins_result(_78033_f);
	if (_78044_ptr) {
		_78117_obj+=jule::Str("(*", 2);
		_78117_obj+=static__1aa4d972a_func_ins(_78033_f);
		_78117_obj+=jule::Str(")", 1);
	} else {
		_78117_obj+=jule::Str(" ", 1);
		_78117_obj+=static__1aa4d972a_func_ins(_78033_f);
	}
	return _78117_obj;
}



inline jule::Str _1aa55483e_func_decl(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d94db7_Fn>& _79833_f,jule::Bool _79841_ptr) {
	jule::Str _79917_obj = jule::Str();
	{
		auto &expr = _79833_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acbe51db:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1acbe5340_c = *it;
			{
				_79917_obj+=_1aa5205c9_indent(&(*_self_));
				_79917_obj+=_1aa554487_func_head(&(*_self_), _1acbe5340_c,_79841_ptr);
				_79917_obj+=_1aa551d7a_params_decls(&(*_self_), _1acbe5340_c.get()._field_params);
				_79917_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1acbe51db:;
			++it;
			goto _iter_begin_1acbe51db;
		}
		_iter_end_1acbe51db:;
	}
	return _79917_obj;
}



inline jule::Str _1aa554b4c_func_decls(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d05013_Package>& _81034_pkg) {
	jule::Str _81117_obj = jule::Str();
	{
		auto &expr = _81034_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acbe741e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1acbe7540_file = *it;
			{
				{
					auto &expr = _1acbe7540_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1acbe7b39:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1acbe7c05_f = *it;
						{
							if ((!(_1acbe7c05_f.get()._field_cpp_linked)) && (_1acbe7c05_f.get()._field_token != nullptr)) {
								_81117_obj+=_1aa55483e_func_decl(&(*_self_), _1acbe7c05_f,false);
							}
						}
						_iter_next_1acbe7b39:;
						++it;
						goto _iter_begin_1acbe7b39;
					}
					_iter_end_1acbe7b39:;
				}
			}
			_iter_next_1acbe741e:;
			++it;
			goto _iter_begin_1acbe741e;
		}
		_iter_end_1acbe741e:;
	}
	return _81117_obj;
}



inline void _1aa554d28_build_trait_map(_1aa51504c_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acbe91e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acbe929a_u = *it;
			{
				if ((!(_1acbe929a_u.get()._field_cpp_linked))) {
					_1aa552485_trait_decls(&(*_self_), _1acbe929a_u.get()._field_package);
				}
			}
			_iter_next_1acbe91e0:;
			++it;
			goto _iter_begin_1acbe91e0;
		}
		_iter_end_1acbe91e0:;
	}
	_1aa552485_trait_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
}



inline void _1aa555004_process_traits(_1aa51504c_ObjectCoder* _self_) {
	_1aa554d28_build_trait_map(&(*_self_));
}



inline jule::Str _1aa555268_decls(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _83717_obj = jule::Str();
	_83717_obj+=(*_self_)._field_trait_declarations;
	_83717_obj+=_1aa5526e9_structure_plain_decls(&(*_self_));
	_83717_obj+=_1aa5540d0_structure_decls(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acbec2c0:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acbec3ad_u = *it;
			{
				if ((!(_1acbec3ad_u.get()._field_cpp_linked))) {
					_83717_obj+=_1aa554b4c_func_decls(&(*_self_), _1acbec3ad_u.get()._field_package);
				}
			}
			_iter_next_1acbec2c0:;
			++it;
			goto _iter_begin_1acbec2c0;
		}
		_iter_end_1acbec2c0:;
	}
	_83717_obj+=_1aa554b4c_func_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
	if (((*_self_)._field_trait_map.len() > 0LL)) {
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_data_t;
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_wrappers;
		_83717_obj+=jule::Str("\n\n", 2);
		_83717_obj+=(*_self_)._field_trait_data;
	}
	return _83717_obj;
}



inline jule::Str _1aa555620_pkg_globals(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d05013_Package>& _86335_p,jule::Str& _86353_global_initializers) {
	jule::Str _86417_obj = jule::Str();
	{
		auto &expr = _86335_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acc00878:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1acc009cc_f = *it;
			{
				{
					auto &expr = _1acc009cc_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1acc010c6:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d2553e_Var> _1acc01192_v = *it;
						{
							if (((_1acc01192_v.get()._field_token != nullptr) && (!(_1acc01192_v.get()._field_cpp_linked))) && (!(_1acc01192_v.get()._field_constant))) {
								_86417_obj+=static__1aa55e728_kind(_1acc01192_v.get()._field_kind.get()._field_kind);
								_86417_obj+=jule::Str(" ", 1);
								if (_1acc01192_v.get()._field_reference) {
									_86417_obj+=jule::Str("&", 1);
								}
								_86417_obj+=static__1aa4da7e7_var(_1acc01192_v);
								_86417_obj+=jule::Str(";\n", 2);
								_86353_global_initializers+=_1aa5205c9_indent(&(*_self_));
								_86353_global_initializers+=static__1aa4da7e7_var(_1acc01192_v);
								if ((_1acc01192_v.get()._field_value != nullptr) && (_1acc01192_v.get()._field_value.get()._field_expr != nullptr)) {
									if (_1acc01192_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
										_86353_global_initializers+=jule::Str(" = ", 3);
										_86353_global_initializers+=_1aa4d436d_val((*_self_)._field_ec.ptr(), _1acc01192_v.get()._field_value);
									}
								} else {
									_86353_global_initializers+=jule::Str(" = ", 3);
									_86353_global_initializers+=_1aa4d467b_init_expr((*_self_)._field_ec.ptr(), _1acc01192_v.get()._field_kind.get()._field_kind);
								}
								_86353_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_1acc010c6:;
						++it;
						goto _iter_begin_1acc010c6;
					}
					_iter_end_1acc010c6:;
				}
			}
			_iter_next_1acc00878:;
			++it;
			goto _iter_begin_1acc00878;
		}
		_iter_end_1acc00878:;
	}
	return _86417_obj;
}



inline jule::Str _1aa55592d_globals(_1aa51504c_ObjectCoder* _self_,jule::Str& _89531_global_initializers) {
	jule::Str _89617_obj = jule::Str();
	_1aa51de35_add_indent(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acc06c03:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acc06d02_u = *it;
			{
				if ((!(_1acc06d02_u.get()._field_cpp_linked))) {
					_89617_obj+=_1aa555620_pkg_globals(&(*_self_), _1acc06d02_u.get()._field_package,_89531_global_initializers);
				}
			}
			_iter_next_1acc06c03:;
			++it;
			goto _iter_begin_1acc06c03;
		}
		_iter_end_1acc06c03:;
	}
	_89617_obj+=_1aa555620_pkg_globals(&(*_self_), (*_self_)._field_ir.get()._field_main,_89531_global_initializers);
	_1aa51edae_done_indent(&(*_self_));
	return _89617_obj;
}



inline jule::Str _1aa555c3b_func(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d94db7_Fn>& _90928_f) {
	jule::Str _91017_obj = jule::Str();
	{
		auto &expr = _90928_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acc08c27:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d98063_FnIns> _1acc08d48_ins = *it;
			{
				_91017_obj+=_1aa554487_func_head(&(*_self_), _1acc08d48_ins,false);
				_91017_obj+=_1aa537921_params_ins(&(*_self_), _1acc08d48_ins.get()._field_params);
				_91017_obj+=jule::Str(" ", 1);
				_91017_obj+=_1aa4511ca_func_scope((*_self_)._field_sc.ptr(), _1acc08d48_ins);
				if ((_1acc08d48_ins.get()._field_scope != nullptr)) {
					_91017_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1acc08c27:;
			++it;
			goto _iter_begin_1acc08c27;
		}
		_iter_end_1acc08c27:;
	}
	return _91017_obj;
}



inline jule::Str _1aa556049_pkg_funcs(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d05013_Package>& _92433_p) {
	jule::Str _92517_obj = jule::Str();
	{
		auto &expr = _92433_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acc0b6a8:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1acc0b7c9_f = *it;
			{
				{
					auto &expr = _1acc0b7c9_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1acc0bdc3:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> _1acc0be8e_f = *it;
						{
							if ((!(_1d5812ac2_TEST)) && _1aa5597bc_has_directive(_1acc0be8e_f.get()._field_directives,jule::Str("test", 4))) {
								goto _iter_next_1acc0bdc3;
							}
							if ((!(_1acc0be8e_f.get()._field_cpp_linked)) && (_1acc0be8e_f.get()._field_token != nullptr)) {
								_92517_obj+=_1aa555c3b_func(&(*_self_), _1acc0be8e_f);
								_92517_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_1acc0bdc3:;
						++it;
						goto _iter_begin_1acc0bdc3;
					}
					_iter_end_1acc0bdc3:;
				}
			}
			_iter_next_1acc0b6a8:;
			++it;
			goto _iter_begin_1acc0b6a8;
		}
		_iter_end_1acc0b6a8:;
	}
	return _92517_obj;
}



inline jule::Str _1aa556357_structure_methods(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _94141_s) {
	jule::Str _94217_obj = jule::Str();
	{
		auto &expr = _94141_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1acc0e3d1:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1acc0e502_f = *it;
			{
				_94217_obj+=_1aa5205c9_indent(&(*_self_));
				_94217_obj+=_1aa555c3b_func(&(*_self_), _1acc0e502_f);
				_94217_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1acc0e3d1:;
			++it;
			goto _iter_begin_1acc0e3d1;
		}
		_iter_end_1acc0e3d1:;
	}
	return _94217_obj;
}



inline jule::Str _1aa556665_structure_ostream(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _95241_s) {
	jule::Str _95317_obj = jule::Str();
	_95317_obj+=_1aa5205c9_indent(&(*_self_));
	_95317_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48);
	_95317_obj+=static__1aa4da2a8_structure_ins(_95241_s);
	_95317_obj+=jule::Str(" _Src) {\n", 9);
	_1aa51de35_add_indent(&(*_self_));
	_95317_obj+=_1aa5205c9_indent(&(*_self_));
	jule::Ptr<_1a8d94db7_Fn> _96117_fts = _1a8d8675a_find_method(_95241_s.ptr(), jule::Str("to_str", 6),false);
	if (static__1a9d2695d_to_str(_96117_fts)) {
		_95317_obj+=jule::Str("_Stream << ", 11);
		_95317_obj+=static__1aa4d9483_func(_96117_fts);
		_95317_obj+=jule::Str("(&_Src);\n", 9);
	} else {
		_95317_obj+=jule::Str("_Stream << \"", 12);
		_95317_obj+=_95241_s.get()._field_decl.get()._field_ident;
		_95317_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = _95241_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acc1400c:;
			if (it != expr.end()) {
				jule::I32 _1acc14051_i = it - expr.begin();
				jule::Ptr<_1a8d84e62_FieldIns> _1acc14260_f = *it;
				{
					_95317_obj+=_1aa5205c9_indent(&(*_self_));
					_95317_obj+=jule::Str("_Stream << \"", 12);
					_95317_obj+=_1acc14260_f.get()._field_decl.get()._field_ident;
					_95317_obj+=jule::Str(":", 1);
					jule::Ptr<_1a8d857c0_StructIns> _97821_strct = _1a9d9e211_strct(_1acc14260_f.get()._field_kind.ptr());
					if (((_97821_strct != nullptr) && (_97821_strct.get()._field_decl != nullptr)) && _97821_strct.get()._field_decl.get()._field_cpp_linked) {
						_95317_obj+=jule::Str(" cpp.", 5);
						_95317_obj+=static__1aa4da550_field(_1acc14260_f.get()._field_decl);
						_95317_obj+=jule::Str("\"", 1);
					} else {
						_95317_obj+=jule::Str("\" << _Src.", 10);
						_95317_obj+=static__1aa4da550_field(_1acc14260_f.get()._field_decl);
					}
					if ((_1acc14051_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_95241_s.get()._field_fields.len()))) {
						_95317_obj+=jule::Str(" << \", \"", 8);
					}
					_95317_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1acc1400c:;
				++it;
				_1acc14051_i++;
				goto _iter_begin_1acc1400c;
			}
			_iter_end_1acc1400c:;
		}
		_95317_obj+=_1aa5205c9_indent(&(*_self_));
		_95317_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_95317_obj+=_1aa5205c9_indent(&(*_self_));
	_95317_obj+=jule::Str("return _Stream;\n", 16);
	_1aa51edae_done_indent(&(*_self_));
	_95317_obj+=_1aa5205c9_indent(&(*_self_));
	_95317_obj+=jule::Str("}", 1);
	return _95317_obj;
}



inline jule::Str _1aa556973_structure_derive_defs(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _100645_s) {
	jule::Str _100717_obj = jule::Str();
	if (_1a8d8446c_is_derives(_100645_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_100717_obj+=_1aa5205c9_indent(&(*_self_));
		_100717_obj+=static__1aa4d7294_clone_func_def(_100645_s.get()._field_decl);
		_100717_obj+=jule::Str("{\n", 2);
		_1aa51de35_add_indent(&(*_self_));
		_100717_obj+=_1aa5205c9_indent(&(*_self_));
		_100717_obj+=static__1aa55d11c_structure_ins(_100645_s);
		_100717_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _100645_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1acc1b498:;
			if (it != expr.end()) {
				jule::Ptr<_1a8d84e62_FieldIns> _1acc1b520_f = *it;
				{
					jule::Str _101721_ident = static__1aa4da550_field(_1acc1b520_f.get()._field_decl);
					_100717_obj+=_1aa5205c9_indent(&(*_self_));
					_100717_obj+=jule::Str("clone.", 6);
					_100717_obj+=_101721_ident;
					_100717_obj+=jule::Str(" = jule::clone(this->", 21);
					_100717_obj+=_101721_ident;
					_100717_obj+=jule::Str(");\n", 3);
				}
				_iter_next_1acc1b498:;
				++it;
				goto _iter_begin_1acc1b498;
			}
			_iter_end_1acc1b498:;
		}
		_100717_obj+=_1aa5205c9_indent(&(*_self_));
		_100717_obj+=jule::Str("return clone;\n", 14);
		_1aa51edae_done_indent(&(*_self_));
		_100717_obj+=_1aa5205c9_indent(&(*_self_));
		_100717_obj+=jule::Str("}", 1);
	}
	return _100717_obj;
}



inline jule::Str _1aa556c81_structure_ins(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d857c0_StructIns>& _103537_s) {
	jule::Str _103617_obj = _1aa556357_structure_methods(&(*_self_), _103537_s);
	_103617_obj+=jule::Str("\n\n", 2);
	_103617_obj+=_1aa556973_structure_derive_defs(&(*_self_), _103537_s);
	_103617_obj+=jule::Str("\n\n", 2);
	_103617_obj+=_1aa556665_structure_ostream(&(*_self_), _103537_s);
	return _103617_obj;
}



inline jule::Str _1aa55708e_structure(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a8d82b41_Struct>& _104533_s) {
	jule::Str _104617_obj = jule::Str();
	{
		auto &expr = _104533_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1acc2147b:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d857c0_StructIns> _1acc2159c_ins = *it;
			{
				_104617_obj+=_1aa556c81_structure_ins(&(*_self_), _1acc2159c_ins);
				_104617_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1acc2147b:;
			++it;
			goto _iter_begin_1acc2147b;
		}
		_iter_end_1acc2147b:;
	}
	return _104617_obj;
}



inline jule::Str _1aa557303_structures(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _105617_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1acc22b75:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d82b41_Struct> _1acc22bec_s = *it;
			{
				if ((!(_1acc22bec_s.get()._field_cpp_linked)) && (_1acc22bec_s.get()._field_token != nullptr)) {
					_105617_obj+=_1aa55708e_structure(&(*_self_), _1acc22bec_s);
					_105617_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1acc22b75:;
			++it;
			goto _iter_begin_1acc22b75;
		}
		_iter_end_1acc22b75:;
	}
	return _105617_obj;
}



inline jule::Str _1aa557567_funcs(_1aa51504c_ObjectCoder* _self_) {
	jule::Str _106817_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acc249e0:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acc24abc_u = *it;
			{
				if ((!(_1acc24abc_u.get()._field_cpp_linked))) {
					_106817_obj+=_1aa556049_pkg_funcs(&(*_self_), _1acc24abc_u.get()._field_package);
				}
			}
			_iter_next_1acc249e0:;
			++it;
			goto _iter_begin_1acc249e0;
		}
		_iter_end_1acc249e0:;
	}
	_106817_obj+=_1aa556049_pkg_funcs(&(*_self_), (*_self_)._field_ir.get()._field_main);
	return _106817_obj;
}



inline void _1aa557886_push_init(_1aa51504c_ObjectCoder* _self_,jule::Ptr<_1a9d05013_Package>& _107829_pkg,jule::Str& _107849_obj) {
	
	{
		auto &expr = _107829_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acc26d88:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1acc26edc_file = *it;
			{
				{
					auto &expr = _1acc26edc_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1acc275d6:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d94db7_Fn> &_1acc276a2_f = *it;
						{
							if ((_1acc276a2_f.get()._field_ident == jule::Str("init", 4))) {
								_107849_obj+=jule::Str("\n\t", 2);
								_107849_obj+=static__1aa4d9483_func(_1acc276a2_f);
								_107849_obj+=jule::Str("();", 3);
							}
						}
						_iter_next_1acc275d6:;
						++it;
						goto _iter_begin_1acc275d6;
					}
					_iter_end_1acc275d6:;
				}
			}
			_iter_next_1acc26d88:;
			++it;
			goto _iter_begin_1acc26d88;
		}
		_iter_end_1acc26d88:;
	}
}



inline jule::Str _1aa557b94_init_caller(_1aa51504c_ObjectCoder* _self_,jule::Str& _109231_global_initializers) {
	jule::Str _109317_obj = jule::Str("void ", 5);
	_109317_obj+=jule::Str("__jule_call_initializers", 24);
	_109317_obj+=jule::Str("(void) {\n", 9);
	_109317_obj+=_109231_global_initializers;
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acc293eb:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1acc294c8_u = *it;
			{
				if ((!(_1acc294c8_u.get()._field_cpp_linked))) {
					_1aa557886_push_init(&(*_self_), _1acc294c8_u.get()._field_package,_109317_obj);
				}
			}
			_iter_next_1acc293eb:;
			++it;
			goto _iter_begin_1acc293eb;
		}
		_iter_end_1acc293eb:;
	}
	_1aa557886_push_init(&(*_self_), (*_self_)._field_ir.get()._field_main,_109317_obj);
	_109317_obj+=jule::Str("\n}", 2);
	return _109317_obj;
}



inline void _1aa557e19_append_standard(_1aa51504c_ObjectCoder* _self_,jule::Str& _111139_obj_code) {
	_1aa54c0d9_Time _111213_time = static__1aa54c67d_now();
	_1aa54b913_AbsTime _111313_abs = _1aa54dcbc_abs(&_111213_time);
	jule::Str _111517_time_str = jule::Str();
	_111517_time_str+=_1a9ba8834_fmt_uint(_111313_abs._field_day,10LL);
	_111517_time_str+=jule::Str("/", 1);
	_111517_time_str+=_1a9ba8834_fmt_uint(_111313_abs._field_month,10LL);
	_111517_time_str+=jule::Str("/", 1);
	_111517_time_str+=_1a9ba8834_fmt_uint(_111313_abs._field_year,10LL);
	_111517_time_str+=jule::Str(" ", 1);
	_111517_time_str+=_1a9ba8834_fmt_uint(_111313_abs._field_hour,10LL);
	_111517_time_str+=jule::Str(".", 1);
	_111517_time_str+=_1a9ba8834_fmt_uint(_111313_abs._field_minute,10LL);
	_111517_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _112717_s = jule::Str();
	_112717_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_112717_s+=jule::Str("// JuleC version: ", 18);
	_112717_s+=jule::Str("jule0.0.10", 10);
	_112717_s+=jule::Str("\n", 1);
	_112717_s+=jule::Str("// Date: ", 9);
	_112717_s+=_111517_time_str;
	_112717_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_112717_s+=(*_self_)._field_info._field_compiler;
	_112717_s+=jule::Str(" ", 1);
	_112717_s+=(*_self_)._field_info._field_compiler_command;
	_112717_s+=jule::Str("\n\n", 2);
	if (_1d580edbb_PRODUCTION) {
		_112717_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_1d5812c48_RC))) {
		_112717_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_1d5812e57_SAFETY))) {
		_112717_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_112717_s+=jule::Str("\n\n#include \"", 12);
	_112717_s+=_1d77ebe3e_PATH_API;
	_112717_s+=jule::Str("\"\n\n", 3);
	_112717_s+=_111139_obj_code;
	_112717_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_1d5812ac2_TEST) {
		_112717_s+=jule::Str("test_point();", 13);
	} else {
		_112717_s+=jule::Str("entry_point();", 14);
	}
	_112717_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_111139_obj_code=_112717_s;
}



inline jule::Str _1aa55817d_serialize(_1aa51504c_ObjectCoder* _self_) {
	_1aa5520de_prepare_structures(&(*_self_));
	_1aa555004_process_traits(&(*_self_));
	jule::Str _118217_global_initializers = jule::Str();
	jule::Str _118317_obj = jule::Str();
	_118317_obj+=_1aa51ba9d_links(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1aa555268_decls(&(*_self_));
	_118317_obj+=jule::Str("\n\n", 2);
	_118317_obj+=_1aa55592d_globals(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1aa557303_structures(&(*_self_));
	_118317_obj+=_1aa557567_funcs(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1aa557b94_init_caller(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	return _118317_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa51504c_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "trait_declarations:" << _Src._field_trait_declarations << ", ";
	_Stream << "trait_wrappers:" << _Src._field_trait_wrappers << ", ";
	_Stream << "trait_data:" << _Src._field_trait_data << ", ";
	_Stream << "trait_data_t:" << _Src._field_trait_data_t << ", ";
	_Stream << "trait_map:" << _Src._field_trait_map << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1bce27b17_IR>,jule::Slice<_1d77ca48e_Log>> static__1bd03aea0_build(jule::Str _2825_path,jule::I32 _2836_flags) {
	jule::Ptr<_1bce6e620_JuleImporter> _2917_importer = static__1bce2ca95_new(_1a8d4d69a_build_compile_info());
	jule::Slice<jule::Ptr<_1d7a43eaa_Ast>> _3018_files;
	jule::Slice<_1d77ca48e_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = _1bd024d24_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1a9d05013_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _1a9db5711_analyze_package(_3018_files,jule::Trait<_1a9ceeedb_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_1bce27b17_IR> _4517_ir = jule::new_ptr<_1bce27b17_IR>(_1bce27b17_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_1bce2e701_all_packages(_2917_importer.ptr()),_1bd03a5a9_OrderedDefines()));
	_4517_ir.get()._field_passes=_1a8d43c45_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1bd048078_append_structs(_1bce27b17_IR* _self_,jule::Ptr<_1a9d05013_Package>& _5734_p,jule::Slice<jule::Ptr<_1a8d82b41_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac81029b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac81039a_f = *it;
			{
				{
					auto &expr = _1ac81039a_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ac8107eb:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d82b41_Struct> _1ac810a71_s = *it;
						{
							if ((!(_1ac810a71_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_1ac810a71_s);
							}
						}
						_iter_next_1ac8107eb:;
						++it;
						goto _iter_begin_1ac8107eb;
					}
					_iter_end_1ac8107eb:;
				}
			}
			_iter_next_1ac81029b:;
			++it;
			goto _iter_begin_1ac81029b;
		}
		_iter_end_1ac81029b:;
	}
}



inline jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _1a8d2086a_get_all_structures(_1bce27b17_IR* _self_) {
	jule::Slice<jule::Ptr<_1a8d82b41_Struct>> _7017_buffer = nullptr;
	_1bd048078_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1ac8121e3:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac812347_u = *it;
			{
				if ((!(_1ac812347_u.get()._field_cpp_linked))) {
					_1bd048078_append_structs(&(*_self_), _1ac812347_u.get()._field_package,_7017_buffer);
				}
			}
			_iter_next_1ac8121e3:;
			++it;
			goto _iter_begin_1ac8121e3;
		}
		_iter_end_1ac8121e3:;
	}
	return _7017_buffer;
}



inline void _1a8d2bee7_order(_1bce27b17_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1a8d2086a_get_all_structures(&(*_self_));
	static__1a8d7be48_order_structures((*_self_)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1bce27b17_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1aa598b5d_parse_integer_0(_1aa59860d_ArgParser* _self_,jule::Str& _19032_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1acca3497:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1acca350d:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1acca2bc2:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1acca2c38:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if (_19032_s[0LL] == '0') {
			_case_begin_1acca2c9e:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1acca2b5b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1acca2a90:;
	}
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1aa598b5d_parse_integer_1(_1aa59860d_ArgParser* _self_,jule::Str& _19032_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1accac0b6:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1accac12c:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1accab7e1:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1d7728e59_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1accab857:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if (_19032_s[0LL] == '0') {
			_case_begin_1accab8bd:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1accab77a:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1accab6ae:;
	}
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1aa598dc2_get_data(_1aa59860d_ArgParser* _self_) {
	if (((*_self_)._field_i + 1LL) >= static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_args.len()))) {
		return jule::Str();
	}
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1aa599147_process_flag(_1aa59860d_ArgParser* _self_,jule::Trait<_1aa563e47_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1aa594b8c_Flag_3>>()) {
			_case_begin_1acc9ab21:;
			{
				jule::Ptr<_1aa594b8c_Flag_3> _22021_bf = _21736_flag.operator jule::Ptr<_1aa594b8c_Flag_3>();
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_1acc9a9cd:;
	}
	jule::Str _22513_data = _1aa598dc2_get_data(&(*_self_));
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1aa563e47_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa59442d_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	}
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1aa594b8c_Flag_0>>()) {
			_case_begin_1acc9c98b:;
			{
				jule::Ptr<_1aa594b8c_Flag_0> _23221_intf = _21736_flag.operator jule::Ptr<_1aa594b8c_Flag_0>();
				jule::Bool _23333_ok;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1aa598b5d_parse_integer_0(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)>([=](jule::Str _23372_s,jule::I32 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1a990d512_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aa563e47_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa59442d_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa594b8c_Flag_1>>()) {
			_case_begin_1acc9ca02:;
			{
				jule::Ptr<_1aa594b8c_Flag_1> _24021_uintf = _21736_flag.operator jule::Ptr<_1aa594b8c_Flag_1>();
				jule::Bool _24134_ok;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1aa598b5d_parse_integer_1(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)>([=](jule::Str _24173_s,jule::I32 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1a9833d61_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aa563e47_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa59442d_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa594b8c_Flag_2>>()) {
			_case_begin_1acc9ca68:;
			{
				jule::Ptr<_1aa594b8c_Flag_2> _24821_ff = _21736_flag.operator jule::Ptr<_1aa594b8c_Flag_2>();
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1a96c9058_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1aa563e47_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa59442d_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
						return jule::VoidExceptional(((jule::Str("--", 2) + _1aa563e47_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aa59442d_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa594b8c_Flag_4>>()) {
			_case_begin_1acc9cace:;
			{
				(*(_21736_flag.operator jule::Ptr<_1aa594b8c_Flag_4>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1acc9c01d:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1aa5993bc_single_dash(_1aa59860d_ArgParser* _self_,jule::Str& _25731_arg) {
	jule::Slice<jule::I32> _25813_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);
	{
		auto &expr = _25813_rarg;
		auto it = expr.begin();
		_iter_begin_1accb3364:;
		if (it != expr.end()) {
			jule::I32 &_1accb3452_r = *it;
			{
				jule::Trait<_1aa563e47_CommonFlag> _26021_flag = _1aa5969b3_find_flag_short(&(*_self_)._field_set, _1accb3452_r);
				if ((_26021_flag == nullptr)) {
					return jule::VoidExceptional((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1accb3452_r));
				}
				({
					auto except = _1aa599147_process_flag(&(*_self_), _26021_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1accb3364:;
			++it;
			goto _iter_begin_1accb3364;
		}
		_iter_end_1accb3364:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1aa599642_double_dash(_1aa59860d_ArgParser* _self_,jule::Str& _26931_arg) {
	jule::Trait<_1aa563e47_CommonFlag> _27017_flag = _1aa5966a5_find_flag(&(*_self_)._field_set, _26931_arg.slice(2LL));
	if ((_27017_flag == nullptr)) {
		return jule::VoidExceptional((_26931_arg + jule::Str(": flag is not exist", 19)));
	}
	({
		auto except = _1aa599147_process_flag(&(*_self_), _27017_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1aa59981d_try_arg(_1aa59860d_ArgParser* _self_) {
	jule::Str _27913_arg = (*_self_)._field_args[(*_self_)._field_i];
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();
	}
	if (_27913_arg[0LL] == '-') {
		if (((*_self_)._field_args.len() > 1LL) && (_27913_arg[1LL] == '-')) {
			({
				auto except = _1aa599642_double_dash(&(*_self_), _27913_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = _1aa5993bc_single_dash(&(*_self_), _27913_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_27913_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1aa5999e9_parse(_1aa59860d_ArgParser* _self_) {
	for (; (*_self_)._field_i < static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_args.len())); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1aa59981d_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1accba448:;
	}
	_iter_end_1accba448:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1aa59860d_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d5811d9b_push_opt_level(jule::I32 _3323_level) {
	_1d5811230_OPT_COPY=_3323_level >= static_cast<jule::I32>(1LL);
	_1d581131d_OPT_DEADCODE=_3323_level >= static_cast<jule::I32>(1LL);
	_1d581140b_OPT_APPEND=_3323_level >= static_cast<jule::I32>(1LL);
	_1d581154e_OPT_MATH=_3323_level >= static_cast<jule::I32>(1LL);
	_1d58116c5_OPT_ACCESS=_3323_level >= static_cast<jule::I32>(1LL);
	_1d581184b_OPT_INLINE=_3323_level >= static_cast<jule::I32>(1LL);
	_1d5811a5a_OPT_PTR=_3323_level >= static_cast<jule::I32>(1LL);
	_1d5811bd1_OPT_COND=_3323_level >= static_cast<jule::I32>(1LL);
}



inline jule::I32 _1d664c7c9_decode_rune(jule::I32 _6820_r1,jule::I32 _6830_r2) {
	if ((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL)) {
		return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_6820_r1 - 55296LL)))) << 10LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_6830_r2 - 56320LL)))))) + 65536LL));
	}
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1d664ca71_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if ((_7824_r < 65536LL) || (_7824_r > 1114111LL)) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	}
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>(55296LL + static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_7824_r >> 10LL)))) & 1023LL))));
	_7845_r2 = static_cast<jule::I32>(56320LL + static_cast<jule::I32>(static_cast<jule::I32>((_7824_r & 1023LL))));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _1d664d104_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(static_cast<jule::I32>(_11915_s.len()));
	jule::I32 _12113_n = 0LL;
	jule::I32 _12213_i = 0LL;
	for (; _12213_i < static_cast<jule::I32>(static_cast<jule::I32>(_11915_s.len())); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];
			{
				
				if ((_12413_r < 55296LLU) || 57344LL <= _12413_r) {
					_case_begin_1aa5ae03b:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if ((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_11915_s.len())))) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU)) {
					_case_begin_1aa5adb95:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1d664c7c9_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1aa5ad821:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1aa5ad7aa:;
			}
			(_12113_n)++;
		}
	_iter_next_1aa5a8a08:;
	}
	_iter_end_1aa5a8a08:;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _1d664d445_append_rune(jule::Slice<jule::U16> _14924_a,jule::I32 _14934_r) {
	{
		
		if ((0LL <= _14934_r) && (_14934_r < 55296LL) || (57344LL <= _14934_r) && (_14934_r < 65536LL)) {
			_case_begin_1aa5b2407:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if ((65536LL <= _14934_r) && (_14934_r <= 1114111LL)) {
			_case_begin_1aa5b246d:;
			{
				jule::I32 _15614_r1;
				jule::I32 _15618_r2;
				std::tie(_15614_r1,_15618_r2) = _1d664ca71_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1aa5ad06d:;
	}
	return jule::append(_14924_a,jule::Slice<jule::U16>({65533LLU}));
}



inline jule::Slice<jule::U16> _1d6637594_utf16_from_str(jule::Str _1423_s) {
	
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::I32>(_209_runes.len()));
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1aa5c0910:;
		if (it != expr.end()) {
			jule::I32 &_1aa5c0459_r = *it;
			{
				if ((_1aa5c0459_r == 0LL)) {
					goto _iter_end_1aa5c0910;
				}
				_2113_buff=_1d664d445_append_rune(_2113_buff,_1aa5c0459_r);
			}
			_iter_next_1aa5c0910:;
			++it;
			goto _iter_begin_1aa5c0910;
		}
		_iter_end_1aa5c0910:;
	}
	return _1d664d445_append_rune(_2113_buff,0LL);
}



inline jule::Str _1d66434a1_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _3813_code_page = _3421_s;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1aa5c20c6:;
		if (it != expr.end()) {
			jule::I32 _1aa5c21d6_i = it - expr.begin();
			jule::U16 &_1aa5c2428_v = *it;
			{
				if ((_1aa5c2428_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_1aa5c21d6_i);
					goto _iter_end_1aa5c20c6;
				}
			}
			_iter_next_1aa5c20c6:;
			++it;
			_1aa5c21d6_i++;
			goto _iter_begin_1aa5c20c6;
		}
		_iter_end_1aa5c20c6:;
	}
	return static_cast<jule::Str>(_1d664d104_decode(_3813_code_page));
}



inline jule::Str _1d663c28b_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _5513_code_page = nullptr;
	jule::I32 _5613_i = 0LL;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1d664d104_decode(_5513_code_page));
			}
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);
		}
	_iter_next_1aa5c26ae:;
	}
	_iter_end_1aa5c26ae:;
	return jule::Str();
}



inline jule::I32 _1d59cdd7b_get_last_errno(void) {
	return errno;
}



inline jule::U32 _1d664e28c_get_std_handle(jule::U32 _5423_stdh) {
	return static_cast<jule::U32>(((jule::U32)(GetStdHandle(_5423_stdh))));
}



inline jule::I32 _1d664e501_wstat(jule::U16* _5821_path,struct stat* _5837_stat) {
	return static_cast<jule::I32>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I32 _1d664e7cb__wopen(jule::U16* _6322_path,jule::I32 _6334_flag,jule::I32 _6345_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _1d664e9c9_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1d664ed1a_get_current_directory(jule::U32 _7237_bufflen,jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _1d6650359_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _1d6650601_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _1d6650898_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _1d6650b40__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _1d6650dd7__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I32 _1d665117e__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I32>(_wclosedir(_10430_dir));
}



inline jule::U32 _1d6651855_get_full_path_name(jule::U16* _10734_path,jule::U32 _10746_bufflen,jule::U16* _1085_buff,jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _1d6651b96_get_console_mode(jule::U32 _11325_handle,jule::I32& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _1d6651ed7_set_console_mode(jule::U32 _11825_handle,jule::I32 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _1d6652515_write_console(jule::U32 _12329_handle,jule::U16* _12345_buffer,jule::I32 _12359_to_write,jule::I32& _12410_written,void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _1d6652a43_read_console(jule::U32 _13028_handle,jule::U16* _13048_buffer,jule::I32 _13062_to_read,jule::I32& _13110_readed,void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I32 _1d6654d75_seek(jule::I32 _2613_handle,jule::I32 _2626_offset,jule::I32 _2639_origin) {
	return static_cast<jule::I32>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I32 _1d6655260_read(jule::I32 _3120_handle,void* _3137_buff,jule::U32 _3152_n) {
	return static_cast<jule::I32>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I32 _1d6655590_close(jule::I32 _3614_handle) {
	return static_cast<jule::I32>(close(_3614_handle));
}



inline jule::I32 _1d665597a_write(jule::I32 _3921_handle,void* _3934_buff,jule::U32 _3949_n) {
	return static_cast<jule::I32>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1d6655b89_exit(jule::I32 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I32> _1d6733915_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I32 _18242_size = jule::I32();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1d6732837_FIRST[static_cast<jule::I32>(_1869_p0)];
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>((_1879_x << 31LLU))) >> 31LLU));
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL]))) & static_cast<jule::I32>(static_cast<jule::I32>((~(_19213_mask)))))) | static_cast<jule::I32>(static_cast<jule::I32>(65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));
	_1d6732da9_accept_range _1969_accept = _1d673312e_ACCEPT_RANGES[static_cast<jule::I32>((_1879_x >> 4LLU))];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 31LLU)))) << 6LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 15LLU)))) << 12LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 7LLU)))) << 18LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 12LL))))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2149_b3 & 63LLU)))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I32> _1d6733e98_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I32 _27647_size = jule::I32();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I32 _2809_end = _27625_p.len();
	jule::I32 _28113_start = (_2809_end - 1LL);
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I32 _28913_lim = (_2809_end - 4LL);
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1d6735829_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1aa649071;
			}
		}
	_iter_next_1aa649071:;
	}
	_iter_end_1aa649071:;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1d6733915_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I32 _1d67344d7_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1aa651221:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1aa650d69:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1aa650de1:;
			{
				return 2LL;
			}
		}
		else if ((55296LL <= _35217_r) && (_35217_r <= 57343LL)) {
			_case_begin_1aa650ece:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1aa651045:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1aa6510ab:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1aa650907:;
			{
				return -1LL;
			}
		}
		_match_end_1aa65085d:;
	}
}



inline jule::I32 _1d67348b1_encode_rune(jule::Slice<jule::U8> _37424_p,jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1aa653cd4:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1aa656996:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || (55296LL <= _3769_i) && (_3769_i <= 57343LLU)) {
			_case_begin_1aa656a0c:;
			{
				_37439_r=65533LL;
				goto _case_begin_1aa653a09;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1aa653a09:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 12LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))) & 63LLU))));
				_37424_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 3LL;
			}
		}
		else {
			_case_begin_1aa653993:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 18LL)))));
				_37424_p[1LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 12LL)))) & 63LLU))));
				_37424_p[2LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_37439_r >> 6LL)))) & 63LLU))));
				_37424_p[3LL]=static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_37439_r))) & 63LLU))));
				return 4LL;
			}
		}
		_match_end_1aa6538b6:;
	}
}



inline jule::Slice<jule::U8> _1d6734c02_append_rune(jule::Slice<jule::U8> _40524_p,jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	}
	return _1d6735043_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _1d6735043_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p,jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1aa6605e8:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || (55296LL <= _4149_i) && (_4149_i <= 57343LLU)) {
			_case_begin_1aa65ccdd:;
			{
				_41245_r=65533LL;
				goto _case_begin_1aa65cd54;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1aa65cd54:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 12LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		else {
			_case_begin_1aa65cc77:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 18LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 12LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_41245_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_41245_r))) & 63LLU))))}));
			}
		}
		_match_end_1aa65cbbc:;
	}
}



inline jule::I32 _1d6735582_rune_count_str(jule::Str _47323_s) {
	jule::I32 _47333_n = jule::I32();
	jule::I32 _47413_i = 0LL;
	for (; _47413_i < static_cast<jule::I32>(static_cast<jule::I32>(_47323_s.len())); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1aa669c73;
			}
			jule::U8 _48213_x = _1d6732837_FIRST[static_cast<jule::I32>(_47617_c)];
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1aa669c73;
			}
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));
			if ((_47413_i + _48717_size) > static_cast<jule::I32>(static_cast<jule::I32>(_47323_s.len()))) {
				(_47413_i)++;
				goto _iter_next_1aa669c73;
			}
			_1d6732da9_accept_range _49213_accept = _1d673312e_ACCEPT_RANGES[static_cast<jule::I32>((_48213_x >> 4LLU))];
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if ((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c)) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if ((_47617_c < 128LLU) || (191LL < _47617_c)) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if ((_47617_c < 128LLU) || (191LL < _47617_c)) {
						_48717_size=1LL;
					}
				}
			}
			_47413_i+=_48717_size;
		}
	_iter_next_1aa669c73:;
	}
	_iter_end_1aa669c73:;
	return _47333_n;
}



inline jule::Bool _1d6735829_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I32 _1d67d7623_get_last_os_error_windows(void) {
	jule::U32 _169_err = _1d664e9c9_get_last_error();
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa695078:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aa6950de:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aa694a8e:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aa694b05:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else {
			_case_begin_1aa69274b:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		_match_end_1aa69199d:;
	}
}



inline jule::Slice<jule::Str> _1d67db704_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1d67dbb44_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1d67dc57e___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1d67dc57e___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();
	jule::U32 _169_n = _1d664ed1a_get_current_directory(261LLU,(&(_1513_buff[0LL])));
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_1d67d7623_get_last_os_error_windows());
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_1d663c28b_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _1d686e237_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	}
}



inline jule::Bool _1d773155a_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1d776556c__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	}
	return _1d776b85e_is_excluding_latin(_1d7736b59_LETTER,_7618_r);
}



inline jule::Bool _1d776ad03_is16(jule::Slice<_1d77691b9_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1aabe3175:;
			if (it != expr.end()) {
				jule::I32 _1aabe3395_i = it - expr.begin();
				{
					_1d77691b9_Range16* _19417_range = (&(_1919_ranges[_1aabe3395_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1aabe3175:;
				++it;
				_1aabe3395_i++;
				goto _iter_begin_1aabe3175;
			}
			_iter_end_1aabe3175:;
		}
		return false;
	}
	jule::I32 _20813_lo = 0LL;
	jule::I32 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::I32 _21113_m = _20813_lo + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_20913_hi - _20813_lo))) >> 1LLU));
			_1d77691b9_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LLU);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				}
			}
		}
	_iter_next_1aabe178e:;
	}
	_iter_end_1aabe178e:;
	return false;
}



inline jule::Bool _1d776b144_is32(jule::Slice<_1d7769681_Range32> _2289_ranges,jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1aabe938a:;
			if (it != expr.end()) {
				jule::I32 _1aabe94ab_i = it - expr.begin();
				{
					_1d7769681_Range32* _23117_range = (&(_2289_ranges[_1aabe94ab_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1aabe938a:;
				++it;
				_1aabe94ab_i++;
				goto _iter_begin_1aabe938a;
			}
			_iter_end_1aabe938a:;
		}
		return false;
	}
	jule::I32 _24513_lo = 0LL;
	jule::I32 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::I32 _24813_m = _24513_lo + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_24613_hi - _24513_lo))) >> 1LLU));
			_1d7769681_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LLU);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				}
			}
		}
	_iter_next_1aabe70e1:;
	}
	_iter_end_1aabe70e1:;
	return false;
}



inline jule::Bool _1d776b85e_is_excluding_latin(jule::Ptr<_1d7769b04_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1d77691b9_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;
		jule::I32 _28213_off = _27823_range_tab.get()._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi))))) {
			return _1d776ad03_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_1d7769681_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo))))) {
		return _1d776b144_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline jule::Str _1d68791dc_repeat(jule::Str _1415_s,jule::I32 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	}
	jule::Str _1913_ss = _1415_s;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1aac2410c:;
	}
	_iter_end_1aac2410c:;
	return _1913_ss;
}



inline jule::Bool _1d770aa84__has_prefix(jule::Str& _2617_s,jule::Str& _2626_sub,jule::I32 _2640_start) {
	if ((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < static_cast<jule::I32>(static_cast<jule::I32>(_2626_sub.len())))) {
		return false;
	}
	jule::I32 _3113_i = 0LL;
	for (; _3113_i < static_cast<jule::I32>(static_cast<jule::I32>(_2626_sub.len())); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I32>((_3113_i + 1LL)),static_cast<jule::I32>((_2640_start + 1LL)))) {
		{
			if (_2617_s[_2640_start] != _2626_sub[_3113_i]) {
				return false;
			}
		}
	_iter_next_1aac26609:;
	}
	_iter_end_1aac26609:;
	return true;
}



inline jule::Bool _1d7728e59_has_prefix(jule::Str _4119_s,jule::Str _4127_sub) {
	return _1d770aa84__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _1d772564d__has_suffix(jule::Str& _4517_s,jule::Str& _4526_sub,jule::I32 _4540_start) {
	if ((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < static_cast<jule::I32>(static_cast<jule::I32>(_4526_sub.len())))) {
		return false;
	}
	_4540_start=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_4517_s.len())) - _4540_start);
	jule::I32 _5113_i = 0LL;
	for (; _5113_i < static_cast<jule::I32>(static_cast<jule::I32>(_4526_sub.len())); (_5113_i)++) {
		{
			if (_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)]) {
				return false;
			}
		}
	_iter_next_1aac28397:;
	}
	_iter_end_1aac28397:;
	return true;
}



inline jule::Bool _1d770b106_has_suffix(jule::Str _6119_s,jule::Str _6127_sub) {
	return _1d772564d__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I32 _1d770b634_find_at(jule::Str _6916_s,jule::Str _6924_sub,jule::I32 _6938_i) {
	if (((_6938_i < 0LL) || (_6916_s.len() < static_cast<jule::I32>(static_cast<jule::I32>(_6924_sub.len())))) || (_6924_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6938_i < static_cast<jule::I32>(static_cast<jule::I32>(_6916_s.len())); (_6938_i)++) {
		{
			if (_1d770aa84__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			}
		}
	_iter_next_1aac2cd3b:;
	}
	_iter_end_1aac2cd3b:;
	return -1LL;
}



inline jule::I32 _1d687dae8_find_last_at(jule::Str _9221_s,jule::Str _9229_sub,jule::I32 _9239_i) {
	jule::I32 _9313_j = ((_9239_i - static_cast<jule::I32>(static_cast<jule::I32>(_9229_sub.len()))) + 1LL);
	if ((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= static_cast<jule::I32>(static_cast<jule::I32>(_9221_s.len())))) || (_9313_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I32 _9917_k = _9313_j;
			jule::I32 _10017_z = 0LL;
			for (; _10017_z < static_cast<jule::I32>(static_cast<jule::I32>(_9229_sub.len())); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I32>((_9917_k + 1LL)),static_cast<jule::I32>((_10017_z + 1LL)))) {
				{
					if (_9221_s[_9917_k] != _9229_sub[_10017_z]) {
						goto _iter_next_1aac2ee2b;
					}
				}
			_iter_next_1aac31dea:;
			}
			_iter_end_1aac31dea:;
			return _9313_j;
		}
	_iter_next_1aac2ee2b:;
	}
	_iter_end_1aac2ee2b:;
	return -1LL;
}



inline jule::I32 _1d687dc2a_find_last(jule::Str _11418_s,jule::Str _11426_sub) {
	return static_cast<jule::I32>(_1d687dae8_find_last_at(_11418_s,_11426_sub,static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_11418_s.len())) - 1LL))));
}



inline jule::I32 _1d749e0ca__find_rune(jule::Slice<jule::U8>& _17016_s,jule::I32 _17027_r) {
	jule::I32 _17113_i = 0LL;
	while (_17113_i < static_cast<jule::I32>(static_cast<jule::I32>(_17016_s.len()))) {
		{
			jule::I32 _17314_br;
			jule::I32 _17318_n;
			std::tie(_17314_br,_17318_n) = _1d6733915_decode_rune(_17016_s.slice(_17113_i));
			if (_17027_r == _17314_br) {
				return _17113_i;
			}
			_17113_i+=_17318_n;
		}
	_iter_next_1aac3a84e:;
	}
	_iter_end_1aac3a84e:;
	return -1LL;
}



inline jule::I32 _1d749e570_find_last_byte(jule::Str _19723_s,jule::U8 _19731_b) {
	jule::I32 _19813_i = (_19723_s.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if (_19723_s[_19813_i] == _19731_b) {
				return _19813_i;
			}
		}
	_iter_next_1aac3c554:;
	}
	_iter_end_1aac3c554:;
	return -1LL;
}



inline jule::I32 _1d749ea48_find_any(jule::Str _23817_s,jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _1d686e237_stobs(_23817_s);
	jule::Slice<jule::U8> _24013_rb = _1d686e237_stobs(_23825_runes);
	jule::I32 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I32>(static_cast<jule::I32>(_2399_sb.len()))) {
		{
			jule::I32 _24314_r;
			jule::I32 _24317_n;
			std::tie(_24314_r,_24317_n) = _1d6733915_decode_rune(_2399_sb.slice(_24113_i));
			if ((_1d749e0ca__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			}
			_24113_i+=_24317_n;
		}
	_iter_next_1aac4258c:;
	}
	_iter_end_1aac4258c:;
	return -1LL;
}



inline jule::Slice<jule::Str> _1d749ecac_split(jule::Str _27214_s,jule::Str _27222_sub,jule::I32 _27236_n) {
	jule::I32 _27313_cap = _27236_n;
	if ((_27236_n < 0LL)) {
		_27313_cap=16LL;
	}
	jule::Slice<jule::Str> _27713_parts = jule::Slice<jule::Str>::alloc(0LL,_27313_cap);
	if ((_27236_n == 0LL)) {
		return _27713_parts;
	}
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I32>(_27214_s.len());
	}
	jule::I32 _28413_i = 0LL;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I32 _28613_j = _1d770b634_find_at(_27214_s,_27222_sub,_28413_i);
			if ((_28613_j == -1LL)) {
				goto _iter_end_1aac48e56;
			}
			_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i,_28613_j));
			_28413_i=static_cast<jule::I32>(_28613_j + static_cast<jule::I32>(static_cast<jule::I32>(_27222_sub.len())));
		}
	_iter_next_1aac48e56:;
	}
	_iter_end_1aac48e56:;
	if ((_27236_n > 0LL) && (_28413_i < static_cast<jule::I32>(static_cast<jule::I32>(_27214_s.len())))) {
		_27713_parts = jule::alloc_for_append(_27713_parts,1);_27713_parts.__push(_27214_s.slice(_28413_i));
	}
	return _27713_parts;
}



inline jule::Bool _1d749edde_contains(jule::Str _30017_s,jule::Str _30025_sub) {
	return (_1d770b634_find_at(_30017_s,_30025_sub,0LL) != -1LL);
}



inline jule::Bool _1d770bdc6_contains_any(jule::Str _31621_s,jule::Str _31629_runes) {
	return (_1d749ea48_find_any(_31621_s,_31629_runes) != -1LL);
}



inline jule::Str _1d776bed0_replace(jule::Str _34216_s,jule::Str _34224_sub,jule::Str _34234_new,jule::I32 _34248_n) {
	if ((_34248_n == 0LL) || (_34224_sub == _34234_new)) {
		return _34216_s;
	}
	if ((_34248_n < 0LL)) {
		_34248_n=static_cast<jule::I32>(_34216_s.len());
	}
	jule::Str _35113_ss = jule::Str();
	jule::I32 _35213_i = 0LL;
	for (; (_34248_n > 0LL); (_34248_n)--) {
		{
			jule::I32 _35413_j = _1d770b634_find_at(_34216_s,_34224_sub,_35213_i);
			if ((_35413_j == -1LL)) {
				goto _iter_end_1aac52b41;
			}
			_35113_ss+=_34216_s.slice(_35213_i,_35413_j);
			_35113_ss+=_34234_new;
			_35213_i=static_cast<jule::I32>(_35413_j + static_cast<jule::I32>(static_cast<jule::I32>(_34224_sub.len())));
		}
	_iter_next_1aac52b41:;
	}
	_iter_end_1aac52b41:;
	_35113_ss+=_34216_s.slice(_35213_i);
	return _35113_ss;
}



inline void _1d749e33e__trim_left(jule::Slice<jule::U8>& _39420_s,jule::Slice<jule::U8>& _39432_cutset) {
	jule::I32 _39513_i = 0LL;
	while (_39513_i < static_cast<jule::I32>(static_cast<jule::I32>(_39420_s.len()))) {
		{
			jule::I32 _39714_r;
			jule::I32 _39717_n;
			std::tie(_39714_r,_39717_n) = _1d6733915_decode_rune(_39420_s.slice(_39513_i));
			if ((_1d749e0ca__find_rune(_39432_cutset,_39714_r) == -1LL)) {
				_39420_s=_39420_s.slice(_39513_i);
				return;
			}
			_39513_i+=_39717_n;
		}
	_iter_next_1aac57d66:;
	}
	_iter_end_1aac57d66:;
	_39420_s=nullptr;
}



inline jule::Str _1d776c92b_trim_left(jule::Str _40918_s,jule::Str _40926_cutset) {
	jule::Slice<jule::U8> _41013_bytes = _1d686e237_stobs(_40918_s);
	jule::Slice<jule::U8> _4119_bcutset = _1d686e237_stobs(_40926_cutset);
	_1d749e33e__trim_left(_41013_bytes,_4119_bcutset);
	return static_cast<jule::Str>(_41013_bytes);
}



inline void _1d776ca5d__trim_right(jule::Slice<jule::U8>& _41621_s,jule::Slice<jule::U8>& _41633_cutset) {
	jule::I32 _41713_i = _41621_s.len();
	while ((_41713_i > 0LL)) {
		{
			jule::I32 _41914_r;
			jule::I32 _41917_n;
			std::tie(_41914_r,_41917_n) = _1d6733e98_decode_last_rune(_41621_s.slice(0LL,_41713_i));
			if ((_1d749e0ca__find_rune(_41633_cutset,_41914_r) == -1LL)) {
				_41621_s=_41621_s.slice(0LL,_41713_i);
				return;
			}
			_41713_i-=_41917_n;
		}
	_iter_next_1aac5add0:;
	}
	_iter_end_1aac5add0:;
	_41621_s=nullptr;
}



inline jule::Str _1d776ccc2_trim(jule::Str _44013_s,jule::Str _44021_cutset) {
	jule::Slice<jule::U8> _44113_bytes = _1d686e237_stobs(_44013_s);
	jule::Slice<jule::U8> _4429_bcutset = _1d686e237_stobs(_44021_cutset);
	_1d749e33e__trim_left(_44113_bytes,_4429_bcutset);
	_1d776ca5d__trim_right(_44113_bytes,_4429_bcutset);
	return static_cast<jule::Str>(_44113_bytes);
}



inline jule::Bool _1d67b636b_is_path_sep(jule::U8 _4820_c) {
	return (_4820_c == 92LLU) || (_4820_c == '/');
}



inline jule::Bool _1d67b44bd_is_slash(jule::U8 _5213_c) {
	return (_5213_c == '\\') || (_5213_c == '/');
}



inline jule::U8 _1d67b4600_to_upper(jule::U8 _5413_c) {
	if (('a' <= _5413_c) && (_5413_c <= 'z')) {
		return static_cast<jule::U8>(_5413_c - ('a' - 'A'));
	}
	return _5413_c;
}



inline jule::I32 _1d67b429d_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	}
	jule::U8 _879_c = _8220_path[0LL];
	if ((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z')))) {
		return 2LL;
	}
	if ((!(_1d67b44bd_is_slash(_8220_path[0LL]))) || (!(_1d67b44bd_is_slash(_8220_path[1LL])))) {
		return 0LL;
	}
	jule::Str _9510_p1;
	jule::Str _9518_rest;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1d67b207b_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();
	jule::Bool _9713_ok = false;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1d67b207b_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8220_path.len());
	}
	if ((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1))) {
		return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_8220_path.len())) - static_cast<jule::I32>(static_cast<jule::I32>(_9518_rest.len())))) - 1LL));
	}
	if ((((_9613_p2.len() == 3LL) && (_1d67b4600_to_upper(_9613_p2[0LL]) == 'U')) && (_1d67b4600_to_upper(_9613_p2[1LL]) == 'N')) && (_1d67b4600_to_upper(_9613_p2[2LL]) == 'C')) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1d67b207b_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1d67b207b_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8220_path.len());
		}
	}
	return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_8220_path.len())) - static_cast<jule::I32>(static_cast<jule::I32>(_9518_rest.len())))) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1d67b207b_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1aac7dd8c:;
		if (it != expr.end()) {
			jule::I32 _1aac7de7a_i = it - expr.begin();
			{
				if (_1d67b44bd_is_slash(_11913_path[_1aac7de7a_i])) {
					_11926_before = _11913_path.slice(0LL,_1aac7de7a_i);
					_11939_after = _11913_path.slice((_1aac7de7a_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				}
			}
			_iter_next_1aac7dd8c:;
			++it;
			_1aac7de7a_i++;
			goto _iter_begin_1aac7dd8c;
		}
		_iter_end_1aac7dd8c:;
	}
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _1d67b2323_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _1d6637594_utf16_from_str(_12814_name);
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));
	jule::U32 _13113_n = 100LLU;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n));
			_13113_n=static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_1d6651855_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr))));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			}
			if (_13113_n <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())))) {
				_12827_path = _1d66434a1_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I32>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			}
		}
	_iter_next_1aac81554:;
	}
	_iter_end_1aac81554:;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1d67b2653___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	}
	std::tie(_14514_path,_14532_ok) = _1d67b2323_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	}
	_14532_ok = true;
	return std::make_tuple(_1d683420d_clean(_14514_path),_14532_ok);
}



inline jule::Str _1d67b28ea___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();
	jule::U8 _16113_last_char = 0LLU;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1aac870a4:;
		if (it != expr.end()) {
			jule::Str _1aac870e8_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1aac87aee:;
					}
					else if (_1d67b44bd_is_slash(_16113_last_char)) {
						_case_begin_1aac877e1:;
						{
							while ((_1aac870e8_e.len() > 0LL) && _1d67b44bd_is_slash(_1aac870e8_e[0LL])) {
								{
									(_1aac870e8_e).mut_slice(1LL);
								}
							_iter_next_1aac8879d:;
							}
							_iter_end_1aac8879d:;
						}
					}
					else if (_16113_last_char == ':') {
						_case_begin_1aac87857:;
					}
					else {
						_case_begin_1aac8777a:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1aac876ae:;
				}
				if ((_1aac870e8_e.len() > 0LL)) {
					_16013_s+=_1aac870e8_e;
					_16113_last_char=_1aac870e8_e[(_1aac870e8_e.len() - 1LL)];
				}
			}
			_iter_next_1aac870a4:;
			++it;
			goto _iter_begin_1aac870a4;
		}
		_iter_end_1aac870a4:;
	}
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	}
	return _1d683420d_clean(_16013_s);
}



inline jule::Str _1d683420d_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::I32 _1109_vol_len = _1d67b429d_volume_name_len(_10818_path);
	(_10818_path).mut_slice(_1109_vol_len);
	if (_10818_path.empty()) {
		if (((_1109_vol_len > 1LL) && _1d67b636b_is_path_sep(_1099_original_path[0LL])) && _1d67b636b_is_path_sep(_1099_original_path[1LL])) {
			return _1d6842738_from_slash(_1099_original_path);
		}
		return (_1099_original_path + jule::Str(".", 1));
	}
	jule::Bool _1199_rooted = _1d67b636b_is_path_sep(_10818_path[0LL]);
	jule::I32 _1269_n = _10818_path.len();
	_1d6824572_LazyBuff _12713_out = _1d6824572_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I32(),_1099_original_path,_1109_vol_len);
	jule::I32 _13214_r = 0LL;
	jule::I32 _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1d682b4e1_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_1d67b636b_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1aac94886:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1d67b636b_is_path_sep(_10818_path[(_13214_r + 1LL)]))) {
					_case_begin_1aac95469:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1d67b636b_is_path_sep(_10818_path[(_13214_r + 2LL)]))) {
					_case_begin_1aac954d0:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_1aac98417:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_1d67b636b_is_path_sep(static_cast<jule::U8>(_1d682782d_index(&_12713_out, _12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1aac9913d:;
									}
									_iter_end_1aac9913d:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1aac9878b:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1d682b4e1_append(&_12713_out, 92LLU);
									}
									_1d682b4e1_append(&_12713_out, '.');
									_1d682b4e1_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1aac9834b:;
						}
					}
				}
				else {
					_case_begin_1aac90541:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_1d682b4e1_append(&_12713_out, 92LLU);
						}
						if (((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL)) {
							jule::I32 _17525_i = _13214_r;
							for (; (_17525_i < _1269_n) && (!(_1d67b636b_is_path_sep(_10818_path[_17525_i]))); (_17525_i)++) {
								{
									if (_10818_path[_17525_i] == ':') {
										_1d682b4e1_append(&_12713_out, '.');
										_1d682b4e1_append(&_12713_out, 92LLU);
										goto _iter_end_1aac91eb0;
									}
								}
							_iter_next_1aac91eb0:;
							}
							_iter_end_1aac91eb0:;
						}
						for (; (_13214_r < _1269_n) && (!(_1d67b636b_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_1d682b4e1_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1aac944e0:;
						}
						_iter_end_1aac944e0:;
					}
				}
				_match_end_1aac90497:;
			}
		}
	_iter_next_1aac9009b:;
	}
	_iter_end_1aac9009b:;
	if ((_12713_out._field_w == 0LL)) {
		_1d682b4e1_append(&_12713_out, '.');
	}
	return _1d6842738_from_slash(_1d682e604_string(&_12713_out));
}



inline jule::Str _1d6842738_from_slash(jule::Str _21119_path) {
	if (92LL == '/') {
		return _21119_path;
	}
	return _1d776bed0_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1d685188a_join(jule::Slice<jule::Str> _22513_elem) {
	return _1d67b28ea___join(_22513_elem);
}



inline jule::Str _1d685245c_ext(jule::Str _23012_path) {
	jule::I32 _23113_i = (_23012_path.len() - 1LL);
	for (; (_23113_i >= 0LL) && (!(_1d67b636b_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_1aac9de89:;
	}
	_iter_end_1aac9de89:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1d6853edb_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _1d67b2653___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1d683bed5_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _1d67b636b_is_path_sep(_25417_path[(_25417_path.len() - 1LL)])) {
		{
			(_25417_path).mut_slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_1aaca1b5c:;
	}
	_iter_end_1aaca1b5c:;
	(_25417_path).mut_slice(_1d6845263_volume_name(_25417_path).len());
	jule::I32 _26513_i = (_25417_path.len() - 1LL);
	while ((_26513_i >= 0LL) && (!(_1d67b636b_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_1aaca1c39:;
	}
	_iter_end_1aaca1c39:;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice(_26513_i + 1LL);
	}
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	}
	return _25417_path;
}



inline jule::Str _1d682eacc_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1d6845263_volume_name(_28512_path);
	jule::I32 _28713_i = (_28512_path.len() - 1LL);
	while ((_28713_i >= static_cast<jule::I32>(static_cast<jule::I32>(_2869_vol.len()))) && (!(_1d67b636b_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_1aaca1541:;
	}
	_iter_end_1aaca1541:;
	jule::Str _2919_dir = _1d683420d_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _1d6845263_volume_name(jule::Str _30320_path) {
	return _1d6842738_from_slash(_30320_path.slice(0LL,_1d67b429d_volume_name_len(_30320_path)));
}



inline jule::I32 _1d58a005a_get_last_fs_error(void) {
	jule::I32 _729_err = _1d59cdd7b_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aacd71c0:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1aacd7236:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aacd6b1a:;
			{
				return static_cast<jule::I32>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aacd6b81:;
			{
				return static_cast<jule::I32>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aacd6be7:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aacd6c5d:;
			{
				return static_cast<jule::I32>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1aacd7423:;
			{
				return static_cast<jule::I32>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1aacd7489:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1aacd7500:;
			{
				return static_cast<jule::I32>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1aacd7566:;
			{
				return static_cast<jule::I32>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1aacd75cc:;
			{
				return static_cast<jule::I32>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1aacd7643:;
			{
				return static_cast<jule::I32>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aacd76a9:;
			{
				return static_cast<jule::I32>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aacd7720:;
			{
				return static_cast<jule::I32>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aacd7786:;
			{
				return static_cast<jule::I32>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1aacd780d:;
			{
				return static_cast<jule::I32>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1aacd7885:;
			{
				return static_cast<jule::I32>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1aacd790c:;
			{
				return static_cast<jule::I32>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1aacd7984:;
			{
				return static_cast<jule::I32>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1aacd7a0b:;
			{
				return static_cast<jule::I32>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aacd7a83:;
			{
				return static_cast<jule::I32>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1aacd7b0a:;
			{
				return static_cast<jule::I32>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1aacd7b82:;
			{
				return static_cast<jule::I32>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1aacd7c09:;
			{
				return static_cast<jule::I32>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1aacd7c81:;
			{
				return static_cast<jule::I32>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1aacd7d08:;
			{
				return static_cast<jule::I32>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1aacd7d80:;
			{
				return static_cast<jule::I32>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1aacd7e07:;
			{
				return static_cast<jule::I32>(27LL);
			}
		}
		else {
			_case_begin_1aacd6aa4:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		_match_end_1aacd6a4e:;
	}
}



inline jule::Bool _1d6736396_is_console_handle(jule::U32 _11622_handle) {
	return ((_11622_handle == _1d59e0ca0_STDIN) || (_11622_handle == _1d59e1da0_STDOUT)) || (_11622_handle == _1d59e290b_STDERR);
}



inline jule::I32 _1d781a6aa_get_last_process_error(void) {
	jule::I32 _429_err = _1d59cdd7b_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1aacec3c2:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1aacec438:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1aacebd3e:;
			{
				return static_cast<jule::I32>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1aacebda5:;
			{
				return static_cast<jule::I32>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1aacebe1b:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1aacebe82:;
			{
				return static_cast<jule::I32>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1aacec13b:;
			{
				return static_cast<jule::I32>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1aacec1a2:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1aacec218:;
			{
				return static_cast<jule::I32>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1aacec27e:;
			{
				return static_cast<jule::I32>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1aacec2e5:;
			{
				return static_cast<jule::I32>(11LL);
			}
		}
		else {
			_case_begin_1aacebcc8:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		_match_end_1aacebc73:;
	}
}



inline jule::Slice<wchar_t*> _1d782a3ce_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,static_cast<jule::I32>((_1730_us.len() + 1LL)));
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1aad00b34:;
		if (it != expr.end()) {
			jule::I32 _1aad0077c_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_1aad0077c_i][0LL])))));
			}
			_iter_next_1aad00b34:;
			++it;
			_1aad0077c_i++;
			goto _iter_begin_1aad00b34;
		}
		_iter_end_1aad00b34:;
	}
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1d782a6a9_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,static_cast<jule::I32>(_2628_s.len()));
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1aad00e31:;
		if (it != expr.end()) {
			jule::Str &_1aad02383_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_1d6637594_utf16_from_str(_1aad02383_p));
			}
			_iter_next_1aad00e31:;
			++it;
			goto _iter_begin_1aad00e31;
		}
		_iter_end_1aad00e31:;
	}
	return _2713_us;
}



inline jule::I32 _1d782a9d9_execvp(jule::Str _3411_file,jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _1d6637594_utf16_from_str(_3411_file);
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1d782a6a9_str_slice_to_ustr_slice(_3422_argv);
	jule::Slice<wchar_t*> _379_cargv = _1d782a3ce_ustr_slice_to_wcstr_slice(_369_ucargv);
	return static_cast<jule::I32>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I32 _1d782adc4_execve(jule::Str _4111_file,jule::Slice<jule::Str> _4122_argv,jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1d782a6a9_str_slice_to_ustr_slice(_4122_argv);
	jule::Slice<wchar_t*> _439_cargv = _1d782a3ce_ustr_slice_to_wcstr_slice(_429_ucargv);
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1d782a6a9_str_slice_to_ustr_slice(_4135_env);
	jule::Slice<wchar_t*> _459_cenv = _1d782a3ce_ustr_slice_to_wcstr_slice(_449_ucenv);
	jule::Slice<jule::U16> _469_utf16_file = _1d6637594_utf16_from_str(_4111_file);
	return static_cast<jule::I32>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1d782bac8_exit(jule::I32 _1213_code) {
	_1d6655b89_exit(_1213_code);
}



inline jule::Str _1d782bcc6_executable(void) {
	return jule::executable();
}



inline jule::Bool _1d77bdeaa_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1d77be0dc_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1d77bcc56_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1aad3586c:;
		if (it != expr.end()) {
			jule::Str &_1aad3684b_valid_ext = *it;
			{
				if (_3128_ext == _1aad3684b_valid_ext) {
					return true;
				}
			}
			_iter_next_1aad3586c:;
			++it;
			goto _iter_begin_1aad3586c;
		}
		_iter_end_1aad3586c:;
	}
	return false;
}



inline jule::Bool _1d77be285_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	}
	{
		auto &expr = _1d58515c2_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aad376e8:;
		if (it != expr.end()) {
			jule::Str &_1aad36a8d_e = *it;
			{
				if (_4225_ext == _1aad36a8d_e) {
					return true;
				}
			}
			_iter_next_1aad376e8:;
			++it;
			goto _iter_begin_1aad376e8;
		}
		_iter_end_1aad376e8:;
	}
	{
		auto &expr = _1d77bddbc_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1aad38331:;
		if (it != expr.end()) {
			jule::Str &_1aad37d14_e = *it;
			{
				if (_4225_ext == _1aad37d14_e) {
					return true;
				}
			}
			_iter_next_1aad38331:;
			++it;
			goto _iter_begin_1aad38331;
		}
		_iter_end_1aad38331:;
	}
	return false;
}



inline jule::Str _1d77ca8ce_logf(jule::Str _28713_fmt,jule::Slice<jule::Any> _28726_args) {
	return _1d77cb2e7_apply_fmt(_28713_fmt,_28726_args);
}



inline jule::Str _1d77cabba_arg_to_str(jule::Any _29115_arg) {
	{
		auto &_match_expr{ _29115_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aad38e14:;
			{
				return _29115_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1aad39909:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1aad39970:;
			{
				return static_cast<jule::Str>(_29115_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1aad39299:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1aad37b7c:;
	}
}



inline jule::I32 _1d77cae62_find_next_fmt(jule::Str _30418_fmt) {
	{
		auto &expr = _30418_fmt;
		auto it = expr.begin();
		_iter_begin_1aad3a784:;
		if (it != expr.end()) {
			jule::I32 _1aad350b9_i = it - expr.begin();
			jule::U8 &_1aad3a993_b = *it;
			{
				if (_1aad3a993_b == '@') {
					return _1aad350b9_i;
				}
			}
			_iter_next_1aad3a784:;
			++it;
			_1aad350b9_i++;
			goto _iter_begin_1aad3a784;
		}
		_iter_end_1aad3a784:;
	}
	return -1LL;
}



inline jule::Str _1d77cb2e7_apply_fmt(jule::Str _31318_fmt,jule::Slice<jule::Any> _31328_args) {
	jule::Str _31413_s = jule::Str();
	{
		auto &expr = _31328_args;
		auto it = expr.begin();
		_iter_begin_1aad3bb09:;
		if (it != expr.end()) {
			jule::Any &_1aad3bba3_arg = *it;
			{
				jule::I32 _31713_i = _1d77cae62_find_next_fmt(_31318_fmt);
				if ((_31713_i == -1LL)) {
					goto _iter_end_1aad3bb09;
				}
				_31413_s+=_31318_fmt.slice(0LL,_31713_i);
				_31413_s+=_1d77cabba_arg_to_str(_1aad3bba3_arg);
				(_31318_fmt).mut_slice(_31713_i + 1LL);
			}
			_iter_next_1aad3bb09:;
			++it;
			goto _iter_begin_1aad3bb09;
		}
		_iter_end_1aad3bb09:;
	}
	_31413_s+=_31318_fmt;
	return _31413_s;
}



inline jule::Bool _1d77cc20a_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _1d77cd98c_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1d77cdc78_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _1d77ce020_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _1d77ce30b_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _1d77ce5a3_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1d77ce84a_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1d77ceae2_is_unix(jule::Str _6916_os) {
	return _1d77cdc78_is_darwin(_6916_os) || _1d77ce020_is_linux(_6916_os);
}



inline jule::Bool _1d77cee22_is_32bit(jule::Str _7217_arch) {
	return _1d77ce30b_is_i386(_7217_arch);
}



inline jule::Bool _1d77d01b9_is_64bit(jule::Str _7517_arch) {
	return _1d77ce5a3_is_amd64(_7517_arch) || _1d77ce84a_is_arm64(_7517_arch);
}



inline void _1d78191d1_init(void) {
	jule::Str _2513_path = _1d782bcc6_executable();
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	}
	jule::Str _309_pwd = ({
		auto except = _1d67dbb44_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _359_path_exec = _1d682eacc_dir(_2513_path);
	_2513_path=_1d685188a_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_1d77dcea7_PATH_WD=_309_pwd;
		_1d77dbb98_PATH_EXEC=_359_path_exec;
		_1d77ddb12_PATH_STDLIB=_1d685188a_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_1d77ebe3e_PATH_API=_1d685188a_join(jule::Slice<jule::Str>({_1d77dbb98_PATH_EXEC,jule::Str("..", 2)}));
		_1d77ebe3e_PATH_API=_1d685188a_join(jule::Slice<jule::Str>({_1d77ebe3e_PATH_API,jule::Str("api", 3)}));
		_1d77ebe3e_PATH_API=_1d685188a_join(jule::Slice<jule::Str>({_1d77ebe3e_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1d7b77ab1_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1d7ac4524_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1aadc9449:;
		if (it != expr.end()) {
			jule::Str &_1aadc94c1_op = *it;
			{
				if (_31320_kind == _1aadc94c1_op) {
					return true;
				}
			}
			_iter_next_1aadc9449:;
			++it;
			goto _iter_begin_1aadc9449;
		}
		_iter_end_1aadc9449:;
	}
	return false;
}



inline jule::Bool _1d7b77d9c_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1d7ac4612_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1aadd81c2:;
		if (it != expr.end()) {
			jule::Str &_1aadd7aa6_op = *it;
			{
				if (_32418_kind == _1aadd7aa6_op) {
					return true;
				}
			}
			_iter_next_1aadd81c2:;
			++it;
			goto _iter_begin_1aadd81c2;
		}
		_iter_end_1aadd81c2:;
	}
	return false;
}



inline jule::Bool _1d7b78430_is_str(jule::Str _34615_k) {
	return (!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1d7b786c7_is_raw_str(_34615_k));
}



inline jule::Bool _1d7b786c7_is_raw_str(jule::Str _34919_k) {
	return (!(_34919_k.empty())) && (_34919_k[0LL] == '`');
}



inline jule::Bool _1d7b7896e_is_rune(jule::Str _35316_k) {
	return (!(_35316_k.empty())) && (_35316_k[0LL] == '\'');
}



inline jule::Bool _1d7b79046_is_bool(jule::Str _35916_k) {
	return (_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5));
}



inline jule::Bool _1d7b792dd_is_float(jule::Str _36217_k) {
	if (_1d7728e59_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _1d770bdc6_contains_any(_36217_k,jule::Str(".pP", 3));
	}
	return _1d770bdc6_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1d7b79585_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	}
	jule::U8 _3759_b = _37015_k[0LL];
	return (_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9'));
}



inline jule::Bool _1d7b79ac4_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1d7b79d6b_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1d7b7a3aa_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1d7ac4436_SPACES;
		auto it = expr.begin();
		_iter_begin_1aade2572:;
		if (it != expr.end()) {
			jule::I32 &_1aade2000_cr = *it;
			{
				if (_40217_r == _1aade2000_cr) {
					return true;
				}
			}
			_iter_next_1aade2572:;
			++it;
			goto _iter_begin_1aade2572;
		}
		_iter_end_1aade2572:;
	}
	return false;
}



inline jule::Bool _1d7b7a773_is_letter(jule::I32 _41318_r) {
	return _1d773155a_is_letter(_41318_r);
}



inline jule::Bool _1d7b7acb2_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _1d7b7b059_is_binary(jule::U8 _43818_b) {
	return (_43818_b == '0') || (_43818_b == '1');
}



inline jule::Bool _1d7b7b301_is_octal(jule::U8 _44117_b) {
	return ('0' <= _44117_b) && (_44117_b <= '7');
}



inline jule::Bool _1d7b7b598_is_hex(jule::U8 _44415_b) {
	{
		
		if (('0' <= _44415_b) && (_44415_b <= '9')) {
			_case_begin_1aade7104:;
			{
				return true;
			}
		}
		else if (('a' <= _44415_b) && (_44415_b <= 'f')) {
			_case_begin_1aade71e2:;
			{
				return true;
			}
		}
		else if (('A' <= _44415_b) && (_44415_b <= 'F')) {
			_case_begin_1aade7258:;
			{
				return true;
			}
		}
		else {
			_case_begin_1aade69e9:;
			{
				return false;
			}
		}
		_match_end_1aade4695:;
	}
}



inline jule::Bool _1d7b7b840_is_assign(jule::U32 _45918_id) {
	return ((((((_45918_id == static_cast<jule::U32>(2LLU)) || (_45918_id == static_cast<jule::U32>(31LLU))) || (_45918_id == static_cast<jule::U32>(34LLU))) || (_45918_id == static_cast<jule::U32>(20LLU))) || (_45918_id == static_cast<jule::U32>(28LLU))) || (_45918_id == static_cast<jule::U32>(3LLU))) || (_45918_id == static_cast<jule::U32>(7LLU));
}



inline jule::Bool _1d7b7bad7_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1d7ac4854_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1aadea5e1:;
		if (it != expr.end()) {
			jule::Str &_1aadea635_op = *it;
			{
				if (_47022_kind == _1aadea635_op) {
					return true;
				}
			}
			_iter_next_1aadea5e1:;
			++it;
			goto _iter_begin_1aadea5e1;
		}
		_iter_end_1aadea5e1:;
	}
	return false;
}



inline jule::Bool _1d7b7bd7e_is_assign_op(jule::Str _48121_kind) {
	if (_1d7b7bad7_is_postfix_op(_48121_kind)) {
		return true;
	}
	{
		auto &expr = _1d7ac4a0d_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1aadea7ab:;
		if (it != expr.end()) {
			jule::Str &_1aadea833_op = *it;
			{
				if (_48121_kind == _1aadea833_op) {
					return true;
				}
			}
			_iter_next_1aadea7ab:;
			++it;
			goto _iter_begin_1aadea7ab;
		}
		_iter_end_1aadea7ab:;
	}
	return false;
}



inline jule::Ptr<_1d7b7c764_File> _1d7b7dc93_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1d7b7c764_File>(_1d7b7c764_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<jule::Ptr<_1d7b77374_Token>>()));
}



inline _1d77ca48e_Log _1d7b80316_make_err(jule::I32 _11113_row,jule::I32 _11123_col,jule::Ptr<_1d7b7c764_File>& _11134_f,jule::Str _11144_fmt,jule::Slice<jule::Any> _11157_args) {
	return _1d77ca48e_Log(static_cast<jule::I32>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_1d77ca8ce_logf(_11144_fmt,_11157_args),jule::Str(),jule::Str());
}



inline jule::Bool _1d7b8069b_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes,jule::Str _12137_prefix) {
	if (_12122_bytes.len() < static_cast<jule::I32>(static_cast<jule::I32>(_12137_prefix.len()))) {
		return false;
	}
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1aadedd53:;
		if (it != expr.end()) {
			jule::I32 _1aadee282_i = it - expr.begin();
			{
				if (_12122_bytes[_1aadee282_i] != _12137_prefix[_1aadee282_i]) {
					return false;
				}
			}
			_iter_next_1aadedd53:;
			++it;
			_1aadee282_i++;
			goto _iter_begin_1aadedd53;
		}
		_iter_end_1aadedd53:;
	}
	return true;
}



inline jule::Str _1d7b809dc_float_fmt_e(jule::Slice<jule::U8>& _13317_txt,jule::I32 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if (_13334_i >= static_cast<jule::I32>(static_cast<jule::I32>(_13317_txt.len()))) {
		return _13344_lit;
	}
	jule::U8 _13913_b = _13317_txt[_13334_i];
	if (_13913_b == '_') {
		return _13344_lit;
	}
	if ((_13913_b == '+') || (_13913_b == '-')) {
		(_13334_i)++;
		if (_13334_i >= static_cast<jule::I32>(static_cast<jule::I32>(_13317_txt.len()))) {
			return _13344_lit;
		}
		if (_13317_txt[_13334_i] == '_') {
			return _13344_lit;
		}
	}
	jule::I32 _1539_first = _13334_i;
	for (; _13334_i < static_cast<jule::I32>(static_cast<jule::I32>(_13317_txt.len())); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if ((_13913_b != '_') && (!(_1d7b7acb2_is_decimal(_13913_b)))) {
				goto _iter_end_1aae0210e;
			}
		}
	_iter_next_1aae0210e:;
	}
	_iter_end_1aae0210e:;
	if (_13334_i == _1539_first) {
		_13344_lit = jule::Str();
		return _13344_lit;
	}
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1d7b80d72_float_fmt_p(jule::Slice<jule::U8>& _16717_txt,jule::I32 _16730_i) {
	return _1d7b809dc_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1d7b811b3_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt,jule::I32 _17138_i) {
	if (_17121_txt[_17138_i] != '.') {
		return jule::Str();
	}
	(_17138_i)++;
	_julec_label_loop:;
	for (; _17138_i < static_cast<jule::I32>(static_cast<jule::I32>(_17121_txt.len())); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];
			{
				
				if (_17913_b == '_' || _1d7b7acb2_is_decimal(_17913_b)) {
					_case_begin_1aae05a3b:;
					{
						goto _iter_next_1aae04e58;
					}
				}
				else if (_1d7b828e0_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1aae05ab3:;
					{
						return _1d7b80d72_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1aae05992:;
					{
						goto _iter_end_1aae04e58;
					}
				}
				_match_end_1aae0592b:;
			}
		}
	_iter_next_1aae04e58:;
	}
	_iter_end_1aae04e58:;
	return jule::Str();
}



inline jule::Str _1d7b81504_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt,jule::I32 _19238_i) {
	_19238_i+=2LL;
	return _1d7b809dc_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1d7b81845_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt,jule::I32 _19737_i) {
	(_19737_i)++;
	return _1d7b809dc_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1d7b81c1e_float_num(jule::Slice<jule::U8>& _20215_txt,jule::I32 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if (_20232_i >= static_cast<jule::I32>(static_cast<jule::I32>(_20215_txt.len()))) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	}
	if (_20215_txt[_20232_i] == '_') {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	}
	for (; _20232_i < static_cast<jule::I32>(static_cast<jule::I32>(_20215_txt.len())); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];
			if ((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E'))) {
				_20242_lit = _1d7b809dc_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			}
			if ((_21213_b != '_') && (!(_1d7b7acb2_is_decimal(_21213_b)))) {
				goto _iter_end_1aae08962;
			}
		}
	_iter_next_1aae08962:;
	}
	_iter_end_1aae08962:;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	}
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1d7b81eb6_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I32 _22813_i = 0LL;
	_julec_label_loop:;
	for (; _22813_i < static_cast<jule::I32>(static_cast<jule::I32>(_22716_txt.len())); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];
			{
				
				if (_23113_b == '.') {
					_case_begin_1aae0d0d7:;
					{
						_22731_lit = _1d7b81c1e_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if (_23113_b == '_') {
					_case_begin_1aae0d15e:;
					{
						goto _iter_next_1aae0c58c;
					}
				}
				else if (_1d7b8259e_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1aae0d1d6:;
					{
						_22731_lit = _1d7b809dc_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1d7b7acb2_is_decimal(_23113_b)))) {
					_case_begin_1aae0d25d:;
					{
						goto _iter_end_1aae0c58c;
					}
				}
				_match_end_1aae0d00a:;
			}
		}
	_iter_next_1aae0c58c:;
	}
	_iter_end_1aae0c58c:;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	}
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1d7b8225d_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1d7b8069b_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	}
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	}
	
	jule::I32 _25913_i = 2LL;
	for (; _25913_i < static_cast<jule::I32>(static_cast<jule::I32>(_25016_txt.len())); (_25913_i)++) {
		{
			if ((_25016_txt[_25913_i] != '_') && (!(_1d7b7b059_is_binary(_25016_txt[_25913_i])))) {
				goto _iter_end_1aae11b57;
			}
		}
	_iter_next_1aae11b57:;
	}
	_iter_end_1aae11b57:;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	}
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1d7b8259e_is_float_fmt_e(jule::U8 _27219_b,jule::I32 _27228_i) {
	return (_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E'));
}



inline jule::Bool _1d7b828e0_is_float_fmt_p(jule::U8 _27619_b,jule::I32 _27628_i) {
	return (_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P'));
}



inline jule::Bool _1d7b82c31_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt,jule::I32 _28041_i) {
	if (_28024_txt[_28041_i] != '.') {
		return false;
	}
	(_28041_i)++;
	_julec_label_loop:;
	for (; _28041_i < static_cast<jule::I32>(static_cast<jule::I32>(_28024_txt.len())); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];
			{
				
				if (_28713_b == '_' || _1d7b7acb2_is_decimal(_28713_b)) {
					_case_begin_1aae165da:;
					{
						goto _iter_next_1aae15a18;
					}
				}
				else if (_1d7b828e0_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1aae16662:;
					{
						return true;
					}
				}
				else {
					_case_begin_1aae16541:;
					{
						goto _iter_end_1aae15a18;
					}
				}
				_match_end_1aae164ca:;
			}
		}
	_iter_next_1aae15a18:;
	}
	_iter_end_1aae15a18:;
	return false;
}



inline jule::Bool _1d7b83072_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt,jule::I32 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1aae18532:;
			{
				goto _case_begin_1aae18620;
			}
		}
		else if (_30123_txt[_30136_i] != '.') {
			_case_begin_1aae18620:;
			{
				goto _case_begin_1aae18686;
			}
		}
		else if ((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P')) {
			_case_begin_1aae18686:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aae17e16:;
			{
				return true;
			}
		}
		_match_end_1aae17d4a:;
	}
}



inline jule::Bool _1d7b833b3_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt,jule::I32 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1aae1a7dc:;
			{
				goto _case_begin_1aae1a8b9;
			}
		}
		else if (_31424_txt[_31437_i] != '.') {
			_case_begin_1aae1a8b9:;
			{
				goto _case_begin_1aae1a930;
			}
		}
		else if ((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F')) {
			_case_begin_1aae1a930:;
			{
				goto _case_begin_1aae1a622;
			}
		}
		else if ((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P')) {
			_case_begin_1aae1a622:;
			{
				return false;
			}
		}
		else {
			_case_begin_1aae19ce7:;
			{
				return true;
			}
		}
		_match_end_1aae19c2b:;
	}
}



inline jule::Str _1d7b8377b_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if (_32915_txt[0LL] != '0') {
		_32930_lit = jule::Str();
		return _32930_lit;
	}
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	}
	jule::I32 _33713_octal_start = 1LL;
	jule::Bool _33913_o = false;
	if (_32915_txt[1LL] == 'o') {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		}
		(_33713_octal_start)++;
		_33913_o=true;
	}
	jule::I32 _34813_i = _33713_octal_start;
	for (; _34813_i < static_cast<jule::I32>(static_cast<jule::I32>(_32915_txt.len())); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];
			if (_35013_b == '.') {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				}
				_32930_lit = _1d7b81c1e_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			}
			if (_1d7b8259e_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1d7b809dc_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			}
			if ((_35013_b != '_') && (!(_1d7b7b301_is_octal(_35013_b)))) {
				goto _iter_end_1aae1ec53;
			}
		}
	_iter_next_1aae1ec53:;
	}
	_iter_end_1aae1ec53:;
	if (_34813_i == _33713_octal_start) {
		return _32930_lit;
	}
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1d7b83a23_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	}
	if ((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X'))) {
		return _37128_lit;
	}
	
	jule::I32 _38013_i = 2LL;
	_julec_label_loop:;
	for (; _38013_i < static_cast<jule::I32>(static_cast<jule::I32>(_37113_txt.len())); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];
			{
				
				if (_1d7b83072_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1aae25b7c:;
					{
						_37128_lit = _1d7b81845_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d7b833b3_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1aae25c04:;
					{
						_37128_lit = _1d7b81504_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d7b828e0_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1aae25c7b:;
					{
						_37128_lit = _1d7b80d72_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1d7b82c31_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1aae25d03:;
					{
						_37128_lit = _1d7b811b3_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if ((_38313_b != '_') && (!(_1d7b7b598_is_hex(_38313_b)))) {
					_case_begin_1aae25d7a:;
					{
						goto _iter_end_1aae25154;
					}
				}
				_match_end_1aae25a8e:;
			}
		}
	_iter_next_1aae25154:;
	}
	_iter_end_1aae25154:;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	}
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1d7b83d64_hex_escape(jule::Slice<jule::U8>& _40416_txt,jule::I32 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if (_40416_txt.len() < _40429_n) {
		return _40439_seq;
	}
	
	jule::I32 _41013_i = 2LL;
	for (; _41013_i < _40429_n; (_41013_i)++) {
		{
			if ((!(_1d7b7b598_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			}
		}
	_iter_next_1aae2870c:;
	}
	_iter_end_1aae2870c:;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1d7b84150_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1d7b83d64_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1d7b8442a_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1d7b83d64_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1d7b846b1_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1d7b83d64_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1d7b84958_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	}
	if (((!(_1d7b7b301_is_octal(_43717_txt[1LL]))) || (!(_1d7b7b301_is_octal(_43717_txt[2LL])))) || (!(_1d7b7b301_is_octal(_43717_txt[3LL])))) {
		return _43732_seq;
	}
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_1d77ca48e_Log> _1d7b89452_lex(jule::Ptr<_1d7b7c764_File> _83216_f,jule::I32 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	}
	_1d7b85140_Lex _83713_lex = _1d7b85140_Lex(_83226_mode,jule::Slice<jule::Ptr<_1d7b77374_Token>>(),_83216_f,0LL,jule::I32(),-1LL,jule::Slice<_1d77ca48e_Log>());
	_1d7b87bd1_new_line(&_83713_lex);
	_1d7b85bce_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	}
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _1d79b93d6_find_module_file(jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1aae71e5e:;
		if (it != expr.end()) {
			jule::Ptr<_1d5957c39_DirEntry> &_1aae72080_d = *it;
			{
				if ((!(_1d5982acc_is_dir(_1aae72080_d.get()._field_stat.ptr()))) && (_1aae72080_d.get()._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_1aae71e5e:;
			++it;
			goto _iter_begin_1aae71e5e;
		}
		_iter_end_1aae71e5e:;
	}
	return false;
}



inline jule::Str _1d79bab79_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1d5957c39_DirEntry>> _2617_dirents = ({
				auto except = static__1d674750b_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aae72b63;
					goto _iter_end_1aae72b63;
				} jule::Slice<jule::Ptr<_1d5957c39_DirEntry>>();});
			});
			jule::Bool _3013_exist = _1d79b93d6_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::I32 _3513_n = _2434_path.len();
			_2434_path=_1d682eacc_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_1aae72b63;
			}
		}
	_iter_next_1aae72b63:;
	}
	_iter_end_1aae72b63:;
	return jule::Str();
}



inline jule::Slice<_1d77ca48e_Log> _1d79cd9d3_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1d596a015_read(_1d685188a_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1d77ca48e_Log>({_1d77ca48e_Log(static_cast<jule::I32>(0LL),jule::I32(),jule::I32(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_1d77ca48e_Log>({_1d77ca48e_Log(static_cast<jule::I32>(0LL),jule::I32(),jule::I32(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _1d776ccc2_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1d77ca48e_Log>({_1d77ca48e_Log(static_cast<jule::I32>(0LL),jule::I32(),jule::I32(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Ptr<_1d82bd305_FileInfo> _1d82bd6ce_parse_file(jule::Ptr<_1d7b7c764_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1d82bd305_FileInfo> _2813_finf = jule::new_ptr<_1d82bd305_FileInfo>(_1d82bd305_FileInfo());
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1d83132d4_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	}
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1d7a43eaa_Ast>,jule::Slice<_1d77ca48e_Log>> _1d83132d4_parse_fileset(jule::Ptr<_1d7b7c764_File> _6022_f) {
	jule::Ptr<_1d83320e4_Parser> _6113_p = jule::new_ptr<_1d83320e4_Parser>(_1d83320e4_Parser());
	_1d8341257_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1d7b8cdc3_ScopeTree> _1d8313ed8_new_scope(void) {
	return jule::new_ptr<_1d7b8cdc3_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1d83142e6_is_st(jule::Ptr<_1d7b77374_Token> _4710_current,jule::Ptr<_1d7b77374_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=(_4710_current.get()._field_id == static_cast<jule::U32>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row);
	_4753_terminated=_4710_current.get()._field_id == static_cast<jule::U32>(5LLU);
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1d831467b_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _5329_tokens,jule::I32& _5348_i) {
	if ((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U32>(23LLU))) {
		return false;
	}
	{
		jule::Ptr<_1d7b77374_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];
		return (_5913_prev.get()._field_id == static_cast<jule::U32>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U32>(7LLU)) && _1d7b77d9c_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row));
	}
}



inline std::tuple<jule::I32,jule::Bool> _1d8314a00_next_st_pos(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _6817_tokens,jule::I32 _6835_start) {
	jule::I32 _6913_brace_n = 0LL;
	jule::I32 _7013_i = _6835_start;
	for (; _7013_i < static_cast<jule::I32>(static_cast<jule::I32>(_6817_tokens.len())); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			jule::Ptr<_1d7b77374_Token> _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U32>(3LLU)) {
					_case_begin_1ab32ba33:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ab32dbde:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6835_start)) {
										if ((!(_1d831467b_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1d83142e6_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1ab32c605:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::I32>(static_cast<jule::I32>(_6817_tokens.len())))) {
										std::tie(_7217_ok,_7317_terminated) = _1d83142e6_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_1ab32c54a:;
						}
						goto _iter_next_1ab32a89a;
					}
				}
				_match_end_1ab32bc53:;
			}
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1ab32a89a;
			}
			if (_7013_i > _6835_start) {
				if (_1d831467b_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1ab32a89a;
				}
				std::tie(_7217_ok,_7317_terminated) = _1d83142e6_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1d83142e6_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_1ab32a89a;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1ab32a89a:;
	}
	_iter_end_1ab32a89a:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Bool> _1d8314d41_skip_st(jule::I32& _13017_i,jule::Slice<jule::Ptr<_1d7b77374_Token>> _13029_tokens) {
	jule::I32 _1319_start = _13017_i;
	jule::Bool _13213_terminated = false;
	std::tie(_13017_i,_13213_terminated) = _1d8314a00_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1d8314d41_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		}
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1d831513d_Stmt>> _1d83154d4_split_stmts(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1d831513d_Stmt>> _15313_stmts = nullptr;
	jule::I32 _15413_pos = 0LL;
	while (_15413_pos < static_cast<jule::I32>(static_cast<jule::I32>(_15221_tokens.len()))) {
		{
			jule::Slice<jule::Ptr<_1d7b77374_Token>> _15618_stmt;
			jule::Bool _15624_terminated;
			std::tie(_15618_stmt,_15624_terminated) = _1d8314d41_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1d831513d_Stmt>(_1d831513d_Stmt(_15618_stmt,_15624_terminated)));
		}
	_iter_next_1ab3362ac:;
	}
	_iter_end_1ab3362ac:;
	return _15313_stmts;
}



inline jule::Ptr<_1d8322337_CallData> _1d832269a_get_call_data(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _4423_tokens) {
	jule::Ptr<_1d8322337_CallData> _4513_data = jule::new_ptr<_1d8322337_CallData>();
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1d83309a5_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	}
	jule::Ptr<_1d7b77374_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];
	if ((_529_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1d83309a5_range_last(_4513_data.get()._field_expr_tokens);
	}
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d8322986_get_block_expr(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _6024_tokens) {
	jule::I32 _6113_brace_n = 0LL;
	jule::I32 _6213_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1ab33ab0d:;
		if (it != expr.end()) {
			jule::I32 _1ab33b8bc_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab33bb0e_tok = *it;
			{
				{
					auto &_match_expr{ _1ab33bb0e_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(17LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1ab33c3a1:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ab33c417:;
						{
							{
								auto &_match_expr{ _1ab33bb0e_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab33d715:;
									{
										if ((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL)) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											}
											(_6113_brace_n)++;
											goto _match_end_1ab33d391;
										}
										return _6024_tokens.slice(0LL,_1ab33b8bc_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab33d968:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1ab33d418:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1ab33d391:;
							}
						}
					}
					_match_end_1ab33c329:;
				}
			}
			_iter_next_1ab33ab0d:;
			++it;
			_1ab33b8bc_i++;
			goto _iter_begin_1ab33ab0d;
		}
		_iter_end_1ab33ab0d:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d8322c2d_split_colon(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _9121_tokens) {
	jule::I32 _9213_range_n = 0LL;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1ab33d193:;
		if (it != expr.end()) {
			jule::I32 _1ab33bceb_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab33da34_token = *it;
			{
				{
					auto &_match_expr{ _1ab33da34_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ab3405d5:;
						{
							{
								auto &_match_expr{ _1ab33da34_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab3412c8:;
									{
										(_9213_range_n)++;
										goto _iter_next_1ab33d193;
									}
								}
								else {
									_case_begin_1ab340ecb:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1ab340e21:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::U32>(11LLU)) {
						_case_begin_1ab34064b:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1d7b77374_Token>> _10725_l = _9121_tokens.slice(0LL,_1ab33bceb_i);
								jule::Slice<jule::Ptr<_1d7b77374_Token>> _10825_r = _9121_tokens.slice((_1ab33bceb_i + 1LL));
								return std::make_tuple(_10725_l,_10825_r);
							}
						}
					}
					_match_end_1ab34055d:;
				}
			}
			_iter_next_1ab33d193:;
			++it;
			_1ab33bceb_i++;
			goto _iter_begin_1ab33d193;
		}
		_iter_end_1ab33d193:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I32 _1d8323019_find_lowest_prec_op(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;
	jule::I32 _12413_prec_pos = -1LL;
	jule::I32 _12613_brace_n = 0LL;
	jule::Bool _12713_skip_to_next_brace_open = false;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1ab3436b5:;
		if (it != expr.end()) {
			jule::I32 _1ab3437e7_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> &_1ab343a28_token = *it;
			{
				{
					
					if (_1ab343a28_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ab3441ee:;
						{
							{
								auto &_match_expr{ _1ab343a28_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab345431:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1ab345662;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ab345662:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1ab344e14:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1ab3450ac:;
							}
							goto _iter_next_1ab3436b5;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1ab344276:;
						{
							goto _iter_next_1ab3436b5;
						}
					}
					else if (_1ab343a28_token.get()._field_id == static_cast<jule::U32>(16LLU)) {
						_case_begin_1ab3442ed:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1ab3436b5;
						}
					}
					else if ((_1ab3437e7_i == 0LL)) {
						_case_begin_1ab344375:;
						{
							goto _iter_next_1ab3436b5;
						}
					}
					else if (_1ab343a28_token.get()._field_id != static_cast<jule::U32>(7LLU)) {
						_case_begin_1ab3443ec:;
						{
							goto _iter_next_1ab3436b5;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1ab344474:;
						{
							goto _iter_next_1ab3436b5;
						}
					}
					_match_end_1ab34409a:;
				}
				jule::Ptr<_1d7b77374_Token> _15513_left = _11825_tokens[(_1ab3437e7_i - 1LL)];
				if ((_15513_left.get()._field_id == static_cast<jule::U32>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U32>(11LLU))) {
					goto _iter_next_1ab3436b5;
				}
				if (((_1ab3437e7_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U32>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1))) {
					jule::Ptr<_1d7b77374_Token> _16317_lleft = _11825_tokens[(_1ab3437e7_i - 2LL)];
					if ((_16317_lleft.get()._field_id == static_cast<jule::U32>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1))) {
						if ((_1ab343a28_token.get()._field_kind == jule::Str("&", 1)) || (_1ab343a28_token.get()._field_kind == jule::Str("*", 1))) {
							goto _iter_next_1ab3436b5;
						}
					}
				}
				jule::U8 _17213_p = _1d7b7775e_prec(_1ab343a28_token.ptr());
				if ((_17213_p != 0LLU) && (_17213_p <= _12313_prec)) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1ab3437e7_i;
				}
			}
			_iter_next_1ab3436b5:;
			++it;
			_1ab3437e7_i++;
			goto _iter_begin_1ab3436b5;
		}
		_iter_end_1ab3436b5:;
	}
	return _12413_prec_pos;
}



inline jule::Ptr<_1d7b8a0e0_IdentExpr> _1d83232b1_build_ident_expr(jule::Ptr<_1d7b77374_Token>& _18226_token) {
	return jule::new_ptr<_1d7b8a0e0_IdentExpr>(_1d7b8a0e0_IdentExpr(_18226_token,_18226_token.get()._field_kind,false));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::I32> _1d8323558_get_range_expr_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _19031_tokens) {
	jule::I32 _19113_range_n = 0LL;
	jule::I32 _19213_i = (_19031_tokens.len() - 1LL);
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_1d7b77374_Token> _19413_tok = _19031_tokens[_19213_i];
			if (_19413_tok.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ab34d5b0:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1ab34cea5:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1ab34d25d:;
				}
			}
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			}
		}
	_iter_next_1ab347631:;
	}
	_iter_end_1ab347631:;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1d832de59_check_assign_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1d7b7b840_is_assign(_1625_tokens[0LL].get()._field_id)))) {
		return false;
	}
	jule::I32 _2013_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1ab350606:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> &_1ab350738_t = *it;
			{
				if (_1ab350738_t.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab350738_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab3516a1:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1ab351096:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1ab35134e:;
					}
				}
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1ab350606;
				} else if ((_1ab350738_t.get()._field_id == static_cast<jule::U32>(7LLU)) && _1d7b7bd7e_is_assign_op(_1ab350738_t.get()._field_kind)) {
					return true;
				}
			}
			_iter_next_1ab350606:;
			++it;
			goto _iter_begin_1ab350606;
		}
		_iter_end_1ab350606:;
	}
	return false;
}



inline _1d77ca48e_Log _1d8330268_make_err(jule::I32 _4913_row,jule::I32 _4923_col,jule::Ptr<_1d7b7c764_File>& _4934_f,jule::Str _4944_fmt,jule::Slice<jule::Any> _4957_args) {
	return _1d77ca48e_Log(static_cast<jule::I32>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_1d77ca8ce_logf(_4944_fmt,_4957_args),jule::Str(),jule::Str());
}



inline jule::Slice<jule::Ptr<_1d7b77374_Token>> _1d833070d_range(jule::I32& _6815_i,jule::Str _6823_open,jule::Str _6840_close,jule::Slice<jule::Ptr<_1d7b77374_Token>>& _6863_tokens) {
	if (_6815_i >= static_cast<jule::I32>(static_cast<jule::I32>(_6863_tokens.len()))) {
		return nullptr;
	}
	jule::Ptr<_1d7b77374_Token> _739_tok = _6863_tokens[_6815_i];
	if ((_739_tok.get()._field_id != static_cast<jule::U32>(3LLU)) || (_739_tok.get()._field_kind != _6823_open)) {
		return nullptr;
	}
	(_6815_i)++;
	jule::I32 _7913_range_n = 1LL;
	jule::I32 _809_start = _6815_i;
	for (; (_7913_range_n != 0LL) && (_6815_i < static_cast<jule::I32>(static_cast<jule::I32>(_6863_tokens.len()))); (_6815_i)++) {
		{
			jule::Ptr<_1d7b77374_Token> _8213_token = _6863_tokens[_6815_i];
			if (_8213_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _8213_token.get()._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1ab357069:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1ab3570d0:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1ab356ee2:;
				}
			}
		}
	_iter_next_1ab3561cd:;
	}
	_iter_end_1ab3561cd:;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::Slice<jule::Ptr<_1d7b77374_Token>>> _1d83309a5_range_last(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _10320_tokens) {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _10340_cutted = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _10358_cut = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	if ((_10320_tokens.len() == 0LL)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	} else if (_10320_tokens[(_10320_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U32>(3LLU)) {
		_10340_cutted = _10320_tokens;
		_10358_cut = nullptr;
		return std::make_tuple(_10340_cutted,_10358_cut);
	}
	jule::I32 _11013_brace_n = 0LL;
	jule::I32 _11113_i = (_10320_tokens.len() - 1LL);
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_1d7b77374_Token> _11313_token = _10320_tokens[_11113_i];
			if (_11313_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _11313_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ab35b17d:;
						{
							(_11013_brace_n)++;
							goto _iter_next_1ab357dd3;
						}
					}
					else {
						_case_begin_1ab35aa73:;
						{
							(_11013_brace_n)--;
						}
					}
					_match_end_1ab35ad2b:;
				}
			}
			if ((_11013_brace_n == 0LL)) {
				_10340_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10358_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10340_cutted,_10358_cut);
			}
		}
	_iter_next_1ab357dd3:;
	}
	_iter_end_1ab357dd3:;
	_10340_cutted = _10320_tokens;
	_10358_cut = nullptr;
	return std::make_tuple(_10340_cutted,_10358_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>>,jule::Slice<_1d77ca48e_Log>> _1d8330dd4_parts(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _14015_tokens,jule::U32 _14033_id,jule::Bool _14046_expr_must) {
	if ((_14015_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<jule::Ptr<_1d7b77374_Token>>> _14513_parts = nullptr;
	jule::Slice<_1d77ca48e_Log> _14613_errors = nullptr;
	jule::I32 _14813_range_n = 0LL;
	jule::I32 _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_1ab35de72:;
		if (it != expr.end()) {
			jule::I32 _1ab35e12b_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ab35e36d_token = *it;
			{
				if (_1ab35e36d_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
					{
						auto &_match_expr{ _1ab35e36d_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab3602a3:;
							{
								(_14813_range_n)++;
								goto _iter_next_1ab35de72;
							}
						}
						else {
							_case_begin_1ab35eb98:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_1ab35ee51:;
					}
				}
				if ((_14813_range_n > 0LL)) {
					goto _iter_next_1ab35de72;
				}
				if (_1ab35e36d_token.get()._field_id == _14033_id) {
					if (_14046_expr_must && ((_1ab35e12b_i - _14913_last) <= 0LL)) {
						_1d77ca48e_Log _16921_err = _1d8330268_make_err(_1ab35e36d_token.get()._field_row,_1ab35e36d_token.get()._field_column,_1ab35e36d_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors = jule::alloc_for_append(_14613_errors,1);_14613_errors.__push(_16921_err);
					}
					_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last,_1ab35e12b_i));
					_14913_last=static_cast<jule::I32>((_1ab35e12b_i + 1LL));
				}
			}
			_iter_next_1ab35de72:;
			++it;
			_1ab35e12b_i++;
			goto _iter_begin_1ab35de72;
		}
		_iter_end_1ab35de72:;
	}
	if (_14913_last < static_cast<jule::I32>(static_cast<jule::I32>(_14015_tokens.len()))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14046_expr_must))) {
		_14513_parts = jule::alloc_for_append(_14513_parts,1);_14513_parts.__push(jule::Slice<jule::Ptr<_1d7b77374_Token>>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _1d83311c0_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ab364043:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ab3640a9:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ab3641a8:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1ab35deb6:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab363b8b:;
	}
}



inline _1d77ca48e_Log _1d8331599_compiler_err(jule::Ptr<_1d7b77374_Token>& _19918_token,jule::Str& _19934_fmt,jule::Slice<jule::Any> _19947_args) {
	return _1d77ca48e_Log(static_cast<jule::I32>(1LL),_19918_token.get()._field_row,_19918_token.get()._field_column,_19918_token.get()._field_file.get()._field_path,_1d77ca8ce_logf(_19934_fmt,_19947_args),_1d7b7d941_get_row(_19918_token.get()._field_file.ptr(), _19918_token.get()._field_row),jule::Str());
}



inline void _1d83318eb_push_suggestion(_1d77ca48e_Log* _21031_log,jule::Str _21042_fmt,jule::Slice<jule::Any> _21055_args) {
	_21031_log->_field_suggestion=_1d77ca8ce_logf(_21042_fmt,_21055_args);
}



inline jule::Str _1d8331c2b_tokstoa(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _21413_tokens) {
	jule::Str _21513_s = jule::Str();
	{
		auto &expr = _21413_tokens;
		auto it = expr.begin();
		_iter_begin_1ab367255:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> &_1ab3672ee_token = *it;
			{
				_21513_s+=_1ab3672ee_token.get()._field_kind;
			}
			_iter_next_1ab367255:;
			++it;
			goto _iter_begin_1ab367255;
		}
		_iter_end_1ab367255:;
	}
	return _21513_s;
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d8341d4b_build_void_type(void) {
	return jule::new_ptr<_1d7a0e75b_TypeDecl>();
}



inline jule::Ptr<_1d7a0e75b_TypeDecl> _1d83420c1_build_prim_type(jule::Ptr<_1d7b77374_Token> _2224_t) {
	return jule::new_ptr<_1d7a0e75b_TypeDecl>(_1d7a0e75b_TypeDecl(_2224_t,jule::Any(jule::Any(jule::new_ptr<_1d7a16d5c_IdentTypeDecl>(_1d7a16d5c_IdentTypeDecl(_2224_t,_2224_t.get()._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1d7a0e75b_TypeDecl>>()))))));
}



inline std::tuple<jule::Slice<jule::Ptr<_1d7b77374_Token>>,jule::I32> _1d8342412_split_map_range(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _3525_tokens,jule::I32& _3548_i) {
	jule::Slice<jule::Ptr<_1d7b77374_Token>> _3558_range_tokens = jule::Slice<jule::Ptr<_1d7b77374_Token>>();
	jule::I32 _3582_colon = jule::I32();
	_3582_colon=-1LL;
	jule::I32 _3713_range_n = 0LL;
	jule::I32 _389_start = _3548_i;
	for (; _3548_i < static_cast<jule::I32>(static_cast<jule::I32>(_3525_tokens.len())); (_3548_i)++) {
		{
			jule::Ptr<_1d7b77374_Token> _4013_token = _3525_tokens[_3548_i];
			if (_4013_token.get()._field_id == static_cast<jule::U32>(3LLU)) {
				{
					auto &_match_expr{ _4013_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ab36a577:;
						{
							(_3713_range_n)++;
							goto _iter_next_1ab368cb2;
						}
					}
					else {
						_case_begin_1ab369ea0:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1ab36a225:;
				}
			}
			if ((_3713_range_n == 0LL)) {
				if ((_389_start + 1LL) > _3548_i) {
					return std::make_tuple(_3558_range_tokens,_3582_colon);
				}
				_3558_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3548_i);
				goto _iter_end_1ab368cb2;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1ab368cb2;
			}
			if ((_3582_colon == -1LL) && (_4013_token.get()._field_id == static_cast<jule::U32>(11LLU))) {
				_3582_colon=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_3548_i - _389_start)) - 1LL));
			}
		}
	_iter_next_1ab368cb2:;
	}
	_iter_end_1ab368cb2:;
	return std::make_tuple(_3558_range_tokens,_3582_colon);
}



inline jule::I32 _1a9b7bb8c_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I32>(64LL - static_cast<jule::I32>(static_cast<jule::I32>(_1a9b834bd_len64(_6124_x))));
}



inline jule::I32 _1a9b7c5d8_trailing_zeros(jule::U32 _8323_x) {
	
	return static_cast<jule::I32>(_1a9b7d1ee_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I32 _1a9b7ce57_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	}
	return static_cast<jule::I32>(static_cast<jule::I32>(_1a9b7c055_DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10525_x & static_cast<jule::U32>(static_cast<jule::U32>((-(_10525_x))))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I32 _1a9b7d1ee_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	}
	return static_cast<jule::I32>(static_cast<jule::I32>(_1a9b7c385_DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11425_x & static_cast<jule::U64>(static_cast<jule::U64>((-(_11425_x))))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I32 _1a9b83226_len32(jule::U32 _35218_x) {
	jule::I32 _35228_n = jule::I32();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::I32>(_35228_n + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35218_x)]))));
	return _35228_n;
}



inline jule::I32 _1a9b834bd_len64(jule::U64 _36618_x) {
	jule::I32 _36628_n = jule::I32();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::I32>(_36628_n + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36618_x)]))));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1a9b8417d_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y)) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y))) | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y))) & static_cast<jule::U64>(static_cast<jule::U64>((~(_41544_sum)))))))))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1a9b85811_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(static_cast<jule::U64>((_5059_w0 >> 32LLU)));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1)) + _5089_w2)) + static_cast<jule::U64>(static_cast<jule::U64>((_50713_w1 >> 32LLU))));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1a948916a_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1a9489456_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1a9a9ecad_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1a9aa0099_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I32> _1a9aa2013_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I32 _4739_exp = jule::I32();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1ab47121b:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1a9aee390_is_inf(_4718_f,0LL) || _1a9b23bab_is_nan(_4718_f)) {
			_case_begin_1ab471293:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1ab47112d:;
	}
	std::tie(_4718_f,_4739_exp) = _1a9b15791_normalize(_4718_f);
	jule::U64 _5613_x = _1a9a9ecad_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)))) - 1023LL))) + 1LL));
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1a9aa0099_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1a9b496d7_nan(void) {
	return static_cast<jule::F64>(_1a9aa0099_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1a9b23bab_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1a9aed3b1_inf(jule::I32 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a9aa0099_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1a9aa0099_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1a9aee390_is_inf(jule::F64 _7215_f,jule::I32 _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::I32> _1a9b15791_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I32 _8232_exp = jule::I32();
	
	if ((_1a9b898c0_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1a9b892e8_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_1a9b23bab_is_nan(_11112_x) || _1a9aee390_is_inf(_11112_x,1LL)) {
			_case_begin_1ab4ba254:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1ab4ba2cb:;
			{
				return static_cast<jule::F64>(_1a9b496d7_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1ab4ba353:;
			{
				return static_cast<jule::F64>(_1a9aed3b1_inf(-1LL));
			}
		}
		_match_end_1ab4ba177:;
	}
	jule::F64 _13314_f1;
	jule::I32 _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1a9aa2013_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = (_13314_f1 - 1LL);
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(2LL + _1389_f))));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.6666666666666735 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.2857142874366239 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.14798198605116586))))))))))))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.3999999999940942 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.15313837699209373)))))))))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.6931471803691238))) - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq + _1479_R))))) + static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.00000000019082149292705877))))))))) - _1389_f))));
}



inline jule::F64 _1a9b898c0_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1a9aa0099_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_1a9a9ecad_f64_bits(_4312_x))) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1a9b8b1c9_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1a9b898c0_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_1ab5412ca:;
		}
		_iter_end_1ab5412ca:;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1a9b8b5e7_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::I32 _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1a9aa2013_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((static_cast<jule::F64>(static_cast<jule::F64>(_1a9b892e8_log(_4510_frac))) * 1.4426950408889634))) + static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp))));
}



inline jule::Str _1a94b8595_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::I32 _7837_prec,jule::I32 _7848_bit_size) {
	return static_cast<jule::Str>(_1a94dc4ed_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I32>(_1a96eb82d_max(static_cast<jule::I32>((_7837_prec + 4LL)),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1a94dc4ed_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::I32 _8259_prec,jule::I32 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_1a9945e62_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab7a8c4b:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a948916a_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1a9945e62_FloatInfo>)((&(_1a94927a0_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab7a8b08:;
			{
				_8313_bits=static_cast<jule::U64>(_1a9a9ecad_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1a9945e62_FloatInfo>)((&(_1a94a495a_F64_INFO))));
			}
		}
		else {
			_case_begin_1ab7a8410:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1ab7a7882:;
	}
	jule::Bool _969_neg = ((_8313_bits >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)))) != 0LLU);
	jule::I32 _9713_exp = static_cast<jule::I32>(_8313_bits >> _8413_flt.get()._field_mantbits) & static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL))));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits)) - 1LLU))));
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL))) {
			_case_begin_1ab7a9e39:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1ab7aed2e:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1ab7aedc8:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1ab7adb52:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1ab7ada86:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ab7ad2a0:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1ab7a8795:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1ab7ac6bc:;
	}
	_9713_exp+=_8413_flt.get()._field_bias;
	if (_8244_fmt == 'b') {
		return _1a96943ca_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1a96b9444_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_1a948d04d_DecimalSlice _13213_digs = _1a948d04d_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1a9691927_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I32>(_9713_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_8413_flt.get()._field_mantbits)))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7b342b:;
				{
					_8259_prec=static_cast<jule::I32>(_1a96eb82d_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7b46c4:;
				{
					_8259_prec=static_cast<jule::I32>(_1a96eb82d_max(static_cast<jule::I32>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7b4790:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1ab7b466e:;
		}
	} else if (_8244_fmt != 'f') {
		jule::I32 _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7b6de1:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7b6a8e:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1ab7b4806:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1ab7b4d23:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a9489ae9_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I32>(_9713_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1a96916b3_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I32>(_9713_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _1a94eb760_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1a9550264_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1a94eb760_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::I32 _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _1835_mant,jule::I32 _18316_exp,_1a9945e62_FloatInfo& _18327_flt) {
	_1a9ba7514_Decimal _18413_d = _1a9ba7514_Decimal();
	_1a9ba7701_assign(&_18413_d, _1835_mant);
	_1a9ba7833_shift(&_18413_d, static_cast<jule::I32>(_18316_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18327_flt._field_mantbits)))));
	_1a948d04d_DecimalSlice _18713_digs = _1a948d04d_DecimalSlice();
	jule::Bool _1889_shortest = (_18234_prec < 0LL);
	if (_1889_shortest) {
		_1a9581b25_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1a948d04d_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7c0218:;
				{
					_18234_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7c027e:;
				{
					_18234_prec=static_cast<jule::I32>(_1a96eb82d_max(static_cast<jule::I32>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7c02e5:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1ab7c013b:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ab7be091:;
				{
					_1a9ba7bc9_round(&_18413_d, static_cast<jule::I32>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ab7be107:;
				{
					_1a9ba7bc9_round(&_18413_d, static_cast<jule::I32>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ab7be16d:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					}
					_1a9ba7bc9_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1ab7c1cca:;
		}
		_18713_digs=_1a948d04d_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _1a9550264_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1a9550264_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_1a948d04d_DecimalSlice _2205_digs,jule::I32 _22029_prec,jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ab7c5839:;
			{
				return _1a9584045_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab7c58a0:;
			{
				return _1a96847a5_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ab7c5916:;
			{
				jule::I32 _22817_eprec = _22029_prec;
				if ((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp)) {
					_22817_eprec=_2205_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22029_prec > _2205_digs._field_nd) {
						_22029_prec=_2205_digs._field_nd;
					}
					return _1a9584045_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I32>((_22029_prec - 1LL)),static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_22040_fmt + 'e')) - 'g'));
				}
				if (_22029_prec > _2205_digs._field_dp) {
					_22029_prec=_2205_digs._field_nd;
				}
				return _1a96847a5_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I32>(_1a96eb82d_max(static_cast<jule::I32>(_22029_prec - _2205_digs._field_dp),0LL)));
			}
		}
		_match_end_1ab7c5729:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22040_fmt}));
}



inline void _1a9581b25_round_shortest(_1a9ba7514_Decimal& _25724_d,jule::U64 _25736_mant,jule::I32 _25747_exp,_1a9945e62_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::I32 _2789_minexp = (_25758_flt._field_bias + 1LL);
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_25724_d._field_dp - _25724_d._field_nd)))) >= static_cast<jule::I32>(static_cast<jule::I32>(100LL * static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_25747_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_25758_flt._field_mantbits)))))))))) {
		return;
	}
	_1a9ba7514_Decimal _28713_upper = _1a9ba7514_Decimal();
	_1a9ba7701_assign(&_28713_upper, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) + 1LLU)));
	_1a9ba7833_shift(&_28713_upper, static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_25747_exp - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;
	jule::I32 _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits))) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25747_exp - 1LL));
	}
	_1a9ba7514_Decimal _30613_lower = _1a9ba7514_Decimal();
	_1a9ba7701_assign(&_30613_lower, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU)) + 1LLU)));
	_1a9ba7833_shift(&_30613_lower, static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_29813_explo - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);
	jule::U8 _32613_upperdelta = 0LLU;
	jule::I32 _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_1ab7d036b;
			}
			jule::I32 _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_1ab7d8e57:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_1ab7d8ece:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_1ab7d9056:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ab7d8d7a:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_1ab7dbe8d:;
					{
						_1a9ba7bc9_round(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ab7dc015:;
					{
						_1a9ba7965_round_down(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ab7dc08c:;
					{
						_1a9ba7a97_round_up(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;
					}
				}
				_match_end_1ab7daee2:;
			}
		}
	_iter_next_1ab7d036b:;
	}
	_iter_end_1ab7d036b:;
}



inline jule::Slice<jule::U8> _1a9584045_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_1a948d04d_DecimalSlice _39638_d,jule::I32 _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::I32 _41217_i = 1LL;
		jule::I32 _41313_m = _1a96bb204_min(_39638_d._field_nd,static_cast<jule::I32>((_39655_prec + 1LL)));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_1ab7e27ac:;
		}
		_iter_end_1ab7e27ac:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::I32 _42513_exp = (_39638_d._field_dp - 1LL);
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	}
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ab7e633d:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp))) + '0'));
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ab7e4a9a:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1ab7e45b1:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 100LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) % 10LL))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1ab7e455b:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1a96847a5_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_1a948d04d_DecimalSlice _45138_d,jule::I32 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if ((_45138_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1a96bb204_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_1ab7e996d:;
		}
		_iter_end_1ab7e996d:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::I32 _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::I32 _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_1ab7e8241:;
		}
		_iter_end_1ab7e8241:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1a96943ca_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::I32 _48453_exp,_1a9945e62_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _1a9ba8e3e_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::I32>(static_cast<jule::I32>(_48464_flt._field_mantbits));
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _1a9ba8e3e_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1a96b9444_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::I32 _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _5079_mant,jule::I32 _50724_exp,_1a9945e62_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	}
	_5079_mant<<=static_cast<jule::U32>(60LLU - _50735_flt._field_mantbits);
	while ((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ab801788:;
	}
	_iter_end_1ab801788:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::U32 _52113_shift = static_cast<jule::U32>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);
		_5079_mant>>=static_cast<jule::U32>(60LLU - _52113_shift);
		if (((_52213_extra | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_5079_mant & 1LLU))))) > 576460752303423488LLU)) {
			(_5079_mant)++;
		}
		_5079_mant<<=static_cast<jule::U32>(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		}
	}
	jule::Str _53513_hex = jule::Str();
	if (_50638_fmt == 'X') {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	}
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))));
	_5079_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_5079_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab806c22:;
		}
		_iter_end_1ab806c22:;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::I32 _55817_i = 0LL;
		for (; _55817_i < _50627_prec; (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);
				_5079_mant<<=4LLU;
			}
		_iter_next_1ab807607:;
		}
		_iter_end_1ab807607:;
	}
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(static_cast<jule::U8>(_1a97661a0_lower(_50638_fmt)))) {
		_56613_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ab80d971:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ab80b177:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 100LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1ab80b452:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 1000LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp / 100LL)))) % 10LL))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50724_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1ab80b3ec:;
	}
	return _50614_dst;
}



inline jule::I32 _1a96bb204_min(jule::I32 _5918_a,jule::I32 _59116_b) {
	if (_5918_a < _59116_b) {
		return _5918_a;
	}
	return _59116_b;
}



inline jule::I32 _1a96eb82d_max(jule::I32 _5988_a,jule::I32 _59816_b) {
	if (_5988_a > _59816_b) {
		return _5988_a;
	}
	return _59816_b;
}



inline jule::U8 _1a97661a0_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | ('x' - 'X'));
}



inline std::tuple<jule::U64,jule::I32> _1a9774d18___parse_uint(jule::Str _5121_s,jule::I32 _5133_base,jule::I32 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
	}
	{
		
		if ((2LL <= _5133_base) && (_5133_base <= 36LL)) {
			_case_begin_1ab8139a9:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1ab813877:;
			{
				_5133_base=10LL;
				if (_5121_s[0LL] == '0') {
					{
						
						if ((_5121_s.len() >= 3LL) && (_1a97661a0_lower(_5121_s[1LL]) == 'b')) {
							_case_begin_1ab815857:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1a97661a0_lower(_5121_s[1LL]) == 'o')) {
							_case_begin_1ab815956:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1a97661a0_lower(_5121_s[1LL]) == 'x')) {
							_case_begin_1ab81548e:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else {
							_case_begin_1ab81511a:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);
							}
						}
						_match_end_1ab81504e:;
					}
				}
			}
		}
		else {
			_case_begin_1ab812aeb:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I32>(3LL));
			}
		}
		_match_end_1ab812a96:;
	}
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if ((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::I32>(4LL));
	}
	jule::U64 _9013_cutoff = 0LLU;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ab81a450:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab81a098:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ab814306:;
			{
				_9013_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5133_base)))))) + 1LLU));
			}
		}
		_match_end_1ab819c35:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab819d9a:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab819c8a:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1ab81ab9d:;
	}
	jule::U64 _10813_n = 0LLU;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1ab81b94b:;
		if (it != expr.end()) {
			jule::U8 _1ab81c52e_c = *it;
			{
				jule::U8 _11017_d = 0LLU;
				{
					
					if (('0' <= _1ab81c52e_c) && (_1ab81c52e_c <= '9')) {
						_case_begin_1ab81d50d:;
						{
							_11017_d=static_cast<jule::U8>(_1ab81c52e_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1a97661a0_lower(_1ab81c52e_c)))) && (_1a97661a0_lower(_1ab81c52e_c) <= 'z')) {
						_case_begin_1ab81d3cb:;
						{
							_11017_d=static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1a97661a0_lower(_1ab81c52e_c))) - 'a')) + 10LLU));
						}
					}
					else if (_1ab81c52e_c == '_') {
						_case_begin_1ab81d442:;
						{
							goto _iter_next_1ab81b94b;
						}
					}
					else {
						_case_begin_1ab81ce69:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
						}
					}
					_match_end_1ab81cde2:;
				}
				if (_11017_d >= static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_5133_base)))) {
					return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
				}
				if (_10813_n >= _9013_cutoff) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I32>(1LL));
				}
				_10813_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5133_base));
				jule::U64 _13213_n1 = _10813_n + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_11017_d)));
				if ((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I32>(1LL));
				}
				_10813_n=_13213_n1;
			}
			_iter_next_1ab81b94b:;
			++it;
			goto _iter_begin_1ab81b94b;
		}
		_iter_end_1ab81b94b:;
	}
	return std::make_tuple(_10813_n,static_cast<jule::I32>(0LL));
}



inline jule::Exceptional<jule::U64> _1a9833d61_parse_uint(jule::Str _14623_s,jule::I32 _14635_base,jule::I32 _14650_bit_size) {
	jule::U64 _14710_un;
	jule::I32 _14714_err;
	std::tie(_14710_un,_14714_err) = _1a9774d18___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if (_14714_err != static_cast<jule::I32>(0LL)) {
		return jule::Exceptional<jule::U64>(_14714_err);
	}
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1a990d512_parse_int(jule::Str _17222_s,jule::I32 _17230_base,jule::I32 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(2LL));
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		(_17222_s).mut_slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);
	}
	jule::U64 _18714_un;
	jule::I32 _18718_err;
	std::tie(_18714_un,_18718_err) = _1a9774d18___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	}
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1969_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_17245_bit_size - 1LL)))));
	if ((!(_17813_neg)) && (_18714_un >= _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(1LL));
	}
	if (_17813_neg && (_18714_un > _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(1LL));
	}
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1a99879cb_eisel_lemire64(jule::U64 _4123_man,jule::I32 _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1a9aa0099_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::I32 _579_clz = _1a9b7bb8c_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::U32>(static_cast<jule::U32>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1a9b85811_mul64(_4123_man,_1a94bb554_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1a9b85811_mul64(_4123_man,_1a94bb554_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_799_msb + 9LLU))));
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>((_8013_ret_mantissa & 1LLU));
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_8013_ret_mantissa & 4503599627370495LLU)));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1a9aa0099_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a9987d1c_eisel_lemire32(jule::U64 _11023_man,jule::I32 _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1a9489456_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::I32 _1329_clz = _1a9b7bb8c_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::U32>(static_cast<jule::U32>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1a9b85811_mul64(_11023_man,_1a94bb554_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1a9b85811_mul64(_11023_man,_1a94bb554_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1549_msb + 38LLU))));
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>((_15513_ret_mantissa & 1LLU));
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_15513_ret_mantissa & 8388607LLU)));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1a9489456_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I32 _1a9a6d364_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I32 _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::I32>(static_cast<jule::I32>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I32>(_4534_s.len());
	}
	jule::I32 _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+='a' - 'A';
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_1ab849eb8:;
	}
	_iter_end_1ab849eb8:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I32,jule::Bool> _1a9a7e94c_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I32 _6834_n = jule::I32();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::I32 _7213_sign = 1LL;
	jule::I32 _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ab84ea39:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);
				goto _case_begin_1ab84eaa0;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ab84eaa0:;
			{
				jule::I32 _8317_case_n = _1a9a6d364_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1a9aed3b1_inf(_7213_sign));
					_6834_n = static_cast<jule::I32>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ab84eb16:;
			{
				if ((_1a9a6d364_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1a9b496d7_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_1ab84e9d4:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I32,jule::Bool,jule::Bool,jule::Bool,jule::I32,jule::Bool> _1a95b31d9_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I32 _10340_exp = jule::I32();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I32 _10385_i = jule::I32();
	jule::Bool _10393_ok = jule::Bool();
	if (_10385_i >= static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	{
		
		if (_10315_s[_10385_i] == '+') {
			_case_begin_1ab855d5e:;
			{
				(_10385_i)++;
			}
		}
		else if (_10315_s[_10385_i] == '-') {
			_case_begin_1ab856018:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1ab855b3e:;
	}
	jule::U64 _11713_base = 10LLU;
	jule::I32 _11813_max_mant_digits = 19LL;
	jule::U8 _11913_exp_char = 'e';
	if ((((_10385_i + 2LL) < static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) && (_10315_s[_10385_i] == '0')) && (_1a97661a0_lower(_10315_s[(_10385_i + 1LL)]) == 'x')) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	}
	jule::Bool _12713_sawdot = false;
	jule::Bool _12813_sawdigits = false;
	jule::I32 _12913_nd = 0LL;
	jule::I32 _13013_nd_mant = 0LL;
	jule::I32 _13113_dp = 0LL;
	for (; _10385_i < static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len())); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];
			{
				
				if (_13313_c == '_') {
					_case_begin_1ab85b64a:;
					{
						goto _iter_next_1ab85ab55;
					}
				}
				else if (_13313_c == '.') {
					_case_begin_1ab85b6c2:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						}
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1ab85ab55;
					}
				}
				else if (('0' <= _13313_c) && (_13313_c <= '9')) {
					_case_begin_1ab85b749:;
					{
						_12813_sawdigits=true;
						if ((_13313_c == '0') && (_12913_nd == 0LL)) {
							(_13113_dp)--;
							goto _iter_next_1ab85ab55;
						}
						(_12913_nd)++;
						if (_13013_nd_mant < _11813_max_mant_digits) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if (_13313_c != '0') {
							_10361_trunc=true;
						}
						goto _iter_next_1ab85ab55;
					}
				}
				else if (((_11713_base == 16LLU) && ('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1a97661a0_lower(_13313_c))))) && (_1a97661a0_lower(_13313_c) <= 'f')) {
					_case_begin_1ab85b7c1:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if (_13013_nd_mant < _11813_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(((_1a97661a0_lower(_13313_c) - 'a') + 10LLU)));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						}
						goto _iter_next_1ab85ab55;
					}
				}
				_match_end_1ab85b55c:;
			}
			goto _iter_end_1ab85ab55;
		}
	_iter_next_1ab85ab55:;
	}
	_iter_end_1ab85ab55:;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	}
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	}
	if ((_10385_i < static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) && (_1a97661a0_lower(_10315_s[_10385_i]) == _11913_exp_char)) {
		(_10385_i)++;
		if (_10385_i >= static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		}
		jule::I32 _19617_esign = 1LL;
		if (_10315_s[_10385_i] == '+') {
			(_10385_i)++;
		} else if (_10315_s[_10385_i] == '-') {
			(_10385_i)++;
			_19617_esign=-1LL;
		}
		if (((_10385_i >= static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		}
		jule::I32 _20617_e = 0LL;
		for (; (_10385_i < static_cast<jule::I32>(static_cast<jule::I32>(_10315_s.len()))) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_')); (_10385_i)++) {
			{
				if (_10315_s[_10385_i] == '_') {
					goto _iter_next_1ab866402;
				}
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_20617_e * 10LL))) + static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_10315_s[_10385_i]))))) - '0');
				}
			}
		_iter_next_1ab866402:;
		}
		_iter_end_1ab866402:;
		_13113_dp+=static_cast<jule::I32>(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	}
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I32>(_13113_dp - _13013_nd_mant);
	}
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1a94b91de_atof64exact(jule::U64 _48116_mantissa,jule::I32 _48135_exp,jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1a94a495a_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	}
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	}
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1ab871dd0:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if ((_48135_exp > 0LL) && (_48135_exp <= 37LL)) {
			_case_begin_1ab871e57:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1a9549e73_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				}
				if ((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL)) {
					return std::make_tuple(_48158_f,_48166_ok);
				}
				_48158_f = static_cast<jule::F64>(_48158_f * _1a9549e73_F64_POW10[_48135_exp]);
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if ((_48135_exp < 0LL) && (_48135_exp >= -22LL)) {
			_case_begin_1ab871ece:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1a9549e73_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1ab871d36:;
	}
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1a9860b3a_atof32exact(jule::U64 _51516_mantissa,jule::I32 _51535_exp,jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1a94927a0_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	}
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	}
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1ab876d80:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if ((_51535_exp > 0LL) && (_51535_exp <= 17LL)) {
			_case_begin_1ab876e07:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1a953a5a1_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				}
				if ((_51562_f > 10000000LL) || (_51562_f < -10000000LL)) {
					return std::make_tuple(_51562_f,_51570_ok);
				}
				_51562_f = static_cast<jule::F32>(_51562_f * _1a953a5a1_F32_POW10[_51535_exp]);
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if ((_51535_exp < 0LL) && (_51535_exp >= -10LL)) {
			_case_begin_1ab876e7e:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1a953a5a1_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1ab876cd6:;
	}
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I32> _1a9861014_atof_hex(jule::Str _55113_s,_1a9945e62_FloatInfo& _55122_flt,jule::U64 _55142_mantissa,jule::I32 _55161_exp,jule::Bool _55171_neg,jule::Bool _55182_trunc) {
	jule::I32 _5529_max_exp = ((static_cast<jule::I32>(1LL << _55122_flt._field_expbits) + _55122_flt._field_bias) - 2LL);
	jule::I32 _5539_min_exp = (_55122_flt._field_bias + 1LL);
	_55161_exp+=static_cast<jule::I32>(static_cast<jule::I32>(_55122_flt._field_mantbits));
	while ((_55142_mantissa != 0LLU) && ((_55142_mantissa >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_55122_flt._field_mantbits + 2LLU))))) == 0LLU)) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1ab87c34c:;
	}
	_iter_end_1ab87c34c:;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	}
	while (((_55142_mantissa >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((static_cast<jule::U32>(static_cast<jule::U32>(1LLU + _55122_flt._field_mantbits)) + 2LLU))))) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa & 1LLU))));
			(_55161_exp)++;
		}
	_iter_next_1ab87da13:;
	}
	_iter_end_1ab87da13:;
	while ((_55142_mantissa > 1LLU) && (_55161_exp < static_cast<jule::I32>(static_cast<jule::I32>((_5539_min_exp - 2LL))))) {
		{
			_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55142_mantissa & 1LLU))));
			(_55161_exp)++;
		}
	_iter_next_1ab87de0e:;
	}
	_iter_end_1ab87de0e:;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);
	_55142_mantissa>>=2LLU;
	_58313_round|=static_cast<jule::U64>((_55142_mantissa & 1LLU));
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if (_55142_mantissa == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(1LLU + _55122_flt._field_mantbits)))))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		}
	}
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	}
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);
	if (_55161_exp > _5529_max_exp) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55122_flt._field_mantbits));
		_55161_exp=static_cast<jule::I32>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	}
	jule::U64 _60513_bits = _55142_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55122_flt._field_mantbits)) - 1LLU))));
	_60513_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _55122_flt._field_expbits) - 1LL))))))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55122_flt._field_mantbits)) << _55122_flt._field_expbits);
	}
	if (_55122_flt == _1a94927a0_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1a9489456_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1a9aa0099_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I32,jule::I32> _1a99848c9_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I32 _61629_n = jule::I32();
	jule::I32 _61637_err = 0LL;
	{
		jule::F64 _61814_val;
		jule::I32 _61819__n;
		jule::Bool _61823_ok;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1a9a7e94c_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I32>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		}
	}
	jule::U64 _62410_mantissa;
	jule::I32 _62420_exp;
	jule::Bool _62425_neg;
	jule::Bool _62430_trunc;
	jule::Bool _62437_hex;
	jule::I32 _62442__n;
	jule::Bool _62450_ok;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1a95b31d9_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;
		std::tie(_63117_ff,_61637_err) = _1a9861014_atof_hex(_61611_s.slice(0LL,_61629_n),_1a94927a0_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1a9860b3a_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
		}
		std::tie(_61621_f,_62450_ok) = _1a9987d1c_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
			jule::F32 _65321_f_up = 0LL;
			std::tie(_65321_f_up,_62450_ok) = _1a9987d1c_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if (_62450_ok && (_61621_f == _65321_f_up)) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			}
		}
	}
	_1a9ba7514_Decimal _66213_d = _1a9ba7514_Decimal();
	if ((!(_1a95b51ca_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	}
	jule::U64 _66610_b;
	jule::Bool _66613_ovf;
	std::tie(_66610_b,_66613_ovf) = _1a97920dd_float_bits(&_66213_d, _1a94927a0_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1a9489456_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I32>(1LL);
	}
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I32,jule::I32> _1a96baa94_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I32 _67429_n = jule::I32();
	jule::I32 _67437_err = 0LL;
	{
		jule::F64 _67614_val;
		jule::I32 _67619__n;
		jule::Bool _67623_ok;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1a9a7e94c_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I32>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		}
	}
	jule::U64 _68210_mantissa;
	jule::I32 _68220_exp;
	jule::Bool _68225_neg;
	jule::Bool _68230_trunc;
	jule::Bool _68237_hex;
	jule::I32 _68242__n;
	jule::Bool _68250_ok;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1a95b31d9_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1a9861014_atof_hex(_67411_s.slice(0LL,_67429_n),_1a94a495a_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1a94b91de_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
		}
		std::tie(_67421_f,_68250_ok) = _1a99879cb_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
			jule::F64 _71021_f_up = 0LL;
			std::tie(_71021_f_up,_68250_ok) = _1a99879cb_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if (_68250_ok && (_67421_f == _71021_f_up)) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			}
		}
	}
	_1a9ba7514_Decimal _71913_d = _1a9ba7514_Decimal();
	if ((!(_1a95b51ca_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	}
	jule::U64 _72310_b;
	jule::Bool _72313_ovf;
	std::tie(_72310_b,_72313_ovf) = _1a97920dd_float_bits(&_71913_d, _1a94a495a_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1a9aa0099_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I32>(1LL);
	}
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I32,jule::I32> _1a97d71aa_parse_float_prefix(jule::Str _73123_s,jule::I32 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;
		jule::I32 _73317_n;
		jule::I32 _73320_err;
		std::tie(_73314_f,_73317_n,_73320_err) = _1a99848c9_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	}
	jule::F64 _73710_f;
	jule::I32 _73713_n;
	jule::I32 _73716_err;
	std::tie(_73710_f,_73713_n,_73716_err) = _1a96baa94_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1a96c9058_parse_float(jule::Str _76520_s,jule::I32 _76528_bit_size) {
	jule::F64 _76610_f;
	jule::I32 _76613_n;
	jule::I32 _76616_err;
	std::tie(_76610_f,_76613_n,_76616_err) = _1a97d71aa_parse_float_prefix(_76520_s,_76528_bit_size);
	if ((_76613_n != static_cast<jule::I32>(static_cast<jule::I32>(_76520_s.len()))) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL)))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I32>(2LL));
	}
	if (_76616_err != static_cast<jule::I32>(0LL)) {
		return jule::Exceptional<jule::F64>(_76616_err);
	}
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1a9489ae9_ryu_ftoa_fixed32(_1a948d04d_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::I32 _4958_exp,jule::I32 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I32 _6213_e2 = _4958_exp;
	jule::I32 _639_b = _1a9b83226_len32(_4947_mant);
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U32>(static_cast<jule::U32>(25LL - _639_b));
		_6213_e2+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_639_b))) - 25LL));
	}
	jule::I32 _749_q = (((-(_1a97728a4_mul_by_log2_log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::I32 _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1a9ba6b95_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1a9ba6e09_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I32>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_949_extra - 1LLU))))))) || ((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_949_extra - 1LLU))))))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_949_extra - 1LLU))))))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=((_9713_dfrac >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_949_extra - 1LLU))))) == 1LLU);
	}
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	}
	_1a96917e5_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1a96916b3_ryu_ftoa_fixed64(_1a948d04d_DecimalSlice& _12126_d,jule::U64 _12147_mant,jule::I32 _12158_exp,jule::I32 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	}
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I32 _13113_e2 = _12158_exp;
	jule::I32 _1329_b = _1a9b834bd_len64(_12147_mant);
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>(_12147_mant << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(55LL - _1329_b))));
		_13113_e2+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_1329_b))) - 55LL));
	}
	jule::I32 _1469_q = (((-(_1a97728a4_mul_by_log2_log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);
	jule::Bool _15113_exact = (_1469_q <= 55LL) && (_1469_q >= 0LL);
	jule::U64 _15314_di;
	jule::I32 _15318_dexp2;
	jule::Bool _15329_d0;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1a9ba6cc7_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	}
	if (((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a9ba6e09_divisible_by_pow5(_12147_mant,static_cast<jule::I32>((-(_1469_q))))) {
		_15113_exact=true;
		_15329_d0=true;
	}
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));
	jule::U64 _16913_dfrac = 0LLU;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>(_15314_di >> _1669_extra),static_cast<jule::U64>(_15314_di & _1679_extra_mask));
	jule::Bool _17113_round_up = false;
	if (_15113_exact) {
		_17113_round_up=((_16913_dfrac > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_1669_extra - 1LLU))))))) || ((_16913_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_1669_extra - 1LLU))))))) && (!(_15329_d0)))) || (((_16913_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_1669_extra - 1LLU))))))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU));
	} else {
		_17113_round_up=((_16913_dfrac >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_1669_extra - 1LLU))))) == 1LLU);
	}
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	}
	_1a96917e5_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1a96917e5_format_decimal(_1a948d04d_DecimalSlice& _20024_d,jule::U64 _20045_m,jule::Bool _20057_trunc,jule::Bool _20074_round_up,jule::I32 _20090_prec) {
	jule::U64 _2019_max = _1a9570130_U64_POW10[_20090_prec];
	jule::I32 _20213_trimmed = 0LL;
	while (_20045_m >= _2019_max) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);
			jule::U64 _20417_b = (_20045_m % 10LL);
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=_20057_trunc || ((_20045_m & 1LLU) == 1LLU);
			}
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			}
		}
	_iter_next_1ab8b91d0:;
	}
	_iter_end_1ab8b91d0:;
	if (_20074_round_up) {
		(_20045_m)++;
	}
	if (_20045_m >= _2019_max) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	}
	jule::U32 _22913_n = static_cast<jule::U32>(_20090_prec);
	_20024_d._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20090_prec));
	jule::U64 _23113_v = _20045_m;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;
			jule::U64 _23417_v2 = 0LLU;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			}
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ab8bba51:;
	}
	_iter_end_1ab8bba51:;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	}
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(2LL * _23113_v)]);
	}
	while (_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0') {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ab8c2c55:;
	}
	_iter_end_1ab8c2c55:;
	_20024_d._field_dp=static_cast<jule::I32>(_20024_d._field_nd + _20213_trimmed);
}



inline void _1a9691927_ryu_ftoa_shortest(_1a948d04d_DecimalSlice& _26127_d,jule::U64 _26148_mant,jule::I32 _26159_exp,_1a9945e62_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26159_exp <= 0LL) && (_1a9b7d1ee_trailing_zeros64(_26148_mant) >= static_cast<jule::I32>(static_cast<jule::I32>((-(_26159_exp)))))) {
		_26148_mant>>=static_cast<jule::U32>(static_cast<jule::U32>((-(_26159_exp))));
		_1a9ba6931_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;
	}
	jule::U64 _27310_ml;
	jule::U64 _27314_mc;
	jule::U64 _27318_mu;
	jule::I32 _27326_e2;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1a9772b18_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1a9ba6931_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;
	}
	jule::I32 _2799_q = (_1a97728a4_mul_by_log2_log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);
	jule::U64 _28313_dl = 0LLU;
	jule::U64 _28413_dc = 0LLU;
	jule::U64 _28513_du = 0LLU;
	jule::Bool _28613_dl0 = false;
	jule::Bool _28713_dc0 = false;
	jule::Bool _28813_du0 = false;
	if (_26170_flt == _1a94927a0_F32_INFO) {
		jule::U32 _29017_dl32 = 0LLU;
		jule::U32 _29117_dc32 = 0LLU;
		jule::U32 _29217_du32 = 0LLU;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1a9ba6b95_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1a9ba6b95_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1a9ba6b95_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1a9ba6cc7_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1a9ba6cc7_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1a9ba6cc7_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	}
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	}
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	}
	if ((_2799_q < 0LL) && (_2799_q >= -24LL)) {
		if (_1a9ba6e09_divisible_by_pow5(_27310_ml,static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		}
		if (_1a9ba6e09_divisible_by_pow5(_27314_mc,static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		}
		if (_1a9ba6e09_divisible_by_pow5(_27318_mu,static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		}
	}
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));
	jule::U64 _32813_fracl = 0LLU;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>(_28313_dl >> _3259_extra),static_cast<jule::U64>(_28313_dl & _3269_extra_mask));
	jule::U64 _33013_fracc = 0LLU;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>(_28413_dc >> _3259_extra),static_cast<jule::U64>(_28413_dc & _3269_extra_mask));
	jule::U64 _33213_fracu = 0LLU;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>(_28513_du >> _3259_extra),static_cast<jule::U64>(_28513_du & _3269_extra_mask));
	jule::Bool _33813_uok = (!(_28813_du0)) || (_33213_fracu > 0LLU);
	if (_28813_du0 && (_33213_fracu == 0LLU)) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	}
	if ((!(_33813_uok))) {
		(_28513_du)--;
	}
	jule::Bool _34713_cup = false;
	if (_28713_dc0) {
		_34713_cup=(_33013_fracc > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_3259_extra - 1LLU))))))) || ((_33013_fracc == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_3259_extra - 1LLU))))))) && ((_28413_dc & 1LLU) == 1LLU));
	} else {
		_34713_cup=((_33013_fracc >> static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_3259_extra - 1LLU))))) == 1LLU);
	}
	jule::Bool _3619_lok = (_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU);
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	}
	jule::Bool _3669_c0 = _28713_dc0 && (_33013_fracc == 0LLU);
	_1a9ba6931_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I32 _1a97728a4_mul_by_log2_log10(jule::I32 _37722_x) {
	return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_37722_x * 78913LL)))) >> 18LL));
}



inline jule::I32 _1a97729d6_mul_by_log10_log2(jule::I32 _38722_x) {
	return static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_38722_x * 108853LL)))) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I32> _1a9772b18_compute_bounds(jule::U64 _39519_mant,jule::I32 _39530_exp,_1a9945e62_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I32 _39662_e2 = jule::I32();
	if ((_39519_mant != static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _3966_flt._field_mantbits))) || (_39530_exp == static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_3966_flt._field_bias + 1LL))) - static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_3966_flt._field_mantbits))))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _39519_mant)) - 1LLU)),static_cast<jule::U64>(2LLU * _39519_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _39519_mant)) + 1LLU)));
		_39662_e2=static_cast<jule::I32>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _39519_mant)) - 1LLU)),static_cast<jule::U64>(4LLU * _39519_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _39519_mant)) + 2LLU)));
		_39662_e2=static_cast<jule::I32>((_39530_exp - 2LL));
	}
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1a9ba6931_ryu_digits(_1a948d04d_DecimalSlice& _40920_d,jule::U64 _40937_lower,jule::U64 _40949_central,jule::U64 _40963_upper,jule::Bool _40979_c0,jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;
	jule::U32 _41019_llo;
	std::tie(_41014_lhi,_41019_llo) = _1a9ba703b_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;
	jule::U32 _41115_clo;
	std::tie(_41110_chi,_41115_clo) = _1a9ba703b_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;
	jule::U32 _41215_ulo;
	std::tie(_41210_uhi,_41215_ulo) = _1a9ba703b_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1a9ba6a63_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if (_41014_lhi < _41210_uhi) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		}
		_40979_c0=_40979_c0 && (_41115_clo == 0LLU);
		_40993_cup=(_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup);
		_1a9ba6a63_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);
		jule::U32 _42917_v = _41110_chi;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);
				jule::U32 _43122_v2 = (_42917_v % 10LL);
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43122_v2 + '0'));
			}
		_iter_next_1ab8e50da:;
		}
		_iter_end_1ab8e50da:;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I32>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(9LL - _42817_n));
		_1a9ba6a63_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I32>((_40920_d._field_nd + 8LL)));
	}
	while ((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0')) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1ab8e530a:;
	}
	_iter_end_1ab8e530a:;
	while ((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0')) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1ab8e853e:;
	}
	_iter_end_1ab8e853e:;
}



inline void _1a9ba6a63_ryu_digits32(_1a948d04d_DecimalSlice& _45422_d,jule::U32 _45443_lower,jule::U32 _45459_central,jule::U32 _4559_upper,jule::Bool _45525_c0,jule::Bool _45539_cup,jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;
	}
	jule::I32 _46013_trimmed = 0LL;
	jule::I32 _46313_c_next_digit = 0LL;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);
			jule::U32 _47118_c = (_45459_central / 10LLU);
			jule::U32 _47125_cdigit = (_45459_central % 10LL);
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);
			if (_47013_l > _47213_u) {
				goto _iter_end_1ab8ebae7;
			}
			if ((_47013_l == static_cast<jule::U32>(static_cast<jule::U32>((_47118_c + 1LLU)))) && (_47118_c < _47213_u)) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			}
			(_46013_trimmed)++;
			_45525_c0=_45525_c0 && (_46313_c_next_digit == 0LL);
			_46313_c_next_digit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1ab8ebae7:;
	}
	_iter_end_1ab8ebae7:;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU));
	}
	if ((_45459_central < _4559_upper) && _45539_cup) {
		(_45459_central)++;
	}
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;
	jule::I32 _51013_n = _45554_endindex;
	while (_51013_n > _45422_d._field_nd) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);
			jule::U32 _51218_v2 = (_50913_v % 100LL);
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ab901ba7:;
	}
	_iter_end_1ab901ba7:;
	if (_51013_n == _45422_d._field_nd) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>(_50913_v + '0'));
	}
	_45422_d._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I32>(_45422_d._field_nd + _46013_trimmed);
}



inline std::tuple<jule::U32,jule::I32,jule::Bool> _1a9ba6b95_mult64bit_pow10(jule::U32 _53420_m,jule::I32 _53432_e2,jule::I32 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I32 _53462_resE = jule::I32();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I32>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	}
	if ((_53441_q < -348LL) || (347LL < _53441_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	}
	jule::U64 _54313_pow = _1a94bb554_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	}
	jule::U64 _54810_hi;
	jule::U64 _54814_lo;
	std::tie(_54810_hi,_54814_lo) = _1a9b85811_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_1a97729d6_mul_by_log10_log2(_53441_q))) - 63LL))) + 57LL));
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>((_54810_hi << 7LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_54814_lo >> 57LLU)))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I32,jule::Bool> _1a9ba6cc7_mult128bit_pow10(jule::U64 _56221_m,jule::I32 _56233_e2,jule::I32 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I32 _56263_resE = jule::I32();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I32>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	}
	if ((_56242_q < -348LL) || (347LL < _56242_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	}
	jule::Array<jule::U64,2> _57113_pow = _1a94bb554_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	}
	_56233_e2+=static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(_1a97729d6_mul_by_log10_log2(_56242_q))) - 127LL))) + 119LL));
	jule::U64 _57910_l1;
	jule::U64 _57914_l0;
	std::tie(_57910_l1,_57914_l0) = _1a9b85811_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;
	jule::U64 _58018_h0;
	std::tie(_58014_h1,_58018_h0) = _1a9b85811_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;
	jule::U64 _58115_carry;
	std::tie(_58110_mid,_58115_carry) = _1a9b8417d_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_58014_h1 << 9LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_58110_mid >> 55LLU))));
	_56263_resE = _56233_e2;
	_56274_exact = ((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU);
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1a9ba6e09_divisible_by_pow5(jule::U64 _58626_m,jule::I32 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	}
	jule::I32 _59013_i = 0LL;
	for (; _59013_i < _58634_k; (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			}
			_58626_m/=5LLU;
		}
	_iter_next_1ab90e797:;
	}
	_iter_end_1ab90e797:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1a9ba703b_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	}
	jule::U64 _60710_hi;
	std::tie(_60710_hi,std::ignore) = _1a9b85811_mul64(static_cast<jule::U64>((_60214_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6089_q = (_60710_hi >> 28LLU);
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6089_q)),static_cast<jule::U32>(static_cast<jule::U32>(_60214_x - static_cast<jule::U64>(static_cast<jule::U64>((_6089_q * 1000000000LL))))));
}



inline void _1a9ba8070_trim(_1a9ba7514_Decimal& _33314_a) {
	while ((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0')) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1ab915cdc:;
	}
	_iter_end_1ab915cdc:;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	}
}



inline void _1a9ba81a2_right_shift(_1a9ba7514_Decimal& _34321_a,jule::U32 _34333_k) {
	jule::I32 _34413_r = 0LL;
	jule::I32 _34513_w = 0LL;
	jule::U32 _34813_n = 0LLU;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if (_34413_r >= _34321_a._field_nd) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;
				}
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U32>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1ab919373:;
				}
				_iter_end_1ab919373:;
				goto _iter_end_1ab9175b3;
			}
			jule::U32 _36213_c = static_cast<jule::U32>(_34321_a._field_d[_34413_r]);
			_34813_n=static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_34813_n * 10LLU))) + _36213_c)) - '0');
		}
	_iter_next_1ab9175b3:;
	}
	_iter_end_1ab9175b3:;
	_34321_a._field_dp-=static_cast<jule::I32>((_34413_r - 1LL));
	jule::U32 _3679_mask = static_cast<jule::U32>((static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(1LL << _34333_k))) - 1LLU));
	for (; _34413_r < _34321_a._field_nd; (_34413_r)++) {
		{
			jule::U32 _37113_c = static_cast<jule::U32>(_34321_a._field_d[_34413_r]);
			jule::U32 _37213_dig = _34813_n >> _34333_k;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>(_37213_dig + '0'));
			(_34513_w)++;
			_34813_n=static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>((_34813_n * 10LLU))) + _37113_c)) - '0');
		}
	_iter_next_1ab91b92a:;
	}
	_iter_end_1ab91b92a:;
	while ((_34813_n > 0LLU)) {
		{
			jule::U32 _38113_dig = _34813_n >> _34333_k;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_dig + '0'));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			}
			_34813_n=static_cast<jule::U32>((_34813_n * 10LLU));
		}
	_iter_next_1ab91d410:;
	}
	_iter_end_1ab91d410:;
	_34321_a._field_nd=_34513_w;
	_1a9ba8070_trim(_34321_a);
}



inline jule::Bool _1a9ba82d4_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b,jule::I32 _39738_end,jule::Str _39748_s) {
	jule::I32 _39813_i = 0LL;
	for (; _39813_i < static_cast<jule::I32>(static_cast<jule::I32>(_39748_s.len())); (_39813_i)++) {
		{
			if (_39813_i >= _39738_end) {
				return true;
			}
			if (_39724_b[_39813_i] != _39748_s[_39813_i]) {
				return _39724_b[_39813_i] < _39748_s[_39813_i];
			}
		}
	_iter_next_1ab921105:;
	}
	_iter_end_1ab921105:;
	return false;
}



inline void _1a9ba8416_left_shift(_1a9ba7514_Decimal& _41120_a,jule::U32 _41132_k) {
	jule::I32 _41213_delta = _1a956ed77_LEFTCHEATS[static_cast<jule::I32>(_41132_k)]._field_delta;
	if (_1a9ba82d4_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1a956ed77_LEFTCHEATS[static_cast<jule::I32>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	}
	jule::I32 _41713_r = _41120_a._field_nd;
	jule::I32 _41813_w = _41120_a._field_nd + _41213_delta;
	jule::U32 _42113_n = 0LLU;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_41120_a._field_d[_41713_r]))) - '0'))) << _41132_k);
			jule::U32 _42513_quo = (_42113_n / 10LLU);
			jule::U32 _42613_rem = _42113_n - static_cast<jule::U32>(static_cast<jule::U32>(10LLU * _42513_quo));
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>(_42613_rem + '0'));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			}
			_42113_n=_42513_quo;
		}
	_iter_next_1ab924856:;
	}
	_iter_end_1ab924856:;
	while ((_42113_n > 0LLU)) {
		{
			jule::U32 _43813_quo = (_42113_n / 10LLU);
			jule::U32 _43913_rem = _42113_n - static_cast<jule::U32>(static_cast<jule::U32>(10LLU * _43813_quo));
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>(_43913_rem + '0'));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			}
			_42113_n=_43813_quo;
		}
	_iter_next_1ab9271c7:;
	}
	_iter_end_1ab9271c7:;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	}
	_41120_a._field_dp+=_41213_delta;
	_1a9ba8070_trim(_41120_a);
}



inline jule::Bool _1a9ba8548_should_round_up(_1a9ba7514_Decimal& _45821_a,jule::I32 _45833_nd) {
	if ((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd)) {
		return false;
	}
	if ((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd)) {
		if (_45821_a._field_trunc) {
			return true;
		}
		return (_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU);
	}
	return _45821_a._field_d[_45833_nd] >= '5';
}



inline jule::Str _1a9ba8834_fmt_uint(jule::U64 _6017_i,jule::I32 _6025_base) {
	if ((true && (_6017_i < 100LLU)) && (_6025_base == 10LL)) {
		return _1a9ba8bca_small(static_cast<jule::I32>(static_cast<jule::I32>(_6017_i)));
	}
	jule::Str _6413_s;
	std::tie(std::ignore,_6413_s) = _1a9ba8e3e_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1a9ba8966_fmt_int(jule::I64 _7116_i,jule::I32 _7124_base) {
	if (((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL)) {
		return _1a9ba8bca_small(static_cast<jule::I32>(static_cast<jule::I32>(_7116_i)));
	}
	jule::Str _7513_s;
	std::tie(std::ignore,_7513_s) = _1a9ba8e3e_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1a9ba8a98_itoa(jule::I32 _8013_i) {
	return _1a9ba8966_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1a9ba8bca_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i << 1LLU,((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1a9ba8d0c_is_power_of_two(jule::I32 _9220_x) {
	return ((_9220_x & static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_9220_x - 1LL))))) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1a9ba8e3e_fmt_bits(jule::Slice<jule::U8> _10117_dst,jule::U64 _10134_u,jule::I32 _10142_base,jule::Bool _10153_neg,jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if ((_10142_base < 2LL) || (_10142_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	}
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I32 _10813_i = _10713_a.len();
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	}
	if ((_10142_base == 10LL)) {
		
		jule::U32 _14917_us = static_cast<jule::U32>(_10134_u);
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = (_14917_us % 100LL) << 1LLU;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_1ab936769:;
		}
		_iter_end_1ab936769:;
		jule::U32 _15913_is = _14917_us << 1LLU;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		}
	} else if (_1a9ba8d0c_is_power_of_two(_10142_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1a9b7c5d8_trailing_zeros(static_cast<jule::U32>(static_cast<jule::U32>(_10142_base)))) & 7LLU);
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);
		jule::U32 _17613_m = (static_cast<jule::U32>(_10142_base) - 1LLU);
		while (_10134_u >= _17513_b) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u) & _17613_m)]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1ab940036:;
		}
		_iter_end_1ab940036:;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);
		while (_10134_u >= _18713_b) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u - static_cast<jule::U64>(static_cast<jule::U64>(_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1ab9428c9:;
		}
		_iter_end_1ab9428c9:;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u))]);
	}
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	}
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	}
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1a9c50117_lshift_unsig(_1a9c46e77_Const& _58722_c,_1a9c46e77_Const& _58733_x) {
	jule::U64 _5889_l = _1a9c49166_as_u64(&_58722_c);
	jule::U64 _5899_r = _1a9c49166_as_u64(&_58733_x);
	_1a9c498c5_set_u64(&_58722_c, static_cast<jule::U64>(_5889_l << _5899_r));
}



inline void _1a9c50414_rshift_unsig(_1a9c46e77_Const& _59322_c,_1a9c46e77_Const& _59333_x) {
	jule::U64 _5949_l = _1a9c49166_as_u64(&_59322_c);
	jule::U64 _5959_r = _1a9c49166_as_u64(&_59333_x);
	_1a9c498c5_set_u64(&_59322_c, static_cast<jule::U64>(_5949_l >> _5959_r));
}



inline jule::Str _1a9cceb47_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab9c991c:;
			{
				return _1a9cce5d6_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab9c9983:;
			{
				return _1a9cce6c4_SYS_UINT;
			}
		}
		else {
			_case_begin_1ab9c5066:;
			{
				return _4521_kind;
			}
		}
		_match_end_1ab9c5363:;
	}
}



inline jule::I32 _1a9ccedde_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab9caac7:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab9ca731:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab9ca797:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab9ca80d:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ab9ca896:;
			{
				return _1a9cce4e8_BIT_SIZE;
			}
		}
		else {
			_case_begin_1ab9ca577:;
			{
				return -1LL;
			}
		}
		_match_end_1ab9c9b70:;
	}
}



inline jule::Str _1a9cd01ca_int_from_bits(jule::I32 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ab9cca52:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab9ccb62:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab9ccbc8:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab9cc887:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1ab9cc6cd:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab9cabe8:;
	}
}



inline jule::Str _1a9cd0472_uint_from_bits(jule::I32 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ab9ce01a:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ab9ce12a:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab9ce191:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab9cdd50:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1ab9cd899:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab9cd976:;
	}
}



inline jule::Str _1a9cd0719_float_from_bits(jule::I32 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1ab9d047d:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ab9d04e4:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1ab9ced62:;
			{
				return jule::Str();
			}
		}
		_match_end_1ab9cee3e:;
	}
}



inline jule::Bool _1a9cd1275_check_bit_float(jule::Str _15024_val,jule::I32 _15034_bit) {
	({
		auto except = _1a96c9058_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I32 _1a9cd151c_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if ((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_1ab9d5c58:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab9d4c24:;
			{
				return 64LL;
			}
		}
		_match_end_1ab9d5b8c:;
	}
}



inline jule::I32 _1a9cd17b4_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if ((-128LL <= _17623_x) && (_17623_x <= 127LL)) {
			_case_begin_1ab9d6b9e:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _17623_x) && (_17623_x <= 32767LL)) {
			_case_begin_1ab9d6c15:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL)) {
			_case_begin_1ab9d6cc0:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab9d6990:;
			{
				return 64LL;
			}
		}
		_match_end_1ab9d6891:;
	}
}



inline jule::I32 _1a9cd1a5b_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1ab9d8c17:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1ab9d8c7d:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1ab9d8d27:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ab9d84ec:;
			{
				return 64LL;
			}
		}
		_match_end_1ab9d8442:;
	}
}



inline void _1a9cd1bc1_update_target(void) {
	{
		{
			auto &_match_expr{ _1d77ee392_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ab9da279:;
				{
					_1a9cce4e8_BIT_SIZE=64LL;
					_1a9cce5d6_SYS_INT=jule::Str("i64", 3);
					_1a9cce6c4_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ab9da2e0:;
				{
					_1a9cce4e8_BIT_SIZE=32LL;
					_1a9cce5d6_SYS_INT=jule::Str("i32", 3);
					_1a9cce6c4_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1ab9da1e1:;
		}
	}
}



inline void _1a9cd1d36_init(void) {
	_1a9cd1bc1_update_target();
}



inline jule::F64 _1a9cd4212_min(jule::Str _6116_k) {
	_6116_k=_1a9cceb47_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab9dcdc5:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab9dca40:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab9dcaa6:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab9dcb1c:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab9dcba5:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab9dcc2c:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1ab9da499:;
			{
				return 0LL;
			}
		}
		_match_end_1ab9da598:;
	}
}



inline jule::F64 _1a9cd44ed_max(jule::Str _8316_k) {
	_8316_k=_1a9cceb47_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab9de976:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab9de9dc:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab9dea53:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab9deadb:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab9deb52:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab9debb8:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab9de5d0:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab9de646:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab9de6ac:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab9ded83:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1ab9dd029:;
			{
				return 0LL;
			}
		}
		_match_end_1ab9de2b1:;
	}
}



inline jule::Bool _1a9cd4960_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1a9cd4c4b_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _1a9cd4ee3_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _1a9cd52ce_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _1a9cd5576_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1a9cd581d_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _1a9cd5ab5_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _1a9cd5de5_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _1a9cd618c_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1a9cd6434_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1a9cd6775_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ab9e84da:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab9e8551:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ab9e861c:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab9e8683:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab9e8111:;
			{
				return _1a9cd4960_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab9e8177:;
			{
				return _1a9cd4c4b_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab9e81dd:;
			{
				return _1a9cd4ee3_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab9e8254:;
			{
				return _1a9cd52ce_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab9e873d:;
			{
				return _1a9cd5576_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab9e87a4:;
			{
				return _1a9cd581d_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab9e881a:;
			{
				return _1a9cd5ab5_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab9e8892:;
			{
				return _1a9cd5de5_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab9e8919:;
			{
				return _1a9cd618c_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab9e8991:;
			{
				return _1a9cd6434_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ab9e8a18:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ab9e8a90:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1ab9e751c:;
			{
				return false;
			}
		}
		_match_end_1ab9e7dd0:;
	}
}



inline jule::Bool _1a9cd6a1c_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1a9cd6cb4_is_i32_greater(jule::Str _11527_k) {
	return (_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3));
}



inline jule::Bool _1a9cd705b_is_i64_greater(jule::Str _12027_k) {
	return ((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3));
}



inline jule::Bool _1a9cd7303_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1a9cd76bb_is_u32_greater(jule::Str _13227_k) {
	return (_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3));
}



inline jule::Bool _1a9cd7963_is_u64_greater(jule::Str _13827_k) {
	return ((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3));
}



inline jule::Bool _1a9cd7c0a_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1a9cd7ea2_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1a9cd82e3_is_greater(jule::Str _15523_k1,jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aba029cd:;
			{
				return _1a9cd9415_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aba02a44:;
			{
				return _1a9cd9701_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aba02736:;
			{
				return _1a9cd9701_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aba0279c:;
			{
				return _1a9cd6a1c_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aba02813:;
			{
				return _1a9cd6cb4_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aba0247d:;
			{
				return _1a9cd705b_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aba024e4:;
			{
				return _1a9cd7303_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aba0255a:;
			{
				return _1a9cd76bb_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aba025d2:;
			{
				return _1a9cd7963_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aba02b10:;
			{
				return _1a9cd7c0a_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aba02b87:;
			{
				return _1a9cd7ea2_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aba02c0e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab9ed534:;
			{
				return false;
			}
		}
		_match_end_1aba0233a:;
	}
}



inline jule::Bool _1a9cd9415_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _1a9cd9701_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _1a9cd9998_is_int(jule::Str _4615_k) {
	return _1a9cd9415_is_sig_int(_4615_k) || _1a9cd9701_is_unsig_int(_4615_k);
}



inline jule::Bool _1a9cd9c84_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _1a9cda02b_is_num(jule::Str _5615_k) {
	return _1a9cd9998_is_int(_5615_k) || _1a9cd9c84_is_float(_5615_k);
}



inline jule::Bool _1a9d59dd1_is_ascii(jule::I32 _1017_r) {
	
	return (_1017_r <= 127LL);
}



inline jule::I32 _1a9d5b8a5_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::I32 _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a9d5c345_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1d6733915_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1a9d5b9d7_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a9d5bc5c_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I32>(_4215_bytes.len()));
	jule::I32 _4813_i = 0LL;
	while (_4813_i < static_cast<jule::I32>(static_cast<jule::I32>(_4215_bytes.len()))) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a9d5c686_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::I32 _5421_size;
				std::tie(_5418_r,_5421_size) = _1d6733915_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1d6734c02_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_1aba11778:;
	}
	_iter_end_1aba11778:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a9d5c004_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aba15e75:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aba16580:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aba165e6:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aba1665c:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aba166c3:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aba1674a:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aba167c2:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aba16849:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aba168c1:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aba16948:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1aba1642b:;
	}
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a9d5c345_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes,jule::I32& _9442_i) {
	jule::U8 _9510_b;
	jule::Bool _9513_ok;
	std::tie(_9510_b,_9513_ok) = _1a9d5c004_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	}
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1aba1b662:;
			{
				
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1a9833d61_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aba1c0e1:;
			{
				
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1a9833d61_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aba1bd16:;
			{
				
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a9833d61_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1aba1a991:;
			{
				
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a9833d61_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1aba1b1bc:;
	}
}



inline jule::Slice<jule::U8> _1a9d5c686_str_esq_seq(jule::Slice<jule::U8> _12616_bytes,jule::I32& _12636_i) {
	jule::I32 _1279_r = _1a9d5c345_rune_from_esq_seq(_12616_bytes,_12636_i);
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1279_r)))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I32 _1a9e29d91_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::I32& _940_start) {
	jule::I32 _1013_i = _940_start;
	while (_1013_i < static_cast<jule::I32>(static_cast<jule::I32>(_924_bytes.len()))) {
		{
			jule::I32 _1214_r;
			jule::I32 _1217_size;
			std::tie(_1214_r,_1217_size) = _1d6733915_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_1aba4b7b3:;
	}
	_iter_end_1aba4b7b3:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a9e189ea_get_format_range(jule::I32& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::I32 _279_start = _2630_i;
	jule::I32 _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::I32>(static_cast<jule::I32>(_2643_bytes.len()))) {
		{
			jule::I32 _3014_r;
			jule::I32 _3017_size;
			std::tie(_3014_r,_3017_size) = _1d6733915_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1aba4e134:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aba4e2ee:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_1aba4e299:;
			}
		}
	_iter_next_1aba4d41e:;
	}
	_iter_end_1aba4d41e:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a9e18b2c_fmt_by_default(jule::Any& _4520_arg) {
	if (_4520_arg == jule::Any(jule::Any(nullptr))) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1aba508c7:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a94b8595_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1aba510e2:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a94b8595_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1aba514aa:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8966_fmt_int(static_cast<jule::I8>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1aba50201:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8966_fmt_int(static_cast<jule::I16>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1aba51345:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8966_fmt_int(static_cast<jule::I32>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1aba513ab:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8966_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1aba50cc3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8834_fmt_uint(static_cast<jule::U8>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1aba50d39:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8834_fmt_uint(static_cast<jule::U16>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1aba50da0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8834_fmt_uint(static_cast<jule::U32>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1aba50e16:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1a9ba8834_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1aba51554:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1aba515ba:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1aba4e6d9:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1aba4d63e:;
	}
}



inline jule::Slice<jule::U8> _1a9e18302_apply_fmt_by_default(jule::I32& _8330_j,jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];
	(_8330_j)++;
	return _1a9e18b2c_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1a9e18434_apply_fmt(jule::Slice<jule::U8>& _9119_fmt,jule::I32& _9137_j,jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1a9e18302_apply_fmt_by_default(_9137_j,_9146_args);
	}
	if ((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1a9e191d2_format_bytes(jule::Str _10517_fmt,jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	}
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I32>(_10517_fmt.len()));
	jule::I32 _11413_j = 0LL;
	jule::I32 _11513_last = 0LL;
	jule::I32 _11613_i = _1a9e29d91_find_format_prefix(_10613_fmt_bytes,_11513_last);
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I32>(_1a9e29d91_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1a9e189ea_get_format_range(_11613_i,_10613_fmt_bytes);
			if ((_11917_format == nullptr)) {
				goto _iter_next_1aba5ccbe;
			}
			_11213_bytes=jule::append(_11213_bytes,_1a9e18434_apply_fmt(_11917_format,_11413_j,_10527_args));
			if (_11413_j >= static_cast<jule::I32>(static_cast<jule::I32>(_10527_args.len()))) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I32>(_10613_fmt_bytes.len());
				goto _iter_end_1aba5ccbe;
			}
			_11513_last=_11613_i;
		}
	_iter_next_1aba5ccbe:;
	}
	_iter_end_1aba5ccbe:;
	if (_11513_last < static_cast<jule::I32>(static_cast<jule::I32>(_10613_fmt_bytes.len()))) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	}
	return _11213_bytes;
}



inline jule::Str _1a9e19314_format(jule::Str _16515_fmt,jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1a9e191d2_format_bytes(_16515_fmt,_16525_args));
}



inline jule::Bool _1a8d99a6a_kind_uses_generics(jule::Ptr<_1a9d9ae66_TypeKind> _42023_k,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>& _42038_generics) {
	jule::Str _4219_pk = _1a9d9b31d_to_str(_42023_k.ptr());
	{
		auto &expr = _42038_generics;
		auto it = expr.begin();
		_iter_begin_1ac65b092:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8c246_GenericDecl> &_1ac65b13b_g = *it;
			{
				if (_1d749edde_contains(_4219_pk,_1ac65b13b_g.get()._field_ident)) {
					return true;
				}
			}
			_iter_next_1ac65b092:;
			++it;
			goto _iter_begin_1ac65b092;
		}
		_iter_end_1ac65b092:;
	}
	return false;
}



inline jule::Bool _1a8d99e44_parameter_uses_generics(jule::Ptr<_1a8d9357a_Param>& _43029_p,jule::Slice<jule::Ptr<_1d7b8c246_GenericDecl>>& _43041_generics) {
	if (_1a8d93ba7_is_self(_43029_p.ptr())) {
		return false;
	}
	return _1a8d99a6a_kind_uses_generics(_43029_p.get()._field_kind.get()._field_kind,_43041_generics);
}



inline jule::Ptr<_1a9d9ed05_TypeSymbol> _1a8d9c7d7_build_type(jule::Ptr<_1d7a0e75b_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(_8419_t,jule::Ptr<_1a9d9ae66_TypeKind>()));
}



inline jule::Ptr<_1a9d72ca6_Value> _1a8d9cac3_build_expr(jule::Ptr<_1d7b09a43_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(_9319_expr,jule::Ptr<_1a9d71c2d_Data>()));
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a8d9cd6a_build_type_alias(jule::Ptr<_1d7b8e8b9_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_1a8d9c7d7_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>()));
}



inline jule::Ptr<_1bd010a02_Field> _1a8d9d156_build_field(jule::Ptr<_1d7b90d82_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1bd010a02_Field>(_1bd010a02_Field(jule::Ptr<_1a8d82b41_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_1a8d9c7d7_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_1bd010a02_Field>> _1a8d9d3ed_build_fields(jule::Slice<jule::Ptr<_1d7b90d82_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1bd010a02_Field>> _12513_fields = jule::Slice<jule::Ptr<_1bd010a02_Field>>::alloc(0LL,static_cast<jule::I32>(_12422_decls.len()));
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1ac660dcc:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b90d82_FieldDecl> _1ac660a14_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1a8d9d156_build_field(_1ac660a14_decl));
			}
			_iter_next_1ac660dcc:;
			++it;
			goto _iter_begin_1ac660dcc;
		}
		_iter_end_1ac660dcc:;
	}
	return _12513_fields;
}



inline jule::Ptr<_1a8d82b41_Struct> _1a8d9d695_build_struct(jule::Ptr<_1d7b916e0_StructDecl> _13221_decl) {
	return jule::new_ptr<_1a8d82b41_Struct>(_1a8d82b41_Struct(jule::Ptr<_1a9d0a03a_Sema>(),jule::Slice<jule::Ptr<_1a8d82b41_Struct>>(),jule::Slice<jule::Ptr<_1a8d82b41_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_1a8d9d3ed_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_1a8d94db7_Fn>>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_1a8ea7a57_Trait>>(),jule::Slice<jule::Ptr<_1a8d857c0_StructIns>>()));
}



inline jule::Ptr<_1a8d9357a_Param> _1a8d9d93c_build_param(jule::Ptr<_1d7b8d0b0_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_1a8d9c7d7_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_1a8d9357a_Param>> _1a8d9dc6c_build_params(jule::Slice<jule::Ptr<_1d7b8d0b0_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1a8d9357a_Param>> _15613_params = jule::Slice<jule::Ptr<_1a8d9357a_Param>>::alloc(0LL,static_cast<jule::I32>(_15522_decls.len()));
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1ac66375e:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8d0b0_ParamDecl> _1ac663ad3_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1a8d9d93c_build_param(_1ac663ad3_decl));
			}
			_iter_next_1ac66375e:;
			++it;
			goto _iter_begin_1ac66375e;
		}
		_iter_end_1ac66375e:;
	}
	return _15613_params;
}



inline jule::Ptr<_1a8d92da4_RetType> _1a8d9e014_build_ret_type(jule::Ptr<_1d7a17db3_RetTypeDecl> _16323_decl) {
	if ((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a8d92da4_RetType>(_1a8d92da4_RetType(_1a8d9c7d7_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_1a8d94db7_Fn> _1a8d9e2ab_build_fn(jule::Ptr<_1d7b8d29c_FnDecl> _17317_decl) {
	return jule::new_ptr<_1a8d94db7_Fn>(_1a8d94db7_Fn(jule::Ptr<_1a9d0a03a_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_1a8d9e014_build_ret_type(_17317_decl.get()._field_result),_1a8d9dc6c_build_params(_17317_decl.get()._field_params),jule::Ptr<_1a8d82b41_Struct>(),jule::Slice<jule::Ptr<_1a8d98063_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _1a8d9e553_build_methods(jule::Slice<jule::Ptr<_1d7b8d29c_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1a8d94db7_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1a8d94db7_Fn>>::alloc(0LL,static_cast<jule::I32>(_19123_decls.len()));
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1ac667d3a:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8d29c_FnDecl> _1ac6679a5_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1a8d9e2ab_build_fn(_1ac6679a5_decl));
			}
			_iter_next_1ac667d3a:;
			++it;
			goto _iter_begin_1ac667d3a;
		}
		_iter_end_1ac667d3a:;
	}
	return _19213_methods;
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a8d9e7ea_build_trait(jule::Ptr<_1d7b91cea_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1a8ea7a57_Trait>(_1a8ea7a57_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_1a8d9e553_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_1a8d82b41_Struct>>()));
}



inline jule::Ptr<_1a93b2c75_EnumItem> _1a8d9ea92_build_enum_item(jule::Ptr<_1d7b9016c_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1a93b2c75_EnumItem>(_1a93b2c75_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_1a8d9cac3_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>> _1a8d9ed39_build_enum_items(jule::Slice<jule::Ptr<_1d7b9016c_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1a93b2c75_EnumItem>>::alloc(0LL,static_cast<jule::I32>(_21626_decls.len()));
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1ac66a711:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b9016c_EnumItemDecl> _1ac66a27c_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1a8d9ea92_build_enum_item(_1ac66a27c_decl));
			}
			_iter_next_1ac66a711:;
			++it;
			goto _iter_begin_1ac66a711;
		}
		_iter_end_1ac66a711:;
	}
	return _21713_items;
}



inline jule::Ptr<_1a943b309_Enum> _1a8da00d1_build_enum(jule::Ptr<_1d7b9058a_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1a943b309_Enum>(_1a943b309_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_1a8d9c7d7_build_type(_22419_decl.get()._field_kind),_1a8d9ed39_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_1a9d2553e_Var> _1a8da0499_build_var(jule::Ptr<_1d7b8d489_VarDecl> _23418_decl) {
	return jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var(jule::Ptr<_1a9cc76bc_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_1a8d9c7d7_build_type(_23418_decl.get()._field_kind),_1a8d9cac3_build_expr(_23418_decl.get()._field_expr),static__1a8d9b3a7_new(),_23418_decl.get()._field_directives,jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>()));
}



inline jule::Slice<jule::Ptr<_1a9d2553e_Var>> _1a8da0741_build_vars(jule::Slice<jule::Ptr<_1d7b8d489_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1a9d2553e_Var>> _25213_vars = jule::Slice<jule::Ptr<_1a9d2553e_Var>>::alloc(0LL,static_cast<jule::I32>(_25119_decls.len()));
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1ac66e01c:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b8d489_VarDecl> _1ac66db76_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1a8da0499_build_var(_1ac66db76_decl));
			}
			_iter_next_1ac66e01c:;
			++it;
			goto _iter_begin_1ac66e01c;
		}
		_iter_end_1ac66e01c:;
	}
	return _25213_vars;
}



inline jule::Ptr<_1a922a34b_Impl> _1a8da09d8_build_impl(jule::Ptr<_1d7b92405_Impl> _25919_decl) {
	return jule::new_ptr<_1a922a34b_Impl>(_1a922a34b_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_1a8d9e553_build_methods(_25919_decl.get()._field_methods),_1a8da0741_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9c60d3c_new_scope_checker_base(jule::Ptr<_1a9d0a03a_Sema>& _4032_s,jule::Ptr<_1a8d98063_FnIns> _4046_owner) {
	return jule::new_ptr<_1a9cdbc53_ScopeChecker>(_1a9cdbc53_ScopeChecker(jule::Ptr<_1d7b77374_Token>(),_4032_s,_4046_owner,jule::Ptr<_1a9cdbc53_ScopeChecker>(),jule::I32(),jule::new_ptr<_1a9d6baa2_SymbolTable>(_1a9d6baa2_SymbolTable()),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1d7b8cdc3_ScopeTree>(),jule::Ptr<_1a8d98063_FnIns>(),jule::U32(),jule::U32(),jule::Ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>>(),jule::I32()));
}



inline jule::Ptr<_1a9cdbc53_ScopeChecker> _1a9c7656c_new_scope_checker(jule::Ptr<_1a9d0a03a_Sema>& _4827_s,jule::Ptr<_1a8d98063_FnIns> _4841_owner) {
	jule::Ptr<_1a9cdbc53_ScopeChecker> _4913_base = _1a9c60d3c_new_scope_checker_base(_4827_s,_4841_owner);
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a9cdb879_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a9cdba66_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1a9cdb879_ScopeLabel> _1a9c8a11e_find_label_parent(jule::Str _5822_ident,jule::Ptr<_1a9cdbc53_ScopeChecker> _5838_scope) {
	jule::Ptr<_1a9cdb879_ScopeLabel> _5913_label = _1a9cde728_find_label_scope(_5838_scope, _5822_ident);
	while ((_5913_label == nullptr)) {
		{
			if ((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr)) {
				return nullptr;
			}
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1a9cde728_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1ac6727d4:;
	}
	_iter_end_1ac6727d4:;
	return _5913_label;
}



inline jule::Bool _1a9ca5d71_stmt_is_goto_scope(jule::Any& _7224_stmt,jule::Ptr<_1a9cc76bc_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a9cc76bc_Scope>>()) {
			_case_begin_1ac674929:;
			{
				return _7224_stmt.operator jule::Ptr<_1a9cc76bc_Scope>() == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89959_InfIter>>()) {
			_case_begin_1ac674990:;
			{
				return _7224_stmt.operator jule::Ptr<_1a9c89959_InfIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89d33_RangeIter>>()) {
			_case_begin_1ac674440:;
			{
				return _7224_stmt.operator jule::Ptr<_1a9c89d33_RangeIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c89b46_WhileIter>>()) {
			_case_begin_1ac6744a6:;
			{
				return _7224_stmt.operator jule::Ptr<_1a9c89b46_WhileIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9cdad95_Match>>()) {
			_case_begin_1ac67451c:;
			{
				jule::Ptr<_1a9cdad95_Match> _8313_m = _7224_stmt.operator jule::Ptr<_1a9cdad95_Match>();
				{
					auto &expr = _8313_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1ac676d8d:;
					if (it != expr.end()) {
						jule::Ptr<_1a9cdb2b3_Case> &_1ac676e48_c = *it;
						{
							if (_1ac676e48_c.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1ac676d8d:;
						++it;
						goto _iter_begin_1ac676d8d;
					}
					_iter_end_1ac676d8d:;
				}
				return (_8313_m.get()._field_default != nullptr) && (_8313_m.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9c78d33_Conditional>>()) {
			_case_begin_1ac674583:;
			{
				jule::Ptr<_1a9c78d33_Conditional> _9113_c = _7224_stmt.operator jule::Ptr<_1a9c78d33_Conditional>();
				{
					auto &expr = _9113_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1ac678477:;
					if (it != expr.end()) {
						jule::Ptr<_1a9cce0b9_If> &_1ac678730_elif = *it;
						{
							if (_1ac678730_elif.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1ac678477:;
						++it;
						goto _iter_begin_1ac678477;
					}
					_iter_end_1ac678477:;
				}
				return (_9113_c.get()._field_default != nullptr) && (_9113_c.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else {
			_case_begin_1ac6742db:;
			{
				return false;
			}
		}
		_match_end_1ac6741ba:;
	}
}



inline jule::I32 _1a9ca858d_count_match_type(jule::Ptr<_1a9cdad95_Match>& _10322_m,jule::Ptr<_1a9d9ae66_TypeKind>& _10334_t) {
	jule::I32 _10413_n = 0LL;
	jule::Str _1059_kind = _1a9d9b31d_to_str(_10334_t.ptr());
	_julec_label_loop:;
	{
		auto &expr = _10322_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ac67a215:;
		if (it != expr.end()) {
			jule::Ptr<_1a9cdb2b3_Case> &_1ac67a314_c = *it;
			{
				if ((_1ac67a314_c == nullptr)) {
					goto _iter_next_1ac67a215;
				}
				{
					auto &expr = _1ac67a314_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ac67a7cb:;
					if (it != expr.end()) {
						jule::Ptr<_1a9d71c2d_Data> &_1ac67ad2b_expr = *it;
						{
							if ((_1ac67ad2b_expr == nullptr)) {
								goto _iter_end_1ac67a215;
							}
							if (_1059_kind == _1a9d9b31d_to_str(_1ac67ad2b_expr.get()._field_model.operator jule::Ptr<_1a9d9ae66_TypeKind>().ptr())) {
								(_10413_n)++;
							}
						}
						_iter_next_1ac67a7cb:;
						++it;
						goto _iter_begin_1ac67a7cb;
					}
					_iter_end_1ac67a7cb:;
				}
			}
			_iter_next_1ac67a215:;
			++it;
			goto _iter_begin_1ac67a215;
		}
		_iter_end_1ac67a215:;
	}
	return _10413_n;
}



inline jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _1a9ca8d1e_get_datas_from_tuple_data(jule::Ptr<_1a9d71c2d_Data>& _12735_d) {
	if ((_1a9d9e94d_tup(_12735_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _12735_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1a8d8d487_TupleExprModel>>()) {
				_case_begin_1ac67dcc9:;
				{
					return _12735_d.get()._field_model.operator jule::Ptr<_1a8d8d487_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1ac67c514:;
				{
					jule::Ptr<_1a9da5129_Tuple> _13321_t = _1a9d9e94d_tup(_12735_d.get()._field_kind.ptr());
					jule::Slice<jule::Ptr<_1a9d71c2d_Data>> _13421_r = jule::Slice<jule::Ptr<_1a9d71c2d_Data>>::alloc(0LL,static_cast<jule::I32>(_13321_t.get()._field_types.len()));
					{
						auto &expr = _13321_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1ac67d933:;
						if (it != expr.end()) {
							jule::Ptr<_1a9d9ae66_TypeKind> _1ac67d38e_kind = *it;
							{
								_13421_r = jule::alloc_for_append(_13421_r,1);_13421_r.__push(jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(_1ac67d38e_kind,jule::Ptr<_1a9d9ae66_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>())));
							}
							_iter_next_1ac67d933:;
							++it;
							goto _iter_begin_1ac67d933;
						}
						_iter_end_1ac67d933:;
					}
					return _13421_r;
				}
			}
			_match_end_1ac67c4ae:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1a9d71c2d_Data>>({_12735_d});
	}
}



inline jule::Slice<jule::Any> _1a9ca9957_get_expr_models(jule::Any& _14825_m) {
	{
		auto &_match_expr{ _14825_m };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8960b_TupleExpr>>()) {
			_case_begin_1ac67c68a:;
			{
				jule::Ptr<_1d7b8960b_TupleExpr> _15117_tup = _14825_m.operator jule::Ptr<_1d7b8960b_TupleExpr>();
				jule::Slice<jule::Any> _15217_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I32>(_15117_tup.get()._field_expr.len()));
				{
					auto &expr = _15117_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ac680ea7:;
					if (it != expr.end()) {
						jule::Ptr<_1d7b09a43_Expr> _1ac680d53_expr = *it;
						{
							_15217_models = jule::alloc_for_append(_15217_models,1);_15217_models.__push(_1ac680d53_expr.get()._field_kind);
						}
						_iter_next_1ac680ea7:;
						++it;
						goto _iter_begin_1ac680ea7;
					}
					_iter_end_1ac680ea7:;
				}
				return _15217_models;
			}
		}
		else {
			_case_begin_1ac67b090:;
			{
				return jule::Slice<jule::Any>({_14825_m});
			}
		}
		_match_end_1ac67eba9:;
	}
}



inline jule::Bool _1a9cabd77_check_mut(jule::Ptr<_1a9d0a03a_Sema>& _16219_s,jule::Ptr<_1a9d71c2d_Data>& _16230_left,jule::Ptr<_1a9d71c2d_Data> _16247_right,jule::Ptr<_1d7b77374_Token> _16261_op) {
	jule::Bool _16275_ok = jule::Bool();
	{
		
		if ((!(_16230_left.get()._field_mutable))) {
			_case_begin_1ac682926:;
			{
				_1a9d0c955_push_err(_16219_s.ptr(), _16261_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else if (((_16247_right != nullptr) && (!(_16247_right.get()._field_mutable))) && _1a9d9c30d_mutable(_16247_right.get()._field_kind.ptr())) {
			_case_begin_1ac682a03:;
			{
				if ((_16261_op.get()._field_kind != jule::Str("=", 1)) && (_1a9d9e211_strct(_16247_right.get()._field_kind.ptr()) != nullptr)) {
					_16275_ok = true;
					return _16275_ok;
				}
				_1a9d0c955_push_err(_16219_s.ptr(), _16261_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_16247_right.get()._field_kind.ptr()))}));
				_16275_ok = false;
				return _16275_ok;
			}
		}
		else {
			_case_begin_1ac6822e9:;
			{
				_16275_ok = true;
				return _16275_ok;
			}
		}
		_match_end_1ac681caa:;
	}
}



inline jule::Bool _1a9cac608_check_assign(jule::Ptr<_1a9d0a03a_Sema>& _18122_s,jule::Ptr<_1a9d71c2d_Data>& _18137_left,jule::Ptr<_1a9d71c2d_Data> _18154_right,jule::Ptr<_1d7b77374_Token> _18168_op) {
	jule::Bool _18182_ok = jule::Bool();
	jule::Ptr<_1a8d98063_FnIns> _1829_f = _1a9d9de9c_fnc(_18137_left.get()._field_kind.ptr());
	if (((_1829_f != nullptr) && (_1829_f.get()._field_decl != nullptr)) && _1829_f.get()._field_decl.get()._field_global) {
		_1a9d0c955_push_err(_18122_s.ptr(), _18168_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18182_ok = false;
		return _18182_ok;
	}
	{
		
		if (_1a9d725e1_is_const(_18137_left.ptr())) {
			_case_begin_1ac687d16:;
			{
				_1a9d0c955_push_err(_18122_s.ptr(), _18168_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a9d0cc74_push_suggestion(_18122_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_18137_left.get()._field_lvalue))) {
			_case_begin_1ac687dd2:;
			{
				_1a9d0c955_push_err(_18122_s.ptr(), _18168_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else if ((!(_1a9cabd77_check_mut(_18122_s,_18137_left,_18154_right,_18168_op)))) {
			_case_begin_1ac687e48:;
			{
				_18182_ok = false;
				return _18182_ok;
			}
		}
		else {
			_case_begin_1ac68770b:;
			{
				_18182_ok = true;
				return _18182_ok;
			}
		}
		_match_end_1ac68762e:;
	}
}



inline jule::Bool _1a9cacd9a_is_valid_ast_st_for_next_st(jule::Any& _20337_n) {
	{
		auto &_match_expr{ _20337_n };
		
		if (_match_expr.type_is<jule::Ptr<_1d7b8cbd6_AssignSt>>()) {
			_case_begin_1ac68a9c8:;
			{
				return (!(_20337_n.operator jule::Ptr<_1d7b8cbd6_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d7b8ae59_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1d7b09a43_Expr>>()) {
			_case_begin_1ac68aa3e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac68a148:;
			{
				return false;
			}
		}
		_match_end_1ac68a500:;
	}
}



inline jule::Bool _1a9cb4e29_is_valid_st_for_next_st(jule::Any& _21529_st) {
	{
		auto &_match_expr{ _21529_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1a9cda7ce_Postfix>>() || _match_expr.type_is<jule::Ptr<_1a9cda9bb_Assign>>() || _match_expr.type_is<jule::Ptr<_1a9cdaba8_MultiAssign>>()) {
			_case_begin_1ac68bbc7:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1ac68bc3d:;
			{
				{
					auto &_match_expr{ _21529_st.operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d896d6_FnCallExprModel>>()) {
						_case_begin_1ac68c3e2:;
						{
							return true;
						}
					}
					else {
						_case_begin_1ac68cada:;
						{
							return false;
						}
					}
					_match_end_1ac68ca41:;
				}
			}
		}
		else {
			_case_begin_1ac68b7ed:;
			{
				return false;
			}
		}
		_match_end_1ac68b413:;
	}
}



inline jule::Bool _1a9cb5666_st_is_def(jule::Any& _23415_st) {
	{
		auto &_match_expr{ _23415_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac68d767:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac68cbb7:;
			{
				return false;
			}
		}
		_match_end_1ac68d569:;
	}
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d00371_find_var_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _4629_files,jule::Str _4652_ident,jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1ac68dd94:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac68de3d_f = *it;
			{
				jule::Ptr<_1a9d2553e_Var> _4817_v = _1a9d6c773_find_var(_1ac68de3d_f.ptr(), _4652_ident,_4664_cpp_linked);
				if ((_4817_v != nullptr)) {
					return _4817_v;
				}
			}
			_iter_next_1ac68dd94:;
			++it;
			goto _iter_begin_1ac68dd94;
		}
		_iter_end_1ac68dd94:;
	}
	return nullptr;
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9d007e4_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _5836_files,jule::Str _5859_ident,jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1ac68e218:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac6903d4_f = *it;
			{
				jule::Ptr<_1a9d9a22e_TypeAlias> _6017_ta = _1a9d6cb2a_find_type_alias(_1ac6903d4_f.ptr(), _5859_ident,_5871_cpp_linked);
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				}
			}
			_iter_next_1ac68e218:;
			++it;
			goto _iter_begin_1ac68e218;
		}
		_iter_end_1ac68e218:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9d00bbd_find_struct_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _7032_files,jule::Str _7055_ident,jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1ac6914a1:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac6918d0_f = *it;
			{
				jule::Ptr<_1a8d82b41_Struct> _7217_s = _1a9d6ced2_find_struct(_1ac6918d0_f.ptr(), _7055_ident,_7067_cpp_linked);
				if ((_7217_s != nullptr)) {
					return _7217_s;
				}
			}
			_iter_next_1ac6914a1:;
			++it;
			goto _iter_begin_1ac6914a1;
		}
		_iter_end_1ac6914a1:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8d94db7_Fn> _1a9d010ec_find_fn_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _8228_files,jule::Str _8251_ident,jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1ac692958:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac692d87_file = *it;
			{
				jule::Ptr<_1a8d94db7_Fn> _8417_f = _1a9d6d389_find_fn(_1ac692d87_file.ptr(), _8251_ident,_8263_cpp_linked);
				if ((_8417_f != nullptr)) {
					return _8417_f;
				}
			}
			_iter_next_1ac692958:;
			++it;
			goto _iter_begin_1ac692958;
		}
		_iter_end_1ac692958:;
	}
	return nullptr;
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9d0143d_find_trait_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _9431_files,jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1ac693c67:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac693052_f = *it;
			{
				jule::Ptr<_1a8ea7a57_Trait> _9617_t = _1a9d6d697_find_trait(_1ac693052_f.ptr(), _9454_ident);
				if ((_9617_t != nullptr)) {
					return _9617_t;
				}
			}
			_iter_next_1ac693c67:;
			++it;
			goto _iter_begin_1ac693c67;
		}
		_iter_end_1ac693c67:;
	}
	return nullptr;
}



inline jule::Ptr<_1a943b309_Enum> _1a9d0177e_find_enum_in_package(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _10630_files,jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1ac69442c:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac694cbd_f = *it;
			{
				jule::Ptr<_1a943b309_Enum> _10817_e = _1a9d6d9a5_find_enum(_1ac694cbd_f.ptr(), _10653_ident);
				if ((_10817_e != nullptr)) {
					return _10817_e;
				}
			}
			_iter_next_1ac69442c:;
			++it;
			goto _iter_begin_1ac69442c;
		}
		_iter_end_1ac69442c:;
	}
	return nullptr;
}



inline jule::Bool _1a9d072bd_is_std_package(jule::Str _32719_f,jule::Str _32727_p) {
	return _1d7728e59_has_prefix(_32719_f,_1d685188a_join(jule::Slice<jule::Str>({_1d77ddb12_PATH_STDLIB,_32727_p})));
}



inline jule::Bool _1a9d08258_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac6973ec:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>>()) {
			_case_begin_1ac697463:;
			{
				jule::Ptr<_1a8d8bee1_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1a8d8bee1_StructSubIdentExprModel>();
				return _1a9d08258_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>>()) {
			_case_begin_1ac696e68:;
			{
				jule::Ptr<_1a8d8b771_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1a8d8b771_TraitSubIdentExprModel>();
				return _1a9d08258_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d87c9a_UnaryExprModel>>()) {
			_case_begin_1ac696ece:;
			{
				jule::Ptr<_1a8d87c9a_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1a8d87c9a_UnaryExprModel>();
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				}
				if ((_1a9d9d4eb_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				}
				if ((_1a9d9d287_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				}
				return _1a9d08258_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1ac696099:;
			{
				return false;
			}
		}
		_match_end_1ac69564d:;
	}
}



inline _1d77ca48e_Log _1a9d08698_compiler_err(jule::Ptr<_1d7b77374_Token>& _4118_token,jule::Bool _4133_line,jule::Str _4145_fmt,jule::Slice<jule::Any> _4158_args) {
	_1d77ca48e_Log _4213_log = _1d77ca48e_Log(static_cast<jule::I32>(1LL),_4118_token.get()._field_row,_4118_token.get()._field_column,_4118_token.get()._field_file.get()._field_path,_1d77ca8ce_logf(_4145_fmt,_4158_args),jule::Str(),jule::Str());
	if (_4133_line) {
		_4213_log._field_line=_1d7b7d941_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	}
	return _4213_log;
}



inline jule::Bool _1a9d089d9_imp_is_lookupable(jule::Ptr<_1a9d02351_ImportInfo>& _5523_i,jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	}
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1a9d04980_exist_ident(_5523_i.ptr(), _5539_ident);
		}
	}
	return _5523_i.get()._field_import_all;
}



inline void _1a9d08cd6_append_ret_vars(jule::Slice<jule::Ptr<_1a9d2553e_Var>>& _6825_dest,jule::Ptr<_1a8d98063_FnIns>& _6844_f) {
	if (_1a8d95318_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>> _7313_types = _1a8d98a7a_types(_6844_f.ptr());
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ac6a0548:;
		if (it != expr.end()) {
			jule::I32 _1ac6a0801_i = it - expr.begin();
			jule::Ptr<_1d7b77374_Token> _1ac6a0a21_ident = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1ac6a0a21_ident.get()._field_kind) || _1d7b79d6b_is_anon_ident(_1ac6a0a21_ident.get()._field_kind)) {
					goto _iter_next_1ac6a0548;
				}
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var(_6844_f.get()._field_scope,_1ac6a0a21_ident,_1ac6a0a21_ident.get()._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_7313_types[_1ac6a0801_i])),jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr>(),jule::new_ptr<_1a9d71c2d_Data>())),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>())));
			}
			_iter_next_1ac6a0548:;
			++it;
			_1ac6a0801_i++;
			goto _iter_begin_1ac6a0548;
		}
		_iter_end_1ac6a0548:;
	}
}



inline void _1a9d0908e_append_param_vars(jule::Slice<jule::Ptr<_1a9d2553e_Var>>& _9427_dest,jule::Ptr<_1a8d98063_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;
	}
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ac6a1aee:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d971c7_ParamIns> _1ac6a310b_p = *it;
			{
				if (_1d7b79ac4_is_ignore_ident(_1ac6a310b_p.get()._field_decl.get()._field_ident) || _1d7b79d6b_is_anon_ident(_1ac6a310b_p.get()._field_decl.get()._field_ident)) {
					goto _iter_next_1ac6a1aee;
				}
				jule::Ptr<_1a9d2553e_Var> _10417_v = jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var(_9446_f.get()._field_scope,_1ac6a310b_p.get()._field_decl.get()._field_token,_1ac6a310b_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_1ac6a310b_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_1ac6a310b_p.get()._field_decl.get()._field_reference,jule::new_ptr<_1a9d9ed05_TypeSymbol>(),jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr>(),jule::new_ptr<_1a9d71c2d_Data>())),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>()));
				{
					
					if (_1a8d93ba7_is_self(_1ac6a310b_p.get()._field_decl.ptr())) {
						_case_begin_1ac6a5cce:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a9d9aa37_Kind>(_9446_f.get()._field_owner, 0)));
							_10417_v.get()._field_reference=(!(_1a8d93e1b_is_ref(_1ac6a310b_p.get()._field_decl.ptr())));
							if (_1a8d93e1b_is_ref(_1ac6a310b_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da3bc7_Sptr>(_1a9da3bc7_Sptr(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_10417_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							}
						}
					}
					else if (_1ac6a310b_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1ac6a5905:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da4634_Slc>(_1a9da4634_Slc(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(_1ac6a310b_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_1ac6a310b_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_1ac6a55b4:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_1ac6a310b_p.get()._field_kind;
						}
					}
					_match_end_1ac6a54a4:;
				}
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);
			}
			_iter_next_1ac6a1aee:;
			++it;
			goto _iter_begin_1ac6a1aee;
		}
		_iter_end_1ac6a1aee:;
	}
}



inline void _1a9d0938b_append_generic_type_aliases(jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>& _15437_dest,jule::Ptr<_1a8d98063_FnIns>& _15462_f) {
	jule::I32 _15513_size = _15462_f.get()._field_generics.len();
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=static_cast<jule::I32>(_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	if ((_15513_size == 0LL)) {
		return;
	}
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ac6ab09d:;
		if (it != expr.end()) {
			jule::I32 _1ac6ab19c_i = it - expr.begin();
			jule::Ptr<_1a9d9ae66_TypeKind> _1ac6ab2bd_g = *it;
			{
				jule::Ptr<_1d7b8c246_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_1ac6ab19c_i];
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_16517_decl.get()._field_token,_16517_decl.get()._field_ident,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_1ac6ab2bd_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>())));
			}
			_iter_next_1ac6ab09d:;
			++it;
			_1ac6ab19c_i++;
			goto _iter_begin_1ac6ab09d;
		}
		_iter_end_1ac6ab09d:;
	}
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1a8d857c0_StructIns> _17917_owner = _15462_f.get()._field_owner;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ac6ac225:;
			if (it != expr.end()) {
				jule::I32 _1ac6ad1d2_i = it - expr.begin();
				jule::Ptr<_1a9d9ae66_TypeKind> _1ac6ad3be_g = *it;
				{
					jule::Ptr<_1d7b8c246_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_1ac6ad1d2_i];
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(_15462_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_18121_decl.get()._field_token,_18121_decl.get()._field_ident,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),_1ac6ad3be_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>())));
				}
				_iter_next_1ac6ac225:;
				++it;
				_1ac6ad1d2_i++;
				goto _iter_begin_1ac6ac225;
			}
			_iter_end_1ac6ac225:;
		}
	}
}



inline jule::Ptr<_1a9d6baa2_SymbolTable> _1a9d096bb_find_file(jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>& _19619_files,jule::Ptr<_1d7b7c764_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1ac6b01e5:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac6ae0b2_fl = *it;
			{
				if (_1ac6ae0b2_fl.get()._field_file == _19643_handler) {
					return _1ac6ae0b2_fl;
				}
			}
			_iter_next_1ac6b01e5:;
			++it;
			goto _iter_begin_1ac6b01e5;
		}
		_iter_end_1ac6b01e5:;
	}
	return nullptr;
}



inline void _1a9d09aa6_push_suggestion(_1d77ca48e_Log* _20531_log,jule::Str _20542_fmt,jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1d77ca8ce_logf(_20542_fmt,_20555_args);
}



inline jule::Bool _1a9d3dd2c_trait_has_reference_receiver(jule::Ptr<_1a8ea7a57_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ac6b0b96:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> &_1ac6b15c0_f = *it;
			{
				if (_1ac6b15c0_f.get()._field_statically) {
					goto _iter_next_1ac6b0b96;
				}
				jule::Ptr<_1a8d9357a_Param> _3313_p = _1ac6b15c0_f.get()._field_params[0LL];
				if (_1a8d93e1b_is_ref(_3313_p.ptr()) && _1a8d93ba7_is_self(_3313_p.ptr())) {
					return true;
				}
			}
			_iter_next_1ac6b0b96:;
			++it;
			goto _iter_begin_1ac6b0b96;
		}
		_iter_end_1ac6b0b96:;
	}
	return false;
}



inline jule::Bool _1a9d5c8d9_float_assignable(jule::Str _4121_kind,jule::Ptr<_1a9d71c2d_Data>& _4133_d) {
	jule::Str _429_value = _1a94b8595_fmt_float(static_cast<jule::F64>(_1a9c493ca_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);
	return _1a9cd1275_check_bit_float(_429_value,static_cast<jule::I32>(_1a9ccedde_bitsize_of(_4121_kind)));
}



inline jule::Bool _1a9d5ca1b_sig_assignable(jule::Str _4619_kind,jule::Ptr<_1a9d71c2d_Data>& _4631_d) {
	jule::F64 _479_min = _1a9cd4212_min(_4619_kind);
	jule::F64 _489_max = _1a9cd44ed_max(_4619_kind);
	{
		
		if (_1a9c4b036_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ac6b4e31:;
			{
				jule::F64 _5113_x = _1a9c48b8d_read_f64(_4631_d.get()._field_constant.ptr());
				jule::F64 _5214_i;
				jule::F64 _5217_frac;
				std::tie(_5214_i,_5217_frac) = _1a9b8b1c9_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				}
				return (_5214_i >= _479_min) && (_5214_i <= _489_max);
			}
		}
		else if (_1a9c4a7e9_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ac6b4e97:;
			{
				jule::F64 _5813_x = _1a9c493ca_as_f64(_4631_d.get()._field_constant.ptr());
				if (_5813_x <= _489_max) {
					return true;
				}
			}
		}
		else if (_1a9c4a585_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ac6b500d:;
			{
				jule::F64 _6313_x = _1a9c493ca_as_f64(_4631_d.get()._field_constant.ptr());
				return (_479_min <= _6313_x) && (_6313_x <= _489_max);
			}
		}
		_match_end_1ac6b4ccc:;
	}
	return false;
}



inline jule::Bool _1a9d5cb4d_unsig_assignable(jule::Str _6921_kind,jule::Ptr<_1a9d71c2d_Data>& _6933_d) {
	jule::F64 _709_max = _1a9cd44ed_max(_6921_kind);
	if (_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2))) {
		return _1a9d59dd1_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1a9c481dc_read_i64(_6933_d.get()._field_constant.ptr()))));
	}
	{
		
		if (_1a9c4b036_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ac6b9e58:;
			{
				jule::F64 _7713_x = _1a9c48b8d_read_f64(_6933_d.get()._field_constant.ptr());
				if ((_7713_x < 0LL)) {
					return false;
				}
				jule::F64 _8114_i;
				jule::F64 _8117_frac;
				std::tie(_8114_i,_8117_frac) = _1a9b8b1c9_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				}
				return _8114_i <= _709_max;
			}
		}
		else if (_1a9c4a7e9_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ac6b9ebe:;
			{
				jule::F64 _8713_x = _1a9c493ca_as_f64(_6933_d.get()._field_constant.ptr());
				if (_8713_x <= _709_max) {
					return true;
				}
			}
		}
		else if (_1a9c4a585_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ac6ba035:;
			{
				jule::F64 _9213_x = _1a9c493ca_as_f64(_6933_d.get()._field_constant.ptr());
				return (0LL <= _9213_x) && (_9213_x <= _709_max);
			}
		}
		_match_end_1ac6b974e:;
	}
	return false;
}



inline jule::Bool _1a9d5cc80_int_assignable(jule::Str _9819_kind,jule::Ptr<_1a9d71c2d_Data>& _9831_d) {
	{
		
		if (_1a9cd9415_is_sig_int(_9819_kind)) {
			_case_begin_1ac6be798:;
			{
				return _1a9d5ca1b_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1a9cd9701_is_unsig_int(_9819_kind)) {
			_case_begin_1ac6be897:;
			{
				return _1a9d5cb4d_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1ac6ba871:;
			{
				return false;
			}
		}
		_match_end_1ac6ba7a5:;
	}
}



inline jule::Ptr<_1d7a4352b_Directive> _1a9d95bec_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _412224_directives,jule::Str _412266_d) {
	{
		auto &expr = _412224_directives;
		auto it = expr.begin();
		_iter_begin_1ac6bec3d:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1ac6be9b8_dr = *it;
			{
				if (_1ac6be9b8_dr.get()._field_tag.get()._field_kind == _412266_d) {
					return _1ac6be9b8_dr;
				}
			}
			_iter_next_1ac6bec3d:;
			++it;
			goto _iter_begin_1ac6bec3d;
		}
		_iter_end_1ac6bec3d:;
	}
	return nullptr;
}



inline jule::Any _1a9d96082_find_builtins_import(jule::Str _413125_ident,jule::Ptr<_1a9d02351_ImportInfo> _413137_imp) {
	return _1a9e19446_find_package_builtin_def(_413137_imp.get()._field_link_path,_413125_ident);
}



inline void _1a9d96291_fit_bitsize(jule::Ptr<_1a9d71c2d_Data>& _413821_d) {
	jule::Ptr<_1a9da06b8_Prim> _413913_prim = _1a9d9d023_prim(_413821_d.get()._field_kind.ptr());
	jule::I32 _41409_z = _1a9ccedde_bitsize_of(_1a9da0a2b_to_str(_413913_prim.ptr()));
	if ((_41409_z == 64LL)) {
		return;
	}
	jule::I32 _414513_k = 0LL;
	{
		
		if (_1a9c4a585_is_i64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1ac6c304e:;
			{
				_414513_k=static_cast<jule::I32>(_1a9cd17b4_bitsize_of_int(static_cast<jule::I64>(_1a9c481dc_read_i64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a9cd01ca_int_from_bits(_414513_k);
				}
			}
		}
		else if (_1a9c4a7e9_is_u64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1ac6c30c6:;
			{
				_414513_k=static_cast<jule::I32>(_1a9cd1a5b_bitsize_of_uint(static_cast<jule::U64>(_1a9c48451_read_u64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a9cd0472_uint_from_bits(_414513_k);
				}
			}
		}
		else if (_1a9c4b036_is_f64(_413821_d.get()._field_constant.ptr())) {
			_case_begin_1ac6c314d:;
			{
				_414513_k=static_cast<jule::I32>(_1a9cd151c_bitsize_of_float(static_cast<jule::F64>(_1a9c48b8d_read_f64(_413821_d.get()._field_constant.ptr()))));
				if (_414513_k > _41409_z) {
					_413913_prim.get()._field_kind=_1a9cd0719_float_from_bits(_414513_k);
				}
			}
		}
		_match_end_1ac6c2e72:;
	}
}



inline void _1a9d9658d_make_struct_lit_alloc(jule::Ptr<_1a9d71c2d_Data>& _416531_d,jule::Ptr<_1a8d8854d_StructLitExprModel>& _416546_lit) {
	_416531_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da3bc7_Sptr>(_1a9da3bc7_Sptr(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_416546_lit.get()._field_strct, 0))))), 6)));
	_416531_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8887d_AllocStructLitExprModel>(_1a8d8887d_AllocStructLitExprModel(_416546_lit)));
}



inline jule::Ptr<_1a9d2553e_Var> _1a9d968ce_build_error_var(jule::Ptr<_1a9cc76bc_Scope>& _417625_s,jule::Ptr<_1d7b8ae59_FnCallExpr>& _417641_fc) {
	return jule::new_ptr<_1a9d2553e_Var>(_1a9d2553e_Var(_417625_s,_417641_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_1a9d72ca6_Value>(_1a9d72ca6_Value(jule::Ptr<_1d7b09a43_Expr>(),jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data()))),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Slice<jule::Ptr<_1d7a4352b_Directive>>(),jule::Ptr<_1a9d24571_IterRelation>(),jule::Slice<jule::Ptr<_1a9d2553e_Var>>()));
}



inline jule::Any _1a9d96c20_find_builtins_sema(jule::Str _419523_ident,jule::Ptr<_1a9d0a03a_Sema> _419539_s) {
	{
		auto &expr = _419539_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ac6c9363:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac6c9671_imp = *it;
			{
				if (_1ac6c9671_imp.get()._field_import_all || _1a9d04980_exist_ident(_1ac6c9671_imp.ptr(), _419523_ident)) {
					jule::Any _419821_def = _1a9d96082_find_builtins_import(_419523_ident,_1ac6c9671_imp);
					if (_419821_def != jule::Any(jule::Any(nullptr))) {
						return _419821_def;
					}
				}
			}
			_iter_next_1ac6c9363:;
			++it;
			goto _iter_begin_1ac6c9363;
		}
		_iter_end_1ac6c9363:;
	}
	jule::Str _420613_ppath = _1d7b7d15a_dir(_419539_s.get()._field_file.get()._field_file.ptr());
	if (_1d7728e59_has_prefix(_420613_ppath,_1d77ddb12_PATH_STDLIB)) {
		(_420613_ppath).mut_slice(_1d77ddb12_PATH_STDLIB.len());
		_420613_ppath=jule::Str("std", 3) + _1d776bed0_replace(_420613_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
		return _1a9e19446_find_package_builtin_def(_420613_ppath,_419523_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a9d96eb7_is_ok_for_shifting(jule::Ptr<_1a9d71c2d_Data>& _422028_d) {
	if (_1a9d725e1_is_const(_422028_d.ptr())) {
		{
			
			if (_1a9c4a585_is_i64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1ac6cd3bc:;
				{
					return (_1a9c481dc_read_i64(_422028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1a9c4a7e9_is_u64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1ac6cd4aa:;
				{
					return true;
				}
			}
			else if (_1a9c4b036_is_f64(_422028_d.get()._field_constant.ptr())) {
				_case_begin_1ac6cd521:;
				{
					return (_1a9c48b8d_read_f64(_422028_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1ac6ccca1:;
				{
					return false;
				}
			}
			_match_end_1ac6ccbd5:;
		}
	}
	jule::Ptr<_1a9da06b8_Prim> _42339_prim = _1a9d9d023_prim(_422028_d.get()._field_kind.ptr());
	return (_42339_prim != nullptr) && _1a9cd9998_is_int(_1a9da0a2b_to_str(_42339_prim.ptr()));
}



inline jule::Bool _1a9d972e7_is_instanced_struct(jule::Ptr<_1a8d857c0_StructIns> _423724_s) {
	return _423724_s.get()._field_decl.get()._field_generics.len() == static_cast<jule::I32>(static_cast<jule::I32>(_423724_s.get()._field_generics.len()));
}



inline jule::Bool _1a9d97605_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a9d71c2d_Data>& _424142_d) {
	if (_1a9d725e1_is_const(_424142_d.ptr())) {
		return _1a9d5cc80_int_assignable(jule::Str("int", 3),_424142_d);
	}
	_1a9d5cdb2_TypeCompatibilityChecker _424513_tcc = _1a9d5cdb2_TypeCompatibilityChecker(jule::Ptr<_1a9d0a03a_Sema>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),_424142_d.get()._field_kind,jule::Ptr<_1d7b77374_Token>());
	return _1a9d5dae9_check(&_424513_tcc);
}



inline void _1a9d977d1_apply_cast_kind_model(jule::Ptr<_1a9d71c2d_Data>& _425431_d) {
	_425431_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d88dab_CastingExprModel>(_1a8d88dab_CastingExprModel(jule::Ptr<_1d7b77374_Token>(),_425431_d.get()._field_model,_425431_d.get()._field_cast_kind,_425431_d.get()._field_kind)));
}



inline void _1a9d979e0_apply_cast_kind(jule::Ptr<_1a9d71c2d_Data>& _426225_d) {
	if ((_426225_d.get()._field_cast_kind == nullptr)) {
		return;
	}
	_1a9d977d1_apply_cast_kind_model(_426225_d);
	_426225_d.get()._field_kind=_426225_d.get()._field_cast_kind;
	_426225_d.get()._field_cast_kind=nullptr;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9d97bdd_build_void_data(void) {
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("void", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Str _1a9d97ec9_check_data_for_integer_indexing(jule::Ptr<_1a9d71c2d_Data>& _428341_d) {
	jule::Str _428353_err_fmt = jule::Str();
	if ((_428341_d == nullptr)) {
		_428353_err_fmt = jule::Str();
		return _428353_err_fmt;
	}
	{
		
		if ((_1a9d9d023_prim(_428341_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1ac6d558e:;
			{
				_428353_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _428353_err_fmt;
			}
		}
		else if ((!(_1a9cd9998_is_int(_1a9da0a2b_to_str(_1a9d9d023_prim(_428341_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1ac6d502d:;
			{
				_428353_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _428353_err_fmt;
			}
		}
		else if (_1a9d725e1_is_const(_428341_d.ptr())) {
			_case_begin_1ac6d50a5:;
			{
				if ((_1a9c493ca_as_f64(_428341_d.get()._field_constant.ptr()) < 0LL)) {
					_428353_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _428353_err_fmt;
				}
			}
		}
		else if ((_1a9d9d023_prim(_428341_d.get()._field_kind.ptr()) == nullptr) || _1a9d725e1_is_const(_428341_d.ptr()) || _1a9cceb47_real_kind_of(_1a9da0a2b_to_str(_1a9d9d023_prim(_428341_d.get()._field_kind.ptr()).ptr())) != _1a9cceb47_real_kind_of(jule::Str("int", 3))) {
			_case_begin_1ac6d512c:;
			{
				_428341_d.get()._field_cast_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5)));
				_1a9d979e0_apply_cast_kind(_428341_d);
			}
		}
		_match_end_1ac6d567c:;
	}
	_428353_err_fmt = jule::Str();
	return _428353_err_fmt;
}



inline void _1a9d982b5_apply_cast_model_by_enum(jule::Ptr<_1a9d71c2d_Data>& _430934_d,jule::Ptr<_1a943b309_Enum> _430948_e) {
	if ((_430948_e == nullptr)) {
		return;
	}
	jule::Ptr<_1a9da06b8_Prim> _43139_p = _1a9d9d023_prim(_430948_e.get()._field_kind.get()._field_kind.ptr());
	if (_1a9da3677_is_str(_43139_p.ptr())) {
		return;
	}
	_430934_d.get()._field_cast_kind=_430948_e.get()._field_kind.get()._field_kind;
	_1a9d977d1_apply_cast_kind_model(_430934_d);
	_430934_d.get()._field_cast_kind=nullptr;
}



inline void _1a9d9855c_cast_const_by_type(jule::Str& _432224_t,jule::Ptr<_1a9d71c2d_Data>& _432237_d) {
	{
		
		if (_1a9cd9415_is_sig_int(_432224_t)) {
			_case_begin_1ac6db793:;
			{
				{
					auto _match_expr{ _1a9ccedde_bitsize_of(_1a9cceb47_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ac6dc5da:;
						{
							_1a9c49650_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1a9c48e02_as_i64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ac6dc651:;
						{
							_1a9c49650_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a9c48e02_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ac6dc6b7:;
						{
							_1a9c49650_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a9c48e02_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ac6dc72d:;
						{
							_1a9c49650_set_i64(_432237_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a9c48e02_as_i64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ac6dc211:;
				}
			}
		}
		else if (_1a9cd9701_is_unsig_int(_432224_t)) {
			_case_begin_1ac6db81a:;
			{
				{
					auto _match_expr{ _1a9ccedde_bitsize_of(_1a9cceb47_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ac6dbe47:;
						{
							_1a9c498c5_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1a9c49166_as_u64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ac6e115a:;
						{
							_1a9c498c5_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a9c49166_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ac6e11c1:;
						{
							_1a9c498c5_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a9c49166_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ac6e1248:;
						{
							_1a9c498c5_set_u64(_432237_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a9c49166_as_u64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ac6dc002:;
				}
			}
		}
		else if (_1a9cd9c84_is_float(_432224_t)) {
			_case_begin_1ac6db892:;
			{
				{
					auto _match_expr{ _1a9ccedde_bitsize_of(_1a9cceb47_real_kind_of(_432224_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ac6e1589:;
						{
							_1a9c4a145_set_f64(_432237_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1a9c493ca_as_f64(_432237_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ac6e4ba8:;
						{
							_1a9c4a145_set_f64(_432237_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a9c493ca_as_f64(_432237_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ac6e1644:;
				}
			}
		}
		_match_end_1ac6db672:;
	}
}



inline jule::Bool _1a9d997a0_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1ac6dcb29:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1ac6e4eb6_dr = *it;
			{
				if (_1ac6e4eb6_dr.get()._field_tag.get()._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_1ac6dcb29:;
			++it;
			goto _iter_begin_1ac6dcb29;
		}
		_iter_end_1ac6dcb29:;
	}
	return false;
}



inline jule::Bool _1a9da8061_can_get_ptr(jule::Ptr<_1a9d71c2d_Data>& _57121_d) {
	if ((!(_57121_d.get()._field_lvalue)) || _1a9d725e1_is_const(_57121_d.ptr())) {
		return false;
	}
	{
		
		if ((_1a9d9de9c_fnc(_57121_d.get()._field_kind.ptr()) != nullptr) || (_1a9d9d760_enm(_57121_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ac6ecd6a:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ac6ec7d7:;
			{
				return true;
			}
		}
		_match_end_1ac6ec782:;
	}
}



inline jule::Bool _1a9da8308_is_valid_for_sptr_type(jule::Ptr<_1a9d9ae66_TypeKind>& _58532_t) {
	jule::Ptr<_1a8d857c0_StructIns> _58613_s = _1a9d9e211_strct(_58532_t.ptr());
	if (((_58613_s != nullptr) && (_58613_s.get()._field_decl != nullptr)) && _58613_s.get()._field_decl.get()._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1a9da85e4_is_valid_for_ref(jule::Ptr<_1a9d9ae66_TypeKind>& _59426_t) {
	return (_1a9d9de9c_fnc(_59426_t.ptr()) == nullptr);
}



inline jule::Bool _1a9da88d0_is_builtin_str_convertable(jule::Ptr<_1a9d9ae66_TypeKind>& _59736_t) {
	return ((!(_1a9d9c099_void(_59736_t.ptr()))) && (_1a9d9de9c_fnc(_59736_t.ptr()) == nullptr)) && (_1a9d9e94d_tup(_59736_t.ptr()) == nullptr);
}



inline jule::Str _1a9da8baa_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1d7b77374_Token>>& _60131_tokens) {
	jule::Str _60213_s = _60131_tokens[0LL].get()._field_kind;
	{
		auto expr = _60131_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ac701b1b:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> &_1ac701d2a_token = *it;
			{
				_60213_s+=jule::Str("::", 2);
				_60213_s+=_1ac701d2a_token.get()._field_kind;
			}
			_iter_next_1ac701b1b:;
			++it;
			goto _iter_begin_1ac701b1b;
		}
		_iter_end_1ac701b1b:;
	}
	return _60213_s;
}



inline jule::Ptr<_1a9da06b8_Prim> _1a9da8e41_build_prim_type(jule::Str _61020_kind) {
	return jule::new_ptr<_1a9da06b8_Prim>(_1a9da06b8_Prim(_61020_kind));
}



inline jule::Ptr<_1a8d82b41_Struct> _1a9da9271_get_struct_from_kind(jule::Ptr<_1a9d9ae66_TypeKind> _61629_k) {
	{
		
		if ((_61629_k == nullptr)) {
			_case_begin_1ac70338c:;
			{
				return nullptr;
			}
		}
		else if ((_1a9d9e211_strct(_61629_k.ptr()) != nullptr)) {
			_case_begin_1ac703403:;
			{
				return _1a9d9e211_strct(_61629_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1a9d9d287_sptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1ac703128:;
			{
				return _1a9da9271_get_struct_from_kind(_1a9d9d287_sptr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a9d9dc38_slc(_61629_k.ptr()) != nullptr)) {
			_case_begin_1ac70318e:;
			{
				return _1a9da9271_get_struct_from_kind(_1a9d9dc38_slc(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a9d9d9c4_arr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1ac703205:;
			{
				return _1a9da9271_get_struct_from_kind(_1a9d9d9c4_arr(_61629_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a9d9d4eb_ptr(_61629_k.ptr()) != nullptr)) {
			_case_begin_1ac702c3d:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1ac7021b0:;
			{
				return nullptr;
			}
		}
		_match_end_1ac702127:;
	}
}



inline jule::Bool _1a9da9518_is_prim(jule::Str _63912_kind) {
	return (((((((((((((((_63912_kind == jule::Str("i8", 2)) || (_63912_kind == jule::Str("i16", 3))) || (_63912_kind == jule::Str("i32", 3))) || (_63912_kind == jule::Str("i64", 3))) || (_63912_kind == jule::Str("u8", 2))) || (_63912_kind == jule::Str("u16", 3))) || (_63912_kind == jule::Str("u32", 3))) || (_63912_kind == jule::Str("u64", 3))) || (_63912_kind == jule::Str("f32", 3))) || (_63912_kind == jule::Str("f64", 3))) || (_63912_kind == jule::Str("int", 3))) || (_63912_kind == jule::Str("uint", 4))) || (_63912_kind == jule::Str("uintptr", 7))) || (_63912_kind == jule::Str("bool", 4))) || (_63912_kind == jule::Str("str", 3))) || (_63912_kind == jule::Str("any", 3));
}



inline void _1a9db2257_apply_implicit_cast(jule::Ptr<_1a9d9ae66_TypeKind>& _152129_dest,jule::Ptr<_1a9d71c2d_Data>& _152151_d) {
	if (_1a9d9bd35_is_nil(_152151_d.get()._field_kind.ptr())) {
		return;
	}
	if ((_1a9d9e475_trt(_152129_dest.ptr()) != nullptr) && (_1a9d9e475_trt(_152151_d.get()._field_kind.ptr()) == nullptr)) {
		_152151_d.get()._field_cast_kind=_152129_dest;
		_1a9d977d1_apply_cast_kind_model(_152151_d);
		_152151_d.get()._field_cast_kind=nullptr;
	}
}



inline std::tuple<jule::Ptr<_1a9d6baa2_SymbolTable>,jule::Slice<_1d77ca48e_Log>> _1a9db4de7_build_symbols(jule::Ptr<_1d7a43eaa_Ast>& _1523_ast,jule::Trait<_1a9ceeedb_Importer>& _1539_importer,jule::Ptr<_1a8da1038_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1a8da1038_SymbolBuilder> _1613_sb = jule::new_ptr<_1a8da1038_SymbolBuilder>(_1a8da1038_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1d77ca48e_Log>(),_1523_ast,jule::Ptr<_1a9d6baa2_SymbolTable>()));
	_1a8da6192_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1a9d05013_Package>,jule::Slice<_1d77ca48e_Log>> _1a9db5326___analyze_package(jule::Slice<jule::Ptr<_1d7a43eaa_Ast>>& _2927_files,jule::Trait<_1a9ceeedb_Importer>& _2947_importer,jule::I32& _2968_flags) {
	jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>::alloc(0LL,static_cast<jule::I32>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1ac70e497:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a43eaa_Ast> _1ac70e101_f = *it;
			{
				jule::Ptr<_1a9d6baa2_SymbolTable> _3318_table;
				jule::Slice<_1d77ca48e_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1a9db4de7_build_symbols(_1ac70e101_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_1ac70e497:;
			++it;
			goto _iter_begin_1ac70e497;
		}
		_iter_end_1ac70e497:;
	}
	jule::Ptr<_1a9d0a03a_Sema> _4013_sema = jule::new_ptr<_1a9d0a03a_Sema>(_1a9d0a03a_Sema(jule::Slice<_1d77ca48e_Log>(),jule::Slice<jule::Ptr<_1a9d6baa2_SymbolTable>>(),jule::Ptr<_1a9d6baa2_SymbolTable>(),_2968_flags));
	_1a9d224e7_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	}
	jule::Ptr<_1a9d05013_Package> _4813_pkg = jule::new_ptr<_1a9d05013_Package>(_1a9d05013_Package(_4013_sema.get()._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1a9d05013_Package>,jule::Slice<_1d77ca48e_Log>> _1a9db5711_analyze_package(jule::Slice<jule::Ptr<_1d7a43eaa_Ast>> _7228_files,jule::Trait<_1a9ceeedb_Importer> _7247_importer,jule::I32 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1a9d05013_Package> _7714_package;
	jule::Slice<_1d77ca48e_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1a9db5326___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1a8d98063_FnIns> _1a9dbe3c9_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ac71704e:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _2420_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9dd8e82_builtin_caller_out),jule::Bool()));
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ac7170b5:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _2720_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e42408_builtin_caller_outln),jule::Bool()));
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ac716cda:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _3020_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e4253a_builtin_caller_new),jule::Bool()));
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ac716d51:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _3320_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e4289d_builtin_caller_panic),jule::Bool()));
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ac716db7:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _3620_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e429d0_builtin_caller_make),jule::Bool()));
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ac716a43:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _3920_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e42b12_builtin_caller_append),jule::Bool()));
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ac716aa9:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _4220_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e42c44_builtin_caller_copy),jule::Bool()));
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ac716b20:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _4520_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e42d76_builtin_caller_clone),jule::Bool()));
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ac716b97:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _4820_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e42ea8_builtin_caller_assert),jule::Bool()));
				return _4820_f;
			}
		}
		else {
			_case_begin_1ac716515:;
			{
				return nullptr;
			}
		}
		_match_end_1ac716845:;
	}
}



inline jule::Ptr<_1a9d9a22e_TypeAlias> _1a9dc1486_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ac71c5d7:;
			{
				static jule::Ptr<_1a9d9a22e_TypeAlias> _5820_t = jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7b77374_Token>(),jule::Str(),jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>()));
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ac71c6a3:;
			{
				static jule::Ptr<_1a9d9a22e_TypeAlias> _6820_t = jule::new_ptr<_1a9d9a22e_TypeAlias>(_1a9d9a22e_TypeAlias(jule::Ptr<_1d7b8cdc3_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1d7b77374_Token>(),jule::Str(),jule::new_ptr<_1a9d9ed05_TypeSymbol>(_1a9d9ed05_TypeSymbol(jule::Ptr<_1d7a0e75b_TypeDecl>(),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a9d9a22e_TypeAlias>>()));
				return _6820_t;
			}
		}
		else {
			_case_begin_1ac71c021:;
			{
				return nullptr;
			}
		}
		_match_end_1ac71c31d:;
	}
}



inline jule::Ptr<_1a8ea7a57_Trait> _1a9dc1ec0_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1a9dc291b_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1a8d98063_FnIns> _8713_f = _1a9dbe3c9_find_builtin_fn(_8621_ident);
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	}
	jule::Ptr<_1a9d9a22e_TypeAlias> _9213_ta = _1a9dc1486_find_builtin_type_alias(_8621_ident);
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	}
	jule::Ptr<_1a8ea7a57_Trait> _9713_t = _1a9dc1ec0_find_builtin_trait(_8621_ident);
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1a9deb439_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ac721a4d:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _10820_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e44097_builtin_caller_std_debug_out),jule::Bool()));
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ac7218a5:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _11120_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e444b5_builtin_caller_std_debug_outln),jule::Bool()));
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1ac71eb06:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ac721344:;
	}
}



inline jule::Any _1a9dec58e_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1ac723313:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _12120_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e430da_builtin_caller_std_mem_size_of),jule::Bool()));
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1ac723379:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _12420_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e4321c_builtin_caller_std_mem_align_of),jule::Bool()));
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1ac72319d:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _12720_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e4334e_builtin_caller_std_mem_free),jule::Bool()));
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1ac721740:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ac723148:;
	}
}



inline jule::Any _1a9dd95e2_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1ac725766:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _13720_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e4377d_builtin_caller_std_jule_integrated_to_str),jule::Bool()));
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1ac7255bd:;
			{
				static jule::Ptr<_1a8d98063_FnIns> _14020_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>(),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9e43b9b_builtin_caller_std_jule_integrated_emit),jule::Bool()));
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1ac723214:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ac7247ba:;
	}
}



inline jule::Any _1a9e19446_find_package_builtin_def(jule::Str _14729_link_path,jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ac72716e:;
			{
				return _1a9deb439_find_builtin_def_std_debug(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ac7271d5:;
			{
				return _1a9dec58e_find_builtin_def_std_mem(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ac727009:;
			{
				return _1a9dd95e2_find_builtin_def_std_jule_integrated(_14745_ident);
			}
		}
		else {
			_case_begin_1ac7263e3:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ac7268bb:;
	}
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9dbc96b_builtin_caller_common_plain(jule::Ptr<_1a9d7379b_Eval>& _16037_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _16052_fc,jule::Ptr<_1a9d71c2d_Data>& _16074_d) {
	jule::Ptr<_1a8d98063_FnIns> _16113_f = _1a9d9de9c_fnc(_16074_d.get()._field_kind.ptr());
	_1a9d63747_FnCallArgChecker _16313_fcac = _1a9d63747_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());
	if ((!(_1a9d65b12_check(&_16313_fcac)))) {
		return nullptr;
	}
	jule::Ptr<_1a8d896d6_FnCallExprModel> _17413_model = jule::new_ptr<_1a8d896d6_FnCallExprModel>(_1a8d896d6_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),_16074_d.get()._field_model,_16313_fcac._field_arg_models,jule::Ptr<_1a9cc76bc_Scope>(),jule::Bool()));
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1a9d97bdd_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(_16113_f.get()._field_result,jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
	}
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9dc4ab6_builtin_caller_common(jule::Ptr<_1a9d7379b_Eval>& _19331_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _19346_fc,jule::Ptr<_1a9d71c2d_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1a9dbc96b_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e069e9_builtin_caller_common_mut(jule::Ptr<_1a9d7379b_Eval>& _20135_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _20150_fc,jule::Ptr<_1a9d71c2d_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1a9d73c74_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	return _1a9dc4ab6_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9dd8d50_builtin_caller_error(jule::Ptr<_1a9d7379b_Eval>& _20830_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _21913_expr = _1a9d8ce58_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);
	if ((_21913_expr == nullptr)) {
		return nullptr;
	}
	if (_1a9d72118_is_nil(_21913_expr.ptr())) {
		_1a9d73c74_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _22813_d = _1a9d97bdd_build_void_data();
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d90a94_BuiltinErrorCallExprModel>(_1a8d90a94_BuiltinErrorCallExprModel(jule::Ptr<_1a8d98063_FnIns>(),_21913_expr.get()._field_model)));
	return _22813_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9dd8e82_builtin_caller_out(jule::Ptr<_1a9d7379b_Eval>& _23628_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _23643_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _24813_expr = _1a9d8ce58_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);
	if ((_24813_expr == nullptr)) {
		return nullptr;
	}
	if ((!(_1a9da88d0_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1a9d73c74_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _25813_d = _1a9d97bdd_build_void_data();
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8d883_BuiltinOutCallExprModel>(_1a8d8d883_BuiltinOutCallExprModel(_24813_expr.get()._field_model,jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e42408_builtin_caller_outln(jule::Ptr<_1a9d7379b_Eval>& _26330_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _26345_fc,jule::Ptr<_1a9d71c2d_Data>& _26367_d) {
	_26367_d=_1a9dd8e82_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	}
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>(_1a8d8dc6d_BuiltinOutlnCallExprModel(_26367_d.get()._field_model.operator jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>().get()._field_expr,jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e4253a_builtin_caller_new(jule::Ptr<_1a9d7379b_Eval>& _27528_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _27543_fc,jule::Ptr<_1a9d71c2d_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1a9d73c74_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _28713_t = _1a9d8c83c_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);
	if ((_28713_t == nullptr)) {
		return nullptr;
	}
	if ((!(_28713_t.get()._field_decl))) {
		_1a9d73c74_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1a9da8308_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1a8d857c0_StructIns> _29817_s = _1a9d9e211_strct(_28713_t.get()._field_kind.ptr());
		if (((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked) {
			_1a9d73c74_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(jule::new_ptr<_1a9da3bc7_Sptr>(_1a9da3bc7_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a9d9ae66_TypeKind> _31217_old = _27528_e.get()._field_prefix;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1a9d71c2d_Data> _31517_init = _1a9d8ce58_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1d7b77374_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;
			
			_1a9d149d4_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1a9d12bad_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8e477_BuiltinNewCallExprModel>(_1a8d8e477_BuiltinNewCallExprModel(_28713_t.get()._field_kind,_31517_init.get()._field_model)));
		}
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8e477_BuiltinNewCallExprModel>(_1a8d8e477_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e4289d_builtin_caller_panic(jule::Ptr<_1a9d7379b_Eval>& _34030_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _34045_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _35213_expr = _1a9d8ce58_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);
	if ((_35213_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9d023_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a9da3677_is_str(_1a9d9d023_prim(_35213_expr.get()._field_kind.ptr()).ptr())))) {
		_1a9d73c74_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _36113_d = _1a9d97bdd_build_void_data();
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8e862_BuiltinPanicCallExprModel>(_1a8d8e862_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,_35213_expr.get()._field_model)));
	return _36113_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e429d0_builtin_caller_make(jule::Ptr<_1a9d7379b_Eval>& _36929_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _36944_fc,jule::Ptr<_1a9d71c2d_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1a9d73c74_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_1a9d73c74_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1a9d73c74_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _38513_t = _1a9d8c83c_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);
	if ((_38513_t == nullptr)) {
		return nullptr;
	}
	if ((!(_38513_t.get()._field_decl)) || (_1a9d9dc38_slc(_38513_t.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1a9d71c2d_Data> _39713_len = _1a9d8ce58_eval_expr(_1a9d123a5_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);
	if ((_39713_len == nullptr)) {
		return _36966_d;
	}
	_1a9d7c442_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1a9d71c2d_Data> _40517_cap = _1a9d8ce58_eval_expr(_1a9d123a5_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		}
		_1a9d7c442_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d902be_BuiltinMakeCallExprModel>(_1a8d902be_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,_40517_cap.get()._field_model)));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d902be_BuiltinMakeCallExprModel>(_1a8d902be_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,jule::Any())));
	}
	return _36966_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e42b12_builtin_caller_append(jule::Ptr<_1a9d7379b_Eval>& _42631_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _42646_fc,jule::Ptr<_1a9d71c2d_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1a9d73c74_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a9d73c74_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _43913_t = _1a9d8ce58_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);
	if ((_43913_t == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9dc38_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a8d98063_FnIns> _44913_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(jule::new_ptr<_1a8d9357a_Param>(_1a8d9357a_Param(jule::Ptr<_1d7b77374_Token>(),true,true,jule::Bool(),jule::Ptr<_1a9d9ed05_TypeSymbol>(),jule::Str())),_1a9d9dc38_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9dbc96b_builtin_caller_common_plain),jule::Bool()));
	_42668_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8cb29_CommonIdentExprModel>(_1a8d8cb29_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_1a9dbc96b_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1a8d896d6_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1a8d896d6_FnCallExprModel>();
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d906a9_BuiltinAppendCallExprModel>(_1a8d906a9_BuiltinAppendCallExprModel(_47717_model.get()._field_args[0LL],_47717_model.get()._field_args[1LL])));
	}
	return _42668_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e42c44_builtin_caller_copy(jule::Ptr<_1a9d7379b_Eval>& _48629_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _48644_fc,jule::Ptr<_1a9d71c2d_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _50213_dest = _1a9d8ce58_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);
	if ((_50213_dest == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9dc38_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_50213_dest.get()._field_mutable))) {
		_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a8d9357a_Param> _51413_empty_param = jule::new_ptr<_1a8d9357a_Param>();
	jule::Ptr<_1a8d98063_FnIns> _51513_f = jule::new_ptr<_1a8d98063_FnIns>(_1a8d98063_FnIns(jule::Ptr<_1a8d857c0_StructIns>(),jule::Ptr<_1a8d94db7_Fn>(),jule::Slice<jule::Ptr<_1a9d9ae66_TypeKind>>(),jule::Slice<jule::Ptr<_1a8d971c7_ParamIns>>({jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_1a8d971c7_ParamIns>(_1a8d971c7_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a9cc76bc_Scope>(),jule::Ptr<_1a8d9b121_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a9d71c2d_Data>(jule::Ptr<_1a9d7379b_Eval>&,jule::Ptr<_1d7b8ae59_FnCallExpr>&,jule::Ptr<_1a9d71c2d_Data>&)>(_1a9dbc96b_builtin_caller_common_plain),jule::Bool()));
	_48666_d.get()._field_kind=jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8cb29_CommonIdentExprModel>(_1a8d8cb29_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_1a9dbc96b_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_1a9d71c2d_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_1a8d896d6_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_1a9d71c2d_Data>();
		jule::Ptr<_1a9da4634_Slc> _54117_slc = _1a9d9dc38_slc(_54017_src.get()._field_kind.ptr());
		if ((!(_54017_src.get()._field_mutable)) && _1a9d9c30d_mutable(_54117_slc.get()._field_elem.ptr())) {
			_1a9d73c74_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		}
	}
	return _48666_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e42d76_builtin_caller_clone(jule::Ptr<_1a9d7379b_Eval>& _54930_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _54945_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _56213_d = _1a9d8c83c_eval_expr_kind(_54930_e, _54945_fc.get()._field_args[0LL].get()._field_kind);
	if ((_56213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a9d9ca4a_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1a9d9dc38_slc(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a9d9e6d9_map(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a9d9d9c4_arr(_56213_d.get()._field_kind.ptr()) != nullptr) || (_1a9d9d287_sptr(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ac775299:;
				{
					{
						_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_56213_d.get()._field_kind.ptr()))}));
					}
				}
			}
			else if ((_1a9d9e211_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ac774b39:;
				{
					{
						_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			else {
				_case_begin_1ac774ac3:;
				{
					{
						_1a9d73c74_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>({jule::Any(_1a9d9b31d_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_1ac774452:;
		}
	}
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_1a8d8e08c_BuiltinCloneCallExprModel>(_1a8d8e08c_BuiltinCloneCallExprModel(_56213_d.get()._field_model)));
	return _56213_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e42ea8_builtin_caller_assert(jule::Ptr<_1a9d7379b_Eval>& _59531_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _59546_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_59546_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_59546_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_59546_fc.get()._field_args.len() > 2LL)) {
		_1a9d73c74_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _60713_expr = _1a9d8ce58_eval_expr(_59531_e, _59546_fc.get()._field_args[0LL]);
	if ((_60713_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9d023_prim(_60713_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a9da3413_is_bool(_1a9d9d023_prim(_60713_expr.get()._field_kind.ptr()).ptr())))) {
		_1a9d73c74_push_err(_59531_e.ptr(), _59546_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a8d8ed18_BuiltinAssertCallExprModel> _61613_model = jule::new_ptr<_1a8d8ed18_BuiltinAssertCallExprModel>(_1a8d8ed18_BuiltinAssertCallExprModel(_59546_fc.get()._field_token,_60713_expr.get()._field_model,jule::Str("assertion failed", 16)));
	if ((_59546_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a9d71c2d_Data> _62417_log = _1a9d8ce58_eval_expr(_59531_e, _59546_fc.get()._field_args[1LL]);
		if ((_62417_log == nullptr)) {
			return nullptr;
		}
		if (((!(_1a9d725e1_is_const(_62417_log.ptr()))) || (_1a9d9d023_prim(_62417_log.get()._field_kind.ptr()) == nullptr)) || (!(_1a9da3677_is_str(_1a9d9d023_prim(_62417_log.get()._field_kind.ptr()).ptr())))) {
			_1a9d73c74_push_err(_59531_e.ptr(), _59546_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_1a9d9b31d_to_str(_62417_log.get()._field_kind.ptr()))}));
			return nullptr;
		}
		_61613_model.get()._field_log=_1a9c48929_read_str(_62417_log.get()._field_constant.ptr());
	}
	jule::Ptr<_1a9d71c2d_Data> _63713_d = _1a9d97bdd_build_void_data();
	_63713_d.get()._field_model=jule::Any(_61613_model);
	return _63713_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e430da_builtin_caller_std_mem_size_of(jule::Ptr<_1a9d7379b_Eval>& _64240_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _64255_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_64255_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _64613_result = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
	if ((_64255_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_64240_e.ptr(), _64255_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	}
	if ((_64255_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_64240_e.ptr(), _64255_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _65813_d = _1a9d8c83c_eval_expr_kind(_64240_e, _64255_fc.get()._field_args[0LL].get()._field_kind);
	if ((_65813_d == nullptr)) {
		return _64613_result;
	}
	_64613_result.get()._field_model=jule::Any(jule::new_ptr<_1a8d90d6e_SizeofExprModel>(_1a8d90d6e_SizeofExprModel(_65813_d.get()._field_model)));
	return _64613_result;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e4321c_builtin_caller_std_mem_align_of(jule::Ptr<_1a9d7379b_Eval>& _66741_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _66756_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_66756_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _67113_result = jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
	if ((_66756_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_66741_e.ptr(), _66756_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _67113_result;
	}
	if ((_66756_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_66741_e.ptr(), _66756_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _68313_d = _1a9d8c83c_eval_expr_kind(_66741_e, _66756_fc.get()._field_args[0LL].get()._field_kind);
	if ((_68313_d == nullptr)) {
		return _67113_result;
	}
	_67113_result.get()._field_model=jule::Any(jule::new_ptr<_1a8d914e0_AlignofExprModel>(_1a8d914e0_AlignofExprModel(_68313_d.get()._field_model)));
	return _67113_result;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e4334e_builtin_caller_std_mem_free(jule::Ptr<_1a9d7379b_Eval>& _69237_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _69252_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_69252_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_69252_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_69237_e.ptr(), _69252_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((_69252_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _70513_d = _1a9d8c83c_eval_expr_kind(_69237_e, _69252_fc.get()._field_args[0LL].get()._field_kind);
	if ((_70513_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a9d9c7d6_performs_rc(_70513_d.get()._field_kind.ptr())))) {
		_1a9d73c74_push_err(_69237_e.ptr(), _69252_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _71413_result = _1a9d97bdd_build_void_data();
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_1a8d9214a_FreeExprModel>(_1a8d9214a_FreeExprModel(_70513_d.get()._field_model)));
	return _71413_result;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e4377d_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a9d7379b_Eval>& _71951_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _71966_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((_71966_fc.get()._field_generics.len() > 0LL)) {
		_1a9d73c74_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_71966_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_71951_e.ptr(), _71966_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_71966_fc.get()._field_args.len() > 1LL)) {
		_1a9d73c74_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a9d71c2d_Data> _73213_d = _1a9d8c83c_eval_expr_kind(_71951_e, _71966_fc.get()._field_args[0LL].get()._field_kind);
	if ((_73213_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a9da88d0_is_builtin_str_convertable(_73213_d.get()._field_kind)))) {
		_1a9d73c74_push_err(_71951_e.ptr(), _71966_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1a9d71c2d_Data>(_1a9d71c2d_Data(jule::new_ptr<_1a9d9ae66_TypeKind>(_1a9d9ae66_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a9d9aa37_Kind>(_1a9da8e41_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a9d9ae66_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1a8d919b8_IntegratedToStrExprModel>(_1a8d919b8_IntegratedToStrExprModel(_73213_d.get()._field_model)))),jule::Bool(),jule::Ptr<_1a9c46e77_Const>()));
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e43b9b_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a9d7379b_Eval>& _75049_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _75064_fc,jule::Ptr<_1a9d71c2d_Data>& ) {
	if ((!(_1a9d746ae_is_unsafe(_75049_e.ptr())))) {
		_1a9d73c74_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((_75064_fc.get()._field_args.len() < 1LL)) {
		_1a9d73c74_push_err(_75049_e.ptr(), _75064_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _76013_d = _1a9d8ce58_eval_expr(_75049_e, _75064_fc.get()._field_args[0LL]);
	if ((_76013_d == nullptr)) {
		return nullptr;
	}
	if ((_1a9d9d023_prim(_76013_d.get()._field_kind.ptr()) == nullptr) || (!(_1a9da3677_is_str(_1a9d9d023_prim(_76013_d.get()._field_kind.ptr()).ptr())))) {
		_1a9d73c74_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a9d9b31d_to_str(_76013_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	if ((!(_1a9d725e1_is_const(_76013_d.ptr()))) || (!(_1a9c4acc2_is_str(_76013_d.get()._field_constant.ptr())))) {
		_1a9d73c74_push_err(_75049_e.ptr(), _75064_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a9d71c2d_Data> _77513_r = _1a9d97bdd_build_void_data();
	if ((_75064_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1a9d0dcec_check_generic_quantity(_75049_e.get()._field_s.ptr(), 1LL,static_cast<jule::I32>(_75064_fc.get()._field_generics.len()),_75064_fc.get()._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1a9d9ed05_TypeSymbol> _78117_k = _1a8d9c7d7_build_type(_75064_fc.get()._field_generics[0LL]);
		if ((!(_1a9d11096_check_type(_75049_e.get()._field_s, _78117_k,_75049_e.get()._field_lookup)))) {
			return nullptr;
		}
		_77513_r.get()._field_kind=_78117_k.get()._field_kind;
	}
	jule::Ptr<_1a8d91d5e_BackendEmitExprModel> _78813_model = jule::new_ptr<_1a8d91d5e_BackendEmitExprModel>(_1a8d91d5e_BackendEmitExprModel(_1a9c48929_read_str(_76013_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));
	if ((_75064_fc.get()._field_args.len() > 1LL)) {
		_78813_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I32>((_75064_fc.get()._field_args.len() - 1LL)));
		{
			auto expr = _75064_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ac7a57d5:;
			if (it != expr.end()) {
				jule::Ptr<_1d7b09a43_Expr> _1ac7a6077_arg = *it;
				{
					jule::Ptr<_1a9d71c2d_Data> _79521_argd = _1a9d8c83c_eval_expr_kind(_75049_e, _1ac7a6077_arg.get()._field_kind);
					if ((_79521_argd == nullptr)) {
						return nullptr;
					}
					_78813_model.get()._field_exprs = jule::alloc_for_append(_78813_model.get()._field_exprs,1);_78813_model.get()._field_exprs.__push(_79521_argd.get()._field_model);
				}
				_iter_next_1ac7a57d5:;
				++it;
				goto _iter_begin_1ac7a57d5;
			}
			_iter_end_1ac7a57d5:;
		}
	}
	_77513_r.get()._field_model=jule::Any(_78813_model);
	return _77513_r;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e44097_builtin_caller_std_debug_out(jule::Ptr<_1a9d7379b_Eval>& _80738_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _80753_fc,jule::Ptr<_1a9d71c2d_Data>& _80775_d) {
	_80775_d=_1a9dd8e82_builtin_caller_out(_80738_e,_80753_fc,_80775_d);
	if ((_80775_d == nullptr)) {
		return nullptr;
	}
	_80775_d.get()._field_model.operator jule::Ptr<_1a8d8d883_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _80775_d;
}



inline jule::Ptr<_1a9d71c2d_Data> _1a9e444b5_builtin_caller_std_debug_outln(jule::Ptr<_1a9d7379b_Eval>& _81740_e,jule::Ptr<_1d7b8ae59_FnCallExpr>& _81755_fc,jule::Ptr<_1a9d71c2d_Data>& _81777_d) {
	_81777_d=_1a9e42408_builtin_caller_outln(_81740_e,_81755_fc,_81777_d);
	if ((_81777_d == nullptr)) {
		return nullptr;
	}
	_81777_d.get()._field_model.operator jule::Ptr<_1a8d8dc6d_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _81777_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1d7953183_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ac7e206e:;
			{
				_925_ok=_1d77cd98c_is_windows(_1d77ed506_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ac7e1bb7:;
			{
				_925_ok=_1d77cdc78_is_darwin(_1d77ed506_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ac7e19a8:;
			{
				_925_ok=_1d77ce020_is_linux(_1d77ed506_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ac7e1a1e:;
			{
				_925_ok=_1d77ceae2_is_unix(_1d77ed506_OS);
			}
		}
		else {
			_case_begin_1ac7e129e:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1ac7e17dd:;
	}
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1d79532b5_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ac7e48ac:;
			{
				_3027_ok=_1d77ce30b_is_i386(_1d77ee392_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ac7e4505:;
			{
				_3027_ok=_1d77ce5a3_is_amd64(_1d77ee392_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ac7e42e6:;
			{
				_3027_ok=_1d77ce84a_is_arm64(_1d77ee392_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ac7e435c:;
			{
				_3027_ok=_1d77d01b9_is_64bit(_1d77ee392_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ac7e43c3:;
			{
				_3027_ok=_1d77cee22_is_32bit(_1d77ee392_ARCH);
			}
		}
		else {
			_case_begin_1ac7e3adc:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1ac7e412b:;
	}
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1d796c796_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1d683bed5_base(_5432_p);
	jule::I32 _569_n = _5432_p.len();
	(_5432_p).mut_slice(0LL,_569_n - static_cast<jule::I32>(static_cast<jule::I32>(_1d685245c_ext(_5432_p).len())));
	jule::Str _6213_a1 = jule::Str();
	jule::Str _6513_a2 = jule::Str();
	jule::I32 _6813_i = _1d749e570_find_last_byte(_5432_p,'_');
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;
		jule::Bool _7126_exist;
		std::tie(_7118_ok,_7126_exist) = _1d7953183_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		}
		std::tie(_7118_ok,_7126_exist) = _1d79532b5_check_arch(_5432_p);
		return (!(_7126_exist)) || _7118_ok;
	}
	if ((_6813_i + 1LL) >= _569_n) {
		return true;
	}
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);
	_6813_i=static_cast<jule::I32>(_1d749e570_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	}
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;
		jule::Bool _9226_exist;
		std::tie(_9218_ok,_9226_exist) = _1d7953183_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		}
		std::tie(_9218_ok,_9226_exist) = _1d79532b5_check_arch(_6213_a1);
		return (!(_9226_exist)) || _9218_ok;
	}
	jule::Bool _10014_ok;
	jule::Bool _10022_exist;
	std::tie(_10014_ok,_10022_exist) = _1d79532b5_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		}
		std::tie(_10014_ok,_10022_exist) = _1d7953183_check_os(_6513_a2);
		return (!(_10022_exist)) || _10014_ok;
	}
	std::tie(_10014_ok,_10022_exist) = _1d7953183_check_os(_6213_a1);
	return (!(_10022_exist)) || _10014_ok;
}



inline void _1d796d92e_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1d77ed506_OS);
	if (_1d77ceae2_is_unix(_1d77ed506_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));
	}
}



inline void _1d796db82_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_1d77ee392_ARCH);
	if (_1d77d01b9_is_64bit(_1d77ee392_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));
	}
	if (_1d77cee22_is_32bit(_1d77ee392_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));
	}
}



inline void _1d796de3a_init_vars(jule::Slice<jule::Str>& _5519_vars,_1d796d621_CompileInfo& _5533_info) {
	_1d796d92e_set_os_vars(_5519_vars);
	_1d796db82_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));
	}
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac8010e4:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac801d70:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_1ac80108e:;
	}
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac801952:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac80204b:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac8020b2:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_1ac801ee6:;
	}
}



inline jule::Slice<jule::U8> _1bcde93d0_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1d596a015_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			
			_1d782bac8_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1d77ca48e_Log _1bce291bd_flat_compiler_err(jule::Str _4122_text) {
	return _1d77ca48e_Log(static_cast<jule::I32>(1LL),jule::I32(),jule::I32(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _1a8d36ae5_push_passes(jule::Ptr<_1a9d05013_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = _9021_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac815504:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac815081_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1ac815081_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1ac819915:;
					if (it != expr.end()) {
						_1a8d9c485_Pass _1ac81d100_pass = *it;
						{
							if (_1ac81d100_pass._field_text.empty()) {
								goto _iter_next_1ac819915;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_1ac81dc8d:;
								if (it != expr.end()) {
									jule::Str _1ac81da29_cpass = *it;
									{
										if (_1ac81da29_cpass == _1ac81d100_pass._field_text) {
											goto _iter_next_1ac819915;
										}
									}
									_iter_next_1ac81dc8d:;
									++it;
									goto _iter_begin_1ac81dc8d;
								}
								_iter_end_1ac81dc8d:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_1ac81d100_pass._field_text);
						}
						_iter_next_1ac819915:;
						++it;
						goto _iter_begin_1ac819915;
					}
					_iter_end_1ac819915:;
				}
			}
			_iter_next_1ac815504:;
			++it;
			goto _iter_begin_1ac815504;
		}
		_iter_end_1ac815504:;
	}
}



inline jule::Slice<jule::Str> _1a8d43c45_get_all_unique_passes(jule::Ptr<_1a9d05013_Package>& _10731_pkg,jule::Slice<jule::Ptr<_1a9d02351_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_1a8d36ae5_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_1ac8200be:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> _1ac820575_u = *it;
			{
				if ((!(_1ac820575_u.get()._field_cpp_linked))) {
					_1a8d36ae5_push_passes(_1ac820575_u.get()._field_package,_10813_passes);
				}
			}
			_iter_next_1ac8200be:;
			++it;
			goto _iter_begin_1ac8200be;
		}
		_iter_end_1ac8200be:;
	}
	return _10813_passes;
}



inline _1d796d621_CompileInfo _1a8d4d69a_build_compile_info(void) {
	_1d796d621_CompileInfo _12113_info = _1d796d621_CompileInfo(_1d580edbb_PRODUCTION,_1d5812ac2_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));
	{
		auto &_match_expr{ _1d58122b9_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ac821752:;
			{
				_12113_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ac8217b8:;
			{
				_12113_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ac8216ec:;
	}
	{
		auto &_match_expr{ _1d581260a_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ac82182e:;
			{
				_12113_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ac8222be:;
			{
				_12113_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ac822335:;
			{
				_12113_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ac821b1a:;
	}
	return _12113_info;
}



inline jule::Ptr<_1d7a4352b_Directive> _1bce79d12_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _3224_directives,jule::Str _3255_tag) {
	{
		auto &expr = _3224_directives;
		auto it = expr.begin();
		_iter_begin_1ac8378de:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1ac837a10_dr = *it;
			{
				if (_1ac837a10_dr.get()._field_tag.get()._field_kind == _3255_tag) {
					return _1ac837a10_dr;
				}
			}
			_iter_next_1ac8378de:;
			++it;
			goto _iter_begin_1ac8378de;
		}
		_iter_end_1ac8378de:;
	}
	return nullptr;
}



inline jule::Bool _1bd01a600_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _4219_directives,jule::Str _4250_tag) {
	return (_1bce79d12_find_directive(_4219_directives,_4250_tag) != nullptr);
}



inline jule::Bool _1bce6d4ba_is_exist(jule::Slice<jule::Any> _4713_arr,jule::Any _4725_t) {
	{
		auto &expr = _4713_arr;
		auto it = expr.begin();
		_iter_begin_1ac837d84:;
		if (it != expr.end()) {
			jule::Any &_1ac839391_ref = *it;
			{
				if (_4725_t == _1ac839391_ref) {
					return true;
				}
			}
			_iter_next_1ac837d84:;
			++it;
			goto _iter_begin_1ac837d84;
		}
		_iter_end_1ac837d84:;
	}
	return false;
}



inline jule::Bool _1bce6da81_is_dead(jule::Any _5716_ref) {
	jule::Bool _5728_dead = jule::Bool();
	if (_1bce6d4ba_is_exist(_1bce48154_deads,_5716_ref)) {
		_5728_dead = true;
		return _5728_dead;
	}
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1ac83b75b:;
			{
				if (_1a8d95a55_is_init(_5716_ref.operator jule::Ptr<_1a8d98063_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1ac83a20a;
				}
				goto _case_begin_1ac83a716;
			}
		}
		else {
			_case_begin_1ac83a716:;
			{
				if ((_1bce4b83e_current == _5716_ref) || (_1bce62e4e_main_current == _5716_ref)) {
					_5728_dead = true;
					return _5728_dead;
				}
				if (_1bce6d4ba_is_exist(_1bce4b421_checking,_5716_ref)) {
					_5728_dead = true;
					return _5728_dead;
				}
			}
		}
		_match_end_1ac83a20a:;
	}
	jule::Any _7813_old = _1bce4b83e_current;
	_1bce4b83e_current=_5716_ref;
	jule::I32 _809_len = _1bce4b421_checking.len();
	_1bce4b421_checking = jule::alloc_for_append(_1bce4b421_checking,1);_1bce4b421_checking.__push(_5716_ref);
	__JULE_DEFER({
		_1bce4b83e_current=_7813_old;
		_1bce6e147_drop_ref(_1bce4b421_checking,_809_len);
	});
	{
		auto &_match_expr{ _5716_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d98063_FnIns>>()) {
			_case_begin_1ac83d51b:;
			{
				_5728_dead = _1bcdec3a0_is_fn_dead(_5716_ref.operator jule::Ptr<_1a8d98063_FnIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a9d2553e_Var>>()) {
			_case_begin_1ac83d582:;
			{
				_5728_dead = _1bd01035e_is_var_dead(_5716_ref.operator jule::Ptr<_1a9d2553e_Var>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d857c0_StructIns>>()) {
			_case_begin_1ac83d64d:;
			{
				_5728_dead = _1a9e4488e_is_struct_dead(_5716_ref.operator jule::Ptr<_1a8d857c0_StructIns>());
				return _5728_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8ea7a57_Trait>>()) {
			_case_begin_1ac83d6b4:;
			{
				_5728_dead = _1a9e449c1_is_trait_dead(_5716_ref.operator jule::Ptr<_1a8ea7a57_Trait>());
				return _5728_dead;
			}
		}
		else {
			_case_begin_1ac83a848:;
			{
				_5728_dead = false;
				return _5728_dead;
			}
		}
		_match_end_1ac83d010:;
	}
}



inline void _1bce6e147_drop_ref(jule::Slice<jule::Any>& _10518_refs,jule::I32 _10531_pos) {
	_10518_refs=_10518_refs.slice(0LL,_10531_pos);
}



inline jule::Bool _1bcdebd72_is_all_references_are_dead(jule::Ptr<_1a8d9b121_ReferenceStack> _11335_references) {
	jule::I32 _11413_i = 0LL;
	for (; _11413_i < static_cast<jule::I32>(static_cast<jule::I32>(_1a8d9b73c_len(_11335_references.ptr()))); (_11413_i)++) {
		{
			jule::Any _11617_ref = _1a8d9ba4a_at(_11335_references.ptr(), _11413_i);
			if (_11617_ref == _1bce4b83e_current) {
				goto _iter_next_1ac83d76e;
			}
			if (_11617_ref == _1bce62e4e_main_current) {
				goto _iter_next_1ac83d76e;
			}
			if ((!(_1bce6da81_is_dead(_11617_ref)))) {
				return false;
			}
		}
	_iter_next_1ac83d76e:;
	}
	_iter_end_1ac83d76e:;
	return true;
}



inline jule::Bool _1bcdec3a0_is_fn_dead(jule::Ptr<_1a8d98063_FnIns> _13019_f) {
	if (_13019_f.get()._field_decl.get()._field_cpp_linked || _13019_f.get()._field_anon) {
		return false;
	}
	if (_1a8d957e1_is_entry_point(_13019_f.get()._field_decl.ptr()) || _1a8d95a55_is_init(_13019_f.get()._field_decl.ptr())) {
		return (!(_13019_f.get()._field_decl.get()._field_statically));
	}
	if (_1d5812ac2_TEST && _1bd01a600_has_directive(_13019_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((_13019_f.get()._field_owner != nullptr)) {
		if (_1bce6d4ba_is_exist(_1bce4b421_checking,jule::Any(_13019_f.get()._field_owner))) {
			return true;
		}
		return _1bce6da81_is_dead(jule::Any(_13019_f.get()._field_owner));
	}
	return _1bcdebd72_is_all_references_are_dead(_13019_f.get()._field_references);
}



inline jule::Bool _1bd01035e_is_var_dead(jule::Ptr<_1a9d2553e_Var> _16020_v) {
	if (_16020_v.get()._field_constant) {
		return true;
	}
	if (_16020_v.get()._field_cpp_linked) {
		return false;
	}
	return _1bcdebd72_is_all_references_are_dead(_16020_v.get()._field_references);
}



inline jule::Bool _1a9e4488e_is_struct_dead(jule::Ptr<_1a8d857c0_StructIns> _20523_s) {
	return false;
}



inline jule::Bool _1a9e449c1_is_trait_dead(jule::Ptr<_1a8ea7a57_Trait> _22222_t) {
	return false;
}



inline void _1a9e44b03_eliminate_dead_functions(jule::Slice<jule::Ptr<_1a8d94db7_Fn>>& _23934_funcs) {
	jule::I32 _24013_i = 0LL;
	while (_24013_i < static_cast<jule::I32>(static_cast<jule::I32>(_23934_funcs.len()))) {
		{
			jule::Ptr<_1a8d94db7_Fn> _24217_f = _23934_funcs[_24013_i];
			jule::I32 _24317_j = 0LL;
			while (_24317_j < static_cast<jule::I32>(static_cast<jule::I32>(_24217_f.get()._field_instances.len()))) {
				{
					jule::Ptr<_1a8d98063_FnIns> _24521_ins = _24217_f.get()._field_instances[_24317_j];
					_1bce62e4e_main_current=jule::Any(_24521_ins);
					if (_1bcdec3a0_is_fn_dead(_24521_ins)) {
						_1bce48154_deads = jule::alloc_for_append(_1bce48154_deads,1);_1bce48154_deads.__push(jule::Any(_24521_ins));
						_24217_f.get()._field_instances=jule::append(_24217_f.get()._field_instances.slice(0LL,_24317_j),_24217_f.get()._field_instances.slice((_24317_j + 1LL)));
					} else {
						(_24317_j)++;
					}
				}
			_iter_next_1ac850918:;
			}
			_iter_end_1ac850918:;
			if ((_24217_f.get()._field_instances.len() == 0LL)) {
				_23934_funcs=jule::append(_23934_funcs.slice(0LL,_24013_i),_23934_funcs.slice((_24013_i + 1LL)));
				goto _iter_next_1ac84d460;
			}
			(_24013_i)++;
		}
	_iter_next_1ac84d460:;
	}
	_iter_end_1ac84d460:;
}



inline void _1a9e44c35_eliminate_dead_globals(jule::Ptr<_1a9d05013_Package>& _26432_pkg) {
	{
		auto &expr = _26432_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac84eebc:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac857ea3_f = *it;
			{
				jule::I32 _26617_i = 0LL;
				while (_26617_i < static_cast<jule::I32>(static_cast<jule::I32>(_1ac857ea3_f.get()._field_vars.len()))) {
					{
						jule::Ptr<_1a9d2553e_Var> _26821_v = _1ac857ea3_f.get()._field_vars[_26617_i];
						_1bce62e4e_main_current=jule::Any(_26821_v);
						if (_1bd01035e_is_var_dead(_26821_v)) {
							_1bce48154_deads = jule::alloc_for_append(_1bce48154_deads,1);_1bce48154_deads.__push(jule::Any(_26821_v));
							_1ac857ea3_f.get()._field_vars=jule::append(_1ac857ea3_f.get()._field_vars.slice(0LL,_26617_i),_1ac857ea3_f.get()._field_vars.slice((_26617_i + 1LL)));
						} else {
							(_26617_i)++;
						}
					}
				_iter_next_1ac858ba7:;
				}
				_iter_end_1ac858ba7:;
			}
			_iter_next_1ac84eebc:;
			++it;
			goto _iter_begin_1ac84eebc;
		}
		_iter_end_1ac84eebc:;
	}
}



inline void _1a9e44d67_eliminate_dead_functions_package(jule::Ptr<_1a9d05013_Package>& _28042_pkg) {
	{
		auto &expr = _28042_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac85916e:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac858734_f = *it;
			{
				_1a9e44b03_eliminate_dead_functions(_1ac858734_f.get()._field_funcs);
			}
			_iter_next_1ac85916e:;
			++it;
			goto _iter_begin_1ac85916e;
		}
		_iter_end_1ac85916e:;
	}
}



inline void _1a9e4543e_keep_alive_init(jule::Ptr<_1a9d05013_Package>& _32825_pkg) {
	
	
	jule::Ptr<_1a8d94db7_Fn> _33113_f = _1a9d067a6_find_fn(_32825_pkg.ptr(), jule::Str("init", 4),false);
	if ((_33113_f != nullptr)) {
		_33113_f.get()._field_statically=true;
	}
}



inline void _1a9e45571_eliminate_package(jule::Ptr<_1a9d05013_Package>& _33727_pkg) {
	_1bce48154_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1a9e4543e_keep_alive_init(_33727_pkg);
	_1a9e44c35_eliminate_dead_globals(_33727_pkg);
	_1a9e44d67_eliminate_dead_functions_package(_33727_pkg);
}



inline void _1a9e456a3_eliminate_defines(jule::Ptr<_1bce27b17_IR>& _34931_ir) {
	jule::I32 _35013_i = (_34931_ir.get()._field_used.len() - 1LL);
	for (; (_35013_i >= 0LL); (_35013_i)--) {
		{
			jule::Ptr<_1a9d02351_ImportInfo> _35217_u = _34931_ir.get()._field_used[_35013_i];
			if ((!(_35217_u.get()._field_cpp_linked))) {
				_1a9e45571_eliminate_package(_35217_u.get()._field_package);
			}
		}
	_iter_next_1ac864597:;
	}
	_iter_end_1ac864597:;
	_1a9e45571_eliminate_package(_34931_ir.get()._field_main);
	_1bce48154_deads=nullptr;
	_1bce4b421_checking=nullptr;
	_1bce4b83e_current=jule::Any(nullptr);
}



inline void _1a9e46154_eliminate_dead_code_of_scope(jule::Ptr<_1a9cc76bc_Scope> _7637_s) {
	jule::Ptr<_1a9e4598e_ScopeDeadCode> _7713_sdc = jule::new_ptr<_1a9e4598e_ScopeDeadCode>(_1a9e4598e_ScopeDeadCode(jule::Ptr<_1a9e4598e_ScopeDeadCode>(),_7637_s,(&(_7637_s.get()._field_stmts)),jule::I32()));
	{
		_1a9e46022_optimize_stmts(_7713_sdc);
	}
}



inline void _1a9e46286_eliminate_scope_functions(jule::Slice<jule::Ptr<_1a8d94db7_Fn>>& _8535_funcs) {
	{
		auto &expr = _8535_funcs;
		auto it = expr.begin();
		_iter_begin_1ac86890e:;
		if (it != expr.end()) {
			jule::Ptr<_1a8d94db7_Fn> _1ac868d93_func = *it;
			{
				{
					auto &expr = _1ac868d93_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1ac869525:;
					if (it != expr.end()) {
						jule::Ptr<_1a8d98063_FnIns> _1ac8695e1_ins = *it;
						{
							_1a9e46154_eliminate_dead_code_of_scope(_1ac8695e1_ins.get()._field_scope);
						}
						_iter_next_1ac869525:;
						++it;
						goto _iter_begin_1ac869525;
					}
					_iter_end_1ac869525:;
				}
			}
			_iter_next_1ac86890e:;
			++it;
			goto _iter_begin_1ac86890e;
		}
		_iter_end_1ac86890e:;
	}
}



inline void _1a9e463b8_eliminate_functions_scope_package(jule::Ptr<_1a9d05013_Package>& _9343_pkg) {
	{
		auto &expr = _9343_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ac869190:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d6baa2_SymbolTable> _1ac8696ce_f = *it;
			{
				_1a9e46286_eliminate_scope_functions(_1ac8696ce_f.get()._field_funcs);
			}
			_iter_next_1ac869190:;
			++it;
			goto _iter_begin_1ac869190;
		}
		_iter_end_1ac869190:;
	}
}



inline void _1a9e464ea_eliminate_scope_package(jule::Ptr<_1a9d05013_Package>& _9933_pkg) {
	_1a9e463b8_eliminate_functions_scope_package(_9933_pkg);
}



inline void _1a9e4662c_eliminate_scopes(jule::Ptr<_1bce27b17_IR>& _10430_ir) {
	jule::I32 _10513_i = (_10430_ir.get()._field_used.len() - 1LL);
	for (; (_10513_i >= 0LL); (_10513_i)--) {
		{
			jule::Ptr<_1a9d02351_ImportInfo> _10717_u = _10430_ir.get()._field_used[_10513_i];
			if ((!(_10717_u.get()._field_cpp_linked))) {
				_1a9e464ea_eliminate_scope_package(_10717_u.get()._field_package);
			}
		}
	_iter_next_1ac86acb8:;
	}
	_iter_end_1ac86acb8:;
	_1a9e464ea_eliminate_scope_package(_10430_ir.get()._field_main);
}



inline void _1a9e6820e_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1d782bac8_exit(1LL);
}



inline jule::Bool _1aa4c1080_is_std_package(jule::Str _39719_f,jule::Str _39727_p) {
	return _1d7728e59_has_prefix(_39719_f,_1d685188a_join(jule::Slice<jule::Str>({_1d77ddb12_PATH_STDLIB,_39727_p})));
}



inline jule::Bool _1aa4c13d2_is_constant_valid_conditional_case(jule::Ptr<_1a9cce0b9_If>& _40140_i) {
	{
		auto &_match_expr{ _40140_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac93339c:;
			{
				jule::Ptr<_1a9c46e77_Const> _40413_c = _40140_i.get()._field_expr.operator jule::Ptr<_1a9c46e77_Const>();
				return _1a9c4aa5d_is_bool(_40413_c.ptr()) && _1a9c486b5_read_bool(_40413_c.ptr());
			}
		}
		_match_end_1ac933347:;
	}
	return false;
}



inline jule::Bool _1aa4c1646_is_unreachable_expr(jule::Any& _41025_expr) {
	{
		auto &_match_expr{ _41025_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac933e5d:;
			{
				jule::Ptr<_1a9c46e77_Const> _41313_c = _41025_expr.operator jule::Ptr<_1a9c46e77_Const>();
				return _1a9c4aa5d_is_bool(_41313_c.ptr()) && (!(_1a9c486b5_read_bool(_41313_c.ptr())));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a8d878e3_BinopExprModel>>()) {
			_case_begin_1ac933ec4:;
			{
				jule::Ptr<_1a8d878e3_BinopExprModel> _41613_m = _41025_expr.operator jule::Ptr<_1a8d878e3_BinopExprModel>();
				if ((_41613_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return _1aa4c1646_is_unreachable_expr(_41613_m.get()._field_left.get()._field_model) || _1aa4c1646_is_unreachable_expr(_41613_m.get()._field_right.get()._field_model);
				}
			}
		}
		_match_end_1ac933e08:;
	}
	return false;
}



inline jule::Bool _1aa4c1976_is_constant_valid_match_case(jule::Ptr<_1a9cdb2b3_Case>& _42434_case) {
	{
		auto &expr = _42434_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac9352d3:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d71c2d_Data> &_1ac93535a_expr = *it;
			{
				if ((_1a9d725e1_is_const(_1ac93535a_expr.ptr()) && _1a9c4aa5d_is_bool(_1ac93535a_expr.get()._field_constant.ptr())) && _1a9c486b5_read_bool(_1ac93535a_expr.get()._field_constant.ptr())) {
					return true;
				}
			}
			_iter_next_1ac9352d3:;
			++it;
			goto _iter_begin_1ac9352d3;
		}
		_iter_end_1ac9352d3:;
	}
	return false;
}



inline jule::Bool _1aa4c1c51_is_unreachable_conditional_case(jule::Ptr<_1a9cce0b9_If>& _43337_i) {
	return _1aa4c1646_is_unreachable_expr(_43337_i.get()._field_expr);
}



inline jule::Bool _1aa4c202b_is_unreachable_match_case(jule::Ptr<_1a9cdb2b3_Case>& _43731_case) {
	{
		auto &expr = _43731_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ac93789b:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d71c2d_Data> &_1ac9391c7_expr = *it;
			{
				if ((!(_1aa4c1646_is_unreachable_expr(_1ac9391c7_expr.get()._field_model)))) {
					return false;
				}
			}
			_iter_next_1ac93789b:;
			++it;
			goto _iter_begin_1ac93789b;
		}
		_iter_end_1ac93789b:;
	}
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1aa4c9187_check_for_bit_shift_opt(jule::Ptr<_1a8d8742b_OperandExprModel>& _42329_l,jule::Ptr<_1a8d8742b_OperandExprModel>& _42352_r) {
	jule::Bool _42376_ok = jule::Bool();
	jule::U64 _42386_x = jule::U64();
	if ((!(_1a9cd9998_is_int(_1a9d9b31d_to_str(_42329_l.get()._field_kind.ptr())))) || (!(_1a9cd9998_is_int(_1a9d9b31d_to_str(_42352_r.get()._field_kind.ptr()))))) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	{
		auto &_match_expr{ _42352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a9c46e77_Const>>()) {
			_case_begin_1ac93bcac:;
			{
				goto _match_end_1ac93b74b;
			}
		}
		else {
			_case_begin_1ac93b7a1:;
			{
				_42376_ok = false;
				_42386_x = 0LLU;
				return std::make_tuple(_42376_ok,_42386_x);
			}
		}
		_match_end_1ac93b74b:;
	}
	_42386_x=static_cast<jule::U64>(_1a9c49166_as_u64(_42352_r.get()._field_model.operator jule::Ptr<_1a9c46e77_Const>().ptr()));
	if ((_42386_x == 0LLU) || ((_42386_x & 1LL) != 0LLU)) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	jule::F64 _4379_j = _1a9b8b5e7_log2(static_cast<jule::F64>(static_cast<jule::F64>(_42386_x)));
	jule::U64 _4389_z = static_cast<jule::U64>(_4379_j);
	if (static_cast<jule::F64>(_4389_z) != _4379_j) {
		_42376_ok = false;
		_42386_x = 0LLU;
		return std::make_tuple(_42376_ok,_42386_x);
	}
	_42376_ok = true;
	_42386_x = _4389_z;
	return std::make_tuple(_42376_ok,_42386_x);
}



inline jule::U64 _1aa551165_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1aa5514a6_unix_year_to_seconds(jule::U64 _26225_y,jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26225_y - 70LLU)))))) + static_cast<jule::U64>(static_cast<jule::U64>(86400LLU * _26417_leaps)));
	}
	jule::U64 _27213_leaps = 0LLU;
	jule::U64 _27313_centuries = 0LLU;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	}
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			}
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			}
		}
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>(_27513_rem >> 2LLU);
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		}
	}
	_27213_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _27413_cycles)) + static_cast<jule::U64>(static_cast<jule::U64>(24LLU * _27313_centuries)));
	if (_26243_leap) {
		(_27213_leaps)++;
	}
	return static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_26225_y - 100LLU)))) * 31536000LLU))) + static_cast<jule::U64>(static_cast<jule::U64>((_27213_leaps * 86400LLU))))) + 946684800LLU))) + 86400LLU));
}



inline jule::U64 _1aa55183b_unix_month_to_seconds(jule::U64 _31926_m,jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1ac969ee9:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ac96a417:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ac96a47d:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ac96a4e4:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ac96a55a:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ac96a5c1:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ac96a648:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ac96a6c0:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ac96a747:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1ac96a7be:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ac96a846:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1ac96a26e:;
	}
	if (_31939_leap && (_31926_m >= 2LLU)) {
		_32113_t+=86400LLU;
	}
	return _32113_t;
}



inline jule::Bool _1aa4b765e_is_copy_optimizable(jule::Ptr<_1a9d71c2d_Data>& _77525_expr) {
	if ((!(_77525_expr.get()._field_lvalue))) {
		return false;
	}
	{
		auto &_match_expr{ _77525_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8b232_SlicingExprModel>>()) {
			_case_begin_1acc60179:;
			{
				return false;
			}
		}
		_match_end_1acc60124:;
	}
	return true;
}



inline jule::Bool _1aa4b7791_is_iter_copy_optimizable(jule::Ptr<_1a9d71c2d_Data>& _78630_expr,jule::Ptr<_1a9d2553e_Var>& _78644_v) {
	if ((!(_78630_expr.get()._field_lvalue)) && (!(_1a9d9c30d_mutable(_78630_expr.get()._field_kind.ptr())))) {
		return true;
	}
	return (!(_78644_v.get()._field_mutable)) && (!(_78630_expr.get()._field_mutable));
}



inline jule::Str _1aa4d49cd_concat_all_parts(jule::Slice<jule::Ptr<_1d7b77374_Token>> _114621_parts) {
	jule::Str _114713_s = jule::Str();
	{
		auto &expr = _114621_parts;
		auto it = expr.begin();
		_iter_begin_1acc62ca3:;
		if (it != expr.end()) {
			jule::Ptr<_1d7b77374_Token> &_1acc62d4c_p = *it;
			{
				_114713_s+=_1acc62d4c_p.get()._field_kind;
			}
			_iter_next_1acc62ca3:;
			++it;
			goto _iter_begin_1acc62ca3;
		}
		_iter_end_1acc62ca3:;
	}
	return _114713_s;
}



inline jule::Str _1aa4d4cb9_decompose_common_esq(jule::U8 _115425_b) {
	{
		auto &_match_expr{ _115425_b };
		
		if (_match_expr == '\\') {
			_case_begin_1acc63d70:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1acc63dd6:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1acc63a95:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1acc63b0b:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1acc63b72:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1acc6380e:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1acc63875:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1acc638db:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1acc63952:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1acc63e6e:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1acc6306c:;
			{
				return jule::Str();
			}
		}
		_match_end_1acc6319e:;
	}
}



inline jule::Str _1aa4d5061_sbtoa(jule::U8 _118110_b) {
	if ((_118110_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	}
	if ((_118110_b < 128LLU)) {
		jule::Str _118613_seq = _1aa4d4cb9_decompose_common_esq(_118110_b);
		if ((!(_118613_seq.empty()))) {
			return _118613_seq;
		}
		if ((32LL <= _118110_b) && (_118110_b <= 126LLU)) {
			return static_cast<jule::Str>(_118110_b);
		}
	}
	jule::Str _11949_seq = _1a9ba8834_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_118110_b)),8LL);
	if ((_11949_seq.len() == 2LL)) {
		return jule::Str("\\0", 2) + _11949_seq;
	}
	return jule::Str("\\", 1) + _11949_seq;
}



inline jule::Str _1aa4d534c_cstr_bytes(jule::Slice<jule::U8> _120115_bytes) {
	jule::Str _120213_lit = jule::Str();
	{
		auto &expr = _120115_bytes;
		auto it = expr.begin();
		_iter_begin_1acc695b2:;
		if (it != expr.end()) {
			jule::U8 &_1acc6965b_b = *it;
			{
				_120213_lit+=_1aa4d5061_sbtoa(_1acc6965b_b);
			}
			_iter_next_1acc695b2:;
			++it;
			goto _iter_begin_1acc695b2;
		}
		_iter_end_1acc695b2:;
	}
	return _120213_lit;
}



inline jule::Str _1aa4d55e4_cstr_lit(jule::Slice<jule::U8> _120913_bytes) {
	return ((jule::Str("\"", 1) + _1aa4d534c_cstr_bytes(_120913_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1aa4d5935_ftoa(jule::F64 _12139_f,jule::I32 _121317_bitsize) {
	if ((_121317_bitsize != 32LL)) {
		if (_12139_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12139_f))))) {
			return _1aa4d5bcc_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12139_f)));
		}
		if (_12139_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12139_f))))) {
			return _1aa4d600c_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12139_f)));
		}
	}
	jule::Str _122213_m = _1a94b8595_fmt_float(_12139_f,'f',-1LL,_121317_bitsize);
	if ((!(_1d749edde_contains(_122213_m,jule::Str(".", 1))))) {
		_122213_m+=jule::Str(".0", 2);
	}
	return _122213_m;
}



inline jule::Str _1aa4d5bcc_itoa(jule::I64 _12299_x) {
	{
		
		if ((_12299_x == jule::MAX_I64)) {
			_case_begin_1acc6d61b:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12299_x == jule::MIN_I64)) {
			_case_begin_1acc6d6b5:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1acc6d50b:;
	}
	jule::Str _12379_fmt = _1a9ba8966_fmt_int(_12299_x,10LL);
	if (_1d77d01b9_is_64bit(jule::Str("i386", 4))) {
		return (_12379_fmt + jule::Str("LL", 2));
	}
	return (_12379_fmt + jule::Str("L", 1));
}



inline jule::Str _1aa4d600c_utoa(jule::U64 _12449_x) {
	{
		
		if ((_12449_x == jule::MAX_U64)) {
			_case_begin_1acc704ec:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1acc6e9b3:;
	}
	jule::Str _12509_fmt = _1a9ba8834_fmt_uint(_12449_x,10LL);
	if (_1d77d01b9_is_64bit(jule::Str("i386", 4))) {
		return (_12509_fmt + jule::Str("LLU", 3));
	}
	return (_12509_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1aa4d62a4_is_forwarded(jule::Ptr<_1a9cc76bc_Scope>& _125718_s) {
	jule::Any _12589_last = _125718_s.get()._field_stmts[(_125718_s.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _12589_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a9d71c2d_Data>>()) {
			_case_begin_1acc72ce6:;
			{
				{
					auto &_match_expr{ _12589_last.operator jule::Ptr<_1a9d71c2d_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a8d90a94_BuiltinErrorCallExprModel>>()) {
						_case_begin_1acc73742:;
						{
							return true;
						}
					}
					else {
						_case_begin_1acc73324:;
						{
							return false;
						}
					}
					_match_end_1acc732be:;
				}
			}
		}
		else {
			_case_begin_1acc726ca:;
			{
				return true;
			}
		}
		_match_end_1acc72675:;
	}
}



inline jule::Bool _1aa4d6590_is_builtin_call_has_debuginf(jule::Ptr<_1a8d896d6_FnCallExprModel>& _127234_m) {
	if ((!(_1a8d98cde_is_builtin(_127234_m.get()._field_func.ptr())))) {
		return false;
	}
	{
		auto &_match_expr{ _127234_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>>()) {
			_case_begin_1acc79528:;
			{
				jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel> _127813_csie = _127234_m.get()._field_expr.operator jule::Ptr<_1a8d8d1ac_CommonSubIdentExprModel>();
				return (_127813_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1acc78e73:;
			{
				return false;
			}
		}
		_match_end_1acc7291c:;
	}
}



inline jule::Bool _1aa5584d0_is_cpp_header_file(jule::Str _119923_path) {
	jule::I32 _12009_offset = _1d749e570_find_last_byte(_119923_path,'.');
	if ((_12009_offset == -1LL)) {
		return false;
	}
	return _1d77be0dc_is_valid_header_ext(_119923_path.slice(_12009_offset));
}



inline jule::Ptr<_1d7a4352b_Directive> _1aa559437_find_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _3024_directives,jule::Str _3055_tag) {
	{
		auto &expr = _3024_directives;
		auto it = expr.begin();
		_iter_begin_1acc7b151:;
		if (it != expr.end()) {
			jule::Ptr<_1d7a4352b_Directive> _1acc7b195_dr = *it;
			{
				if (_1acc7b195_dr.get()._field_tag.get()._field_kind == _3055_tag) {
					return _1acc7b195_dr;
				}
			}
			_iter_next_1acc7b151:;
			++it;
			goto _iter_begin_1acc7b151;
		}
		_iter_end_1acc7b151:;
	}
	return nullptr;
}



inline jule::Bool _1aa5597bc_has_directive(jule::Slice<jule::Ptr<_1d7a4352b_Directive>>& _4019_directives,jule::Str _4050_tag) {
	return (_1aa559437_find_directive(_4019_directives,_4050_tag) != nullptr);
}



inline void _1d77927ec_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1d77a9d31_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _3510_args[2LL]);
		return;
	}
	jule::I32 _4113_max = _1d778e266_HELP_MAP[0LL][0LL].len();
	{
		auto &expr = _1d778e266_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1accc9b1c:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1accca26b_k = *it;
			{
				jule::I32 _4313_n = _1accca26b_k[0LL].len();
				if (_4313_n > _4113_max) {
					_4113_max=_4313_n;
				}
			}
			_iter_next_1accc9b1c:;
			++it;
			goto _iter_begin_1accc9b1c;
		}
		_iter_end_1accc9b1c:;
	}
	jule::Str _4913_s = jule::Str();
	
	{
		auto &expr = _1d778e266_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1acccb602:;
		if (it != expr.end()) {
			jule::I32 _1acccb723_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1acccb965_part = *it;
			{
				_4913_s+=_1acccb965_part[0LL];
				_4913_s+=_1d68791dc_repeat(jule::Str(" ", 1),static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_4113_max - static_cast<jule::I32>(static_cast<jule::I32>(_1acccb965_part[0LL].len()))))) + 5LL)));
				_4913_s+=_1acccb965_part[1LL];
				if (((_1acccb723_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_1acccb602:;
			++it;
			_1acccb723_i++;
			goto _iter_begin_1acccb602;
		}
		_iter_end_1acccb602:;
	}
	jule::outln(_4913_s);
}



inline void _1d77ab43c_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _6313_args[2LL]);
		return;
	}
	jule::outln(jule::Str("jule0.0.10", 10));
}



inline void _1d77abbce_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1d77cd53b_DISTOS;
		auto it = expr.begin();
		_iter_begin_1accce979:;
		if (it != expr.end()) {
			jule::Str &_1acccee96_os = *it;
			{
				jule::out(_1acccee96_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1accce979:;
			++it;
			goto _iter_begin_1accce979;
		}
		_iter_end_1accce979:;
	}
	jule::outln(jule::Str());
}



inline void _1d77ac471_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1d77cd739_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1accd02d7:;
		if (it != expr.end()) {
			jule::Str &_1accd0abd_arch = *it;
			{
				jule::out(_1accd0abd_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1accd02d7:;
			++it;
			goto _iter_begin_1accd02d7;
		}
		_iter_end_1accd02d7:;
	}
	jule::outln(jule::Str());
}



inline void _1d77acc13_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((_9210_args.len() > 3LL)) {
		_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _9210_args[3LL]);
		return;
	}
	jule::Str _1039_cmd = _9210_args[2LL];
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1accd32b8:;
			{
				_1d77abbce_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1accd2edd:;
			{
				_1d77ac471_tool_distarch();
			}
		}
		else {
			_case_begin_1accd2196:;
			{
				_1d77927ec_print_error_message(jule::Str("undefined command: ", 19) + _1039_cmd);
			}
		}
		_match_end_1accd2e11:;
	}
}



inline void _1d77ad4a5_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _11512_args[2LL]);
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.10", 25));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln(jule::Str("default compiler: ", 18) + _1d58122b9_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1d581260a_CPP_STD);
}



inline void _1d77bd262_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if ((_1289_args.len() > 3LL)) {
		_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _1289_args[3LL]);
		return;
	}
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1accd7ad6:;
			{
				({
					auto except = static__1d596d6bc_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1d77927ec_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1accd62ee:;
			{
				_1d77927ec_print_error_message(jule::Str("invalid command: ", 17) + _1289_args[2LL]);
			}
		}
		_match_end_1accd75db:;
	}
}



inline jule::Bool _1d778ec6c_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1accd9a0b:;
			{
				_1d77a9d31_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1accd9335:;
			{
				_1d77ab43c_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1accd939b:;
			{
				_1d77acc13_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1accd9ac7:;
			{
				_1d77ad4a5_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1accd9b3d:;
			{
				_1d77bd262_mod(_15121_args);
			}
		}
		else {
			_case_begin_1accd7993:;
			{
				return false;
			}
		}
		_match_end_1accd8db2:;
	}
	return true;
}



inline void _1d77a924d_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _1d67db704_args();
	if ((_18713_args.len() < 2LL)) {
		_1d77a924d_show_info();
		return;
	}
	if (_1d778ec6c_process_command(_18713_args)) {
		return;
	}
	_1aa59ab60_compile_command(_18713_args);
}



inline void _1d77a8978_enable_vtp(void) {
	jule::U32 _199_h_out = _1d664e28c_get_std_handle(static_cast<jule::U32>(4294967285LLU));
	if ((_199_h_out == jule::MAX_U64)) {
		return;
	}
	jule::I32 _2413_dw_mode = 0LL;
	if ((!(_1d6651b96_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;
	}
	_2413_dw_mode|=4LL;
	_1d6651ed7_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _1d779b097_init(void) {
	_1d77a8978_enable_vtp();
}



inline void _1aa567225_write_output(jule::Str _4917_path,jule::Str _4928_content) {
	jule::Str _509_dir = _1d682eacc_dir(_4917_path);
	({
		auto except = static__1d67839ba_of(_509_dir);
		if (!except.ok()) {
			({
				auto except = static__1d6748a29_create(_509_dir);
				if (!except.ok()) {
					_1a9e6820e_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = static__1d596d6bc_write(_4917_path,static_cast<jule::Slice<jule::U8>>(_4928_content),432LL);
		if (!except.ok()) {
			_1a9e6820e_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _1aa56ade9_clear_objects(void) {
	({
		auto except = static__1d6716ae6_remove(_1aa56c68c_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	static__1d6757b04_remove(_1aa56e8d1_OUT_DIR);
}



inline void _1aa57d912_compile_ir(jule::Str _7715_compiler,jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1d781ae19_Cmd> _7813_cmd = static__1d781b348_new(_7715_compiler);
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_1d749ecac_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I32 _819_status = ({
		auto except = _1d78207ae_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::I32>(12LL)) {
					_case_begin_1acce5132:;
					{
						static__1a9e663d8_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::I32>(3LL)) {
					_case_begin_1acce5198:;
					{
						static__1a9e663d8_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::I32>(9LL)) {
					_case_begin_1acce520e:;
					{
						static__1a9e663d8_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::I32>(0LL)) {
					_case_begin_1acce5275:;
					{
						static__1a9e663d8_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1acce4d79:;
					{
						static__1a9e663d8_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1acce4e12:;
			}
			_1a9e6820e_throw(jule::Str());
			0LL;
		});
	});
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1d58122b9_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));
		static__1a9e663d8_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1a9e6820e_throw(jule::Str());
	}
	_1aa56ade9_clear_objects();
}



inline void _1aa564299_do_spell(jule::Str _11013_obj,jule::Str _11023_compiler,jule::Str _11038_compiler_cmd) {
	jule::Str _1119_path = _1aa56c68c_get_compile_path();
	_1aa567225_write_output(_1119_path,_11013_obj);
	if ((!(_1d581294b_TRANSPILATION))) {
		_1aa57d912_compile_ir(_11023_compiler,_11038_compiler_cmd);
	}
}



inline jule::Bool _1aa5688b9_is_cpp_source_file(jule::Str _11823_path) {
	jule::I32 _1199_offset = _1d749e570_find_last_byte(_11823_path,'.');
	if ((_1199_offset == -1LL)) {
		return false;
	}
	return _1d77be285_is_valid_cpp_ext(_11823_path.slice(_1199_offset));
}



inline void _1aa575c6c_push_comp_cmd_clang(jule::Str& _12629_cmd) {
	_12629_cmd+=jule::Str("-Wno-everything ", 16);
	_12629_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d581260a_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1acceb9da:;
			{
				_12629_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1accec07e:;
			{
				_12629_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1accec0e5:;
			{
				_12629_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1accebe3b:;
	}
	_12629_cmd+=jule::Str(" ", 1);
	if (_1d580edbb_PRODUCTION) {
		_12629_cmd+=jule::Str("-O3 ", 4);
		_12629_cmd+=jule::Str("-flto ", 6);
		_12629_cmd+=jule::Str("-DNDEBUG ", 9);
		_12629_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12629_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _1aa563ed0_push_comp_cmd_gcc(jule::Str& _15227_cmd) {
	_15227_cmd+=jule::Str("-w ", 3);
	_15227_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1d581260a_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1accec15b:;
			{
				_15227_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1accee57b:;
			{
				_15227_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1accee5e2:;
			{
				_15227_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1accee45a:;
	}
	_15227_cmd+=jule::Str(" ", 1);
	if (_1d580edbb_PRODUCTION) {
		_15227_cmd+=jule::Str("-O3 ", 4);
		_15227_cmd+=jule::Str("-DNDEBUG ", 9);
		_15227_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_15227_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _1aa564d49_gen_compile_cmd(jule::Str _17820_source_path,jule::Ptr<_1bce27b17_IR>& _17839_ir) {
	jule::Str &_17910_compiler = _1d5812484_COMPILER_PATH;
	jule::Str _18013_cmd = jule::Str();
	{
		auto &_match_expr{ _1d58122b9_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acd01902:;
			{
				_1aa563ed0_push_comp_cmd_gcc(_18013_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acd01cdc:;
			{
				_1aa575c6c_push_comp_cmd_clang(_18013_cmd);
			}
		}
		_match_end_1acd01c10:;
	}
	{
		auto &expr = _17839_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1acd0298b:;
		if (it != expr.end()) {
			jule::Str &_1acd020b7_pass = *it;
			{
				_18013_cmd+=_1acd020b7_pass;
				_18013_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1acd0298b:;
			++it;
			goto _iter_begin_1acd0298b;
		}
		_iter_end_1acd0298b:;
	}
	{
		auto &expr = _17839_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1acd0363a:;
		if (it != expr.end()) {
			jule::Ptr<_1a9d02351_ImportInfo> &_1acd02e64_u = *it;
			{
				if (_1acd02e64_u.get()._field_cpp_linked && _1aa5688b9_is_cpp_source_file(_1acd02e64_u.get()._field_path)) {
					_18013_cmd+=_1acd02e64_u.get()._field_path;
					_18013_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_1acd0363a:;
			++it;
			goto _iter_begin_1acd0363a;
		}
		_iter_end_1acd0363a:;
	}
	if ((!(_1aa57eccb_OUT.empty()))) {
		_18013_cmd+=jule::Str("-o ", 3);
		_18013_cmd+=_1aa57eccb_OUT;
		_18013_cmd+=jule::Str(" ", 1);
	}
	_18013_cmd+=_17820_source_path;
	return std::make_tuple(_17910_compiler,_18013_cmd);
}



inline jule::Str _1aa56c68c_get_compile_path(void) {
	return _1d685188a_join(jule::Slice<jule::Str>({_1aa56e8d1_OUT_DIR,_1aa57495d_OUT_NAME}));
}



inline void _1aa599c19_apply_target_independent_optimizations(jule::Ptr<_1bce27b17_IR>& _22348_ir) {
	if (_1d581131d_OPT_DEADCODE) {
		_1a9e456a3_eliminate_defines(_22348_ir);
	}
	jule::Ptr<_1aa4c9b9e_Optimizer> _23013_opt = static__1aa4ca0bc_new(_22348_ir);
	_1aa4cb50d_optimize(_23013_opt.ptr());
	if (_1d581131d_OPT_DEADCODE) {
		_1a9e4662c_eliminate_scopes(_22348_ir);
	}
}



inline void _1aa599d4b_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1d58122b9_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1acd06bc1:;
			{
				_1a9e6820e_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1acd06462:;
			{
				if (_1d5812484_COMPILER_PATH.empty()) {
					_1d5812484_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1acd064c8:;
			{
				if (_1d5812484_COMPILER_PATH.empty()) {
					_1d5812484_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_1acd06396:;
			{
				_1a9e6820e_throw(jule::Str("invalid option value for --compiler: ", 37) + _1d58122b9_COMPILER);
			}
		}
		_match_end_1acd0671a:;
	}
}



inline void _1aa599e7d_check_target_arch(jule::Str _25622_arch) {
	{
		auto &expr = _1d77cd739_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1acd07e03:;
		if (it != expr.end()) {
			jule::Str &_1acd0740d_distarch = *it;
			{
				if (_25622_arch == _1acd0740d_distarch) {
					return;
				}
			}
			_iter_next_1acd07e03:;
			++it;
			goto _iter_begin_1acd07e03;
		}
		_iter_end_1acd07e03:;
	}
	_1a9e6820e_throw(jule::Str("--target: unsupported/undefined architecture: ", 46) + _25622_arch);
}



inline void _1aa59a0b0_check_target_os(jule::Str _26520_os) {
	{
		auto &expr = _1d77cd53b_DISTOS;
		auto it = expr.begin();
		_iter_begin_1acd0993d:;
		if (it != expr.end()) {
			jule::Str &_1acd099b5_distos = *it;
			{
				if (_26520_os == _1acd099b5_distos) {
					return;
				}
			}
			_iter_next_1acd0993d:;
			++it;
			goto _iter_begin_1acd0993d;
		}
		_iter_end_1acd0993d:;
	}
	_1a9e6820e_throw(jule::Str("--target: unsupported/undefined operating system: ", 50) + _26520_os);
}



inline void _1aa59a1e2_check_target_flag(jule::Str& _27423_target) {
	if (_27423_target.empty()) {
		_1a9e6820e_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2799_parts = _1d749ecac_split(_27423_target,jule::Str("-", 1),-1LL);
	if ((_2799_parts.len() != 2LL)) {
		_1a9e6820e_throw(jule::Str("--target: undefined platform target format: ", 44) + _27423_target);
	}
	jule::Str _28410_os = _2799_parts[0LL];
	jule::Str _28414_arch = _2799_parts[1LL];
	std::tie(_28410_os,_28414_arch) = std::make_tuple(_2799_parts[0LL],_2799_parts[1LL]);
	if ((_28410_os != jule::Str("native", 6))) {
		_1aa59a0b0_check_target_os(_28410_os);
		_1d77ed506_OS=_28410_os;
	}
	if ((_28414_arch != jule::Str("native", 6))) {
		_1aa599e7d_check_target_arch(_28414_arch);
		_1d77ee392_ARCH=_28414_arch;
	}
	_1a9cd1bc1_update_target();
}



inline void _1aa59a555_check_opt_flag(jule::Str& _29720_opt) {
	if (_29720_opt.empty()) {
		_1a9e6820e_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _29720_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1acd0ed94:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1acd0eb30:;
			{
				_1d5811d9b_push_opt_level(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1acd0e3d2:;
			{
				_1a9e6820e_throw(jule::Str("--opt: invalid optimization level: ", 35) + _29720_opt);
			}
		}
		_match_end_1acd0eaca:;
	}
}



inline void _1aa59a687_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1d581260a_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1acd1112b:;
			{
				goto _match_end_1acd105ae;
			}
		}
		else {
			_case_begin_1acd10614:;
			{
				_1a9e6820e_throw(jule::Str("--cppstd: invalid optimization level: ", 38) + _1d581260a_CPP_STD);
			}
		}
		_match_end_1acd105ae:;
	}
}



inline jule::Slice<jule::Str> _1aa59a7b9_check_flags(jule::Slice<jule::Str>& _32217_args) {
	jule::Str _32313_opt = jule::Str("L0", 2);
	jule::Str _32413_target = jule::Str("native-native", 13);
	jule::Ptr<_1aa595e02_FlagSet> _32613_fs = static__1aa5961dd_new();
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_32313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_32413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1aa57eccb_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d58127c5_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d581294b_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d58122b9_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d5812484_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d580edbb_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d5812c48_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d5812e57_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1aa5980be_add_var_0(_32613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d581260a_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d5811230_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d581131d_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d581140b_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d581154e_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d58116c5_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d581184b_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d5811a5a_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1aa5980be_add_var_1(_32613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d5811bd1_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _34813_content = ({
		auto except = _1aa597035_parse(_32613_fs.ptr(), _32217_args);
		(except.ok()) ? (except.result) : ({
			_1a9e6820e_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_1aa599d4b_check_compiler_flag();
	_1aa59a687_check_cpp_std_flag();
	_1aa59a1e2_check_target_flag(_32413_target);
	_1aa59a555_check_opt_flag(_32313_opt);
	return _34813_content;
}



inline void _1aa59a8eb_setup_sema_flags(jule::I32& _36126_flags) {
	if (_1d58127c5_SHADOWING) {
		_36126_flags|=static_cast<jule::I32>(1LL);
	}
}



inline jule::Ptr<_1bce27b17_IR> _1aa59aa2d_build_ir(jule::Slice<jule::Str>& _36714_args) {
	jule::Slice<jule::Str> _3689_content = _1aa59a7b9_check_flags(_36714_args);
	jule::I32 _37013_sema_flags = static_cast<jule::I32>(0LL);
	_1aa59a8eb_setup_sema_flags(_37013_sema_flags);
	if ((_3689_content.len() == 0LL)) {
		_1a9e6820e_throw(_1d77ca8ce_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3689_content.len() > 1LL)) {
		_1a9e6820e_throw(jule::Str("undefined content: ", 19) + _3689_content[1LL]);
	}
	jule::Str _37814_path;
	jule::Bool _37820_ok;
	std::tie(_37814_path,_37820_ok) = _1d6853edb_abs(_3689_content[0LL]);
	if ((!(_37820_ok))) {
		_1a9e6820e_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_1d665bac4_Status> _3849_inf = ({
		auto except = static__1d67839ba_of(_1d77ddb12_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a9e6820e_throw(_1d77ca8ce_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1d665bac4_Status>();});
	});
	if ((!(_1d5982acc_is_dir(_3849_inf.ptr())))) {
		_1a9e6820e_throw(_1d77ca8ce_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	jule::Ptr<_1bce27b17_IR> _39214_ir;
	jule::Slice<_1d77ca48e_Log> _39218_logs;
	std::tie(_39214_ir,_39218_logs) = static__1bd03aea0_build(_37814_path,_37013_sema_flags);
	if ((_39214_ir == nullptr) && (_39218_logs == nullptr)) {
		_1a9e6820e_throw(_1d77ca8ce_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_37814_path)})));
	}
	if ((_39218_logs != nullptr)) {
		static__1a9e6794a_print_logs(_39218_logs);
		_1a9e6820e_throw(jule::Str());
	}
	return _39214_ir;
}



inline void _1aa59ab60_compile_command(jule::Slice<jule::Str>& _40725_args) {
	_40725_args=_40725_args.slice(1LL);
	if ((_40725_args[0LL] == jule::Str("test", 4))) {
		_1d5812ac2_TEST=true;
		_40725_args=_40725_args.slice(1LL);
	}
	jule::Ptr<_1bce27b17_IR> _41313_ir = _1aa59aa2d_build_ir(_40725_args);
	
	if ((!(_1d5812ac2_TEST))) {
		jule::Ptr<_1a8d94db7_Fn> _41817_f = _1a9d067a6_find_fn(_41313_ir.get()._field_main.ptr(), jule::Str("main", 4),false);
		if ((_41817_f == nullptr)) {
			_1a9e6820e_throw(_1d77ca8ce_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		_41817_f.get()._field_statically=true;
	}
	jule::Ptr<_1a8d94db7_Fn> _42413_f = _1a9d067a6_find_fn(_41313_ir.get()._field_main.ptr(), jule::Str("init", 4),false);
	if ((_42413_f != nullptr)) {
		_42413_f.get()._field_statically=true;
	}
	_1aa599c19_apply_target_independent_optimizations(_41313_ir);
	_1a8d2bee7_order(_41313_ir.ptr());
	jule::Str _43410_compiler;
	jule::Str _43420_compiler_cmd;
	std::tie(_43410_compiler,_43420_compiler_cmd) = _1aa564d49_gen_compile_cmd(_1aa56c68c_get_compile_path(),_41313_ir);
	jule::Ptr<_1aa51504c_ObjectCoder> _43613_oc = static__1aa53614a_new(_41313_ir,_1aa52150e_SerializationInfo(_43410_compiler,_43420_compiler_cmd));
	jule::Str _44013_obj = _1aa55817d_serialize(_43613_oc.ptr());
	if (_1d5812ac2_TEST) {
		jule::Ptr<_1aa3470d2_TestCoder> _44317_tc = static__1aa347555_new(_43613_oc);
		_1aa37a80d_serialize(_44317_tc.ptr(), _44013_obj);
	}
	_1aa557e19_append_standard(_43613_oc.ptr(), _44013_obj);
	_1aa564299_do_spell(_44013_obj,_43410_compiler,_43420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1d580edbb_PRODUCTION = false;
	_1d5811230_OPT_COPY = false;
	_1d581131d_OPT_DEADCODE = false;
	_1d581140b_OPT_APPEND = false;
	_1d581154e_OPT_MATH = false;
	_1d58116c5_OPT_ACCESS = false;
	_1d581184b_OPT_INLINE = false;
	_1d5811a5a_OPT_PTR = false;
	_1d5811bd1_OPT_COND = false;
	_1d58122b9_COMPILER = jule::Str();
	_1d5812484_COMPILER_PATH = jule::Str();
	_1d581260a_CPP_STD = jule::Str("cpp17", 5);
	_1d58127c5_SHADOWING = false;
	_1d581294b_TRANSPILATION = false;
	_1d5812ac2_TEST = false;
	_1d5812c48_RC = true;
	_1d5812e57_SAFETY = true;
	_1d59e0ca0_STDIN = _1d664e28c_get_std_handle(static_cast<jule::U32>(4294967286LLU));
	_1d59e1da0_STDOUT = _1d664e28c_get_std_handle(static_cast<jule::U32>(4294967285LLU));
	_1d59e290b_STDERR = _1d664e28c_get_std_handle(static_cast<jule::U32>(4294967284LLU));
	_1d6732837_FIRST = jule::Array<jule::U8,256>({});
	_1d673312e_ACCEPT_RANGES = jule::Array<_1d6732da9_accept_range,16>({_1d6732da9_accept_range(128LLU,191LLU),_1d6732da9_accept_range(160LLU,191LLU),_1d6732da9_accept_range(128LLU,159LLU),_1d6732da9_accept_range(144LLU,191LLU),_1d6732da9_accept_range(128LLU,143LLU)});
	_1d7732c21__L = jule::new_ptr<_1d7769b04_RangeTable>(_1d7769b04_RangeTable(jule::Slice<_1d77691b9_Range16>({_1d77691b9_Range16(65LLU,90LLU,1LLU),_1d77691b9_Range16(97LLU,122LLU,1LLU),_1d77691b9_Range16(170LLU,181LLU,11LLU),_1d77691b9_Range16(186LLU,192LLU,6LLU),_1d77691b9_Range16(193LLU,214LLU,1LLU),_1d77691b9_Range16(216LLU,246LLU,1LLU),_1d77691b9_Range16(248LLU,705LLU,1LLU),_1d77691b9_Range16(710LLU,721LLU,1LLU),_1d77691b9_Range16(736LLU,740LLU,1LLU),_1d77691b9_Range16(748LLU,750LLU,2LLU),_1d77691b9_Range16(880LLU,884LLU,1LLU),_1d77691b9_Range16(886LLU,887LLU,1LLU),_1d77691b9_Range16(890LLU,893LLU,1LLU),_1d77691b9_Range16(895LLU,902LLU,7LLU),_1d77691b9_Range16(904LLU,906LLU,1LLU),_1d77691b9_Range16(908LLU,910LLU,2LLU),_1d77691b9_Range16(911LLU,929LLU,1LLU),_1d77691b9_Range16(931LLU,1013LLU,1LLU),_1d77691b9_Range16(1015LLU,1153LLU,1LLU),_1d77691b9_Range16(1162LLU,1327LLU,1LLU),_1d77691b9_Range16(1329LLU,1366LLU,1LLU),_1d77691b9_Range16(1369LLU,1376LLU,7LLU),_1d77691b9_Range16(1377LLU,1416LLU,1LLU),_1d77691b9_Range16(1488LLU,1514LLU,1LLU),_1d77691b9_Range16(1519LLU,1522LLU,1LLU),_1d77691b9_Range16(1568LLU,1610LLU,1LLU),_1d77691b9_Range16(1646LLU,1647LLU,1LLU),_1d77691b9_Range16(1649LLU,1747LLU,1LLU),_1d77691b9_Range16(1749LLU,1765LLU,16LLU),_1d77691b9_Range16(1766LLU,1774LLU,8LLU),_1d77691b9_Range16(1775LLU,1786LLU,11LLU),_1d77691b9_Range16(1787LLU,1788LLU,1LLU),_1d77691b9_Range16(1791LLU,1808LLU,17LLU),_1d77691b9_Range16(1810LLU,1839LLU,1LLU),_1d77691b9_Range16(1869LLU,1957LLU,1LLU),_1d77691b9_Range16(1969LLU,1994LLU,25LLU),_1d77691b9_Range16(1995LLU,2026LLU,1LLU),_1d77691b9_Range16(2036LLU,2037LLU,1LLU),_1d77691b9_Range16(2042LLU,2048LLU,6LLU),_1d77691b9_Range16(2049LLU,2069LLU,1LLU),_1d77691b9_Range16(2074LLU,2084LLU,10LLU),_1d77691b9_Range16(2088LLU,2112LLU,24LLU),_1d77691b9_Range16(2113LLU,2136LLU,1LLU),_1d77691b9_Range16(2144LLU,2154LLU,1LLU),_1d77691b9_Range16(2160LLU,2183LLU,1LLU),_1d77691b9_Range16(2185LLU,2190LLU,1LLU),_1d77691b9_Range16(2208LLU,2249LLU,1LLU),_1d77691b9_Range16(2308LLU,2361LLU,1LLU),_1d77691b9_Range16(2365LLU,2384LLU,19LLU),_1d77691b9_Range16(2392LLU,2401LLU,1LLU),_1d77691b9_Range16(2417LLU,2432LLU,1LLU),_1d77691b9_Range16(2437LLU,2444LLU,1LLU),_1d77691b9_Range16(2447LLU,2448LLU,1LLU),_1d77691b9_Range16(2451LLU,2472LLU,1LLU),_1d77691b9_Range16(2474LLU,2480LLU,1LLU),_1d77691b9_Range16(2482LLU,2486LLU,4LLU),_1d77691b9_Range16(2487LLU,2489LLU,1LLU),_1d77691b9_Range16(2493LLU,2510LLU,17LLU),_1d77691b9_Range16(2524LLU,2525LLU,1LLU),_1d77691b9_Range16(2527LLU,2529LLU,1LLU),_1d77691b9_Range16(2544LLU,2545LLU,1LLU),_1d77691b9_Range16(2556LLU,2565LLU,9LLU),_1d77691b9_Range16(2566LLU,2570LLU,1LLU),_1d77691b9_Range16(2575LLU,2576LLU,1LLU),_1d77691b9_Range16(2579LLU,2600LLU,1LLU),_1d77691b9_Range16(2602LLU,2608LLU,1LLU),_1d77691b9_Range16(2610LLU,2611LLU,1LLU),_1d77691b9_Range16(2613LLU,2614LLU,1LLU),_1d77691b9_Range16(2616LLU,2617LLU,1LLU),_1d77691b9_Range16(2649LLU,2652LLU,1LLU),_1d77691b9_Range16(2654LLU,2674LLU,20LLU),_1d77691b9_Range16(2675LLU,2676LLU,1LLU),_1d77691b9_Range16(2693LLU,2701LLU,1LLU),_1d77691b9_Range16(2703LLU,2705LLU,1LLU),_1d77691b9_Range16(2707LLU,2728LLU,1LLU),_1d77691b9_Range16(2730LLU,2736LLU,1LLU),_1d77691b9_Range16(2738LLU,2739LLU,1LLU),_1d77691b9_Range16(2741LLU,2745LLU,1LLU),_1d77691b9_Range16(2749LLU,2768LLU,19LLU),_1d77691b9_Range16(2784LLU,2785LLU,1LLU),_1d77691b9_Range16(2809LLU,2821LLU,12LLU),_1d77691b9_Range16(2822LLU,2828LLU,1LLU),_1d77691b9_Range16(2831LLU,2832LLU,1LLU),_1d77691b9_Range16(2835LLU,2856LLU,1LLU),_1d77691b9_Range16(2858LLU,2864LLU,1LLU),_1d77691b9_Range16(2866LLU,2867LLU,1LLU),_1d77691b9_Range16(2869LLU,2873LLU,1LLU),_1d77691b9_Range16(2877LLU,2908LLU,31LLU),_1d77691b9_Range16(2909LLU,2911LLU,2LLU),_1d77691b9_Range16(2912LLU,2913LLU,1LLU),_1d77691b9_Range16(2929LLU,2947LLU,18LLU),_1d77691b9_Range16(2949LLU,2954LLU,1LLU),_1d77691b9_Range16(2958LLU,2960LLU,1LLU),_1d77691b9_Range16(2962LLU,2965LLU,1LLU),_1d77691b9_Range16(2969LLU,2970LLU,1LLU),_1d77691b9_Range16(2972LLU,2974LLU,2LLU),_1d77691b9_Range16(2975LLU,2979LLU,4LLU),_1d77691b9_Range16(2980LLU,2984LLU,4LLU),_1d77691b9_Range16(2985LLU,2986LLU,1LLU),_1d77691b9_Range16(2990LLU,3001LLU,1LLU),_1d77691b9_Range16(3024LLU,3077LLU,53LLU),_1d77691b9_Range16(3078LLU,3084LLU,1LLU),_1d77691b9_Range16(3086LLU,3088LLU,1LLU),_1d77691b9_Range16(3090LLU,3112LLU,1LLU),_1d77691b9_Range16(3114LLU,3129LLU,1LLU),_1d77691b9_Range16(3133LLU,3160LLU,27LLU),_1d77691b9_Range16(3161LLU,3162LLU,1LLU),_1d77691b9_Range16(3165LLU,3168LLU,3LLU),_1d77691b9_Range16(3169LLU,3200LLU,31LLU),_1d77691b9_Range16(3205LLU,3212LLU,1LLU),_1d77691b9_Range16(3214LLU,3216LLU,1LLU),_1d77691b9_Range16(3218LLU,3240LLU,1LLU),_1d77691b9_Range16(3242LLU,3251LLU,1LLU),_1d77691b9_Range16(3253LLU,3257LLU,1LLU),_1d77691b9_Range16(3261LLU,3293LLU,32LLU),_1d77691b9_Range16(3294LLU,3296LLU,2LLU),_1d77691b9_Range16(3297LLU,3313LLU,16LLU),_1d77691b9_Range16(3314LLU,3332LLU,18LLU),_1d77691b9_Range16(3333LLU,3340LLU,1LLU),_1d77691b9_Range16(3342LLU,3344LLU,1LLU),_1d77691b9_Range16(3346LLU,3386LLU,1LLU),_1d77691b9_Range16(3389LLU,3406LLU,17LLU),_1d77691b9_Range16(3412LLU,3414LLU,1LLU),_1d77691b9_Range16(3423LLU,3425LLU,1LLU),_1d77691b9_Range16(3450LLU,3455LLU,1LLU),_1d77691b9_Range16(3461LLU,3478LLU,1LLU),_1d77691b9_Range16(3482LLU,3505LLU,1LLU),_1d77691b9_Range16(3507LLU,3515LLU,1LLU),_1d77691b9_Range16(3517LLU,3520LLU,3LLU),_1d77691b9_Range16(3521LLU,3526LLU,1LLU),_1d77691b9_Range16(3585LLU,3632LLU,1LLU),_1d77691b9_Range16(3634LLU,3635LLU,1LLU),_1d77691b9_Range16(3648LLU,3654LLU,1LLU),_1d77691b9_Range16(3713LLU,3714LLU,1LLU),_1d77691b9_Range16(3716LLU,3718LLU,2LLU),_1d77691b9_Range16(3719LLU,3722LLU,1LLU),_1d77691b9_Range16(3724LLU,3747LLU,1LLU),_1d77691b9_Range16(3749LLU,3751LLU,2LLU),_1d77691b9_Range16(3752LLU,3760LLU,1LLU),_1d77691b9_Range16(3762LLU,3763LLU,1LLU),_1d77691b9_Range16(3773LLU,3776LLU,3LLU),_1d77691b9_Range16(3777LLU,3780LLU,1LLU),_1d77691b9_Range16(3782LLU,3804LLU,22LLU),_1d77691b9_Range16(3805LLU,3807LLU,1LLU),_1d77691b9_Range16(3840LLU,3904LLU,64LLU),_1d77691b9_Range16(3905LLU,3911LLU,1LLU),_1d77691b9_Range16(3913LLU,3948LLU,1LLU),_1d77691b9_Range16(3976LLU,3980LLU,1LLU),_1d77691b9_Range16(4096LLU,4138LLU,1LLU),_1d77691b9_Range16(4159LLU,4176LLU,17LLU),_1d77691b9_Range16(4177LLU,4181LLU,1LLU),_1d77691b9_Range16(4186LLU,4189LLU,1LLU),_1d77691b9_Range16(4193LLU,4197LLU,4LLU),_1d77691b9_Range16(4198LLU,4206LLU,8LLU),_1d77691b9_Range16(4207LLU,4208LLU,1LLU),_1d77691b9_Range16(4213LLU,4225LLU,1LLU),_1d77691b9_Range16(4238LLU,4256LLU,18LLU),_1d77691b9_Range16(4257LLU,4293LLU,1LLU),_1d77691b9_Range16(4295LLU,4301LLU,6LLU),_1d77691b9_Range16(4304LLU,4346LLU,1LLU),_1d77691b9_Range16(4348LLU,4680LLU,1LLU),_1d77691b9_Range16(4682LLU,4685LLU,1LLU),_1d77691b9_Range16(4688LLU,4694LLU,1LLU),_1d77691b9_Range16(4696LLU,4698LLU,2LLU),_1d77691b9_Range16(4699LLU,4701LLU,1LLU),_1d77691b9_Range16(4704LLU,4744LLU,1LLU),_1d77691b9_Range16(4746LLU,4749LLU,1LLU),_1d77691b9_Range16(4752LLU,4784LLU,1LLU),_1d77691b9_Range16(4786LLU,4789LLU,1LLU),_1d77691b9_Range16(4792LLU,4798LLU,1LLU),_1d77691b9_Range16(4800LLU,4802LLU,2LLU),_1d77691b9_Range16(4803LLU,4805LLU,1LLU),_1d77691b9_Range16(4808LLU,4822LLU,1LLU),_1d77691b9_Range16(4824LLU,4880LLU,1LLU),_1d77691b9_Range16(4882LLU,4885LLU,1LLU),_1d77691b9_Range16(4888LLU,4954LLU,1LLU),_1d77691b9_Range16(4992LLU,5007LLU,1LLU),_1d77691b9_Range16(5024LLU,5109LLU,1LLU),_1d77691b9_Range16(5112LLU,5117LLU,1LLU),_1d77691b9_Range16(5121LLU,5740LLU,1LLU),_1d77691b9_Range16(5743LLU,5759LLU,1LLU),_1d77691b9_Range16(5761LLU,5786LLU,1LLU),_1d77691b9_Range16(5792LLU,5866LLU,1LLU),_1d77691b9_Range16(5873LLU,5880LLU,1LLU),_1d77691b9_Range16(5888LLU,5905LLU,1LLU),_1d77691b9_Range16(5919LLU,5937LLU,1LLU),_1d77691b9_Range16(5952LLU,5969LLU,1LLU),_1d77691b9_Range16(5984LLU,5996LLU,1LLU),_1d77691b9_Range16(5998LLU,6000LLU,1LLU),_1d77691b9_Range16(6016LLU,6067LLU,1LLU),_1d77691b9_Range16(6103LLU,6108LLU,5LLU),_1d77691b9_Range16(6176LLU,6264LLU,1LLU),_1d77691b9_Range16(6272LLU,6276LLU,1LLU),_1d77691b9_Range16(6279LLU,6312LLU,1LLU),_1d77691b9_Range16(6314LLU,6320LLU,6LLU),_1d77691b9_Range16(6321LLU,6389LLU,1LLU),_1d77691b9_Range16(6400LLU,6430LLU,1LLU),_1d77691b9_Range16(6480LLU,6509LLU,1LLU),_1d77691b9_Range16(6512LLU,6516LLU,1LLU),_1d77691b9_Range16(6528LLU,6571LLU,1LLU),_1d77691b9_Range16(6576LLU,6601LLU,1LLU),_1d77691b9_Range16(6656LLU,6678LLU,1LLU),_1d77691b9_Range16(6688LLU,6740LLU,1LLU),_1d77691b9_Range16(6823LLU,6917LLU,94LLU),_1d77691b9_Range16(6918LLU,6963LLU,1LLU),_1d77691b9_Range16(6981LLU,6988LLU,1LLU),_1d77691b9_Range16(7043LLU,7072LLU,1LLU),_1d77691b9_Range16(7086LLU,7087LLU,1LLU),_1d77691b9_Range16(7098LLU,7141LLU,1LLU),_1d77691b9_Range16(7168LLU,7203LLU,1LLU),_1d77691b9_Range16(7245LLU,7247LLU,1LLU),_1d77691b9_Range16(7258LLU,7293LLU,1LLU),_1d77691b9_Range16(7296LLU,7304LLU,1LLU),_1d77691b9_Range16(7312LLU,7354LLU,1LLU),_1d77691b9_Range16(7357LLU,7359LLU,1LLU),_1d77691b9_Range16(7401LLU,7404LLU,1LLU),_1d77691b9_Range16(7406LLU,7411LLU,1LLU),_1d77691b9_Range16(7413LLU,7414LLU,1LLU),_1d77691b9_Range16(7418LLU,7424LLU,6LLU),_1d77691b9_Range16(7425LLU,7615LLU,1LLU),_1d77691b9_Range16(7680LLU,7957LLU,1LLU),_1d77691b9_Range16(7960LLU,7965LLU,1LLU),_1d77691b9_Range16(7968LLU,8005LLU,1LLU),_1d77691b9_Range16(8008LLU,8013LLU,1LLU),_1d77691b9_Range16(8016LLU,8023LLU,1LLU),_1d77691b9_Range16(8025LLU,8031LLU,2LLU),_1d77691b9_Range16(8032LLU,8061LLU,1LLU),_1d77691b9_Range16(8064LLU,8116LLU,1LLU),_1d77691b9_Range16(8118LLU,8124LLU,1LLU),_1d77691b9_Range16(8126LLU,8130LLU,4LLU),_1d77691b9_Range16(8131LLU,8132LLU,1LLU),_1d77691b9_Range16(8134LLU,8140LLU,1LLU),_1d77691b9_Range16(8144LLU,8147LLU,1LLU),_1d77691b9_Range16(8150LLU,8155LLU,1LLU),_1d77691b9_Range16(8160LLU,8172LLU,1LLU),_1d77691b9_Range16(8178LLU,8180LLU,1LLU),_1d77691b9_Range16(8182LLU,8188LLU,1LLU),_1d77691b9_Range16(8305LLU,8319LLU,14LLU),_1d77691b9_Range16(8336LLU,8348LLU,1LLU),_1d77691b9_Range16(8450LLU,8455LLU,5LLU),_1d77691b9_Range16(8458LLU,8467LLU,1LLU),_1d77691b9_Range16(8469LLU,8473LLU,4LLU),_1d77691b9_Range16(8474LLU,8477LLU,1LLU),_1d77691b9_Range16(8484LLU,8490LLU,2LLU),_1d77691b9_Range16(8491LLU,8493LLU,1LLU),_1d77691b9_Range16(8495LLU,8505LLU,1LLU),_1d77691b9_Range16(8508LLU,8511LLU,1LLU),_1d77691b9_Range16(8517LLU,8521LLU,1LLU),_1d77691b9_Range16(8526LLU,8579LLU,53LLU),_1d77691b9_Range16(8580LLU,11264LLU,2684LLU),_1d77691b9_Range16(11265LLU,11492LLU,1LLU),_1d77691b9_Range16(11499LLU,11502LLU,1LLU),_1d77691b9_Range16(11506LLU,11507LLU,1LLU),_1d77691b9_Range16(11520LLU,11557LLU,1LLU),_1d77691b9_Range16(11559LLU,11565LLU,6LLU),_1d77691b9_Range16(11568LLU,11623LLU,1LLU),_1d77691b9_Range16(11631LLU,11648LLU,17LLU),_1d77691b9_Range16(11649LLU,11670LLU,1LLU),_1d77691b9_Range16(11680LLU,11686LLU,1LLU),_1d77691b9_Range16(11688LLU,11694LLU,1LLU),_1d77691b9_Range16(11696LLU,11702LLU,1LLU),_1d77691b9_Range16(11704LLU,11710LLU,1LLU),_1d77691b9_Range16(11712LLU,11718LLU,1LLU),_1d77691b9_Range16(11720LLU,11726LLU,1LLU),_1d77691b9_Range16(11728LLU,11734LLU,1LLU),_1d77691b9_Range16(11736LLU,11742LLU,1LLU),_1d77691b9_Range16(11823LLU,12293LLU,470LLU),_1d77691b9_Range16(12294LLU,12337LLU,43LLU),_1d77691b9_Range16(12338LLU,12341LLU,1LLU),_1d77691b9_Range16(12347LLU,12348LLU,1LLU),_1d77691b9_Range16(12353LLU,12438LLU,1LLU),_1d77691b9_Range16(12445LLU,12447LLU,1LLU),_1d77691b9_Range16(12449LLU,12538LLU,1LLU),_1d77691b9_Range16(12540LLU,12543LLU,1LLU),_1d77691b9_Range16(12549LLU,12591LLU,1LLU),_1d77691b9_Range16(12593LLU,12686LLU,1LLU),_1d77691b9_Range16(12704LLU,12735LLU,1LLU),_1d77691b9_Range16(12784LLU,12799LLU,1LLU),_1d77691b9_Range16(13312LLU,19903LLU,1LLU),_1d77691b9_Range16(19968LLU,42124LLU,1LLU),_1d77691b9_Range16(42192LLU,42237LLU,1LLU),_1d77691b9_Range16(42240LLU,42508LLU,1LLU),_1d77691b9_Range16(42512LLU,42527LLU,1LLU),_1d77691b9_Range16(42538LLU,42539LLU,1LLU),_1d77691b9_Range16(42560LLU,42606LLU,1LLU),_1d77691b9_Range16(42623LLU,42653LLU,1LLU),_1d77691b9_Range16(42656LLU,42725LLU,1LLU),_1d77691b9_Range16(42775LLU,42783LLU,1LLU),_1d77691b9_Range16(42786LLU,42888LLU,1LLU),_1d77691b9_Range16(42891LLU,42954LLU,1LLU),_1d77691b9_Range16(42960LLU,42961LLU,1LLU),_1d77691b9_Range16(42963LLU,42965LLU,2LLU),_1d77691b9_Range16(42966LLU,42969LLU,1LLU),_1d77691b9_Range16(42994LLU,43009LLU,1LLU),_1d77691b9_Range16(43011LLU,43013LLU,1LLU),_1d77691b9_Range16(43015LLU,43018LLU,1LLU),_1d77691b9_Range16(43020LLU,43042LLU,1LLU),_1d77691b9_Range16(43072LLU,43123LLU,1LLU),_1d77691b9_Range16(43138LLU,43187LLU,1LLU),_1d77691b9_Range16(43250LLU,43255LLU,1LLU),_1d77691b9_Range16(43259LLU,43261LLU,2LLU),_1d77691b9_Range16(43262LLU,43274LLU,12LLU),_1d77691b9_Range16(43275LLU,43301LLU,1LLU),_1d77691b9_Range16(43312LLU,43334LLU,1LLU),_1d77691b9_Range16(43360LLU,43388LLU,1LLU),_1d77691b9_Range16(43396LLU,43442LLU,1LLU),_1d77691b9_Range16(43471LLU,43488LLU,17LLU),_1d77691b9_Range16(43489LLU,43492LLU,1LLU),_1d77691b9_Range16(43494LLU,43503LLU,1LLU),_1d77691b9_Range16(43514LLU,43518LLU,1LLU),_1d77691b9_Range16(43520LLU,43560LLU,1LLU),_1d77691b9_Range16(43584LLU,43586LLU,1LLU),_1d77691b9_Range16(43588LLU,43595LLU,1LLU),_1d77691b9_Range16(43616LLU,43638LLU,1LLU),_1d77691b9_Range16(43642LLU,43646LLU,4LLU),_1d77691b9_Range16(43647LLU,43695LLU,1LLU),_1d77691b9_Range16(43697LLU,43701LLU,4LLU),_1d77691b9_Range16(43702LLU,43705LLU,3LLU),_1d77691b9_Range16(43706LLU,43709LLU,1LLU),_1d77691b9_Range16(43712LLU,43714LLU,2LLU),_1d77691b9_Range16(43739LLU,43741LLU,1LLU),_1d77691b9_Range16(43744LLU,43754LLU,1LLU),_1d77691b9_Range16(43762LLU,43764LLU,1LLU),_1d77691b9_Range16(43777LLU,43782LLU,1LLU),_1d77691b9_Range16(43785LLU,43790LLU,1LLU),_1d77691b9_Range16(43793LLU,43798LLU,1LLU),_1d77691b9_Range16(43808LLU,43814LLU,1LLU),_1d77691b9_Range16(43816LLU,43822LLU,1LLU),_1d77691b9_Range16(43824LLU,43866LLU,1LLU),_1d77691b9_Range16(43868LLU,43881LLU,1LLU),_1d77691b9_Range16(43888LLU,44002LLU,1LLU),_1d77691b9_Range16(44032LLU,55203LLU,1LLU),_1d77691b9_Range16(55216LLU,55238LLU,1LLU),_1d77691b9_Range16(55243LLU,55291LLU,1LLU),_1d77691b9_Range16(63744LLU,64109LLU,1LLU),_1d77691b9_Range16(64112LLU,64217LLU,1LLU),_1d77691b9_Range16(64256LLU,64262LLU,1LLU),_1d77691b9_Range16(64275LLU,64279LLU,1LLU),_1d77691b9_Range16(64285LLU,64287LLU,2LLU),_1d77691b9_Range16(64288LLU,64296LLU,1LLU),_1d77691b9_Range16(64298LLU,64310LLU,1LLU),_1d77691b9_Range16(64312LLU,64316LLU,1LLU),_1d77691b9_Range16(64318LLU,64320LLU,2LLU),_1d77691b9_Range16(64321LLU,64323LLU,2LLU),_1d77691b9_Range16(64324LLU,64326LLU,2LLU),_1d77691b9_Range16(64327LLU,64433LLU,1LLU),_1d77691b9_Range16(64467LLU,64829LLU,1LLU),_1d77691b9_Range16(64848LLU,64911LLU,1LLU),_1d77691b9_Range16(64914LLU,64967LLU,1LLU),_1d77691b9_Range16(65008LLU,65019LLU,1LLU),_1d77691b9_Range16(65136LLU,65140LLU,1LLU),_1d77691b9_Range16(65142LLU,65276LLU,1LLU),_1d77691b9_Range16(65313LLU,65338LLU,1LLU),_1d77691b9_Range16(65345LLU,65370LLU,1LLU),_1d77691b9_Range16(65382LLU,65470LLU,1LLU),_1d77691b9_Range16(65474LLU,65479LLU,1LLU),_1d77691b9_Range16(65482LLU,65487LLU,1LLU),_1d77691b9_Range16(65490LLU,65495LLU,1LLU),_1d77691b9_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1d7769681_Range32>({_1d7769681_Range32(65536LLU,65547LLU,1LLU),_1d7769681_Range32(65549LLU,65574LLU,1LLU),_1d7769681_Range32(65576LLU,65594LLU,1LLU),_1d7769681_Range32(65596LLU,65597LLU,1LLU),_1d7769681_Range32(65599LLU,65613LLU,1LLU),_1d7769681_Range32(65616LLU,65629LLU,1LLU),_1d7769681_Range32(65664LLU,65786LLU,1LLU),_1d7769681_Range32(66176LLU,66204LLU,1LLU),_1d7769681_Range32(66208LLU,66256LLU,1LLU),_1d7769681_Range32(66304LLU,66335LLU,1LLU),_1d7769681_Range32(66349LLU,66368LLU,1LLU),_1d7769681_Range32(66370LLU,66377LLU,1LLU),_1d7769681_Range32(66384LLU,66421LLU,1LLU),_1d7769681_Range32(66432LLU,66461LLU,1LLU),_1d7769681_Range32(66464LLU,66499LLU,1LLU),_1d7769681_Range32(66504LLU,66511LLU,1LLU),_1d7769681_Range32(66560LLU,66717LLU,1LLU),_1d7769681_Range32(66736LLU,66771LLU,1LLU),_1d7769681_Range32(66776LLU,66811LLU,1LLU),_1d7769681_Range32(66816LLU,66855LLU,1LLU),_1d7769681_Range32(66864LLU,66915LLU,1LLU),_1d7769681_Range32(66928LLU,66938LLU,1LLU),_1d7769681_Range32(66940LLU,66954LLU,1LLU),_1d7769681_Range32(66956LLU,66962LLU,1LLU),_1d7769681_Range32(66964LLU,66965LLU,1LLU),_1d7769681_Range32(66967LLU,66977LLU,1LLU),_1d7769681_Range32(66979LLU,66993LLU,1LLU),_1d7769681_Range32(66995LLU,67001LLU,1LLU),_1d7769681_Range32(67003LLU,67004LLU,1LLU),_1d7769681_Range32(67072LLU,67382LLU,1LLU),_1d7769681_Range32(67392LLU,67413LLU,1LLU),_1d7769681_Range32(67424LLU,67431LLU,1LLU),_1d7769681_Range32(67456LLU,67461LLU,1LLU),_1d7769681_Range32(67463LLU,67504LLU,1LLU),_1d7769681_Range32(67506LLU,67514LLU,1LLU),_1d7769681_Range32(67584LLU,67589LLU,1LLU),_1d7769681_Range32(67592LLU,67594LLU,2LLU),_1d7769681_Range32(67595LLU,67637LLU,1LLU),_1d7769681_Range32(67639LLU,67640LLU,1LLU),_1d7769681_Range32(67644LLU,67647LLU,3LLU),_1d7769681_Range32(67648LLU,67669LLU,1LLU),_1d7769681_Range32(67680LLU,67702LLU,1LLU),_1d7769681_Range32(67712LLU,67742LLU,1LLU),_1d7769681_Range32(67808LLU,67826LLU,1LLU),_1d7769681_Range32(67828LLU,67829LLU,1LLU),_1d7769681_Range32(67840LLU,67861LLU,1LLU),_1d7769681_Range32(67872LLU,67897LLU,1LLU),_1d7769681_Range32(67968LLU,68023LLU,1LLU),_1d7769681_Range32(68030LLU,68031LLU,1LLU),_1d7769681_Range32(68096LLU,68112LLU,16LLU),_1d7769681_Range32(68113LLU,68115LLU,1LLU),_1d7769681_Range32(68117LLU,68119LLU,1LLU),_1d7769681_Range32(68121LLU,68149LLU,1LLU),_1d7769681_Range32(68192LLU,68220LLU,1LLU),_1d7769681_Range32(68224LLU,68252LLU,1LLU),_1d7769681_Range32(68288LLU,68295LLU,1LLU),_1d7769681_Range32(68297LLU,68324LLU,1LLU),_1d7769681_Range32(68352LLU,68405LLU,1LLU),_1d7769681_Range32(68416LLU,68437LLU,1LLU),_1d7769681_Range32(68448LLU,68466LLU,1LLU),_1d7769681_Range32(68480LLU,68497LLU,1LLU),_1d7769681_Range32(68608LLU,68680LLU,1LLU),_1d7769681_Range32(68736LLU,68786LLU,1LLU),_1d7769681_Range32(68800LLU,68850LLU,1LLU),_1d7769681_Range32(68864LLU,68899LLU,1LLU),_1d7769681_Range32(69248LLU,69289LLU,1LLU),_1d7769681_Range32(69296LLU,69297LLU,1LLU),_1d7769681_Range32(69376LLU,69404LLU,1LLU),_1d7769681_Range32(69415LLU,69424LLU,9LLU),_1d7769681_Range32(69425LLU,69445LLU,1LLU),_1d7769681_Range32(69488LLU,69505LLU,1LLU),_1d7769681_Range32(69552LLU,69572LLU,1LLU),_1d7769681_Range32(69600LLU,69622LLU,1LLU),_1d7769681_Range32(69635LLU,69687LLU,1LLU),_1d7769681_Range32(69745LLU,69746LLU,1LLU),_1d7769681_Range32(69749LLU,69763LLU,14LLU),_1d7769681_Range32(69764LLU,69807LLU,1LLU),_1d7769681_Range32(69840LLU,69864LLU,1LLU),_1d7769681_Range32(69891LLU,69926LLU,1LLU),_1d7769681_Range32(69956LLU,69959LLU,3LLU),_1d7769681_Range32(69968LLU,70002LLU,1LLU),_1d7769681_Range32(70006LLU,70019LLU,13LLU),_1d7769681_Range32(70020LLU,70066LLU,1LLU),_1d7769681_Range32(70081LLU,70084LLU,1LLU),_1d7769681_Range32(70106LLU,70108LLU,2LLU),_1d7769681_Range32(70144LLU,70161LLU,1LLU),_1d7769681_Range32(70163LLU,70187LLU,1LLU),_1d7769681_Range32(70207LLU,70208LLU,1LLU),_1d7769681_Range32(70272LLU,70278LLU,1LLU),_1d7769681_Range32(70280LLU,70282LLU,2LLU),_1d7769681_Range32(70283LLU,70285LLU,1LLU),_1d7769681_Range32(70287LLU,70301LLU,1LLU),_1d7769681_Range32(70303LLU,70312LLU,1LLU),_1d7769681_Range32(70320LLU,70366LLU,1LLU),_1d7769681_Range32(70405LLU,70412LLU,1LLU),_1d7769681_Range32(70415LLU,70416LLU,1LLU),_1d7769681_Range32(70419LLU,70440LLU,1LLU),_1d7769681_Range32(70442LLU,70448LLU,1LLU),_1d7769681_Range32(70450LLU,70451LLU,1LLU),_1d7769681_Range32(70453LLU,70457LLU,1LLU),_1d7769681_Range32(70461LLU,70480LLU,19LLU),_1d7769681_Range32(70493LLU,70497LLU,1LLU),_1d7769681_Range32(70656LLU,70708LLU,1LLU),_1d7769681_Range32(70727LLU,70730LLU,1LLU),_1d7769681_Range32(70751LLU,70753LLU,1LLU),_1d7769681_Range32(70784LLU,70831LLU,1LLU),_1d7769681_Range32(70852LLU,70853LLU,1LLU),_1d7769681_Range32(70855LLU,71040LLU,185LLU),_1d7769681_Range32(71041LLU,71086LLU,1LLU),_1d7769681_Range32(71128LLU,71131LLU,1LLU),_1d7769681_Range32(71168LLU,71215LLU,1LLU),_1d7769681_Range32(71236LLU,71296LLU,60LLU),_1d7769681_Range32(71297LLU,71338LLU,1LLU),_1d7769681_Range32(71352LLU,71424LLU,72LLU),_1d7769681_Range32(71425LLU,71450LLU,1LLU),_1d7769681_Range32(71488LLU,71494LLU,1LLU),_1d7769681_Range32(71680LLU,71723LLU,1LLU),_1d7769681_Range32(71840LLU,71903LLU,1LLU),_1d7769681_Range32(71935LLU,71942LLU,1LLU),_1d7769681_Range32(71945LLU,71948LLU,3LLU),_1d7769681_Range32(71949LLU,71955LLU,1LLU),_1d7769681_Range32(71957LLU,71958LLU,1LLU),_1d7769681_Range32(71960LLU,71983LLU,1LLU),_1d7769681_Range32(71999LLU,72001LLU,2LLU),_1d7769681_Range32(72096LLU,72103LLU,1LLU),_1d7769681_Range32(72106LLU,72144LLU,1LLU),_1d7769681_Range32(72161LLU,72163LLU,2LLU),_1d7769681_Range32(72192LLU,72203LLU,11LLU),_1d7769681_Range32(72204LLU,72242LLU,1LLU),_1d7769681_Range32(72250LLU,72272LLU,22LLU),_1d7769681_Range32(72284LLU,72329LLU,1LLU),_1d7769681_Range32(72349LLU,72368LLU,19LLU),_1d7769681_Range32(72369LLU,72440LLU,1LLU),_1d7769681_Range32(72704LLU,72712LLU,1LLU),_1d7769681_Range32(72714LLU,72750LLU,1LLU),_1d7769681_Range32(72768LLU,72818LLU,50LLU),_1d7769681_Range32(72819LLU,72847LLU,1LLU),_1d7769681_Range32(72960LLU,72966LLU,1LLU),_1d7769681_Range32(72968LLU,72969LLU,1LLU),_1d7769681_Range32(72971LLU,73008LLU,1LLU),_1d7769681_Range32(73030LLU,73056LLU,26LLU),_1d7769681_Range32(73057LLU,73061LLU,1LLU),_1d7769681_Range32(73063LLU,73064LLU,1LLU),_1d7769681_Range32(73066LLU,73097LLU,1LLU),_1d7769681_Range32(73112LLU,73440LLU,328LLU),_1d7769681_Range32(73441LLU,73458LLU,1LLU),_1d7769681_Range32(73474LLU,73476LLU,2LLU),_1d7769681_Range32(73477LLU,73488LLU,1LLU),_1d7769681_Range32(73490LLU,73523LLU,1LLU),_1d7769681_Range32(73648LLU,73728LLU,80LLU),_1d7769681_Range32(73729LLU,74649LLU,1LLU),_1d7769681_Range32(74880LLU,75075LLU,1LLU),_1d7769681_Range32(77712LLU,77808LLU,1LLU),_1d7769681_Range32(77824LLU,78895LLU,1LLU),_1d7769681_Range32(78913LLU,78918LLU,1LLU),_1d7769681_Range32(82944LLU,83526LLU,1LLU),_1d7769681_Range32(92160LLU,92728LLU,1LLU),_1d7769681_Range32(92736LLU,92766LLU,1LLU),_1d7769681_Range32(92784LLU,92862LLU,1LLU),_1d7769681_Range32(92880LLU,92909LLU,1LLU),_1d7769681_Range32(92928LLU,92975LLU,1LLU),_1d7769681_Range32(92992LLU,92995LLU,1LLU),_1d7769681_Range32(93027LLU,93047LLU,1LLU),_1d7769681_Range32(93053LLU,93071LLU,1LLU),_1d7769681_Range32(93760LLU,93823LLU,1LLU),_1d7769681_Range32(93952LLU,94026LLU,1LLU),_1d7769681_Range32(94032LLU,94099LLU,67LLU),_1d7769681_Range32(94100LLU,94111LLU,1LLU),_1d7769681_Range32(94176LLU,94177LLU,1LLU),_1d7769681_Range32(94179LLU,94208LLU,29LLU),_1d7769681_Range32(94209LLU,100343LLU,1LLU),_1d7769681_Range32(100352LLU,101589LLU,1LLU),_1d7769681_Range32(101632LLU,101640LLU,1LLU),_1d7769681_Range32(110576LLU,110579LLU,1LLU),_1d7769681_Range32(110581LLU,110587LLU,1LLU),_1d7769681_Range32(110589LLU,110590LLU,1LLU),_1d7769681_Range32(110592LLU,110882LLU,1LLU),_1d7769681_Range32(110898LLU,110928LLU,30LLU),_1d7769681_Range32(110929LLU,110930LLU,1LLU),_1d7769681_Range32(110933LLU,110948LLU,15LLU),_1d7769681_Range32(110949LLU,110951LLU,1LLU),_1d7769681_Range32(110960LLU,111355LLU,1LLU),_1d7769681_Range32(113664LLU,113770LLU,1LLU),_1d7769681_Range32(113776LLU,113788LLU,1LLU),_1d7769681_Range32(113792LLU,113800LLU,1LLU),_1d7769681_Range32(113808LLU,113817LLU,1LLU),_1d7769681_Range32(119808LLU,119892LLU,1LLU),_1d7769681_Range32(119894LLU,119964LLU,1LLU),_1d7769681_Range32(119966LLU,119967LLU,1LLU),_1d7769681_Range32(119970LLU,119973LLU,3LLU),_1d7769681_Range32(119974LLU,119977LLU,3LLU),_1d7769681_Range32(119978LLU,119980LLU,1LLU),_1d7769681_Range32(119982LLU,119993LLU,1LLU),_1d7769681_Range32(119995LLU,119997LLU,2LLU),_1d7769681_Range32(119998LLU,120003LLU,1LLU),_1d7769681_Range32(120005LLU,120069LLU,1LLU),_1d7769681_Range32(120071LLU,120074LLU,1LLU),_1d7769681_Range32(120077LLU,120084LLU,1LLU),_1d7769681_Range32(120086LLU,120092LLU,1LLU),_1d7769681_Range32(120094LLU,120121LLU,1LLU),_1d7769681_Range32(120123LLU,120126LLU,1LLU),_1d7769681_Range32(120128LLU,120132LLU,1LLU),_1d7769681_Range32(120134LLU,120138LLU,4LLU),_1d7769681_Range32(120139LLU,120144LLU,1LLU),_1d7769681_Range32(120146LLU,120485LLU,1LLU),_1d7769681_Range32(120488LLU,120512LLU,1LLU),_1d7769681_Range32(120514LLU,120538LLU,1LLU),_1d7769681_Range32(120540LLU,120570LLU,1LLU),_1d7769681_Range32(120572LLU,120596LLU,1LLU),_1d7769681_Range32(120598LLU,120628LLU,1LLU),_1d7769681_Range32(120630LLU,120654LLU,1LLU),_1d7769681_Range32(120656LLU,120686LLU,1LLU),_1d7769681_Range32(120688LLU,120712LLU,1LLU),_1d7769681_Range32(120714LLU,120744LLU,1LLU),_1d7769681_Range32(120746LLU,120770LLU,1LLU),_1d7769681_Range32(120772LLU,120779LLU,1LLU),_1d7769681_Range32(122624LLU,122654LLU,1LLU),_1d7769681_Range32(122661LLU,122666LLU,1LLU),_1d7769681_Range32(122928LLU,122989LLU,1LLU),_1d7769681_Range32(123136LLU,123180LLU,1LLU),_1d7769681_Range32(123191LLU,123197LLU,1LLU),_1d7769681_Range32(123214LLU,123536LLU,322LLU),_1d7769681_Range32(123537LLU,123565LLU,1LLU),_1d7769681_Range32(123584LLU,123627LLU,1LLU),_1d7769681_Range32(124112LLU,124139LLU,1LLU),_1d7769681_Range32(124896LLU,124902LLU,1LLU),_1d7769681_Range32(124904LLU,124907LLU,1LLU),_1d7769681_Range32(124909LLU,124910LLU,1LLU),_1d7769681_Range32(124912LLU,124926LLU,1LLU),_1d7769681_Range32(124928LLU,125124LLU,1LLU),_1d7769681_Range32(125184LLU,125251LLU,1LLU),_1d7769681_Range32(125259LLU,126464LLU,1205LLU),_1d7769681_Range32(126465LLU,126467LLU,1LLU),_1d7769681_Range32(126469LLU,126495LLU,1LLU),_1d7769681_Range32(126497LLU,126498LLU,1LLU),_1d7769681_Range32(126500LLU,126503LLU,3LLU),_1d7769681_Range32(126505LLU,126514LLU,1LLU),_1d7769681_Range32(126516LLU,126519LLU,1LLU),_1d7769681_Range32(126521LLU,126523LLU,2LLU),_1d7769681_Range32(126530LLU,126535LLU,5LLU),_1d7769681_Range32(126537LLU,126541LLU,2LLU),_1d7769681_Range32(126542LLU,126543LLU,1LLU),_1d7769681_Range32(126545LLU,126546LLU,1LLU),_1d7769681_Range32(126548LLU,126551LLU,3LLU),_1d7769681_Range32(126553LLU,126561LLU,2LLU),_1d7769681_Range32(126562LLU,126564LLU,2LLU),_1d7769681_Range32(126567LLU,126570LLU,1LLU),_1d7769681_Range32(126572LLU,126578LLU,1LLU),_1d7769681_Range32(126580LLU,126583LLU,1LLU),_1d7769681_Range32(126585LLU,126588LLU,1LLU),_1d7769681_Range32(126590LLU,126592LLU,2LLU),_1d7769681_Range32(126593LLU,126601LLU,1LLU),_1d7769681_Range32(126603LLU,126619LLU,1LLU),_1d7769681_Range32(126625LLU,126627LLU,1LLU),_1d7769681_Range32(126629LLU,126633LLU,1LLU),_1d7769681_Range32(126635LLU,126651LLU,1LLU),_1d7769681_Range32(131072LLU,173791LLU,1LLU),_1d7769681_Range32(173824LLU,177977LLU,1LLU),_1d7769681_Range32(177984LLU,178205LLU,1LLU),_1d7769681_Range32(178208LLU,183969LLU,1LLU),_1d7769681_Range32(183984LLU,191456LLU,1LLU),_1d7769681_Range32(194560LLU,195101LLU,1LLU),_1d7769681_Range32(196608LLU,201546LLU,1LLU),_1d7769681_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_1d7736b59_LETTER = _1d7732c21__L;
	_1d776556c__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_1d77bcc56_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_1d58515c2_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_1d77bddbc_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_1d77cd53b_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_1d77cd739_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_1d77ddb12_PATH_STDLIB = jule::Str();
	_1d77dbb98_PATH_EXEC = jule::Str();
	_1d77dcea7_PATH_WD = jule::Str();
	_1d77ebe3e_PATH_API = jule::Str();
	_1d77ed506_OS = jule::Str("windows", 7);
	_1d77ee392_ARCH = jule::Str("i386", 4);
	_1d7ac4436_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_1d7ac4524_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_1d7ac4612_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_1d7ac4854_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_1d7ac4a0d_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_1d7b7eb2e_KEYWORDS = jule::Array<_1d7b7e832_KindPair,47>({_1d7b7e832_KindPair(jule::Str("i8", 2),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("i16", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("i32", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("i64", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("u8", 2),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("u16", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("u32", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("u64", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("f32", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("f64", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("uint", 4),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("int", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("uintptr", 7),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("bool", 4),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("str", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("any", 3),static_cast<jule::U32>(1LLU)),_1d7b7e832_KindPair(jule::Str("true", 4),static_cast<jule::U32>(6LLU)),_1d7b7e832_KindPair(jule::Str("false", 5),static_cast<jule::U32>(6LLU)),_1d7b7e832_KindPair(jule::Str("nil", 3),static_cast<jule::U32>(6LLU)),_1d7b7e832_KindPair(jule::Str("const", 5),static_cast<jule::U32>(9LLU)),_1d7b7e832_KindPair(jule::Str("ret", 3),static_cast<jule::U32>(4LLU)),_1d7b7e832_KindPair(jule::Str("type", 4),static_cast<jule::U32>(10LLU)),_1d7b7e832_KindPair(jule::Str("for", 3),static_cast<jule::U32>(12LLU)),_1d7b7e832_KindPair(jule::Str("break", 5),static_cast<jule::U32>(13LLU)),_1d7b7e832_KindPair(jule::Str("continue", 8),static_cast<jule::U32>(14LLU)),_1d7b7e832_KindPair(jule::Str("in", 2),static_cast<jule::U32>(15LLU)),_1d7b7e832_KindPair(jule::Str("if", 2),static_cast<jule::U32>(16LLU)),_1d7b7e832_KindPair(jule::Str("else", 4),static_cast<jule::U32>(17LLU)),_1d7b7e832_KindPair(jule::Str("use", 3),static_cast<jule::U32>(19LLU)),_1d7b7e832_KindPair(jule::Str("pub", 3),static_cast<jule::U32>(21LLU)),_1d7b7e832_KindPair(jule::Str("goto", 4),static_cast<jule::U32>(22LLU)),_1d7b7e832_KindPair(jule::Str("enum", 4),static_cast<jule::U32>(24LLU)),_1d7b7e832_KindPair(jule::Str("struct", 6),static_cast<jule::U32>(25LLU)),_1d7b7e832_KindPair(jule::Str("co", 2),static_cast<jule::U32>(26LLU)),_1d7b7e832_KindPair(jule::Str("match", 5),static_cast<jule::U32>(27LLU)),_1d7b7e832_KindPair(jule::Str("self", 4),static_cast<jule::U32>(28LLU)),_1d7b7e832_KindPair(jule::Str("trait", 5),static_cast<jule::U32>(29LLU)),_1d7b7e832_KindPair(jule::Str("impl", 4),static_cast<jule::U32>(30LLU)),_1d7b7e832_KindPair(jule::Str("cpp", 3),static_cast<jule::U32>(31LLU)),_1d7b7e832_KindPair(jule::Str("fall", 4),static_cast<jule::U32>(32LLU)),_1d7b7e832_KindPair(jule::Str("fn", 2),static_cast<jule::U32>(33LLU)),_1d7b7e832_KindPair(jule::Str("let", 3),static_cast<jule::U32>(34LLU)),_1d7b7e832_KindPair(jule::Str("unsafe", 6),static_cast<jule::U32>(35LLU)),_1d7b7e832_KindPair(jule::Str("mut", 3),static_cast<jule::U32>(36LLU)),_1d7b7e832_KindPair(jule::Str("defer", 5),static_cast<jule::U32>(37LLU)),_1d7b7e832_KindPair(jule::Str("static", 6),static_cast<jule::U32>(38LLU)),_1d7b7e832_KindPair(jule::Str("error", 5),static_cast<jule::U32>(40LLU))});
	_1d7b7ed2c_BASIC_OPS = jule::Array<_1d7b7e832_KindPair,39>({_1d7b7e832_KindPair(jule::Str("::", 2),static_cast<jule::U32>(23LLU)),_1d7b7e832_KindPair(jule::Str(":", 1),static_cast<jule::U32>(11LLU)),_1d7b7e832_KindPair(jule::Str(";", 1),static_cast<jule::U32>(5LLU)),_1d7b7e832_KindPair(jule::Str(",", 1),static_cast<jule::U32>(8LLU)),_1d7b7e832_KindPair(jule::Str("...", 3),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str(".", 1),static_cast<jule::U32>(20LLU)),_1d7b7e832_KindPair(jule::Str("+=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("-=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("*=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("/=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("%=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("<<=", 3),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str(">>=", 3),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("^=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("&=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("|=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("==", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("!=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str(">=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("<=", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("&&", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("||", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("<<", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str(">>", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("++", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("--", 2),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("+", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("-", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("*", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("/", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("%", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("&", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("|", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("^", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("!", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("<", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str(">", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("=", 1),static_cast<jule::U32>(7LLU)),_1d7b7e832_KindPair(jule::Str("#", 1),static_cast<jule::U32>(39LLU))});
	_1a9b7c055_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_1a9b7c385_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_1a94927a0_F32_INFO = _1a9945e62_FloatInfo(23LLU,8LLU,-127LL);
	_1a94a495a_F64_INFO = _1a9945e62_FloatInfo(52LLU,11LLU,-1023LL);
	_1a94bb554_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_1a952d30d_POWTAB = jule::Slice<jule::I32>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_1a9549e73_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_1a953a5a1_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_1a9570130_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_1a956ed77_LEFTCHEATS = jule::Slice<_1a9ba7327_LeftCheat>({_1a9ba7327_LeftCheat(0LL,jule::Str()),_1a9ba7327_LeftCheat(1LL,jule::Str("5", 1)),_1a9ba7327_LeftCheat(1LL,jule::Str("25", 2)),_1a9ba7327_LeftCheat(1LL,jule::Str("125", 3)),_1a9ba7327_LeftCheat(2LL,jule::Str("625", 3)),_1a9ba7327_LeftCheat(2LL,jule::Str("3125", 4)),_1a9ba7327_LeftCheat(2LL,jule::Str("15625", 5)),_1a9ba7327_LeftCheat(3LL,jule::Str("78125", 5)),_1a9ba7327_LeftCheat(3LL,jule::Str("390625", 6)),_1a9ba7327_LeftCheat(3LL,jule::Str("1953125", 7)),_1a9ba7327_LeftCheat(4LL,jule::Str("9765625", 7)),_1a9ba7327_LeftCheat(4LL,jule::Str("48828125", 8)),_1a9ba7327_LeftCheat(4LL,jule::Str("244140625", 9)),_1a9ba7327_LeftCheat(4LL,jule::Str("1220703125", 10)),_1a9ba7327_LeftCheat(5LL,jule::Str("6103515625", 10)),_1a9ba7327_LeftCheat(5LL,jule::Str("30517578125", 11)),_1a9ba7327_LeftCheat(5LL,jule::Str("152587890625", 12)),_1a9ba7327_LeftCheat(6LL,jule::Str("762939453125", 12)),_1a9ba7327_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1a9ba7327_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1a9ba7327_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1a9ba7327_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1a9ba7327_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1a9ba7327_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1a9ba7327_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1a9ba7327_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1a9ba7327_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1a9ba7327_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1a9ba7327_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1a9ba7327_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1a9ba7327_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1a9ba7327_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1a9ba7327_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1a9ba7327_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1a9ba7327_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1a9ba7327_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1a9ba7327_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1a9ba7327_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1a9ba7327_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1a9ba7327_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1a9ba7327_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1a9ba7327_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1a9ba7327_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1a9ba7327_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1a9ba7327_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1a9ba7327_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1a9ba7327_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1a9ba7327_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1a9ba7327_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1a9ba7327_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1a9ba7327_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1a9ba7327_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1a9ba7327_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1a9ba7327_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1a9ba7327_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1a9ba7327_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1a9ba7327_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1a9ba7327_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1a9ba7327_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1a9ba7327_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1a9ba7327_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_1a9cce4e8_BIT_SIZE = 0LL;
	_1a9cce5d6_SYS_INT = jule::Str();
	_1a9cce6c4_SYS_UINT = jule::Str();
	_1bce48154_deads = nullptr;
	_1bce4b421_checking = nullptr;
	_1bce4b83e_current = jule::Any(nullptr);
	_1bce62e4e_main_current = jule::Any(nullptr);
	_1aa54ae62_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_1d778e266_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_1aa56e8d1_OUT_DIR = jule::Str("dist", 4);
	_1aa57495d_OUT_NAME = jule::Str("ir.cpp", 6);
	_1aa57eccb_OUT = jule::Str();

	_1d78191d1_init();
	_1a9cd1d36_init();
	_1d779b097_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}