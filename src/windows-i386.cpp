// Auto generated by JuleC.
// JuleC version: jule0.0.11 @master
// Date: 10/4/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   
#include <dirent.h>
#include <cstdio>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <time.h>

struct _1e0e10a00_Importer{};
struct _1ed77b78c_Kind{};
struct _1ed7974de_Lookup{};
struct _1aac55825_CommonFlag{};
struct _1dc58abb7_accept_range;
struct _1dd5e7a58_Range16;
struct _1dd5e8020_Range32;
struct _1dd5e8493_RangeTable;
struct _1dc67b58d_LazyBuff;
struct _1db7a7dc4_DirEntry;
struct _1db7d010a_Directory;
struct _1dc4b2c32_File;
struct _1dc4b30ea_Status;
struct _1dd69baa7_Cmd;
struct _1dd65aa00_Log;
struct _1dd9941e0_Token;
struct _1dd9995ad_File;
struct _1dd99b615_KindPair;
struct _1dd9a20cc_Lex;
struct _1e00e2760_Ast;
struct _1e00e2ead_Node;
struct _1e0124e35_Directive;
struct _1e01253db_TypeDecl;
struct _1e012596e_IdentTypeDecl;
struct _1e01260ac_SubIdentTypeDecl;
struct _1e0126464_NamespaceTypeDecl;
struct _1e0126750_SptrTypeDecl;
struct _1e0126ac4_SlcTypeDecl;
struct _1e0126db0_TupleTypeDecl;
struct _1e012719b_PtrTypeDecl;
struct _1e01278e9_ArrTypeDecl;
struct _1e0128103_MapTypeDecl;
struct _1e01284aa_RetTypeDecl;
struct _1e0128b3c_Expr;
struct _1e0128ee4_UseExpr;
struct _1e0129423_TupleExpr;
struct _1e01297a8_LitExpr;
struct _1e0129eb2_UnsafeExpr;
struct _1e012a369_CoExpr;
struct _1e012a7dc_IdentExpr;
struct _1e012aee6_UnaryExpr;
struct _1e012b39d_VariadicExpr;
struct _1e012b755_CastExpr;
struct _1e012bb0c_NsSelectionExpr;
struct _1e012c080_SubIdentExpr;
struct _1e012c503_BinopExpr;
struct _1e012cb0d_FnCallExpr;
struct _1e012d625_FieldExprPair;
struct _1e012ddea_StructLit;
struct _1e012e36d_BraceLit;
struct _1e012eb43_KeyValPair;
struct _1e013032a_SliceExpr;
struct _1e0130b99_IndexingExpr;
struct _1e01312a4_SlicingExpr;
struct _1e013165b_GenericDecl;
struct _1e0131a13_LabelSt;
struct _1e0131dba_GotoSt;
struct _1e01321a6_FallSt;
struct _1e01327b1_AssignLeft;
struct _1e0132d00_AssignSt;
struct _1e013340a_ScopeTree;
struct _1e0133ad1_ParamDecl;
struct _1e0134e01_FnDecl;
struct _1e0135dd0_VarDecl;
struct _1e0136287_RetSt;
struct _1e0136809_Iter;
struct _1e01370ce_WhileKind;
struct _1e0137970_RangeKind;
struct _1e0137d27_BreakSt;
struct _1e01381ce_ContSt;
struct _1e0138652_If;
struct _1e0138a09_Else;
struct _1e0138e7c_Conditional;
struct _1e0139653_TypeAliasDecl;
struct _1e0139ac6_Case;
struct _1e013a29c_MatchCase;
struct _1e013aa3e_UseDecl;
struct _1e013aeb2_EnumItemDecl;
struct _1e013bb0b_EnumDecl;
struct _1e013c3d1_TypeEnumItemDecl;
struct _1e013c9db_TypeEnumDecl;
struct _1e013d1b2_FieldDecl;
struct _1e013da20_StructDecl;
struct _1e013dc1d_TraitDecl;
struct _1e013e2b2_Impl;
struct _1e05cd5db_FloatInfo;
struct _1e09aeb76_DecimalSlice;
struct _1e0be58e5_LeftCheat;
struct _1e0be5ad2_Decimal;
struct _1e0d4da1a_Const;
struct _1e010cc53_Field;
struct _1e00e8249_Operators;
struct _1e010261b_Struct;
struct _1e01087ba_FieldIns;
struct _1e0116dc2_OperandExprModel;
struct _1e011cdb7_BinopExprModel;
struct _1e0111cac_UnaryExprModel;
struct _1e0116795_StructArgExprModel;
struct _1e0116982_StructLitExprModel;
struct _1e013ea76_AllocStructLitExprModel;
struct _1e013ec63_CastingExprModel;
struct _1e013ee50_FnCallExprModel;
struct _1e014013c_SliceExprModel;
struct _1e0140329_IndexingExprModel;
struct _1e0140516_AnonFnExprModel;
struct _1e0140703_KeyValPairExprModel;
struct _1e01408e0_MapExprModel;
struct _1e0140acc_SlicingExprModel;
struct _1e0140cb9_TraitSubIdentExprModel;
struct _1e01411d7_StructSubIdentExprModel;
struct _1e01413c4_StructStaticIdentExprModel;
struct _1e01415b1_ArrayExprModel;
struct _1e014179d_CommonIdentExprModel;
struct _1e014198a_CommonSubIdentExprModel;
struct _1e0141b77_TupleExprModel;
struct _1e0141d64_BuiltinOutCallExprModel;
struct _1e0142051_BuiltinOutlnCallExprModel;
struct _1e014223d_BuiltinCloneCallExprModel;
struct _1e014242a_BuiltinNewCallExprModel;
struct _1e0142617_BuiltinPanicCallExprModel;
struct _1e0142804_BuiltinAssertCallExprModel;
struct _1e01429e1_BuiltinMakeCallExprModel;
struct _1e0142bcd_BuiltinAppendCallExprModel;
struct _1e0142dba_BuiltinCopyCallExprModel;
struct _1e01430a7_BuiltinErrorCallExprModel;
struct _1e0140ea6_SizeofExprModel;
struct _1e0143717_AlignofExprModel;
struct _1e0143904_RuneExprModel;
struct _1e0143ae1_IntegratedToStrExprModel;
struct _1e0143ccd_BackendEmitExprModel;
struct _1e0143eba_FreeExprModel;
struct _1e01441a7_RetType;
struct _1e0144394_Param;
struct _1e0144581_Fn;
struct _1e0144938_ParamIns;
struct _1e01457c4_FnIns;
struct _1e01480ac_ReferenceStack;
struct _1e0149487_Pass;
struct _1e014d821_SymbolBuilder;
struct _1e0567d06_Trait;
struct _1e04ed4c8_EnumItem;
struct _1e057b8b9_Enum;
struct _1e05b1316_TypeEnumItem;
struct _1e04c643a_TypeEnum;
struct _1e0159a3b_Impl;
struct _1e0dd6322_Scope;
struct _1e0ddcc41_If;
struct _1e0d877bd_Else;
struct _1e0d879aa_Conditional;
struct _1e0d985ae_InfIter;
struct _1e0d9879b_WhileIter;
struct _1e0dc6664_RangeIter;
struct _1e0dc6851_ContSt;
struct _1e0dea413_BreakSt;
struct _1e0dea600_Label;
struct _1e0dea7dc_GotoSt;
struct _1e0dea9c9_Postfix;
struct _1e0deabb6_Assign;
struct _1e0deada3_MultiAssign;
struct _1e0deb090_Match;
struct _1e0deb4ad_Case;
struct _1e0deb69a_FallSt;
struct _1e0deb887_RetSt;
struct _1e0deba74_ScopeLabel;
struct _1e0debc61_ScopeGoto;
struct _1e0debe4d_ScopeChecker;
struct _1e0e0c5e0_DirectiveChecker;
struct _1e0e13272_ImportInfo;
struct _1e0e16253_Package;
struct _1e0e1b3bd_Sema;
struct _1e0e33abc_MissingRetChecker;
struct _1e0e3576c_IterRelation;
struct _1e0e366e6_Var;
struct _1e0e3721e_FuncPattern;
struct _1e0e68e43_TypeCompatibilityChecker;
struct _1e0e6a4d8_AssignTypeChecker;
struct _1e0e6bd36_DynamicTypeAnnotation;
struct _1e0e6eae7_FnCallArgChecker;
struct _1e0e72501_StructLitChecker;
struct _1e0e740d5_RangeChecker;
struct _1e0e7626e_RetTypeChecker;
struct _1e0e77eeb_SymbolTable;
struct _1e0e7ce9b_Data;
struct _1e0e7e024_Value;
struct _1e0e7ea19_Eval;
struct _1e0e9a260_UnaryEval;
struct _1e0e9beed_BinaryEval;
struct _1ed77ae84_TypeAlias;
struct _1ed77bbbb_TypeKind;
struct _1ed780cd0_TypeSymbol;
struct _1ed781693_Prim;
struct _1ed784ba2_Sptr;
struct _1ed78560e_Slc;
struct _1ed786104_Tuple;
struct _1ed786bb5_Map;
struct _1ed7877a9_Arr;
struct _1ed788216_Ptr;
struct _1ed78915c_Referencer;
struct _1ed789da5_TypeChecker;
struct _1ed7925b6_IdentTypeLookup;
struct _1aa442b8e_FileInfo;
struct _1aa4915d3_Stmt;
struct _1aa491e0d_ScopeParser;
struct _1aa49d4d0_CallData;
struct _1aa49e932_ExprBuilder;
struct _1aa4a9be5_AssignInfo;
struct _1aa4acd08_Parser;
struct _1aa4be18d_TypeBuilder;
struct _1ed92a30e_CompileInfo;
struct _1ed92b662_DirectiveEval;
struct _1aa39e546_JuleImporter;
struct _1a9442486_OrderedDefines;
struct _1a965184e_DefineOrderer;
struct _1aa594dbd_LiveTable;
struct _1aa5c9809_ScopeDeadCode;
struct _1aa5cd4bc_ExprDeadCode;
struct _1ed83964c_UnsafeBinopExprModel;
struct _1ed83996b_UnsafeIndexingExprModel;
struct _1ed839d34_PushToSliceExprModel;
struct _1ed83a3b7_MutSlicingExprModel;
struct _1ed83a791_StrInsertBeginExprModel;
struct _1ed83b95c_ScopeOptimizer;
struct _1ed84205b_ExprOptimizer;
struct _1aa56cc31_Optimizer;
struct _1aa5e9be2_AnsiEscape;
struct _1aa5eaece_Logger;
struct _1aac0d24a_AbsTime;
struct _1aac0d921_Time;
struct _1aab855ce_ScopeCoder;
struct _1aab8c87d_ExprCoder;
struct _1aab9a99b_DeriveCoder;
struct _1aab9be31_TestCoder;
struct _1aab9e40b_IdentCoder;
struct _1aabd6e7c_SerializationInfo;
struct _1aabca7ab_TraitHash;
struct _1aac1dd93_CustomType;
struct _1aac1e68a_TypeCoder;
struct _1bb9b65b9_Flag;
struct _1bb9ba579_Flag;
struct _1bb9bdadd_Flag;
struct _1bb9c2196_Flag;
struct _1bb9c570a_Flag;
struct _1aac56d43_FlagSet;
struct _1c2c92949_IR;
struct _1e010a05d_StructIns;
struct _1aa595121_ObjectDeadCode;
struct _1aabca998_ObjectCoder;
struct _1aac5954e_ArgParser;
struct _1dc58abb7_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();
	

	_1dc58abb7_accept_range(void) = default;

	inline bool operator==(_1dc58abb7_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1dc58abb7_accept_range _other) { return !this->operator==(_other); }


};
struct _1dd5e7a58_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();
	

	_1dd5e7a58_Range16(void) = default;

	inline bool operator==(_1dd5e7a58_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1dd5e7a58_Range16 _other) { return !this->operator==(_other); }


};
struct _1dd5e8020_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();
	

	_1dd5e8020_Range32(void) = default;

	inline bool operator==(_1dd5e8020_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1dd5e8020_Range32 _other) { return !this->operator==(_other); }


};
struct _1dd5e8493_RangeTable {
	jule::Slice<_1dd5e7a58_Range16> _field_r16 = jule::Slice<_1dd5e7a58_Range16>();
	jule::Slice<_1dd5e8020_Range32> _field_r32 = jule::Slice<_1dd5e8020_Range32>();
	jule::I32 _field_latin_offset = jule::I32();
	

	_1dd5e8493_RangeTable(void) = default;

	inline bool operator==(_1dd5e8493_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1dd5e8493_RangeTable _other) { return !this->operator==(_other); }


};
inline jule::U8 _1dc67bea6_index(_1dc67b58d_LazyBuff*, jule::I32);
inline void _1dc6820ee_append(_1dc67b58d_LazyBuff*, jule::U8);
inline jule::Str _1dc682a8e_string(_1dc67b58d_LazyBuff*);
struct _1dc67b58d_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I32 _field_w = jule::I32();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I32 _field_vol_len = jule::I32();
	

	_1dc67b58d_LazyBuff(void) = default;

	inline bool operator==(_1dc67b58d_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1dc67b58d_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1db7a7dc4_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1dc4b30ea_Status> _field_stat = jule::Ptr<_1dc4b30ea_Status>();
	

	_1db7a7dc4_DirEntry(void) = default;

	inline bool operator==(_1db7a7dc4_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1db7a7dc4_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>> static__1dc5a1925_read(jule::Str);
inline jule::VoidExceptional static__1dc5b5384_create(jule::Str);
inline jule::VoidExceptional static__1dc5dc521_remove(jule::Str);
struct _1db7d010a_Directory {
	

	_1db7d010a_Directory(void) = default;

	inline bool operator==(_1db7d010a_Directory _other) { return true; }

	inline bool operator!=(_1db7d010a_Directory _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dc4b2c32_File> static__1db7b331e_new(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1dc4b2c32_File>> static__1db7ba090_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1db7bd747_read(jule::Str);
inline jule::VoidExceptional static__1db7c00d9_write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::Exceptional<jule::I32> _1db7d175a_seek(_1dc4b2c32_File*, jule::I32, jule::I32);
inline jule::VoidExceptional _1db7d2b57_close(_1dc4b2c32_File*);
inline jule::Exceptional<jule::Ptr<_1dc4b2c32_File>> static__1dc51c264_open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__1dc550572_remove(jule::Str);
inline jule::Exceptional<jule::I32> _1dc51be67_write(_1dc4b2c32_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _1dc58e281_read(_1dc4b2c32_File*, jule::Slice<jule::U8>);
struct _1dc4b2c32_File {
	jule::Uintptr _field_handle = jule::Uintptr();
	

	_1dc4b2c32_File(void) = default;

	inline bool operator==(_1dc4b2c32_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1dc4b2c32_File _other) { return !this->operator==(_other); }


};
inline jule::Bool _1db6ea267_is_dir(_1dc4b30ea_Status*);
inline jule::Bool _1db779c42_is_reg(_1dc4b30ea_Status*);
inline jule::Exceptional<jule::Ptr<_1dc4b30ea_Status>> static__1dc611468_of(jule::Str);
struct _1dc4b30ea_Status {
	jule::U32 _field_mode = jule::U32();
	jule::U32 _field_size = jule::U32();
	

	_1dc4b30ea_Status(void) = default;

	inline bool operator==(_1dc4b30ea_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1dc4b30ea_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dd69baa7_Cmd> static__1dd69bed6_new(jule::Str);
inline jule::Exceptional<jule::I32> _1dd69c24a_spawn(_1dd69baa7_Cmd*);
inline jule::Exceptional<jule::I32> _1dd6ac0a1___spawn(_1dd69baa7_Cmd*);
struct _1dd69baa7_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();
	

	_1dd69baa7_Cmd(void) = default;

	inline bool operator==(_1dd69baa7_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1dd69baa7_Cmd _other) { return !this->operator==(_other); }


};
struct _1dd65aa00_Log {
	jule::I32 _field_kind = 0LL;
	jule::I32 _field_row = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();
	

	_1dd65aa00_Log(void) = default;

	inline bool operator==(_1dd65aa00_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1dd65aa00_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1dd9945ca_prec(_1dd9941e0_Token*);
struct _1dd9941e0_Token {
	jule::Ptr<_1dd9995ad_File> _field_file = jule::Ptr<_1dd9995ad_File>();
	jule::I32 _field_row = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::Str _field_kind = jule::Str();
	jule::U32 _field_id = 0LLU;
	

	_1dd9941e0_Token(void) = default;

	inline bool operator==(_1dd9941e0_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1dd9941e0_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd9999ba_is_ok(_1dd9995ad_File*);
inline void _1dd999c40_fill(_1dd9995ad_File*, jule::Slice<jule::U8>);
inline jule::Str _1dd999ea4_dir(_1dd9995ad_File*);
inline jule::Str _1dd99a218_name(_1dd9995ad_File*);
inline jule::Uintptr _1dd99a47c_addr(_1dd9995ad_File*);
inline jule::Str _1dd99a78a_get_row(_1dd9995ad_File*, jule::I32);
struct _1dd9995ad_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	

	_1dd9995ad_File(void) = default;

	inline bool operator==(_1dd9995ad_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1dd9995ad_File _other) { return !this->operator==(_other); }


};
struct _1dd99b615_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	_1dd99b615_KindPair(void) = default;

	inline bool operator==(_1dd99b615_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1dd99b615_KindPair _other) { return !this->operator==(_other); }


};
inline void _1dd9a2671_push_err(_1dd9a20cc_Lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1dd9a2990_push_err_tok(_1dd9a20cc_Lex*, jule::Ptr<_1dd9941e0_Token>&, jule::Str);
inline void _1dd9a2b6b_lex(_1dd9a20cc_Lex*);
inline jule::Str _1dd9a2e79_id(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1dd9a31dd_resume(_1dd9a20cc_Lex*);
inline void _1dd9a3463_lex_line_comment(_1dd9a20cc_Lex*, jule::Ptr<_1dd9941e0_Token>&);
inline void _1dd9a36d8_lex_range_comment(_1dd9a20cc_Lex*, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Str _1dd9a39e6_num(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1dd9a3d04_escape_seq(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1dd9a41ab_get_rune(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _1dd9a44b9_lex_rune(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&);
inline jule::Str _1dd9a472d_lex_str(_1dd9a20cc_Lex*);
inline jule::Bool _1dd9a4992_is_first_token_of_line(_1dd9a20cc_Lex*);
inline void _1dd9a4b6d_new_line(_1dd9a20cc_Lex*);
inline jule::Bool _1dd9a5168_is_op(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&, jule::Str, jule::U32, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1dd9a5520_lex_basic_ops(_1dd9a20cc_Lex*, jule::Slice<jule::U8>, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1dd9a58c7_lex_id(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1dd9a5c7e_lex_num(_1dd9a20cc_Lex*, jule::Slice<jule::U8>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Ptr<_1dd9941e0_Token> _1dd9a5ee3_token(_1dd9a20cc_Lex*);
struct _1dd9a20cc_Lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Ptr<_1dd9995ad_File> _field_file = jule::Ptr<_1dd9995ad_File>();
	jule::I32 _field_pos = jule::I32();
	jule::I32 _field_column = jule::I32();
	jule::I32 _field_row = jule::I32();
	jule::Slice<_1dd65aa00_Log> _field_errors = jule::Slice<_1dd65aa00_Log>();
	

	_1dd9a20cc_Lex(void) = default;

	inline bool operator==(_1dd9a20cc_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1dd9a20cc_Lex _other) { return !this->operator==(_other); }


};
struct _1e00e2760_Ast {
	jule::Ptr<_1dd9995ad_File> _field_file = jule::Ptr<_1dd9995ad_File>();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Slice<jule::Ptr<_1e013aa3e_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1e013aa3e_UseDecl>>();
	jule::Slice<_1e00e2ead_Node> _field_nodes = jule::Slice<_1e00e2ead_Node>();
	

	_1e00e2760_Ast(void) = default;

	inline bool operator==(_1e00e2760_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1e00e2760_Ast _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e00e33cb_is_decl(_1e00e2ead_Node*);
inline jule::Bool _1e00e3640_is_directive(_1e00e2ead_Node*);
inline jule::Bool _1e00e38a4_is_impl(_1e00e2ead_Node*);
inline jule::Bool _1e00e3b18_is_use_decl(_1e00e2ead_Node*);
struct _1e00e2ead_Node {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_data = jule::Any();
	

	_1e00e2ead_Node(void) = default;

	inline bool operator==(_1e00e2ead_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e00e2ead_Node _other) { return !this->operator==(_other); }


};
struct _1e0124e35_Directive {
	jule::Ptr<_1dd9941e0_Token> _field_tag = jule::Ptr<_1dd9941e0_Token>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_args = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	

	_1e0124e35_Directive(void) = default;

	inline bool operator==(_1e0124e35_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e0124e35_Directive _other) { return !this->operator==(_other); }


};
struct _1e01253db_TypeDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_kind = jule::Any();
	

	_1e01253db_TypeDecl(void) = default;

	inline bool operator==(_1e01253db_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e01253db_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0125cc1_is_prim(_1e012596e_IdentTypeDecl*);
struct _1e012596e_IdentTypeDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>();
	

	_1e012596e_IdentTypeDecl(void) = default;

	inline bool operator==(_1e012596e_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e012596e_IdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e01260ac_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1e012596e_IdentTypeDecl>> _field_idents = jule::Slice<jule::Ptr<_1e012596e_IdentTypeDecl>>();
	

	_1e01260ac_SubIdentTypeDecl(void) = default;

	inline bool operator==(_1e01260ac_SubIdentTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e01260ac_SubIdentTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0126464_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_idents = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e0126464_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1e0126464_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e0126464_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0126750_SptrTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_elem = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e0126750_SptrTypeDecl(void) = default;

	inline bool operator==(_1e0126750_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e0126750_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0126ac4_SlcTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_elem = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e0126ac4_SlcTypeDecl(void) = default;

	inline bool operator==(_1e0126ac4_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e0126ac4_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0126db0_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>();
	

	_1e0126db0_TupleTypeDecl(void) = default;

	inline bool operator==(_1e0126db0_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1e0126db0_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0127575_is_unsafe(_1e012719b_PtrTypeDecl*);
struct _1e012719b_PtrTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_elem = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e012719b_PtrTypeDecl(void) = default;

	inline bool operator==(_1e012719b_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1e012719b_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0127c4b_auto_sized(_1e01278e9_ArrTypeDecl*);
struct _1e01278e9_ArrTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_elem = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e0128b3c_Expr> _field_size = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e01278e9_ArrTypeDecl(void) = default;

	inline bool operator==(_1e01278e9_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e01278e9_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0128103_MapTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_key = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e01253db_TypeDecl> _field_val = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e0128103_MapTypeDecl(void) = default;

	inline bool operator==(_1e0128103_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e0128103_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e01284aa_RetTypeDecl {
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_idents = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	

	_1e01284aa_RetTypeDecl(void) = default;

	inline bool operator==(_1e01284aa_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e01284aa_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1e0128b3c_Expr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();
	

	_1e0128b3c_Expr(void) = default;

	inline bool operator==(_1e0128b3c_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e0128b3c_Expr _other) { return !this->operator==(_other); }


};
struct _1e0128ee4_UseExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0128ee4_UseExpr(void) = default;

	inline bool operator==(_1e0128ee4_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0128ee4_UseExpr _other) { return !this->operator==(_other); }


};
struct _1e0129423_TupleExpr {
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_expr = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	

	_1e0129423_TupleExpr(void) = default;

	inline bool operator==(_1e0129423_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0129423_TupleExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0129b0a_is_nil(_1e01297a8_LitExpr*);
struct _1e01297a8_LitExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_value = jule::Str();
	

	_1e01297a8_LitExpr(void) = default;

	inline bool operator==(_1e01297a8_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e01297a8_LitExpr _other) { return !this->operator==(_other); }


};
struct _1e0129eb2_UnsafeExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0129eb2_UnsafeExpr(void) = default;

	inline bool operator==(_1e0129eb2_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0129eb2_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1e012a369_CoExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e012a369_CoExpr(void) = default;

	inline bool operator==(_1e012a369_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e012a369_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e012ab3e_is_self(_1e012a7dc_IdentExpr*);
struct _1e012a7dc_IdentExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	

	_1e012a7dc_IdentExpr(void) = default;

	inline bool operator==(_1e012a7dc_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1e012a7dc_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1e012aee6_UnaryExpr {
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e012aee6_UnaryExpr(void) = default;

	inline bool operator==(_1e012aee6_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e012aee6_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1e012b39d_VariadicExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e012b39d_VariadicExpr(void) = default;

	inline bool operator==(_1e012b39d_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e012b39d_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1e012b755_CastExpr {
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e012b755_CastExpr(void) = default;

	inline bool operator==(_1e012b755_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e012b755_CastExpr _other) { return !this->operator==(_other); }


};
struct _1e012bb0c_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_ns = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Ptr<_1dd9941e0_Token> _field_ident = jule::Ptr<_1dd9941e0_Token>();
	

	_1e012bb0c_NsSelectionExpr(void) = default;

	inline bool operator==(_1e012bb0c_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e012bb0c_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1e012c080_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1dd9941e0_Token> _field_ident = jule::Ptr<_1dd9941e0_Token>();
	

	_1e012c080_SubIdentExpr(void) = default;

	inline bool operator==(_1e012c080_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e012c080_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1e012c503_BinopExpr {
	jule::Ptr<_1e0128b3c_Expr> _field_left = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0128b3c_Expr> _field_right = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	

	_1e012c503_BinopExpr(void) = default;

	inline bool operator==(_1e012c503_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e012c503_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e012d081_unhandled(_1e012cb0d_FnCallExpr*);
inline jule::Bool _1e012d2e5_ignored(_1e012cb0d_FnCallExpr*);
struct _1e012cb0d_FnCallExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_args = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	jule::Ptr<_1e013340a_ScopeTree> _field_exception = jule::Ptr<_1e013340a_ScopeTree>();
	

	_1e012cb0d_FnCallExpr(void) = default;

	inline bool operator==(_1e012cb0d_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1e012cb0d_FnCallExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e012d977_is_targeted(_1e012d625_FieldExprPair*);
struct _1e012d625_FieldExprPair {
	jule::Ptr<_1dd9941e0_Token> _field_field = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e012d625_FieldExprPair(void) = default;

	inline bool operator==(_1e012d625_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e012d625_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1e012ddea_StructLit {
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	

	_1e012ddea_StructLit(void) = default;

	inline bool operator==(_1e012ddea_StructLit _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e012ddea_StructLit _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e012e6c0_is_empty(_1e012e36d_BraceLit*);
struct _1e012e36d_BraceLit {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	

	_1e012e36d_BraceLit(void) = default;

	inline bool operator==(_1e012e36d_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e012e36d_BraceLit _other) { return !this->operator==(_other); }


};
struct _1e012eb43_KeyValPair {
	jule::Ptr<_1e0128b3c_Expr> _field_key = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0128b3c_Expr> _field_val = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1dd9941e0_Token> _field_colon = jule::Ptr<_1dd9941e0_Token>();
	

	_1e012eb43_KeyValPair(void) = default;

	inline bool operator==(_1e012eb43_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1e012eb43_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e013065a_is_empty(_1e013032a_SliceExpr*);
struct _1e013032a_SliceExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	

	_1e013032a_SliceExpr(void) = default;

	inline bool operator==(_1e013032a_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e013032a_SliceExpr _other) { return !this->operator==(_other); }


};
struct _1e0130b99_IndexingExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0128b3c_Expr> _field_index = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0130b99_IndexingExpr(void) = default;

	inline bool operator==(_1e0130b99_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e0130b99_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1e01312a4_SlicingExpr {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0128b3c_Expr> _field_start = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0128b3c_Expr> _field_to = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e01312a4_SlicingExpr(void) = default;

	inline bool operator==(_1e01312a4_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1e01312a4_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1e013165b_GenericDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e013165b_GenericDecl(void) = default;

	inline bool operator==(_1e013165b_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e013165b_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1e0131a13_LabelSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e0131a13_LabelSt(void) = default;

	inline bool operator==(_1e0131a13_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e0131a13_LabelSt _other) { return !this->operator==(_other); }


};
struct _1e0131dba_GotoSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_label = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0131dba_GotoSt(void) = default;

	inline bool operator==(_1e0131dba_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e0131dba_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e01321a6_FallSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	

	_1e01321a6_FallSt(void) = default;

	inline bool operator==(_1e01321a6_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1e01321a6_FallSt _other) { return !this->operator==(_other); }


};
struct _1e01327b1_AssignLeft {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e01327b1_AssignLeft(void) = default;

	inline bool operator==(_1e01327b1_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e01327b1_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1e0132d00_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	jule::Ptr<_1dd9941e0_Token> _field_setter = jule::Ptr<_1dd9941e0_Token>();
	jule::Slice<jule::Ptr<_1e01327b1_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1e01327b1_AssignLeft>>();
	jule::Ptr<_1e0128b3c_Expr> _field_right = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0132d00_AssignSt(void) = default;

	inline bool operator==(_1e0132d00_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e0132d00_AssignSt _other) { return !this->operator==(_other); }


};
struct _1e013340a_ScopeTree {
	jule::Ptr<_1e013340a_ScopeTree> _field_parent = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1e00e2ead_Node> _field_stmts = jule::Slice<_1e00e2ead_Node>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	

	_1e013340a_ScopeTree(void) = default;

	inline bool operator==(_1e013340a_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e013340a_ScopeTree _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0133e44_is_self(_1e0133ad1_ParamDecl*);
inline jule::Bool _1e01341a8_is_ref(_1e0133ad1_ParamDecl*);
struct _1e0133ad1_ParamDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Str _field_ident = jule::Str();
	

	_1e0133ad1_ParamDecl(void) = default;

	inline bool operator==(_1e0133ad1_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e0133ad1_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0135253_is_anon(_1e0134e01_FnDecl*);
struct _1e0134e01_FnDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>();
	jule::Ptr<_1e01284aa_RetTypeDecl> _field_result = jule::Ptr<_1e01284aa_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>>();
	

	_1e0134e01_FnDecl(void) = default;

	inline bool operator==(_1e0134e01_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1e0134e01_FnDecl _other) { return !this->operator==(_other); }


};
struct _1e0135dd0_VarDecl {
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0135dd0_VarDecl(void) = default;

	inline bool operator==(_1e0135dd0_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0135dd0_VarDecl _other) { return !this->operator==(_other); }


};
struct _1e0136287_RetSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e0136287_RetSt(void) = default;

	inline bool operator==(_1e0136287_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0136287_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0136b5b_is_inf(_1e0136809_Iter*);
struct _1e0136809_Iter {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	

	_1e0136809_Iter(void) = default;

	inline bool operator==(_1e0136809_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0136809_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0137431_is_while_next(_1e01370ce_WhileKind*);
struct _1e01370ce_WhileKind {
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1dd9941e0_Token> _field_next_token = jule::Ptr<_1dd9941e0_Token>();
	

	_1e01370ce_WhileKind(void) = default;

	inline bool operator==(_1e01370ce_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1e01370ce_WhileKind _other) { return !this->operator==(_other); }


};
struct _1e0137970_RangeKind {
	jule::Ptr<_1dd9941e0_Token> _field_in_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0135dd0_VarDecl> _field_key_a = jule::Ptr<_1e0135dd0_VarDecl>();
	jule::Ptr<_1e0135dd0_VarDecl> _field_key_b = jule::Ptr<_1e0135dd0_VarDecl>();
	

	_1e0137970_RangeKind(void) = default;

	inline bool operator==(_1e0137970_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e0137970_RangeKind _other) { return !this->operator==(_other); }


};
struct _1e0137d27_BreakSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_label = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0137d27_BreakSt(void) = default;

	inline bool operator==(_1e0137d27_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e0137d27_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e01381ce_ContSt {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_label = jule::Ptr<_1dd9941e0_Token>();
	

	_1e01381ce_ContSt(void) = default;

	inline bool operator==(_1e01381ce_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1e01381ce_ContSt _other) { return !this->operator==(_other); }


};
struct _1e0138652_If {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	

	_1e0138652_If(void) = default;

	inline bool operator==(_1e0138652_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0138652_If _other) { return !this->operator==(_other); }


};
struct _1e0138a09_Else {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	

	_1e0138a09_Else(void) = default;

	inline bool operator==(_1e0138a09_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0138a09_Else _other) { return !this->operator==(_other); }


};
struct _1e0138e7c_Conditional {
	jule::Ptr<_1e0138652_If> _field_head = jule::Ptr<_1e0138652_If>();
	jule::Slice<jule::Ptr<_1e0138652_If>> _field_tail = jule::Slice<jule::Ptr<_1e0138652_If>>();
	jule::Ptr<_1e0138a09_Else> _field_default = jule::Ptr<_1e0138a09_Else>();
	

	_1e0138e7c_Conditional(void) = default;

	inline bool operator==(_1e0138e7c_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e0138e7c_Conditional _other) { return !this->operator==(_other); }


};
struct _1e0139653_TypeAliasDecl {
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e0139653_TypeAliasDecl(void) = default;

	inline bool operator==(_1e0139653_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e0139653_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1e0139ac6_Case {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	

	_1e0139ac6_Case(void) = default;

	inline bool operator==(_1e0139ac6_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e0139ac6_Case _other) { return !this->operator==(_other); }


};
struct _1e013a29c_MatchCase {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Slice<jule::Ptr<_1e0139ac6_Case>> _field_cases = jule::Slice<jule::Ptr<_1e0139ac6_Case>>();
	jule::Ptr<_1e0138a09_Else> _field_default = jule::Ptr<_1e0138a09_Else>();
	

	_1e013a29c_MatchCase(void) = default;

	inline bool operator==(_1e013a29c_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e013a29c_MatchCase _other) { return !this->operator==(_other); }


};
struct _1e013aa3e_UseDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_selected = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	

	_1e013aa3e_UseDecl(void) = default;

	inline bool operator==(_1e013aa3e_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1e013aa3e_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e013b545_auto_expr(_1e013aeb2_EnumItemDecl*);
struct _1e013aeb2_EnumItemDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e013aeb2_EnumItemDecl(void) = default;

	inline bool operator==(_1e013aeb2_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e013aeb2_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e013be5d_default_typed(_1e013bb0b_EnumDecl*);
struct _1e013bb0b_EnumDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	

	_1e013bb0b_EnumDecl(void) = default;

	inline bool operator==(_1e013bb0b_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e013bb0b_EnumDecl _other) { return !this->operator==(_other); }


};
struct _1e013c3d1_TypeEnumItemDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	

	_1e013c3d1_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1e013c3d1_TypeEnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e013c3d1_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1e013c9db_TypeEnumDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	

	_1e013c9db_TypeEnumDecl(void) = default;

	inline bool operator==(_1e013c9db_TypeEnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items &&
			this->_field_end == _other._field_end;
	}

	inline bool operator!=(_1e013c9db_TypeEnumDecl _other) { return !this->operator==(_other); }


};
struct _1e013d1b2_FieldDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e01253db_TypeDecl> _field_kind = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e0128b3c_Expr> _field_default = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e013d1b2_FieldDecl(void) = default;

	inline bool operator==(_1e013d1b2_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e013d1b2_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1e013da20_StructDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>();
	

	_1e013da20_StructDecl(void) = default;

	inline bool operator==(_1e013da20_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1e013da20_StructDecl _other) { return !this->operator==(_other); }


};
struct _1e013dc1d_TraitDecl {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1e0134e01_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e0134e01_FnDecl>>();
	

	_1e013dc1d_TraitDecl(void) = default;

	inline bool operator==(_1e013dc1d_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_end == _other._field_end &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1e013dc1d_TraitDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e013e625_is_trait_impl(_1e013e2b2_Impl*);
inline jule::Bool _1e013e889_is_struct_impl(_1e013e2b2_Impl*);
struct _1e013e2b2_Impl {
	jule::Ptr<_1dd9941e0_Token> _field_end = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e01253db_TypeDecl> _field_base = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e01253db_TypeDecl> _field_dest = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Slice<jule::Ptr<_1e0134e01_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1e0134e01_FnDecl>>();
	jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>>();
	

	_1e013e2b2_Impl(void) = default;

	inline bool operator==(_1e013e2b2_Impl _other) {
		return 
			this->_field_end == _other._field_end &&
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e013e2b2_Impl _other) { return !this->operator==(_other); }


};
struct _1e05cd5db_FloatInfo {
	jule::U32 _field_mantbits = jule::U32();
	jule::U32 _field_expbits = jule::U32();
	jule::I32 _field_bias = jule::I32();
	

	_1e05cd5db_FloatInfo(void) = default;

	inline bool operator==(_1e05cd5db_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e05cd5db_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1e09aeb76_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I32 _field_nd = jule::I32();
	jule::I32 _field_dp = jule::I32();
	jule::Bool _field_neg = jule::Bool();
	

	_1e09aeb76_DecimalSlice(void) = default;

	inline bool operator==(_1e09aeb76_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1e09aeb76_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1e0be58e5_LeftCheat {
	jule::I32 _field_delta = jule::I32();
	jule::Str _field_cutoff = jule::Str();
	

	_1e0be58e5_LeftCheat(void) = default;

	inline bool operator==(_1e0be58e5_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e0be58e5_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e09ed5dd_set(_1e0be5ad2_Decimal*, jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1e0792ea9_float_bits(_1e0be5ad2_Decimal*, _1e05cd5db_FloatInfo&);
inline void _1e0be5cbe_assign(_1e0be5ad2_Decimal*, jule::U64);
inline void _1e0be5e01_shift(_1e0be5ad2_Decimal*, jule::I32);
inline void _1e0be6033_round_down(_1e0be5ad2_Decimal*, jule::I32);
inline void _1e0be6165_round_up(_1e0be5ad2_Decimal*, jule::I32);
inline void _1e0be6297_round(_1e0be5ad2_Decimal*, jule::I32);
inline jule::U64 _1e0be63c9_rounded_integer(_1e0be5ad2_Decimal*);
struct _1e0be5ad2_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I32 _field_nd = jule::I32();
	jule::I32 _field_dp = jule::I32();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();
	

	_1e0be5ad2_Decimal(void) = default;

	inline bool operator==(_1e0be5ad2_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e0be5ad2_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4dd5b_new_i64(jule::I64);
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e103_new_u64(jule::U64);
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e39a_new_bool(jule::Bool);
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e642_new_str(jule::Str);
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e8d9_new_f64(jule::F64);
inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4ead7_new_nil(void);
inline jule::I64 _1e0d501d1_read_i64(_1e0d4da1a_Const*);
inline jule::U64 _1e0d50445_read_u64(_1e0d4da1a_Const*);
inline jule::Bool _1e0d506a9_read_bool(_1e0d4da1a_Const*);
inline jule::Str _1e0d5091d_read_str(_1e0d4da1a_Const*);
inline jule::F64 _1e0d50b82_read_f64(_1e0d4da1a_Const*);
inline jule::I64 _1e0d50de6_as_i64(_1e0d4da1a_Const*);
inline jule::U64 _1e0d5115a_as_u64(_1e0d4da1a_Const*);
inline jule::F64 _1e0d513be_as_f64(_1e0d4da1a_Const*);
inline void _1e0d51644_set_i64(_1e0d4da1a_Const*, jule::I64);
inline void _1e0d518b9_set_u64(_1e0d4da1a_Const*, jule::U64);
inline void _1e0d51b3e_set_bool(_1e0d4da1a_Const*, jule::Bool);
inline void _1e0d51db4_set_str(_1e0d4da1a_Const*, jule::Str);
inline void _1e0d52139_set_f64(_1e0d4da1a_Const*, jule::F64);
inline void _1e0d52315_set_nil(_1e0d4da1a_Const*);
inline jule::Bool _1e0d52579_is_i64(_1e0d4da1a_Const*);
inline jule::Bool _1e0d527dd_is_u64(_1e0d4da1a_Const*);
inline jule::Bool _1e0d52a52_is_bool(_1e0d4da1a_Const*);
inline jule::Bool _1e0d52cb6_is_str(_1e0d4da1a_Const*);
inline jule::Bool _1e0d5302a_is_f64(_1e0d4da1a_Const*);
inline jule::Bool _1e0d5328e_is_nil(_1e0d4da1a_Const*);
inline jule::Bool _1e0d5359c_are_same_types(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d538aa_and(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d53bb8_or(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d53ec6_eq(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d542d4_lt(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d545e2_lt_eq(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d54900_gt(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d54c0d_gt_eq(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d5501b_add(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d55329_sub(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d55637_mul(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d55945_div(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d55c53_mod(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d56061_bitwise_and(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d5636e_bitwise_or(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d5667c_xor(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d5698a_lshift(_1e0d4da1a_Const*, _1e0d4da1a_Const);
inline jule::Bool _1e0d56c98_rshift(_1e0d4da1a_Const*, _1e0d4da1a_Const);
struct _1e0d4da1a_Const {
	jule::Any _field_data = jule::Any();
	

	_1e0d4da1a_Const(void) = default;

	inline jule::Bool operator==(_1e0d4da1a_Const _other) { return _1e0d53ec6_eq(this, _other); }

	inline bool operator!=(_1e0d4da1a_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e0d4da1a_Const _other) { return _1e0d54900_gt(this, _other); }

	inline jule::Bool operator>=(_1e0d4da1a_Const _other) { return _1e0d54c0d_gt_eq(this, _other); }

	inline jule::Bool operator<(_1e0d4da1a_Const _other) { return _1e0d542d4_lt(this, _other); }

	inline jule::Bool operator<=(_1e0d4da1a_Const _other) { return _1e0d545e2_lt_eq(this, _other); }


};
inline jule::Ptr<_1e01087ba_FieldIns> _1e00a95e5_instance(jule::Ptr<_1e010cc53_Field>);
struct _1e010cc53_Field {
	jule::Ptr<_1e010261b_Struct> _field_owner = jule::Ptr<_1e010261b_Struct>();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Ptr<_1e0128b3c_Expr> _field_default = jule::Ptr<_1e0128b3c_Expr>();
	

	_1e010cc53_Field(void) = default;

	inline bool operator==(_1e010cc53_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e010cc53_Field _other) { return !this->operator==(_other); }


};
struct _1e00e8249_Operators {
	jule::Ptr<_1e01457c4_FnIns> _field_eq = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_gt = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_gt_eq = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_lt = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_lt_eq = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_shl = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_shr = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_add = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_sub = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_div = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_mul = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_mod = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_and = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_or = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_xor = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_neg = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_pos = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_not = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_add_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_sub_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_div_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_mul_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_mod_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_shl_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_shr_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_or_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_and_assign = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01457c4_FnIns> _field_bit_xor_assign = jule::Ptr<_1e01457c4_FnIns>();
	

	_1e00e8249_Operators(void) = default;

	inline bool operator==(_1e00e8249_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1e00e8249_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e010a05d_StructIns> _1e00eb5c1_instance(jule::Ptr<_1e010261b_Struct>);
inline jule::Ptr<_1e010a05d_StructIns> _1e00edbde_append_instance(_1e010261b_Struct*, jule::Ptr<_1e010a05d_StructIns>&);
inline jule::Ptr<_1e0144581_Fn> _1e0100460_find_method(_1e010261b_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0e366e6_Var> _1e010164d_find_static(_1e010261b_Struct*, jule::Str);
inline jule::Ptr<_1e010cc53_Field> _1e0103045_find_field(_1e010261b_Struct*, jule::Str);
inline jule::Bool _1e00ecb88_is_implements(_1e010261b_Struct*, jule::Ptr<_1e0567d06_Trait>);
inline jule::Bool _1e010a976_is_derives(_1e010261b_Struct*, jule::Str);
inline jule::Bool _1e010ca00_is_uses(_1e010261b_Struct*, jule::Ptr<_1e010261b_Struct>);
inline jule::Bool _1e0118940_has_ref_accessible(_1e010261b_Struct*);
struct _1e010261b_Struct {
	jule::Ptr<_1e0e1b3bd_Sema> _field_sema = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _field_depends = jule::Slice<jule::Ptr<_1e010261b_Struct>>();
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _field_uses = jule::Slice<jule::Ptr<_1e010261b_Struct>>();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e010cc53_Field>> _field_fields = jule::Slice<jule::Ptr<_1e010cc53_Field>>();
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e0144581_Fn>>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_statics = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>();
	jule::Slice<jule::Ptr<_1e0567d06_Trait>> _field_implements = jule::Slice<jule::Ptr<_1e0567d06_Trait>>();
	jule::Slice<jule::Ptr<_1e010a05d_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1e010a05d_StructIns>>();
	

	_1e010261b_Struct(void) = default;

	inline bool operator==(_1e010261b_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e010261b_Struct _other) { return !this->operator==(_other); }


};
struct _1e01087ba_FieldIns {
	jule::Ptr<_1e010cc53_Field> _field_decl = jule::Ptr<_1e010cc53_Field>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1e0e7ce9b_Data> _field_default = jule::Ptr<_1e0e7ce9b_Data>();
	

	_1e01087ba_FieldIns(void) = default;

	inline bool operator==(_1e01087ba_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e01087ba_FieldIns _other) { return !this->operator==(_other); }


};
struct _1e0116dc2_OperandExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Any _field_model = jule::Any();
	

	_1e0116dc2_OperandExprModel(void) = default;

	inline bool operator==(_1e0116dc2_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e0116dc2_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1e011cdb7_BinopExprModel {
	jule::Ptr<_1e0116dc2_OperandExprModel> _field_left = jule::Ptr<_1e0116dc2_OperandExprModel>();
	jule::Ptr<_1e0116dc2_OperandExprModel> _field_right = jule::Ptr<_1e0116dc2_OperandExprModel>();
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	

	_1e011cdb7_BinopExprModel(void) = default;

	inline bool operator==(_1e011cdb7_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e011cdb7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1e0111cac_UnaryExprModel {
	jule::Ptr<_1e0e7ce9b_Data> _field_expr = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0111cac_UnaryExprModel(void) = default;

	inline bool operator==(_1e0111cac_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e0111cac_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1e0116795_StructArgExprModel {
	jule::Ptr<_1e01087ba_FieldIns> _field_field = jule::Ptr<_1e01087ba_FieldIns>();
	jule::Any _field_expr = jule::Any();
	

	_1e0116795_StructArgExprModel(void) = default;

	inline bool operator==(_1e0116795_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0116795_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1e0116982_StructLitExprModel {
	jule::Ptr<_1e010a05d_StructIns> _field_strct = jule::Ptr<_1e010a05d_StructIns>();
	jule::Slice<jule::Ptr<_1e0116795_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e0116795_StructArgExprModel>>();
	

	_1e0116982_StructLitExprModel(void) = default;

	inline bool operator==(_1e0116982_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e0116982_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e013ea76_AllocStructLitExprModel {
	jule::Ptr<_1e0116982_StructLitExprModel> _field_lit = jule::Ptr<_1e0116982_StructLitExprModel>();
	

	_1e013ea76_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1e013ea76_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1e013ea76_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1e013ec63_CastingExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_expr_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1e013ec63_CastingExprModel(void) = default;

	inline bool operator==(_1e013ec63_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1e013ec63_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1e013ee50_FnCallExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e01457c4_FnIns> _field_func = jule::Ptr<_1e01457c4_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1e0dd6322_Scope> _field_except = jule::Ptr<_1e0dd6322_Scope>();
	jule::Bool _field_assigned = jule::Bool();
	

	_1e013ee50_FnCallExprModel(void) = default;

	inline bool operator==(_1e013ee50_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1e013ee50_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e014013c_SliceExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_elem_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e014013c_SliceExprModel(void) = default;

	inline bool operator==(_1e014013c_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e014013c_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140329_IndexingExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0e7ce9b_Data> _field_expr = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1e0e7ce9b_Data> _field_index = jule::Ptr<_1e0e7ce9b_Data>();
	

	_1e0140329_IndexingExprModel(void) = default;

	inline bool operator==(_1e0140329_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1e0140329_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140516_AnonFnExprModel {
	jule::Ptr<_1e01457c4_FnIns> _field_func = jule::Ptr<_1e01457c4_FnIns>();
	jule::Bool _field_global = jule::Bool();
	

	_1e0140516_AnonFnExprModel(void) = default;

	inline bool operator==(_1e0140516_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1e0140516_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140703_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	

	_1e0140703_KeyValPairExprModel(void) = default;

	inline bool operator==(_1e0140703_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1e0140703_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1e01408e0_MapExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_key_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_val_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Slice<jule::Ptr<_1e0140703_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1e0140703_KeyValPairExprModel>>();
	

	_1e01408e0_MapExprModel(void) = default;

	inline bool operator==(_1e01408e0_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1e01408e0_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140acc_SlicingExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1e0140acc_SlicingExprModel(void) = default;

	inline bool operator==(_1e0140acc_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1e0140acc_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140cb9_TraitSubIdentExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e0144581_Fn> _field_method = jule::Ptr<_1e0144581_Fn>();
	jule::Ptr<_1e0567d06_Trait> _field_trt = jule::Ptr<_1e0567d06_Trait>();
	

	_1e0140cb9_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1e0140cb9_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1e0140cb9_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e01411d7_StructSubIdentExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0e7ce9b_Data> _field_expr = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_expr_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1e01457c4_FnIns> _field_method = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e01087ba_FieldIns> _field_field = jule::Ptr<_1e01087ba_FieldIns>();
	

	_1e01411d7_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1e01411d7_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1e01411d7_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e01413c4_StructStaticIdentExprModel {
	jule::Ptr<_1e010a05d_StructIns> _field_structure = jule::Ptr<_1e010a05d_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e01457c4_FnIns> _field_method = jule::Ptr<_1e01457c4_FnIns>();
	

	_1e01413c4_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1e01413c4_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1e01413c4_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e01415b1_ArrayExprModel {
	jule::Ptr<_1ed7877a9_Arr> _field_kind = jule::Ptr<_1ed7877a9_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();
	

	_1e01415b1_ArrayExprModel(void) = default;

	inline bool operator==(_1e01415b1_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1e01415b1_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1e014179d_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();
	

	_1e014179d_CommonIdentExprModel(void) = default;

	inline bool operator==(_1e014179d_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e014179d_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e014198a_CommonSubIdentExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_expr_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	

	_1e014198a_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1e014198a_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e014198a_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1e0141b77_TupleExprModel {
	jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _field_datas = jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>();
	

	_1e0141b77_TupleExprModel(void) = default;

	inline bool operator==(_1e0141b77_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1e0141b77_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1e0141d64_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e0141d64_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1e0141d64_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e0141d64_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0142051_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();
	

	_1e0142051_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1e0142051_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1e0142051_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e014223d_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e014223d_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1e014223d_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e014223d_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e014242a_BuiltinNewCallExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Any _field_init = jule::Any();
	

	_1e014242a_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1e014242a_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1e014242a_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0142617_BuiltinPanicCallExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	

	_1e0142617_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1e0142617_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0142617_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0142804_BuiltinAssertCallExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();
	

	_1e0142804_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1e0142804_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1e0142804_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e01429e1_BuiltinMakeCallExprModel {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();
	

	_1e01429e1_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1e01429e1_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1e01429e1_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0142bcd_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();
	

	_1e0142bcd_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1e0142bcd_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1e0142bcd_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0142dba_BuiltinCopyCallExprModel {
	jule::Ptr<_1e0e7ce9b_Data> _field_dest = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1e0e7ce9b_Data> _field_src = jule::Ptr<_1e0e7ce9b_Data>();
	

	_1e0142dba_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1e0142dba_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src;
	}

	inline bool operator!=(_1e0142dba_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e01430a7_BuiltinErrorCallExprModel {
	jule::Ptr<_1e01457c4_FnIns> _field_func = jule::Ptr<_1e01457c4_FnIns>();
	jule::Any _field_err = jule::Any();
	

	_1e01430a7_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1e01430a7_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1e01430a7_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1e0140ea6_SizeofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e0140ea6_SizeofExprModel(void) = default;

	inline bool operator==(_1e0140ea6_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0140ea6_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1e0143717_AlignofExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e0143717_AlignofExprModel(void) = default;

	inline bool operator==(_1e0143717_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0143717_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1e0143904_RuneExprModel {
	jule::I32 _field_code = jule::I32();
	

	_1e0143904_RuneExprModel(void) = default;

	inline bool operator==(_1e0143904_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1e0143904_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1e0143ae1_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e0143ae1_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1e0143ae1_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0143ae1_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1e0143ccd_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();
	

	_1e0143ccd_BackendEmitExprModel(void) = default;

	inline bool operator==(_1e0143ccd_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1e0143ccd_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1e0143eba_FreeExprModel {
	jule::Any _field_expr = jule::Any();
	

	_1e0143eba_FreeExprModel(void) = default;

	inline bool operator==(_1e0143eba_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0143eba_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1e01441a7_RetType {
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_idents = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	

	_1e01441a7_RetType(void) = default;

	inline bool operator==(_1e01441a7_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1e01441a7_RetType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0144938_ParamIns> _1e0114c6b_instance(jule::Ptr<_1e0144394_Param>);
inline jule::Bool _1e01184ab_is_self(_1e0144394_Param*);
inline jule::Bool _1e01202c6_is_ref(_1e0144394_Param*);
struct _1e0144394_Param {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Str _field_ident = jule::Str();
	

	_1e0144394_Param(void) = default;

	inline bool operator==(_1e0144394_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e0144394_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0105894_is_void(_1e0144581_Fn*);
inline jule::Bool _1e0123d35_is_method(_1e0144581_Fn*);
inline jule::Bool _1e00a944c_is_entry_point(_1e0144581_Fn*);
inline jule::Bool _1e00e98aa_is_init(_1e0144581_Fn*);
inline jule::Bool _1e00eb824_is_anon(_1e0144581_Fn*);
inline jule::Bool _1e010461d_any_var(_1e0144581_Fn*);
inline jule::Ptr<_1e01457c4_FnIns> _1e01080d3_instance_force(jule::Ptr<_1e0144581_Fn>);
inline jule::Ptr<_1e01457c4_FnIns> _1e01098ba_instance(jule::Ptr<_1e0144581_Fn>);
inline jule::Ptr<_1e01457c4_FnIns> _1e012185a_append_instance(_1e0144581_Fn*, jule::Ptr<_1e01457c4_FnIns>&);
struct _1e0144581_Fn {
	jule::Ptr<_1e0e1b3bd_Sema> _field_sema = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>();
	jule::Ptr<_1e01441a7_RetType> _field_result = jule::Ptr<_1e01441a7_RetType>();
	jule::Slice<jule::Ptr<_1e0144394_Param>> _field_params = jule::Slice<jule::Ptr<_1e0144394_Param>>();
	jule::Ptr<_1e010261b_Struct> _field_owner = jule::Ptr<_1e010261b_Struct>();
	jule::Slice<jule::Ptr<_1e01457c4_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1e01457c4_FnIns>>();
	

	_1e0144581_Fn(void) = default;

	inline bool operator==(_1e0144581_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1e0144581_Fn _other) { return !this->operator==(_other); }


};
inline jule::Str _1e0144d12_to_str(_1e0144938_ParamIns*);
struct _1e0144938_ParamIns {
	jule::Ptr<_1e0144394_Param> _field_decl = jule::Ptr<_1e0144394_Param>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1e0144938_ParamIns(void) = default;

	inline bool operator==(_1e0144938_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e0144938_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1e0145b37_to_str(_1e01457c4_FnIns*);
inline jule::Bool _1e0145e45_equals(jule::Ptr<_1e01457c4_FnIns>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _1e01462db_types(_1e01457c4_FnIns*);
inline jule::Bool _1e0146550_is_builtin(_1e01457c4_FnIns*);
inline jule::Bool _1e01467b4_is_anon(_1e01457c4_FnIns*);
inline jule::Bool _1e0146ac2_same(_1e01457c4_FnIns*, jule::Ptr<_1e01457c4_FnIns>);
inline jule::Str _1e0146dd0_get_kind_str(_1e01457c4_FnIns*, jule::Bool);
struct _1e01457c4_FnIns {
	jule::Ptr<_1e010a05d_StructIns> _field_owner = jule::Ptr<_1e010a05d_StructIns>();
	jule::Ptr<_1e0144581_Fn> _field_decl = jule::Ptr<_1e0144581_Fn>();
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>();
	jule::Slice<jule::Ptr<_1e0144938_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1e0144938_ParamIns>>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_result = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	jule::Ptr<_1e01480ac_ReferenceStack> _field_refers = jule::Ptr<_1e01480ac_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	

	_1e01457c4_FnIns(void) = default;

	inline bool operator==(_1e01457c4_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_refers == _other._field_refers &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1e01457c4_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e01480ac_ReferenceStack> static__1e01483a9_new(void);
inline jule::I32 _1e014873e_len(_1e01480ac_ReferenceStack*);
inline jule::Any _1e0148a4c_at(_1e01480ac_ReferenceStack*, jule::I32);
inline void _1e0148cc2_push(_1e01480ac_ReferenceStack*, jule::Any);
inline jule::Bool _1ad2379a3_exist(_1e01480ac_ReferenceStack*, jule::Ptr<_1e01457c4_FnIns>);
inline jule::Bool _1ad24c930_exist(_1e01480ac_ReferenceStack*, jule::Ptr<_1e0e366e6_Var>);
inline jule::Bool _1ad2d1ab3_exist(_1e01480ac_ReferenceStack*, jule::Ptr<_1e010a05d_StructIns>);
inline jule::Bool _1ad5ce9a4_exist(_1e01480ac_ReferenceStack*, jule::Ptr<_1e0567d06_Trait>);
struct _1e01480ac_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();
	

	_1e01480ac_ReferenceStack(void) = default;

	inline bool operator==(_1e01480ac_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1e01480ac_ReferenceStack _other) { return !this->operator==(_other); }


};
struct _1e0149487_Pass {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_text = jule::Str();
	

	_1e0149487_Pass(void) = default;

	inline bool operator==(_1e0149487_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1e0149487_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e014d821_SymbolBuilder> _1e014ddd7_get_root(jule::Ptr<_1e014d821_SymbolBuilder>);
inline void _1e014e2a0_push_err(_1e014d821_SymbolBuilder*, jule::Ptr<_1dd9941e0_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e014e668_push_err_text(_1e014d821_SymbolBuilder*, jule::Ptr<_1dd9941e0_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1e014e987_push_suggestion(_1e014d821_SymbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e014ed61_check_cpp_use_decl_path(_1e014d821_SymbolBuilder*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e015016e_build_cpp_header_import(_1e014d821_SymbolBuilder*, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e015048d_build_std_import(_1e014d821_SymbolBuilder*, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e015079b_build_ident_import(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0150aa9_build_import(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Bool _1e0150dd9_check_duplicate_use_decl(_1e014d821_SymbolBuilder*, jule::Ptr<_1e0e13272_ImportInfo>&);
inline void _1e0151219_impl_import_selections(_1e014d821_SymbolBuilder*, jule::Ptr<_1e0e13272_ImportInfo>&, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Str _1e0151527_get_as_link_path(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Str);
inline void _1e01518e0_push_cycle_error(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e014d821_SymbolBuilder>&, jule::Str, jule::Str&);
inline void _1e0151ca8_push_cross_cycle_error(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e014d821_SymbolBuilder>&, jule::Ptr<_1e0e13272_ImportInfo>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1e0152160_check_import_cycles(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e0e13272_ImportInfo>, jule::Ptr<_1e013aa3e_UseDecl>&);
inline void _1e015254a_check_package_accessibility(_1e014d821_SymbolBuilder*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1e0152913_import_package(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e0e13272_ImportInfo>&, jule::Ptr<_1e013aa3e_UseDecl>&);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0152c21_import_use_decl(jule::Ptr<_1e014d821_SymbolBuilder>, jule::Ptr<_1e013aa3e_UseDecl>&);
inline void _1e0152dec_import_use_decls(jule::Ptr<_1e014d821_SymbolBuilder>);
inline void _1e0153172_append_node(_1e014d821_SymbolBuilder*, _1e00e2ead_Node&);
inline void _1e015334d_append_nodes(_1e014d821_SymbolBuilder*);
inline void _1e01535c3_push_directive_pass(_1e014d821_SymbolBuilder*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e015379e_append_top_directives(_1e014d821_SymbolBuilder*);
inline void _1e015397a_build(jule::Ptr<_1e014d821_SymbolBuilder>);
struct _1e014d821_SymbolBuilder {
	jule::Ptr<_1e014d821_SymbolBuilder> _field_owner = jule::Ptr<_1e014d821_SymbolBuilder>();
	jule::Trait<_1e0e10a00_Importer> _field_importer = jule::Trait<_1e0e10a00_Importer>();
	jule::Slice<_1dd65aa00_Log> _field_errors = jule::Slice<_1dd65aa00_Log>();
	jule::Ptr<_1e00e2760_Ast> _field_ast = jule::Ptr<_1e00e2760_Ast>();
	jule::Ptr<_1e0e77eeb_SymbolTable> _field_table = jule::Ptr<_1e0e77eeb_SymbolTable>();
	

	_1e014d821_SymbolBuilder(void) = default;

	inline bool operator==(_1e014d821_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1e014d821_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Str _1e01a1148_to_str(_1e0567d06_Trait*);
inline jule::Bool _1e01a2b72_equals(jule::Ptr<_1e0567d06_Trait>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1e01a46ac_is_builtin(_1e0567d06_Trait*);
inline jule::Ptr<_1e0144581_Fn> _1e01ccd78_find_method(_1e0567d06_Trait*, jule::Str);
struct _1e0567d06_Trait {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e0144581_Fn>>();
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1e010261b_Struct>>();
	

	_1e0567d06_Trait(void) = default;

	inline bool operator==(_1e0567d06_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1e0567d06_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e02006a3_auto_expr(_1e04ed4c8_EnumItem*);
struct _1e04ed4c8_EnumItem {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1e0e7e024_Value> _field_value = jule::Ptr<_1e0e7e024_Value>();
	

	_1e04ed4c8_EnumItem(void) = default;

	inline bool operator==(_1e04ed4c8_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1e04ed4c8_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e0232e33_to_str(_1e057b8b9_Enum*);
inline jule::Bool _1e03d2555_equals(jule::Ptr<_1e057b8b9_Enum>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Ptr<_1e04ed4c8_EnumItem> _1e03dbedd_find_item(_1e057b8b9_Enum*, jule::Str);
struct _1e057b8b9_Enum {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>>();
	

	_1e057b8b9_Enum(void) = default;

	inline bool operator==(_1e057b8b9_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1e057b8b9_Enum _other) { return !this->operator==(_other); }


};
struct _1e05b1316_TypeEnumItem {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	

	_1e05b1316_TypeEnumItem(void) = default;

	inline bool operator==(_1e05b1316_TypeEnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1e05b1316_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1e04aae14_to_str(_1e04c643a_TypeEnum*);
inline jule::Bool _1e04d5845_equals(jule::Ptr<_1e04c643a_TypeEnum>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Ptr<_1e05b1316_TypeEnumItem> _1e0507aed_find_item(_1e04c643a_TypeEnum*, jule::Str);
struct _1e04c643a_TypeEnum {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>> _field_items = jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>>();
	

	_1e04c643a_TypeEnum(void) = default;

	inline bool operator==(_1e04c643a_TypeEnum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1e04c643a_TypeEnum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e05711d8_is_trait_impl(_1e0159a3b_Impl*);
inline jule::Bool _1e0572618_is_struct_impl(_1e0159a3b_Impl*);
struct _1e0159a3b_Impl {
	jule::Ptr<_1e01253db_TypeDecl> _field_base = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1e01253db_TypeDecl> _field_dest = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e0144581_Fn>>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_statics = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	

	_1e0159a3b_Impl(void) = default;

	inline bool operator==(_1e0159a3b_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1e0159a3b_Impl _other) { return !this->operator==(_other); }


};
struct _1e0dd6322_Scope {
	jule::Ptr<_1e0dd6322_Scope> _field_parent = jule::Ptr<_1e0dd6322_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();
	

	_1e0dd6322_Scope(void) = default;

	inline bool operator==(_1e0dd6322_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1e0dd6322_Scope _other) { return !this->operator==(_other); }


};
struct _1e0ddcc41_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	

	_1e0ddcc41_If(void) = default;

	inline bool operator==(_1e0ddcc41_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0ddcc41_If _other) { return !this->operator==(_other); }


};
struct _1e0d877bd_Else {
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	

	_1e0d877bd_Else(void) = default;

	inline bool operator==(_1e0d877bd_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0d877bd_Else _other) { return !this->operator==(_other); }


};
struct _1e0d879aa_Conditional {
	jule::Slice<jule::Ptr<_1e0ddcc41_If>> _field_elifs = jule::Slice<jule::Ptr<_1e0ddcc41_If>>();
	jule::Ptr<_1e0d877bd_Else> _field_default = jule::Ptr<_1e0d877bd_Else>();
	

	_1e0d879aa_Conditional(void) = default;

	inline bool operator==(_1e0d879aa_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e0d879aa_Conditional _other) { return !this->operator==(_other); }


};
struct _1e0d985ae_InfIter {
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	

	_1e0d985ae_InfIter(void) = default;

	inline bool operator==(_1e0d985ae_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0d985ae_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0dc74de_is_while_next(_1e0d9879b_WhileIter*);
struct _1e0d9879b_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	

	_1e0d9879b_WhileIter(void) = default;

	inline bool operator==(_1e0d9879b_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1e0d9879b_WhileIter _other) { return !this->operator==(_other); }


};
struct _1e0dc6664_RangeIter {
	jule::Ptr<_1e0e7ce9b_Data> _field_expr = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	jule::Ptr<_1e0e366e6_Var> _field_key_a = jule::Ptr<_1e0e366e6_Var>();
	jule::Ptr<_1e0e366e6_Var> _field_key_b = jule::Ptr<_1e0e366e6_Var>();
	

	_1e0dc6664_RangeIter(void) = default;

	inline bool operator==(_1e0dc6664_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1e0dc6664_RangeIter _other) { return !this->operator==(_other); }


};
struct _1e0dc6851_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();
	

	_1e0dc6851_ContSt(void) = default;

	inline bool operator==(_1e0dc6851_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1e0dc6851_ContSt _other) { return !this->operator==(_other); }


};
struct _1e0dea413_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();
	

	_1e0dea413_BreakSt(void) = default;

	inline bool operator==(_1e0dea413_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1e0dea413_BreakSt _other) { return !this->operator==(_other); }


};
struct _1e0dea600_Label {
	jule::Str _field_ident = jule::Str();
	

	_1e0dea600_Label(void) = default;

	inline bool operator==(_1e0dea600_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e0dea600_Label _other) { return !this->operator==(_other); }


};
struct _1e0dea7dc_GotoSt {
	jule::Str _field_ident = jule::Str();
	

	_1e0dea7dc_GotoSt(void) = default;

	inline bool operator==(_1e0dea7dc_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1e0dea7dc_GotoSt _other) { return !this->operator==(_other); }


};
struct _1e0dea9c9_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();
	

	_1e0dea9c9_Postfix(void) = default;

	inline bool operator==(_1e0dea9c9_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e0dea9c9_Postfix _other) { return !this->operator==(_other); }


};
struct _1e0deabb6_Assign {
	jule::Ptr<_1e0116dc2_OperandExprModel> _field_l = jule::Ptr<_1e0116dc2_OperandExprModel>();
	jule::Ptr<_1e0116dc2_OperandExprModel> _field_r = jule::Ptr<_1e0116dc2_OperandExprModel>();
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0deabb6_Assign(void) = default;

	inline bool operator==(_1e0deabb6_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e0deabb6_Assign _other) { return !this->operator==(_other); }


};
struct _1e0deada3_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();
	

	_1e0deada3_MultiAssign(void) = default;

	inline bool operator==(_1e0deada3_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1e0deada3_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0dc849b_is_generic_type_match(_1e0deb090_Match*);
struct _1e0deb090_Match {
	jule::Ptr<_1e0e7ce9b_Data> _field_expr = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1e0deb4ad_Case>> _field_cases = jule::Slice<jule::Ptr<_1e0deb4ad_Case>>();
	jule::Ptr<_1e0deb4ad_Case> _field_default = jule::Ptr<_1e0deb4ad_Case>();
	

	_1e0deb090_Match(void) = default;

	inline bool operator==(_1e0deb090_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1e0deb090_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0dc8c2c_is_default(_1e0deb4ad_Case*);
struct _1e0deb4ad_Case {
	jule::Ptr<_1e0deb090_Match> _field_owner = jule::Ptr<_1e0deb090_Match>();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _field_exprs = jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>();
	jule::Ptr<_1e0deb4ad_Case> _field_next = jule::Ptr<_1e0deb4ad_Case>();
	

	_1e0deb4ad_Case(void) = default;

	inline bool operator==(_1e0deb4ad_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1e0deb4ad_Case _other) { return !this->operator==(_other); }


};
struct _1e0deb69a_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();
	

	_1e0deb69a_FallSt(void) = default;

	inline bool operator==(_1e0deb69a_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1e0deb69a_FallSt _other) { return !this->operator==(_other); }


};
struct _1e0deb887_RetSt {
	jule::Ptr<_1e01457c4_FnIns> _field_func = jule::Ptr<_1e01457c4_FnIns>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	jule::Any _field_expr = jule::Any();
	

	_1e0deb887_RetSt(void) = default;

	inline bool operator==(_1e0deb887_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1e0deb887_RetSt _other) { return !this->operator==(_other); }


};
struct _1e0deba74_ScopeLabel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0dea600_Label> _field_label = jule::Ptr<_1e0dea600_Label>();
	jule::I32 _field_pos = jule::I32();
	jule::Ptr<_1e0debe4d_ScopeChecker> _field_scope = jule::Ptr<_1e0debe4d_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();
	

	_1e0deba74_ScopeLabel(void) = default;

	inline bool operator==(_1e0deba74_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1e0deba74_ScopeLabel _other) { return !this->operator==(_other); }


};
struct _1e0debc61_ScopeGoto {
	jule::Ptr<_1e0131dba_GotoSt> _field_gt = jule::Ptr<_1e0131dba_GotoSt>();
	jule::Ptr<_1e0debe4d_ScopeChecker> _field_scope = jule::Ptr<_1e0debe4d_ScopeChecker>();
	jule::I32 _field_pos = jule::I32();
	

	_1e0debc61_ScopeGoto(void) = default;

	inline bool operator==(_1e0debc61_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1e0debc61_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0d81421_find_package(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0d9b54b_select_package(_1e0debe4d_ScopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
inline jule::Ptr<_1e0e366e6_Var> _1e0dec13a_find_var(_1e0debe4d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0dec3c1_find_type_alias(_1e0debe4d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0dec778_find_struct(_1e0debe4d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0decb30_find_fn(_1e0debe4d_ScopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0dece3d_find_trait(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0ded24b_find_enum(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0ded559_find_type_enum(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Bool _1e0ded889_is_unsafe(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Bool _1e0dedaed_is_root(_1e0debe4d_ScopeChecker*);
inline void _1e0dedcc9_stop(_1e0debe4d_ScopeChecker*);
inline jule::Bool _1e0dee03d_stopped(_1e0debe4d_ScopeChecker*);
inline jule::Bool _1e0dee2a2_is_deferred(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0dee516_get_root(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0dee77a_get_hard_root(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Ptr<_1e0dea600_Label> _1e0deea88_find_label(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0deed96_find_label_scope(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Str);
inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0e001a4_find_label_all(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Bool _1e0e0055b_is_duplicated_ident(_1e0debe4d_ScopeChecker*, jule::Uintptr, jule::Str);
inline void _1e0e007d1_check_var_decl(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0135dd0_VarDecl>);
inline void _1e0e00a56_check_type_alias_decl(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0139653_TypeAliasDecl>);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e00cba_get_child(_1e0debe4d_ScopeChecker*);
inline void _1e0e01183_check_child_ssc(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013340a_ScopeTree>&, jule::Ptr<_1e0dd6322_Scope>&, jule::Ptr<_1e0debe4d_ScopeChecker>&);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e0153a_check_child_sc(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013340a_ScopeTree>&, jule::Ptr<_1e0debe4d_ScopeChecker>&);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e01848_check_child(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013340a_ScopeTree>&);
inline void _1e0e01abd_check_anon_scope(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013340a_ScopeTree>);
inline void _1e0e01ddc_process_error_call(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>&, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e02162_check_expr(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0128b3c_Expr>);
inline void _1e0e023d7_check_co_expr(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e012a369_CoExpr>);
inline jule::Ptr<_1e0ddcc41_If> _1e0e026e5_check_if(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0138652_If>);
inline jule::Ptr<_1e0d877bd_Else> _1e0e02a03_check_else(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0138a09_Else>);
inline void _1e0e02c78_check_conditional(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0138e7c_Conditional>);
inline void _1e0e031da_check_iter_scope_ssc(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e013340a_ScopeTree>, jule::Ptr<_1e0dd6322_Scope>&, jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e0363b_check_iter_scope_sc(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e013340a_ScopeTree>, jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e039e3_check_iter_scope(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Uintptr, jule::Ptr<_1e013340a_ScopeTree>&);
inline void _1e0e03c68_check_inf_iter(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0136809_Iter>&);
inline void _1e0e03edd_check_while_iter(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0136809_Iter>&);
inline void _1e0e04263_check_range_iter(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0136809_Iter>&);
inline void _1e0e044d8_check_iter(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0136809_Iter>);
inline jule::Bool _1e0e047e6_check_valid_cont_label(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Uintptr);
inline jule::Bool _1e0e04b26_check_valid_break_label(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Uintptr);
inline jule::Ptr<_1e0dc6851_ContSt> _1e0e04e45_check_cont_valid_scope(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e01381ce_ContSt>);
inline void _1e0e051ba_check_cont(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e01381ce_ContSt>);
inline void _1e0e05440_check_label(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0131a13_LabelSt>);
inline void _1e0e056b5_push_goto(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0131dba_GotoSt>);
inline void _1e0e0593a_check_postfix(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0132d00_AssignSt>);
inline jule::Bool _1e0e05c48_is_new_assign_ident(_1e0debe4d_ScopeChecker*, jule::Str);
inline jule::Bool _1e0e061bb_check_structure_assign_op(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e010a05d_StructIns>&, jule::Ptr<_1e0132d00_AssignSt>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e06452_check_single_assign(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0132d00_AssignSt>&);
inline void _1e0e06991___process_end_part_of_multi_assign(_1e0debe4d_ScopeChecker*, jule::Ptr<_1e0deada3_MultiAssign>, jule::Ptr<_1e0132d00_AssignSt>, jule::Ptr<_1e01327b1_AssignLeft>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1e0e7ce9b_Data>);
inline void _1e0e06c16_check_ret_multi_assign(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0132d00_AssignSt>&);
inline void _1e0e06e8b_check_multi_assign(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0132d00_AssignSt>&);
inline void _1e0e07211_check_assign_st(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0132d00_AssignSt>);
inline jule::Ptr<_1e0dd6322_Scope> _1e0e075b8_check_case_scope(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0deb4ad_Case>&, jule::Ptr<_1e013340a_ScopeTree>&);
inline jule::Ptr<_1e0deb4ad_Case> _1e0e07ab3_check_case(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0deb090_Match>, jule::I32, jule::Ptr<_1e0139ac6_Case>, jule::Ptr<_1e0e7ce9b_Data>);
inline void _1e0e07e7b_check_cases(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013a29c_MatchCase>&, jule::Ptr<_1e0deb090_Match>, jule::Ptr<_1e0e7ce9b_Data>);
inline jule::Ptr<_1e0deb4ad_Case> _1e0e08333_check_default(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0deb090_Match>, jule::Ptr<_1e0138a09_Else>);
inline void _1e0e085a8_check_comptime_panic(_1e0debe4d_ScopeChecker*, jule::Ptr<_1e0dd6322_Scope>&);
inline void _1e0e088c7_push_type_match(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0deb090_Match>, jule::Ptr<_1e013a29c_MatchCase>&);
inline void _1e0e08b4c_check_type_match(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013a29c_MatchCase>&);
inline void _1e0e08dc2_check_common_match(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013a29c_MatchCase>&);
inline void _1e0e09147_check_match(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013a29c_MatchCase>);
inline void _1e0e093bc_check_fall(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e01321a6_FallSt>);
inline jule::Ptr<_1e0dea413_BreakSt> _1e0e096ca_check_break_with_label(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0137d27_BreakSt>);
inline jule::Ptr<_1e0dea413_BreakSt> _1e0e099d8_check_plain_break(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0137d27_BreakSt>);
inline void _1e0e09c5d_check_break(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0137d27_BreakSt>);
inline void _1e0e09ed3_check_ret(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0136287_RetSt>);
inline void _1e0e0a258_check_use_expr(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e0128ee4_UseExpr>);
inline void _1e0e0a4cd_check_node(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Any&);
inline void _1e0e0a6a9_check_result(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline void _1e0e0a885_check_tree(jule::Ptr<_1e0debe4d_ScopeChecker>);
inline void _1e0e0aba4_check_goto(_1e0debe4d_ScopeChecker*, jule::Ptr<_1e0debc61_ScopeGoto>&, jule::Ptr<_1e0deba74_ScopeLabel>&);
inline void _1e0e0ad80_check_gotos(_1e0debe4d_ScopeChecker*);
inline void _1e0e0b05b_check_labels(_1e0debe4d_ScopeChecker*);
inline void _1e0e0b237_check_vars(_1e0debe4d_ScopeChecker*);
inline void _1e0e0b413_check_aliases(_1e0debe4d_ScopeChecker*);
inline void _1e0e0b732_check(jule::Ptr<_1e0debe4d_ScopeChecker>, jule::Ptr<_1e013340a_ScopeTree>&, jule::Ptr<_1e0dd6322_Scope>&);
inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0e0b996_new_child_checker(jule::Ptr<_1e0debe4d_ScopeChecker>);
struct _1e0debe4d_ScopeChecker {
	jule::Ptr<_1dd9941e0_Token> _field_called_from = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Ptr<_1e01457c4_FnIns> _field_owner = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e0debe4d_ScopeChecker> _field_parent = jule::Ptr<_1e0debe4d_ScopeChecker>();
	jule::I32 _field_child_index = jule::I32();
	jule::Ptr<_1e0e77eeb_SymbolTable> _field_table = jule::Ptr<_1e0e77eeb_SymbolTable>();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	jule::Ptr<_1e013340a_ScopeTree> _field_tree = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Ptr<_1e01457c4_FnIns> _field_result = jule::Ptr<_1e01457c4_FnIns>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_1e0deba74_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e0deba74_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e0debc61_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e0debc61_ScopeGoto>>>();
	jule::I32 _field_i = jule::I32();
	

	_1e0debe4d_ScopeChecker(void) = default;

	inline bool operator==(_1e0debe4d_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1e0debe4d_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1e0e0ca30_check_cdef(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0cca5_check_typedef(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0d02a_check_derive(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0d2a0_check_namespace(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0d525_check_deprecated(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0d79a_check_test(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0da20_check_directive(_1e0e0c5e0_DirectiveChecker*, jule::Ptr<_1e0124e35_Directive>&);
inline void _1e0e0dbeb_check(_1e0e0c5e0_DirectiveChecker*);
struct _1e0e0c5e0_DirectiveChecker {
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e0124e35_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1e0124e35_Directive>>>();
	jule::Any _field_o = jule::Any();
	

	_1e0e0c5e0_DirectiveChecker(void) = default;

	inline bool operator==(_1e0e0c5e0_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1e0e0c5e0_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1378e_find_package(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e13a9c_select_package(_1e0e13272_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
inline jule::Ptr<_1e0e366e6_Var> _1e0e13e54_find_var(_1e0e13272_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e1430b_find_type_alias(_1e0e13272_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0e146b3_find_struct(_1e0e13272_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0e14a6a_find_fn(_1e0e13272_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0e14d78_find_trait(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0e15186_find_enum(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e15494_find_type_enum(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Bool _1e0e158b2_is_lookupable(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Bool _1e0e15bc0_exist_ident(_1e0e13272_ImportInfo*, jule::Str);
inline jule::Bool _1e0e15e56_is_accessible_via_selection(_1e0e13272_ImportInfo*);
struct _1e0e13272_ImportInfo {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_selected = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Ptr<_1e0e16253_Package> _field_package = jule::Ptr<_1e0e16253_Package>();
	jule::I32 _field_mod_id = jule::I32();
	

	_1e0e13272_ImportInfo(void) = default;

	inline bool operator==(_1e0e13272_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1e0e13272_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1672b_find_package(_1e0e16253_Package*, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e16a39_select_package(_1e0e16253_Package*, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
inline jule::Ptr<_1e0e366e6_Var> _1e0e16de1_find_var(_1e0e16253_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e17298_find_type_alias(_1e0e16253_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0e17650_find_struct(_1e0e16253_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0e17a07_find_fn(_1e0e16253_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0e17d15_find_trait(_1e0e16253_Package*, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0e18123_find_enum(_1e0e16253_Package*, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e18431_find_type_enum(_1e0e16253_Package*, jule::Str);
struct _1e0e16253_Package {
	jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>();
	

	_1e0e16253_Package(void) = default;

	inline bool operator==(_1e0e16253_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1e0e16253_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1b8da_find_package(_1e0e1b3bd_Sema*, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1bbe8_select_package(_1e0e1b3bd_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
inline jule::Ptr<_1e0e366e6_Var> _1e0e1c0a0_find_var(_1e0e1b3bd_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e1c457_find_type_alias(_1e0e1b3bd_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0e1c80e_find_struct(_1e0e1b3bd_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0e1cbb6_find_fn(_1e0e1b3bd_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0e1cec4_find_trait(_1e0e1b3bd_Sema*, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0e1d2d2_find_enum(_1e0e1b3bd_Sema*, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e1d5e0_find_type_enum(_1e0e1b3bd_Sema*, jule::Str);
inline jule::Bool _1e0e1d9b9_is_flag(_1e0e1b3bd_Sema*, jule::I32);
inline void _1e0e1dc3e_set_current_file(_1e0e1b3bd_Sema*, jule::Ptr<_1e0e77eeb_SymbolTable>);
inline void _1e0e1e107_push_err(_1e0e1b3bd_Sema*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e1e426_push_suggestion(_1e0e1b3bd_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e0e1e7cd_is_accessible_define(_1e0e1b3bd_Sema*, jule::Bool, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0e1ec2e_is_duplicated_ident(_1e0e1b3bd_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1e0e2004d_check_directives(jule::Ptr<_1e0e1b3bd_Sema>, jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Any);
inline jule::Bool _1e0e2049e_check_generic_quantity(_1e0e1b3bd_Sema*, jule::I32, jule::I32, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0e20878_is_duplicated_import_selection(_1e0e1b3bd_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1e0e20c41_get_import_def(_1e0e1b3bd_Sema*, jule::Str, jule::Ptr<_1e0e13272_ImportInfo>&);
inline jule::Bool _1e0e21071_check_import_selections(_1e0e1b3bd_Sema*, jule::Ptr<_1e0e13272_ImportInfo>&);
inline jule::Bool _1e0e213b2_is_use_alias_duplication(_1e0e1b3bd_Sema*, jule::Ptr<_1e0e13272_ImportInfo>&);
inline jule::Bool _1e0e216d1_check_import(_1e0e1b3bd_Sema*, jule::Ptr<_1e0e13272_ImportInfo>&);
inline void _1e0e218ac_check_imports(_1e0e1b3bd_Sema*);
inline void _1e0e21a88_impl_file_impls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e21c64_impl_impls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e21e40_check_enums(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1e0e22391_check_type_with_refers(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed780cd0_TypeSymbol>&, jule::Trait<_1ed7974de_Lookup>, jule::Ptr<_1ed78915c_Referencer>);
inline jule::Bool _1e0e22748_check_type(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed780cd0_TypeSymbol>&, jule::Trait<_1ed7974de_Lookup>);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e22bbb_build_type_with_generics(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01253db_TypeDecl>&, jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>, jule::Ptr<_1e01480ac_ReferenceStack>);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e22eda_build_type(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01253db_TypeDecl>&);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e232e8_select_type(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01253db_TypeDecl>&);
inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23749_evalpd(jule::Ptr<_1e0e1b3bd_Sema>, jule::Trait<_1ed7974de_Lookup>, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e366e6_Var>);
inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23b01_evalp(jule::Ptr<_1e0e1b3bd_Sema>, jule::Trait<_1ed7974de_Lookup>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23e0e_eval(jule::Ptr<_1e0e1b3bd_Sema>, jule::Trait<_1ed7974de_Lookup>);
inline jule::Bool _1e0e24409_check_assign_type(jule::Ptr<_1e0e1b3bd_Sema>, jule::Bool, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0e2487c_check_type_compatibility(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e24c67_build_non_generic_type_kind(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01253db_TypeDecl>&, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>&);
inline void _1e0e25020_build_fn_non_generic_type_kinds(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Ptr<_1e01457c4_FnIns> _1e0e25361_get_trait_check_fn_kind(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline jule::Bool _1e0e25680_reload_fn_ins_types(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Bool _1e0e25b14_check_ref_validity_for_init_expr(jule::Ptr<_1e0e1b3bd_Sema>, jule::Bool, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1e0e2620d_check_validity_for_init_expr(jule::Ptr<_1e0e1b3bd_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1e0e265b5_check_type_alias_decl_kind(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed77ae84_TypeAlias>&, jule::Trait<_1ed7974de_Lookup>);
inline void _1e0e268e5_check_type_alias_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed77ae84_TypeAlias>&, jule::Trait<_1ed7974de_Lookup>);
inline void _1e0e26b8c_check_type_alias_decl_dup(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1ed77ae84_TypeAlias>&);
inline jule::Bool _1e0e26e12_check_type_alias_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1ace6dae6_check_enum_items_dup(_1e0e1b3bd_Sema*, jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>>);
inline void _1ace7a152_check_enum_items_dup(_1e0e1b3bd_Sema*, jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>>);
inline void _1e0e2740c_check_enum_items_str(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e057b8b9_Enum>&);
inline void _1e0e27682_check_enum_items_int(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e057b8b9_Enum>&);
inline void _1e0e27907_check_enum_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e057b8b9_Enum>&);
inline void _1e0e27b7c_check_type_enum_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e04c643a_TypeEnum>&);
inline jule::Bool _1e0e27de1_check_enum_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1e0e28155_check_type_enum_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1e0e28463_check_decl_generics(_1e0e1b3bd_Sema*, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>&);
inline jule::Bool _1e0e28793_check_fn_decl_params_dup(_1e0e1b3bd_Sema*, jule::Ptr<_1e0144581_Fn>&);
inline jule::Bool _1e0e28ad4_check_fn_decl_result_dup(_1e0e1b3bd_Sema*, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e28d8c_check_fn_decl_prototype(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e29145_check_trait_decl_method(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e293ed_check_trait_decl_methods(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0567d06_Trait>&);
inline void _1e0e29684_check_trait_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0567d06_Trait>&);
inline jule::Bool _1e0e298e8_check_trait_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1e0e29cc2_check_trait_impl_methods(_1e0e1b3bd_Sema*, jule::Ptr<_1e0567d06_Trait>&, jule::Ptr<_1e0159a3b_Impl>&);
inline jule::Bool _1e0e2a18a_impl_to_struct(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&, jule::Ptr<_1e0159a3b_Impl>&);
inline void _1e0e2a410_impl_trait(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0159a3b_Impl>&);
inline void _1e0e2a685_impl_struct(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0159a3b_Impl>&);
inline void _1e0e2a90a_impl_impl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0159a3b_Impl>&);
inline void _1e0e2ac29_check_var_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0e366e6_Var>&, jule::Trait<_1ed7974de_Lookup>);
inline void _1e0e2ae9e_check_global_var_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0e366e6_Var>&);
inline jule::Bool _1e0e2b213_check_global_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1e0e2b5dc_check_struct_trait_impl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&, jule::Ptr<_1e0567d06_Trait>&);
inline jule::Bool _1e0e2b90b_check_struct_impls(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&);
inline jule::Bool _1e0e2bc19_check_struct_fields(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&);
inline void _1e0e2be8e_check_struct_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&);
inline jule::Bool _1e0e2c203_check_struct_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e2c478_check_fn_decl(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline jule::Bool _1e0e2c6dc_check_fn_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e2caa5_push_cycle_error(_1e0e1b3bd_Sema*, jule::Ptr<_1e010261b_Struct>&, jule::Ptr<_1e010261b_Struct>&, jule::Str&);
inline jule::Bool _1e0e2d006_check_cross_cycle(_1e0e1b3bd_Sema*, jule::Ptr<_1e010261b_Struct>&, jule::Ptr<_1e010261b_Struct>&, jule::Str&);
inline jule::Bool _1e0e2d48a_check_struct_derive_illegal_cycles(_1e0e1b3bd_Sema*, jule::Str, jule::Ptr<_1e010261b_Struct>&, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e2d7ba_check_struct_ins_derive_clone(_1e0e1b3bd_Sema*, jule::Ptr<_1e010a05d_StructIns>);
inline void _1e0e2d9a7_check_package_decls(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e2dce8_check_data_for_type_inference(_1e0e1b3bd_Sema*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>&);
inline void _1e0e2e07e_check_var(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0e366e6_Var>&);
inline void _1e0e2e39d_check_type_var(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0e366e6_Var>&, jule::Trait<_1ed7974de_Lookup>);
inline void _1e0e2e579_check_global_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Ptr<_1e01457c4_FnIns> _1e0e2e931_ready_to_check_fn(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e2ec50_check_type_method(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&, jule::Ptr<_1e0144581_Fn>&);
inline jule::Ptr<_1e01457c4_FnIns> _1e0e301a1_check_struct_ins_op(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&, jule::Ptr<_1e0144581_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>);
inline jule::Bool _1e0e304ae_check_fields(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&);
inline jule::Bool _1e0e307bc_precheck_struct_ins(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1e0e30a42_check_struct_ins(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1e0e30cb7_check_type_struct(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&);
inline void _1e0e30e93_check_struct_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e3123a_check_struct_ins_operators(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010a05d_StructIns>);
inline void _1e0e314c1_precheck_struct_type(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e010261b_Struct>&);
inline void _1e0e3169c_precheck_struct_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e31922_check_rets(_1e0e1b3bd_Sema*, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1e0e31c41_check_fn_ins_sc(_1e0e1b3bd_Sema*, jule::Ptr<_1e01457c4_FnIns>&, jule::Ptr<_1e0debe4d_ScopeChecker>&);
inline void _1e0e32060_check_fn_ins_caller(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01457c4_FnIns>&, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e322d5_check_fn_ins(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1e0e3255a_check_type_fn(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e327d0_check_test_fn(_1e0e1b3bd_Sema*, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1e0e32a55_precheck_type_fn(jule::Ptr<_1e0e1b3bd_Sema>, jule::Ptr<_1e0144581_Fn>&);
inline void _1e0e32c31_precheck_fn_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e32e0c_check_fn_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e330d8_check_package_types(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e332b4_set_file_sema_fields(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e33490_set_sema_fields(jule::Ptr<_1e0e1b3bd_Sema>);
inline void _1e0e33715_check(jule::Ptr<_1e0e1b3bd_Sema>, jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&);
struct _1e0e1b3bd_Sema {
	jule::Slice<_1dd65aa00_Log> _field_errors = jule::Slice<_1dd65aa00_Log>();
	jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>();
	jule::Ptr<_1e0e77eeb_SymbolTable> _field_file = jule::Ptr<_1e0e77eeb_SymbolTable>();
	jule::I32 _field_flags = 0LL;
	

	_1e0e1b3bd_Sema(void) = default;

	inline bool operator==(_1e0e1b3bd_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1e0e1b3bd_Sema _other) { return !this->operator==(_other); }


};
inline _1e0e33abc_MissingRetChecker static__1e0e33e85_new(void);
inline jule::Bool _1e0e34260_check_conditional(_1e0e33abc_MissingRetChecker*, jule::Ptr<_1e0d879aa_Conditional>);
inline jule::Bool _1e0e3456d_check_match(_1e0e33abc_MissingRetChecker*, jule::Ptr<_1e0deb090_Match>);
inline jule::Bool _1e0e3487b_check_inf_iter(_1e0e33abc_MissingRetChecker*, jule::Ptr<_1e0d985ae_InfIter>);
inline jule::Bool _1e0e34b89_check_scope(_1e0e33abc_MissingRetChecker*, jule::Ptr<_1e0dd6322_Scope>);
inline jule::Bool _1e0e34e97_check(_1e0e33abc_MissingRetChecker*, jule::Ptr<_1e0dd6322_Scope>);
struct _1e0e33abc_MissingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked = jule::Slice<jule::Uintptr>();
	jule::Bool _field_falled = jule::Bool();
	

	_1e0e33abc_MissingRetChecker(void) = default;

	inline bool operator==(_1e0e33abc_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1e0e33abc_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1e0e3576c_IterRelation {
	jule::Ptr<_1e0e366e6_Var> _field_range = jule::Ptr<_1e0e366e6_Var>();
	

	_1e0e3576c_IterRelation(void) = default;

	inline bool operator==(_1e0e3576c_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1e0e3576c_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0e36a9d_is_initialized(_1e0e366e6_Var*);
inline jule::Bool _1e0e36d12_is_type_inferred(_1e0e366e6_Var*);
struct _1e0e366e6_Var {
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Ptr<_1e0e7e024_Value> _field_value = jule::Ptr<_1e0e7e024_Value>();
	jule::Ptr<_1e01480ac_ReferenceStack> _field_refers = jule::Ptr<_1e01480ac_ReferenceStack>();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Ptr<_1e0e3576c_IterRelation> _field_iter_relation = jule::Ptr<_1e0e3576c_IterRelation>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_depends = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	

	_1e0e366e6_Var(void) = default;

	inline bool operator==(_1e0e366e6_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_refers == _other._field_refers &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1e0e366e6_Var _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1e0e37890_dispose(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e37b37_to_str(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e37e78_logical(jule::Ptr<_1e0144581_Fn>&, jule::Str);
inline jule::Bool static__1e0e38220_eq(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e384b7_gt(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3875e_gt_eq(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e38a06_lt(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e38c9d_lt_eq(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e390de_result(jule::Ptr<_1e0144581_Fn>&, jule::Str);
inline jule::Bool static__1e0e39386_shl(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3962d_shr(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e398c5_add(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e39b6c_sub(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e39e14_div(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3a1ab_mul(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3a453_mod(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3a6ea_bit_and(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3a992_bit_or(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3ac39_bit_xor(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3b07a_unary(jule::Ptr<_1e0144581_Fn>&, jule::Str);
inline jule::Bool static__1e0e3b322_neg(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3b5b9_pos(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3b861_bit_not(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3bba2_assign(jule::Ptr<_1e0144581_Fn>&, jule::Str);
inline jule::Bool static__1e0e3be49_add_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3c1e1_sub_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3c488_div_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3c730_mul_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3c9c7_mod_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3cc6e_shl_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3d016_shr_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3d2ad_bit_or_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3d555_bit_and_assign(jule::Ptr<_1e0144581_Fn>);
inline jule::Bool static__1e0e3d7ec_bit_xor_assign(jule::Ptr<_1e0144581_Fn>);
struct _1e0e3721e_FuncPattern {
	

	_1e0e3721e_FuncPattern(void) = default;

	inline bool operator==(_1e0e3721e_FuncPattern _other) { return true; }

	inline bool operator!=(_1e0e3721e_FuncPattern _other) { return !this->operator==(_other); }


};
inline void _1e0e69284_push_err(_1e0e68e43_TypeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e0e694e8_check_trait(_1e0e68e43_TypeCompatibilityChecker*);
inline jule::Bool _1e0e6975c_check_ptr(_1e0e68e43_TypeCompatibilityChecker*);
inline jule::Bool _1e0e699c1_check_prim(_1e0e68e43_TypeCompatibilityChecker*);
inline jule::Bool _1e0e69c35_check_type_enum(_1e0e68e43_TypeCompatibilityChecker*);
inline jule::Bool _1e0e69e99_check(_1e0e68e43_TypeCompatibilityChecker*);
struct _1e0e68e43_TypeCompatibilityChecker {
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_dest = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_src = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0e68e43_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1e0e68e43_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1e0e68e43_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1e0e6a94a_push_err(_1e0e6a4d8_AssignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e0e6abae_check_validity(_1e0e6a4d8_AssignTypeChecker*);
inline jule::Bool _1e0e6ae23_check_const(_1e0e6a4d8_AssignTypeChecker*);
inline jule::Bool _1e0e6b187_is_prim(_1e0e6a4d8_AssignTypeChecker*);
inline jule::Bool _1e0e6b3eb_check_compatibility(_1e0e6a4d8_AssignTypeChecker*);
inline jule::Bool _1e0e6b660_check(_1e0e6a4d8_AssignTypeChecker*);
struct _1e0e6a4d8_AssignTypeChecker {
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_dest = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1e0e7ce9b_Data> _field_d = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0e6a4d8_AssignTypeChecker(void) = default;

	inline bool operator==(_1e0e6a4d8_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1e0e6a4d8_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1e0e6c3b9_push_generic(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::I32);
inline jule::Bool _1e0e6c694_annotate_prim(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6c9a2_annotate_slc(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6cd59_check_map_key(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6d167_annotate_map(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6d475_annotate_fn(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6d783_annotate_ptr(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6da91_annotate_sptr(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6dd9e_annotate_any(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6e1ac_annotate_kind(_1e0e6bd36_DynamicTypeAnnotation*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1e0e6e421_annotate(_1e0e6bd36_DynamicTypeAnnotation*);
struct _1e0e6bd36_DynamicTypeAnnotation {
	jule::Ptr<_1e0e7ea19_Eval> _field_e = jule::Ptr<_1e0e7ea19_Eval>();
	jule::Ptr<_1e01457c4_FnIns> _field_f = jule::Ptr<_1e01457c4_FnIns>();
	jule::Ptr<_1e0144938_ParamIns> _field_p = jule::Ptr<_1e0144938_ParamIns>();
	jule::Ptr<_1e0e7ce9b_Data> _field_a = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1ed77bbbb_TypeKind>* _field_k = nullptr;
	

	_1e0e6bd36_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1e0e6bd36_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1e0e6bd36_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1e0e70147_push_err_token(_1e0e6eae7_FnCallArgChecker*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e70466_push_err(_1e0e6eae7_FnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1e0144938_ParamIns>> _1e0e706ca_get_params(_1e0e6eae7_FnCallArgChecker*);
inline jule::Bool _1e0e709d8_check_counts(_1e0e6eae7_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>&);
inline jule::Bool _1e0e70e39_check_arg(_1e0e6eae7_FnCallArgChecker*, jule::Ptr<_1e0144938_ParamIns>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Bool _1e0e712e1_push(_1e0e6eae7_FnCallArgChecker*, jule::Ptr<_1e0144938_ParamIns>&, jule::Ptr<_1e0128b3c_Expr>);
inline jule::Bool _1e0e71698_push_variadic(_1e0e6eae7_FnCallArgChecker*, jule::Ptr<_1e0144938_ParamIns>&, jule::I32);
inline jule::Bool _1e0e719a6_check_args(_1e0e6eae7_FnCallArgChecker*, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>&);
inline jule::Bool _1e0e71c3c_check_dynamic_type_annotation(_1e0e6eae7_FnCallArgChecker*);
inline jule::Bool _1e0e71eb2_check(_1e0e6eae7_FnCallArgChecker*);
struct _1e0e6eae7_FnCallArgChecker {
	jule::Ptr<_1e0e7ea19_Eval> _field_e = jule::Ptr<_1e0e7ea19_Eval>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_args = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e01457c4_FnIns> _field_f = jule::Ptr<_1e01457c4_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();
	

	_1e0e6eae7_FnCallArgChecker(void) = default;

	inline bool operator==(_1e0e6eae7_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1e0e6eae7_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1e0e72a0c_push_err(_1e0e72501_StructLitChecker*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e72d2b_push_suggestion(_1e0e72501_StructLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e731e4_push_match(_1e0e72501_StructLitChecker*, jule::Ptr<_1e01087ba_FieldIns>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>&);
inline void _1e0e73513_check_pair(_1e0e72501_StructLitChecker*, jule::Ptr<_1e012d625_FieldExprPair>&, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>&);
inline jule::Bool _1e0e73821_ready_exprs(_1e0e72501_StructLitChecker*, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>&);
inline void _1e0e73a96_check(_1e0e72501_StructLitChecker*, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>&);
struct _1e0e72501_StructLitChecker {
	jule::Ptr<_1e0e7ea19_Eval> _field_e = jule::Ptr<_1e0e7ea19_Eval>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Ptr<_1e010a05d_StructIns> _field_s = jule::Ptr<_1e010a05d_StructIns>();
	jule::Slice<jule::Ptr<_1e0116795_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1e0116795_StructArgExprModel>>();
	

	_1e0e72501_StructLitChecker(void) = default;

	inline bool operator==(_1e0e72501_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1e0e72501_StructLitChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e366e6_Var> _1e0e7457a_build_var(_1e0e740d5_RangeChecker*, jule::Ptr<_1e0135dd0_VarDecl>&);
inline void _1e0e74756_set_size_key(_1e0e740d5_RangeChecker*);
inline void _1e0e74b41_check_range_expr_validity(_1e0e740d5_RangeChecker*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e366e6_Var>&, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline void _1e0e74d2d_check_slice(_1e0e740d5_RangeChecker*);
inline void _1e0e75009_check_array(_1e0e740d5_RangeChecker*);
inline void _1e0e751d5_check_map_key_a(_1e0e740d5_RangeChecker*);
inline void _1e0e753b1_check_map_key_b(_1e0e740d5_RangeChecker*);
inline void _1e0e7558c_check_map(_1e0e740d5_RangeChecker*);
inline void _1e0e75768_check_str(_1e0e740d5_RangeChecker*);
inline jule::Bool _1e0e759cc_check(_1e0e740d5_RangeChecker*);
struct _1e0e740d5_RangeChecker {
	jule::Ptr<_1e0debe4d_ScopeChecker> _field_sc = jule::Ptr<_1e0debe4d_ScopeChecker>();
	jule::Ptr<_1e0137970_RangeKind> _field_rang = jule::Ptr<_1e0137970_RangeKind>();
	jule::Ptr<_1e0dc6664_RangeIter> _field_kind = jule::Ptr<_1e0dc6664_RangeIter>();
	jule::Ptr<_1e0e7ce9b_Data> _field_d = jule::Ptr<_1e0e7ce9b_Data>();
	

	_1e0e740d5_RangeChecker(void) = default;

	inline bool operator==(_1e0e740d5_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1e0e740d5_RangeChecker _other) { return !this->operator==(_other); }


};
inline void _1e0e76725_prepare_types(_1e0e7626e_RetTypeChecker*);
inline void _1e0e7699a_prepare_exprs(_1e0e7626e_RetTypeChecker*, jule::Ptr<_1e0128b3c_Expr>&);
inline void _1e0e76b76_ret_vars(_1e0e7626e_RetTypeChecker*);
inline void _1e0e76d52_check_exprs(_1e0e7626e_RetTypeChecker*);
inline jule::Bool _1e0e77160_check(_1e0e7626e_RetTypeChecker*, jule::Ptr<_1e0128b3c_Expr>&);
struct _1e0e7626e_RetTypeChecker {
	jule::Ptr<_1e0debe4d_ScopeChecker> _field_sc = jule::Ptr<_1e0debe4d_ScopeChecker>();
	jule::Ptr<_1e01457c4_FnIns> _field_f = jule::Ptr<_1e01457c4_FnIns>();
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>();
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_model = jule::Any();
	

	_1e0e7626e_RetTypeChecker(void) = default;

	inline bool operator==(_1e0e7626e_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1e0e7626e_RetTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e78518_find_package(_1e0e77eeb_SymbolTable*, jule::Str);
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e78826_select_package(_1e0e77eeb_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
inline jule::Ptr<_1e0e366e6_Var> _1e0e78bcd_find_var(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e79085_find_type_alias(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0e7943c_find_struct(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0e797e4_find_fn(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0e79b02_find_trait(_1e0e77eeb_SymbolTable*, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0e79e10_find_enum(_1e0e77eeb_SymbolTable*, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e7a21d_find_type_enum(_1e0e77eeb_SymbolTable*, jule::Str);
inline jule::Ptr<_1e0e366e6_Var> _1e0e7a790___find_var(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e7abe1___find_type_alias(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1e0e7b098_def_by_ident(_1e0e77eeb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1e0e7b4e9_is_duplicated_ident(_1e0e77eeb_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1e0e77eeb_SymbolTable {
	jule::Ptr<_1dd9995ad_File> _field_file = jule::Ptr<_1dd9995ad_File>();
	jule::Slice<_1e0149487_Pass> _field_passes = jule::Slice<_1e0149487_Pass>();
	jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>();
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e010261b_Struct>>();
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1e0144581_Fn>>();
	jule::Slice<jule::Ptr<_1e0567d06_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e0567d06_Trait>>();
	jule::Slice<jule::Ptr<_1e057b8b9_Enum>> _field_enums = jule::Slice<jule::Ptr<_1e057b8b9_Enum>>();
	jule::Slice<jule::Ptr<_1e04c643a_TypeEnum>> _field_type_enums = jule::Slice<jule::Ptr<_1e04c643a_TypeEnum>>();
	jule::Slice<jule::Ptr<_1e0159a3b_Impl>> _field_impls = jule::Slice<jule::Ptr<_1e0159a3b_Impl>>();
	

	_1e0e77eeb_SymbolTable(void) = default;

	inline bool operator==(_1e0e77eeb_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_type_enums == _other._field_type_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1e0e77eeb_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e0e7d386_is_nil(_1e0e7ce9b_Data*);
inline jule::Bool _1e0e7d5ea_is_void(_1e0e7ce9b_Data*);
inline jule::Bool _1e0e7d85e_is_const(_1e0e7ce9b_Data*);
inline jule::Bool _1e0e7db6c_good_operand(_1e0e7ce9b_Data*, jule::Ptr<_1e0e7ce9b_Data>&);
struct _1e0e7ce9b_Data {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1e0d4da1a_Const> _field_constant = jule::Ptr<_1e0d4da1a_Const>();
	

	_1e0e7ce9b_Data(void) = default;

	inline bool operator==(_1e0e7ce9b_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1e0e7ce9b_Data _other) { return !this->operator==(_other); }


};
struct _1e0e7e024_Value {
	jule::Ptr<_1e0128b3c_Expr> _field_expr = jule::Ptr<_1e0128b3c_Expr>();
	jule::Ptr<_1e0e7ce9b_Data> _field_data = jule::Ptr<_1e0e7ce9b_Data>();
	

	_1e0e7e024_Value(void) = default;

	inline bool operator==(_1e0e7e024_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1e0e7e024_Value _other) { return !this->operator==(_other); }


};
inline void _1e0e7eee2_push_err(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e80311_push_suggestion(_1e0e7ea19_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1e0e804dc_allow_builtin(_1e0e7ea19_Eval*);
inline void _1e0e806b8_disallow_builtin(_1e0e7ea19_Eval*);
inline jule::Bool _1e0e8092c_is_unsafe(_1e0e7ea19_Eval*);
inline jule::Bool _1e0e80b91_is_global(_1e0e7ea19_Eval*);
inline jule::Bool _1e0e80e9e_apply_numeric_prefix(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81213_lit_nil(_1e0e7ea19_Eval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81521_lit_str(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8182e_lit_bool(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81b3c_lit_rune(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81e4a_lit_float(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82258_lit_int(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82566_lit_num(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82874_eval_lit(_1e0e7ea19_Eval*, jule::Ptr<_1e01297a8_LitExpr>);
inline jule::Any _1e0e82b82_find_builtins(_1e0e7ea19_Eval*, jule::Str);
inline jule::Any _1e0e83039_get_def(_1e0e7ea19_Eval*, jule::Str, jule::Bool);
inline void _1ad235330_push_reference(_1e0e7ea19_Eval*, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1ad24a345_push_reference(_1e0e7ea19_Eval*, jule::Ptr<_1e0e366e6_Var>&);
inline void _1ad2ce42e_push_reference(_1e0e7ea19_Eval*, jule::Ptr<_1e010a05d_StructIns>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e835bc___eval_enum(_1e0e7ea19_Eval*, jule::Ptr<_1e057b8b9_Enum>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e83974_eval_enum(_1e0e7ea19_Eval*, jule::Ptr<_1e057b8b9_Enum>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e83c82___eval_type_enum(_1e0e7ea19_Eval*, jule::Ptr<_1e04c643a_TypeEnum>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84139_eval_type_enum(_1e0e7ea19_Eval*, jule::Ptr<_1e04c643a_TypeEnum>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84447___eval_struct(_1e0e7ea19_Eval*, jule::Ptr<_1e010a05d_StructIns>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e847ee_eval_struct(_1e0e7ea19_Eval*, jule::Ptr<_1e010a05d_StructIns>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84b0c_eval_fn_ins(_1e0e7ea19_Eval*, jule::Ptr<_1e01457c4_FnIns>);
inline void _1e0e84e2b_check_deprecated(_1e0e7ea19_Eval*, jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e852d3_eval_fn(_1e0e7ea19_Eval*, jule::Ptr<_1e0144581_Fn>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e856bd_push_illegal_cycle_error(_1e0e7ea19_Eval*, jule::Ptr<_1e0e366e6_Var>&, jule::Ptr<_1e0e366e6_Var>&, jule::Str&);
inline jule::Bool _1e0e85a86_check_cross_cycle(_1e0e7ea19_Eval*, jule::Ptr<_1e0e366e6_Var>&, jule::Str&);
inline jule::Bool _1e0e85e3d_check_illegal_cycles(_1e0e7ea19_Eval*, jule::Ptr<_1e0e366e6_Var>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e862e5_eval_var(_1e0e7ea19_Eval*, jule::Ptr<_1e0e366e6_Var>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8669c_eval_type_alias(_1e0e7ea19_Eval*, jule::Ptr<_1ed77ae84_TypeAlias>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e86a54_eval_def(_1e0e7ea19_Eval*, jule::Any, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e86d62_eval_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e012a7dc_IdentExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87170_eval_unary(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012aee6_UnaryExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8747d_eval_variadic(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012b39d_VariadicExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8778b_eval_unsafe(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0129eb2_UnsafeExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87a99_eval_arr(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e013032a_SliceExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87e51_eval_exp_slc(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e013032a_SliceExpr>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8825e_eval_slice_expr(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e013032a_SliceExpr>);
inline void _1e0e885a0_check_integer_indexing_by_data(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e88979_indexing_ptr(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline void _1e0e88d42_indexing_arr(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline void _1e0e8920a_indexing_slc(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline void _1e0e895c3_indexing_map(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline void _1e0e8998b_indexing_str(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline void _1e0e89d54_to_indexing(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline jule::Bool _1e0e8a2d8_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012c080_SubIdentExpr>&, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline jule::Bool _1e0e8a6e5_push_generics_from_index_data(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8aa9c_eval_ident_decl_from_indexing(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0130b99_IndexingExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8adbb_eval_indexing(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0130b99_IndexingExpr>);
inline std::tuple<jule::Ptr<_1e0e7ce9b_Data>,jule::Ptr<_1e0e7ce9b_Data>> _1e0e8b1c9_eval_slicing_exprs(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e01312a4_SlicingExpr>&);
inline void _1e0e8b44e_slicing_arr(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e8b817_slicing_str(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e8bc79_check_slicing(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e01312a4_SlicingExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8c087_eval_slicing(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e01312a4_SlicingExpr>);
inline void _1e0e8c450_cast_ptr(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8c818_cast_struct(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8cbd1_cast_ref(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8d099_cast_slc(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8d3b8_cast_str(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8d781_cast_int(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8db49_cast_num(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8e012_cast_prim(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e8e331_cast_constant(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e8e6e9_cast_type_enum(_1e0e7ea19_Eval*, jule::Ptr<_1e04c643a_TypeEnum>, jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8eb6c_eval_cast_by_type_n_data(_1e0e7ea19_Eval*, jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8ee8b_eval_cast(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012b755_CastExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90299_eval_ns_selection(_1e0e7ea19_Eval*, jule::Ptr<_1e012bb0c_NsSelectionExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9071c_eval_struct_lit_explicit(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e010a05d_StructIns>, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90a3b_eval_struct_lit(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012ddea_StructLit>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90d49_eval_type(_1e0e7ea19_Eval*, jule::Ptr<_1e01253db_TypeDecl>);
inline void _1e0e91168_call_type_fn(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1e0e91520_check_fn_call_generics(_1e0e7ea19_Eval*, jule::Ptr<_1e01457c4_FnIns>, jule::Ptr<_1e012cb0d_FnCallExpr>);
inline void _1e0e9183e_call_builtin_fn(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e91b80_check_fn_of_concurrent_call(_1e0e7ea19_Eval*, jule::Ptr<_1e01457c4_FnIns>&, jule::Ptr<_1dd9941e0_Token>);
inline void _1e0e9207b_process_exceptional_handler(_1e0e7ea19_Eval*, jule::Ptr<_1e01457c4_FnIns>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1e0e923ab_call_fn(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e926b9_eval_fn_call(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012cb0d_FnCallExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e92a71_eval_enum_static(_1e0e7ea19_Eval*, jule::Ptr<_1e057b8b9_Enum>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e92e28_eval_type_enum_static(_1e0e7ea19_Eval*, jule::Ptr<_1e04c643a_TypeEnum>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e932d0_eval_struct_static(_1e0e7ea19_Eval*, jule::Ptr<_1e010a05d_StructIns>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e93731_eval_trait_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1e0567d06_Trait>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e93c2b_eval_struct_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1e010a05d_StructIns>, jule::Ptr<_1e012c080_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e940d3_eval_slice_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9448a_eval_array_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e94842_eval_map_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e94be9_eval_str_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95007_eval_int_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95315_eval_uint_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95623_eval_i8_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95931_eval_i16_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95c3e_eval_i32_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9604c_eval_i64_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9635a_eval_u8_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96668_eval_u16_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96976_eval_u32_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96c84_eval_u64_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97092_eval_f32_type_tatic(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e973a0_eval_f64_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97757_eval_prim_static(_1e0e7ea19_Eval*, jule::Str, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97b0e_eval_type_static(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1e012c080_SubIdentExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97eb6_eval_obj_sub_ident(_1e0e7ea19_Eval*, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1e012c080_SubIdentExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e982c4_eval_sub_ident(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012c080_SubIdentExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e985d2_eval_tuple(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0129423_TupleExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e98989_eval_map(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1ed786bb5_Map>, jule::Ptr<_1e012e36d_BraceLit>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e98c97_eval_brace_lit(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012e36d_BraceLit>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e990a5_eval_anon_fn(_1e0e7ea19_Eval*, jule::Ptr<_1e0134e01_FnDecl>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e993b3_eval_binop(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e012c503_BinopExpr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e996c1_eval_expr_kind(jule::Ptr<_1e0e7ea19_Eval>, jule::Any);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e999ce_eval(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0128b3c_Expr>);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e99cdc_eval_expr(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1e0128b3c_Expr>);
struct _1e0e7ea19_Eval {
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Trait<_1ed7974de_Lookup> _field_lookup = jule::Trait<_1ed7974de_Lookup>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_prefix = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1e0e366e6_Var> _field_owner = jule::Ptr<_1e0e366e6_Var>();
	jule::Ptr<_1e01087ba_FieldIns> _field_field = jule::Ptr<_1e01087ba_FieldIns>();
	jule::Bool _field_arg = jule::Bool();
	

	_1e0e7ea19_Eval(void) = default;

	inline bool operator==(_1e0e7ea19_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1e0e7ea19_Eval _other) { return !this->operator==(_other); }


};
inline _1e0e9a260_UnaryEval static__1e0e9a716_new(jule::Ptr<_1e0e7ea19_Eval>);
inline void _1e0e9a8e2_minus(_1e0e9a260_UnaryEval*);
inline void _1e0e9aabd_plus(_1e0e9a260_UnaryEval*);
inline void _1e0e9ac99_caret(_1e0e9a260_UnaryEval*);
inline void _1e0e9ae75_excl(_1e0e9a260_UnaryEval*);
inline void _1e0e9b151_star(_1e0e9a260_UnaryEval*);
inline void _1e0e9b32c_amper(_1e0e9a260_UnaryEval*);
inline void _1e0e9b508_type_decl(_1e0e9a260_UnaryEval*);
inline void _1e0e9b6d4_eval_data(_1e0e9a260_UnaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9b9ae_eval(_1e0e9a260_UnaryEval*, jule::Ptr<_1e012aee6_UnaryExpr>);
struct _1e0e9a260_UnaryEval {
	jule::Ptr<_1e0e7ea19_Eval> _field_e = jule::Ptr<_1e0e7ea19_Eval>();
	jule::Ptr<_1e0e7ce9b_Data> _field_d = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1e012aee6_UnaryExpr> _field_u = jule::Ptr<_1e012aee6_UnaryExpr>();
	

	_1e0e9a260_UnaryEval(void) = default;

	inline bool operator==(_1e0e9a260_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1e0e9a260_UnaryEval _other) { return !this->operator==(_other); }


};
inline _1e0e9beed_BinaryEval static__1e0e9c5b4_new_plain(jule::Ptr<_1e0e7ea19_Eval>);
inline _1e0e9beed_BinaryEval static__1e0e9c905_new(jule::Ptr<_1e0e7ea19_Eval>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0e9cb8b_check_type_compatibility(_1e0e9beed_BinaryEval*);
inline jule::Bool _1e0e9ce44_check_struct_common_operator_compatibility(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d1db_eval_nil(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d450_eval_enum(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d6b4_eval_type_enum(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d928_eval_sptr(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9db8c_eval_ptr(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed772909_eval_arr(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed772ab3_eval_slc(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed772d27_eval_fn(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed77308b_eval_struct(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed773300_eval_trait(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed773564_eval_any(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed7737c8_eval_bool(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed773a3c_eval_str(_1e0e9beed_BinaryEval*);
inline void _1ed773c18_set_type_to_greater(_1e0e9beed_BinaryEval*);
inline void _1ed773e5a_check_mod_data(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed774136_mod(_1e0e9beed_BinaryEval*);
inline jule::Bool _1ed774510_numbers_are_compatibile(_1e0e9beed_BinaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed774785_eval_float(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed7749e9_eval_int(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed774c5d_eval_prim(_1e0e9beed_BinaryEval*);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed774ec2_eval_op(_1e0e9beed_BinaryEval*);
inline void _1ed775247_eval_const(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed7754bc_check_data(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed775698_check_datas(_1e0e9beed_BinaryEval*);
inline void _1ed77591d_set_model(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed775b93_post_eval(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed77604a_solve_explicit(_1e0e9beed_BinaryEval*, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed776358_eval(_1e0e9beed_BinaryEval*, jule::Ptr<_1e012c503_BinopExpr>&);
struct _1e0e9beed_BinaryEval {
	jule::Ptr<_1e0e7ea19_Eval> _field_e = jule::Ptr<_1e0e7ea19_Eval>();
	jule::Ptr<_1e0e7ce9b_Data> _field_l = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1e0e7ce9b_Data> _field_r = jule::Ptr<_1e0e7ce9b_Data>();
	jule::Ptr<_1dd9941e0_Token> _field_op = jule::Ptr<_1dd9941e0_Token>();
	

	_1e0e9beed_BinaryEval(void) = default;

	inline bool operator==(_1e0e9beed_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1e0e9beed_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1ed77ae84_TypeAlias {
	jule::Ptr<_1e013340a_ScopeTree> _field_scope = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1ed780cd0_TypeSymbol> _field_kind = jule::Ptr<_1ed780cd0_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>();
	

	_1ed77ae84_TypeAlias(void) = default;

	inline bool operator==(_1ed77ae84_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1ed77ae84_TypeAlias _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed77c073_to_str(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77c381_equals(jule::Ptr<_1ed77bbbb_TypeKind>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1ed77c837_cpp_linked(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77ca9b_is_nil(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77cd10_void(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77d074_mutable(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77d2d8_nil_compatible(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77d54c_performs_rc(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77d7b1_supports_cloning(_1ed77bbbb_TypeKind*);
inline jule::Bool _1ed77da25_variadicable(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed781693_Prim> _1ed77dc89_prim(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed784ba2_Sptr> _1ed77deed_sptr(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed788216_Ptr> _1ed77e262_ptr(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1e057b8b9_Enum> _1ed77e4c6_enm(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed77e73a_tenm(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed7877a9_Arr> _1ed77e99e_arr(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed78560e_Slc> _1ed77ec13_slc(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1e01457c4_FnIns> _1ed77ee77_fnc(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1e010a05d_StructIns> _1ed7801db_strct(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1e0567d06_Trait> _1ed780450_trt(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed786bb5_Map> _1ed7806b4_map(_1ed77bbbb_TypeKind*);
inline jule::Ptr<_1ed786104_Tuple> _1ed780928_tup(_1ed77bbbb_TypeKind*);
struct _1ed77bbbb_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1ed77b78c_Kind> _field_kind = jule::Trait<_1ed77b78c_Kind>();
	

	_1ed77bbbb_TypeKind(void) = default;

	inline bool operator==(_1ed77bbbb_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ed77bbbb_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ed7811cb_checked(_1ed780cd0_TypeSymbol*);
inline void _1ed7813a7_remove_kind(_1ed780cd0_TypeSymbol*);
struct _1ed780cd0_TypeSymbol {
	jule::Ptr<_1e01253db_TypeDecl> _field_decl = jule::Ptr<_1e01253db_TypeDecl>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_kind = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed780cd0_TypeSymbol(void) = default;

	inline bool operator==(_1ed780cd0_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ed780cd0_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed781a06_to_str(_1ed781693_Prim*);
inline jule::Bool _1ed781d14_equals(jule::Ptr<_1ed781693_Prim>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1ed782276_is_i8(_1ed781693_Prim*);
inline jule::Bool _1ed7824da_is_i16(_1ed781693_Prim*);
inline jule::Bool _1ed78274e_is_i32(_1ed781693_Prim*);
inline jule::Bool _1ed7829b3_is_i64(_1ed781693_Prim*);
inline jule::Bool _1ed782c27_is_u8(_1ed781693_Prim*);
inline jule::Bool _1ed782e8b_is_u16(_1ed781693_Prim*);
inline jule::Bool _1ed783200_is_u32(_1ed781693_Prim*);
inline jule::Bool _1ed783464_is_u64(_1ed781693_Prim*);
inline jule::Bool _1ed7836c8_is_f32(_1ed781693_Prim*);
inline jule::Bool _1ed78393c_is_f64(_1ed781693_Prim*);
inline jule::Bool _1ed783ba1_is_int(_1ed781693_Prim*);
inline jule::Bool _1ed783e15_is_uint(_1ed781693_Prim*);
inline jule::Bool _1ed784179_is_uintptr(_1ed781693_Prim*);
inline jule::Bool _1ed7843dd_is_bool(_1ed781693_Prim*);
inline jule::Bool _1ed784652_is_str(_1ed781693_Prim*);
inline jule::Bool _1ed7848b6_is_any(_1ed781693_Prim*);
struct _1ed781693_Prim {
	jule::Str _field_kind = jule::Str();
	

	_1ed781693_Prim(void) = default;

	inline bool operator==(_1ed781693_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ed781693_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed785015_to_str(_1ed784ba2_Sptr*);
inline jule::Bool _1ed785323_equals(jule::Ptr<_1ed784ba2_Sptr>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1ed784ba2_Sptr {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_elem = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed784ba2_Sptr(void) = default;

	inline bool operator==(_1ed784ba2_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ed784ba2_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed785a82_to_str(_1ed78560e_Slc*);
inline jule::Bool _1ed785d90_equals(jule::Ptr<_1ed78560e_Slc>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1ed78560e_Slc {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_elem = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed78560e_Slc(void) = default;

	inline bool operator==(_1ed78560e_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ed78560e_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed786500_to_str(_1ed786104_Tuple*);
inline jule::Bool _1ed78680d_equals(jule::Ptr<_1ed786104_Tuple>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1ed786104_Tuple {
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>();
	

	_1ed786104_Tuple(void) = default;

	inline bool operator==(_1ed786104_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1ed786104_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed787028_to_str(_1ed786bb5_Map*);
inline jule::Bool _1ed787336_equals(jule::Ptr<_1ed786bb5_Map>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1ed786bb5_Map {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_key = jule::Ptr<_1ed77bbbb_TypeKind>();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_val = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed786bb5_Map(void) = default;

	inline bool operator==(_1ed786bb5_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1ed786bb5_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed787b1c_to_str(_1ed7877a9_Arr*);
inline jule::Bool _1ed787e2a_equals(jule::Ptr<_1ed7877a9_Arr>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1ed7877a9_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I32 _field_n = jule::I32();
	jule::Ptr<_1ed77bbbb_TypeKind> _field_elem = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed7877a9_Arr(void) = default;

	inline bool operator==(_1ed7877a9_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ed7877a9_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ed788579_to_str(_1ed788216_Ptr*);
inline jule::Bool _1ed788887_equals(jule::Ptr<_1ed788216_Ptr>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1ed788bd9_is_unsafe(_1ed788216_Ptr*);
struct _1ed788216_Ptr {
	jule::Ptr<_1ed77bbbb_TypeKind> _field_elem = jule::Ptr<_1ed77bbbb_TypeKind>();
	

	_1ed788216_Ptr(void) = default;

	inline bool operator==(_1ed788216_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1ed788216_Ptr _other) { return !this->operator==(_other); }


};
struct _1ed78915c_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1ed78915c_Referencer(void) = default;

	inline bool operator==(_1ed78915c_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ed78915c_Referencer _other) { return !this->operator==(_other); }


};
inline void _1ed78a5ae_push_err(_1ed789da5_TypeChecker*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ed78a78a_allow_builtin(_1ed789da5_TypeChecker*);
inline void _1ed78a966_disallow_builtin(_1ed789da5_TypeChecker*);
inline jule::Ptr<_1ed781693_Prim> _1ed78ac74_build_prim(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&);
inline void _1ad5ca098_push_reference(_1ed789da5_TypeChecker*, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1ad5cce14_push_reference(_1ed789da5_TypeChecker*, jule::Ptr<_1e0567d06_Trait>&);
inline void _1ed78b26e_push_reference_by_kind(_1ed789da5_TypeChecker*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline void _1ed78b637_push_cycle_error(_1ed789da5_TypeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1ed78b9de_check_cross_cycle(_1ed789da5_TypeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1ed78bd96_check_illegal_cycles(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1ed77b78c_Kind> _1ed78c24d_from_type_alias(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1ed77ae84_TypeAlias>&);
inline jule::Ptr<_1e057b8b9_Enum> _1ed78c605_from_enum(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e057b8b9_Enum>&);
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed78c9ac_from_type_enum(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e04c643a_TypeEnum>&);
inline jule::Ptr<_1e0567d06_Trait> _1ed78cd64_from_trait(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e0567d06_Trait>&);
inline jule::Bool _1ed78d21b_check_struct_ins(_1ed789da5_TypeChecker*, jule::Ptr<_1e010a05d_StructIns>&, jule::Ptr<_1dd9941e0_Token>&);
inline void _1ed78d4b3_append_used_struct_reference(_1ed789da5_TypeChecker*, jule::Ptr<_1e010261b_Struct>&);
inline jule::Ptr<_1e010a05d_StructIns> _1ed78d87b_build_struct_instance(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e010261b_Struct>&);
inline jule::Ptr<_1e010a05d_StructIns> _1ed78dc33_from_struct(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&, jule::Ptr<_1e010261b_Struct>&);
inline jule::Trait<_1ed77b78c_Kind> _1ed78e041_get_def(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>&);
inline jule::Trait<_1ed77b78c_Kind> _1ed78e34e_build_ident(_1ed789da5_TypeChecker*, jule::Ptr<_1e012596e_IdentTypeDecl>);
inline jule::Trait<_1ed77b78c_Kind> _1ed78e65c_build_sub_ident(_1ed789da5_TypeChecker*, jule::Ptr<_1e01260ac_SubIdentTypeDecl>);
inline jule::Ptr<_1ed784ba2_Sptr> _1ed78e96a_build_sptr_from_type(_1ed789da5_TypeChecker*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Ptr<_1ed784ba2_Sptr> _1ed78ec78_build_sptr(_1ed789da5_TypeChecker*, jule::Ptr<_1e0126750_SptrTypeDecl>);
inline jule::Ptr<_1ed788216_Ptr> _1ed790086_build_ptr_from_type(_1ed789da5_TypeChecker*, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Ptr<_1ed788216_Ptr> _1ed790394_build_ptr(_1ed789da5_TypeChecker*, jule::Ptr<_1e012719b_PtrTypeDecl>);
inline jule::Ptr<_1ed78560e_Slc> _1ed7906a2_build_slc(_1ed789da5_TypeChecker*, jule::Ptr<_1e0126ac4_SlcTypeDecl>);
inline jule::Ptr<_1ed7877a9_Arr> _1ed7909b0_build_arr(_1ed789da5_TypeChecker*, jule::Ptr<_1e01278e9_ArrTypeDecl>);
inline jule::Ptr<_1ed786bb5_Map> _1ed790cbd_build_map(_1ed789da5_TypeChecker*, jule::Ptr<_1e0128103_MapTypeDecl>);
inline jule::Ptr<_1ed786104_Tuple> _1ed7910cb_build_tuple(_1ed789da5_TypeChecker*, jule::Ptr<_1e0126db0_TupleTypeDecl>);
inline jule::Bool _1ed7913d9_check_fn_types(_1ed789da5_TypeChecker*, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Ptr<_1e01457c4_FnIns> _1ed7916e7_build_fn(_1ed789da5_TypeChecker*, jule::Ptr<_1e0134e01_FnDecl>);
inline jule::Trait<_1ed77b78c_Kind> _1ed791a05_build_by_namespace(_1ed789da5_TypeChecker*, jule::Ptr<_1e0126464_NamespaceTypeDecl>);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1ed791d13_build(_1ed789da5_TypeChecker*, jule::Any&);
inline jule::Ptr<_1ed77bbbb_TypeKind> _1ed792121_check_decl(_1ed789da5_TypeChecker*, jule::Ptr<_1e01253db_TypeDecl>&);
inline void _1ed792396_check(_1ed789da5_TypeChecker*, jule::Ptr<_1ed780cd0_TypeSymbol>&);
struct _1ed789da5_TypeChecker {
	jule::Ptr<_1e0e1b3bd_Sema> _field_s = jule::Ptr<_1e0e1b3bd_Sema>();
	jule::Trait<_1ed7974de_Lookup> _field_lookup = jule::Trait<_1ed7974de_Lookup>();
	jule::Ptr<_1ed78915c_Referencer> _field_referencer = jule::Ptr<_1ed78915c_Referencer>();
	jule::Ptr<_1e01480ac_ReferenceStack> _field_refers = jule::Ptr<_1e01480ac_ReferenceStack>();
	jule::Ptr<_1dd9941e0_Token> _field_error_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1ed77ae84_TypeAlias> _field_owner_alias = jule::Ptr<_1ed77ae84_TypeAlias>();
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();
	

	_1ed789da5_TypeChecker(void) = default;

	inline bool operator==(_1ed789da5_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_refers == _other._field_refers &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1ed789da5_TypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1ed792a06___ident_type_decl(jule::Str&, jule::Ptr<_1e012596e_IdentTypeDecl>);
inline jule::Bool static__1ed792d47_exist(jule::Str&, jule::Any&);
struct _1ed7925b6_IdentTypeLookup {
	

	_1ed7925b6_IdentTypeLookup(void) = default;

	inline bool operator==(_1ed7925b6_IdentTypeLookup _other) { return true; }

	inline bool operator!=(_1ed7925b6_IdentTypeLookup _other) { return !this->operator==(_other); }


};
struct _1aa442b8e_FileInfo {
	jule::Ptr<_1e00e2760_Ast> _field_ast = jule::Ptr<_1e00e2760_Ast>();
	jule::Slice<_1dd65aa00_Log> _field_errors = jule::Slice<_1dd65aa00_Log>();
	

	_1aa442b8e_FileInfo(void) = default;

	inline bool operator==(_1aa442b8e_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aa442b8e_FileInfo _other) { return !this->operator==(_other); }


};
struct _1aa4915d3_Stmt {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Bool _field_terminated = jule::Bool();
	

	_1aa4915d3_Stmt(void) = default;

	inline bool operator==(_1aa4915d3_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1aa4915d3_Stmt _other) { return !this->operator==(_other); }


};
inline void _1aa492590_stop(_1aa491e0d_ScopeParser*);
inline jule::Bool _1aa492804_stopped(_1aa491e0d_ScopeParser*);
inline jule::Bool _1aa492a68_finished(_1aa491e0d_ScopeParser*);
inline jule::Bool _1aa492ccc_is_last_st(_1aa491e0d_ScopeParser*);
inline void _1aa4930eb_push_err(_1aa491e0d_ScopeParser*, jule::Ptr<_1dd9941e0_Token>, jule::Str);
inline void _1aa49341a_push_suggestion(_1aa491e0d_ScopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa493690_insert_as_next(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1aa4915d3_Stmt> _1aa493904_next(_1aa491e0d_ScopeParser*);
inline jule::Ptr<_1e013340a_ScopeTree> _1aa493cab_build_scope(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Any _1aa4940b9_build_var_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4943c7_build_ret_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4946d5_build_while_next_iter(_1aa491e0d_ScopeParser*, jule::Ptr<_1aa4915d3_Stmt>&);
inline jule::Ptr<_1e01370ce_WhileKind> _1aa4949e3_build_while_iter_kind(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa494d23_get_range_kind_keys_tokens(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0135dd0_VarDecl> _1aa495142_build_range_kind_key(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _1aa495450_build_range_kind_keys(_1aa491e0d_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>&);
inline void _1aa495791_setup_range_kind_keys_plain(_1aa491e0d_ScopeParser*, jule::Ptr<_1e0137970_RangeKind>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa495ae3_setup_range_kind_keys_explicit(_1aa491e0d_ScopeParser*, jule::Ptr<_1e0137970_RangeKind>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa495e23_setup_range_kind_keys(_1aa491e0d_ScopeParser*, jule::Ptr<_1e0137970_RangeKind>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0137970_RangeKind> _1aa496374_build_range_iter_kind(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Any _1aa49672b_build_common_iter_kind(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Any _1aa496a39_build_common_iter(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa496d47_build_iter_st(_1aa491e0d_ScopeParser*, jule::Ptr<_1aa4915d3_Stmt>&);
inline jule::Any _1aa497155_build_break_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa497463_build_cont_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0138652_If> _1aa497771_build_if(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0138a09_Else> _1aa497a7e_build_else(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa497d8c_build_if_else_chain(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa49819a_build_co_call_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4984a8_build_goto_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4987b6_build_fall_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa498ac4_build_type_alias_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa499036_push_case_expr(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Ptr<_1dd9941e0_Token>, jule::Bool, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>&);
inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4993dd_build_case_exprs(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Bool);
inline jule::Ptr<_1e013340a_ScopeTree> _1aa4996eb_build_case_scope(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Ptr<_1e0139ac6_Case>,jule::Bool> _1aa499aa3_build_case(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1e0139ac6_Case>>,jule::Ptr<_1e0138a09_Else>> _1aa499e5a_build_cases(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Bool);
inline jule::Ptr<_1e013a29c_MatchCase> _1aa49a268_build_match_case(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013340a_ScopeTree> _1aa49a576_build_scope_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0131a13_LabelSt> _1aa49a884_build_label_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Any,jule::Bool> _1aa49ab92_build_id_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1aa4a9be5_AssignInfo> _1aa49aea0_build_assign_info(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e01327b1_AssignLeft> _1aa49b2ad_build_assign_l(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e01327b1_AssignLeft>> _1aa49b5bb_build_assign_ls(_1aa491e0d_ScopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>&);
inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49b8c9_build_plain_assign(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49bbd7_build_decl_assign(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49bee5_build_assign_st(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa49c303_build_use_expr(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa49c611_build_st(_1aa491e0d_ScopeParser*, jule::Ptr<_1aa4915d3_Stmt>&);
inline void _1aa49c930_build(_1aa491e0d_ScopeParser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1e013340a_ScopeTree>&);
struct _1aa491e0d_ScopeParser {
	jule::Ptr<_1aa4acd08_Parser> _field_p = jule::Ptr<_1aa4acd08_Parser>();
	jule::Ptr<_1e013340a_ScopeTree> _field_s = jule::Ptr<_1e013340a_ScopeTree>();
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1aa4915d3_Stmt>>();
	jule::I32 _field_pos = jule::I32();
	

	_1aa491e0d_ScopeParser(void) = default;

	inline bool operator==(_1aa491e0d_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1aa491e0d_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1aa49d4d0_CallData {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_expr_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_args_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_generics_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	

	_1aa49d4d0_CallData(void) = default;

	inline bool operator==(_1aa49d4d0_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1aa49d4d0_CallData _other) { return !this->operator==(_other); }


};
inline void _1aa4a0229_push_err(_1aa49e932_ExprBuilder*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa4a0548_push_suggestion(_1aa49e932_ExprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e0129423_TupleExpr> _1aa4a0856_build_tuple(_1aa49e932_ExprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>&);
inline jule::Ptr<_1e01297a8_LitExpr> _1aa4a0b64_build_lit(_1aa49e932_ExprBuilder*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4a0e72_build_primitive_type(_1aa49e932_ExprBuilder*, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Any _1aa4a1280_build_single(_1aa49e932_ExprBuilder*, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e012a7dc_IdentExpr> _1aa4a158d_build_cpp_linked_ident(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012aee6_UnaryExpr> _1aa4a189b_build_unary(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e012c080_SubIdentExpr> _1aa4a1ba9_build_obj_sub_ident(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e012bb0c_NsSelectionExpr> _1aa4a1eb7_build_ns_sub_ident(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4a22c5_build_type(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4a25d3_build_sub_ident(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012b39d_VariadicExpr> _1aa4a28e1_build_variadic(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4a2bee_build_op_right(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4a302e_build_between_parentheses(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e012b755_CastExpr> _1aa4a334d_try_build_cast(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4a3716_push_arg(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4a3a24_build_args(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _1aa4a3d32_build_call_generics(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e012cb0d_FnCallExpr> _1aa4a41d9_build_fn_call(_1aa49e932_ExprBuilder*, jule::Ptr<_1dd9941e0_Token>&, jule::Ptr<_1aa49d4d0_CallData>&);
inline jule::Any _1aa4a4519_build_parentheses_range(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0129eb2_UnsafeExpr> _1aa4a4838_build_unsafe_expr(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0134e01_FnDecl> _1aa4a4b46_build_anon_fn(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4a4e54_build_unsafe(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4a531c_push_range_lit_part(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Ptr<_1dd9941e0_Token>, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4a564c_get_brace_range_lit_expr_parts(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e012d625_FieldExprPair> _1aa4a596b_build_field_expr_pair(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4a5c79_build_struct_lit_expr(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4a6087_build_struct_lit_exprs(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012ddea_StructLit> _1aa4a63b7_build_typed_struct_literal(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4a66d6_build_brace_lit_part(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012e36d_BraceLit> _1aa4a69e4_build_brace_lit(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4a6d02_build_brace_range(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4a7110_get_enumerable_parts(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013032a_SliceExpr> _1aa4a741d_build_slice(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0130b99_IndexingExpr> _1aa4a786e_build_indexing(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Ptr<_1e01312a4_SlicingExpr> _1aa4a7e13_build_slicing(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&, jule::Ptr<_1dd9941e0_Token>&, jule::Ptr<_1dd9941e0_Token>);
inline jule::Any _1aa4a8221_build_bracket_range(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4a852e_build_data(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012c503_BinopExpr> _1aa4a88d6_build_binop(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32);
inline jule::Any _1aa4a8be4_build(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4a9002_build_kind(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4a9310_build_from_tokens(_1aa49e932_ExprBuilder*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
struct _1aa49e932_ExprBuilder {
	jule::Ptr<_1aa4acd08_Parser> _field_p = jule::Ptr<_1aa4acd08_Parser>();
	

	_1aa49e932_ExprBuilder(void) = default;

	inline bool operator==(_1aa49e932_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1aa49e932_ExprBuilder _other) { return !this->operator==(_other); }


};
struct _1aa4a9be5_AssignInfo {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_l = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_r = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Ptr<_1dd9941e0_Token> _field_setter = jule::Ptr<_1dd9941e0_Token>();
	jule::Bool _field_ok = jule::Bool();
	

	_1aa4a9be5_AssignInfo(void) = default;

	inline bool operator==(_1aa4a9be5_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1aa4a9be5_AssignInfo _other) { return !this->operator==(_other); }


};
inline void _1aa4ad138_stop(_1aa4acd08_Parser*);
inline jule::Bool _1aa4ad39c_stopped(_1aa4acd08_Parser*);
inline void _1aa4ad765_push_err(_1aa4acd08_Parser*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aa4ada84_push_suggestion(_1aa4acd08_Parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4add92_build_expr(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0124e35_Directive> _1aa4ae1a0_build_directive(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4ae425_push_directive(_1aa4acd08_Parser*, jule::Ptr<_1e0124e35_Directive>);
inline jule::Ptr<_1e013340a_ScopeTree> _1aa4ae7cc_build_scope(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1dd9941e0_Token>);
inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4aec2d___build_type(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32*, jule::Bool);
inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4b017e_build_type(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32*, jule::Bool);
inline jule::Ptr<_1e0139653_TypeAliasDecl> _1aa4b048c_build_type_alias_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b07cd_build_var_type_and_expr(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1e0135dd0_VarDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b0b0d_build_var_common(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1e0135dd0_VarDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b0ec6_build_var_begin(_1aa4acd08_Parser*, jule::Ptr<_1e0135dd0_VarDecl>&, jule::I32&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0135dd0_VarDecl> _1aa4b12d4_build_var(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013165b_GenericDecl> _1aa4b15e2_build_generic(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _1aa4b1999_build_generics(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Ptr<_1dd9941e0_Token>&);
inline jule::Ptr<_1e0133ad1_ParamDecl> _1aa4b1ca7_build_self_param(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b2170_param_type_begin(_1aa4acd08_Parser*, jule::Ptr<_1e0133ad1_ParamDecl>&, jule::I32&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b248e_build_param_type(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1e0133ad1_ParamDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b27ad_build_param_body(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1e0133ad1_ParamDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0133ad1_ParamDecl> _1aa4b2abb_build_param(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b2d41_check_params(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>> _1aa4b31e8_build_params(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Bool);
inline std::tuple<jule::Ptr<_1e01284aa_RetTypeDecl>,jule::Bool> _1aa4b35a0_build_multi_ret_type(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&);
inline std::tuple<jule::Ptr<_1e01284aa_RetTypeDecl>,jule::Bool> _1aa4b3957_build_ret_type(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&);
inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b3da8_build_fn_prototype(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&, jule::Bool);
inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b4309_build_fn(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa4b4617_get_use_decl_selectors(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b4936_build_cpp_use_decl(_1aa4acd08_Parser*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b4c55_build_std_use_decl(_1aa4acd08_Parser*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b5074_build_ident_use_decl(_1aa4acd08_Parser*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline void _1aa4b5393_parse_use_decl(_1aa4acd08_Parser*, jule::Ptr<_1e013aa3e_UseDecl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013aa3e_UseDecl> _1aa4b574a_build_use_decl(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>, jule::Bool);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4b5b24_build_type_enum_item_kind(jule::Ptr<_1aa4acd08_Parser>, jule::I32&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>> _1aa4b5e43_build_type_enum_items(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e013c9db_TypeEnumDecl> _1aa4b6251_build_type_enum_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0128b3c_Expr> _1aa4b6608_build_enum_item_expr(jule::Ptr<_1aa4acd08_Parser>, jule::I32&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>> _1aa4b6916_build_enum_items(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e013bb0b_EnumDecl> _1aa4b6c24_build_enum_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Any _1aa4b7032_build_node_enum_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e013d1b2_FieldDecl> _1aa4b7340_build_field(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>> _1aa4b7670_build_struct_decl_fields(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013da20_StructDecl> _1aa4b798e_build_struct_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b7c14_check_method_receiver(_1aa4acd08_Parser*, jule::Ptr<_1e0134e01_FnDecl>&);
inline jule::Slice<jule::Ptr<_1e0134e01_FnDecl>> _1aa4b8022_build_trait_methods(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013dc1d_TraitDecl> _1aa4b8330_build_trait_decl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b863d_build_cpp_link_fn(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0135dd0_VarDecl> _1aa4b894b_build_cpp_link_var(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013da20_StructDecl> _1aa4b8c59_build_cpp_link_struct(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0139653_TypeAliasDecl> _1aa4b9089_build_cpp_link_type_alias(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e013aa3e_UseDecl> _1aa4b93a8_build_cpp_link_use(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4b96b6_build_cpp_link(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b99c4_get_method(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4b9ce3_parse_impl_body(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1e013e2b2_Impl>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e013e2b2_Impl> _1aa4ba101_build_impl(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Any _1aa4ba40e_build_node_data(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4ba684_check_directive(_1aa4acd08_Parser*, _1e00e2ead_Node&);
inline void _1aa4ba9a3_apply_fn_meta(_1aa4acd08_Parser*, jule::Ptr<_1e0134e01_FnDecl>&, jule::Bool);
inline void _1aa4bacc2_apply_meta(_1aa4acd08_Parser*, _1e00e2ead_Node&, jule::Bool);
inline void _1aa4bb047_check_use_decl(_1aa4acd08_Parser*, _1e00e2ead_Node&);
inline std::tuple<jule::Bool,jule::Any> _1aa4bb377_build_general_scope_node_data(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline _1e00e2ead_Node _1aa4bb696_parse_node(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4bb91b_append_node(jule::Ptr<_1aa4acd08_Parser>, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4bbd7d_remove_range(_1aa4acd08_Parser*, jule::I32, jule::Str, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Slice<jule::I32>&);
inline void _1aa4bc268_push_wrong_order_close_err(_1aa4acd08_Parser*, jule::Ptr<_1dd9941e0_Token>&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Slice<jule::I32>&);
inline void _1aa4bc6db_push_range_close(_1aa4acd08_Parser*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::Slice<jule::I32>&);
inline void _1aa4bc961_check_ranges(_1aa4acd08_Parser*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline void _1aa4bcbd6_parse(jule::Ptr<_1aa4acd08_Parser>, jule::Ptr<_1dd9995ad_File>&);
struct _1aa4acd08_Parser {
	jule::Ptr<_1e00e2760_Ast> _field_ast = jule::Ptr<_1e00e2760_Ast>();
	jule::Slice<jule::Ptr<_1e0124e35_Directive>> _field_directives = jule::Slice<jule::Ptr<_1e0124e35_Directive>>();
	jule::Slice<_1dd65aa00_Log> _field_errors = jule::Slice<_1dd65aa00_Log>();
	

	_1aa4acd08_Parser(void) = default;

	inline bool operator==(_1aa4acd08_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aa4acd08_Parser _other) { return !this->operator==(_other); }


};
inline void _1aa4be765_push_err(_1aa4be18d_TypeBuilder*, jule::Ptr<_1dd9941e0_Token>, jule::Str);
inline void _1aa4bea84_push_suggestion(_1aa4be18d_TypeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bece8_build_prim(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c005c_build_namespace(_1aa4be18d_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _1aa4c02c1_build_generics(_1aa4be18d_TypeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4c0535_ident_generics(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0799_build_ident(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0a0d_build_cpp_link(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0c72_build_fn(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0ed6_build_ptr(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c124a_build_sptr(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c14ae_build_op(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1723_build_slc(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1987_build_arr(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1d3e_build_map(_1aa4be18d_TypeBuilder*, jule::I32, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c20a3_build_enumerable(_1aa4be18d_TypeBuilder*);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c2317_step(_1aa4be18d_TypeBuilder*);
inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4c257b_build(_1aa4be18d_TypeBuilder*);
struct _1aa4be18d_TypeBuilder {
	jule::Ptr<_1aa4acd08_Parser> _field_p = jule::Ptr<_1aa4acd08_Parser>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _field_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();
	

	_1aa4be18d_TypeBuilder(void) = default;

	inline bool operator==(_1aa4be18d_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1aa4be18d_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1ed92a30e_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);
	

	_1ed92a30e_CompileInfo(void) = default;

	inline bool operator==(_1ed92a30e_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1ed92a30e_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ed92bbb2_push_err(_1ed92b662_DirectiveEval*, jule::Ptr<_1dd9941e0_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1ed92c069_split_operans(_1ed92b662_DirectiveEval*, jule::Str, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Bool _1ed92c377_eval_directive_ident(_1ed92b662_DirectiveEval*, jule::Str);
inline jule::Bool _1ed92c685_eval_directive_part(_1ed92b662_DirectiveEval*, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Bool _1ed92c8e9_eval(_1ed92b662_DirectiveEval*);
struct _1ed92b662_DirectiveEval {
	jule::Slice<_1dd65aa00_Log> _field_logs = jule::Slice<_1dd65aa00_Log>();
	jule::Ptr<_1e0124e35_Directive> _field_d = jule::Ptr<_1e0124e35_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1ed92b662_DirectiveEval(void) = default;

	inline bool operator==(_1ed92b662_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1ed92b662_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa39e546_JuleImporter> static__1c2c903e7_new(_1ed92a30e_CompileInfo);
inline jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _1c2c97542_all_packages(_1aa39e546_JuleImporter*);
inline void _1c2c98169_set_mod_path(_1aa39e546_JuleImporter*, jule::Str);
inline jule::Str _1c2cb3a36_get_mod_path(_1aa39e546_JuleImporter*);
inline jule::Str _1c2cb8aa2_mod_by_id(_1aa39e546_JuleImporter*, jule::I32);
inline jule::Ptr<_1e0e13272_ImportInfo> _1c2cbb104_get_import(_1aa39e546_JuleImporter*, jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1e00e2760_Ast>>,jule::Slice<_1dd65aa00_Log>> _1c2cec7ea_import_package(_1aa39e546_JuleImporter*, jule::Str, jule::Bool);
inline void _1c2d01c1c_imported(_1aa39e546_JuleImporter*, jule::Ptr<_1e0e13272_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1dd65aa00_Log>> _1c2d51d27_is_pass_build_directives(_1aa39e546_JuleImporter*, jule::Ptr<_1e00e2760_Ast>&);
struct _1aa39e546_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();
	

	_1aa39e546_JuleImporter(void) = default;

	inline bool operator==(_1aa39e546_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1aa39e546_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1a9442486_OrderedDefines {
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _field_structs = jule::Slice<jule::Ptr<_1e010261b_Struct>>();
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_globals = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	

	_1a9442486_OrderedDefines(void) = default;

	inline bool operator==(_1a9442486_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs &&
			this->_field_globals == _other._field_globals;
	}

	inline bool operator!=(_1a9442486_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool _1adc6439c_is_common_ordered(jule::Slice<jule::Ptr<_1e010261b_Struct>>&, jule::Ptr<_1e010261b_Struct>);
inline jule::Bool _1adc6c031_is_common_ordered(jule::Slice<jule::Ptr<_1e0e366e6_Var>>&, jule::Ptr<_1e0e366e6_Var>);
inline void _1adc5e9a2_order_common(jule::Slice<jule::Ptr<_1e010261b_Struct>>&);
inline void _1adc631e2_order_common(jule::Slice<jule::Ptr<_1e0e366e6_Var>>&);
inline void static__1a949e108_order_structures(jule::Slice<jule::Ptr<_1e010261b_Struct>>&);
inline void static__1a94ce303_order_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>&);
struct _1a965184e_DefineOrderer {
	

	_1a965184e_DefineOrderer(void) = default;

	inline bool operator==(_1a965184e_DefineOrderer _other) { return true; }

	inline bool operator!=(_1a965184e_DefineOrderer _other) { return !this->operator==(_other); }


};
struct _1aa594dbd_LiveTable {
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _field_vars = jule::Slice<jule::Ptr<_1e0e366e6_Var>>();
	jule::Slice<jule::Ptr<_1e01457c4_FnIns>> _field_fns = jule::Slice<jule::Ptr<_1e01457c4_FnIns>>();
	jule::Slice<jule::Ptr<_1e010a05d_StructIns>> _field_structs = jule::Slice<jule::Ptr<_1e010a05d_StructIns>>();
	jule::Slice<jule::Ptr<_1e0567d06_Trait>> _field_traits = jule::Slice<jule::Ptr<_1e0567d06_Trait>>();
	

	_1aa594dbd_LiveTable(void) = default;

	inline bool operator==(_1aa594dbd_LiveTable _other) {
		return 
			this->_field_vars == _other._field_vars &&
			this->_field_fns == _other._field_fns &&
			this->_field_structs == _other._field_structs &&
			this->_field_traits == _other._field_traits;
	}

	inline bool operator!=(_1aa594dbd_LiveTable _other) { return !this->operator==(_other); }


};
inline void _1aa5c9cc1_optimize_child(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0dd6322_Scope>&);
inline void _1aa5ca046_optimize_body_child(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0dd6322_Scope>&);
inline void _1aa5ca2bb_optimize_expr_model(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Any&);
inline void _1aa5ca497_eliminate_followed(_1aa5c9809_ScopeDeadCode*);
inline void _1aa5ca71c_push_goto(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0dea7dc_GotoSt>);
inline void _1aa5ca992_push_label(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0dea600_Label>);
inline void _1aa5cac17_optimize_range_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0dc6664_RangeIter>);
inline void _1aa5cae8c_optimize_while_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0d9879b_WhileIter>);
inline void _1aa5cb212_optimize_inf_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0d985ae_InfIter>);
inline void _1aa5cb487_optimize_conditional(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0d879aa_Conditional>);
inline void _1aa5cb70c_optimize_match(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0deb090_Match>);
inline void _1aa5cb982_optimize_assign(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0deabb6_Assign>);
inline void _1aa5cbc07_optimize_multi_assign(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Ptr<_1e0deada3_MultiAssign>);
inline void _1aa5cbe7c_optimize_stmt(jule::Ptr<_1aa5c9809_ScopeDeadCode>, jule::Any);
inline void _1aa5cc158_optimize_stmts(jule::Ptr<_1aa5c9809_ScopeDeadCode>);
struct _1aa5c9809_ScopeDeadCode {
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _field_parent = jule::Ptr<_1aa5c9809_ScopeDeadCode>();
	jule::Ptr<_1e0dd6322_Scope> _field_s = jule::Ptr<_1e0dd6322_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = jule::I32();
	jule::Ptr<jule::Slice<jule::Ptr<_1e0dea600_Label>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1e0dea600_Label>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>>>();
	

	_1aa5c9809_ScopeDeadCode(void) = default;

	inline bool operator==(_1aa5c9809_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos;
	}

	inline bool operator!=(_1aa5c9809_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1aa5cd4bc_ExprDeadCode static__1aa5cdac7_new(jule::Ptr<_1aa5c9809_ScopeDeadCode>&);
inline void _1aa5cdd4c_binary(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e011cdb7_BinopExprModel>);
inline void _1aa5ce0c2_unary(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0111cac_UnaryExprModel>);
inline void _1aa5ce347_structure_lit(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0116982_StructLitExprModel>);
inline void _1aa5ce5bc_alloc_structure(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e013ea76_AllocStructLitExprModel>);
inline void _1aa5ce842_casting(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e013ec63_CastingExprModel>);
inline void _1aa5ceab7_args(_1aa5cd4bc_ExprDeadCode*, jule::Slice<jule::Any>&);
inline void _1aa5ced3c_func_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e013ee50_FnCallExprModel>);
inline void _1aa5d00b2_slice(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e014013c_SliceExprModel>);
inline void _1aa5d0337_array(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e01415b1_ArrayExprModel>);
inline void _1aa5d05ac_indexing(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0140329_IndexingExprModel>);
inline void _1aa5d0832_anon_func(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0140516_AnonFnExprModel>);
inline void _1aa5d0aa7_map(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e01408e0_MapExprModel>);
inline void _1aa5d0d2c_slicing(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0140acc_SlicingExprModel>);
inline void _1aa5d10a2_trait_sub(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>);
inline void _1aa5d1327_structure_sub(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e01411d7_StructSubIdentExprModel>);
inline void _1aa5d159c_common_sub(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e014198a_CommonSubIdentExprModel>);
inline void _1aa5d1822_tuple(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0141b77_TupleExprModel>);
inline void _1aa5d1a97_new_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e014242a_BuiltinNewCallExprModel>);
inline void _1aa5d1d1c_out_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>);
inline void _1aa5d2092_outln_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>);
inline void _1aa5d2317_panic_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>);
inline void _1aa5d258c_assert_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>);
inline void _1aa5d2812_error_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>);
inline void _1aa5d2a87_make_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>);
inline void _1aa5d2d0c_append_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>);
inline void _1aa5d3082_clone_call(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>);
inline void _1aa5d3307_sizeof(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0140ea6_SizeofExprModel>);
inline void _1aa5d357c_alignof(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0143717_AlignofExprModel>);
inline void _1aa5d3802_integrated_to_str(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>);
inline void _1aa5d3a77_free(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0143eba_FreeExprModel>);
inline void _1aa5d3cec_backend_emit(_1aa5cd4bc_ExprDeadCode*, jule::Ptr<_1e0143ccd_BackendEmitExprModel>);
inline void _1aa5d4072_optimize(_1aa5cd4bc_ExprDeadCode*, jule::Any&);
struct _1aa5cd4bc_ExprDeadCode {
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _field_s = jule::Ptr<_1aa5c9809_ScopeDeadCode>();
	

	_1aa5cd4bc_ExprDeadCode(void) = default;

	inline bool operator==(_1aa5cd4bc_ExprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1aa5cd4bc_ExprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ed83964c_UnsafeBinopExprModel {
	jule::Ptr<_1e011cdb7_BinopExprModel> _field_node = jule::Ptr<_1e011cdb7_BinopExprModel>();
	

	_1ed83964c_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1ed83964c_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1ed83964c_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ed83996b_UnsafeIndexingExprModel {
	jule::Ptr<_1e0140329_IndexingExprModel> _field_node = jule::Ptr<_1e0140329_IndexingExprModel>();
	

	_1ed83996b_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1ed83996b_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1ed83996b_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ed839d34_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1e014013c_SliceExprModel> _field_elems = jule::Ptr<_1e014013c_SliceExprModel>();
	

	_1ed839d34_PushToSliceExprModel(void) = default;

	inline bool operator==(_1ed839d34_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ed839d34_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ed83a3b7_MutSlicingExprModel {
	jule::Ptr<_1dd9941e0_Token> _field_token = jule::Ptr<_1dd9941e0_Token>();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	

	_1ed83a3b7_MutSlicingExprModel(void) = default;

	inline bool operator==(_1ed83a3b7_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ed83a3b7_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ed83a791_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();
	

	_1ed83a791_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1ed83a791_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ed83a791_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ed83b95c_ScopeOptimizer> static__1ed83bde1_new(jule::Ptr<_1e0dd6322_Scope>);
inline void _1ed83c166_set_current_stmt(_1ed83b95c_ScopeOptimizer*, jule::Any);
inline void _1ed83c3db_optimize_data(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0e7ce9b_Data>);
inline void _1ed83c661_optimize_var(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0e366e6_Var>);
inline void _1ed83c8d6_optimize_conditional(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0d879aa_Conditional>);
inline void _1ed83ccc1_build_default_constat_true_case(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deb4ad_Case>, jule::I32&, jule::Ptr<_1e0deb090_Match>&);
inline void _1ed83d057_optimize_match(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deb090_Match>);
inline void _1ed83d2cc_optimize_range_iter(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0dc6664_RangeIter>);
inline void _1ed83d552_optimize_while_iter(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0d9879b_WhileIter>);
inline jule::Bool _1ed83d860_substr(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deabb6_Assign>);
inline jule::Bool _1ed83db6d_str_insert(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deabb6_Assign>);
inline jule::Bool _1ed83de7b_str_assign(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deabb6_Assign>);
inline void _1ed83e201_optimize_assign(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deabb6_Assign>);
inline void _1ed83e476_optimize_multi_assign(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deada3_MultiAssign>);
inline void _1ed83e6eb_optimize_ret(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0deb887_RetSt>);
inline void _1ed83e971_optimize_stmt(_1ed83b95c_ScopeOptimizer*, jule::Any);
inline void _1ed83ebe6_optimize_child(_1ed83b95c_ScopeOptimizer*, jule::Ptr<_1e0dd6322_Scope>);
inline void _1ed83edc2_optimize(_1ed83b95c_ScopeOptimizer*);
struct _1ed83b95c_ScopeOptimizer {
	jule::I32 _field_i = jule::I32();
	jule::Ptr<_1e0dd6322_Scope> _field_scope = jule::Ptr<_1e0dd6322_Scope>();
	

	_1ed83b95c_ScopeOptimizer(void) = default;

	inline bool operator==(_1ed83b95c_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ed83b95c_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1ed842523_optimize(jule::Any&);
inline jule::Bool _1ed842831_str_cond(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e011cdb7_BinopExprModel>);
inline void _1ed842aa6_binary(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e011cdb7_BinopExprModel>);
inline void _1ed842d2b_unary(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0111cac_UnaryExprModel>);
inline void _1ed8430a1_structure_lit(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0116982_StructLitExprModel>);
inline void _1ed843326_alloc_structure(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e013ea76_AllocStructLitExprModel>);
inline void _1ed84359b_casting(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e013ec63_CastingExprModel>);
inline void _1ed843821_args(_1ed84205b_ExprOptimizer*, jule::Slice<jule::Any>&);
inline void _1ed843a96_scope(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0dd6322_Scope>&);
inline void _1ed843d1b_func_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e013ee50_FnCallExprModel>);
inline void _1ed844091_slice(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e014013c_SliceExprModel>);
inline void _1ed844316_array(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e01415b1_ArrayExprModel>);
inline void _1ed84458b_indexing(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0140329_IndexingExprModel>);
inline void _1ed844811_anon_func(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0140516_AnonFnExprModel>);
inline void _1ed844a86_map(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e01408e0_MapExprModel>);
inline void _1ed844d0b_slicing(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0140acc_SlicingExprModel>);
inline void _1ed845081_trait_sub(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>);
inline void _1ed845306_structure_sub(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e01411d7_StructSubIdentExprModel>);
inline void _1ed84557b_common_sub(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e014198a_CommonSubIdentExprModel>);
inline void _1ed845801_tuple(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0141b77_TupleExprModel>);
inline void _1ed845a76_new_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e014242a_BuiltinNewCallExprModel>);
inline void _1ed845ceb_out_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>);
inline void _1ed846071_outln_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>);
inline void _1ed8462e6_panic_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>);
inline void _1ed84656b_assert_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>);
inline void _1ed8467e1_error_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>);
inline void _1ed846a66_make_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>);
inline void _1ed846cdb_append_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>);
inline void _1ed847061_clone_call(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>);
inline void _1ed8472d6_sizeof(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0140ea6_SizeofExprModel>);
inline void _1ed84755b_alignof(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0143717_AlignofExprModel>);
inline void _1ed8477d1_integrated_to_str(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>);
inline void _1ed847a56_free(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0143eba_FreeExprModel>);
inline void _1ed847ccb_backend_emit(_1ed84205b_ExprOptimizer*, jule::Ptr<_1e0143ccd_BackendEmitExprModel>);
inline void _1ed847ea7_do(_1ed84205b_ExprOptimizer*);
struct _1ed84205b_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();
	

	_1ed84205b_ExprOptimizer(void) = default;

	inline bool operator==(_1ed84205b_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ed84205b_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa56cc31_Optimizer> static__1aa4eb5a5_new(jule::Ptr<_1c2c92949_IR>&);
inline void _1aa511840_optimize_global(_1aa56cc31_Optimizer*, jule::Ptr<_1e0e366e6_Var>&);
inline void _1aa542200_optimize_function(_1aa56cc31_Optimizer*, jule::Ptr<_1e0144581_Fn>&);
inline void _1aa551b5a_optimize_struct(_1aa56cc31_Optimizer*, jule::Ptr<_1e010261b_Struct>&);
inline void _1aa551ce2_optimize_globals(_1aa56cc31_Optimizer*, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5978b5_optimize_functions(_1aa56cc31_Optimizer*, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5a46b3_optimize_structs(_1aa56cc31_Optimizer*, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa59c304_optimize_package(_1aa56cc31_Optimizer*, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa4ee685_optimize(_1aa56cc31_Optimizer*);
struct _1aa56cc31_Optimizer {
	jule::Ptr<_1c2c92949_IR> _field_ir = jule::Ptr<_1c2c92949_IR>();
	

	_1aa56cc31_Optimizer(void) = default;

	inline bool operator==(_1aa56cc31_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1aa56cc31_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1aa5e9dce_reset(void);
inline void static__1aa5ea011_print(jule::Str, jule::Str);
struct _1aa5e9be2_AnsiEscape {
	

	_1aa5e9be2_AnsiEscape(void) = default;

	inline bool operator==(_1aa5e9be2_AnsiEscape _other) { return true; }

	inline bool operator!=(_1aa5e9be2_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1aa5eb298_log_flat(_1dd65aa00_Log&);
inline void static__1aa5eb4a7_log_error(_1dd65aa00_Log&);
inline void static__1aa5eb6b6_log(_1dd65aa00_Log&);
inline void static__1aa5eb8c5_print_logs(jule::Slice<_1dd65aa00_Log>&);
struct _1aa5eaece_Logger {
	

	_1aa5eaece_Logger(void) = default;

	inline bool operator==(_1aa5eaece_Logger _other) { return true; }

	inline bool operator!=(_1aa5eaece_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1aac0d635_unix(_1aac0d24a_AbsTime*);
struct _1aac0d24a_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();
	

	_1aac0d24a_AbsTime(void) = default;

	inline bool operator==(_1aac0d24a_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1aac0d24a_AbsTime _other) { return !this->operator==(_other); }


};
inline _1aac0d921_Time static__1aac0dcb7_unix(jule::U64);
inline _1aac0d921_Time static__1aac0deb5_now(void);
inline jule::U64 _1aac0e416_unix(_1aac0d921_Time*);
inline jule::U64 _1aac0e67a_day(_1aac0d921_Time*);
inline jule::U64 _1aac0e8de_month(_1aac0d921_Time*);
inline jule::U64 _1aac0eb53_year(_1aac0d921_Time*);
inline jule::U64 _1aac0edb7_second(_1aac0d921_Time*);
inline jule::U64 _1aac1012b_minute(_1aac0d921_Time*);
inline jule::U64 _1aac10390_hour(_1aac0d921_Time*);
inline _1aac0d24a_AbsTime _1aac10604_abs(_1aac0d921_Time*);
struct _1aac0d921_Time {
	jule::U64 _field_sec = jule::U64();
	

	_1aac0d921_Time(void) = default;

	inline bool operator==(_1aac0d921_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1aac0d921_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aab855ce_ScopeCoder> static__1aab859db_new(jule::Ptr<_1aabca998_ObjectCoder>&);
inline void _1aab85c2d_range_index_iter(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dc6664_RangeIter>&);
inline void _1aab85ea3_range_hashmap_iter(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dc6664_RangeIter>&);
inline void _1aab86228_if_case(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0ddcc41_If>);
inline void _1aab8649d_conditional(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0d879aa_Conditional>);
inline void _1aab86723_inf_iter(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0d985ae_InfIter>);
inline void _1aab86998_while_iter(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0d9879b_WhileIter>);
inline void _1aab86c1d_range_iter(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dc6664_RangeIter>);
inline void _1aab86e93_cont(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dc6851_ContSt>);
inline void _1aab87218_label(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dea600_Label>);
inline void _1aab8748d_goto_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dea7dc_GotoSt>);
inline void _1aab87713_postfix(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dea9c9_Postfix>);
inline void _1aab87988_assign(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deabb6_Assign>);
inline void _1aab87c0d_multi_assign(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deada3_MultiAssign>);
inline jule::Fn<void(void)> _1aab8801b_match_expr(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb090_Match>);
inline void _1aab8833a_case(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb090_Match>, jule::Ptr<_1e0deb4ad_Case>);
inline void _1aab885b0_match_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb090_Match>);
inline void _1aab88835_fall_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb69a_FallSt>);
inline void _1aab88aaa_break_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dea413_BreakSt>);
inline void _1aab88d30_ret_with_vars(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb887_RetSt>);
inline void _1aab890a5_ret_tuple(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb887_RetSt>);
inline void _1aab8932a_ret_with_exprs(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb887_RetSt>);
inline void _1aab895a0_ret_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0deb887_RetSt>);
inline void _1aab89a9a_var(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0e366e6_Var>);
inline void _1aab89d20_st(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Any);
inline void _1aab8a095_scope_stmts(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dd6322_Scope>&);
inline void _1aab8a31a_scope(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e0dd6322_Scope>);
inline void _1aab8a590_func_scope(jule::Ptr<_1aab855ce_ScopeCoder>, jule::Ptr<_1e01457c4_FnIns>);
struct _1aab855ce_ScopeCoder {
	jule::Ptr<_1aabca998_ObjectCoder> _field_oc = jule::Ptr<_1aabca998_ObjectCoder>();
	

	_1aab855ce_ScopeCoder(void) = default;

	inline bool operator==(_1aab855ce_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aab855ce_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aab8c87d_ExprCoder> static__1aab8cc79_new(jule::Ptr<_1aabca998_ObjectCoder>&);
inline void _1aab8ceee_string(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0d4da1a_Const>&);
inline void _1aab8d274_boolean(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0d4da1a_Const>&);
inline void _1aab8d450_nil_lit(jule::Ptr<_1aab8c87d_ExprCoder>);
inline jule::Bool _1aab8d75d_ftoa_special_cases(jule::Ptr<_1aab8c87d_ExprCoder>, jule::F64&);
inline void _1aab8d9d3_float32(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0d4da1a_Const>&);
inline void _1aab8dc58_float64(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0d4da1a_Const>&);
inline void _1aab8e077_constant(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0d4da1a_Const>, jule::Bool);
inline void _1aab8e440_div_by_zero_binary(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1dd9941e0_Token>&, jule::Ptr<_1e0116dc2_OperandExprModel>&, jule::Ptr<_1e0116dc2_OperandExprModel>&);
inline void _1aab8e6b5_unsafe_binary(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e011cdb7_BinopExprModel>);
inline void _1aab8e93a_binary(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e011cdb7_BinopExprModel>);
inline void _1aab8ebb0_var(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0e366e6_Var>);
inline void _1aab8ee35_structure(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e010261b_Struct>);
inline void _1aab901aa_structure_ins(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e010a05d_StructIns>);
inline void _1aab90430_unary(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0111cac_UnaryExprModel>);
inline void _1aab906a5_structure_lit(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0116982_StructLitExprModel>);
inline void _1aab9092a_alloc_structure(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ea76_AllocStructLitExprModel>);
inline void _1aab90ba0_casting(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ec63_CastingExprModel>);
inline void _1aab90e25_args(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Slice<jule::Any>);
inline void _1aab9119a_model_for_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Any);
inline void _1aab91420_push_call_inf(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ee50_FnCallExprModel>&);
inline jule::Bool _1aab9172d_is_wrapped(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ee50_FnCallExprModel>&);
inline void _1aab919a3_pure_func_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ee50_FnCallExprModel>&);
inline void _1aab91c28_func_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e013ee50_FnCallExprModel>);
inline void _1aab91e9d_slice(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e014013c_SliceExprModel>);
inline void _1aab92223_indexing(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0140329_IndexingExprModel>);
inline void _1aab92498_unsafe_indexing(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1ed83996b_UnsafeIndexingExprModel>);
inline void _1aab9271d_anon_func(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0140516_AnonFnExprModel>);
inline void _1aab92993_map(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01408e0_MapExprModel>);
inline void _1aab92c18_slicing(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0140acc_SlicingExprModel>);
inline void _1aab92e8d_trait_sub(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>);
inline void _1aab93213_structure_sub(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01411d7_StructSubIdentExprModel>);
inline void _1aab93488_common_ident(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e014179d_CommonIdentExprModel>);
inline void _1aab9370d_common_sub(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e014198a_CommonSubIdentExprModel>);
inline void _1aab93983_array(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01415b1_ArrayExprModel>);
inline void _1aab93c08_func_ins_common(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01457c4_FnIns>);
inline void _1aab93e7d_func_ins(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01457c4_FnIns>);
inline void _1aab94203_tuple(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0141b77_TupleExprModel>);
inline void _1aab94478_new_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e014242a_BuiltinNewCallExprModel>);
inline void _1aab946ed_out_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>);
inline void _1aab94973_outln_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>);
inline void _1aab94be8_panic_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>);
inline void _1aab94e6d_assert_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>);
inline void _1aab951e3_error_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>);
inline void _1aab95468_copy_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0142dba_BuiltinCopyCallExprModel>);
inline void _1aab956dd_make_call_slice(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>&);
inline void _1aab95963_make_call_str(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>&);
inline void _1aab95bd8_make_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>);
inline void _1aab95e5d_push_to_slice(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1ed839d34_PushToSliceExprModel>);
inline void _1aab961d3_append_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>);
inline void _1aab96458_clone_call(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>);
inline void _1aab966cd_sizeof(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0140ea6_SizeofExprModel>);
inline void _1aab96953_alignof(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0143717_AlignofExprModel>);
inline jule::Str _1aab96c61_rune_lit(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0143904_RuneExprModel>);
inline void _1aab96ed6_structure_static(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e01413c4_StructStaticIdentExprModel>);
inline void _1aab9725b_integrated_to_str(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>);
inline void _1aab974d1_backend_emit(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0143ccd_BackendEmitExprModel>);
inline void _1aab97756_free(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0143eba_FreeExprModel>);
inline void _1aab979cb_mut_slicing(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1ed83a3b7_MutSlicingExprModel>);
inline void _1aab97c51_str_insert_begin(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1ed83a791_StrInsertBeginExprModel>);
inline void _1aab97ec6_model(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Any);
inline void _1aab9824b_expr(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Any);
inline void _1aab984c1_val(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1e0e7e024_Value>);
inline void _1aab98746_init_expr(jule::Ptr<_1aab8c87d_ExprCoder>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1aab8c87d_ExprCoder {
	jule::Ptr<_1aabca998_ObjectCoder> _field_oc = jule::Ptr<_1aabca998_ObjectCoder>();
	

	_1aab8c87d_ExprCoder(void) = default;

	inline bool operator==(_1aab8c87d_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aab8c87d_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aab9aca9_clone_func_decl(jule::Ptr<_1e010261b_Struct>&);
inline jule::Str static__1aab9b051_clone_func_def(jule::Ptr<_1e010261b_Struct>&);
struct _1aab9a99b_DeriveCoder {
	

	_1aab9a99b_DeriveCoder(void) = default;

	inline bool operator==(_1aab9a99b_DeriveCoder _other) { return true; }

	inline bool operator!=(_1aab9a99b_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aab9be31_TestCoder> static__1aab9c3a4_new(jule::Ptr<_1aabca998_ObjectCoder>&);
inline jule::Ptr<_1e0e13272_ImportInfo> _1aab9c618_find_testing_package(jule::Ptr<_1aab9be31_TestCoder>);
inline void _1aab9c88d_append_test(jule::Ptr<_1aab9be31_TestCoder>, jule::Ptr<_1e01457c4_FnIns>);
inline void _1aab9cb13_append_package_tests(jule::Ptr<_1aab9be31_TestCoder>, jule::Ptr<_1e0e16253_Package>&);
inline jule::Bool _1aab9cd77_ready_testing_package(jule::Ptr<_1aab9be31_TestCoder>);
inline void _1aab9d053_call_tm_reset(jule::Ptr<_1aab9be31_TestCoder>);
inline void _1aab9d22e_call_tm_failed(jule::Ptr<_1aab9be31_TestCoder>);
inline void _1aab9d40a_call_tm_skipped(jule::Ptr<_1aab9be31_TestCoder>);
inline void _1aab9d5d6_serialize(jule::Ptr<_1aab9be31_TestCoder>);
struct _1aab9be31_TestCoder {
	jule::Ptr<_1e010a05d_StructIns> _field_t = jule::Ptr<_1e010a05d_StructIns>();
	jule::Ptr<_1e0144581_Fn> _field_tm_reset = jule::Ptr<_1e0144581_Fn>();
	jule::Ptr<_1e0144581_Fn> _field_tm_failed = jule::Ptr<_1e0144581_Fn>();
	jule::Ptr<_1e0144581_Fn> _field_tm_skipped = jule::Ptr<_1e0144581_Fn>();
	jule::Ptr<_1aabca998_ObjectCoder> _field_oc = jule::Ptr<_1aabca998_ObjectCoder>();
	

	_1aab9be31_TestCoder(void) = default;

	inline bool operator==(_1aab9be31_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1aab9be31_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aab9e9d3_to_out(jule::Str&, jule::Uintptr);
inline jule::Str static__1aab9edbd_to_local(jule::I32, jule::I32, jule::Str&);
inline jule::Str static__1aaba0165_func(jule::Ptr<_1e0144581_Fn>&);
inline jule::Str static__1aaba040c_func_ins(jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Str static__1aaba06a4_trait_decl(jule::Ptr<_1e0567d06_Trait>);
inline jule::Str static__1aaba094b_param(jule::Ptr<_1e0144394_Param>&);
inline jule::Str static__1aaba0be3_structure(jule::Ptr<_1e010261b_Struct>&);
inline jule::Str static__1aaba0e8a_structure_ins(jule::Ptr<_1e010a05d_StructIns>&);
inline jule::Str static__1aaba1232_field(jule::Ptr<_1e010cc53_Field>&);
inline jule::Str static__1aaba14c9_var(jule::Ptr<_1e0e366e6_Var>);
inline jule::Str static__1aaba1771_iter_begin(jule::Uintptr);
inline jule::Str static__1aaba1a18_iter_end(jule::Uintptr);
inline jule::Str static__1aaba1cb0_iter_next(jule::Uintptr);
inline jule::Str static__1aaba2057_label(jule::Str&);
inline jule::Str static__1aaba22ee_match_end(jule::Uintptr);
inline jule::Str static__1aaba2596_case_begin(jule::Uintptr);
struct _1aab9e40b_IdentCoder {
	

	_1aab9e40b_IdentCoder(void) = default;

	inline bool operator==(_1aab9e40b_IdentCoder _other) { return true; }

	inline bool operator!=(_1aab9e40b_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1aabd6e7c_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();
	

	_1aabd6e7c_SerializationInfo(void) = default;

	inline bool operator==(_1aabd6e7c_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1aabd6e7c_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1aabca7ab_TraitHash {
	jule::Ptr<_1e0567d06_Trait> _field_t = jule::Ptr<_1e0567d06_Trait>();
	jule::Ptr<_1e010a05d_StructIns> _field_s = jule::Ptr<_1e010a05d_StructIns>();
	jule::I32 _field_i = jule::I32();
	

	_1aabca7ab_TraitHash(void) = default;

	inline bool operator==(_1aabca7ab_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aabca7ab_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1aac1e15c_to_str(_1aac1dd93_CustomType*);
inline jule::Bool _1aac1e46a_equals(jule::Ptr<_1aac1dd93_CustomType>, jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1aac1dd93_CustomType {
	jule::Str _field_kind = jule::Str();
	

	_1aac1dd93_CustomType(void) = default;

	inline bool operator==(_1aac1dd93_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aac1dd93_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1aac1ebb8_to_type(jule::Str);
inline jule::Str static__1aac1ee60_prim(jule::Ptr<_1ed781693_Prim>);
inline jule::Str static__1aac20207_tuple(jule::Ptr<_1ed786104_Tuple>);
inline jule::Str static__1aac2049e_as_sptr(jule::Str);
inline jule::Str static__1aac20746_as_ptr(jule::Str);
inline jule::Str static__1aac209dd_sptr(jule::Ptr<_1ed784ba2_Sptr>);
inline jule::Str static__1aac20c85_ptr(jule::Ptr<_1ed788216_Ptr>);
inline jule::Str static__1aac2102c_enum_decl(jule::Ptr<_1e057b8b9_Enum>);
inline jule::Str static__1aac212c4_type_enum_decl(jule::Ptr<_1e04c643a_TypeEnum>);
inline jule::Str static__1aac2156b_as_slice(jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Str static__1aac21813_slice(jule::Ptr<_1ed78560e_Slc>);
inline jule::Str static__1aac21aaa_map(jule::Ptr<_1ed786bb5_Map>);
inline jule::Str static__1aac21d52_trait_ident(jule::Str);
inline jule::Str static__1aac220e9_trait_decl(jule::Ptr<_1e0567d06_Trait>);
inline jule::Str static__1aac22391_structure(jule::Ptr<_1e010261b_Struct>);
inline jule::Str static__1aac22638_structure_ins(jule::Ptr<_1e010a05d_StructIns>);
inline jule::Str static__1aac228d0_array(jule::Ptr<_1ed7877a9_Arr>);
inline jule::Str static__1aac22e1e_param_ins(jule::Ptr<_1e0144938_ParamIns>&);
inline jule::Str static__1aac2345d_func_ins_result(jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Str static__1aac23705_anon_func(jule::Ptr<_1e01457c4_FnIns>);
inline jule::Str static__1aac2399c_func(jule::Ptr<_1e01457c4_FnIns>);
inline jule::Str static__1aac23c44_kind(jule::Ptr<_1ed77bbbb_TypeKind>);
struct _1aac1e68a_TypeCoder {
	

	_1aac1e68a_TypeCoder(void) = default;

	inline bool operator==(_1aac1e68a_TypeCoder _other) { return true; }

	inline bool operator!=(_1aac1e68a_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1bb9b6dd3_name(_1bb9b65b9_Flag*);
inline jule::Str _1bb9b7015_what(_1bb9b65b9_Flag*);
inline void _1bb9b7147_reset(_1bb9b65b9_Flag*);
inline jule::I32 _1bb9b7279_short(_1bb9b65b9_Flag*);
struct _1bb9b65b9_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();
	

	_1bb9b65b9_Flag(void) = default;

	inline bool operator==(_1bb9b65b9_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1bb9b65b9_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb9b8b4e_name(_1bb9ba579_Flag*);
inline jule::Str _1bb9ba216_what(_1bb9ba579_Flag*);
inline void _1bb9ba843_reset(_1bb9ba579_Flag*);
inline jule::I32 _1bb9ba975_short(_1bb9ba579_Flag*);
struct _1bb9ba579_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();
	

	_1bb9ba579_Flag(void) = default;

	inline bool operator==(_1bb9ba579_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1bb9ba579_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb9bc1b3_name(_1bb9bdadd_Flag*);
inline jule::Str _1bb9bd77a_what(_1bb9bdadd_Flag*);
inline void _1bb9bdda7_reset(_1bb9bdadd_Flag*);
inline jule::I32 _1bb9bded9_short(_1bb9bdadd_Flag*);
struct _1bb9bdadd_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();
	

	_1bb9bdadd_Flag(void) = default;

	inline bool operator==(_1bb9bdadd_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1bb9bdadd_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb9c076b_name(_1bb9c2196_Flag*);
inline jule::Str _1bb9c1d33_what(_1bb9c2196_Flag*);
inline void _1bb9c2460_reset(_1bb9c2196_Flag*);
inline jule::I32 _1bb9c2592_short(_1bb9c2196_Flag*);
struct _1bb9c2196_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();
	

	_1bb9c2196_Flag(void) = default;

	inline bool operator==(_1bb9c2196_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1bb9c2196_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1bb9c3cd0_name(_1bb9c570a_Flag*);
inline jule::Str _1bb9c5397_what(_1bb9c570a_Flag*);
inline void _1bb9c59c4_reset(_1bb9c570a_Flag*);
inline jule::I32 _1bb9c5b06_short(_1bb9c570a_Flag*);
struct _1bb9c570a_Flag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();
	

	_1bb9c570a_Flag(void) = default;

	inline bool operator==(_1bb9c570a_Flag _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1bb9c570a_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aac56d43_FlagSet> static__1aac5712e_new(void);
inline jule::Trait<_1aac55825_CommonFlag> _1aac575e6_find_flag(_1aac56d43_FlagSet*, jule::Str);
inline jule::Trait<_1aac55825_CommonFlag> _1aac57904_find_flag_short(_1aac56d43_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1aac55825_CommonFlag>> _1aac57b68_flags(_1aac56d43_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aac57e76_parse(_1aac56d43_FlagSet*, jule::Slice<jule::Str>);
inline void _1aac58152_reset(_1aac56d43_FlagSet*);
inline jule::Ptr<_1bb9c570a_Flag> _1bba49361_add_flag_common(_1aac56d43_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1bb9c2196_Flag> _1bba53447_add_flag_common(_1aac56d43_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1bba46bbb_add_var(_1aac56d43_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1bba50cb3_add_var(_1aac56d43_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1aac56d43_FlagSet {
	jule::Slice<jule::Trait<_1aac55825_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1aac55825_CommonFlag>>();
	

	_1aac56d43_FlagSet(void) = default;

	inline bool operator==(_1aac56d43_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1aac56d43_FlagSet _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1c2c92949_IR>,jule::Slice<_1dd65aa00_Log>> static__1c2d5470e_build(jule::Str, jule::I32);
inline void _1a9427856_append_structs(_1c2c92949_IR*, jule::Ptr<_1e0e16253_Package>&, jule::Slice<jule::Ptr<_1e010261b_Struct>>&);
inline jule::Slice<jule::Ptr<_1e010261b_Struct>> _1a9430e47_get_all_structures(_1c2c92949_IR*);
inline void _1a943da48_append_globals(_1c2c92949_IR*, jule::Ptr<_1e0e16253_Package>&, jule::Slice<jule::Ptr<_1e0e366e6_Var>>&);
inline jule::Slice<jule::Ptr<_1e0e366e6_Var>> _1a9444950_get_all_globals(_1c2c92949_IR*);
inline void _1a9445599_order(_1c2c92949_IR*);
struct _1c2c92949_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1e0e16253_Package> _field_main = jule::Ptr<_1e0e16253_Package>();
	jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>>();
	_1a9442486_OrderedDefines _field_ordered = _1a9442486_OrderedDefines();
	

	_1c2c92949_IR(void) = default;

	inline bool operator==(_1c2c92949_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1c2c92949_IR _other) { return !this->operator==(_other); }


};
inline jule::Str _1e00eb03d_to_str(_1e010a05d_StructIns*);
inline jule::Bool _1e0104c28_equals(jule::Ptr<_1e010a05d_StructIns>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1e0119105_same(_1e010a05d_StructIns*, jule::Ptr<_1e010a05d_StructIns>);
inline jule::Ptr<_1e0144581_Fn> _1e011ae70_find_method(_1e010a05d_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1e01087ba_FieldIns> _1e0112b59_find_field(_1e010a05d_StructIns*, jule::Str);
struct _1e010a05d_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1e010261b_Struct> _field_decl = jule::Ptr<_1e010261b_Struct>();
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>();
	jule::Slice<jule::Ptr<_1e01087ba_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1e01087ba_FieldIns>>();
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _field_methods = jule::Slice<jule::Ptr<_1e0144581_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1e01480ac_ReferenceStack> _field_refers = jule::Ptr<_1e01480ac_ReferenceStack>();
	_1e00e8249_Operators _field_operators = _1e00e8249_Operators();
	

	_1e010a05d_StructIns(void) = default;

	inline bool operator==(_1e010a05d_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_refers == _other._field_refers &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1e010a05d_StructIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aa595121_ObjectDeadCode> static__1aa59551c_new(jule::Ptr<_1c2c92949_IR>&);
inline jule::Bool _1adc92908_is_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0567d06_Trait>&);
inline jule::Bool _1adc97655_is_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Bool _1adc9ebce_is_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e010a05d_StructIns>&);
inline jule::Bool _1bb5793ad_is_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e366e6_Var>&);
inline void _1adc93893_push_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0567d06_Trait>);
inline void _1adc9aee9_push_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e01457c4_FnIns>);
inline void _1adc9e283_push_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e010a05d_StructIns>);
inline void _1bb57a304_push_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e366e6_Var>);
inline void _1aa5c666e_set_references_as_live(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e01480ac_ReferenceStack>&);
inline void _1aa5c68e4_inits(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5c6b69_collect_live_package(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5c6d45_collect_live(jule::Ptr<_1aa595121_ObjectDeadCode>);
inline void _1aa5c70ba_remove_dead_globals(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e0e366e6_Var>>&);
inline void _1aa5c7340_remove_dead_fns(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e0144581_Fn>>&);
inline void _1aa5c75b5_remove_dead_structs(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e010261b_Struct>>&);
inline void _1aa5c783a_remove_dead_traits(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Slice<jule::Ptr<_1e0567d06_Trait>>&);
inline void _1aa5c7ab0_remove_deads_file(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e77eeb_SymbolTable>&);
inline void _1aa5c7d35_remove_deads_package(jule::Ptr<_1aa595121_ObjectDeadCode>, jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5c8011_remove_deads(jule::Ptr<_1aa595121_ObjectDeadCode>);
inline void _1aa5c81dc_elimanate(jule::Ptr<_1aa595121_ObjectDeadCode>);
struct _1aa595121_ObjectDeadCode {
	_1aa594dbd_LiveTable _field_live = _1aa594dbd_LiveTable();
	jule::Ptr<_1c2c92949_IR> _field_ir = jule::Ptr<_1c2c92949_IR>();
	

	_1aa595121_ObjectDeadCode(void) = default;

	inline bool operator==(_1aa595121_ObjectDeadCode _other) {
		return 
			this->_field_live == _other._field_live &&
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1aa595121_ObjectDeadCode _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1aabca998_ObjectCoder> static__1aabd48a3_new(jule::Ptr<_1c2c92949_IR>&, _1aabd6e7c_SerializationInfo);
inline void _1aabd5145_write(jule::Ptr<_1aabca998_ObjectCoder>, jule::Str);
inline void _1aabd582c_add_indent(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aabd6047_done_indent(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aabd6762_indent(jule::Ptr<_1aabca998_ObjectCoder>);
inline jule::I32 _1aabe6c39_find_type_offset(_1aabca998_ObjectCoder*, jule::Ptr<_1e0567d06_Trait>, jule::Ptr<_1ed77bbbb_TypeKind>);
inline void _1aabd7c91_loc_info(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1dd9941e0_Token>&);
inline void _1aabd7ad7_head(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aabcc77a_links(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aabe8532_prepare_structures(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac13bac_iter_packages(jule::Ptr<_1aabca998_ObjectCoder>, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>);
inline void _1aac13cde_build_trait_map(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac13e21_trait_decls(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac14053_structure_plain_decl(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010261b_Struct>&);
inline void _1aac14185_structure_plain_decls(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac142b7_field_decl(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e01087ba_FieldIns>&);
inline void _1aac143e9_structure_destructor(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac1452b_structure_derive_defs_decls(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac1465d_structure_operator_eq(jule::Ptr<_1aabca998_ObjectCoder>, jule::Str&, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac14790_structure_operator_not_eq(jule::Ptr<_1aabca998_ObjectCoder>, jule::Str&, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac148c2_structure_operator(jule::Ptr<_1aabca998_ObjectCoder>, jule::Str&, jule::Ptr<_1e01457c4_FnIns>&, jule::Str);
inline void _1aac14a04_structure_operators(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac14b36_structure_ins_decl(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac14c68_structure_decl(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010261b_Struct>&);
inline void _1aac14d9a_structure_decls(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac14ecc_params_decls(jule::Ptr<_1aabca998_ObjectCoder>, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>&);
inline void _1aac1510e_func_head(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e01457c4_FnIns>&, jule::Bool);
inline void _1aac15241_func_decl(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0144581_Fn>&, jule::Bool);
inline void _1aac15373_func_decls(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac154a5_trait_data_types(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac155d7_param_ins(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0144938_ParamIns>&);
inline void _1aac15719_params_ins(jule::Ptr<_1aabca998_ObjectCoder>, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>&);
inline void _1aac1584b_var_init_expr(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0e366e6_Var>&, jule::Fn<void(void)>);
inline void _1aac1597d_var(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0e366e6_Var>);
inline void _1aac15ab0_func(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0144581_Fn>&);
inline void _1aac15be2_trait_wrappers(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac15d24_trait_datas(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac15e56_globals(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac16088_decls(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac161ba_structure_methods(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac163a7_structure_derive_defs(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac1662c_structure_ostream(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac168a2_structure_ins(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010a05d_StructIns>&);
inline void _1aac16b27_structure(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e010261b_Struct>&);
inline void _1aac16d03_structures(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac16ece_funcs(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac17254_push_init(jule::Ptr<_1aabca998_ObjectCoder>, jule::Ptr<_1e0e16253_Package>&);
inline void _1aac17430_init_caller(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac1760b_end(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac177d7_serialize_head(jule::Ptr<_1aabca998_ObjectCoder>);
inline void _1aac179b3_serialize(jule::Ptr<_1aabca998_ObjectCoder>);
struct _1aabca998_ObjectCoder {
	jule::Str _field_obj = jule::Str();
	jule::Ptr<_1c2c92949_IR> _field_ir = jule::Ptr<_1c2c92949_IR>();
	_1aabd6e7c_SerializationInfo _field_info = _1aabd6e7c_SerializationInfo();
	jule::Slice<jule::Ptr<_1aabca7ab_TraitHash>> _field_tmap = jule::Slice<jule::Ptr<_1aabca7ab_TraitHash>>();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Ptr<_1aab8c87d_ExprCoder> _field_ec = jule::Ptr<_1aab8c87d_ExprCoder>();
	jule::Ptr<_1aab855ce_ScopeCoder> _field_sc = jule::Ptr<_1aab855ce_ScopeCoder>();
	

	_1aabca998_ObjectCoder(void) = default;

	inline bool operator==(_1aabca998_ObjectCoder _other) {
		return 
			this->_field_obj == _other._field_obj &&
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_tmap == _other._field_tmap &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1aabca998_ObjectCoder _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1bb9d7db0_parse_integer(_1aac5954e_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)>);
inline std::tuple<jule::U64,jule::Bool> _1bb9e15a0_parse_integer(_1aac5954e_ArgParser*, jule::Str&, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)>);
inline jule::Str _1aac59d13_get_data(_1aac5954e_ArgParser*);
inline jule::VoidExceptional _1aac5a088_process_flag(_1aac5954e_ArgParser*, jule::Trait<_1aac55825_CommonFlag>&);
inline jule::VoidExceptional _1aac5a30d_single_dash(_1aac5954e_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1aac5a583_double_dash(_1aac5954e_ArgParser*, jule::Str&);
inline jule::VoidExceptional _1aac5a75e_try_arg(_1aac5954e_ArgParser*);
inline jule::VoidExceptional _1aac5a93a_parse(_1aac5954e_ArgParser*);
struct _1aac5954e_ArgParser {
	_1aac56d43_FlagSet _field_set = _1aac56d43_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I32 _field_i = jule::I32();
	

	_1aac5954e_ArgParser(void) = default;

	inline bool operator==(_1aac5954e_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aac5954e_ArgParser _other) { return !this->operator==(_other); }


};
inline jule::I32 _1dc4a058d_decode_rune(jule::I32, jule::I32);
inline std::tuple<jule::I32,jule::I32> _1dc4a0835_encode_rune(jule::I32);
inline jule::Slice<jule::I32> _1dc4a0db8_decode(jule::Slice<jule::U16>);
inline jule::Slice<jule::U16> _1dc4a1209_append_rune(jule::Slice<jule::U16>, jule::I32);
inline jule::Slice<jule::U16> _1dc48cc73_utf16_from_str(jule::Str);
inline jule::Str _1dc495c15_utf16_to_str(jule::Slice<jule::U16>);
inline jule::Str _1dc489cd6_u16_ptr_to_str(jule::U16*);
inline jule::I32 _1db82de17_get_last_errno(void);
inline jule::Uintptr _1dc4a20c8_get_std_handle(jule::Uintptr);
inline jule::I32 _1dc4a26b1_wstat(jule::U16*, struct stat*);
inline jule::I32 _1dc4a2a9b__wopen(jule::U16*, jule::I32, jule::I32);
inline jule::U32 _1dc4a2c99_get_last_error(void);
inline jule::U32 _1dc4a30da_get_current_directory(jule::U32, jule::U16*);
inline jule::Bool _1dc4a3629_delete_file(jule::U16*);
inline jule::Bool _1dc4a38c1_create_directory(jule::U16*);
inline jule::Bool _1dc4a3b68_remove_directory(jule::U16*);
inline _WDIR* _1dc4a3e10__wopendir(jule::U16*);
inline struct _wdirent* _1dc4a41a7__wreaddir(_WDIR*);
inline jule::I32 _1dc4a444e__wclosedir(_WDIR*);
inline jule::U32 _1dc4a4b25_get_full_path_name(jule::U16*, jule::U32, jule::U16*, jule::U16**);
inline jule::Bool _1dc4a4e66_get_console_mode(jule::Uintptr, jule::I32&);
inline jule::Bool _1dc4a52a7_set_console_mode(jule::Uintptr, jule::I32);
inline jule::Bool _1dc4a57d5_write_console(jule::Uintptr, jule::U16*, jule::I32, jule::I32&, void*);
inline jule::Bool _1dc4a5d13_read_console(jule::Uintptr, jule::U16*, jule::I32, jule::I32&, void*);
inline jule::I32 _1dc4a8167_seek(jule::I32, jule::I32, jule::I32);
inline jule::I32 _1dc4a8552_read(jule::I32, void*, jule::U32);
inline jule::I32 _1dc4a8882_close(jule::I32);
inline jule::I32 _1dc4a8c6c_write(jule::I32, void*, jule::U32);
inline void _1dc4a8e7b_exit(jule::I32);
inline std::tuple<jule::I32,jule::I32> _1dc58b800_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I32> _1dc58bd83_decode_last_rune(jule::Slice<jule::U8>);
inline jule::I32 _1dc58c3c2_rune_len(jule::I32);
inline jule::I32 _1dc58c79b_encode_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1dc58cadc_append_rune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1dc58ce2d_append_rune_non_ascii(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _1dc58d46c_rune_count_str(jule::Str);
inline jule::Bool _1dc58d714_rune_start(jule::U8);
inline jule::I32 _1dc6405a7_get_last_os_error_windows(void);
inline jule::Slice<jule::Str> _1dc6448b9_args(void);
inline jule::Exceptional<jule::Str> _1dc644d09_working_dir(void);
inline jule::Exceptional<jule::Str> _1dc6456de___getwd(void);
inline jule::Slice<jule::U8> _1dc6ce06e_stobs(jule::Str&);
inline jule::Bool _1dd5911b6_is_letter(jule::I32);
inline jule::Bool _1dd5e9692_is16(jule::Slice<_1dd5e7a58_Range16>, jule::U16);
inline jule::Bool _1dd5e99d3_is32(jule::Slice<_1dd5e8020_Range32>, jule::U32);
inline jule::Bool _1dd5ea1ed_is_excluding_latin(jule::Ptr<_1dd5e8493_RangeTable>, jule::I32);
inline jule::Str _1dd569b73_repeat(jule::Str, jule::I32);
inline jule::Bool _1dd569733__has_prefix(jule::Str&, jule::Str&, jule::I32);
inline jule::Bool _1dd588048_has_prefix(jule::Str, jule::Str);
inline jule::Bool _1dc6d9167__has_suffix(jule::Str&, jule::Str&, jule::I32);
inline jule::Bool _1dd56a1e5_has_suffix(jule::Str, jule::Str);
inline jule::I32 _1dd56a723_find_at(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1dc6dda84_find_last_at(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1dc6ddbb6_find_last(jule::Str, jule::Str);
inline jule::I32 _1dd30e044__find_rune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I32 _1dd30e4d9_find_last_byte(jule::Str, jule::U8);
inline jule::I32 _1dd30e9b2_find_any(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1dd30ec26_split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _1dd30ed58_contains(jule::Str, jule::Str);
inline jule::Bool _1dd56aeb5_contains_any(jule::Str, jule::Str);
inline jule::Str _1dd5ea86e_replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _1dd30e2a8__trim_left(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1dd5eb2ba_trim_left(jule::Str, jule::Str);
inline void _1dd5eb3ec__trim_right(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _1dd5eb661_trim(jule::Str, jule::Str);
inline jule::Bool _1dc61c111_is_path_sep(jule::U8);
inline jule::Bool _1dc61c40d_is_slash(jule::U8);
inline jule::U8 _1dc61c540_to_upper(jule::U8);
inline jule::I32 _1dc619dcd_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Str,jule::Bool> _1dc61a175_cut_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1dc61a41c_full_path(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1dc61a74c___abs(jule::Str);
inline jule::Str _1dc61a9e4___join(jule::Slice<jule::Str>);
inline jule::Str _1dc683122_clean(jule::Str);
inline jule::Str _1dc689865_from_slash(jule::Str);
inline jule::Str _1dc68e46e_join(jule::Slice<jule::Str>);
inline jule::Str _1dc692dac_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1dc6abaeb_abs(jule::Str);
inline jule::Str _1dc6ac6bd_base(jule::Str);
inline jule::Str _1dc6ae24c_dir(jule::Str);
inline jule::Str _1dc6b0418_volume_name(jule::Str);
inline jule::I32 _1db787bd9_get_last_fs_error(void);
inline jule::Bool _1dc58e3b3_is_console_handle(jule::Uintptr);
inline jule::I32 _1dd69b326_get_last_process_error(void);
inline jule::Slice<wchar_t*> _1dd6ab215_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>>);
inline jule::Slice<jule::Slice<jule::U16>> _1dd6ab4e0_str_slice_to_ustr_slice(jule::Slice<jule::Str>);
inline jule::I32 _1dd6ab842_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I32 _1dd6abc2c_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _1dd6ac953_exit(jule::I32);
inline jule::Str _1dd6acb51_executable(void);
inline jule::Bool _1dd64e098_is_std_header_path(jule::Str);
inline jule::Bool _1dd64e1db_is_valid_header_ext(jule::Str);
inline jule::Bool _1dd64e483_is_valid_cpp_ext(jule::Str);
inline jule::Str _1dd65ae40_logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1dd65b22b_arg_to_str(jule::Any);
inline jule::I32 _1dd65b4c3_find_next_fmt(jule::Str);
inline jule::Str _1dd65b858_apply_fmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dd65c86a_is_top_directive(jule::Str);
inline jule::Bool _1dd65e2c8_is_windows(jule::Str);
inline jule::Bool _1dd65e5b4_is_darwin(jule::Str);
inline jule::Bool _1dd65e85b_is_linux(jule::Str);
inline jule::Bool _1dd65eb47_is_i386(jule::Str);
inline jule::Bool _1dd65edde_is_amd64(jule::Str);
inline jule::Bool _1dd660186_is_arm64(jule::Str);
inline jule::Bool _1dd66042d_is_unix(jule::Str);
inline jule::Bool _1dd66075d_is_32bit(jule::Str);
inline jule::Bool _1dd660a05_is_64bit(jule::Str);
inline void _1dd699e5c_init(void);
inline jule::Bool _1dd99492c_is_unary_op(jule::Str);
inline jule::Bool _1dd994c18_is_bin_op(jule::Str);
inline jule::Bool _1dd99529b_is_str(jule::Str);
inline jule::Bool _1dd995543_is_raw_str(jule::Str);
inline jule::Bool _1dd9957da_is_rune(jule::Str);
inline jule::Bool _1dd995db2_is_bool(jule::Str);
inline jule::Bool _1dd996159_is_float(jule::Str);
inline jule::Bool _1dd996401_is_num(jule::Str);
inline jule::Bool _1dd996940_is_ignore_ident(jule::Str);
inline jule::Bool _1dd996bd7_is_anon_ident(jule::Str);
inline jule::Bool _1dd997226_is_space(jule::I32);
inline jule::Bool _1dd9975de_is_letter(jule::I32);
inline jule::Bool _1dd997b2d_is_decimal(jule::U8);
inline jule::Bool _1dd997dc5_is_binary(jule::U8);
inline jule::Bool _1dd99816c_is_octal(jule::U8);
inline jule::Bool _1dd998414_is_hex(jule::U8);
inline jule::Bool _1dd9986ab_is_assign(jule::U32);
inline jule::Bool _1dd998953_is_postfix_op(jule::Str);
inline jule::Bool _1dd998bea_is_assign_op(jule::Str);
inline jule::Ptr<_1dd9995ad_File> _1dd99aadc_new_file_set(jule::Str);
inline _1dd65aa00_Log _1dd99c2a3_make_err(jule::I32, jule::I32, jule::Ptr<_1dd9995ad_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dd99c638_bytes_has_prefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _1dd99c979_float_fmt_e(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99cd0e_float_fmt_p(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99d150_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99d491_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99d7d2_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99dbab_float_num(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd99de53_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd99e1ea_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1dd99e53b_is_float_fmt_e(jule::U8, jule::I32);
inline jule::Bool _1dd99e87c_is_float_fmt_p(jule::U8, jule::I32);
inline jule::Bool _1dd99ebbd_is_float_fmt_dotnp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Bool _1dd9a000e_is_float_fmt_dotp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Bool _1dd9a0350_is_float_fmt_dotfp(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd9a0718_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd9a09b0_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1dd9a0d01_hex_escape(jule::Slice<jule::U8>&, jule::I32);
inline jule::Str _1dd9a10ba_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd9a1395_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd9a164d_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1dd9a18e5_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1dd65aa00_Log> _1dd9a63de_lex(jule::Ptr<_1dd9995ad_File>, jule::I32);
inline jule::I32 _1e0ba9546_leading_zeros64(jule::U64);
inline jule::I32 _1e0baa305_trailing_zeros(jule::U32);
inline jule::I32 _1e0baab74_trailing_zeros32(jule::U32);
inline jule::I32 _1e0baae1b_trailing_zeros64(jule::U64);
inline jule::I32 _1e0bb1383_len32(jule::U32);
inline jule::I32 _1e0bb162a_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e0bb22da_add64(jule::U64, jule::U64, jule::U64);
inline std::tuple<jule::U64,jule::U64> _1e0bb396d_mul64(jule::U64, jule::U64);
inline jule::U32 _1e0acb996_f32_bits(jule::F32);
inline jule::F32 _1e0acbc82_f32_from_bits(jule::U32);
inline jule::U64 _1e0acc029_f64_bits(jule::F64);
inline jule::F64 _1e0acc315_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I32> _1e0ace67a_frexp(jule::F64);
inline jule::F64 _1e0b7a803_nan(void);
inline jule::Bool _1e0b2c5b8_is_nan(jule::F64);
inline jule::F64 _1e0b3cd8c_inf(jule::I32);
inline jule::Bool _1e0b2aaa0_is_inf(jule::F64, jule::I32);
inline std::tuple<jule::F64,jule::I32> _1e0b42e6e_normalize(jule::F64);
inline jule::F64 _1e0bb7bc5_log(jule::F64);
inline jule::F64 _1e0bb82e1_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1e0bba8a9_modf(jule::F64);
inline jule::F64 _1e0bbad3d_log2(jule::F64);
inline jule::Str _1e060281e_fmt_float(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1e0626777_generic_ftoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1e06a1428_big_ftoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline jule::Slice<jule::U8> _1e06a3848_fmt_digits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e09aeb76_DecimalSlice, jule::I32, jule::U8);
inline void _1e06c4ade_round_shortest(_1e0be5ad2_Decimal&, jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline jule::Slice<jule::U8> _1e076b933_fmt_e(jule::Slice<jule::U8>, jule::Bool, _1e09aeb76_DecimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1e07602ea_fmt_f(jule::Slice<jule::U8>, jule::Bool, _1e09aeb76_DecimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1e0795000_fmt_b(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline jule::Slice<jule::U8> _1e0796cb0_fmt_x(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline jule::I32 _1e07c97e8_min(jule::I32, jule::I32);
inline jule::I32 _1e083c817_max(jule::I32, jule::I32);
inline jule::U8 _1e08318d8_lower(jule::U8);
inline std::tuple<jule::U64,jule::I32> _1e085619e___parse_uint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1e08d7d46_parse_uint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1e09b1628_parse_int(jule::Str, jule::I32, jule::I32);
inline std::tuple<jule::F64,jule::Bool> _1e097c11b_eisel_lemire64(jule::U64, jule::I32, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e0a016e0_eisel_lemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1e097d02e_common_prefix_len_ignore_case(jule::Str, jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::Bool> _1e0796650_special(jule::Str);
inline std::tuple<jule::U64,jule::I32,jule::Bool,jule::Bool,jule::Bool,jule::I32,jule::Bool> _1e089001d_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1e05ca022_atof64exact(jule::U64, jule::I32, jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1e05ca154_atof32exact(jule::U64, jule::I32, jule::Bool);
inline std::tuple<jule::F64,jule::I32> _1e05ca286_atof_hex(jule::Str, _1e05cd5db_FloatInfo&, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline std::tuple<jule::F32,jule::I32,jule::I32> _1e076c24c_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::I32> _1e076c37e_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I32,jule::I32> _1e076c4b1_parse_float_prefix(jule::Str, jule::I32);
inline jule::Exceptional<jule::F64> _1e083d131_parse_float(jule::Str, jule::I32);
inline void _1e083d43e_ryu_ftoa_fixed32(_1e09aeb76_DecimalSlice&, jule::U32, jule::I32, jule::I32);
inline void _1e0be4790_ryu_ftoa_fixed64(_1e09aeb76_DecimalSlice&, jule::U64, jule::I32, jule::I32);
inline void _1e0be48c2_format_decimal(_1e09aeb76_DecimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1e0be4a04_ryu_ftoa_shortest(_1e09aeb76_DecimalSlice&, jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline jule::I32 _1e0be4b36_mul_by_log2_log10(jule::I32);
inline jule::I32 _1e0be4c68_mul_by_log10_log2(jule::I32);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I32> _1e0be4d9a_compute_bounds(jule::U64, jule::I32, _1e05cd5db_FloatInfo&);
inline void _1e0be4ecc_ryu_digits(_1e09aeb76_DecimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e0be510e_ryu_digits32(_1e09aeb76_DecimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline std::tuple<jule::U32,jule::I32,jule::Bool> _1e0be5241_mult64bit_pow10(jule::U32, jule::I32, jule::I32);
inline std::tuple<jule::U64,jule::I32,jule::Bool> _1e0be5373_mult128bit_pow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1e0be54a5_divisible_by_pow5(jule::U64, jule::I32);
inline std::tuple<jule::U32,jule::U32> _1e0be55d7_divmod1e9(jule::U64);
inline void _1e0be663d_trim(_1e0be5ad2_Decimal&);
inline void _1e0be6770_right_shift(_1e0be5ad2_Decimal&, jule::U32);
inline jule::Bool _1e0be68a2_prefix_is_less_than(jule::Array<jule::U8,800>, jule::I32, jule::Str);
inline void _1e0be69d4_left_shift(_1e0be5ad2_Decimal&, jule::U32);
inline jule::Bool _1e0be6b16_should_round_up(_1e0be5ad2_Decimal&, jule::I32);
inline jule::Str _1e0be6e24_fmt_uint(jule::U64, jule::I32);
inline jule::Str _1e0be7056_fmt_int(jule::I64, jule::I32);
inline jule::Str _1e0be7188_itoa(jule::I32);
inline jule::Str _1e0be72ba_small(jule::I32);
inline jule::Bool _1e0be73ec_is_power_of_two(jule::I32);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e0be752e_fmt_bits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline void _1e0d5710b_lshift_unsig(_1e0d4da1a_Const&, _1e0d4da1a_Const&);
inline void _1e0d57408_rshift_unsig(_1e0d4da1a_Const&, _1e0d4da1a_Const&);
inline jule::Str _1e0ddda88_real_kind_of(jule::Str);
inline jule::I32 _1e0dddd30_bitsize_of(jule::Str);
inline jule::Str _1e0dde11b_int_from_bits(jule::I32);
inline jule::Str _1e0dde3b3_uint_from_bits(jule::I32);
inline jule::Str _1e0dde65a_float_from_bits(jule::I32);
inline jule::Bool _1e0de01b6_check_bit_float(jule::Str, jule::I32);
inline jule::I32 _1e0de045d_bitsize_of_float(jule::F64);
inline jule::I32 _1e0de0705_bitsize_of_int(jule::I64);
inline jule::I32 _1e0de099c_bitsize_of_uint(jule::U64);
inline void _1e0de0b12_update_target(void);
inline void _1e0de0c77_init(void);
inline jule::F64 _1e0de41cb_min(jule::Str);
inline jule::F64 _1e0de44b7_max(jule::Str);
inline jule::Bool _1e0de494b_is_i8_compatible(jule::Str);
inline jule::Bool _1e0de4c37_is_i16_compatible(jule::Str);
inline jule::Bool _1e0de4ece_is_i32_compatible(jule::Str);
inline jule::Bool _1e0de52ba_is_i64_compatible(jule::Str);
inline jule::Bool _1e0de5562_is_u8_compatible(jule::Str);
inline jule::Bool _1e0de5809_is_u16_compatible(jule::Str);
inline jule::Bool _1e0de5aa1_is_u32_compatible(jule::Str);
inline jule::Bool _1e0de5dd1_is_u64_compatible(jule::Str);
inline jule::Bool _1e0de6178_is_f32_compatible(jule::Str);
inline jule::Bool _1e0de6420_is_f64_compatible(jule::Str);
inline jule::Bool _1e0de6761_types_are_compatible(jule::Str, jule::Str);
inline jule::Bool _1e0de6a08_is_i16_greater(jule::Str);
inline jule::Bool _1e0de6ca0_is_i32_greater(jule::Str);
inline jule::Bool _1e0de7047_is_i64_greater(jule::Str);
inline jule::Bool _1e0de72de_is_u16_greater(jule::Str);
inline jule::Bool _1e0de76a7_is_u32_greater(jule::Str);
inline jule::Bool _1e0de794e_is_u64_greater(jule::Str);
inline jule::Bool _1e0de7be6_is_f32_greater(jule::Str);
inline jule::Bool _1e0de7e8d_is_f64_greater(jule::Str);
inline jule::Bool _1e0de82ce_is_greater(jule::Str, jule::Str);
inline jule::Bool _1e0de9423_is_sig_int(jule::Str);
inline jule::Bool _1e0de970e_is_unsig_int(jule::Str);
inline jule::Bool _1e0de99a6_is_int(jule::Str);
inline jule::Bool _1e0de9c92_is_float(jule::Str);
inline jule::Bool _1e0dea039_is_num(jule::Str);
inline jule::Bool _1e0e66061_is_ascii(jule::I32);
inline jule::I32 _1e0e67a35_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1e0e67b67_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1e0e67e20_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1e0e681b7_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1e0e68508_rune_from_esq_seq(jule::Slice<jule::U8>, jule::I32&);
inline jule::Slice<jule::U8> _1e0e68849_str_esq_seq(jule::Slice<jule::U8>, jule::I32&);
inline jule::I32 _1ed8066e6_find_format_prefix(jule::Slice<jule::U8>&, jule::I32&);
inline jule::Slice<jule::U8> _1ed810854_get_format_range(jule::I32&, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1ed826b45_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1ed82a3b8_apply_fmt_by_default(jule::I32&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ed8130b5_apply_fmt(jule::Slice<jule::U8>&, jule::I32&, jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1ed8075b5_format_bytes(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ed80e028_format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e01472ed_parameter_uses_generics(jule::Ptr<_1e0144394_Param>&, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>&);
inline jule::Ptr<_1ed780cd0_TypeSymbol> _1e01497d9_build_type(jule::Ptr<_1e01253db_TypeDecl>);
inline jule::Ptr<_1e0e7e024_Value> _1e0149ac5_build_expr(jule::Ptr<_1e0128b3c_Expr>);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0149d6c_build_type_alias(jule::Ptr<_1e0139653_TypeAliasDecl>);
inline jule::Ptr<_1e010cc53_Field> _1e014a158_build_field(jule::Ptr<_1e013d1b2_FieldDecl>);
inline jule::Slice<jule::Ptr<_1e010cc53_Field>> _1e014a400_build_fields(jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>>&);
inline jule::Ptr<_1e010261b_Struct> _1e014a697_build_struct(jule::Ptr<_1e013da20_StructDecl>);
inline jule::Ptr<_1e0144394_Param> _1e014a93e_build_param(jule::Ptr<_1e0133ad1_ParamDecl>);
inline jule::Slice<jule::Ptr<_1e0144394_Param>> _1e014ac6e_build_params(jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>>&);
inline jule::Ptr<_1e01441a7_RetType> _1e014b016_build_ret_type(jule::Ptr<_1e01284aa_RetTypeDecl>);
inline jule::Ptr<_1e0144581_Fn> _1e014b2ad_build_fn(jule::Ptr<_1e0134e01_FnDecl>);
inline jule::Slice<jule::Ptr<_1e0144581_Fn>> _1e014b555_build_methods(jule::Slice<jule::Ptr<_1e0134e01_FnDecl>>&);
inline jule::Ptr<_1e0567d06_Trait> _1e014b7ec_build_trait(jule::Ptr<_1e013dc1d_TraitDecl>);
inline jule::Ptr<_1e04ed4c8_EnumItem> _1e014ba94_build_enum_item(jule::Ptr<_1e013aeb2_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>> _1e014bd3b_build_enum_items(jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>>&);
inline jule::Ptr<_1e057b8b9_Enum> _1e014c0d3_build_enum(jule::Ptr<_1e013bb0b_EnumDecl>);
inline jule::Ptr<_1e05b1316_TypeEnumItem> _1e014c49b_build_type_enum_item(jule::Ptr<_1e013c3d1_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>> _1e014c743_build_type_enum_items(jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>>&);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e014c9da_build_type_enum(jule::Ptr<_1e013c9db_TypeEnumDecl>);
inline jule::Ptr<_1e0e366e6_Var> _1e014cc82_build_var(jule::Ptr<_1e0135dd0_VarDecl>);
inline jule::Slice<jule::Ptr<_1e0e366e6_Var>> _1e014d029_build_vars(jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>>);
inline jule::Ptr<_1e0159a3b_Impl> _1e014d2c1_build_impl(jule::Ptr<_1e013e2b2_Impl>);
inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0d6e992_new_scope_checker_base(jule::Ptr<_1e0e1b3bd_Sema>&, jule::Ptr<_1e01457c4_FnIns>);
inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0d761c4_new_scope_checker(jule::Ptr<_1e0e1b3bd_Sema>&, jule::Ptr<_1e01457c4_FnIns>);
inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0db49e8_find_label_parent(jule::Str, jule::Ptr<_1e0debe4d_ScopeChecker>);
inline jule::Bool _1e0db7215_model_is_goto_scope(jule::Any&, jule::Ptr<_1e0dd6322_Scope>&);
inline jule::Bool _1e0db7996_stmt_is_goto_scope(jule::Any&, jule::Ptr<_1e0dd6322_Scope>&);
inline jule::I32 _1e0db85ce_count_match_type(jule::Ptr<_1e0deb090_Match>&, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _1e0dba9ee_get_datas_from_tuple_data(jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Slice<jule::Any> _1e0dbb280_get_expr_models(jule::Any&);
inline jule::Bool _1e0dbba22_check_mut(jule::Ptr<_1e0e1b3bd_Sema>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0dc3aa1_check_assign(jule::Ptr<_1e0e1b3bd_Sema>&, jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ce9b_Data>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1e0dc42dd_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1e0dc4e26_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1e0dc5dd3_st_is_def(jule::Any&);
inline jule::Ptr<_1e0e366e6_Var> _1e0e10d85_find_var_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e112d6_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e010261b_Struct> _1e0e116d2_find_struct_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e0144581_Fn> _1e0e11b11_find_fn_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1e0567d06_Trait> _1e0e11e52_find_trait_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e057b8b9_Enum> _1e0e12293_find_enum_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e12606_find_type_enum_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Str);
inline jule::Bool _1e0e1882c_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1e0e19586_is_valid_model_for_ref(jule::Any&);
inline _1dd65aa00_Log _1e0e19a2b_compiler_err(jule::Ptr<_1dd9941e0_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e0e19d6c_imp_is_lookupable(jule::Ptr<_1e0e13272_ImportInfo>&, jule::Str);
inline void _1e0e1a169_append_ret_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>&, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1e0e1a422_append_param_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>&, jule::Ptr<_1e01457c4_FnIns>&);
inline void _1e0e1a6ec_append_generic_type_aliases(jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>&, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Ptr<_1e0e77eeb_SymbolTable> _1e0e1aa4e_find_file(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>&, jule::Ptr<_1dd9995ad_File>&);
inline void _1e0e1ae39_push_suggestion(_1dd65aa00_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1e0e67826_trait_has_reference_receiver(jule::Ptr<_1e0567d06_Trait>&);
inline jule::Bool _1e0e4ed2a_float_assignable(jule::Str, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1e0e68a9c_sig_assignable(jule::Str, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1e0e68bce_unsig_assignable(jule::Str, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1e0e68d11_int_assignable(jule::Str, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0124e35_Directive> _1ed776754_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline jule::Any _1ed776ad9_find_builtins_import(jule::Str, jule::Ptr<_1e0e13272_ImportInfo>);
inline void _1ed776ce8_fit_bitsize(jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed7770e5_make_struct_lit_alloc(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0116982_StructLitExprModel>&);
inline jule::Ptr<_1e0e366e6_Var> _1ed777436_build_error_var(jule::Ptr<_1e0dd6322_Scope>&, jule::Ptr<_1e012cb0d_FnCallExpr>&);
inline jule::Any _1ed777777_find_builtins_sema(jule::Str, jule::Ptr<_1e0e1b3bd_Sema>);
inline jule::Bool _1ed777a1e_is_ok_for_shifting(jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1ed777d4e_is_instanced_struct(jule::Ptr<_1e010a05d_StructIns>);
inline jule::Bool _1ed778129_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed7783d2_apply_cast_kind_model(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline void _1ed77868a_apply_cast_kind(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed778888_build_void_data(void);
inline jule::Str _1ed778b52_check_data_for_integer_indexing(jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed778e3d_apply_cast_model_by_enum(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e057b8b9_Enum>);
inline void _1ed779207_cast_const_by_type(jule::Str&, jule::Ptr<_1e0e7ce9b_Data>&);
inline void _1ed779603_update_model_to_generic_ins(jule::Ptr<_1e013ee50_FnCallExprModel>&, jule::Ptr<_1e01457c4_FnIns>&);
inline jule::Bool _1ed779977_push_sub_ident_from_expr(jule::Any, jule::Ptr<_1e01260ac_SubIdentTypeDecl>&);
inline jule::Bool _1ed793243_kind_uses_generics(jule::Any&, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>&);
inline jule::Bool _1ed7935c8_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline jule::Bool _1ed793870_can_get_ptr(jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1ed793b5b_is_valid_for_sptr_type(jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1ed793e03_is_valid_for_ref(jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Bool _1ed7941bc_is_builtin_str_convertable(jule::Ptr<_1ed77bbbb_TypeKind>&);
inline jule::Str _1ed794497_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1ed781693_Prim> _1ed7947d8_build_prim_type(jule::Str);
inline jule::Ptr<_1e010261b_Struct> _1ed794a80_get_struct_from_kind(jule::Ptr<_1ed77bbbb_TypeKind>);
inline jule::Bool _1ed794d27_is_prim(jule::Str);
inline void _1ed7950d0_apply_implicit_cast(jule::Ptr<_1ed77bbbb_TypeKind>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline std::tuple<jule::Ptr<_1e0e77eeb_SymbolTable>,jule::Slice<_1dd65aa00_Log>> _1ed79804a_build_symbols(jule::Ptr<_1e00e2760_Ast>&, jule::Trait<_1e0e10a00_Importer>&, jule::Ptr<_1e014d821_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1e0e16253_Package>,jule::Slice<_1dd65aa00_Log>> _1ed798479___analyze_package(jule::Slice<jule::Ptr<_1e00e2760_Ast>>&, jule::Trait<_1e0e10a00_Importer>&, jule::I32&);
inline std::tuple<jule::Ptr<_1e0e16253_Package>,jule::Slice<_1dd65aa00_Log>> _1ed798864_analyze_package(jule::Slice<jule::Ptr<_1e00e2760_Ast>>, jule::Trait<_1e0e10a00_Importer>, jule::I32);
inline jule::Ptr<_1e01457c4_FnIns> _1ed7a2593_find_builtin_fn(jule::Str);
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed7a4771_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1e0567d06_Trait> _1ed7bd35b_find_builtin_trait(jule::Str);
inline jule::Any _1ed7d1490_find_builtin_def(jule::Str);
inline jule::Any _1ed7a1042_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1ed7a86ba_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1ed7da8ea_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1ed81cbe6_find_package_builtin_def(jule::Str, jule::Str);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed806174_builtin_caller_common_plain(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed7bcaca_builtin_caller_common(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed7bcc0c_builtin_caller_common_mut(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed806cac_builtin_caller_error(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed806dde_builtin_caller_out(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed807021_builtin_caller_outln(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed807153_builtin_caller_new(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed8373d6_builtin_caller_panic(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed837518_builtin_caller_make(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed83764a_builtin_caller_append(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed83777c_caller_copy_slice(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed8378ae_caller_copy_str(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed8379e1_builtin_caller_copy(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed837b23_builtin_caller_clone(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed837c55_builtin_caller_assert(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed837d87_builtin_caller_std_mem_size_of(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed837eb9_builtin_caller_std_mem_align_of(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed8380eb_builtin_caller_std_mem_free(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed838294_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed8386b2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed838abe_builtin_caller_std_debug_out(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Ptr<_1e0e7ce9b_Data> _1ed838edc_builtin_caller_std_debug_outln(jule::Ptr<_1e0e7ea19_Eval>&, jule::Ptr<_1e012cb0d_FnCallExpr>&, jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1ed93b980_find_module_file(jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>&);
inline jule::Str _1ed93bab2_find_module_file_deep(jule::Str);
inline jule::Slice<_1dd65aa00_Log> _1ed93bd37_check_module_file(jule::Str);
inline jule::Ptr<_1aa442b8e_FileInfo> _1aa48e4e3_parse_file(jule::Ptr<_1dd9995ad_File>);
inline std::tuple<jule::Ptr<_1e00e2760_Ast>,jule::Slice<_1dd65aa00_Log>> _1aa48ea76_parse_fileset(jule::Ptr<_1dd9995ad_File>);
inline jule::Ptr<_1e013340a_ScopeTree> _1aa49046c_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1aa49078b_is_st(jule::Ptr<_1dd9941e0_Token>, jule::Ptr<_1dd9941e0_Token>);
inline jule::Bool _1aa490aee_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&);
inline std::tuple<jule::I32,jule::Bool> _1aa490e95_next_st_pos(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32);
inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Bool> _1aa4912d6_skip_st(jule::I32&, jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _1aa491979_split_stmts(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1aa49d4d0_CallData> _1aa49d843_get_call_data(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa49db2e_get_block_expr(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa49ddc6_split_colon(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::I32 _1aa49e1b2_find_lowest_prec_op(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e012a7dc_IdentExpr> _1aa49e459_build_ident_expr(jule::Ptr<_1dd9941e0_Token>&);
inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::I32> _1aa49e701_get_range_expr_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Bool _1aa4aa08b_check_assign_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline _1dd65aa00_Log _1aa4aae7c_make_err(jule::I32, jule::I32, jule::Ptr<_1dd9995ad_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa4ab422_range(jule::I32&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4ab6b9_range_last(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>,jule::Slice<_1dd65aa00_Log>> _1aa4abae8_parts(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::U32, jule::Bool);
inline jule::Str _1aa4abdb2_get_close_kind_of_brace(jule::Str);
inline _1dd65aa00_Log _1aa4ac2ad_compiler_err(jule::Ptr<_1dd9941e0_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1aa4ac610_push_suggestion(_1dd65aa00_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1aa4ac940_tokstoa(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bd5ee_build_void_type(void);
inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bd874_build_prim_type(jule::Ptr<_1dd9941e0_Token>);
inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::I32> _1aa4bdbb5_split_map_range(jule::Slice<jule::Ptr<_1dd9941e0_Token>>&, jule::I32&);
inline std::tuple<jule::Bool,jule::Bool> _1ed90ec50_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1ed90ed93_check_arch(jule::Str);
inline jule::Bool _1ed92941d_is_pass_file_annotation(jule::Str);
inline void _1ed92a61c_set_os_vars(jule::Slice<jule::Str>&);
inline void _1ed92a870_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1ed92ab28_init_vars(jule::Slice<jule::Str>&, _1ed92a30e_CompileInfo&);
inline jule::Slice<jule::U8> _1c2c7d12c_read_buff(jule::Str);
inline _1dd65aa00_Log _1c2c8c4e3_flat_compiler_err(jule::Str);
inline void _1a9447920_push_passes(jule::Ptr<_1e0e16253_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a9448d1c_get_all_unique_passes(jule::Ptr<_1e0e16253_Package>&, jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>>);
inline _1ed92a30e_CompileInfo _1a9472ab0_build_compile_info(void);
inline void _1aa5c84a6_eliminate_defines(jule::Ptr<_1c2c92949_IR>&);
inline jule::Ptr<_1e0124e35_Directive> _1aa5c883b_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline jule::Bool _1aa5c8b7c_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline void _1aa5cc444_eliminate_dead_code_of_scope(jule::Ptr<_1e0dd6322_Scope>);
inline void _1aa5cc6ca_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e0144581_Fn>>&);
inline void _1aa5cc92d_eliminate_functions_scope_package(jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5ccba3_eliminate_scope_package(jule::Ptr<_1e0e16253_Package>&);
inline void _1aa5ccdc3_eliminate_scopes(jule::Ptr<_1c2c92949_IR>&);
inline jule::Bool _1ed8402bd_is_std_package(jule::Str, jule::Str);
inline jule::Bool _1ed8405dc_is_constant_valid_conditional_case(jule::Ptr<_1e0ddcc41_If>&);
inline jule::Bool _1ed840884_is_unreachable_expr(jule::Any&);
inline jule::Bool _1ed840b92_is_constant_valid_match_case(jule::Ptr<_1e0deb4ad_Case>&);
inline jule::Bool _1ed840e6c_is_unreachable_conditional_case(jule::Ptr<_1e0ddcc41_If>&);
inline jule::Bool _1ed841247_is_unreachable_match_case(jule::Ptr<_1e0deb4ad_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1ed8483c5_check_for_bit_shift_opt(jule::Ptr<_1e0116dc2_OperandExprModel>&, jule::Ptr<_1e0116dc2_OperandExprModel>&);
inline void _1ed84a031_push_opt_level(jule::I32);
inline void _1aa5580d4_detect_enabled(void);
inline void _1aa5ec288_throw(jule::Str);
inline jule::U64 _1aac12eb9_unix(void);
inline jule::U64 _1aac1330a_unix_year_to_seconds(jule::U64, jule::Bool&);
inline jule::U64 _1aac13690_unix_month_to_seconds(jule::U64, jule::Bool);
inline jule::Bool _1aab8a8e2_is_copy_optimizable(jule::Ptr<_1e0e7ce9b_Data>&);
inline jule::Bool _1aab8ac99_is_iter_copy_optimizable(jule::Ptr<_1e0e7ce9b_Data>&, jule::Ptr<_1e0e366e6_Var>&);
inline jule::Str _1aab98a98_decompose_common_esq(jule::U8);
inline jule::Str _1aab98d84_sbtoa(jule::U8);
inline jule::Str _1aab9912b_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1aab99417_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1aab99758_ftoa(jule::F64, jule::I32);
inline jule::Str _1aab99a00_itoa(jule::I64);
inline jule::Str _1aab99c97_utoa(jule::U64);
inline jule::Bool _1aab9a0c7_is_forwarded(jule::Ptr<_1e0dd6322_Scope>&);
inline jule::Bool _1aab9a391_is_builtin_call_has_debuginf(jule::Ptr<_1e013ee50_FnCallExprModel>&);
inline void _1aac17d26_iter_files(jule::Ptr<_1e0e16253_Package>&, jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>);
inline void _1aac18079_prepare_structure(jule::Ptr<_1e010261b_Struct>&);
inline jule::Str _1aac18321_concat_all_parts(jule::Slice<jule::Ptr<_1dd9941e0_Token>>);
inline jule::Ptr<_1e0124e35_Directive> _1aac25cce_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline jule::Bool _1aac26164_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>&, jule::Str);
inline void _1dd62759e_print_error_message(jule::Str);
inline void _1dd639c54_help(jule::Slice<jule::Str>&);
inline void _1dd63b371_version(jule::Slice<jule::Str>&);
inline void _1dd63bb13_tool_distos(void);
inline void _1dd63c3a5_tool_distarch(void);
inline void _1dd63cb47_tool(jule::Slice<jule::Str>&);
inline void _1dd63d3d9_julenv(jule::Slice<jule::Str>&);
inline void _1dd64d174_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1dd624a1e_process_command(jule::Slice<jule::Str>&);
inline void _1dd639160_show_info(void);
void entry_point(void);
inline void _1dd62aedc_enable_vtp(void);
inline void _1dd645bd8_init(void);
inline void _1aa6746ea_init(void);
inline jule::Ptr<_1dc4b2c32_File> _1aac26d02_open_output(jule::Str&);
inline void _1aac2e4ad_clear_objects(void);
inline void _1aac3d4de_compile_ir(jule::Str, jule::Str);
inline jule::Bool _1aac2a9c6_is_cpp_source_file(jule::Str);
inline void _1aac35849_push_comp_cmd_clang(jule::Str&);
inline void _1aac28496_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1aa80c8a5_gen_compile_cmd(jule::Str, jule::Ptr<_1c2c92949_IR>&);
inline jule::Str _1aac2c269_get_compile_path(void);
inline void _1aaac2d68_apply_target_independent_optimizations(jule::Ptr<_1c2c92949_IR>&);
inline void _1aa9a4552_check_compiler_flag(void);
inline void _1aaa47e53_check_target_arch(jule::Str);
inline void _1aab4e6db_check_target_os(jule::Str);
inline void _1aac5ab5a_check_target_flag(jule::Str&);
inline void _1aac5ac8c_check_opt_flag(jule::Str&);
inline void _1aac5b100_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1aac5b232_check_flags(jule::Slice<jule::Str>&);
inline void _1aac5b364_setup_sema_flags(jule::I32&);
inline jule::Ptr<_1c2c92949_IR> _1aac5b496_build_ir(jule::Slice<jule::Str>&);
inline void _1aac5b5c8_compile_command(jule::Slice<jule::Str>&);


struct _1e0e10a00_ImporterMptrData {
	void(*_1e0e0e911_set_mod_path)(jule::Trait<_1e0e10a00_Importer>, jule::Str);
	jule::Str(*_1e0e0eb64_get_mod_path)(jule::Trait<_1e0e10a00_Importer>);
	jule::Str(*_1e0e0ee72_mod_by_id)(jule::Trait<_1e0e10a00_Importer>, jule::I32);
	jule::Ptr<_1e0e13272_ImportInfo>(*_1e0e10280_get_import)(jule::Trait<_1e0e10a00_Importer>, jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1e00e2760_Ast>>,jule::Slice<_1dd65aa00_Log>>(*_1e0e10637_import_package)(jule::Trait<_1e0e10a00_Importer>, jule::Str, jule::Bool);
	void(*_1e0e108ac_imported)(jule::Trait<_1e0e10a00_Importer>, jule::Ptr<_1e0e13272_ImportInfo>);
};

struct _1ed77b78c_KindMptrData {
	jule::Str(*_1ed77b33b_to_str)(jule::Trait<_1ed77b78c_Kind>);
	jule::Bool(*_1ed77b649_equals)(jule::Trait<_1ed77b78c_Kind>, jule::Ptr<_1ed77bbbb_TypeKind>);
};

struct _1ed7974de_LookupMptrData {
	jule::Ptr<_1e0e13272_ImportInfo>(*_1ed795696_find_package)(jule::Trait<_1ed7974de_Lookup>, jule::Str);
	jule::Ptr<_1e0e13272_ImportInfo>(*_1ed7959a4_select_package)(jule::Trait<_1ed7974de_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>);
	jule::Ptr<_1e0e366e6_Var>(*_1ed795d5b_find_var)(jule::Trait<_1ed7974de_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ed77ae84_TypeAlias>(*_1ed796213_find_type_alias)(jule::Trait<_1ed7974de_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e010261b_Struct>(*_1ed7965ba_find_struct)(jule::Trait<_1ed7974de_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e0144581_Fn>(*_1ed796972_find_fn)(jule::Trait<_1ed7974de_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1e0567d06_Trait>(*_1ed796c80_find_trait)(jule::Trait<_1ed7974de_Lookup>, jule::Str);
	jule::Ptr<_1e057b8b9_Enum>(*_1ed79708d_find_enum)(jule::Trait<_1ed7974de_Lookup>, jule::Str);
	jule::Ptr<_1e04c643a_TypeEnum>(*_1ed79739b_find_type_enum)(jule::Trait<_1ed7974de_Lookup>, jule::Str);
};

struct _1aac55825_CommonFlagMptrData {
	jule::Str(*_1aac5534c_name)(jule::Trait<_1aac55825_CommonFlag>);
	jule::I32(*_1aac5547e_short)(jule::Trait<_1aac55825_CommonFlag>);
	jule::Str(*_1aac555b1_what)(jule::Trait<_1aac55825_CommonFlag>);
	void(*_1aac556e3_reset)(jule::Trait<_1aac55825_CommonFlag>);
};



inline void _1e0e0e911_set_mod_path_0(jule::Trait<_1e0e10a00_Importer> _self_, jule::Str _1735_path) {
	_1c2c98169_set_mod_path(_self_.safe_ptr<_1aa39e546_JuleImporter>(), _1735_path);
}
inline jule::Str _1e0e0eb64_get_mod_path_0(jule::Trait<_1e0e10a00_Importer> _self_) {
	return _1c2cb3a36_get_mod_path(_self_.safe_ptr<_1aa39e546_JuleImporter>());
}
inline jule::Str _1e0e0ee72_mod_by_id_0(jule::Trait<_1e0e10a00_Importer> _self_, jule::I32 _2528_id) {
	return _1c2cb8aa2_mod_by_id(_self_.safe_ptr<_1aa39e546_JuleImporter>(), _2528_id);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e10280_get_import_0(jule::Trait<_1e0e10a00_Importer> _self_, jule::Str _3133_path) {
	return _1c2cbb104_get_import(_self_.safe_ptr<_1aa39e546_JuleImporter>(), _3133_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1e00e2760_Ast>>,jule::Slice<_1dd65aa00_Log>> _1e0e10637_import_package_0(jule::Trait<_1e0e10a00_Importer> _self_, jule::Str _3737_path, jule::Bool _3748_update_mod) {
	return _1c2cec7ea_import_package(_self_.safe_ptr<_1aa39e546_JuleImporter>(), _3737_path, _3748_update_mod);
}
inline void _1e0e108ac_imported_0(jule::Trait<_1e0e10a00_Importer> _self_, jule::Ptr<_1e0e13272_ImportInfo> _4135__0) {
	_1c2d01c1c_imported(_self_.safe_ptr<_1aa39e546_JuleImporter>(), _4135__0);
}
inline jule::Str _1ed77b33b_to_str_0(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1e00eb03d_to_str(_self_.safe_ptr<_1e010a05d_StructIns>());
}
inline jule::Bool _1ed77b649_equals_0(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1e0104c28_equals(_self_.data.as<_1e010a05d_StructIns>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_1(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1e0145b37_to_str(_self_.safe_ptr<_1e01457c4_FnIns>());
}
inline jule::Bool _1ed77b649_equals_1(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1e0145e45_equals(_self_.data.as<_1e01457c4_FnIns>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_2(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1e01a1148_to_str(_self_.safe_ptr<_1e0567d06_Trait>());
}
inline jule::Bool _1ed77b649_equals_2(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1e01a2b72_equals(_self_.data.as<_1e0567d06_Trait>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_3(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1e0232e33_to_str(_self_.safe_ptr<_1e057b8b9_Enum>());
}
inline jule::Bool _1ed77b649_equals_3(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1e03d2555_equals(_self_.data.as<_1e057b8b9_Enum>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_4(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1e04aae14_to_str(_self_.safe_ptr<_1e04c643a_TypeEnum>());
}
inline jule::Bool _1ed77b649_equals_4(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1e04d5845_equals(_self_.data.as<_1e04c643a_TypeEnum>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_5(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed77c073_to_str(_self_.safe_ptr<_1ed77bbbb_TypeKind>());
}
inline jule::Bool _1ed77b649_equals_5(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed77c381_equals(_self_.data.as<_1ed77bbbb_TypeKind>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_6(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed781a06_to_str(_self_.safe_ptr<_1ed781693_Prim>());
}
inline jule::Bool _1ed77b649_equals_6(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed781d14_equals(_self_.data.as<_1ed781693_Prim>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_7(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed785015_to_str(_self_.safe_ptr<_1ed784ba2_Sptr>());
}
inline jule::Bool _1ed77b649_equals_7(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed785323_equals(_self_.data.as<_1ed784ba2_Sptr>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_8(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed785a82_to_str(_self_.safe_ptr<_1ed78560e_Slc>());
}
inline jule::Bool _1ed77b649_equals_8(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed785d90_equals(_self_.data.as<_1ed78560e_Slc>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_9(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed786500_to_str(_self_.safe_ptr<_1ed786104_Tuple>());
}
inline jule::Bool _1ed77b649_equals_9(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed78680d_equals(_self_.data.as<_1ed786104_Tuple>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_10(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed787028_to_str(_self_.safe_ptr<_1ed786bb5_Map>());
}
inline jule::Bool _1ed77b649_equals_10(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed787336_equals(_self_.data.as<_1ed786bb5_Map>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_11(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed787b1c_to_str(_self_.safe_ptr<_1ed7877a9_Arr>());
}
inline jule::Bool _1ed77b649_equals_11(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed787e2a_equals(_self_.data.as<_1ed7877a9_Arr>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_12(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1ed788579_to_str(_self_.safe_ptr<_1ed788216_Ptr>());
}
inline jule::Bool _1ed77b649_equals_12(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1ed788887_equals(_self_.data.as<_1ed788216_Ptr>(), _5026_other);
}
inline jule::Str _1ed77b33b_to_str_13(jule::Trait<_1ed77b78c_Kind> _self_) {
	return _1aac1e15c_to_str(_self_.safe_ptr<_1aac1dd93_CustomType>());
}
inline jule::Bool _1ed77b649_equals_13(jule::Trait<_1ed77b78c_Kind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _5026_other) {
	return _1aac1e46a_equals(_self_.data.as<_1aac1dd93_CustomType>(), _5026_other);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed795696_find_package_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _935_ident) {
	return _1e0d81421_find_package(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed7959a4_select_package_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _1337_selector) {
	return _1e0d9b54b_select_package(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1e0e366e6_Var> _1ed795d5b_find_var_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e0dec13a_find_var(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed796213_find_type_alias_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e0dec3c1_find_type_alias(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e010261b_Struct> _1ed7965ba_find_struct_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e0dec778_find_struct(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e0144581_Fn> _1ed796972_find_fn_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e0decb30_find_fn(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e0567d06_Trait> _1ed796c80_find_trait_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3333_ident) {
	return _1e0dece3d_find_trait(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1e057b8b9_Enum> _1ed79708d_find_enum_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3732_ident) {
	return _1e0ded24b_find_enum(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed79739b_find_type_enum_0(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _4137_ident) {
	return _1e0ded559_find_type_enum(_self_.safe_ptr<_1e0debe4d_ScopeChecker>(), _4137_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed795696_find_package_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _935_ident) {
	return _1e0e1378e_find_package(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed7959a4_select_package_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _1337_selector) {
	return _1e0e13a9c_select_package(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1e0e366e6_Var> _1ed795d5b_find_var_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e0e13e54_find_var(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed796213_find_type_alias_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e0e1430b_find_type_alias(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e010261b_Struct> _1ed7965ba_find_struct_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e0e146b3_find_struct(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e0144581_Fn> _1ed796972_find_fn_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e0e14a6a_find_fn(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e0567d06_Trait> _1ed796c80_find_trait_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3333_ident) {
	return _1e0e14d78_find_trait(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1e057b8b9_Enum> _1ed79708d_find_enum_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3732_ident) {
	return _1e0e15186_find_enum(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed79739b_find_type_enum_1(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _4137_ident) {
	return _1e0e15494_find_type_enum(_self_.safe_ptr<_1e0e13272_ImportInfo>(), _4137_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed795696_find_package_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _935_ident) {
	return _1e0e1672b_find_package(_self_.safe_ptr<_1e0e16253_Package>(), _935_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed7959a4_select_package_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _1337_selector) {
	return _1e0e16a39_select_package(_self_.safe_ptr<_1e0e16253_Package>(), _1337_selector);
}
inline jule::Ptr<_1e0e366e6_Var> _1ed795d5b_find_var_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e0e16de1_find_var(_self_.safe_ptr<_1e0e16253_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed796213_find_type_alias_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e0e17298_find_type_alias(_self_.safe_ptr<_1e0e16253_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e010261b_Struct> _1ed7965ba_find_struct_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e0e17650_find_struct(_self_.safe_ptr<_1e0e16253_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e0144581_Fn> _1ed796972_find_fn_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e0e17a07_find_fn(_self_.safe_ptr<_1e0e16253_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e0567d06_Trait> _1ed796c80_find_trait_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3333_ident) {
	return _1e0e17d15_find_trait(_self_.safe_ptr<_1e0e16253_Package>(), _3333_ident);
}
inline jule::Ptr<_1e057b8b9_Enum> _1ed79708d_find_enum_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3732_ident) {
	return _1e0e18123_find_enum(_self_.safe_ptr<_1e0e16253_Package>(), _3732_ident);
}
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed79739b_find_type_enum_2(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _4137_ident) {
	return _1e0e18431_find_type_enum(_self_.safe_ptr<_1e0e16253_Package>(), _4137_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed795696_find_package_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _935_ident) {
	return _1e0e1b8da_find_package(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _935_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed7959a4_select_package_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _1337_selector) {
	return _1e0e1bbe8_select_package(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _1337_selector);
}
inline jule::Ptr<_1e0e366e6_Var> _1ed795d5b_find_var_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e0e1c0a0_find_var(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed796213_find_type_alias_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e0e1c457_find_type_alias(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e010261b_Struct> _1ed7965ba_find_struct_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e0e1c80e_find_struct(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e0144581_Fn> _1ed796972_find_fn_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e0e1cbb6_find_fn(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e0567d06_Trait> _1ed796c80_find_trait_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3333_ident) {
	return _1e0e1cec4_find_trait(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _3333_ident);
}
inline jule::Ptr<_1e057b8b9_Enum> _1ed79708d_find_enum_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3732_ident) {
	return _1e0e1d2d2_find_enum(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _3732_ident);
}
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed79739b_find_type_enum_3(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _4137_ident) {
	return _1e0e1d5e0_find_type_enum(_self_.safe_ptr<_1e0e1b3bd_Sema>(), _4137_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed795696_find_package_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _935_ident) {
	return _1e0e78518_find_package(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1e0e13272_ImportInfo> _1ed7959a4_select_package_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _1337_selector) {
	return _1e0e78826_select_package(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1e0e366e6_Var> _1ed795d5b_find_var_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _1731_ident, jule::Bool _1743_cpp_linked) {
	return _1e0e78bcd_find_var(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed796213_find_type_alias_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2138_ident, jule::Bool _2150_cpp_linked) {
	return _1e0e79085_find_type_alias(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1e010261b_Struct> _1ed7965ba_find_struct_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2534_ident, jule::Bool _2546_cpp_linked) {
	return _1e0e7943c_find_struct(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1e0144581_Fn> _1ed796972_find_fn_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _2930_ident, jule::Bool _2942_cpp_linked) {
	return _1e0e797e4_find_fn(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1e0567d06_Trait> _1ed796c80_find_trait_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3333_ident) {
	return _1e0e79b02_find_trait(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1e057b8b9_Enum> _1ed79708d_find_enum_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _3732_ident) {
	return _1e0e79e10_find_enum(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _3732_ident);
}
inline jule::Ptr<_1e04c643a_TypeEnum> _1ed79739b_find_type_enum_4(jule::Trait<_1ed7974de_Lookup> _self_, jule::Str _4137_ident) {
	return _1e0e7a21d_find_type_enum(_self_.safe_ptr<_1e0e77eeb_SymbolTable>(), _4137_ident);
}
inline jule::Str _1aac5534c_name_0(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9b6dd3_name(_self_.safe_ptr<_1bb9b65b9_Flag>());
}
inline jule::I32 _1aac5547e_short_0(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9b7279_short(_self_.safe_ptr<_1bb9b65b9_Flag>());
}
inline jule::Str _1aac555b1_what_0(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9b7015_what(_self_.safe_ptr<_1bb9b65b9_Flag>());
}
inline void _1aac556e3_reset_0(jule::Trait<_1aac55825_CommonFlag> _self_) {
	_1bb9b7147_reset(_self_.safe_ptr<_1bb9b65b9_Flag>());
}
inline jule::Str _1aac5534c_name_1(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9b8b4e_name(_self_.safe_ptr<_1bb9ba579_Flag>());
}
inline jule::I32 _1aac5547e_short_1(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9ba975_short(_self_.safe_ptr<_1bb9ba579_Flag>());
}
inline jule::Str _1aac555b1_what_1(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9ba216_what(_self_.safe_ptr<_1bb9ba579_Flag>());
}
inline void _1aac556e3_reset_1(jule::Trait<_1aac55825_CommonFlag> _self_) {
	_1bb9ba843_reset(_self_.safe_ptr<_1bb9ba579_Flag>());
}
inline jule::Str _1aac5534c_name_2(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9bc1b3_name(_self_.safe_ptr<_1bb9bdadd_Flag>());
}
inline jule::I32 _1aac5547e_short_2(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9bded9_short(_self_.safe_ptr<_1bb9bdadd_Flag>());
}
inline jule::Str _1aac555b1_what_2(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9bd77a_what(_self_.safe_ptr<_1bb9bdadd_Flag>());
}
inline void _1aac556e3_reset_2(jule::Trait<_1aac55825_CommonFlag> _self_) {
	_1bb9bdda7_reset(_self_.safe_ptr<_1bb9bdadd_Flag>());
}
inline jule::Str _1aac5534c_name_3(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c076b_name(_self_.safe_ptr<_1bb9c2196_Flag>());
}
inline jule::I32 _1aac5547e_short_3(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c2592_short(_self_.safe_ptr<_1bb9c2196_Flag>());
}
inline jule::Str _1aac555b1_what_3(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c1d33_what(_self_.safe_ptr<_1bb9c2196_Flag>());
}
inline void _1aac556e3_reset_3(jule::Trait<_1aac55825_CommonFlag> _self_) {
	_1bb9c2460_reset(_self_.safe_ptr<_1bb9c2196_Flag>());
}
inline jule::Str _1aac5534c_name_4(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c3cd0_name(_self_.safe_ptr<_1bb9c570a_Flag>());
}
inline jule::I32 _1aac5547e_short_4(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c5b06_short(_self_.safe_ptr<_1bb9c570a_Flag>());
}
inline jule::Str _1aac555b1_what_4(jule::Trait<_1aac55825_CommonFlag> _self_) {
	return _1bb9c5397_what(_self_.safe_ptr<_1bb9c570a_Flag>());
}
inline void _1aac556e3_reset_4(jule::Trait<_1aac55825_CommonFlag> _self_) {
	_1bb9c59c4_reset(_self_.safe_ptr<_1bb9c570a_Flag>());
}


static _1e0e10a00_ImporterMptrData _1e0e10a00_Importer_mptr_data[] = {
	{
		._1e0e0e911_set_mod_path=_1e0e0e911_set_mod_path_0,
		._1e0e0eb64_get_mod_path=_1e0e0eb64_get_mod_path_0,
		._1e0e0ee72_mod_by_id=_1e0e0ee72_mod_by_id_0,
		._1e0e10280_get_import=_1e0e10280_get_import_0,
		._1e0e10637_import_package=_1e0e10637_import_package_0,
		._1e0e108ac_imported=_1e0e108ac_imported_0,
	},
};
static _1ed77b78c_KindMptrData _1ed77b78c_Kind_mptr_data[] = {
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_0,
		._1ed77b649_equals=_1ed77b649_equals_0,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_1,
		._1ed77b649_equals=_1ed77b649_equals_1,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_2,
		._1ed77b649_equals=_1ed77b649_equals_2,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_3,
		._1ed77b649_equals=_1ed77b649_equals_3,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_4,
		._1ed77b649_equals=_1ed77b649_equals_4,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_5,
		._1ed77b649_equals=_1ed77b649_equals_5,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_6,
		._1ed77b649_equals=_1ed77b649_equals_6,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_7,
		._1ed77b649_equals=_1ed77b649_equals_7,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_8,
		._1ed77b649_equals=_1ed77b649_equals_8,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_9,
		._1ed77b649_equals=_1ed77b649_equals_9,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_10,
		._1ed77b649_equals=_1ed77b649_equals_10,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_11,
		._1ed77b649_equals=_1ed77b649_equals_11,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_12,
		._1ed77b649_equals=_1ed77b649_equals_12,
	},
	{
		._1ed77b33b_to_str=_1ed77b33b_to_str_13,
		._1ed77b649_equals=_1ed77b649_equals_13,
	},
};
static _1ed7974de_LookupMptrData _1ed7974de_Lookup_mptr_data[] = {
	{
		._1ed795696_find_package=_1ed795696_find_package_0,
		._1ed7959a4_select_package=_1ed7959a4_select_package_0,
		._1ed795d5b_find_var=_1ed795d5b_find_var_0,
		._1ed796213_find_type_alias=_1ed796213_find_type_alias_0,
		._1ed7965ba_find_struct=_1ed7965ba_find_struct_0,
		._1ed796972_find_fn=_1ed796972_find_fn_0,
		._1ed796c80_find_trait=_1ed796c80_find_trait_0,
		._1ed79708d_find_enum=_1ed79708d_find_enum_0,
		._1ed79739b_find_type_enum=_1ed79739b_find_type_enum_0,
	},
	{
		._1ed795696_find_package=_1ed795696_find_package_1,
		._1ed7959a4_select_package=_1ed7959a4_select_package_1,
		._1ed795d5b_find_var=_1ed795d5b_find_var_1,
		._1ed796213_find_type_alias=_1ed796213_find_type_alias_1,
		._1ed7965ba_find_struct=_1ed7965ba_find_struct_1,
		._1ed796972_find_fn=_1ed796972_find_fn_1,
		._1ed796c80_find_trait=_1ed796c80_find_trait_1,
		._1ed79708d_find_enum=_1ed79708d_find_enum_1,
		._1ed79739b_find_type_enum=_1ed79739b_find_type_enum_1,
	},
	{
		._1ed795696_find_package=_1ed795696_find_package_2,
		._1ed7959a4_select_package=_1ed7959a4_select_package_2,
		._1ed795d5b_find_var=_1ed795d5b_find_var_2,
		._1ed796213_find_type_alias=_1ed796213_find_type_alias_2,
		._1ed7965ba_find_struct=_1ed7965ba_find_struct_2,
		._1ed796972_find_fn=_1ed796972_find_fn_2,
		._1ed796c80_find_trait=_1ed796c80_find_trait_2,
		._1ed79708d_find_enum=_1ed79708d_find_enum_2,
		._1ed79739b_find_type_enum=_1ed79739b_find_type_enum_2,
	},
	{
		._1ed795696_find_package=_1ed795696_find_package_3,
		._1ed7959a4_select_package=_1ed7959a4_select_package_3,
		._1ed795d5b_find_var=_1ed795d5b_find_var_3,
		._1ed796213_find_type_alias=_1ed796213_find_type_alias_3,
		._1ed7965ba_find_struct=_1ed7965ba_find_struct_3,
		._1ed796972_find_fn=_1ed796972_find_fn_3,
		._1ed796c80_find_trait=_1ed796c80_find_trait_3,
		._1ed79708d_find_enum=_1ed79708d_find_enum_3,
		._1ed79739b_find_type_enum=_1ed79739b_find_type_enum_3,
	},
	{
		._1ed795696_find_package=_1ed795696_find_package_4,
		._1ed7959a4_select_package=_1ed7959a4_select_package_4,
		._1ed795d5b_find_var=_1ed795d5b_find_var_4,
		._1ed796213_find_type_alias=_1ed796213_find_type_alias_4,
		._1ed7965ba_find_struct=_1ed7965ba_find_struct_4,
		._1ed796972_find_fn=_1ed796972_find_fn_4,
		._1ed796c80_find_trait=_1ed796c80_find_trait_4,
		._1ed79708d_find_enum=_1ed79708d_find_enum_4,
		._1ed79739b_find_type_enum=_1ed79739b_find_type_enum_4,
	},
};
static _1aac55825_CommonFlagMptrData _1aac55825_CommonFlag_mptr_data[] = {
	{
		._1aac5534c_name=_1aac5534c_name_0,
		._1aac5547e_short=_1aac5547e_short_0,
		._1aac555b1_what=_1aac555b1_what_0,
		._1aac556e3_reset=_1aac556e3_reset_0,
	},
	{
		._1aac5534c_name=_1aac5534c_name_1,
		._1aac5547e_short=_1aac5547e_short_1,
		._1aac555b1_what=_1aac555b1_what_1,
		._1aac556e3_reset=_1aac556e3_reset_1,
	},
	{
		._1aac5534c_name=_1aac5534c_name_2,
		._1aac5547e_short=_1aac5547e_short_2,
		._1aac555b1_what=_1aac555b1_what_2,
		._1aac556e3_reset=_1aac556e3_reset_2,
	},
	{
		._1aac5534c_name=_1aac5534c_name_3,
		._1aac5547e_short=_1aac5547e_short_3,
		._1aac555b1_what=_1aac555b1_what_3,
		._1aac556e3_reset=_1aac556e3_reset_3,
	},
	{
		._1aac5534c_name=_1aac5534c_name_4,
		._1aac5547e_short=_1aac5547e_short_4,
		._1aac555b1_what=_1aac555b1_what_4,
		._1aac556e3_reset=_1aac556e3_reset_4,
	},
};


jule::Str _1aac36031_OUT_DIR = jule::Str("dist", 4);
jule::Str _1aac3e8a8_OUT_NAME = jule::Str("ir.cpp", 6);
jule::Str _1aac4a177_OUT = jule::Str();
jule::Str _1db65e5d8_COMPILER = jule::Str();
jule::Str _1db65e792_COMPILER_PATH = jule::Str();
jule::Str _1db65e94b_CPP_STD = jule::Str("cpp17", 5);
jule::Bool _1db65eb05_SHADOWING = false;
jule::Bool _1db65ecae_TRANSPILATION = false;
jule::Bool _1db65ee68_TEST = false;
jule::Bool _1db6601bb_RC = true;
jule::Bool _1db6604a7_SAFETY = true;
jule::Bool _1db66070a_PRODUCTION = false;
jule::Ptr<_1dd5e8493_RangeTable> _1dd592e98__L = jule::new_ptr<_1dd5e8493_RangeTable>(_1dd5e8493_RangeTable{._field_r16=jule::Slice<_1dd5e7a58_Range16>::make({_1dd5e7a58_Range16{._field_lo=65LLU, ._field_hi=90LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=97LLU, ._field_hi=122LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=170LLU, ._field_hi=181LLU, ._field_stride=11LLU},_1dd5e7a58_Range16{._field_lo=186LLU, ._field_hi=192LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=193LLU, ._field_hi=214LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=216LLU, ._field_hi=246LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=248LLU, ._field_hi=705LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=710LLU, ._field_hi=721LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=736LLU, ._field_hi=740LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=748LLU, ._field_hi=750LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=880LLU, ._field_hi=884LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=886LLU, ._field_hi=887LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=890LLU, ._field_hi=893LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=895LLU, ._field_hi=902LLU, ._field_stride=7LLU},_1dd5e7a58_Range16{._field_lo=904LLU, ._field_hi=906LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=908LLU, ._field_hi=910LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=911LLU, ._field_hi=929LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=931LLU, ._field_hi=1013LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1015LLU, ._field_hi=1153LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1162LLU, ._field_hi=1327LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1329LLU, ._field_hi=1366LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1369LLU, ._field_hi=1376LLU, ._field_stride=7LLU},_1dd5e7a58_Range16{._field_lo=1377LLU, ._field_hi=1416LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1488LLU, ._field_hi=1514LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1519LLU, ._field_hi=1522LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1568LLU, ._field_hi=1610LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1646LLU, ._field_hi=1647LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1649LLU, ._field_hi=1747LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1749LLU, ._field_hi=1765LLU, ._field_stride=16LLU},_1dd5e7a58_Range16{._field_lo=1766LLU, ._field_hi=1774LLU, ._field_stride=8LLU},_1dd5e7a58_Range16{._field_lo=1775LLU, ._field_hi=1786LLU, ._field_stride=11LLU},_1dd5e7a58_Range16{._field_lo=1787LLU, ._field_hi=1788LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1791LLU, ._field_hi=1808LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=1810LLU, ._field_hi=1839LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1869LLU, ._field_hi=1957LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=1969LLU, ._field_hi=1994LLU, ._field_stride=25LLU},_1dd5e7a58_Range16{._field_lo=1995LLU, ._field_hi=2026LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2036LLU, ._field_hi=2037LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2042LLU, ._field_hi=2048LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=2049LLU, ._field_hi=2069LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2074LLU, ._field_hi=2084LLU, ._field_stride=10LLU},_1dd5e7a58_Range16{._field_lo=2088LLU, ._field_hi=2112LLU, ._field_stride=24LLU},_1dd5e7a58_Range16{._field_lo=2113LLU, ._field_hi=2136LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2144LLU, ._field_hi=2154LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2160LLU, ._field_hi=2183LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2185LLU, ._field_hi=2190LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2208LLU, ._field_hi=2249LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2308LLU, ._field_hi=2361LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2365LLU, ._field_hi=2384LLU, ._field_stride=19LLU},_1dd5e7a58_Range16{._field_lo=2392LLU, ._field_hi=2401LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2417LLU, ._field_hi=2432LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2437LLU, ._field_hi=2444LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2447LLU, ._field_hi=2448LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2451LLU, ._field_hi=2472LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2474LLU, ._field_hi=2480LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2482LLU, ._field_hi=2486LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=2487LLU, ._field_hi=2489LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2493LLU, ._field_hi=2510LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=2524LLU, ._field_hi=2525LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2527LLU, ._field_hi=2529LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2544LLU, ._field_hi=2545LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2556LLU, ._field_hi=2565LLU, ._field_stride=9LLU},_1dd5e7a58_Range16{._field_lo=2566LLU, ._field_hi=2570LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2575LLU, ._field_hi=2576LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2579LLU, ._field_hi=2600LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2602LLU, ._field_hi=2608LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2610LLU, ._field_hi=2611LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2613LLU, ._field_hi=2614LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2616LLU, ._field_hi=2617LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2649LLU, ._field_hi=2652LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2654LLU, ._field_hi=2674LLU, ._field_stride=20LLU},_1dd5e7a58_Range16{._field_lo=2675LLU, ._field_hi=2676LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2693LLU, ._field_hi=2701LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2703LLU, ._field_hi=2705LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2707LLU, ._field_hi=2728LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2730LLU, ._field_hi=2736LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2738LLU, ._field_hi=2739LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2741LLU, ._field_hi=2745LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2749LLU, ._field_hi=2768LLU, ._field_stride=19LLU},_1dd5e7a58_Range16{._field_lo=2784LLU, ._field_hi=2785LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2809LLU, ._field_hi=2821LLU, ._field_stride=12LLU},_1dd5e7a58_Range16{._field_lo=2822LLU, ._field_hi=2828LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2831LLU, ._field_hi=2832LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2835LLU, ._field_hi=2856LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2858LLU, ._field_hi=2864LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2866LLU, ._field_hi=2867LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2869LLU, ._field_hi=2873LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2877LLU, ._field_hi=2908LLU, ._field_stride=31LLU},_1dd5e7a58_Range16{._field_lo=2909LLU, ._field_hi=2911LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=2912LLU, ._field_hi=2913LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2929LLU, ._field_hi=2947LLU, ._field_stride=18LLU},_1dd5e7a58_Range16{._field_lo=2949LLU, ._field_hi=2954LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2958LLU, ._field_hi=2960LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2962LLU, ._field_hi=2965LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2969LLU, ._field_hi=2970LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2972LLU, ._field_hi=2974LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=2975LLU, ._field_hi=2979LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=2980LLU, ._field_hi=2984LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=2985LLU, ._field_hi=2986LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=2990LLU, ._field_hi=3001LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3024LLU, ._field_hi=3077LLU, ._field_stride=53LLU},_1dd5e7a58_Range16{._field_lo=3078LLU, ._field_hi=3084LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3086LLU, ._field_hi=3088LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3090LLU, ._field_hi=3112LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3114LLU, ._field_hi=3129LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3133LLU, ._field_hi=3160LLU, ._field_stride=27LLU},_1dd5e7a58_Range16{._field_lo=3161LLU, ._field_hi=3162LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3165LLU, ._field_hi=3168LLU, ._field_stride=3LLU},_1dd5e7a58_Range16{._field_lo=3169LLU, ._field_hi=3200LLU, ._field_stride=31LLU},_1dd5e7a58_Range16{._field_lo=3205LLU, ._field_hi=3212LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3214LLU, ._field_hi=3216LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3218LLU, ._field_hi=3240LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3242LLU, ._field_hi=3251LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3253LLU, ._field_hi=3257LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3261LLU, ._field_hi=3293LLU, ._field_stride=32LLU},_1dd5e7a58_Range16{._field_lo=3294LLU, ._field_hi=3296LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=3297LLU, ._field_hi=3313LLU, ._field_stride=16LLU},_1dd5e7a58_Range16{._field_lo=3314LLU, ._field_hi=3332LLU, ._field_stride=18LLU},_1dd5e7a58_Range16{._field_lo=3333LLU, ._field_hi=3340LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3342LLU, ._field_hi=3344LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3346LLU, ._field_hi=3386LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3389LLU, ._field_hi=3406LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=3412LLU, ._field_hi=3414LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3423LLU, ._field_hi=3425LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3450LLU, ._field_hi=3455LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3461LLU, ._field_hi=3478LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3482LLU, ._field_hi=3505LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3507LLU, ._field_hi=3515LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3517LLU, ._field_hi=3520LLU, ._field_stride=3LLU},_1dd5e7a58_Range16{._field_lo=3521LLU, ._field_hi=3526LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3585LLU, ._field_hi=3632LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3634LLU, ._field_hi=3635LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3648LLU, ._field_hi=3654LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3713LLU, ._field_hi=3714LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3716LLU, ._field_hi=3718LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=3719LLU, ._field_hi=3722LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3724LLU, ._field_hi=3747LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3749LLU, ._field_hi=3751LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=3752LLU, ._field_hi=3760LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3762LLU, ._field_hi=3763LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3773LLU, ._field_hi=3776LLU, ._field_stride=3LLU},_1dd5e7a58_Range16{._field_lo=3777LLU, ._field_hi=3780LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3782LLU, ._field_hi=3804LLU, ._field_stride=22LLU},_1dd5e7a58_Range16{._field_lo=3805LLU, ._field_hi=3807LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3840LLU, ._field_hi=3904LLU, ._field_stride=64LLU},_1dd5e7a58_Range16{._field_lo=3905LLU, ._field_hi=3911LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3913LLU, ._field_hi=3948LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=3976LLU, ._field_hi=3980LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4096LLU, ._field_hi=4138LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4159LLU, ._field_hi=4176LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=4177LLU, ._field_hi=4181LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4186LLU, ._field_hi=4189LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4193LLU, ._field_hi=4197LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=4198LLU, ._field_hi=4206LLU, ._field_stride=8LLU},_1dd5e7a58_Range16{._field_lo=4207LLU, ._field_hi=4208LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4213LLU, ._field_hi=4225LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4238LLU, ._field_hi=4256LLU, ._field_stride=18LLU},_1dd5e7a58_Range16{._field_lo=4257LLU, ._field_hi=4293LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4295LLU, ._field_hi=4301LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=4304LLU, ._field_hi=4346LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4348LLU, ._field_hi=4680LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4682LLU, ._field_hi=4685LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4688LLU, ._field_hi=4694LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4696LLU, ._field_hi=4698LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=4699LLU, ._field_hi=4701LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4704LLU, ._field_hi=4744LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4746LLU, ._field_hi=4749LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4752LLU, ._field_hi=4784LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4786LLU, ._field_hi=4789LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4792LLU, ._field_hi=4798LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4800LLU, ._field_hi=4802LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=4803LLU, ._field_hi=4805LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4808LLU, ._field_hi=4822LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4824LLU, ._field_hi=4880LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4882LLU, ._field_hi=4885LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4888LLU, ._field_hi=4954LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=4992LLU, ._field_hi=5007LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5024LLU, ._field_hi=5109LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5112LLU, ._field_hi=5117LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5121LLU, ._field_hi=5740LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5743LLU, ._field_hi=5759LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5761LLU, ._field_hi=5786LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5792LLU, ._field_hi=5866LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5873LLU, ._field_hi=5880LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5888LLU, ._field_hi=5905LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5919LLU, ._field_hi=5937LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5952LLU, ._field_hi=5969LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5984LLU, ._field_hi=5996LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=5998LLU, ._field_hi=6000LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6016LLU, ._field_hi=6067LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6103LLU, ._field_hi=6108LLU, ._field_stride=5LLU},_1dd5e7a58_Range16{._field_lo=6176LLU, ._field_hi=6264LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6272LLU, ._field_hi=6276LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6279LLU, ._field_hi=6312LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6314LLU, ._field_hi=6320LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=6321LLU, ._field_hi=6389LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6400LLU, ._field_hi=6430LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6480LLU, ._field_hi=6509LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6512LLU, ._field_hi=6516LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6528LLU, ._field_hi=6571LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6576LLU, ._field_hi=6601LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6656LLU, ._field_hi=6678LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6688LLU, ._field_hi=6740LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6823LLU, ._field_hi=6917LLU, ._field_stride=94LLU},_1dd5e7a58_Range16{._field_lo=6918LLU, ._field_hi=6963LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=6981LLU, ._field_hi=6988LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7043LLU, ._field_hi=7072LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7086LLU, ._field_hi=7087LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7098LLU, ._field_hi=7141LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7168LLU, ._field_hi=7203LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7245LLU, ._field_hi=7247LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7258LLU, ._field_hi=7293LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7296LLU, ._field_hi=7304LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7312LLU, ._field_hi=7354LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7357LLU, ._field_hi=7359LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7401LLU, ._field_hi=7404LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7406LLU, ._field_hi=7411LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7413LLU, ._field_hi=7414LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7418LLU, ._field_hi=7424LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=7425LLU, ._field_hi=7615LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7680LLU, ._field_hi=7957LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7960LLU, ._field_hi=7965LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=7968LLU, ._field_hi=8005LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8008LLU, ._field_hi=8013LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8016LLU, ._field_hi=8023LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8025LLU, ._field_hi=8031LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=8032LLU, ._field_hi=8061LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8064LLU, ._field_hi=8116LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8118LLU, ._field_hi=8124LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8126LLU, ._field_hi=8130LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=8131LLU, ._field_hi=8132LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8134LLU, ._field_hi=8140LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8144LLU, ._field_hi=8147LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8150LLU, ._field_hi=8155LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8160LLU, ._field_hi=8172LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8178LLU, ._field_hi=8180LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8182LLU, ._field_hi=8188LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8305LLU, ._field_hi=8319LLU, ._field_stride=14LLU},_1dd5e7a58_Range16{._field_lo=8336LLU, ._field_hi=8348LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8450LLU, ._field_hi=8455LLU, ._field_stride=5LLU},_1dd5e7a58_Range16{._field_lo=8458LLU, ._field_hi=8467LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8469LLU, ._field_hi=8473LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=8474LLU, ._field_hi=8477LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8484LLU, ._field_hi=8490LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=8491LLU, ._field_hi=8493LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8495LLU, ._field_hi=8505LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8508LLU, ._field_hi=8511LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8517LLU, ._field_hi=8521LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=8526LLU, ._field_hi=8579LLU, ._field_stride=53LLU},_1dd5e7a58_Range16{._field_lo=8580LLU, ._field_hi=11264LLU, ._field_stride=2684LLU},_1dd5e7a58_Range16{._field_lo=11265LLU, ._field_hi=11492LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11499LLU, ._field_hi=11502LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11506LLU, ._field_hi=11507LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11520LLU, ._field_hi=11557LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11559LLU, ._field_hi=11565LLU, ._field_stride=6LLU},_1dd5e7a58_Range16{._field_lo=11568LLU, ._field_hi=11623LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11631LLU, ._field_hi=11648LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=11649LLU, ._field_hi=11670LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11680LLU, ._field_hi=11686LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11688LLU, ._field_hi=11694LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11696LLU, ._field_hi=11702LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11704LLU, ._field_hi=11710LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11712LLU, ._field_hi=11718LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11720LLU, ._field_hi=11726LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11728LLU, ._field_hi=11734LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11736LLU, ._field_hi=11742LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=11823LLU, ._field_hi=12293LLU, ._field_stride=470LLU},_1dd5e7a58_Range16{._field_lo=12294LLU, ._field_hi=12337LLU, ._field_stride=43LLU},_1dd5e7a58_Range16{._field_lo=12338LLU, ._field_hi=12341LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12347LLU, ._field_hi=12348LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12353LLU, ._field_hi=12438LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12445LLU, ._field_hi=12447LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12449LLU, ._field_hi=12538LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12540LLU, ._field_hi=12543LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12549LLU, ._field_hi=12591LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12593LLU, ._field_hi=12686LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12704LLU, ._field_hi=12735LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=12784LLU, ._field_hi=12799LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=13312LLU, ._field_hi=19903LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=19968LLU, ._field_hi=42124LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42192LLU, ._field_hi=42237LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42240LLU, ._field_hi=42508LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42512LLU, ._field_hi=42527LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42538LLU, ._field_hi=42539LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42560LLU, ._field_hi=42606LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42623LLU, ._field_hi=42653LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42656LLU, ._field_hi=42725LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42775LLU, ._field_hi=42783LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42786LLU, ._field_hi=42888LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42891LLU, ._field_hi=42954LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42960LLU, ._field_hi=42961LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42963LLU, ._field_hi=42965LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=42966LLU, ._field_hi=42969LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=42994LLU, ._field_hi=43009LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43011LLU, ._field_hi=43013LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43015LLU, ._field_hi=43018LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43020LLU, ._field_hi=43042LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43072LLU, ._field_hi=43123LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43138LLU, ._field_hi=43187LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43250LLU, ._field_hi=43255LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43259LLU, ._field_hi=43261LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=43262LLU, ._field_hi=43274LLU, ._field_stride=12LLU},_1dd5e7a58_Range16{._field_lo=43275LLU, ._field_hi=43301LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43312LLU, ._field_hi=43334LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43360LLU, ._field_hi=43388LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43396LLU, ._field_hi=43442LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43471LLU, ._field_hi=43488LLU, ._field_stride=17LLU},_1dd5e7a58_Range16{._field_lo=43489LLU, ._field_hi=43492LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43494LLU, ._field_hi=43503LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43514LLU, ._field_hi=43518LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43520LLU, ._field_hi=43560LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43584LLU, ._field_hi=43586LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43588LLU, ._field_hi=43595LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43616LLU, ._field_hi=43638LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43642LLU, ._field_hi=43646LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=43647LLU, ._field_hi=43695LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43697LLU, ._field_hi=43701LLU, ._field_stride=4LLU},_1dd5e7a58_Range16{._field_lo=43702LLU, ._field_hi=43705LLU, ._field_stride=3LLU},_1dd5e7a58_Range16{._field_lo=43706LLU, ._field_hi=43709LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43712LLU, ._field_hi=43714LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=43739LLU, ._field_hi=43741LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43744LLU, ._field_hi=43754LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43762LLU, ._field_hi=43764LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43777LLU, ._field_hi=43782LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43785LLU, ._field_hi=43790LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43793LLU, ._field_hi=43798LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43808LLU, ._field_hi=43814LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43816LLU, ._field_hi=43822LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43824LLU, ._field_hi=43866LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43868LLU, ._field_hi=43881LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=43888LLU, ._field_hi=44002LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=44032LLU, ._field_hi=55203LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=55216LLU, ._field_hi=55238LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=55243LLU, ._field_hi=55291LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=63744LLU, ._field_hi=64109LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64112LLU, ._field_hi=64217LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64256LLU, ._field_hi=64262LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64275LLU, ._field_hi=64279LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64285LLU, ._field_hi=64287LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=64288LLU, ._field_hi=64296LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64298LLU, ._field_hi=64310LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64312LLU, ._field_hi=64316LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64318LLU, ._field_hi=64320LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=64321LLU, ._field_hi=64323LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=64324LLU, ._field_hi=64326LLU, ._field_stride=2LLU},_1dd5e7a58_Range16{._field_lo=64327LLU, ._field_hi=64433LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64467LLU, ._field_hi=64829LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64848LLU, ._field_hi=64911LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=64914LLU, ._field_hi=64967LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65008LLU, ._field_hi=65019LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65136LLU, ._field_hi=65140LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65142LLU, ._field_hi=65276LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65313LLU, ._field_hi=65338LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65345LLU, ._field_hi=65370LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65382LLU, ._field_hi=65470LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65474LLU, ._field_hi=65479LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65482LLU, ._field_hi=65487LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65490LLU, ._field_hi=65495LLU, ._field_stride=1LLU},_1dd5e7a58_Range16{._field_lo=65498LLU, ._field_hi=65500LLU, ._field_stride=1LLU}}), ._field_r32=jule::Slice<_1dd5e8020_Range32>::make({_1dd5e8020_Range32{._field_lo=65536LLU, ._field_hi=65547LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65549LLU, ._field_hi=65574LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65576LLU, ._field_hi=65594LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65596LLU, ._field_hi=65597LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65599LLU, ._field_hi=65613LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65616LLU, ._field_hi=65629LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=65664LLU, ._field_hi=65786LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66176LLU, ._field_hi=66204LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66208LLU, ._field_hi=66256LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66304LLU, ._field_hi=66335LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66349LLU, ._field_hi=66368LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66370LLU, ._field_hi=66377LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66384LLU, ._field_hi=66421LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66432LLU, ._field_hi=66461LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66464LLU, ._field_hi=66499LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66504LLU, ._field_hi=66511LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66560LLU, ._field_hi=66717LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66736LLU, ._field_hi=66771LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66776LLU, ._field_hi=66811LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66816LLU, ._field_hi=66855LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66864LLU, ._field_hi=66915LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66928LLU, ._field_hi=66938LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66940LLU, ._field_hi=66954LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66956LLU, ._field_hi=66962LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66964LLU, ._field_hi=66965LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66967LLU, ._field_hi=66977LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66979LLU, ._field_hi=66993LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=66995LLU, ._field_hi=67001LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67003LLU, ._field_hi=67004LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67072LLU, ._field_hi=67382LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67392LLU, ._field_hi=67413LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67424LLU, ._field_hi=67431LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67456LLU, ._field_hi=67461LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67463LLU, ._field_hi=67504LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67506LLU, ._field_hi=67514LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67584LLU, ._field_hi=67589LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67592LLU, ._field_hi=67594LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=67595LLU, ._field_hi=67637LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67639LLU, ._field_hi=67640LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67644LLU, ._field_hi=67647LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=67648LLU, ._field_hi=67669LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67680LLU, ._field_hi=67702LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67712LLU, ._field_hi=67742LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67808LLU, ._field_hi=67826LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67828LLU, ._field_hi=67829LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67840LLU, ._field_hi=67861LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67872LLU, ._field_hi=67897LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=67968LLU, ._field_hi=68023LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68030LLU, ._field_hi=68031LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68096LLU, ._field_hi=68112LLU, ._field_stride=16LLU},_1dd5e8020_Range32{._field_lo=68113LLU, ._field_hi=68115LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68117LLU, ._field_hi=68119LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68121LLU, ._field_hi=68149LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68192LLU, ._field_hi=68220LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68224LLU, ._field_hi=68252LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68288LLU, ._field_hi=68295LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68297LLU, ._field_hi=68324LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68352LLU, ._field_hi=68405LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68416LLU, ._field_hi=68437LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68448LLU, ._field_hi=68466LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68480LLU, ._field_hi=68497LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68608LLU, ._field_hi=68680LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68736LLU, ._field_hi=68786LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68800LLU, ._field_hi=68850LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=68864LLU, ._field_hi=68899LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69248LLU, ._field_hi=69289LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69296LLU, ._field_hi=69297LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69376LLU, ._field_hi=69404LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69415LLU, ._field_hi=69424LLU, ._field_stride=9LLU},_1dd5e8020_Range32{._field_lo=69425LLU, ._field_hi=69445LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69488LLU, ._field_hi=69505LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69552LLU, ._field_hi=69572LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69600LLU, ._field_hi=69622LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69635LLU, ._field_hi=69687LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69745LLU, ._field_hi=69746LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69749LLU, ._field_hi=69763LLU, ._field_stride=14LLU},_1dd5e8020_Range32{._field_lo=69764LLU, ._field_hi=69807LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69840LLU, ._field_hi=69864LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69891LLU, ._field_hi=69926LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=69956LLU, ._field_hi=69959LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=69968LLU, ._field_hi=70002LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70006LLU, ._field_hi=70019LLU, ._field_stride=13LLU},_1dd5e8020_Range32{._field_lo=70020LLU, ._field_hi=70066LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70081LLU, ._field_hi=70084LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70106LLU, ._field_hi=70108LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=70144LLU, ._field_hi=70161LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70163LLU, ._field_hi=70187LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70207LLU, ._field_hi=70208LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70272LLU, ._field_hi=70278LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70280LLU, ._field_hi=70282LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=70283LLU, ._field_hi=70285LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70287LLU, ._field_hi=70301LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70303LLU, ._field_hi=70312LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70320LLU, ._field_hi=70366LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70405LLU, ._field_hi=70412LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70415LLU, ._field_hi=70416LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70419LLU, ._field_hi=70440LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70442LLU, ._field_hi=70448LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70450LLU, ._field_hi=70451LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70453LLU, ._field_hi=70457LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70461LLU, ._field_hi=70480LLU, ._field_stride=19LLU},_1dd5e8020_Range32{._field_lo=70493LLU, ._field_hi=70497LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70656LLU, ._field_hi=70708LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70727LLU, ._field_hi=70730LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70751LLU, ._field_hi=70753LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70784LLU, ._field_hi=70831LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70852LLU, ._field_hi=70853LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=70855LLU, ._field_hi=71040LLU, ._field_stride=185LLU},_1dd5e8020_Range32{._field_lo=71041LLU, ._field_hi=71086LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71128LLU, ._field_hi=71131LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71168LLU, ._field_hi=71215LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71236LLU, ._field_hi=71296LLU, ._field_stride=60LLU},_1dd5e8020_Range32{._field_lo=71297LLU, ._field_hi=71338LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71352LLU, ._field_hi=71424LLU, ._field_stride=72LLU},_1dd5e8020_Range32{._field_lo=71425LLU, ._field_hi=71450LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71488LLU, ._field_hi=71494LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71680LLU, ._field_hi=71723LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71840LLU, ._field_hi=71903LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71935LLU, ._field_hi=71942LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71945LLU, ._field_hi=71948LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=71949LLU, ._field_hi=71955LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71957LLU, ._field_hi=71958LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71960LLU, ._field_hi=71983LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=71999LLU, ._field_hi=72001LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=72096LLU, ._field_hi=72103LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72106LLU, ._field_hi=72144LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72161LLU, ._field_hi=72163LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=72192LLU, ._field_hi=72203LLU, ._field_stride=11LLU},_1dd5e8020_Range32{._field_lo=72204LLU, ._field_hi=72242LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72250LLU, ._field_hi=72272LLU, ._field_stride=22LLU},_1dd5e8020_Range32{._field_lo=72284LLU, ._field_hi=72329LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72349LLU, ._field_hi=72368LLU, ._field_stride=19LLU},_1dd5e8020_Range32{._field_lo=72369LLU, ._field_hi=72440LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72704LLU, ._field_hi=72712LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72714LLU, ._field_hi=72750LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72768LLU, ._field_hi=72818LLU, ._field_stride=50LLU},_1dd5e8020_Range32{._field_lo=72819LLU, ._field_hi=72847LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72960LLU, ._field_hi=72966LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72968LLU, ._field_hi=72969LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=72971LLU, ._field_hi=73008LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73030LLU, ._field_hi=73056LLU, ._field_stride=26LLU},_1dd5e8020_Range32{._field_lo=73057LLU, ._field_hi=73061LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73063LLU, ._field_hi=73064LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73066LLU, ._field_hi=73097LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73112LLU, ._field_hi=73440LLU, ._field_stride=328LLU},_1dd5e8020_Range32{._field_lo=73441LLU, ._field_hi=73458LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73474LLU, ._field_hi=73476LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=73477LLU, ._field_hi=73488LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73490LLU, ._field_hi=73523LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=73648LLU, ._field_hi=73728LLU, ._field_stride=80LLU},_1dd5e8020_Range32{._field_lo=73729LLU, ._field_hi=74649LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=74880LLU, ._field_hi=75075LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=77712LLU, ._field_hi=77808LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=77824LLU, ._field_hi=78895LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=78913LLU, ._field_hi=78918LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=82944LLU, ._field_hi=83526LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92160LLU, ._field_hi=92728LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92736LLU, ._field_hi=92766LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92784LLU, ._field_hi=92862LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92880LLU, ._field_hi=92909LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92928LLU, ._field_hi=92975LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=92992LLU, ._field_hi=92995LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=93027LLU, ._field_hi=93047LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=93053LLU, ._field_hi=93071LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=93760LLU, ._field_hi=93823LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=93952LLU, ._field_hi=94026LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=94032LLU, ._field_hi=94099LLU, ._field_stride=67LLU},_1dd5e8020_Range32{._field_lo=94100LLU, ._field_hi=94111LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=94176LLU, ._field_hi=94177LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=94179LLU, ._field_hi=94208LLU, ._field_stride=29LLU},_1dd5e8020_Range32{._field_lo=94209LLU, ._field_hi=100343LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=100352LLU, ._field_hi=101589LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=101632LLU, ._field_hi=101640LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110576LLU, ._field_hi=110579LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110581LLU, ._field_hi=110587LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110589LLU, ._field_hi=110590LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110592LLU, ._field_hi=110882LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110898LLU, ._field_hi=110928LLU, ._field_stride=30LLU},_1dd5e8020_Range32{._field_lo=110929LLU, ._field_hi=110930LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110933LLU, ._field_hi=110948LLU, ._field_stride=15LLU},_1dd5e8020_Range32{._field_lo=110949LLU, ._field_hi=110951LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=110960LLU, ._field_hi=111355LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=113664LLU, ._field_hi=113770LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=113776LLU, ._field_hi=113788LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=113792LLU, ._field_hi=113800LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=113808LLU, ._field_hi=113817LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119808LLU, ._field_hi=119892LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119894LLU, ._field_hi=119964LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119966LLU, ._field_hi=119967LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119970LLU, ._field_hi=119973LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=119974LLU, ._field_hi=119977LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=119978LLU, ._field_hi=119980LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119982LLU, ._field_hi=119993LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=119995LLU, ._field_hi=119997LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=119998LLU, ._field_hi=120003LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120005LLU, ._field_hi=120069LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120071LLU, ._field_hi=120074LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120077LLU, ._field_hi=120084LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120086LLU, ._field_hi=120092LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120094LLU, ._field_hi=120121LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120123LLU, ._field_hi=120126LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120128LLU, ._field_hi=120132LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120134LLU, ._field_hi=120138LLU, ._field_stride=4LLU},_1dd5e8020_Range32{._field_lo=120139LLU, ._field_hi=120144LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120146LLU, ._field_hi=120485LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120488LLU, ._field_hi=120512LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120514LLU, ._field_hi=120538LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120540LLU, ._field_hi=120570LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120572LLU, ._field_hi=120596LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120598LLU, ._field_hi=120628LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120630LLU, ._field_hi=120654LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120656LLU, ._field_hi=120686LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120688LLU, ._field_hi=120712LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120714LLU, ._field_hi=120744LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120746LLU, ._field_hi=120770LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=120772LLU, ._field_hi=120779LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=122624LLU, ._field_hi=122654LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=122661LLU, ._field_hi=122666LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=122928LLU, ._field_hi=122989LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=123136LLU, ._field_hi=123180LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=123191LLU, ._field_hi=123197LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=123214LLU, ._field_hi=123536LLU, ._field_stride=322LLU},_1dd5e8020_Range32{._field_lo=123537LLU, ._field_hi=123565LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=123584LLU, ._field_hi=123627LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124112LLU, ._field_hi=124139LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124896LLU, ._field_hi=124902LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124904LLU, ._field_hi=124907LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124909LLU, ._field_hi=124910LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124912LLU, ._field_hi=124926LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=124928LLU, ._field_hi=125124LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=125184LLU, ._field_hi=125251LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=125259LLU, ._field_hi=126464LLU, ._field_stride=1205LLU},_1dd5e8020_Range32{._field_lo=126465LLU, ._field_hi=126467LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126469LLU, ._field_hi=126495LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126497LLU, ._field_hi=126498LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126500LLU, ._field_hi=126503LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=126505LLU, ._field_hi=126514LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126516LLU, ._field_hi=126519LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126521LLU, ._field_hi=126523LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=126530LLU, ._field_hi=126535LLU, ._field_stride=5LLU},_1dd5e8020_Range32{._field_lo=126537LLU, ._field_hi=126541LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=126542LLU, ._field_hi=126543LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126545LLU, ._field_hi=126546LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126548LLU, ._field_hi=126551LLU, ._field_stride=3LLU},_1dd5e8020_Range32{._field_lo=126553LLU, ._field_hi=126561LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=126562LLU, ._field_hi=126564LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=126567LLU, ._field_hi=126570LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126572LLU, ._field_hi=126578LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126580LLU, ._field_hi=126583LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126585LLU, ._field_hi=126588LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126590LLU, ._field_hi=126592LLU, ._field_stride=2LLU},_1dd5e8020_Range32{._field_lo=126593LLU, ._field_hi=126601LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126603LLU, ._field_hi=126619LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126625LLU, ._field_hi=126627LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126629LLU, ._field_hi=126633LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=126635LLU, ._field_hi=126651LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=131072LLU, ._field_hi=173791LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=173824LLU, ._field_hi=177977LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=177984LLU, ._field_hi=178205LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=178208LLU, ._field_hi=183969LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=183984LLU, ._field_hi=191456LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=194560LLU, ._field_hi=195101LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=196608LLU, ._field_hi=201546LLU, ._field_stride=1LLU},_1dd5e8020_Range32{._field_lo=201552LLU, ._field_hi=205743LLU, ._field_stride=1LLU}}), ._field_latin_offset=6LL});
jule::Array<jule::Str,4> _1dd64cb68_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1dd64dd01_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1dd64deaa_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Array<jule::Str,3> _1dd65dc9a_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
jule::Array<jule::Str,3> _1dd65e075_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
jule::Str _1dd66e45e_PATH_STDLIB = jule::Str();
jule::Str _1dd66d804_PATH_EXEC = jule::Str();
jule::Str _1dd67eddc_PATH_WD = jule::Str();
jule::Str _1dd69b029_PATH_API = jule::Str();
jule::Array<jule::I32,5> _1dd8e0bca_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1dd8e0d84_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1dd8e10d7_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1dd98d7d3_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1dd98da36_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1dd99b615_KindPair,47> _1dd99b9de_KEYWORDS = jule::Array<_1dd99b615_KindPair,47>({_1dd99b615_KindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U32>(1LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(6LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(6LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(9LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(4LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(10LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(12LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(13LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(14LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(15LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(16LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(17LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(19LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("pub", 3), ._field_id=static_cast<jule::U32>(21LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(22LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(25LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(26LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(27LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(29LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(30LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(31LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(32LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(33LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(34LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(35LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(36LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(37LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(38LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(40LLU)}});
jule::Array<_1dd99b615_KindPair,39> _1dd99bcb9_BASIC_OPS = jule::Array<_1dd99b615_KindPair,39>({_1dd99b615_KindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(23LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(11LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(20LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(7LLU)},_1dd99b615_KindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(39LLU)}});
jule::Array<jule::U8,32> _1e0ba9ab8_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e0baa0a2_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e05cd5db_FloatInfo _1e05d2b62_F32_INFO = _1e05cd5db_FloatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e05cd5db_FloatInfo _1e05dc650_F64_INFO = _1e05cd5db_FloatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e063d54c_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1e06911a4_POWTAB = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e06a0614_F64_POW10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e06adb83_F32_POW10 = jule::Slice<jule::F32>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
jule::Array<jule::U64,20> _1e06d16ab_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e0be58e5_LeftCheat> _1e079475d_LEFTCHEATS = jule::Slice<_1e0be58e5_LeftCheat>::make({_1e0be58e5_LeftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e0be58e5_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e0be58e5_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e0be58e5_LeftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e0be58e5_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e0be58e5_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e0be58e5_LeftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e0be58e5_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e0be58e5_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e0be58e5_LeftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e0be58e5_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e0be58e5_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e0be58e5_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e0be58e5_LeftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e0be58e5_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e0be58e5_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e0be58e5_LeftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e0be58e5_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e0be58e5_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e0be58e5_LeftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e0be58e5_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e0be58e5_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e0be58e5_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e0be58e5_LeftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e0be58e5_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e0be58e5_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e0be58e5_LeftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e0be58e5_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e0be58e5_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e0be58e5_LeftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e0be58e5_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e0be58e5_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e0be58e5_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e0be58e5_LeftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e0be58e5_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e0be58e5_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e0be58e5_LeftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e0be58e5_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e0be58e5_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e0be58e5_LeftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e0be58e5_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e0be58e5_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e0be58e5_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e0be58e5_LeftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e0be58e5_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e0be58e5_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e0be58e5_LeftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e0be58e5_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e0be58e5_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e0be58e5_LeftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e0be58e5_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e0be58e5_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e0be58e5_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e0be58e5_LeftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e0be58e5_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e0be58e5_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e0be58e5_LeftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e0be58e5_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e0be58e5_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e0be58e5_LeftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e0be58e5_LeftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1e0ddd01b_BIT_SIZE = 0LL;
jule::Str _1e0ddd1c5_SYS_INT = jule::Str();
jule::Str _1e0ddd3b2_SYS_UINT = jule::Str();
jule::Bool _1ed848ace_COPY = false;
jule::Bool _1ed848d76_DEADCODE = false;
jule::Bool _1ed8490c9_APPEND = false;
jule::Bool _1ed849371_MATH = false;
jule::Bool _1ed8495c4_ACCESS = false;
jule::Bool _1ed849827_INLINE = false;
jule::Bool _1ed849a7a_PTR = false;
jule::Bool _1ed849d66_COND = false;
jule::Bool _1aa4d0710_expr_enabled = false;
jule::Bool _1aa4d0d92_scope_enabled = false;
jule::Array<jule::U64,12> _1aac0c799_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Uintptr _1dc4a1e1e_STDERR = _1dc4a20c8_get_std_handle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<_1dc58abb7_accept_range,16> _1dc58b019_ACCEPT_RANGES = jule::Array<_1dc58abb7_accept_range,16>({_1dc58abb7_accept_range{._field_lo=128LLU, ._field_hi=191LLU},_1dc58abb7_accept_range{._field_lo=160LLU, ._field_hi=191LLU},_1dc58abb7_accept_range{._field_lo=128LLU, ._field_hi=159LLU},_1dc58abb7_accept_range{._field_lo=144LLU, ._field_hi=191LLU},_1dc58abb7_accept_range{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1dd6458b9_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Ptr<_1dd5e8493_RangeTable> _1dd59906a_LETTER = _1dd592e98__L;
jule::Uintptr _1db8456d1_STDIN = _1dc4a20c8_get_std_handle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Str _1dd69aa0c_OS = jule::Str("windows", 7);
jule::Str _1dd67de96_ARCH = jule::Str("i386", 4);
jule::Uintptr _1dc46de63_STDOUT = _1dc4a20c8_get_std_handle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Array<jule::U8,256> _1dc58a645_FIRST = jule::Array<jule::U8,256>({});
jule::Array<jule::U8,256> _1dd5e2921__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});





std::ostream &operator<<(std::ostream &_Stream, _1dc58abb7_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd5e7a58_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd5e8020_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd5e8493_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1dc67bea6_index(_1dc67b58d_LazyBuff* _self_, jule::I32 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	};
	return (*_self_)._field_path[_5424_i];
}



inline void _1dc6820ee_append(_1dc67b58d_LazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len());
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1dc682a8e_string(_1dc67b58d_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,((*_self_)._field_vol_len + (*_self_)._field_w));
	};
	return ((*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, _1dc67b58d_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1db7a7dc4_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>> static__1dc5a1925_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>();
	jule::Slice<jule::U16> _1613_utf16_path = _1dc48cc73_utf16_from_str(_1524_path);;
	_WDIR* _1717_dir = _1dc4a3e10__wopendir((&(_1613_utf16_path[0LL])));;
	if ((_1717_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>>(_1db787bd9_get_last_fs_error());
	};
	for (;;) {
		{
			struct _wdirent* _2217_dirent = _1dc4a41a7__wreaddir(_1717_dir);;
			if ((_2217_dirent == nullptr)) {
				goto _iter_end_1ab58530d;
			};
			jule::Str _2617_name = _1dc489cd6_u16_ptr_to_str(((jule::U16*)(_2217_dirent->d_name)));;
			jule::Ptr<_1dc4b30ea_Status> _2721_stat = ({
				auto except = static__1dc611468_of(_1dc68e46e_join(jule::Slice<jule::Str>::make({_1524_path,_2617_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>>(except.error);
				} jule::Ptr<_1dc4b30ea_Status>();});
			});;
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1db7a7dc4_DirEntry>(_1db7a7dc4_DirEntry{._field_name=_2617_name, ._field_stat=_2721_stat}));;
		}
	_iter_next_1ab58530d:;
	}
	_iter_end_1ab58530d:;;
	_1dc4a444e__wclosedir(_1717_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1dc5b5384_create(jule::Str _4026_path) {
	jule::Slice<jule::U16> _4513_utf16_path = _1dc48cc73_utf16_from_str(_4026_path);;
	if ((!(_1dc4a38c1_create_directory((&(_4513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db787bd9_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1dc5dc521_remove(jule::Str _5426_path) {
	jule::Slice<jule::U16> _5513_utf16_path = _1dc48cc73_utf16_from_str(_5426_path);;
	if ((!(_1dc4a3b68_remove_directory((&(_5513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db787bd9_get_last_fs_error());
	};
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1db7d010a_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc4b2c32_File> static__1db7b331e_new(jule::Uintptr _4523_handle) {
	return jule::new_ptr<_1dc4b2c32_File>(_1dc4b2c32_File{._field_handle=_4523_handle});
}



inline jule::Exceptional<jule::Ptr<_1dc4b2c32_File>> static__1db7ba090_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1dc4b2c32_File>>(jule::Any(),({
		auto except = static__1dc51c264_open(_5526_path,((static_cast<jule::I32>(770LL) | 770LL) | 770LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1dc4b2c32_File>>(except.error);
		} jule::Ptr<_1dc4b2c32_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1db7bd747_read(jule::Str _6724_path) {
	jule::Ptr<_1dc4b30ea_Status> _6813_s = ({
		auto except = static__1dc611468_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dc4b30ea_Status>();});
	});;
	if ((!(_1db779c42_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I32>(14LL));
	};
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	};
	jule::Ptr<_1dc4b2c32_File> _7817_f = ({
		auto except = static__1dc51c264_open(_6724_path,static_cast<jule::I32>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dc4b2c32_File>();});
	});;
	__JULE_DEFER({
		({
			auto except = _1db7d2b57_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_6813_s.get()._field_size));;
	jule::I32 _8213_n = ({
		auto except = _1dc58e281_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I32();});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1db7c00d9_write(jule::Str _9125_path, jule::Slice<jule::U8> _9136_data, jule::I32 _9150_perm) {
	jule::Ptr<_1dc4b2c32_File> _9217_f = ({
		auto except = static__1dc51c264_open(_9125_path,((static_cast<jule::I32>(769LL) | 769LL) | 769LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1dc4b2c32_File>();});
	});;
	({
		auto except = _1dc51be67_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1db7d2b57_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1db7d175a_seek(_1dc4b2c32_File* _self_, jule::I32 _10527_offset, jule::I32 _10540_origin) {
	jule::I32 _10613_pos = _1dc4a8167_seek(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I32>(_10540_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I32>(_1db787bd9_get_last_fs_error());
	};
	return jule::Exceptional<jule::I32>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1db7d2b57_close(_1dc4b2c32_File* _self_) {
	if ((_1dc4a8882_close(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1db787bd9_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::Ptr<_1dc4b2c32_File>> static__1dc51c264_open(jule::Str _2124_path, jule::I32 _2135_flag, jule::I32 _2148_mode) {
	jule::Slice<jule::U16> _2213_utf16_path = _1dc48cc73_utf16_from_str(_2124_path);;
	jule::I32 _2313_handle = _1dc4a2a9b__wopen((&(_2213_utf16_path[0LL])),static_cast<jule::I32>(_2135_flag),_2148_mode);;
	if ((_2313_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dc4b2c32_File>>(_1db787bd9_get_last_fs_error());
	};
	return jule::Exceptional<jule::Ptr<_1dc4b2c32_File>>(jule::Any(),static__1db7b331e_new(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_2313_handle))));
}



inline jule::VoidExceptional static__1dc550572_remove(jule::Str _3426_path) {
	jule::Slice<jule::U16> _3513_utf16_path = _1dc48cc73_utf16_from_str(_3426_path);;
	if ((!(_1dc4a3629_delete_file((&(_3513_utf16_path[0LL])))))) {
		return jule::VoidExceptional(_1db787bd9_get_last_fs_error());
	};
 return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1dc51be67_write(_1dc4b2c32_File* _self_, jule::Slice<jule::U8> _4928_buff) {
	jule::I32 _4945_n = jule::I32();
	if ((_4928_buff.len() == 0LL)) {
		_4945_n = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
	};
	if (_1dc58e3b3_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _5517_utf16_buff = _1dc48cc73_utf16_from_str(static_cast<jule::Str>(_4928_buff));;
		jule::Bool _5617_ok = _1dc4a57d5_write_console((*_self_)._field_handle,(&(_5517_utf16_buff[0LL])),static_cast<jule::I32>(_5517_utf16_buff.len()),_4945_n,nullptr);;
		if ((!(_5617_ok))) {
			return jule::Exceptional<jule::I32>(_1db787bd9_get_last_fs_error());
		};
		return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
	};
	_4945_n=static_cast<jule::I32>(_1dc4a8c6c_write(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),(&(_4928_buff[0LL])),static_cast<jule::U32>(static_cast<jule::U32>(_4928_buff.len()))));
	if ((_4945_n == -1LL)) {
		return jule::Exceptional<jule::I32>(_1db787bd9_get_last_fs_error());
	};
	return jule::Exceptional<jule::I32>(jule::Any(),_4945_n);
}



inline jule::Exceptional<jule::I32> _1dc58e281_read(_1dc4b2c32_File* _self_, jule::Slice<jule::U8> _8231_buff) {
	jule::I32 _8248_n = jule::I32();
	if ((_8231_buff.len() == 0LL)) {
		_8248_n = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
	};
	if (_1dc58e3b3_is_console_handle((*_self_)._field_handle)) {
		jule::Slice<jule::U16> _8821_codepage = jule::Slice<jule::U16>::alloc(_8231_buff.len());;
		jule::Bool _8917_ok = _1dc4a5d13_read_console((*_self_)._field_handle,(&(_8821_codepage[0LL])),static_cast<jule::I32>(_8231_buff.len()),_8248_n,nullptr);;
		if ((!(_8917_ok))) {
			return jule::Exceptional<jule::I32>(_1db787bd9_get_last_fs_error());
		};
		jule::Slice<jule::I32> _9417_runes = _1dc4a0db8_decode(_8821_codepage.slice(0LL,_8248_n));;
		_8248_n=0LL;
		{
			auto &expr = _9417_runes;
			auto it = expr.begin();
			_iter_begin_1ab59e525:;
			if (it != expr.end()) {
				jule::I32 &_9620_r = *it;
				{
					jule::I32 _9721_size = _1dc58c3c2_rune_len(_9620_r);;
					if (((_8248_n + _9721_size) > _8231_buff.len())) {
						goto _iter_end_1ab59e525;
					};
					_1dc58c79b_encode_rune(_8231_buff.slice(_8248_n),_9620_r);
					_8248_n+=_9721_size;
				}
				_iter_next_1ab59e525:;
				++it;
				goto _iter_begin_1ab59e525;
			}
			_iter_end_1ab59e525:;
		};
		return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
	};
	_8248_n=static_cast<jule::I32>(_1dc4a8552_read(static_cast<jule::I32>(static_cast<jule::I32>((*_self_)._field_handle)),(&(_8231_buff[0LL])),static_cast<jule::U32>(static_cast<jule::U32>(_8231_buff.len()))));
	if ((_8248_n == -1LL)) {
		return jule::Exceptional<jule::I32>(_1db787bd9_get_last_fs_error());
	};
	return jule::Exceptional<jule::I32>(jule::Any(),_8248_n);
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4b2c32_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1db6ea267_is_dir(_1dc4b30ea_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1db779c42_is_reg(_1dc4b30ea_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}



inline jule::Exceptional<jule::Ptr<_1dc4b30ea_Status>> static__1dc611468_of(jule::Str _1222_path) {
	if (_1222_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1dc4b30ea_Status>>(static_cast<jule::I32>(4LL));
	};
	jule::Slice<jule::U16> _1613_utf16_path = _1dc48cc73_utf16_from_str(_1222_path);;
	struct stat _1717_handle = (struct stat){};;
	jule::I32 _1813_code = _1dc4a26b1_wstat((&(_1613_utf16_path[0LL])),(&(_1717_handle)));;
	if ((_1813_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dc4b30ea_Status>>(jule::Any(),jule::new_ptr<_1dc4b30ea_Status>(_1dc4b30ea_Status{._field_mode=static_cast<jule::U32>(static_cast<jule::U32>(_1717_handle.st_mode)), ._field_size=static_cast<jule::U32>(static_cast<jule::U32>(_1717_handle.st_size))}));
	};
	return jule::Exceptional<jule::Ptr<_1dc4b30ea_Status>>(_1db787bd9_get_last_fs_error());
}







std::ostream &operator<<(std::ostream &_Stream, _1dc4b30ea_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd69baa7_Cmd> static__1dd69bed6_new(jule::Str _2023_path) {
	return jule::new_ptr<_1dd69baa7_Cmd>(_1dd69baa7_Cmd{._field_path=_2023_path, });
}



inline jule::Exceptional<jule::I32> _1dd69c24a_spawn(_1dd69baa7_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(),static_cast<jule::I32>(({
		auto except = _1dd6ac0a1___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I32>(except.error);
		} jule::I32();});
	})));
}



inline jule::Exceptional<jule::I32> _1dd6ac0a1___spawn(_1dd69baa7_Cmd* _self_) {
	jule::I32 _5217_pid = 0LL;;
	if (((*_self_)._field_env == nullptr)) {
		_5217_pid=static_cast<jule::I32>(_1dd6ab842_execvp((*_self_)._field_path,(*_self_)._field_args));
	} else {
		_5217_pid=static_cast<jule::I32>(_1dd6abc2c_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env));
	};
	if ((_5217_pid == -1LL)) {
		return jule::Exceptional<jule::I32>(_1dd69b326_get_last_process_error());
	};
	jule::I32 _6113_status = 0LL;;
	if ((_cwait(((signed*)((&(_6113_status)))),_5217_pid,0LL) == -1LL)) {
		return jule::Exceptional<jule::I32>(_1dd69b326_get_last_process_error());
	};
	return jule::Exceptional<jule::I32>(jule::Any(),_6113_status);
}







std::ostream &operator<<(std::ostream &_Stream, _1dd69baa7_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd65aa00_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1dd9945ca_prec(_1dd9941e0_Token* _self_) {
	if (((*_self_)._field_id != static_cast<jule::U32>(7LLU))) {
		return 0LLU;
	};
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ab65b13c:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab65ae61:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab65aec7:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab65acda:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ab65ad51:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1ab65a911:;
			{
				return 0LLU;
			}
		}
		_match_end_1ab659ab9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9941e0_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9999ba_is_ok(_1dd9995ad_File* _self_) {
	({
		auto except = static__1dc611468_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::Ptr<_1dc4b30ea_Status>();});
	});
	return true;
}



inline void _1dd999c40_fill(_1dd9995ad_File* _self_, jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1dd999ea4_dir(_1dd9995ad_File* _self_) {
	return _1dc6ae24c_dir((*_self_)._field_path);
}



inline jule::Str _1dd99a218_name(_1dd9995ad_File* _self_) {
	return _1dc6ac6bd_base((*_self_)._field_path);
}



inline jule::Uintptr _1dd99a47c_addr(_1dd9995ad_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));
}



inline jule::Str _1dd99a78a_get_row(_1dd9995ad_File* _self_, jule::I32 _4426_row) {
	jule::I32 _4517_n = 0LL;;
	jule::I32 _4617_line_start = 0LL;;
	jule::I32 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_data[_4717_i] != '\n')) {
				goto _iter_next_1ab6601c9;
			};
			(_4517_n)++;
			if ((_4517_n == _4426_row)) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			};
			_4617_line_start=static_cast<jule::I32>((_4717_i + 1LL));
		}
	_iter_next_1ab6601c9:;
	}
	_iter_end_1ab6601c9:;;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9995ad_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd99b615_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1dd9a2671_push_err(_1dd9a20cc_Lex* _self_, jule::Str _45827_fmt, jule::Slice<jule::Any> _45840_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dd99c2a3_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45827_fmt,jule::Any(_45840_args)));;
}



inline void _1dd9a2990_push_err_tok(_1dd9a20cc_Lex* _self_, jule::Ptr<_1dd9941e0_Token>& _46332_token, jule::Str _46347_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dd99c2a3_make_err(_46332_token.get()._field_row,_46332_token.get()._field_column,(*_self_)._field_file,_46347_fmt,jule::Slice<jule::Any>()));;
}



inline void _1dd9a2b6b_lex(_1dd9a20cc_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1dd9a4b6d_new_line(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::Ptr<_1dd9941e0_Token> _47321_token = _1dd9a5ee3_token(&(*_self_));;
			if ((_47321_token.get()._field_id != static_cast<jule::U32>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1ab6972ee:;
	}
	_iter_end_1ab6972ee:;;
}



inline jule::Str _1dd9a2e79_id(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();
	};
	jule::I32 _48614_r;;
	jule::I32 _48621_i;;
	std::tie(_48614_r,_48621_i) = _1dc58b800_decode_rune(_48222_ln);
	if (((_48614_r != '_') && (!(_1dd9975de_is_letter(_48614_r))))) {
		return jule::Str();
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr;;
			jule::I32 _49222_n;;
			std::tie(_49218_pr,_49222_n) = _1dc58b800_decode_rune(_48222_ln.slice(_48621_i));
			if ((((_49218_pr != '_') && (!(_1dd997b2d_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1dd9975de_is_letter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1ab69ac92:;
	}
	_iter_end_1ab69ac92:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);
}



inline jule::Slice<jule::U8> _1dd9a31dd_resume(_1dd9a20cc_Lex* _self_) {
	jule::I32 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50717_i]);;
			if (_1dd997226_is_space(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ab6a037e:;
						{
							_1dd9a4b6d_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ab6a03e5:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ab69e878:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1ab69ed51:;
				};
				goto _iter_next_1ab69d4d1;
			};
			jule::I32 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_data[_52421_j] == '\n')) {
						goto _iter_end_1ab69e218;
					};
				}
			_iter_next_1ab69e218:;
			}
			_iter_end_1ab69e218:;;
			return (*_self_)._field_file.get()._field_data.slice(_50717_i,_52421_j);
		}
	_iter_next_1ab69d4d1:;
	}
	_iter_end_1ab69d4d1:;;
	return nullptr;
}



inline void _1dd9a3463_lex_line_comment(_1dd9a20cc_Lex* _self_, jule::Ptr<_1dd9941e0_Token>& _53640_token) {
	jule::I32 _53713_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _54017_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if (((_54017_r == '\n') || (_54017_r == '\r'))) {
				goto _iter_end_1ab6a2a35;
			};
		}
	_iter_next_1ab6a2a35:;
	}
	_iter_end_1ab6a2a35:;;
	if ((((*_self_)._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		_53640_token.get()._field_id=static_cast<jule::U32>(18LLU);
		_53640_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53713_start,(*_self_)._field_pos));
	};
}



inline void _1dd9a36d8_lex_range_comment(_1dd9a20cc_Lex* _self_, jule::Ptr<_1dd9941e0_Token>& _55141_token) {
	jule::I32 _55213_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55517_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_55517_r == '\r')) {
				goto _iter_next_1ab6a5c03;
			};
			if ((_55517_r == '\n')) {
				_1dd9a4b6d_new_line(&(*_self_));
				goto _iter_next_1ab6a5c03;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_data.len()) && (_55517_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					_55141_token.get()._field_id=static_cast<jule::U32>(18LLU);
					_55141_token.get()._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55213_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ab6a5c03:;
	}
	_iter_end_1ab6a5c03:;;
	_1dd9a2671_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1dd9a39e6_num(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _57923_txt) {
	jule::Str _57938_lit = jule::Str();
	if ((_57923_txt[0LL] == '_')) {
		_57938_lit = jule::Str();
		return _57938_lit;
	};
	_57938_lit=_1dd9a09b0_hex_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1dd9a0718_octal_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1dd99e1ea_binary_num(_57923_txt);
	if ((!(_57938_lit.empty()))) {
		goto _julec_label_end;
	};
	_57938_lit=_1dd99de53_common_num(_57923_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=_57938_lit.len();
	return _57938_lit;
}



inline jule::Str _1dd9a3d04_escape_seq(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _60130_txt) {
	jule::Str _60217_seq = jule::Str();;
	if ((_60130_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60130_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ab6b0acb:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60130_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab6b07ce:;
			{
				_60217_seq=_1dd9a10ba_big_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ab6b0845:;
			{
				_60217_seq=_1dd9a1395_little_unicode_point_escape(_60130_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab6b08ab:;
			{
				_60217_seq=_1dd9a164d_hex_byte_escape(_60130_txt);
			}
		}
		else {
			_case_begin_1ab6b03d3:;
			{
				_60217_seq=_1dd9a18e5_byte_escape(_60130_txt);
			}
		}
		_match_end_1ab6b0702:;
	};
	_julec_label_end:;
	if (_60217_seq.empty()) {
		((*_self_)._field_pos)++;
		_1dd9a2671_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	};
	(*_self_)._field_pos+=_60217_seq.len();
	return _60217_seq;
}



inline jule::Str _1dd9a41ab_get_rune(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _63128_txt, jule::Bool _63141_raw) {
	if (((!(_63141_raw)) && (_63128_txt[0LL] == '\\'))) {
		return _1dd9a3d04_escape_seq(&(*_self_), _63128_txt);
	};
	jule::I32 _63614_r;;
	jule::I32 _63617_n;;
	std::tie(_63614_r,_63617_n) = _1dc58b800_decode_rune(_63128_txt);
	(*_self_)._field_pos+=_63617_n;
	return static_cast<jule::Str>(_63614_r);
}



inline jule::Str _1dd9a44b9_lex_rune(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _64128_txt) {
	jule::Str _64217_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I32 _64417_n = 0LL;;
	jule::I32 _64517_i = 1LL;;
	for (; (_64517_i < _64128_txt.len()); (_64517_i)++) {
		{
			if ((_64128_txt[_64517_i] == '\r')) {
				goto _iter_next_1ab6b77d6;
			};
			if ((_64128_txt[_64517_i] == '\n')) {
				_1dd9a2671_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1dd9a4b6d_new_line(&(*_self_));
				return jule::Str();
			};
			jule::Slice<jule::U8> _65717_part = _64128_txt.slice(_64517_i);;
			jule::Str _65817_r = _1dd9a41ab_get_rune(&(*_self_), _65717_part,false);;
			_64217_run+=_65817_r;
			(*_self_)._field_column+=_1dc58d46c_rune_count_str(_65817_r);
			if ((_65817_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1ab6b77d6;
			};
			if ((_65817_r.len() > 1LL)) {
				_64517_i+=(_65817_r.len() - 1LL);
			};
			(_64417_n)++;
		}
	_iter_next_1ab6b77d6:;
	}
	_iter_end_1ab6b77d6:;;
	if ((_64417_n == 0LL)) {
		_1dd9a2671_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64417_n > 1LL)) {
		_1dd9a2671_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64217_run;
}



inline jule::Str _1dd9a472d_lex_str(_1dd9a20cc_Lex* _self_) {
	jule::Str _68117_s = jule::Str();;
	jule::U8 _68213_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68413_raw = (_68213_mark == '`');;
	_68117_s+=static_cast<jule::Str>(_68213_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_data.len())) {
		{
			jule::U8 _68917_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];;
			if ((_68917_ch == '\r')) {
				goto _iter_next_1ab6c358e;
			};
			if ((_68917_ch == '\n')) {
				_1dd9a4b6d_new_line(&(*_self_));
				if ((!(_68413_raw))) {
					_1dd9a2671_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				};
			};
			jule::Slice<jule::U8> _70121_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);;
			jule::Str _70217_r = _1dd9a41ab_get_rune(&(*_self_), _70121_part,_68413_raw);;
			_68117_s+=_70217_r;
			(*_self_)._field_column+=_1dc58d46c_rune_count_str(_70217_r);
			if ((_68917_ch == _68213_mark)) {
				goto _iter_end_1ab6c358e;
			};
		}
	_iter_next_1ab6c358e:;
	}
	_iter_end_1ab6c358e:;;
	return _68117_s;
}



inline jule::Bool _1dd9a4992_is_first_token_of_line(_1dd9a20cc_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1dd9a4b6d_new_line(_1dd9a20cc_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1dd9a5168_is_op(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _72225_txt, jule::Str _72238_kind, jule::U32 _72249_id, jule::Ptr<_1dd9941e0_Token>& _72267_t) {
	if ((!(_1dd99c638_bytes_has_prefix(_72225_txt,_72238_kind)))) {
		return false;
	};
	_72267_t.get()._field_kind=_72238_kind;
	_72267_t.get()._field_id=_72249_id;
	(*_self_)._field_pos+=_72238_kind.len();
	return true;
}



inline jule::Bool _1dd9a5520_lex_basic_ops(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8> _73332_txt, jule::Ptr<_1dd9941e0_Token>& _73350_tok) {
	{
		auto &expr = _1dd99bcb9_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1ab6c993b:;
		if (it != expr.end()) {
			_1dd99b615_KindPair &_73416_pair = *it;
			{
				if (_1dd9a5168_is_op(&(*_self_), _73332_txt,_73416_pair._field_kind,_73416_pair._field_id,_73350_tok)) {
					return true;
				};
			}
			_iter_next_1ab6c993b:;
			++it;
			goto _iter_begin_1ab6c993b;
		}
		_iter_end_1ab6c993b:;
	};
	return false;
}



inline jule::Bool _1dd9a58c7_lex_id(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _74326_txt, jule::Ptr<_1dd9941e0_Token>& _74344_t) {
	jule::Str _74413_lex = _1dd9a2e79_id(&(*_self_), _74326_txt);;
	if (_74413_lex.empty()) {
		return false;
	};
	_74344_t.get()._field_kind=_74413_lex;
	_74344_t.get()._field_id=static_cast<jule::U32>(2LLU);
	return true;
}



inline jule::Bool _1dd9a5c7e_lex_num(_1dd9a20cc_Lex* _self_, jule::Slice<jule::U8>& _75427_txt, jule::Ptr<_1dd9941e0_Token>& _75445_t) {
	jule::Str _75513_lex = _1dd9a39e6_num(&(*_self_), _75427_txt);;
	if (_75513_lex.empty()) {
		return false;
	};
	_75445_t.get()._field_kind=_75513_lex;
	_75445_t.get()._field_id=static_cast<jule::U32>(6LLU);
	return true;
}



inline jule::Ptr<_1dd9941e0_Token> _1dd9a5ee3_token(_1dd9a20cc_Lex* _self_) {
	jule::Ptr<_1dd9941e0_Token> _76717_t = jule::new_ptr<_1dd9941e0_Token>(_1dd9941e0_Token{._field_file=(*_self_)._field_file, ._field_id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _77213_txt = _1dd9a31dd_resume(&(*_self_));;
	if ((_77213_txt == nullptr)) {
		return _76717_t;
	};
	_76717_t.get()._field_column=(*_self_)._field_column;
	_76717_t.get()._field_row=(*_self_)._field_row;
	{
		
		if (_1dd9a5c7e_lex_num(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1ab6d1613:;
			{
				goto _match_end_1ab6ce8ca;
			}
		}
		else if ((_77213_txt[0LL] == '\'')) {
			_case_begin_1ab6d0b1d:;
			{
				_76717_t.get()._field_kind=_1dd9a44b9_lex_rune(&(*_self_), _77213_txt);
				_76717_t.get()._field_id=static_cast<jule::U32>(6LLU);
				return _76717_t;
			}
		}
		else if (((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`'))) {
			_case_begin_1ab6d005c:;
			{
				_76717_t.get()._field_kind=_1dd9a472d_lex_str(&(*_self_));
				_76717_t.get()._field_id=static_cast<jule::U32>(6LLU);
				return _76717_t;
			}
		}
		else if (_1dd99c638_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1ab6d00c3:;
			{
				_1dd9a3463_lex_line_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1dd99c638_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1ab6d0139:;
			{
				_1dd9a36d8_lex_range_comment(&(*_self_), _76717_t);
				return _76717_t;
			}
		}
		else if (_1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5168_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U32>(3LLU),_76717_t) || _1dd9a5520_lex_basic_ops(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1ab6d01a0:;
			{
				goto _match_end_1ab6ce8ca;
			}
		}
		else if (_1dd9a58c7_lex_id(&(*_self_), _77213_txt,_76717_t)) {
			_case_begin_1ab6d179a:;
			{
				{
					auto &expr = _1dd99b9de_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1ab6d8692:;
					if (it != expr.end()) {
						_1dd99b615_KindPair &_81020_pair = *it;
						{
							if ((_81020_pair._field_kind == _76717_t.get()._field_kind)) {
								_76717_t.get()._field_id=_81020_pair._field_id;
								goto _iter_end_1ab6d8692;
							};
						}
						_iter_next_1ab6d8692:;
						++it;
						goto _iter_begin_1ab6d8692;
					}
					_iter_end_1ab6d8692:;
				};
			}
		}
		else {
			_case_begin_1ab6ceee6:;
			{
				jule::I32 _81718_r;;
				jule::I32 _81721_sz;;
				std::tie(_81718_r,_81721_sz) = _1dc58b800_decode_rune(_77213_txt);
				_1dd9a2671_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _76717_t;
			}
		}
		_match_end_1ab6ce8ca:;
	};
	(*_self_)._field_column+=_1dc58d46c_rune_count_str(_76717_t.get()._field_kind);
	return _76717_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9a20cc_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e00e2760_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e00e33cb_is_decl(_1e00e2ead_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e013bb0b_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1e013c9db_TypeEnumDecl>>() || _match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1e013da20_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1e013dc1d_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1e0139653_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1e013d1b2_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1e013aa3e_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1e0135dd0_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1e01253db_TypeDecl>>()) {
			_case_begin_1ab71dc5a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab71d5ea:;
			{
				return false;
			}
		}
		_match_end_1ab71d595:;
	};
}



inline jule::Bool _1e00e3640_is_directive(_1e00e2ead_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e0124e35_Directive>>()) {
			_case_begin_1ab71ee15:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab71eb4b:;
			{
				return false;
			}
		}
		_match_end_1ab71eae6:;
	};
}



inline jule::Bool _1e00e38a4_is_impl(_1e00e2ead_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e013e2b2_Impl>>()) {
			_case_begin_1ab721235:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab71ce35:;
			{
				return false;
			}
		}
		_match_end_1ab71cdd0:;
	};
}



inline jule::Bool _1e00e3b18_is_use_decl(_1e00e2ead_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e013aa3e_UseDecl>>()) {
			_case_begin_1ab7216ca:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab720c90:;
			{
				return false;
			}
		}
		_match_end_1ab721521:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e00e2ead_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0124e35_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01253db_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0125cc1_is_prim(_1e012596e_IdentTypeDecl* _self_) {
	return ((*_self_)._field_token.get()._field_id == static_cast<jule::U32>(1LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1e012596e_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01260ac_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0126464_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0126750_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0126ac4_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0126db0_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0127575_is_unsafe(_1e012719b_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e012719b_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0127c4b_auto_sized(_1e01278e9_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e01278e9_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0128103_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01284aa_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0128b3c_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0128ee4_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0129423_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0129b0a_is_nil(_1e01297a8_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1e01297a8_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0129eb2_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012a369_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e012ab3e_is_self(_1e012a7dc_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1e012a7dc_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012aee6_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012b39d_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012b755_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012bb0c_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012c080_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012c503_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e012d081_unhandled(_1e012cb0d_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1e012d2e5_ignored(_1e012cb0d_FnCallExpr* _self_) {
	return (((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred);
}







std::ostream &operator<<(std::ostream &_Stream, _1e012cb0d_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e012d977_is_targeted(_1e012d625_FieldExprPair* _self_) {
	return ((*_self_)._field_field != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e012d625_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012ddea_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e012e6c0_is_empty(_1e012e36d_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e012e36d_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e012eb43_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e013065a_is_empty(_1e013032a_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1e013032a_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0130b99_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01312a4_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013165b_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0131a13_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0131dba_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01321a6_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01327b1_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0132d00_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013340a_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0133e44_is_self(_1e0133ad1_ParamDecl* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1e01341a8_is_ref(_1e0133ad1_ParamDecl* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0133ad1_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0135253_is_anon(_1e0134e01_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0134e01_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0135dd0_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0136287_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0136b5b_is_inf(_1e0136809_Iter* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0136809_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0137431_is_while_next(_1e01370ce_WhileKind* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e01370ce_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0137970_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0137d27_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01381ce_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0138652_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0138a09_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0138e7c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0139653_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0139ac6_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013a29c_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013aa3e_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e013b545_auto_expr(_1e013aeb2_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e013aeb2_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e013be5d_default_typed(_1e013bb0b_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e013bb0b_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013c3d1_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013c9db_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "end:" << _Src._field_end;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013d1b2_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013da20_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013dc1d_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e013e625_is_trait_impl(_1e013e2b2_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e013e889_is_struct_impl(_1e013e2b2_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e013e2b2_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "end:" << _Src._field_end << ", ";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e05cd5db_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e09aeb76_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0be58e5_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e09ed5dd_set(_1e0be5ad2_Decimal* _self_, jule::Str _23322_s) {
	jule::Bool _23332_ok = jule::Bool();
	jule::I32 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return _23332_ok;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1ac835b0c:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1ac835b73:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1ac8355bd:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1ac837a32:;
					{
						goto _iter_next_1ac83726d;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1ac837aa9:;
					{
						if (_25117_sawdot) {
							return _23332_ok;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1ac83726d;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1ac837b31:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1ac83726d;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1ac83726d;
					}
				}
				_match_end_1ac837911:;
			};
			goto _iter_end_1ac83726d;
		}
	_iter_next_1ac83726d:;
	}
	_iter_end_1ac83726d:;;
	if ((!(_25217_sawdigits))) {
		return _23332_ok;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e08318d8_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return _23332_ok;
		};
		jule::I32 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return _23332_ok;
		};
		jule::I32 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1ac840320;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I32>((((_30721_e * 10LL) + static_cast<jule::I32>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1ac840320:;
		}
		_iter_end_1ac840320:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return _23332_ok;
	};
	_23332_ok=true;
	return _23332_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1e0792ea9_float_bits(_1e0be5ad2_Decimal* _self_, _1e05cd5db_FloatInfo& _32730_flt) {
	jule::U64 _32748_b = jule::U64();
	jule::Bool _32756_overflow = jule::Bool();
	jule::I32 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32730_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I32 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1e06911a4_POWTAB.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e06911a4_POWTAB[(*_self_)._field_dp];
			};
			_1e0be5e01_shift(&(*_self_), static_cast<jule::I32>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1ac846bd9:;
	}
	_iter_end_1ac846bd9:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I32 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1e06911a4_POWTAB.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e06911a4_POWTAB[(-((*_self_)._field_dp))];
			};
			_1e0be5e01_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1ac848900:;
	}
	_iter_end_1ac848900:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32730_flt._field_bias + 1LL))) {
		jule::I32 _38117_n = ((_32730_flt._field_bias + 1LL) - _32817_exp);;
		_1e0be5e01_shift(&(*_self_), static_cast<jule::I32>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e0be5e01_shift(&(*_self_), static_cast<jule::I32>(static_cast<jule::I32>((1LL + _32730_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e0be63c9_rounded_integer(&(*_self_)));
	if ((_32917_mant == (2LLU << _32730_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32730_flt._field_bias) >= static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32730_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32730_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << _32730_flt._field_expbits) - 1LLU) + static_cast<jule::U32>(_32730_flt._field_bias))));
	_32756_overflow=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32730_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32730_flt._field_bias) & static_cast<jule::I32>(((1LL << _32730_flt._field_expbits) - 1LL)))) << _32730_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32730_flt._field_mantbits) << _32730_flt._field_expbits);
	};
	_32748_b = _41717_bits;
	return std::make_tuple(_32748_b,_32756_overflow);
}



inline void _1e0be5cbe_assign(_1e0be5ad2_Decimal* _self_, jule::U64 _21029_v) {
	jule::Array<jule::U8,24> _21117_buf = jule::Array<jule::U8,24>();;
	jule::I32 _21417_n = 0LL;;
	while ((_21029_v > 0LLU)) {
		{
			jule::U64 _21617_v1 = (_21029_v / 10LLU);;
			_21029_v-=(10LLU * _21617_v1);
			_21117_buf[_21417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_21029_v + '0')));
			(_21417_n)++;
			_21029_v=_21617_v1;
		}
	_iter_next_1ac859801:;
	}
	_iter_end_1ac859801:;;
	(*_self_)._field_nd=0LL;
	(_21417_n)--;
	for (; (_21417_n >= 0LL); (_21417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_21117_buf[_21417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1ac859856:;
	}
	_iter_end_1ac859856:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1e0be663d_trim((*_self_));
}



inline void _1e0be5e01_shift(_1e0be5ad2_Decimal* _self_, jule::I32 _23528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1ac85c271:;
		}
		else if ((_23528_k > 0LL)) {
			_case_begin_1ac85c2e8:;
			{
				while ((_23528_k > 60LL)) {
					{
						_1e0be69d4_left_shift((*_self_),60LLU);
						_23528_k-=60LL;
					}
				_iter_next_1ac85c4d5:;
				}
				_iter_end_1ac85c4d5:;;
				_1e0be69d4_left_shift((*_self_),static_cast<jule::U32>(static_cast<jule::U32>(_23528_k)));
			}
		}
		else if ((_23528_k < 0LL)) {
			_case_begin_1ac85c370:;
			{
				while ((_23528_k < -60LL)) {
					{
						_1e0be6770_right_shift((*_self_),60LLU);
						_23528_k+=60LL;
					}
				_iter_next_1ac85d382:;
				}
				_iter_end_1ac85d382:;;
				_1e0be6770_right_shift((*_self_),static_cast<jule::U32>(static_cast<jule::U32>((-(_23528_k)))));
			}
		}
		_match_end_1ac85c150:;
	};
}



inline void _1e0be6033_round_down(_1e0be5ad2_Decimal* _self_, jule::I32 _25529_nd) {
	if (((_25529_nd < 0LL) || (_25529_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_25529_nd;
	_1e0be663d_trim((*_self_));
}



inline void _1e0be6165_round_up(_1e0be5ad2_Decimal* _self_, jule::I32 _26427_nd) {
	if (((_26427_nd < 0LL) || (_26427_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I32 _27017_i = (_26427_nd - 1LL);;
	for (; (_27017_i >= 0LL); (_27017_i)--) {
		{
			jule::U8 _27217_c = (*_self_)._field_d[_27017_i];;
			if ((_27217_c < '9')) {
				((*_self_)._field_d[_27017_i])++;
				(*_self_)._field_nd=static_cast<jule::I32>((_27017_i + 1LL));
				return;;
			};
		}
	_iter_next_1ac86053d:;
	}
	_iter_end_1ac86053d:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1e0be6297_round(_1e0be5ad2_Decimal* _self_, jule::I32 _29124_nd) {
	if (((_29124_nd < 0LL) || (_29124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1e0be6b16_should_round_up((*_self_),_29124_nd)) {
		_1e0be6165_round_up(&(*_self_), _29124_nd);
	} else {
		_1e0be6033_round_down(&(*_self_), _29124_nd);
	};
}



inline jule::U64 _1e0be63c9_rounded_integer(_1e0be5ad2_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	};
	jule::I32 _30817_i = 0LL;;
	jule::U64 _30917_n = 0LLU;;
	for (; ((_30817_i < (*_self_)._field_dp) && (_30817_i < (*_self_)._field_nd)); (_30817_i)++) {
		{
			_30917_n=static_cast<jule::U64>(((_30917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_30817_i] - '0'))));
		}
	_iter_next_1ac859dea:;
	}
	_iter_end_1ac859dea:;;
	for (; (_30817_i < (*_self_)._field_dp); (_30817_i)++) {
		{
			_30917_n*=10LLU;
		}
	_iter_next_1ac867578:;
	}
	_iter_end_1ac867578:;;
	if (_1e0be6b16_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_30917_n)++;
	};
	return _30917_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0be5ad2_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4dd5b_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=jule::Any(_1327_x)});
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e103_new_u64(jule::U64 _1627_x) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=jule::Any(_1627_x)});
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e39a_new_bool(jule::Bool _1928_x) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=jule::Any(_1928_x)});
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e642_new_str(jule::Str _2227_x) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=jule::Any(_2227_x)});
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4e8d9_new_f64(jule::F64 _2527_x) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=jule::Any(_2527_x)});
}



inline jule::Ptr<_1e0d4da1a_Const> static__1e0d4ead7_new_nil(void) {
	return jule::new_ptr<_1e0d4da1a_Const>(_1e0d4da1a_Const{._field_data=nullptr});
}



inline jule::I64 _1e0d501d1_read_i64(_1e0d4da1a_Const* _self_) {
	if ((!(_1e0d52579_is_i64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1e0d50445_read_u64(_1e0d4da1a_Const* _self_) {
	if ((!(_1e0d527dd_is_u64(&(*_self_))))) {
		return 0LLU;
	};
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1e0d506a9_read_bool(_1e0d4da1a_Const* _self_) {
	if ((!(_1e0d52a52_is_bool(&(*_self_))))) {
		return false;
	};
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1e0d5091d_read_str(_1e0d4da1a_Const* _self_) {
	if ((!(_1e0d52cb6_is_str(&(*_self_))))) {
		return jule::Str();
	};
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1e0d50b82_read_f64(_1e0d4da1a_Const* _self_) {
	if ((!(_1e0d5302a_is_f64(&(*_self_))))) {
		return 0LL;
	};
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1e0d50de6_as_i64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ac898037:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ac89809d:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ac89828a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ac897b4c:;
			{
				return 0LL;
			}
		}
		_match_end_1ac897ae7:;
	};
}



inline jule::U64 _1e0d5115a_as_u64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ac899c3c:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ac899ca3:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ac899841:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1ac88ee30:;
			{
				return 0LLU;
			}
		}
		_match_end_1ac898664:;
	};
}



inline jule::F64 _1e0d513be_as_f64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ac89b48b:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ac89b502:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ac89b6de:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1ac899e4b:;
			{
				return 0LL;
			}
		}
		_match_end_1ac899de6:;
	};
}



inline void _1e0d51644_set_i64(_1e0d4da1a_Const* _self_, jule::I64 _13530_x) {
	(*_self_)._field_data=jule::Any(_13530_x);
}



inline void _1e0d518b9_set_u64(_1e0d4da1a_Const* _self_, jule::U64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1e0d51b3e_set_bool(_1e0d4da1a_Const* _self_, jule::Bool _14131_x) {
	(*_self_)._field_data=jule::Any(_14131_x);
}



inline void _1e0d51db4_set_str(_1e0d4da1a_Const* _self_, jule::Str _14430_x) {
	(*_self_)._field_data=jule::Any(_14430_x);
}



inline void _1e0d52139_set_f64(_1e0d4da1a_Const* _self_, jule::F64 _14730_x) {
	(*_self_)._field_data=jule::Any(_14730_x);
}



inline void _1e0d52315_set_nil(_1e0d4da1a_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1e0d52579_is_i64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ac89eec8:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a025e:;
			{
				return false;
			}
		}
		_match_end_1ac8a0209:;
	};
}



inline jule::Bool _1e0d527dd_is_u64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ac8a09e0:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a04a1:;
			{
				return false;
			}
		}
		_match_end_1ac8a044b:;
	};
}



inline jule::Bool _1e0d52a52_is_bool(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ac8a1716:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a0d75:;
			{
				return false;
			}
		}
		_match_end_1ac8a155c:;
	};
}



inline jule::Bool _1e0d52cb6_is_str(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ac8a2739:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a1826:;
			{
				return false;
			}
		}
		_match_end_1ac8a200d:;
	};
}



inline jule::Bool _1e0d5302a_is_f64(_1e0d4da1a_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ac8a31c9:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a22b6:;
			{
				return false;
			}
		}
		_match_end_1ac8a299d:;
	};
}



inline jule::Bool _1e0d5328e_is_nil(_1e0d4da1a_Const* _self_) {
	return ((*_self_)._field_data == nullptr);
}



inline jule::Bool _1e0d5359c_are_same_types(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _21033_x) {
	{
		
		if ((_1e0d52579_is_i64(&(*_self_)) == _1e0d52579_is_i64(&_21033_x))) {
			_case_begin_1ac8a4340:;
			{
				return true;
			}
		}
		else if ((_1e0d527dd_is_u64(&(*_self_)) == _1e0d527dd_is_u64(&_21033_x))) {
			_case_begin_1ac8a43ea:;
			{
				return true;
			}
		}
		else if ((_1e0d5302a_is_f64(&(*_self_)) == _1e0d5302a_is_f64(&_21033_x))) {
			_case_begin_1ac8a4472:;
			{
				return true;
			}
		}
		else if ((_1e0d52a52_is_bool(&(*_self_)) == _1e0d52a52_is_bool(&_21033_x))) {
			_case_begin_1ac8a4153:;
			{
				return true;
			}
		}
		else if ((_1e0d52cb6_is_str(&(*_self_)) == _1e0d52cb6_is_str(&_21033_x))) {
			_case_begin_1ac8a41ca:;
			{
				return true;
			}
		}
		else if ((_1e0d5328e_is_nil(&(*_self_)) == _1e0d5328e_is_nil(&_21033_x))) {
			_case_begin_1ac8a3c35:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac8a3bbe:;
			{
				return false;
			}
		}
		_match_end_1ac8a3b03:;
	};
}



inline jule::Bool _1e0d538aa_and(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _23522_x) {
	{
		
		if ((_1e0d52a52_is_bool(&(*_self_)) && _1e0d52a52_is_bool(&_23522_x))) {
			_case_begin_1ac8a761d:;
			{
				return (_1e0d506a9_read_bool(&(*_self_)) && _1e0d506a9_read_bool(&_23522_x));
			}
		}
		else {
			_case_begin_1ac8a6ab2:;
			{
				return false;
			}
		}
		_match_end_1ac8a6a07:;
	};
}



inline jule::Bool _1e0d53bb8_or(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _24621_x) {
	{
		
		if ((_1e0d52a52_is_bool(&(*_self_)) && _1e0d52a52_is_bool(&_24621_x))) {
			_case_begin_1ac8a89d7:;
			{
				return (_1e0d506a9_read_bool(&(*_self_)) || _1e0d506a9_read_bool(&_24621_x));
			}
		}
		else {
			_case_begin_1ac8a7aa2:;
			{
				return false;
			}
		}
		_match_end_1ac8a79d6:;
	};
}



inline jule::Bool _1e0d53ec6_eq(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _25721_x) {
	{
		
		if (_1e0d5328e_is_nil(&(*_self_))) {
			_case_begin_1ac8a9e06:;
			{
				return _1e0d5328e_is_nil(&_25721_x);
			}
		}
		else if (_1e0d52a52_is_bool(&(*_self_))) {
			_case_begin_1ac8a9ea0:;
			{
				return (_1e0d52a52_is_bool(&_25721_x) && (_1e0d506a9_read_bool(&(*_self_)) == _1e0d506a9_read_bool(&_25721_x)));
			}
		}
		else if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8aa016:;
			{
				return (_1e0d52cb6_is_str(&_25721_x) && (_1e0d5091d_read_str(&(*_self_)) == _1e0d5091d_read_str(&_25721_x)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8a9c19:;
			{
				return (_1e0d501d1_read_i64(&(*_self_)) == _1e0d50de6_as_i64(&_25721_x));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8a9c80:;
			{
				return (_1e0d50445_read_u64(&(*_self_)) == _1e0d5115a_as_u64(&_25721_x));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8a9ce6:;
			{
				return (_1e0d50b82_read_f64(&(*_self_)) == _1e0d513be_as_f64(&_25721_x));
			}
		}
		else {
			_case_begin_1ac8a8e7c:;
			{
				return false;
			}
		}
		_match_end_1ac8a8db1:;
	};
}



inline jule::Bool _1e0d542d4_lt(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _28421_x) {
	{
		
		if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8ae081:;
			{
				return (_1e0d52cb6_is_str(&_28421_x) && (_1e0d5091d_read_str(&(*_self_)) < _1e0d5091d_read_str(&_28421_x)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8ae14c:;
			{
				return (_1e0d501d1_read_i64(&(*_self_)) < _1e0d50de6_as_i64(&_28421_x));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8ae1b3:;
			{
				return (_1e0d50445_read_u64(&(*_self_)) < _1e0d5115a_as_u64(&_28421_x));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8addb6:;
			{
				return (_1e0d50b82_read_f64(&(*_self_)) < _1e0d513be_as_f64(&_28421_x));
			}
		}
		else {
			_case_begin_1ac8aa269:;
			{
				return false;
			}
		}
		_match_end_1ac8aa19d:;
	};
}



inline jule::Bool _1e0d545e2_lt_eq(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _30724_x) {
	{
		
		if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8b202e:;
			{
				return (_1e0d52cb6_is_str(&_30724_x) && (_1e0d5091d_read_str(&(*_self_)) <= _1e0d5091d_read_str(&_30724_x)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8b20ea:;
			{
				return (_1e0d501d1_read_i64(&(*_self_)) <= _1e0d50de6_as_i64(&_30724_x));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8b2161:;
			{
				return (_1e0d50445_read_u64(&(*_self_)) <= _1e0d5115a_as_u64(&_30724_x));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8b1d64:;
			{
				return (_1e0d50b82_read_f64(&(*_self_)) <= _1e0d513be_as_f64(&_30724_x));
			}
		}
		else {
			_case_begin_1ac8ae339:;
			{
				return false;
			}
		}
		_match_end_1ac8ae26d:;
	};
}



inline jule::Bool _1e0d54900_gt(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _33021_x) {
	{
		
		if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8b4ecc:;
			{
				return (_1e0d52cb6_is_str(&_33021_x) && (_1e0d5091d_read_str(&(*_self_)) > _1e0d5091d_read_str(&_33021_x)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8b5098:;
			{
				return (_1e0d501d1_read_i64(&(*_self_)) > _1e0d50de6_as_i64(&_33021_x));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8b510e:;
			{
				return (_1e0d50445_read_u64(&(*_self_)) > _1e0d5115a_as_u64(&_33021_x));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8b4d12:;
			{
				return (_1e0d50b82_read_f64(&(*_self_)) > _1e0d513be_as_f64(&_33021_x));
			}
		}
		else {
			_case_begin_1ac8b22d7:;
			{
				return false;
			}
		}
		_match_end_1ac8b221b:;
	};
}



inline jule::Bool _1e0d54c0d_gt_eq(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _35324_x) {
	{
		
		if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8b7e7a:;
			{
				return (_1e0d52cb6_is_str(&_35324_x) && (_1e0d5091d_read_str(&(*_self_)) >= _1e0d5091d_read_str(&_35324_x)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8b8046:;
			{
				return (_1e0d501d1_read_i64(&(*_self_)) >= _1e0d50de6_as_i64(&_35324_x));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8b80ac:;
			{
				return (_1e0d50445_read_u64(&(*_self_)) >= _1e0d5115a_as_u64(&_35324_x));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8b7cb0:;
			{
				return (_1e0d50b82_read_f64(&(*_self_)) >= _1e0d513be_as_f64(&_35324_x));
			}
		}
		else {
			_case_begin_1ac8b5285:;
			{
				return false;
			}
		}
		_match_end_1ac8b51b9:;
	};
}



inline jule::Bool _1e0d5501b_add(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _37426_x) {
	{
		
		if (_1e0d52cb6_is_str(&(*_self_))) {
			_case_begin_1ac8bae28:;
			{
				if ((!(_1e0d52cb6_is_str(&_37426_x)))) {
					return false;
				};
				_1e0d51db4_set_str(&(*_self_), (_1e0d5091d_read_str(&(*_self_)) + _1e0d5091d_read_str(&_37426_x)));
			}
		}
		else if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8baee4:;
			{
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d50b82_read_f64(&(*_self_)) + _1e0d513be_as_f64(&_37426_x))));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8bb05a:;
			{
				if (_1e0d5302a_is_f64(&_37426_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) + _1e0d50b82_read_f64(&_37426_x))));
				} else {
					_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) + _1e0d50de6_as_i64(&_37426_x))));
				};
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8bac5d:;
			{
				if (_1e0d5302a_is_f64(&_37426_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) + _1e0d50b82_read_f64(&_37426_x))));
				} else {
					_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) + _1e0d5115a_as_u64(&_37426_x))));
				};
			}
		}
		else {
			_case_begin_1ac8b8233:;
			{
				return false;
			}
		}
		_match_end_1ac8b8167:;
	};
	return true;
}



inline jule::Bool _1e0d55329_sub(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _40326_x) {
	{
		
		if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8c1846:;
			{
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d50b82_read_f64(&(*_self_)) - _1e0d513be_as_f64(&_40326_x))));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8c1923:;
			{
				if (_1e0d5302a_is_f64(&_40326_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) - _1e0d50b82_read_f64(&_40326_x))));
				} else {
					_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) - _1e0d50de6_as_i64(&_40326_x))));
				};
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8c1989:;
			{
				if (_1e0d5302a_is_f64(&_40326_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) - _1e0d50b82_read_f64(&_40326_x))));
				} else {
					_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) - _1e0d5115a_as_u64(&_40326_x))));
				};
			}
		}
		else {
			_case_begin_1ac8c0922:;
			{
				return false;
			}
		}
		_match_end_1ac8c0856:;
	};
	return true;
}



inline jule::Bool _1e0d55637_mul(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _42726_x) {
	{
		
		if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8c6164:;
			{
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d50b82_read_f64(&(*_self_)) * _1e0d513be_as_f64(&_42726_x))));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8c6241:;
			{
				if (_1e0d5302a_is_f64(&_42726_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) * _1e0d50b82_read_f64(&_42726_x))));
				} else {
					_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) * _1e0d50de6_as_i64(&_42726_x))));
				};
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8c62a7:;
			{
				if (_1e0d5302a_is_f64(&_42726_x)) {
					_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>((_1e0d513be_as_f64(&(*_self_)) * _1e0d50b82_read_f64(&_42726_x))));
				} else {
					_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) * _1e0d5115a_as_u64(&_42726_x))));
				};
			}
		}
		else {
			_case_begin_1ac8c5163:;
			{
				return false;
			}
		}
		_match_end_1ac8c5097:;
	};
	return true;
}



inline jule::Bool _1e0d55945_div(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _45526_x) {
	{
		
		if (_1e0d5302a_is_f64(&(*_self_))) {
			_case_begin_1ac8ca982:;
			{
				jule::F64 _45817_l = _1e0d513be_as_f64(&_45526_x);;
				if ((_45817_l == 0LL)) {
					return false;
				};
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e0d50b82_read_f64(&(*_self_)),_45817_l)));
			}
		}
		else if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8caa5e:;
			{
				jule::F64 _46417_l = _1e0d513be_as_f64(&_45526_x);;
				if ((_46417_l == 0LL)) {
					return false;
				};
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e0d513be_as_f64(&(*_self_)),_46417_l)));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8caac5:;
			{
				jule::F64 _47017_l = _1e0d513be_as_f64(&_45526_x);;
				if ((_47017_l == 0LL)) {
					return false;
				};
				_1e0d52139_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(_1e0d513be_as_f64(&(*_self_)),_47017_l)));
			}
		}
		else {
			_case_begin_1ac8c9981:;
			{
				return false;
			}
		}
		_match_end_1ac8c98b5:;
	};
	return true;
}



inline jule::Bool _1e0d55c53_mod(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _48426_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8cee3c:;
			{
				jule::I64 _48717_l = _1e0d50de6_as_i64(&_48426_x);;
				if ((_48717_l == 0LL)) {
					return false;
				};
				_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(_1e0d501d1_read_i64(&(*_self_)),_48717_l)));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8d002a:;
			{
				jule::U64 _49317_l = _1e0d5115a_as_u64(&_48426_x);;
				if ((_49317_l == 0LLU)) {
					return false;
				};
				_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(_1e0d50445_read_u64(&(*_self_)),_49317_l)));
			}
		}
		else {
			_case_begin_1ac8ce810:;
			{
				return false;
			}
		}
		_match_end_1ac8ce744:;
	};
	return true;
}



inline jule::Bool _1e0d56061_bitwise_and(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _50634_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8d30a5:;
			{
				_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) & _1e0d50de6_as_i64(&_50634_x))));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8d3193:;
			{
				_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) & _1e0d5115a_as_u64(&_50634_x))));
			}
		}
		else {
			_case_begin_1ac8d2978:;
			{
				return false;
			}
		}
		_match_end_1ac8d28ac:;
	};
	return true;
}



inline jule::Bool _1e0d5636e_bitwise_or(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _52033_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8d52b6:;
			{
				_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) | _1e0d50de6_as_i64(&_52033_x))));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8d53a4:;
			{
				_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) | _1e0d5115a_as_u64(&_52033_x))));
			}
		}
		else {
			_case_begin_1ac8d4b89:;
			{
				return false;
			}
		}
		_match_end_1ac8d4abd:;
	};
	return true;
}



inline jule::Bool _1e0d5667c_xor(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _53426_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8d74c7:;
			{
				_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_1e0d501d1_read_i64(&(*_self_)) ^ _1e0d50de6_as_i64(&_53426_x))));
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8d75b5:;
			{
				_1e0d518b9_set_u64(&(*_self_), static_cast<jule::U64>((_1e0d50445_read_u64(&(*_self_)) ^ _1e0d5115a_as_u64(&_53426_x))));
			}
		}
		else {
			_case_begin_1ac8d6d9a:;
			{
				return false;
			}
		}
		_match_end_1ac8d6cce:;
	};
	return true;
}



inline jule::Bool _1e0d5698a_lshift(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _54829_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8d96d8:;
			{
				jule::I64 _55117_l = _1e0d50de6_as_i64(&(*_self_));;
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1e0d5115a_as_u64(&_54829_x);;
					_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_55117_l << _55321_r)));
				} else {
					_1e0d5710b_lshift_unsig((*_self_),_54829_x);
				};
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8d97c6:;
			{
				_1e0d5710b_lshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1ac8d90ab:;
			{
				return false;
			}
		}
		_match_end_1ac8d8ee0:;
	};
	return true;
}



inline jule::Bool _1e0d56c98_rshift(_1e0d4da1a_Const* _self_, _1e0d4da1a_Const _56829_x) {
	{
		
		if (_1e0d52579_is_i64(&(*_self_))) {
			_case_begin_1ac8dc246:;
			{
				jule::I64 _57117_l = _1e0d50de6_as_i64(&(*_self_));;
				if ((_57117_l < 0LL)) {
					jule::U64 _57321_r = _1e0d5115a_as_u64(&_56829_x);;
					_1e0d51644_set_i64(&(*_self_), static_cast<jule::I64>((_57117_l >> _57321_r)));
				} else {
					_1e0d57408_rshift_unsig((*_self_),_56829_x);
				};
			}
		}
		else if (_1e0d527dd_is_u64(&(*_self_))) {
			_case_begin_1ac8dc334:;
			{
				_1e0d57408_rshift_unsig((*_self_),_56829_x);
			}
		}
		else {
			_case_begin_1ac8dbb19:;
			{
				return false;
			}
		}
		_match_end_1ac8dba4d:;
	};
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0d4da1a_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e01087ba_FieldIns> _1e00a95e5_instance(jule::Ptr<_1e010cc53_Field> _self_) {
	return jule::new_ptr<_1e01087ba_FieldIns>(_1e01087ba_FieldIns{._field_decl=_self_, });
}







std::ostream &operator<<(std::ostream &_Stream, _1e010cc53_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e00e8249_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e010a05d_StructIns> _1e00eb5c1_instance(jule::Ptr<_1e010261b_Struct> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	jule::Ptr<_1e010a05d_StructIns> _9917_ins = jule::new_ptr<_1e010a05d_StructIns>(_1e010a05d_StructIns{._field_decl=_self_, ._field_fields=jule::Slice<jule::Ptr<_1e01087ba_FieldIns>>::alloc(0LL,_self_.get()._field_fields.len()), ._field_refers=static__1e01483a9_new(), });;
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1acb60365:;
		if (it != expr.end()) {
			jule::Ptr<_1e010cc53_Field> _10521_f = *it;
			{
				_9917_ins.get()._field_fields = jule::alloc_for_append(_9917_ins.get()._field_fields,1);_9917_ins.get()._field_fields.__push(_1e00a95e5_instance(_10521_f));;
				if ((((!(_10521_f.get()._field_mutable)) && (_10521_f.get()._field_kind.get()._field_kind != nullptr)) && _1ed77d074_mutable(_10521_f.get()._field_kind.get()._field_kind.ptr()))) {
					_9917_ins.get()._field_mutable=true;
				};
			}
			_iter_next_1acb60365:;
			++it;
			goto _iter_begin_1acb60365;
		}
		_iter_end_1acb60365:;
	};
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_9917_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_9917_ins.get()._field_methods=jule::Slice<jule::Ptr<_1e0144581_Fn>>::alloc(0LL,_self_.get()._field_methods.len());
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1acb635aa:;
			if (it != expr.end()) {
				jule::Ptr<_1e0144581_Fn> _11625_f = *it;
				{
					jule::Ptr<_1e0144581_Fn> _11725_fins = jule::new_ptr<_1e0144581_Fn>((*(_11625_f)));;
					_11725_fins.get()._field_instances=nullptr;
					_9917_ins.get()._field_methods = jule::alloc_for_append(_9917_ins.get()._field_methods,1);_9917_ins.get()._field_methods.__push(_11725_fins);;
				}
				_iter_next_1acb635aa:;
				++it;
				goto _iter_begin_1acb635aa;
			}
			_iter_end_1acb635aa:;
		};
	};
	return _9917_ins;
}



inline jule::Ptr<_1e010a05d_StructIns> _1e00edbde_append_instance(_1e010261b_Struct* _self_, jule::Ptr<_1e010a05d_StructIns>& _12839_ins) {
	if ((((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL))) {
		return (*_self_)._field_instances[0LL];
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1acb657dd:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _13421_ains = *it;
			{
				if (_1e0119105_same(_13421_ains.ptr(), _12839_ins)) {
					return _13421_ains;
				};
			}
			_iter_next_1acb657dd:;
			++it;
			goto _iter_begin_1acb657dd;
		}
		_iter_end_1acb657dd:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}



inline jule::Ptr<_1e0144581_Fn> _1e0100460_find_method(_1e010261b_Struct* _self_, jule::Str _14634_ident, jule::Bool _14646_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab2c12ad:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _14721_f = *it;
			{
				if (((_14721_f.get()._field_statically == _14646_statically) && (_14721_f.get()._field_ident == _14634_ident))) {
					return _14721_f;
				};
			}
			_iter_next_1ab2c12ad:;
			++it;
			goto _iter_begin_1ab2c12ad;
		}
		_iter_end_1ab2c12ad:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0e366e6_Var> _1e010164d_find_static(_1e010261b_Struct* _self_, jule::Str _15734_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1ab2c2424:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _15821_v = *it;
			{
				if ((_15821_v.get()._field_ident == _15734_ident)) {
					return _15821_v;
				};
			}
			_iter_next_1ab2c2424:;
			++it;
			goto _iter_begin_1ab2c2424;
		}
		_iter_end_1ab2c2424:;
	};
	return nullptr;
}



inline jule::Ptr<_1e010cc53_Field> _1e0103045_find_field(_1e010261b_Struct* _self_, jule::Str _16833_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab2c32b0:;
		if (it != expr.end()) {
			jule::Ptr<_1e010cc53_Field> _16921_f = *it;
			{
				if ((_16921_f.get()._field_ident == _16833_ident)) {
					return _16921_f;
				};
			}
			_iter_next_1ab2c32b0:;
			++it;
			goto _iter_begin_1ab2c32b0;
		}
		_iter_end_1ab2c32b0:;
	};
	return nullptr;
}



inline jule::Bool _1e00ecb88_is_implements(_1e010261b_Struct* _self_, jule::Ptr<_1e0567d06_Trait> _17832_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1ab2c413a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> &_17916_it = *it;
			{
				if ((_17832_t == _17916_it)) {
					return true;
				};
			}
			_iter_next_1ab2c413a:;
			++it;
			goto _iter_begin_1ab2c413a;
		}
		_iter_end_1ab2c413a:;
	};
	return false;
}



inline jule::Bool _1e010a976_is_derives(_1e010261b_Struct* _self_, jule::Str _18829_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ab2c4558:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> &_18916_d = *it;
			{
				if ((_18916_d.get()._field_tag.get()._field_kind == jule::Str("derive", 6))) {
					if (((_18916_d.get()._field_args.len() == 1LL) && (_18916_d.get()._field_args[0LL].get()._field_kind == _18829_ident))) {
						return true;
					};
				};
			}
			_iter_next_1ab2c4558:;
			++it;
			goto _iter_begin_1ab2c4558;
		}
		_iter_end_1ab2c4558:;
	};
	return false;
}



inline jule::Bool _1e010ca00_is_uses(_1e010261b_Struct* _self_, jule::Ptr<_1e010261b_Struct> _20026_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1ab2c6b43:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> &_20116_u = *it;
			{
				while ((_20026_s == _20116_u)) {
					{
						return true;
					}
				_iter_next_1ab2c7209:;
				}
				_iter_end_1ab2c7209:;;
			}
			_iter_next_1ab2c6b43:;
			++it;
			goto _iter_begin_1ab2c6b43;
		}
		_iter_end_1ab2c6b43:;
	};
	return false;
}



inline jule::Bool _1e0118940_has_ref_accessible(_1e010261b_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab2c7506:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> &_21116_m = *it;
			{
				if (((_21116_m.get()._field_params.len() > 0LL) && _1e01202c6_is_ref(_21116_m.get()._field_params[0LL].ptr()))) {
					return true;
				};
			}
			_iter_next_1ab2c7506:;
			++it;
			goto _iter_begin_1ab2c7506;
		}
		_iter_end_1ab2c7506:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e010261b_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01087ba_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0116dc2_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e011cdb7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0111cac_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0116795_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0116982_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013ea76_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013ec63_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e013ee50_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e014013c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140329_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140516_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140703_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01408e0_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140acc_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140cb9_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01411d7_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01413c4_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01415b1_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e014179d_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e014198a_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0141b77_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0141d64_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0142051_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e014223d_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e014242a_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0142617_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0142804_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01429e1_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0142bcd_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0142dba_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01430a7_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0140ea6_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0143717_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0143904_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0143ae1_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0143ccd_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0143eba_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01441a7_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0144938_ParamIns> _1e0114c6b_instance(jule::Ptr<_1e0144394_Param> _self_) {
	return jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=_self_, });
}



inline jule::Bool _1e01184ab_is_self(_1e0144394_Param* _self_) {
	return (((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _1e01202c6_is_ref(_1e0144394_Param* _self_) {
	return ((!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0144394_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0105894_is_void(_1e0144581_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1e0123d35_is_method(_1e0144581_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1e00a944c_is_entry_point(_1e0144581_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1e00e98aa_is_init(_1e0144581_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1e00eb824_is_anon(_1e0144581_Fn* _self_) {
	return _1dd996bd7_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1e010461d_any_var(_1e0144581_Fn* _self_) {
	return (((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL));
}



inline jule::Ptr<_1e01457c4_FnIns> _1e01080d3_instance_force(jule::Ptr<_1e0144581_Fn> _self_) {
	jule::Ptr<_1e01457c4_FnIns> _10017_ins = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_decl=_self_, ._field_scope=jule::new_ptr<_1e0dd6322_Scope>(), ._field_refers=static__1e01483a9_new(), });;
	_10017_ins.get()._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::alloc(0LL,_self_.get()._field_params.len());
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ab2d9529:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144394_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_params = jule::alloc_for_append(_10017_ins.get()._field_params,1);_10017_ins.get()._field_params.__push(_1e0114c6b_instance(_10721_p));;
			}
			_iter_next_1ab2d9529:;
			++it;
			goto _iter_begin_1ab2d9529;
		}
		_iter_end_1ab2d9529:;
	};
	if ((_10017_ins.get()._field_decl.get()._field_result != nullptr)) {
		_10017_ins.get()._field_result=_10017_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	};
	return _10017_ins;
}



inline jule::Ptr<_1e01457c4_FnIns> _1e01098ba_instance(jule::Ptr<_1e0144581_Fn> _self_) {
	if (((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL))) {
		return _self_.get()._field_instances[0LL];
	};
	return _1e01080d3_instance_force(_self_);
}



inline jule::Ptr<_1e01457c4_FnIns> _1e012185a_append_instance(_1e0144581_Fn* _self_, jule::Ptr<_1e01457c4_FnIns>& _12839_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return (*_self_)._field_instances[0LL];
		};
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1ab2de4eb:;
		if (it != expr.end()) {
			jule::Ptr<_1e01457c4_FnIns> _14421_ains = *it;
			{
				if (_1e0146ac2_same(_14421_ains.ptr(), _12839_ins)) {
					return _14421_ains;
				};
			}
			_iter_next_1ab2de4eb:;
			++it;
			goto _iter_begin_1ab2de4eb;
		}
		_iter_end_1ab2de4eb:;
	};
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12839_ins);;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0144581_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e0144d12_to_str(_1e0144938_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_decl.get()._field_reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1e01184ab_is_self((*_self_)._field_decl.ptr())) {
		if (_1e01202c6_is_ref((*_self_)._field_decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;
	};
	if ((*_self_)._field_decl.get()._field_variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_kind != nullptr)) {
		_16617_s+=_1ed77c073_to_str((*_self_)._field_kind.ptr());
	};
	return _16617_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0144938_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e0145b37_to_str(_1e01457c4_FnIns* _self_) {
	;
	return _1e0146dd0_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1e0145e45_equals(jule::Ptr<_1e01457c4_FnIns> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _21726_other) {
	jule::Ptr<_1e01457c4_FnIns> _21813_f = _1ed77ee77_fnc(_21726_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_exceptional != _21813_f.get()._field_decl.get()._field_exceptional)) {
		return false;
	};
	if ((_self_.get()._field_decl.get()._field_unsafety != _21813_f.get()._field_decl.get()._field_unsafety)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _21813_f.get()._field_generics.len())) {
		return false;
	};
	if ((_1e0105894_is_void(_self_.get()._field_decl.ptr()) != _1e0105894_is_void(_21813_f.get()._field_decl.ptr()))) {
		return false;
	};
	jule::I32 _23917_i = 0LL;;
	for (; (_23917_i < _self_.get()._field_generics.len()); (_23917_i)++) {
		{
			if ((!(_1ed77c381_equals(_self_.get()._field_generics[_23917_i], _21813_f.get()._field_generics[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1ab2e5359:;
	}
	_iter_end_1ab2e5359:;;
	jule::Fn<jule::Bool(jule::Ptr<_1e0144938_ParamIns>,jule::Ptr<_1e0144938_ParamIns>)> _24613_check_params = jule::Fn<jule::Bool(jule::Ptr<_1e0144938_ParamIns>,jule::Ptr<_1e0144938_ParamIns>)>([=](jule::Ptr<_1e0144938_ParamIns> _24631_p1, jule::Ptr<_1e0144938_ParamIns> _24646_p2) mutable -> jule::Bool {
		if ((_24631_p1.get()._field_decl.get()._field_mutable != _24646_p2.get()._field_decl.get()._field_mutable)) {
			return false;
		};
		if (_1e01184ab_is_self(_24631_p1.get()._field_decl.ptr())) {
			if ((!(_1e01184ab_is_self(_24646_p2.get()._field_decl.ptr())))) {
				return false;
			};
			if ((_1e01202c6_is_ref(_24631_p1.get()._field_decl.ptr()) != _1e01202c6_is_ref(_24646_p2.get()._field_decl.ptr()))) {
				return false;
			};
			return true;
		};
		if ((_24631_p1.get()._field_decl.get()._field_reference != _24646_p2.get()._field_decl.get()._field_reference)) {
			return false;
		};
		if ((_24631_p1.get()._field_decl.get()._field_variadic != _24646_p2.get()._field_decl.get()._field_variadic)) {
			return false;
		};
		return _1ed77c381_equals(_24631_p1.get()._field_kind, _24646_p2.get()._field_kind);
	});;
	if ((_21813_f.get()._field_params.len() != _self_.get()._field_params.len())) {
		return false;
	};
	_23917_i=0LL;
	for (; (_23917_i < _self_.get()._field_params.len()); (_23917_i)++) {
		{
			if ((!(_24613_check_params(_self_.get()._field_params[_23917_i],_21813_f.get()._field_params[_23917_i])))) {
				return false;
			};
		}
	_iter_next_1ab2ec8a0:;
	}
	_iter_end_1ab2ec8a0:;;
	if ((!(_1e0105894_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1ed77c381_equals(_self_.get()._field_result, _21813_f.get()._field_result)))) {
			return false;
		};
	};
	return true;
}



inline jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _1e01462db_types(_1e01457c4_FnIns* _self_) {
	{
		
		if (((*_self_)._field_result == nullptr)) {
			_case_begin_1ab2eeb6b:;
			{
				return nullptr;
			}
		}
		else if ((_1ed780928_tup((*_self_)._field_result.ptr()) == nullptr)) {
			_case_begin_1ab2eebd2:;
			{
				return jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::make({(*_self_)._field_result});
			}
		}
		else {
			_case_begin_1ab2eeb05:;
			{
				return _1ed780928_tup((*_self_)._field_result.ptr()).get()._field_types;
			}
		}
		_match_end_1ab2eea5b:;
	};
}



inline jule::Bool _1e0146550_is_builtin(_1e01457c4_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1e01467b4_is_anon(_1e01457c4_FnIns* _self_) {
	return ((*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1e00eb824_is_anon((*_self_)._field_decl.ptr())));
}



inline jule::Bool _1e0146ac2_same(_1e01457c4_FnIns* _self_, jule::Ptr<_1e01457c4_FnIns> _32323_f) {
	if ((((*_self_)._field_decl != _32323_f.get()._field_decl) || (_32323_f.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab303510:;
		if (it != expr.end()) {
			jule::I32 _32813_i = it - expr.begin();
			jule::Ptr<_1ed77bbbb_TypeKind> &_32816_g = *it;
			{
				if ((!(_1ed77c381_equals(_32816_g, _32323_f.get()._field_generics[_32813_i])))) {
					return false;
				};
			}
			_iter_next_1ab303510:;
			++it;
			_32813_i++;
			goto _iter_begin_1ab303510;
		}
		_iter_end_1ab303510:;
	};
	return true;
}



inline jule::Str _1e0146dd0_get_kind_str(_1e01457c4_FnIns* _self_, jule::Bool _33931_ident) {
	jule::Str _34017_s = jule::Str();;
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_34017_s+=jule::Str("unsafe ", 7);
	};
	_34017_s+=jule::Str("fn", 2);
	if ((_33931_ident && ((*_self_)._field_decl != nullptr))) {
		_34017_s+=(jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident);
	};
	if (((*_self_)._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab3067bb:;
			if (it != expr.end()) {
				jule::I32 _35417_i = it - expr.begin();
				jule::Ptr<_1ed77bbbb_TypeKind> &_35420_t = *it;
				{
					_34017_s+=_1ed77c073_to_str(_35420_t.ptr());
					if (((_35417_i + 1LL) < (*_self_)._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1ab3067bb:;
				++it;
				_35417_i++;
				goto _iter_begin_1ab3067bb;
			}
			_iter_end_1ab3067bb:;
		};
		_34017_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_34017_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab3084c1:;
			if (it != expr.end()) {
				jule::I32 _36317_i = it - expr.begin();
				jule::Ptr<_1e013165b_GenericDecl> &_36320_g = *it;
				{
					_34017_s+=_36320_g.get()._field_ident;
					if (((_36317_i + 1LL) < (*_self_)._field_decl.get()._field_generics.len())) {
						_34017_s+=jule::Str(",", 1);
					};
				}
				_iter_next_1ab3084c1:;
				++it;
				_36317_i++;
				goto _iter_begin_1ab3084c1;
			}
			_iter_end_1ab3084c1:;
		};
		_34017_s+=jule::Str("]", 1);
	};
	_34017_s+=jule::Str("(", 1);
	jule::I32 _37313_n = (*_self_)._field_params.len();;
	if ((_37313_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1ab30a847:;
			if (it != expr.end()) {
				jule::Ptr<_1e0144938_ParamIns> &_37520_p = *it;
				{
					_34017_s+=_1e0144d12_to_str(_37520_p.ptr());
					_34017_s+=jule::Str(",", 1);
				}
				_iter_next_1ab30a847:;
				++it;
				goto _iter_begin_1ab30a847;
			}
			_iter_end_1ab30a847:;
		};
		(_34017_s).mut_slice(0LL,(_34017_s.len() - 1LL));;
	};
	_34017_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_34017_s+=jule::Str("!", 1);
	};
	if ((!(_1e0105894_is_void((*_self_)._field_decl.ptr())))) {
		_34017_s+=jule::Str(":", 1);
		_34017_s+=_1ed77c073_to_str((*_self_)._field_result.ptr());
	};
	return _34017_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01457c4_FnIns _Src) {
	_Stream << _1e0145b37_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1e01480ac_ReferenceStack> static__1e01483a9_new(void) {
	return jule::new_ptr<_1e01480ac_ReferenceStack>(_1e01480ac_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL,10LL)});
}



inline jule::I32 _1e014873e_len(_1e01480ac_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*_self_)._field_buffer.len());
}



inline jule::Any _1e0148a4c_at(_1e01480ac_ReferenceStack* _self_, jule::I32 _6825_i) {
	return jule::Any((*_self_)._field_buffer[_6825_i]);
}



inline void _1e0148cc2_push(_1e01480ac_ReferenceStack* _self_, jule::Any _7331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(jule::Any(_7331_ref));;
}



inline jule::Bool _1ad2379a3_exist(_1e01480ac_ReferenceStack* _self_, jule::Ptr<_1e01457c4_FnIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad238be6:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ad238be6:;
			++it;
			goto _iter_begin_1ad238be6;
		}
		_iter_end_1ad238be6:;
	};
	return false;
}

inline jule::Bool _1ad24c930_exist(_1e01480ac_ReferenceStack* _self_, jule::Ptr<_1e0e366e6_Var> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad24db2e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ad24db2e:;
			++it;
			goto _iter_begin_1ad24db2e;
		}
		_iter_end_1ad24db2e:;
	};
	return false;
}

inline jule::Bool _1ad2d1ab3_exist(_1e01480ac_ReferenceStack* _self_, jule::Ptr<_1e010a05d_StructIns> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad2d2d06:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ad2d2d06:;
			++it;
			goto _iter_begin_1ad2d2d06;
		}
		_iter_end_1ad2d2d06:;
	};
	return false;
}

inline jule::Bool _1ad5ce9a4_exist(_1e01480ac_ReferenceStack* _self_, jule::Ptr<_1e0567d06_Trait> _7827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ad5d0ba3:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((_7916_ref == _7827_t)) {
					return true;
				};
			}
			_iter_next_1ad5d0ba3:;
			++it;
			goto _iter_begin_1ad5d0ba3;
		}
		_iter_end_1ad5d0ba3:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e01480ac_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0149487_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e014d821_SymbolBuilder> _1e014ddd7_get_root(jule::Ptr<_1e014d821_SymbolBuilder> _self_) {
	jule::Ptr<_1e014d821_SymbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1ab32372d:;
	}
	_iter_end_1ab32372d:;;
	return _31617_root;
}



inline void _1e014e2a0_push_err(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1dd9941e0_Token>& _32328_token, jule::Str _32343_fmt, jule::Slice<jule::Any> _32356_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e0e19a2b_compiler_err(_32328_token,true,_32343_fmt,jule::Any(_32356_args)));;
}



inline void _1e014e668_push_err_text(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1dd9941e0_Token>& _32733_token, jule::Str _32748_fmt, jule::Slice<jule::Any> _32761_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e0e19a2b_compiler_err(_32733_token,false,_32748_fmt,jule::Any(_32761_args)));;
}



inline void _1e014e987_push_suggestion(_1e014d821_SymbolBuilder* _self_, jule::Str _33234_fmt, jule::Slice<jule::Any> _33247_args) {
	{
		_1e0e1ae39_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33234_fmt,jule::Any(_33247_args));
	};
}



inline jule::Bool _1e014ed61_check_cpp_use_decl_path(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _33643_decl, jule::Str _33659_path) {
	jule::Bool _33672_ok = jule::Bool();
	jule::Str _33713_ext = _1dc692dac_ext(_33659_path);;
	if (((!(_1dd64e1db_is_valid_header_ext(_33713_ext))) && (!(_1dd64e483_is_valid_cpp_ext(_33713_ext))))) {
		_1e014e2a0_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext)}));
		_33672_ok = false;
		return _33672_ok;
	};
	jule::Ptr<_1dc4b30ea_Status> _34413_info = ({
		auto except = static__1dc611468_of(_33659_path);
		(except.ok()) ? (except.result) : ({{
			_1e014e2a0_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
			_33672_ok = false;
			return _33672_ok;
		} jule::Ptr<_1dc4b30ea_Status>();});
	});;
	if (_1db6ea267_is_dir(_34413_info.ptr())) {
		_1e014e2a0_push_err(&(*_self_), _33643_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33643_decl.get()._field_link_path)}));
		_33672_ok = false;
		return _33672_ok;
	};
	_33672_ok = true;
	return _33672_ok;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e015016e_build_cpp_header_import(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl.get()._field_link_path;;
	if ((!(_1dd64e098_is_std_header_path(_35647_decl.get()._field_link_path)))) {
		_35717_path=_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd999ea4_dir(_35647_decl.get()._field_token.get()._field_file.ptr()),_35647_decl.get()._field_link_path}));
		jule::Bool _36121_ok = _1e014ed61_check_cpp_use_decl_path(&(*_self_), _35647_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;
		};
		std::tie(_35717_path,_36121_ok) = _1dc6abaeb_abs(_35717_path);
		if ((!(_36121_ok))) {
			_1e014e2a0_push_err(&(*_self_), _35647_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35647_decl.get()._field_link_path)}));
		};
	};
	return jule::new_ptr<_1e0e13272_ImportInfo>(_1e0e13272_ImportInfo{._field_token=_35647_decl.get()._field_token, ._field_path=_35717_path, ._field_link_path=_35647_decl.get()._field_link_path, ._field_ident=jule::Str(), ._field_cpp_linked=true, ._field_std=false, ._field_package=nullptr, });
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e015048d_build_std_import(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _38440_decl) {
	jule::Str _38517_path = _38440_decl.get()._field_link_path.slice(5LL);;
	_38517_path=_1dd5ea86e_replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_38517_path=_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd66e45e_PATH_STDLIB,_38517_path}));
	jule::Bool _38820_ok;;
	std::tie(_38517_path,_38820_ok) = _1dc6abaeb_abs(_38517_path);
	if ((!(_38820_ok))) {
		_1e014e2a0_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_1dc4b30ea_Status> _39513_info = ({
		auto except = static__1dc611468_of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1e014e2a0_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_1dc4b30ea_Status>();});
	});;
	if ((!(_1db6ea267_is_dir(_39513_info.ptr())))) {
		_1e014e2a0_push_err(&(*_self_), _38440_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38440_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I32 _40513_i = (_1dc6ddbb6_find_last(_38440_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38440_decl.get()._field_link_path.slice(_40513_i);;
	return jule::new_ptr<_1e0e13272_ImportInfo>(_1e0e13272_ImportInfo{._field_token=_38440_decl.get()._field_token, ._field_path=_38517_path, ._field_link_path=_38440_decl.get()._field_link_path, ._field_ident=_40613_ident, ._field_alias=_38440_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=true, ._field_import_all=_38440_decl.get()._field_full, ._field_package=jule::new_ptr<_1e0e16253_Package>(_1e0e16253_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e015079b_build_ident_import(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e013aa3e_UseDecl>& _42343_decl) {
	jule::Str _42413_mod_path = _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0eb64_get_mod_path(_self_.get()._field_importer);;
	if ((_42413_mod_path.len() == 0LL)) {
		_1e014e2a0_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1e014e987_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Str _43117_path = _42343_decl.get()._field_link_path;;
	_43117_path=_1dd5ea86e_replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(92LL),-1LL);
	_43117_path=_1dc68e46e_join(jule::Slice<jule::Str>::make({_42413_mod_path,_43117_path}));
	jule::Bool _43520_ok;;
	std::tie(_43117_path,_43520_ok) = _1dc6abaeb_abs(_43117_path);
	if ((!(_43520_ok))) {
		_1e014e2a0_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::Ptr<_1dc4b30ea_Status> _44213_info = ({
		auto except = static__1dc611468_of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1e014e2a0_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
			return nullptr;
		} jule::Ptr<_1dc4b30ea_Status>();});
	});;
	if ((!(_1db6ea267_is_dir(_44213_info.ptr())))) {
		_1e014e2a0_push_err(_self_.ptr(), _42343_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42343_decl.get()._field_link_path)}));
		return nullptr;
	};
	jule::I32 _45213_i = (_1dc6ddbb6_find_last(_42343_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42343_decl.get()._field_link_path.slice(_45213_i);;
	return jule::new_ptr<_1e0e13272_ImportInfo>(_1e0e13272_ImportInfo{._field_token=_42343_decl.get()._field_token, ._field_path=_43117_path, ._field_link_path=_42343_decl.get()._field_link_path, ._field_ident=_45313_ident, ._field_alias=_42343_decl.get()._field_alias, ._field_cpp_linked=false, ._field_std=false, ._field_import_all=_42343_decl.get()._field_full, ._field_package=jule::new_ptr<_1e0e16253_Package>(_1e0e16253_Package{._field_files=nullptr}), });
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0150aa9_build_import(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e013aa3e_UseDecl>& _47037_decl) {
	{
		
		if (_47037_decl.get()._field_cpp_linked) {
			_case_begin_1ab33e172:;
			{
				return _1e015016e_build_cpp_header_import(_self_.ptr(), _47037_decl);
			}
		}
		else if (_47037_decl.get()._field_std) {
			_case_begin_1ab33e1d8:;
			{
				return _1e015048d_build_std_import(_self_.ptr(), _47037_decl);
			}
		}
		else {
			_case_begin_1ab33d627:;
			{
				return _1e015079b_build_ident_import(_self_, _47037_decl);
			}
		}
		_match_end_1ab33d55b:;
	};
}



inline jule::Bool _1e0150dd9_check_duplicate_use_decl(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e0e13272_ImportInfo>& _48144_pkg) {
	jule::Bool _48164_ok = jule::Bool();
	jule::Ptr<_1e0e13272_ImportInfo> _48313_lpkg = _1e0e78826_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>([=](jule::Ptr<_1e0e13272_ImportInfo> _48349_spkg) mutable -> jule::Bool {
		return (_48144_pkg.get()._field_path == _48349_spkg.get()._field_path);
	}));;
	if ((_48313_lpkg == nullptr)) {
		_48164_ok = true;
		return _48164_ok;
	};
	_1e014e2a0_push_err(&(*_self_), _48144_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48144_pkg.get()._field_link_path)}));
	_1e014e987_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_48164_ok = false;
	return _48164_ok;
}



inline void _1e0151219_impl_import_selections(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e0e13272_ImportInfo>& _49546_imp, jule::Ptr<_1e013aa3e_UseDecl>& _49569_decl) {
	_49546_imp.get()._field_selected=_49569_decl.get()._field_selected;
	{
		auto &expr = _49546_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1ab343264:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> _49716_item = *it;
			{
				{
					auto &expr = _49546_imp.get()._field_selected;
					auto it = expr.begin();
					_iter_begin_1ab3439c3:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9941e0_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1ab3439c3;
							} else if ((_49716_item.get()._field_kind == _49820_citem.get()._field_kind)) {
								_1e014e2a0_push_err(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_kind)}));
								_1e014e987_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1ab3439c3;
							};
						}
						_iter_next_1ab3439c3:;
						++it;
						goto _iter_begin_1ab3439c3;
					}
					_iter_end_1ab3439c3:;
				};
			}
			_iter_next_1ab343264:;
			++it;
			goto _iter_begin_1ab343264;
		}
		_iter_end_1ab343264:;
	};
}



inline jule::Str _1e0151527_get_as_link_path(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Str _51040_path) {
	if (_1dd588048_has_prefix(_51040_path,_1dd66e45e_PATH_STDLIB)) {
		(_51040_path).mut_slice(_1dd66e45e_PATH_STDLIB.len());;
		return (jule::Str("std", 3) + _1dd5ea86e_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
	};
	jule::Str _51614_root;;
	std::tie(_51614_root,std::ignore) = _1dc6abaeb_abs(_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0eb64_get_mod_path(_self_.get()._field_importer));
	(_51040_path).mut_slice(_51614_root.len());;
	if ((_51040_path[0LL] == 92LLU)) {
		(_51040_path).mut_slice(1LL);;
	};
	return _1dd5ea86e_replace(_51040_path,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL);
}



inline void _1e01518e0_push_cycle_error(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e014d821_SymbolBuilder>& _52437_sb, jule::Str _52457_path, jule::Str& _52473_message) {
	;
	jule::Str _52713_refers_to = _1dd65ae40_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1e0151527_get_as_link_path(_self_, _1dd999ea4_dir(_52437_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1e0151527_get_as_link_path(_self_, _52457_path))}));;
	(_52473_message).buffer.insert(0, (((_1dd569b73_repeat(jule::Str(" ", 1),4LL) + _52713_refers_to) + jule::Str("\n", 1))));;
}



inline void _1e0151ca8_push_cross_cycle_error(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e014d821_SymbolBuilder>& _53443_target, jule::Ptr<_1e0e13272_ImportInfo>& _53468_imp, jule::Ptr<_1dd9941e0_Token>& _53487_error_token) {
	jule::Str _53517_message = jule::Str();;
	_1e01518e0_push_cycle_error(_self_, _self_,_53468_imp.get()._field_path,_53517_message);
	jule::Ptr<_1e014d821_SymbolBuilder> _53917_owner = _self_.get()._field_owner;;
	jule::Ptr<_1e014d821_SymbolBuilder> _54017_old = _self_;;
	while ((_53917_owner.get()._field_owner != nullptr)) {
		{
			_1e01518e0_push_cycle_error(_self_, _54017_old.get()._field_owner,_1dd999ea4_dir(_54017_old.get()._field_table.get()._field_file.ptr()),_53517_message);
			if ((_53917_owner.get()._field_owner == _53443_target)) {
				_1e01518e0_push_cycle_error(_self_, _53443_target,_1dd999ea4_dir(_53917_owner.get()._field_table.get()._field_file.ptr()),_53517_message);
				goto _iter_end_1ab34a700;
			};
			_54017_old=_53917_owner;
			_53917_owner=_53917_owner.get()._field_owner;
		}
	_iter_next_1ab34a700:;
	}
	_iter_end_1ab34a700:;;
	_1e014e2a0_push_err(_self_.ptr(), _53487_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53517_message)}));
}



inline jule::Bool _1e0152160_check_import_cycles(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e0e13272_ImportInfo> _55739_imp, jule::Ptr<_1e013aa3e_UseDecl>& _55758_decl) {
	if ((_55739_imp.get()._field_path == _1dd999ea4_dir(_self_.get()._field_table.get()._field_file.ptr()))) {
		_1e014e2a0_push_err(_self_.ptr(), _55758_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1e0151527_get_as_link_path(_self_, _55739_imp.get()._field_path))}));
		return false;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	};
	if ((_1dd999ea4_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1e0151ca8_push_cross_cycle_error(_self_, _self_.get()._field_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	jule::Ptr<_1e014d821_SymbolBuilder> _57217_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1dd999ea4_dir(_57217_owner.get()._field_table.get()._field_file.ptr()) == _55739_imp.get()._field_path)) {
		_1e0151ca8_push_cross_cycle_error(_self_, _57217_owner,_55739_imp,_55758_decl.get()._field_token);
		return false;
	};
	if ((_57217_owner.get()._field_owner != nullptr)) {
		_57217_owner=_57217_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;
}



inline void _1e015254a_check_package_accessibility(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _59347_decl, jule::Str& _59364_mod, jule::Str& _59375_path) {
	if (((_1e0e10a00_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1e0e0eb64_get_mod_path((*_self_)._field_importer) != _59364_mod) && _1dd30ed58_contains(_59375_path,jule::Str("internal", 8)))) {
		_1e014e2a0_push_err(&(*_self_), _59347_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e0152913_import_package(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e0e13272_ImportInfo>& _59939_imp, jule::Ptr<_1e013aa3e_UseDecl>& _59962_decl) {
	jule::Bool _59980_ok = jule::Bool();
	if (_59939_imp.get()._field_cpp_linked) {
		_59980_ok = true;
		return _59980_ok;
	};
	jule::Ptr<_1e0e13272_ImportInfo> _60417_port = _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e10280_get_import(_self_.get()._field_importer, _59939_imp.get()._field_path);;
	if ((_60417_port != nullptr)) {
		_59939_imp.get()._field_package=_60417_port.get()._field_package;
		_59939_imp.get()._field_duplicate=true;
		jule::Str _60917_old_mod = _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0eb64_get_mod_path(_self_.get()._field_importer);;
		_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0e911_set_mod_path(_self_.get()._field_importer, _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0ee72_mod_by_id(_self_.get()._field_importer, _59939_imp.get()._field_mod_id));
		_1e015254a_check_package_accessibility(_self_.ptr(), _59962_decl,_60917_old_mod,_60417_port.get()._field_path);
		_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0e911_set_mod_path(_self_.get()._field_importer, _60917_old_mod);
	} else {
		if ((!(_1e0152160_check_import_cycles(_self_, _59939_imp,_59962_decl)))) {
			_59980_ok = false;
			return _59980_ok;
		};
		jule::Str _61817_old_mod = _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0eb64_get_mod_path(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0e911_set_mod_path(_self_.get()._field_importer, _61817_old_mod);
		});;
		if (_59939_imp.get()._field_std) {
			_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e0e911_set_mod_path(_self_.get()._field_importer, _1dd66e45e_PATH_STDLIB);
		};
		jule::Slice<jule::Ptr<_1e00e2760_Ast>> _62322_asts;;
		jule::Slice<_1dd65aa00_Log> _62332_errors;;
		std::tie(_62322_asts,_62332_errors) = _1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e10637_import_package(_self_.get()._field_importer, _59939_imp.get()._field_path,(!(_59939_imp.get()._field_std)));
		if ((_62332_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
			_59980_ok = false;
			return _59980_ok;
		};
		_1e015254a_check_package_accessibility(_self_.ptr(), _59962_decl,_61817_old_mod,_59939_imp.get()._field_path);
		{
			auto &expr = _62322_asts;
			auto it = expr.begin();
			_iter_begin_1ab35c525:;
			if (it != expr.end()) {
				jule::Ptr<_1e00e2760_Ast> _63125_ast = *it;
				{
					jule::Ptr<_1e0e77eeb_SymbolTable> _63225_table = nullptr;;
					std::tie(_63225_table,_62332_errors) = _1ed79804a_build_symbols(_63125_ast,_self_.get()._field_importer,_self_);
					if ((_62332_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62332_errors);
						_1e014e668_push_err_text(_self_.ptr(), _59939_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_59939_imp.get()._field_link_path)}));
						_59980_ok = false;
						return _59980_ok;
					};
					_59939_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_59939_imp.get()._field_package.get()._field_files,1);_59939_imp.get()._field_package.get()._field_files.__push(_63225_table);;
				}
				_iter_next_1ab35c525:;
				++it;
				goto _iter_begin_1ab35c525;
			}
			_iter_end_1ab35c525:;
		};
	};
	_1e0151219_impl_import_selections(_self_.ptr(), _59939_imp,_59962_decl);
	_59980_ok = true;
	return _59980_ok;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0152c21_import_use_decl(jule::Ptr<_1e014d821_SymbolBuilder> _self_, jule::Ptr<_1e013aa3e_UseDecl>& _65140_decl) {
	jule::Ptr<_1e0e13272_ImportInfo> _65217_imp = _1e0150aa9_build_import(_self_, _65140_decl);;
	if ((_65217_imp == nullptr)) {
		return nullptr;
	};
	jule::Bool _65817_ok = _1e0150dd9_check_duplicate_use_decl(_self_.ptr(), _65217_imp);;
	if ((!(_65817_ok))) {
		return nullptr;
	};
	_65817_ok=_1e0152913_import_package(_self_, _65217_imp,_65140_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_65217_imp);;
	if (_65817_ok) {
		_1e0e10a00_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1e0e108ac_imported(_self_.get()._field_importer, _65217_imp);
		return _65217_imp;
	};
	return nullptr;
}



inline void _1e0152dec_import_use_decls(jule::Ptr<_1e014d821_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1ab36330b:;
		if (it != expr.end()) {
			jule::Ptr<_1e013aa3e_UseDecl> _67321_decl = *it;
			{
				_1e0152c21_import_use_decl(_self_, _67321_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ab36330b;
				};
			}
			_iter_next_1ab36330b:;
			++it;
			goto _iter_begin_1ab36330b;
		}
		_iter_end_1ab36330b:;
	};
}



inline void _1e0153172_append_node(_1e014d821_SymbolBuilder* _self_, _1e00e2ead_Node& _68335_node) {
	{
		auto &_match_expr{ _68335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e013e2b2_Impl>>()) {
			_case_begin_1ab363e33:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1e014d2c1_build_impl(_68335_node._field_data.operator jule::Ptr<_1e013e2b2_Impl>()));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0139653_TypeAliasDecl>>()) {
			_case_begin_1ab36474c:;
			{
				jule::Ptr<_1ed77ae84_TypeAlias> _68821_ta = _1e0149d6c_build_type_alias(_68335_node._field_data.operator jule::Ptr<_1e0139653_TypeAliasDecl>());;
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_68821_ta);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013da20_StructDecl>>()) {
			_case_begin_1ab3647b3:;
			{
				jule::Ptr<_1e010261b_Struct> _69121_srct = _1e014a697_build_struct(_68335_node._field_data.operator jule::Ptr<_1e013da20_StructDecl>());;
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_69121_srct);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>()) {
			_case_begin_1ab365187:;
			{
				jule::Ptr<_1e0144581_Fn> _69421_f = _1e014b2ad_build_fn(_68335_node._field_data.operator jule::Ptr<_1e0134e01_FnDecl>());;
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_69421_f);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013dc1d_TraitDecl>>()) {
			_case_begin_1ab3651ed:;
			{
				jule::Ptr<_1e0567d06_Trait> _69721_t = _1e014b7ec_build_trait(_68335_node._field_data.operator jule::Ptr<_1e013dc1d_TraitDecl>());;
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_69721_t);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0135dd0_VarDecl>>()) {
			_case_begin_1ab365264:;
			{
				jule::Ptr<_1e0e366e6_Var> _70021_v = _1e014cc82_build_var(_68335_node._field_data.operator jule::Ptr<_1e0135dd0_VarDecl>());;
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_70021_v);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013bb0b_EnumDecl>>()) {
			_case_begin_1ab3652ca:;
			{
				jule::Ptr<_1e057b8b9_Enum> _70321_e = _1e014c0d3_build_enum(_68335_node._field_data.operator jule::Ptr<_1e013bb0b_EnumDecl>());;
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_70321_e);;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013c9db_TypeEnumDecl>>()) {
			_case_begin_1ab365341:;
			{
				jule::Ptr<_1e04c643a_TypeEnum> _70621_e = _1e014c9da_build_type_enum(_68335_node._field_data.operator jule::Ptr<_1e013c9db_TypeEnumDecl>());;
				(*_self_)._field_table.get()._field_type_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_type_enums,1);(*_self_)._field_table.get()._field_type_enums.__push(_70621_e);;
			}
		}
		else {
			_case_begin_1ab3644e9:;
			{
				_1e014e2a0_push_err(&(*_self_), _68335_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab36386c:;
	};
}



inline void _1e015334d_append_nodes(_1e014d821_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1ab36dd0b:;
		if (it != expr.end()) {
			_1e00e2ead_Node _71421_node = *it;
			{
				_1e0153172_append_node(&(*_self_), _71421_node);
			}
			_iter_next_1ab36dd0b:;
			++it;
			goto _iter_begin_1ab36dd0b;
		}
		_iter_end_1ab36dd0b:;
	};
}



inline void _1e01535c3_push_directive_pass(_1e014d821_SymbolBuilder* _self_, jule::Ptr<_1e0124e35_Directive>& _71943_d) {
	if ((_71943_d.get()._field_args.len() == 0LL)) {
		_1e014e2a0_push_err(&(*_self_), _71943_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71943_d.get()._field_args.len() > 1LL)) {
		jule::Ptr<_1dd9941e0_Token> _72417_arg = _71943_d.get()._field_args[1LL];;
		_1e014e2a0_push_err(&(*_self_), _72417_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9941e0_Token> _72813_arg = _71943_d.get()._field_args[0LL];;
	if ((_72813_arg.get()._field_id != static_cast<jule::U32>(6LLU))) {
		_1e014e2a0_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72813_arg.get()._field_kind[0LL] != '\"')) {
		_1e014e2a0_push_err(&(*_self_), _72813_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1e0149487_Pass{._field_token=_71943_d.get()._field_tag, ._field_text=_72813_arg.get()._field_kind.slice(1LL,(_72813_arg.get()._field_kind.len() - 1LL))});;
}



inline void _1e015379e_append_top_directives(_1e014d821_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1ab37378e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _74621_d = *it;
			{
				{
					auto &_match_expr{ _74621_d.get()._field_tag.get()._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ab374e66:;
						{
							_1e01535c3_push_directive_pass(&(*_self_), _74621_d);
						}
					}
					_match_end_1ab374dab:;
				};
			}
			_iter_next_1ab37378e:;
			++it;
			goto _iter_begin_1ab37378e;
		}
		_iter_end_1ab37378e:;
	};
}



inline void _1e015397a_build(jule::Ptr<_1e014d821_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1e0e77eeb_SymbolTable>(_1e0e77eeb_SymbolTable{._field_file=_self_.get()._field_ast.get()._field_file, });
	_1e015379e_append_top_directives(_self_.ptr());
	_1e0152dec_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1e015334d_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e014d821_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e01a1148_to_str(_1e0567d06_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e01a2b72_equals(jule::Ptr<_1e0567d06_Trait> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _2626_other) {
	jule::Ptr<_1e0567d06_Trait> _2713_trt = _1ed780450_trt(_2626_other.ptr());;
	return (_self_ == _2713_trt);
}



inline jule::Bool _1e01a46ac_is_builtin(_1e0567d06_Trait* _self_) {
	return ((*_self_)._field_token == nullptr);
}



inline jule::Ptr<_1e0144581_Fn> _1e01ccd78_find_method(_1e0567d06_Trait* _self_, jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab378e26:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_ident == _4034_ident)) {
					return _4121_f;
				};
			}
			_iter_next_1ab378e26:;
			++it;
			goto _iter_begin_1ab378e26;
		}
		_iter_end_1ab378e26:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0567d06_Trait _Src) {
	_Stream << _1e01a1148_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e02006a3_auto_expr(_1e04ed4c8_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e04ed4c8_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e0232e33_to_str(_1e057b8b9_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e03d2555_equals(jule::Ptr<_1e057b8b9_Enum> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _3826_other) {
	jule::Ptr<_1e057b8b9_Enum> _3913_enm = _1ed77e4c6_enm(_3826_other.ptr());;
	return (_self_ == _3913_enm);
}



inline jule::Ptr<_1e04ed4c8_EnumItem> _1e03dbedd_find_item(_1e057b8b9_Enum* _self_, jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1ab37b4cd:;
		if (it != expr.end()) {
			jule::Ptr<_1e04ed4c8_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_ident == _4732_ident)) {
					return _4821_item;
				};
			}
			_iter_next_1ab37b4cd:;
			++it;
			goto _iter_begin_1ab37b4cd;
		}
		_iter_end_1ab37b4cd:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e057b8b9_Enum _Src) {
	_Stream << _1e0232e33_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e05b1316_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e04aae14_to_str(_1e04c643a_TypeEnum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1e04d5845_equals(jule::Ptr<_1e04c643a_TypeEnum> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _8026_other) {
	jule::Ptr<_1e04c643a_TypeEnum> _8113_tenm = _1ed77e73a_tenm(_8026_other.ptr());;
	return (_self_ == _8113_tenm);
}



inline jule::Ptr<_1e05b1316_TypeEnumItem> _1e0507aed_find_item(_1e04c643a_TypeEnum* _self_, jule::Str _8932_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1ab37d535:;
		if (it != expr.end()) {
			jule::Ptr<_1e05b1316_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_ident == _8932_ident)) {
					return _9021_item;
				};
			}
			_iter_next_1ab37d535:;
			++it;
			goto _iter_begin_1ab37d535;
		}
		_iter_end_1ab37d535:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e04c643a_TypeEnum _Src) {
	_Stream << _1e04aae14_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1e05711d8_is_trait_impl(_1e0159a3b_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1e0572618_is_struct_impl(_1e0159a3b_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0159a3b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dd6322_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0ddcc41_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0d877bd_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0d879aa_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0d985ae_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0dc74de_is_while_next(_1e0d9879b_WhileIter* _self_) {
	return ((*_self_)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0d9879b_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dc6664_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dc6851_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dea413_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dea600_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dea7dc_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0dea9c9_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deabb6_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deada3_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0dc849b_is_generic_type_match(_1e0deb090_Match* _self_) {
	return (((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deb090_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0dc8c2c_is_default(_1e0deb4ad_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deb4ad_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deb69a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deb887_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0deba74_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0debc61_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0d81421_find_package(_1e0debe4d_ScopeChecker* _self_, jule::Str _43835_ident) {
	return _1e0e1b8da_find_package((*_self_)._field_s.ptr(), _43835_ident);
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0d9b54b_select_package(_1e0debe4d_ScopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _44837_selector) {
	return _1e0e1bbe8_select_package((*_self_)._field_s.ptr(), _44837_selector);
}



inline jule::Ptr<_1e0e366e6_Var> _1e0dec13a_find_var(_1e0debe4d_ScopeChecker* _self_, jule::Str _45931_ident, jule::Bool _45943_cpp_linked) {
	;
	jule::Ptr<_1e0e366e6_Var> _46217_v = _1e0e7a790___find_var((*_self_)._field_table.ptr(), _45931_ident,_45943_cpp_linked,true);;
	if ((_46217_v != nullptr)) {
		return _46217_v;
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _46717_parent = (*_self_)._field_parent;;
	while ((_46717_parent != nullptr)) {
		{
			_46217_v=_1e0e7a790___find_var(_46717_parent.get()._field_table.ptr(), _45931_ident,_45943_cpp_linked,true);
			if ((_46217_v != nullptr)) {
				return _46217_v;
			};
			_46717_parent=_46717_parent.get()._field_parent;
		}
	_iter_next_1ab3a66d4:;
	}
	_iter_end_1ab3a66d4:;;
	return _1e0e1c0a0_find_var((*_self_)._field_s.ptr(), _45931_ident,_45943_cpp_linked);
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0dec3c1_find_type_alias(_1e0debe4d_ScopeChecker* _self_, jule::Str _48638_ident, jule::Bool _48650_cpp_linked) {
	;
	jule::Ptr<_1ed77ae84_TypeAlias> _48917_ta = _1e0e7abe1___find_type_alias((*_self_)._field_table.ptr(), _48638_ident,_48650_cpp_linked,true);;
	if ((_48917_ta != nullptr)) {
		return _48917_ta;
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _49417_parent = (*_self_)._field_parent;;
	while ((_49417_parent != nullptr)) {
		{
			_48917_ta=_1e0e7abe1___find_type_alias(_49417_parent.get()._field_table.ptr(), _48638_ident,_48650_cpp_linked,true);
			if ((_48917_ta != nullptr)) {
				return _48917_ta;
			};
			_49417_parent=_49417_parent.get()._field_parent;
		}
	_iter_next_1ab3a95b6:;
	}
	_iter_end_1ab3a95b6:;;
	return _1e0e1c457_find_type_alias((*_self_)._field_s.ptr(), _48638_ident,_48650_cpp_linked);
}



inline jule::Ptr<_1e010261b_Struct> _1e0dec778_find_struct(_1e0debe4d_ScopeChecker* _self_, jule::Str _51134_ident, jule::Bool _51146_cpp_linked) {
	return _1e0e1c80e_find_struct((*_self_)._field_s.ptr(), _51134_ident,_51146_cpp_linked);
}



inline jule::Ptr<_1e0144581_Fn> _1e0decb30_find_fn(_1e0debe4d_ScopeChecker* _self_, jule::Str _52030_ident, jule::Bool _52042_cpp_linked) {
	return _1e0e1cbb6_find_fn((*_self_)._field_s.ptr(), _52030_ident,_52042_cpp_linked);
}



inline jule::Ptr<_1e0567d06_Trait> _1e0dece3d_find_trait(_1e0debe4d_ScopeChecker* _self_, jule::Str _52933_ident) {
	return _1e0e1cec4_find_trait((*_self_)._field_s.ptr(), _52933_ident);
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0ded24b_find_enum(_1e0debe4d_ScopeChecker* _self_, jule::Str _53832_ident) {
	return _1e0e1d2d2_find_enum((*_self_)._field_s.ptr(), _53832_ident);
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0ded559_find_type_enum(_1e0debe4d_ScopeChecker* _self_, jule::Str _54737_ident) {
	return _1e0e1d5e0_find_type_enum((*_self_)._field_s.ptr(), _54737_ident);
}



inline jule::Bool _1e0ded889_is_unsafe(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _55517_scope = _self_;;
	_julec_label_iter:;
	if (_55517_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	};
	if ((_55517_scope.get()._field_parent != nullptr)) {
		_55517_scope=_55517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e0dedaed_is_root(_1e0debe4d_ScopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));
}



inline void _1e0dedcc9_stop(_1e0debe4d_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1e0dee03d_stopped(_1e0debe4d_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1e0dee2a2_is_deferred(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _58817_scope = _self_;;
	_julec_label_iter:;
	if (_58817_scope.get()._field_scope.get()._field_deferred) {
		return true;
	};
	if ((_58817_scope.get()._field_parent != nullptr)) {
		_58817_scope=_58817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0dee516_get_root(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _60617_root = _self_;;
	while (((_60617_root.get()._field_parent != nullptr) && (_60617_root.get()._field_owner == nullptr))) {
		{
			_60617_root=_60617_root.get()._field_parent;
		}
	_iter_next_1ab3b3cb8:;
	}
	_iter_end_1ab3b3cb8:;;
	return _60617_root;
}



inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0dee77a_get_hard_root(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _61617_root = _self_;;
	while ((_61617_root.get()._field_parent != nullptr)) {
		{
			_61617_root=_61617_root.get()._field_parent;
		}
	_iter_next_1ab3b4d52:;
	}
	_iter_end_1ab3b4d52:;;
	return _61617_root;
}



inline jule::Ptr<_1e0dea600_Label> _1e0deea88_find_label(_1e0debe4d_ScopeChecker* _self_, jule::Str _62629_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ab3b5d20:;
		if (it != expr.end()) {
			jule::Any _62721_st = *it;
			{
				{
					auto &_match_expr{ _62721_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e0dea600_Label>>()) {
						_case_begin_1ab3b65a1:;
						{
							jule::Ptr<_1e0dea600_Label> _63025_label = _62721_st.operator jule::Ptr<_1e0dea600_Label>();;
							if ((_63025_label.get()._field_ident == _62629_ident)) {
								return _63025_label;
							};
						}
					}
					_match_end_1ab3b654b:;
				};
			}
			_iter_next_1ab3b5d20:;
			++it;
			goto _iter_begin_1ab3b5d20;
		}
		_iter_end_1ab3b5d20:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0deed96_find_label_scope(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Str _64236_ident) {
	jule::Ptr<_1e0deba74_ScopeLabel> _64317_label = _1e0e001a4_find_label_all(_self_.ptr(), _64236_ident);;
	if (((_64317_label != nullptr) && (_64317_label.get()._field_scope == _self_))) {
		return _64317_label;
	};
	return nullptr;
}



inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0e001a4_find_label_all(_1e0debe4d_ScopeChecker* _self_, jule::Str _65433_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1ab3b897c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deba74_ScopeLabel> _65521_lbl = *it;
			{
				if ((_65521_lbl.get()._field_label.get()._field_ident == _65433_ident)) {
					return _65521_lbl;
				};
			}
			_iter_next_1ab3b897c:;
			++it;
			goto _iter_begin_1ab3b897c;
		}
		_iter_end_1ab3b897c:;
	};
	return nullptr;
}



inline jule::Bool _1e0e0055b_is_duplicated_ident(_1e0debe4d_ScopeChecker* _self_, jule::Uintptr _66638_itself, jule::Str _66655_ident) {
	jule::Ptr<_1e0e366e6_Var> _66713_v = _1e0dec13a_find_var(&(*_self_), _66655_ident,false);;
	if (((_66713_v != nullptr) && (static_cast<jule::Uintptr>(_66713_v) != _66638_itself))) {
		if ((_66713_v.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_66713_v.get()._field_scope == (*_self_)._field_scope) || (!(_1e0e1d9b9_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I32>(1LL)))));
	};
	jule::Ptr<_1ed77ae84_TypeAlias> _67513_ta = _1e0dec3c1_find_type_alias(&(*_self_), _66655_ident,false);;
	if (((_67513_ta != nullptr) && (static_cast<jule::Uintptr>(_67513_ta) != _66638_itself))) {
		if ((_67513_ta.get()._field_scope == nullptr)) {
			return false;
		};
		return ((_67513_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1e0e1d9b9_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I32>(1LL)))));
	};
	return false;
}



inline void _1e0e007d1_check_var_decl(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0135dd0_VarDecl> _68638_decl) {
	jule::Ptr<_1e0e366e6_Var> _68717_v = _1e014cc82_build_var(_68638_decl);;
	_68717_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_68717_v);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_68717_v));;
	});;
	if (_1e0e0055b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_68717_v)),_68717_v.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _68717_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_68717_v.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e0dedcc9_stop(_self_.ptr());
		return;;
	};
	_1e0e2ac29_check_var_decl(_self_.get()._field_s, _68717_v,jule::Trait<_1ed7974de_Lookup>(_self_, 0));
	if (((!(_1e0e36d12_is_type_inferred(_68717_v.ptr()))) && ((_68717_v.get()._field_kind == nullptr) || (_68717_v.get()._field_kind.get()._field_kind == nullptr)))) {
		return;;
	};
	_1e0e2e39d_check_type_var(_self_.get()._field_s, _68717_v,jule::Trait<_1ed7974de_Lookup>(_self_, 0));
}



inline void _1e0e00a56_check_type_alias_decl(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0139653_TypeAliasDecl> _71045_decl) {
	jule::Ptr<_1ed77ae84_TypeAlias> _71117_ta = _1e0149d6c_build_type_alias(_71045_decl);;
	if (_1e0e0055b_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71117_ta)),_71117_ta.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _71117_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_71117_ta.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1e0dedcc9_stop(_self_.ptr());
		return;;
	};
	_1e0e268e5_check_type_alias_decl(_self_.get()._field_s, _71117_ta,jule::Trait<_1ed7974de_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_71117_ta);;
	if ((_71117_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1e0dedcc9_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e00cba_get_child(_1e0debe4d_ScopeChecker* _self_) {
	return jule::new_ptr<_1e0dd6322_Scope>(_1e0dd6322_Scope{._field_parent=(*_self_)._field_scope, });
}



inline void _1e0e01183_check_child_ssc(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013340a_ScopeTree>& _73440_tree, jule::Ptr<_1e0dd6322_Scope>& _73463_s, jule::Ptr<_1e0debe4d_ScopeChecker>& _73479_ssc) {
	_73479_ssc.get()._field_parent=_self_;
	_1e0e0b732_check(_73479_ssc, _73440_tree,_73463_s);
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e0153a_check_child_sc(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013340a_ScopeTree>& _73939_tree, jule::Ptr<_1e0debe4d_ScopeChecker>& _73962_ssc) {
	jule::Ptr<_1e0dd6322_Scope> _74017_s = _1e0e00cba_get_child(_self_.ptr());;
	_1e0e01183_check_child_ssc(_self_, _73939_tree,_74017_s,_73962_ssc);
	return _74017_s;
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e01848_check_child(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013340a_ScopeTree>& _74536_tree) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _74617_ssc = _1e0e0b996_new_child_checker(_self_);;
	return _1e0e0153a_check_child_sc(_self_, _74536_tree,_74617_ssc);
}



inline void _1e0e01abd_check_anon_scope(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013340a_ScopeTree> _75040_tree) {
	jule::Ptr<_1e0dd6322_Scope> _75117_s = _1e0e01848_check_child(_self_, _75040_tree);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_75117_s));;
}



inline void _1e0e01ddc_process_error_call(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>& _75543_m, jule::Ptr<_1dd9941e0_Token> _75574_err) {
	if (_1e0dee2a2_is_deferred(_self_)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _75574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _76017_root = _1e0dee516_get_root(_self_);;
	if ((!(_76017_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _75574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_75543_m.get()._field_func=_76017_root.get()._field_owner;
}



inline void _1e0e02162_check_expr(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0128b3c_Expr> _76834_expr) {
	jule::Ptr<_1e0e7ea19_Eval> _76917_eval = _1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0));;
	_76917_eval.get()._field_ignored=true;
	jule::Ptr<_1e0e7ce9b_Data> _77117_d = _1e0e99cdc_eval_expr(_76917_eval, _76834_expr);;
	if ((_77117_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77117_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ab3d0dc3:;
			{
				jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel> _77821_m = _77117_d.get()._field_model.operator jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>();;
				_1e0e01ddc_process_error_call(_self_, _77821_m,_76834_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_77117_d));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ccd_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142dba_BuiltinCopyCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0143eba_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1ab3d10c1:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_77117_d));;
			}
		}
		else {
			_case_begin_1ab3d1049:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _76834_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab3d0ee4:;
	};
}



inline void _1e0e023d7_check_co_expr(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e012a369_CoExpr> _79737_expr) {
	jule::Ptr<_1e0e7ea19_Eval> _79817_eval = _1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0));;
	_79817_eval.get()._field_ignored=true;
	jule::Ptr<_1e0e7ce9b_Data> _80017_d = _1e0e99cdc_eval_expr(_79817_eval, _79737_expr.get()._field_expr);;
	if ((_80017_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _80017_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1ab3d7292:;
			{
				jule::Ptr<_1e013ee50_FnCallExprModel> _80721_model = _80017_d.get()._field_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>();;
				if (_80721_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _79737_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				};
				_80721_model.get()._field_is_co=true;
				_1e0e91b80_check_fn_of_concurrent_call(_79817_eval.ptr(), _80721_model.get()._field_func,_79737_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_80017_d));;
			}
		}
		else {
			_case_begin_1ab3d65c1:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _79737_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab3d6329:;
	};
}



inline jule::Ptr<_1e0ddcc41_If> _1e0e026e5_check_if(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0138652_If> _82132_i) {
	jule::Ptr<_1e0dd6322_Scope> _82217_s = _1e0e01848_check_child(_self_, _82132_i.get()._field_scope);;
	jule::Ptr<_1e0e7ce9b_Data> _82417_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _82132_i.get()._field_expr);;
	if ((_82417_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ed781693_Prim> _82917_prim = _1ed77dc89_prim(_82417_d.get()._field_kind.ptr());;
	if (((_82917_prim == nullptr) || (!(_1ed7843dd_is_bool(_82917_prim.ptr()))))) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _82132_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e0ddcc41_If>(_1e0ddcc41_If{._field_expr=jule::Any(_82417_d.get()._field_model), ._field_scope=_82217_s});
}



inline jule::Ptr<_1e0d877bd_Else> _1e0e02a03_check_else(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0138a09_Else> _84134_e) {
	return jule::new_ptr<_1e0d877bd_Else>(_1e0d877bd_Else{._field_scope=_1e0e01848_check_child(_self_, _84134_e.get()._field_scope)});
}



inline void _1e0e02c78_check_conditional(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0138e7c_Conditional> _84741_conditional) {
	jule::Ptr<_1e0d879aa_Conditional> _84817_c = jule::new_ptr<_1e0d879aa_Conditional>(_1e0d879aa_Conditional{});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84817_c));;
	_84817_c.get()._field_elifs=jule::Slice<jule::Ptr<_1e0ddcc41_If>>::alloc(0LL,(_84741_conditional.get()._field_tail.len() + 1LL));
	_84817_c.get()._field_elifs = jule::alloc_for_append(_84817_c.get()._field_elifs,1);_84817_c.get()._field_elifs.__push(_1e0e026e5_check_if(_self_, _84741_conditional.get()._field_head));;
	{
		auto &expr = _84741_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1ab3debc3:;
		if (it != expr.end()) {
			jule::Ptr<_1e0138652_If> _85421_elif = *it;
			{
				_84817_c.get()._field_elifs = jule::alloc_for_append(_84817_c.get()._field_elifs,1);_84817_c.get()._field_elifs.__push(_1e0e026e5_check_if(_self_, _85421_elif));;
			}
			_iter_next_1ab3debc3:;
			++it;
			goto _iter_begin_1ab3debc3;
		}
		_iter_end_1ab3debc3:;
	};
	if ((_84741_conditional.get()._field_default != nullptr)) {
		_84817_c.get()._field_default=_1e0e02a03_check_else(_self_, _84741_conditional.get()._field_default);
	};
}



inline void _1e0e031da_check_iter_scope_ssc(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Uintptr _86340_it, jule::Ptr<_1e013340a_ScopeTree> _86357_tree, jule::Ptr<_1e0dd6322_Scope>& _86380_s, jule::Ptr<_1e0debe4d_ScopeChecker> _86395_ssc) {
	_86395_ssc.get()._field_it=_86340_it;
	_1e0e01183_check_child_ssc(_self_, _86357_tree,_86380_s,_86395_ssc);
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e0363b_check_iter_scope_sc(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Uintptr _86839_it, jule::Ptr<_1e013340a_ScopeTree> _86856_tree, jule::Ptr<_1e0debe4d_ScopeChecker> _86878_ssc) {
	jule::Ptr<_1e0dd6322_Scope> _86917_scope = _1e0e00cba_get_child(_self_.ptr());;
	_1e0e031da_check_iter_scope_ssc(_self_, _86839_it,_86856_tree,_86917_scope,_86878_ssc);
	return _86917_scope;
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e039e3_check_iter_scope(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Uintptr _87436_it, jule::Ptr<_1e013340a_ScopeTree>& _87454_tree) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _87517_ssc = _1e0e0b996_new_child_checker(_self_);;
	return _1e0e0363b_check_iter_scope_sc(_self_, _87436_it,_87454_tree,_87517_ssc);
}



inline void _1e0e03c68_check_inf_iter(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0136809_Iter>& _87939_it) {
	jule::Ptr<_1e0d985ae_InfIter> _88017_kind = jule::new_ptr<_1e0d985ae_InfIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_88017_kind));;
	_88017_kind.get()._field_scope=_1e0e039e3_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88017_kind)),_87939_it.get()._field_scope);
}



inline void _1e0e03edd_check_while_iter(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0136809_Iter>& _88541_it) {
	jule::Ptr<_1e01370ce_WhileKind> _88617_wh = _88541_it.get()._field_kind.operator jule::Ptr<_1e01370ce_WhileKind>();;
	if (((_88617_wh.get()._field_expr == nullptr) && (_88617_wh.get()._field_next == nullptr))) {
		_1e0e03c68_check_inf_iter(_self_, _88541_it);
		return;;
	};
	jule::Ptr<_1e0d9879b_WhileIter> _89217_kind = jule::new_ptr<_1e0d9879b_WhileIter>();;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_89217_kind));;
	_89217_kind.get()._field_scope=_1e0e039e3_check_iter_scope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89217_kind)),_88541_it.get()._field_scope);
	if ((_88617_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1e0e7ce9b_Data> _89721_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _88617_wh.get()._field_expr);;
		if ((_89721_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ed781693_Prim> _90217_prim = _1ed77dc89_prim(_89721_d.get()._field_kind.ptr());;
		if ((_90217_prim == nullptr)) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _88541_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ed7843dd_is_bool(_90217_prim.ptr())))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _88541_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_89217_kind.get()._field_expr=jule::Any(_89721_d.get()._field_model);
	};
	if (_1e0137431_is_while_next(_88617_wh.ptr())) {
		if ((!(_1e0dc42dd_is_valid_ast_st_for_next_st(_88617_wh.get()._field_next)))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _88617_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _92217_n = _self_.get()._field_scope.get()._field_stmts.len();;
		_1e0e0a4cd_check_node(_self_, _88617_wh.get()._field_next);
		if ((_92217_n < _self_.get()._field_scope.get()._field_stmts.len())) {
			jule::Any _92525_st = _self_.get()._field_scope.get()._field_stmts[_92217_n];;
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_92217_n);
			if ((!(_1e0dc4e26_is_valid_st_for_next_st(_92525_st)))) {
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _88617_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_89217_kind.get()._field_next=jule::Any(_92525_st);
		};
	};
}



inline void _1e0e04263_check_range_iter(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0136809_Iter>& _93641_it) {
	jule::Ptr<_1e0137970_RangeKind> _93717_rang = _93641_it.get()._field_kind.operator jule::Ptr<_1e0137970_RangeKind>();;
	jule::Ptr<_1e0e7ce9b_Data> _93917_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _93717_rang.get()._field_expr);;
	if ((_93917_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1e0dc6664_RangeIter> _94417_kind = jule::new_ptr<_1e0dc6664_RangeIter>(_1e0dc6664_RangeIter{._field_expr=_93917_d, });;
	_1e0e740d5_RangeChecker _94817_rc = _1e0e740d5_RangeChecker{._field_sc=_self_, ._field_rang=_93717_rang, ._field_kind=_94417_kind, ._field_d=_93917_d};;
	jule::Bool _95413_ok = _1e0e759cc_check(&_94817_rc);;
	if ((!(_95413_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_94417_kind));;
	jule::Ptr<_1e0debe4d_ScopeChecker> _96117_ssc = _1e0e0b996_new_child_checker(_self_);;
	jule::Ptr<_1e0dd6322_Scope> _96217_scope = _1e0e00cba_get_child(_self_.ptr());;
	if ((_94417_kind.get()._field_key_a != nullptr)) {
		if (((!(_1e0e1d9b9_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1e0e0055b_is_duplicated_ident(_self_.ptr(), 0LLU,_94417_kind.get()._field_key_a.get()._field_ident))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _94417_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_94417_kind.get()._field_key_a.get()._field_ident)}));
			_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_94417_kind.get()._field_key_a.get()._field_scope=_96217_scope;
		_96117_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_96117_ssc.get()._field_table.get()._field_vars,1);_96117_ssc.get()._field_table.get()._field_vars.__push(_94417_kind.get()._field_key_a);;
	};
	if ((_94417_kind.get()._field_key_b != nullptr)) {
		if (((!(_1e0e1d9b9_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1e0e0055b_is_duplicated_ident(_self_.ptr(), 0LLU,_94417_kind.get()._field_key_b.get()._field_ident))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _94417_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_94417_kind.get()._field_key_b.get()._field_ident)}));
			_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_94417_kind.get()._field_key_b.get()._field_scope=_96217_scope;
		_96117_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_96117_ssc.get()._field_table.get()._field_vars,1);_96117_ssc.get()._field_table.get()._field_vars.__push(_94417_kind.get()._field_key_b);;
	};
	_1e0e031da_check_iter_scope_ssc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_94417_kind)),_93641_it.get()._field_scope,_96217_scope,_96117_ssc);
	_94417_kind.get()._field_scope=_96217_scope;
}



inline void _1e0e044d8_check_iter(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0136809_Iter> _98634_it) {
	if (_1e0136b5b_is_inf(_98634_it.ptr())) {
		_1e0e03c68_check_inf_iter(_self_, _98634_it);
		return;;
	};
	{
		auto &_match_expr{ _98634_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e01370ce_WhileKind>>()) {
			_case_begin_1acc84830:;
			{
				_1e0e03edd_check_while_iter(_self_, _98634_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0137970_RangeKind>>()) {
			_case_begin_1acc85644:;
			{
				_1e0e04263_check_range_iter(_self_, _98634_it);
			}
		}
		else {
			_case_begin_1acc84e3a:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1acc84dd5:;
	};
}



inline jule::Bool _1e0e047e6_check_valid_cont_label(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Uintptr _100242_it) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _100317_scope = _self_;;
	_julec_label_iter:;
	if ((_100317_scope.get()._field_it == _100242_it)) {
		return true;
	};
	if ((_100317_scope.get()._field_parent != nullptr)) {
		_100317_scope=_100317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Bool _1e0e04b26_check_valid_break_label(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Uintptr _101843_ptr) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _101917_scope = _self_;;
	_julec_label_iter:;
	if ((_101917_scope.get()._field_it == _101843_ptr)) {
		return true;
	};
	if ((_101917_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _102717_mtch = static_cast<jule::Uintptr>(((_1e0deb4ad_Case*)(_101917_scope.get()._field_cse))->_field_owner);;
		if ((_102717_mtch == _101843_ptr)) {
			return true;
		};
	};
	if ((_101917_scope.get()._field_parent != nullptr)) {
		_101917_scope=_101917_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;
}



inline jule::Ptr<_1e0dc6851_ContSt> _1e0e04e45_check_cont_valid_scope(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e01381ce_ContSt> _104142_c) {
	if (_1e0dee2a2_is_deferred(_self_)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _104142_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_104142_c.get()._field_label != nullptr)) {
		return jule::new_ptr<_1e0dc6851_ContSt>();
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _105117_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_105117_scope.get()._field_it == 0LLU) && (_105117_scope.get()._field_parent != nullptr)) && (_105117_scope.get()._field_owner == nullptr))) {
			_case_begin_1acc8c805:;
			{
				_105117_scope=_105117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_105117_scope.get()._field_it != 0LLU)) {
			_case_begin_1acc8c87c:;
			{
				return jule::new_ptr<_1e0dc6851_ContSt>(_1e0dc6851_ContSt{._field_it=_105117_scope.get()._field_it});
			}
		}
		_match_end_1acc8c74a:;
	};
	_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _104142_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e0e051ba_check_cont(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e01381ce_ContSt> _106530_c) {
	jule::Ptr<_1e0dc6851_ContSt> _106617_cont = _1e0e04e45_check_cont_valid_scope(_self_, _106530_c);;
	if ((_106617_cont == nullptr)) {
		return;;
	};
	if ((_106530_c.get()._field_label != nullptr)) {
		jule::Ptr<_1e0deba74_ScopeLabel> _107221_label = _1e0db49e8_find_label_parent(_106530_c.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
		if ((_107221_label == nullptr)) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _106530_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_106530_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		_107221_label.get()._field_used=true;
		if (((_107221_label.get()._field_pos + 1LL) >= _107221_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _106530_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_106530_c.get()._field_label.get()._field_kind)}));
			return;;
		};
		jule::I32 _108517_i = (_107221_label.get()._field_pos + 1LL);;
		if ((_108517_i >= _107221_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _106530_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108925_st = _107221_label.get()._field_scope.get()._field_scope.get()._field_stmts[_108517_i];;
			{
				auto &_match_expr{ _108925_st };
				
				if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
					_case_begin_1acc94b92:;
					{
						_106617_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108925_st.operator jule::Ptr<_1e0d985ae_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
					_case_begin_1acc9649b:;
					{
						_106617_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108925_st.operator jule::Ptr<_1e0dc6664_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
					_case_begin_1acc96512:;
					{
						_106617_cont.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108925_st.operator jule::Ptr<_1e0d9879b_WhileIter>()));
					}
				}
				else {
					_case_begin_1acc96325:;
					{
						_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _106530_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_106530_c.get()._field_label.get()._field_kind)}));
					}
				}
				_match_end_1acc962c0:;
			};
		};
	};
	if ((_106617_cont.get()._field_it != 0LLU)) {
		if ((!(_1e0e047e6_check_valid_cont_label(_self_, _106617_cont.get()._field_it)))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _106530_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_106530_c.get()._field_label.get()._field_kind)}));
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_106617_cont));;
}



inline void _1e0e05440_check_label(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0131a13_LabelSt> _111235_l) {
	if ((_1e0deea88_find_label(_self_.ptr(), _111235_l.get()._field_ident) != nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _111235_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_111235_l.get()._field_ident)}));
		return;;
	};
	jule::Ptr<_1e0dea600_Label> _111817_label = jule::new_ptr<_1e0dea600_Label>(_1e0dea600_Label{._field_ident=_111235_l.get()._field_ident});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_111817_label));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e0deba74_ScopeLabel>>::make({jule::new_ptr<_1e0deba74_ScopeLabel>(_1e0deba74_ScopeLabel{._field_token=_111235_l.get()._field_token, ._field_label=_111817_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1e0e056b5_push_goto(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0131dba_GotoSt> _113133_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e0dea7dc_GotoSt>(_1e0dea7dc_GotoSt{._field_ident=_113133_gt.get()._field_label.get()._field_kind})));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e0debc61_ScopeGoto>>::make({jule::new_ptr<_1e0debc61_ScopeGoto>(_1e0debc61_ScopeGoto{._field_gt=_113133_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_stmts.len() - 1LL))})}));
}



inline void _1e0e0593a_check_postfix(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0132d00_AssignSt> _114337_a) {
	if ((_114337_a.get()._field_left.len() > 1LL)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _114337_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e0128b3c_Expr> _114917_expr = _114337_a.get()._field_left[0LL].get()._field_expr;;
	jule::Ptr<_1e0e7ce9b_Data> _115017_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _114917_expr);;
	if ((_115017_d == nullptr)) {
		return;;
	};
	_1e0dc3aa1_check_assign(_self_.get()._field_s,_115017_d,nullptr,_114337_a.get()._field_setter);
	if ((_1ed77e262_ptr(_115017_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ed788216_Ptr> _115821_ptr = _1ed77e262_ptr(_115017_d.get()._field_kind.ptr());;
		if (_1ed788bd9_is_unsafe(_115821_ptr.ptr())) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _114337_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_114337_a.get()._field_setter.get()._field_kind),jule::Any(_1ed77c073_to_str(_115017_d.get()._field_kind.ptr()))}));
			return;;
		};
	} else {
		if (((_1ed77dc89_prim(_115017_d.get()._field_kind.ptr()) == nullptr) || (!(_1e0dea039_is_num(_1ed77dc89_prim(_115017_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _114337_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_114337_a.get()._field_setter.get()._field_kind),jule::Any(_1ed77c073_to_str(_115017_d.get()._field_kind.ptr()))}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e0dea9c9_Postfix>(_1e0dea9c9_Postfix{._field_expr=jule::Any(_115017_d.get()._field_model), ._field_op=_114337_a.get()._field_setter.get()._field_kind})));;
}



inline jule::Bool _1e0e05c48_is_new_assign_ident(_1e0debe4d_ScopeChecker* _self_, jule::Str _117638_ident) {
	if ((_1dd996940_is_ignore_ident(_117638_ident) || _117638_ident.empty())) {
		return false;
	};
	return (_1e0e7b098_def_by_ident((*_self_)._field_table.ptr(), _117638_ident,false) == nullptr);
}



inline jule::Bool _1e0e061bb_check_structure_assign_op(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e010a05d_StructIns>& _118450_s, jule::Ptr<_1e0132d00_AssignSt>& _118470_a, jule::Ptr<_1e0e7ce9b_Data>& _118489_r) {
	jule::Ptr<_1e01457c4_FnIns> _118717_overload = nullptr;;
	{
		auto &_match_expr{ _118470_a.get()._field_setter.get()._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1accaaa10:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1accaaa76:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1accaaadc:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1acca9833:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1acca9899:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1acca9910:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1acca9976:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1accaacda:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1accaad51:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1accaadb7:;
			{
				_118717_overload=_118450_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1acca937c:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _118470_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_118470_a.get()._field_setter.get()._field_kind),jule::Any(_1e00eb03d_to_str(_118450_s.ptr()))}));
				return false;
			}
		}
		_match_end_1acca97ab:;
	};
	if ((_118717_overload == nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _118470_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_118470_a.get()._field_setter.get()._field_kind),jule::Any(_1e00eb03d_to_str(_118450_s.ptr()))}));
		return false;
	};
	jule::Ptr<_1e0144938_ParamIns> _121917_p = _118717_overload.get()._field_params[1LL];;
	return _1e0e24409_check_assign_type(_self_.get()._field_s, _121917_p.get()._field_decl.get()._field_reference,_121917_p.get()._field_kind,_118489_r,_118470_a.get()._field_setter);
}



inline void _1e0e06452_check_single_assign(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0132d00_AssignSt>& _122344_a) {
	jule::Ptr<_1e0e7ce9b_Data> _122417_l = nullptr;;
	if ((!(_1dd996940_is_ignore_ident(_122344_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1e0128b3c_Expr> _122721_expr = _122344_a.get()._field_left[0LL].get()._field_expr;;
		_122417_l=_1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _122721_expr);
		if ((_122417_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e0e7ea19_Eval> _123417_eval = nullptr;;
	if ((_122417_l != nullptr)) {
		_123417_eval=_1e0e23b01_evalp(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0),_122417_l.get()._field_kind);
	} else {
		_123417_eval=_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0));
	};
	_123417_eval.get()._field_unsafety=_1e0ded889_is_unsafe(_self_);
	jule::Ptr<_1e0e7ce9b_Data> _124117_r = _1e0e99cdc_eval_expr(_123417_eval, _122344_a.get()._field_right);;
	if ((_124117_r == nullptr)) {
		return;;
	};
	if ((_122417_l == nullptr)) {
		if (_1ed77cd10_void(_124117_r.get()._field_kind.ptr())) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _122344_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_124117_r));;
		return;;
	};
	if ((!(_1e0dc3aa1_check_assign(_self_.get()._field_s,_122417_l,_124117_r,_122344_a.get()._field_setter)))) {
		return;;
	};
	if ((_1ed780928_tup(_124117_r.get()._field_kind.ptr()) != nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _122344_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e0116dc2_OperandExprModel> _126317_lm = jule::new_ptr<_1e0116dc2_OperandExprModel>(_1e0116dc2_OperandExprModel{._field_kind=_122417_l.get()._field_kind, ._field_model=jule::Any(_122417_l.get()._field_model)});;
	jule::Ptr<_1e0116dc2_OperandExprModel> _126717_rm = jule::new_ptr<_1e0116dc2_OperandExprModel>(_1e0116dc2_OperandExprModel{._field_kind=_124117_r.get()._field_kind, ._field_model=jule::Any(_124117_r.get()._field_model)});;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e0deabb6_Assign>(_1e0deabb6_Assign{._field_l=_126317_lm, ._field_r=_126717_rm, ._field_op=_122344_a.get()._field_setter})));;
	if ((_122344_a.get()._field_setter.get()._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1e010a05d_StructIns> _127421_strct = _1ed7801db_strct(_122417_l.get()._field_kind.ptr());;
		if ((_127421_strct != nullptr)) {
			_1e0e061bb_check_structure_assign_op(_self_, _127421_strct,_122344_a,_124117_r);
			return;;
		};
		_122344_a.get()._field_setter.get()._field_kind=_122344_a.get()._field_setter.get()._field_kind.slice(0LL,(_122344_a.get()._field_setter.get()._field_kind.len() - 1LL));
		_1e0e9beed_BinaryEval _128121_solver = static__1e0e9c905_new(_123417_eval,_122344_a.get()._field_setter);;
		_124117_r=_1ed77604a_solve_explicit(&_128121_solver, _122417_l,_124117_r);
		if ((_124117_r == nullptr)) {
			return;;
		};
		_122344_a.get()._field_setter.get()._field_kind+=jule::Str("=", 1);
		return;;
	};
	_1e0e6a4d8_AssignTypeChecker _129017_checker = _1e0e6a4d8_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_122417_l.get()._field_kind, ._field_d=_124117_r, ._field_error_token=_122344_a.get()._field_setter};;
	if (_1e0e6b660_check(&_129017_checker)) {
		_126717_rm.get()._field_model=jule::Any(_124117_r.get()._field_model);
		_126317_lm.get()._field_model=jule::Any(_122417_l.get()._field_model);
	};
}



inline void _1e0e06991___process_end_part_of_multi_assign(_1e0debe4d_ScopeChecker* _self_, jule::Ptr<_1e0deada3_MultiAssign> _130257_st, jule::Ptr<_1e0132d00_AssignSt> _130313_a, jule::Ptr<_1e01327b1_AssignLeft> _130331_lexpr, jule::Ptr<_1e0e7ce9b_Data> _130355_l, jule::Ptr<_1e0e7ce9b_Data> _130369_r) {
	if (_1dd996940_is_ignore_ident(_130331_lexpr.get()._field_ident)) {
		if (_1ed77cd10_void(_130369_r.get()._field_kind.ptr())) {
			_1e0e1e107_push_err((*_self_)._field_s.ptr(), _130313_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_130257_st.get()._field_l = jule::alloc_for_append(_130257_st.get()._field_l,1);_130257_st.get()._field_l.__push(nullptr);;
		return;;
	};
	if ((_130313_a.get()._field_declarative && _1e0e05c48_is_new_assign_ident(&(*_self_), _130331_lexpr.get()._field_ident))) {
		if (_1e0e0055b_is_duplicated_ident(&(*_self_), 0LLU,_130331_lexpr.get()._field_ident)) {
			_1e0e1e107_push_err((*_self_)._field_s.ptr(), _130331_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_130331_lexpr.get()._field_ident)}));
			_1e0e1e426_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1e0dedcc9_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1e0e366e6_Var> _132121_v = jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_scope=(*_self_)._field_scope, ._field_token=_130331_lexpr.get()._field_token, ._field_ident=_130331_lexpr.get()._field_ident, ._field_mutable=_130331_lexpr.get()._field_mutable, ._field_reference=_130331_lexpr.get()._field_reference, ._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_expr=_130313_a.get()._field_right, ._field_data=_130369_r}), });;
		_1e0e2e07e_check_var((*_self_)._field_s, _132121_v);
		_130257_st.get()._field_l = jule::alloc_for_append(_130257_st.get()._field_l,1);_130257_st.get()._field_l.__push(jule::Any(_132121_v));;
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_132121_v);;
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_132121_v));;
		return;;
	};
	if ((_130331_lexpr.get()._field_mutable || _130331_lexpr.get()._field_reference)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _130331_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_130331_lexpr.get()._field_ident)}));
		_1e0e1e426_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1e0dc3aa1_check_assign((*_self_)._field_s,_130355_l,_130369_r,_130313_a.get()._field_setter)))) {
		return;;
	};
	;
	_1e0e2620d_check_validity_for_init_expr((*_self_)._field_s, _130355_l.get()._field_mutable,false,_130355_l.get()._field_kind,_130369_r,_130313_a.get()._field_setter);
	_1e0e6a4d8_AssignTypeChecker _135617_checker = _1e0e6a4d8_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_130355_l.get()._field_kind, ._field_d=_130369_r, ._field_error_token=_130313_a.get()._field_setter};;
	_1e0e6b660_check(&_135617_checker);
	_130257_st.get()._field_l = jule::alloc_for_append(_130257_st.get()._field_l,1);_130257_st.get()._field_l.__push(jule::Any(_130355_l.get()._field_model));;
}



inline void _1e0e06c16_check_ret_multi_assign(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0132d00_AssignSt>& _136747_a) {
	jule::Ptr<_1e0e7ce9b_Data> _136817_rd = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _136747_a.get()._field_right);;
	if ((_136817_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _137317_r = _1e0dba9ee_get_datas_from_tuple_data(_136817_rd);;
	{
		
		if ((_136747_a.get()._field_left.len() > _137317_r.len())) {
			_case_begin_1acb748eb:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _136747_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136747_a.get()._field_left.len() < _137317_r.len())) {
			_case_begin_1acb74973:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _136747_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1acb74885:;
	};
	jule::Ptr<_1e0deada3_MultiAssign> _138417_st = jule::new_ptr<_1e0deada3_MultiAssign>(_1e0deada3_MultiAssign{._field_r=jule::Any(_136817_rd.get()._field_model)});;
	if ((_1ed780928_tup(_136817_rd.get()._field_kind.ptr()) == nullptr)) {
		_138417_st.get()._field_r=jule::Any(jule::new_ptr<_1e0141b77_TupleExprModel>(_1e0141b77_TupleExprModel{._field_datas=_137317_r}));
	};
	{
		auto &expr = _136747_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1acb77c2e:;
		if (it != expr.end()) {
			jule::I32 _139213_i = it - expr.begin();
			{
				jule::Ptr<_1e01327b1_AssignLeft> _139321_lexpr = _136747_a.get()._field_left[_139213_i];;
				jule::Ptr<_1e0e7ce9b_Data> _139421_l = nullptr;;
				if (((!(_1dd996940_is_ignore_ident(_139321_lexpr.get()._field_ident))) && ((!(_136747_a.get()._field_declarative)) || (!(_1e0e05c48_is_new_assign_ident(_self_.ptr(), _139321_lexpr.get()._field_ident)))))) {
					_139421_l=_1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _139321_lexpr.get()._field_expr);
					if ((_139421_l == nullptr)) {
						goto _iter_next_1acb77c2e;
					};
				};
				_1e0e06991___process_end_part_of_multi_assign(_self_.ptr(), _138417_st,_136747_a,_139321_lexpr,_139421_l,_137317_r[_139213_i]);
			}
			_iter_next_1acb77c2e:;
			++it;
			_139213_i++;
			goto _iter_begin_1acb77c2e;
		}
		_iter_end_1acb77c2e:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_138417_st));;
}



inline void _1e0e06e8b_check_multi_assign(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0132d00_AssignSt>& _141043_a) {
	{
		auto &_match_expr{ _141043_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>()) {
			_case_begin_1acb7ba13:;
			{
				_1e0e06c16_check_ret_multi_assign(_self_, _141043_a);
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0129eb2_UnsafeExpr>>()) {
			_case_begin_1acb7ba79:;
			{
				{
					auto &_match_expr{ _141043_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1e0129eb2_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>()) {
						_case_begin_1acb7ce10:;
						{
							_1e0e06c16_check_ret_multi_assign(_self_, _141043_a);
							return;;
						}
					}
					_match_end_1acb7cd99:;
				};
			}
		}
		_match_end_1acb7b3e7:;
	};
	jule::Slice<jule::Any> _142317_right = _1e0dbb280_get_expr_models(_141043_a.get()._field_right.get()._field_kind);;
	{
		
		if ((_141043_a.get()._field_left.len() > _142317_right.len())) {
			_case_begin_1acb7db7a:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _141043_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_141043_a.get()._field_left.len() < _142317_right.len())) {
			_case_begin_1acb7dc02:;
			{
				_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _141043_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1acb7da9d:;
	};
	jule::Ptr<_1e0141b77_TupleExprModel> _143417_right_tuple = jule::new_ptr<_1e0141b77_TupleExprModel>();;
	jule::Ptr<_1e0deada3_MultiAssign> _143617_st = jule::new_ptr<_1e0deada3_MultiAssign>(_1e0deada3_MultiAssign{._field_r=jule::Any(_143417_right_tuple)});;
	{
		auto &expr = _141043_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1acb816e9:;
		if (it != expr.end()) {
			jule::I32 _144013_i = it - expr.begin();
			{
				jule::Ptr<_1e01327b1_AssignLeft> _144121_lexpr = _141043_a.get()._field_left[_144013_i];;
				jule::Ptr<_1e0e7ce9b_Data> _144221_l = nullptr;;
				if (((!(_1dd996940_is_ignore_ident(_144121_lexpr.get()._field_ident))) && ((!(_141043_a.get()._field_declarative)) || (!(_1e0e05c48_is_new_assign_ident(_self_.ptr(), _144121_lexpr.get()._field_ident)))))) {
					_144221_l=_1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _144121_lexpr.get()._field_expr);
					if ((_144221_l == nullptr)) {
						goto _iter_next_1acb816e9;
					};
				};
				jule::Ptr<_1e0128b3c_Expr> _145221_expr = jule::new_ptr<_1e0128b3c_Expr>(_1e0128b3c_Expr{._field_token=_141043_a.get()._field_right.get()._field_token, ._field_kind=jule::Any(_142317_right[_144013_i])});;
				jule::Ptr<_1e0e7ea19_Eval> _145621_eval = nullptr;;
				if ((_144221_l != nullptr)) {
					_145621_eval=_1e0e23b01_evalp(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0),_144221_l.get()._field_kind);
				} else {
					_145621_eval=_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0));
				};
				jule::Ptr<_1e0e7ce9b_Data> _146221_r = _1e0e99cdc_eval_expr(_145621_eval, _145221_expr);;
				if ((_146221_r == nullptr)) {
					goto _iter_next_1acb816e9;
				};
				_143417_right_tuple.get()._field_datas = jule::alloc_for_append(_143417_right_tuple.get()._field_datas,1);_143417_right_tuple.get()._field_datas.__push(_146221_r);;
				_1e0e06991___process_end_part_of_multi_assign(_self_.ptr(), _143617_st,_141043_a,_144121_lexpr,_144221_l,_146221_r);
			}
			_iter_next_1acb816e9:;
			++it;
			_144013_i++;
			goto _iter_begin_1acb816e9;
		}
		_iter_end_1acb816e9:;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_143617_st));;
}



inline void _1e0e07211_check_assign_st(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0132d00_AssignSt> _147539_a) {
	{
		
		if (_1dd998953_is_postfix_op(_147539_a.get()._field_setter.get()._field_kind)) {
			_case_begin_1acb88316:;
			{
				_1e0e0593a_check_postfix(_self_, _147539_a);
			}
		}
		else if (((_147539_a.get()._field_left.len() == 1LL) && (!(_147539_a.get()._field_declarative)))) {
			_case_begin_1acb88019:;
			{
				_1e0e06452_check_single_assign(_self_, _147539_a);
			}
		}
		else {
			_case_begin_1acb87964:;
			{
				_1e0e06e8b_check_multi_assign(_self_, _147539_a);
			}
		}
		_match_end_1acb87898:;
	};
}



inline jule::Ptr<_1e0dd6322_Scope> _1e0e075b8_check_case_scope(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0deb4ad_Case>& _148637_c, jule::Ptr<_1e013340a_ScopeTree>& _148652_tree) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _148717_ssc = _1e0e0b996_new_child_checker(_self_);;
	_148717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_148637_c));
	return _1e0e0153a_check_child_sc(_self_, _148652_tree,_148717_ssc);
}



inline jule::Ptr<_1e0deb4ad_Case> _1e0e07ab3_check_case(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0deb090_Match> _149234_m, jule::I32 _149245_i, jule::Ptr<_1e0139ac6_Case> _149257_c, jule::Ptr<_1e0e7ce9b_Data> _149276_expr) {
	jule::Ptr<_1e0deb4ad_Case> _149317__case = _149234_m.get()._field_cases[_149245_i];;
	_149317__case.get()._field_exprs=jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>::alloc(0LL,_149257_c.get()._field_exprs.len());
	jule::Bool _149517_generic_matched = false;;
	jule::Ptr<_1e0e7ea19_Eval> _149617_eval = _1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0));;
	{
		auto &expr = _149257_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1acb8d294:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _149721_e = *it;
			{
				jule::Ptr<_1e0e7ce9b_Data> _149821_d = _1e0e996c1_eval_expr_kind(_149617_eval, jule::Any(_149721_e.get()._field_kind));;
				if ((_149821_d == nullptr)) {
					goto _iter_next_1acb8d294;
				};
				if (_149234_m.get()._field_type_match) {
					_149317__case.get()._field_exprs = jule::alloc_for_append(_149317__case.get()._field_exprs,1);_149317__case.get()._field_exprs.__push(_149821_d);;
					if ((_1e0db85ce_count_match_type(_149234_m,_149821_d.get()._field_kind) > 1LL)) {
						_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _149721_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_149821_d.get()._field_kind.ptr()))}));
					};
					if (_149276_expr.get()._field_kind.get()._field_generic) {
						_149517_generic_matched=(_149517_generic_matched || _1ed77c381_equals(_149276_expr.get()._field_kind, _149821_d.get()._field_kind));
					} else {
						if ((_1ed77e73a_tenm(_149276_expr.get()._field_kind.ptr()) != nullptr)) {
							_1e0e2487c_check_type_compatibility(_self_.get()._field_s, _149276_expr.get()._field_kind,_149821_d.get()._field_kind,_149721_e.get()._field_token);
						} else {
							jule::Ptr<_1e0567d06_Trait> _151329_trt = _1ed780450_trt(_149276_expr.get()._field_kind.ptr());;
							if ((_151329_trt != nullptr)) {
								_1e0e2487c_check_type_compatibility(_self_.get()._field_s, _149276_expr.get()._field_kind,_149821_d.get()._field_kind,_149721_e.get()._field_token);
							};
						};
					};
					goto _iter_next_1acb8d294;
				};
				if (_149821_d.get()._field_decl) {
					_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _149721_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1acb8d294;
				};
				_149317__case.get()._field_exprs = jule::alloc_for_append(_149317__case.get()._field_exprs,1);_149317__case.get()._field_exprs.__push(_149821_d);;
				_1e0e6a4d8_AssignTypeChecker _153121_checker = _1e0e6a4d8_AssignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_149276_expr.get()._field_kind, ._field_d=_149821_d, ._field_error_token=_149721_e.get()._field_token};;
				_1e0e6b660_check(&_153121_checker);
			}
			_iter_next_1acb8d294:;
			++it;
			goto _iter_begin_1acb8d294;
		}
		_iter_end_1acb8d294:;
	};
	if ((((!(_149234_m.get()._field_type_match)) || (!(_149276_expr.get()._field_kind.get()._field_generic))) || _149517_generic_matched)) {
		_149317__case.get()._field_scope=_1e0e075b8_check_case_scope(_self_, _149317__case,_149257_c.get()._field_scope);
	};
	return _149317__case;
}



inline void _1e0e07e7b_check_cases(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013a29c_MatchCase>& _154536_m, jule::Ptr<_1e0deb090_Match> _154555_rm, jule::Ptr<_1e0e7ce9b_Data> _154571_expr) {
	_154555_rm.get()._field_cases=jule::Slice<jule::Ptr<_1e0deb4ad_Case>>::alloc(0LL,_154536_m.get()._field_cases.len());
	{
		auto &expr = _154536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1acb96e90:;
		if (it != expr.end()) {
			jule::I32 _154713_i = it - expr.begin();
			{
				jule::Ptr<_1e0deb4ad_Case> _154821__case = jule::new_ptr<_1e0deb4ad_Case>(_1e0deb4ad_Case{._field_owner=_154555_rm, });;
				if ((_154713_i > 0LL)) {
					_154555_rm.get()._field_cases[(_154713_i - 1LL)].get()._field_next=_154821__case;
				};
				_154555_rm.get()._field_cases = jule::alloc_for_append(_154555_rm.get()._field_cases,1);_154555_rm.get()._field_cases.__push(_154821__case);;
			}
			_iter_next_1acb96e90:;
			++it;
			_154713_i++;
			goto _iter_begin_1acb96e90;
		}
		_iter_end_1acb96e90:;
	};
	if (((_154555_rm.get()._field_default != nullptr) && (_154536_m.get()._field_cases.len() > 0LL))) {
		_154555_rm.get()._field_cases[(_154555_rm.get()._field_cases.len() - 1LL)].get()._field_next=_154555_rm.get()._field_default;
	};
	{
		auto &expr = _154536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1acb9a317:;
		if (it != expr.end()) {
			jule::I32 _156114_i = it - expr.begin();
			jule::Ptr<_1e0139ac6_Case> _156121_c = *it;
			{
				_1e0e07ab3_check_case(_self_, _154555_rm,_156114_i,_156121_c,_154571_expr);
			}
			_iter_next_1acb9a317:;
			++it;
			_156114_i++;
			goto _iter_begin_1acb9a317;
		}
		_iter_end_1acb9a317:;
	};
}



inline jule::Ptr<_1e0deb4ad_Case> _1e0e08333_check_default(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0deb090_Match> _156637_m, jule::Ptr<_1e0138a09_Else> _156652_d) {
	jule::Ptr<_1e0deb4ad_Case> _156717_def = jule::new_ptr<_1e0deb4ad_Case>(_1e0deb4ad_Case{._field_owner=_156637_m, });;
	_156717_def.get()._field_scope=_1e0e075b8_check_case_scope(_self_, _156717_def,_156652_d.get()._field_scope);
	return _156717_def;
}



inline void _1e0e085a8_check_comptime_panic(_1e0debe4d_ScopeChecker* _self_, jule::Ptr<_1e0dd6322_Scope>& _157440_s) {
	if ((_157440_s.get()._field_stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _157913_stmt = _157440_s.get()._field_stmts[0LL];;
	{
		auto &_match_expr{ _157913_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1acb9d419:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _158217_d = _157913_stmt.operator jule::Ptr<_1e0e7ce9b_Data>();;
				{
					auto &_match_expr{ _158217_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>()) {
						_case_begin_1acb9e20b:;
						{
							jule::Ptr<_1e0142617_BuiltinPanicCallExprModel> _158521_m = _158217_d.get()._field_model.operator jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ _158521_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
									_case_begin_1acba011e:;
									{
										jule::Ptr<_1e0d4da1a_Const> _158825_c = _158521_m.get()._field_expr.operator jule::Ptr<_1e0d4da1a_Const>();;
										if (_1e0d52cb6_is_str(_158825_c.ptr())) {
											_1e0e1e107_push_err((*_self_)._field_s.ptr(), (*_self_)._field_called_from,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1e0d5091d_read_str(_158825_c.ptr()))}));
										};
									}
								}
								_match_end_1acba0097:;
							};
						}
					}
					_match_end_1acb9e173:;
				};
			}
		}
		_match_end_1acb9d3b4:;
	};
}



inline void _1e0e088c7_push_type_match(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0deb090_Match> _159739_tm, jule::Ptr<_1e013a29c_MatchCase>& _159756_m) {
	if (_159739_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _159739_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1acba051a:;
			if (it != expr.end()) {
				jule::Ptr<_1e0deb4ad_Case> _160125_c = *it;
				{
					if ((_160125_c.get()._field_scope != nullptr)) {
						_1e0e085a8_check_comptime_panic(_self_.ptr(), _160125_c.get()._field_scope);
						_159739_tm.get()._field_default=_160125_c;
						_159739_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1acba051a:;
				++it;
				goto _iter_begin_1acba051a;
			}
			_iter_end_1acba051a:;
		};
		if ((_159756_m.get()._field_default != nullptr)) {
			_159739_tm.get()._field_cases=nullptr;
			_159739_tm.get()._field_default=_1e0e08333_check_default(_self_, _159739_tm,_159756_m.get()._field_default);
			if ((_159739_tm.get()._field_default != nullptr)) {
				_1e0e085a8_check_comptime_panic(_self_.ptr(), _159739_tm.get()._field_default.get()._field_scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_159739_tm));;
}



inline void _1e0e08b4c_check_type_match(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013a29c_MatchCase>& _162141_m) {
	jule::Ptr<_1e0e7ce9b_Data> _162217_d = _1e0e999ce_eval(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _162141_m.get()._field_expr);;
	if ((_162217_d == nullptr)) {
		return;;
	};
	if (((!(_162217_d.get()._field_kind.get()._field_generic)) && (!(((((_1ed77dc89_prim(_162217_d.get()._field_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim(_162217_d.get()._field_kind.ptr()).ptr())) || (_1ed780450_trt(_162217_d.get()._field_kind.ptr()) != nullptr)) || (_1ed77e73a_tenm(_162217_d.get()._field_kind.ptr()) != nullptr)))))) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _162141_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e0deb090_Match> _163317_tm = jule::new_ptr<_1e0deb090_Match>(_1e0deb090_Match{._field_expr=_162217_d, ._field_type_match=true, });;
	if (((!(_163317_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_162141_m.get()._field_default != nullptr))) {
		_163317_tm.get()._field_default=_1e0e08333_check_default(_self_, _163317_tm,_162141_m.get()._field_default);
	};
	_1e0e07e7b_check_cases(_self_, _162141_m,_163317_tm,_162217_d);
	_1e0e088c7_push_type_match(_self_, _163317_tm,_162141_m);
}



inline void _1e0e08dc2_check_common_match(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013a29c_MatchCase>& _164643_m) {
	jule::Ptr<_1e0e7ce9b_Data> _164717_d = nullptr;;
	if ((_164643_m.get()._field_expr == nullptr)) {
		_164717_d=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_constant=static__1e0d4e39a_new_bool(true)});
		_164717_d.get()._field_model=jule::Any(_164717_d.get()._field_constant);
	} else {
		_164717_d=_1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _164643_m.get()._field_expr);
		if ((_164717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1e0deb090_Match> _166117_mc = jule::new_ptr<_1e0deb090_Match>(_1e0deb090_Match{._field_expr=_164717_d, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_166117_mc));;
	if ((_164643_m.get()._field_default != nullptr)) {
		_166117_mc.get()._field_default=_1e0e08333_check_default(_self_, _166117_mc,_164643_m.get()._field_default);
	};
	_1e0e07e7b_check_cases(_self_, _164643_m,_166117_mc,_164717_d);
}



inline void _1e0e09147_check_match(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013a29c_MatchCase> _167335_m) {
	if (_167335_m.get()._field_type_match) {
		_1e0e08b4c_check_type_match(_self_, _167335_m);
		return;;
	};
	_1e0e08dc2_check_common_match(_self_, _167335_m);
}



inline void _1e0e093bc_check_fall(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e01321a6_FallSt> _168130_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_stmts.len())) || _1e0dee2a2_is_deferred(_self_))) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _168130_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1e0deb4ad_Case* _168917__case = ((_1e0deb4ad_Case*)(_self_.get()._field_cse));;
	if ((_168917__case->_field_next == nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _168130_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1e0deb69a_FallSt>(_1e0deb69a_FallSt{._field_dest_case=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168917__case->_field_next))})));;
}



inline jule::Ptr<_1e0dea413_BreakSt> _1e0e096ca_check_break_with_label(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0137d27_BreakSt> _170142_b) {
	jule::Ptr<_1e0dea413_BreakSt> _170217_brk = _1e0e099d8_check_plain_break(_self_, _170142_b);;
	if ((_170217_brk == nullptr)) {
		return nullptr;
	};
	_170217_brk.get()._field_it=0LLU;
	_170217_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1e0deba74_ScopeLabel> _171217_label = _1e0db49e8_find_label_parent(_170142_b.get()._field_label.get()._field_kind,_self_.get()._field_parent);;
	if ((_171217_label == nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	_171217_label.get()._field_used=true;
	if (((_171217_label.get()._field_pos + 1LL) >= _171217_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
		return nullptr;
	};
	jule::I32 _172513_i = (_171217_label.get()._field_pos + 1LL);;
	if ((_172513_i >= _171217_label.get()._field_scope.get()._field_scope.get()._field_stmts.len())) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
	} else {
		jule::Any _172921_st = _171217_label.get()._field_scope.get()._field_scope.get()._field_stmts[_172513_i];;
		{
			auto &_match_expr{ _172921_st };
			
			if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
				_case_begin_1acbbbc62:;
				{
					_170217_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.operator jule::Ptr<_1e0d985ae_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
				_case_begin_1acbbc526:;
				{
					_170217_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.operator jule::Ptr<_1e0dc6664_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
				_case_begin_1acbbc58c:;
				{
					_170217_brk.get()._field_it=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.operator jule::Ptr<_1e0d9879b_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
				_case_begin_1acbbc603:;
				{
					_170217_brk.get()._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_172921_st.operator jule::Ptr<_1e0deb090_Match>()));
				}
			}
			else {
				_case_begin_1acbbc3a0:;
				{
					_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
				}
			}
			_match_end_1acbbc34a:;
		};
	};
	if ((_170217_brk.get()._field_it != 0LLU)) {
		if ((!(_1e0e04b26_check_valid_break_label(_self_, _170217_brk.get()._field_it)))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
		};
	};
	if ((_170217_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1e0e04b26_check_valid_break_label(_self_, _170217_brk.get()._field_mtch)))) {
			_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _170142_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_170142_b.get()._field_label.get()._field_kind)}));
		};
	};
	return _170217_brk;
}



inline jule::Ptr<_1e0dea413_BreakSt> _1e0e099d8_check_plain_break(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0137d27_BreakSt> _175937_b) {
	if (_1e0dee2a2_is_deferred(_self_)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _175937_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _176517_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_176517_scope.get()._field_it == 0LLU) && (_176517_scope.get()._field_cse == 0LLU)) && (_176517_scope.get()._field_parent != nullptr)) && (_176517_scope.get()._field_owner == nullptr))) {
			_case_begin_1acbc3cd0:;
			{
				_176517_scope=_176517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_176517_scope.get()._field_it != 0LLU)) {
			_case_begin_1acbc3d57:;
			{
				return jule::new_ptr<_1e0dea413_BreakSt>(_1e0dea413_BreakSt{._field_it=_176517_scope.get()._field_it, });
			}
		}
		else if ((_176517_scope.get()._field_cse != 0LLU)) {
			_case_begin_1acbc3dce:;
			{
				return jule::new_ptr<_1e0dea413_BreakSt>(_1e0dea413_BreakSt{._field_mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1e0deb4ad_Case*)(_176517_scope.get()._field_cse))->_field_owner))});
			}
		}
		_match_end_1acbc3c03:;
	};
	_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _175937_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1e0e09c5d_check_break(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0137d27_BreakSt> _178131_b) {
	if ((_178131_b.get()._field_label != nullptr)) {
		jule::Ptr<_1e0dea413_BreakSt> _178321_brk = _1e0e096ca_check_break_with_label(_self_, _178131_b);;
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_178321_brk));;
		return;;
	};
	jule::Ptr<_1e0dea413_BreakSt> _178817_brk = _1e0e099d8_check_plain_break(_self_, _178131_b);;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_178817_brk));;
}



inline void _1e0e09ed3_check_ret(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0136287_RetSt> _179233_r) {
	if (_1e0dee2a2_is_deferred(_self_)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _179233_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0deb887_RetSt> _179717_rt = jule::new_ptr<_1e0deb887_RetSt>(_1e0deb887_RetSt{._field_func=_1e0dee516_get_root(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_179717_rt));;
	jule::Ptr<_1e0e7626e_RetTypeChecker> _180217_rtc = jule::new_ptr<_1e0e7626e_RetTypeChecker>(_1e0e7626e_RetTypeChecker{._field_sc=_self_, ._field_f=_179717_rt.get()._field_func, ._field_error_token=_179233_r.get()._field_token, });;
	jule::Bool _180713_ok = _1e0e77160_check(_180217_rtc.ptr(), _179233_r.get()._field_expr);;
	if ((!(_180713_ok))) {
		return;;
	};
	if (((_179233_r.get()._field_expr == nullptr) && (_180217_rtc.get()._field_vars.len() == 0LL))) {
		return;;
	};
	_179717_rt.get()._field_vars=_180217_rtc.get()._field_vars;
	if ((_179233_r.get()._field_expr != nullptr)) {
		_179717_rt.get()._field_expr=jule::Any(_180217_rtc.get()._field_model);
	};
}



inline void _1e0e0a258_check_use_expr(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e0128ee4_UseExpr> _182334_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _182334_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1e0dee2a2_is_deferred(_self_)) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _182334_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_stmts.len())) {
		_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _182334_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1e0e0a4cd_check_node(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Any& _183935_node) {
	{
		auto &_match_expr{ _183935_node };
		
		if (_match_expr.type_is<jule::Ptr<_1e013340a_ScopeTree>>()) {
			_case_begin_1acbd267e:;
			{
				_1e0e01abd_check_anon_scope(_self_, _183935_node.operator jule::Ptr<_1e013340a_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0135dd0_VarDecl>>()) {
			_case_begin_1acbd29c0:;
			{
				_1e0e007d1_check_var_decl(_self_, _183935_node.operator jule::Ptr<_1e0135dd0_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0139653_TypeAliasDecl>>()) {
			_case_begin_1acbd27d3:;
			{
				_1e0e00a56_check_type_alias_decl(_self_, _183935_node.operator jule::Ptr<_1e0139653_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0128b3c_Expr>>()) {
			_case_begin_1acbd223e:;
			{
				_1e0e02162_check_expr(_self_, _183935_node.operator jule::Ptr<_1e0128b3c_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012a369_CoExpr>>()) {
			_case_begin_1acbd22a5:;
			{
				_1e0e023d7_check_co_expr(_self_, _183935_node.operator jule::Ptr<_1e012a369_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0138e7c_Conditional>>()) {
			_case_begin_1acbd2b68:;
			{
				_1e0e02c78_check_conditional(_self_, _183935_node.operator jule::Ptr<_1e0138e7c_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0136809_Iter>>()) {
			_case_begin_1acbd2bce:;
			{
				_1e0e044d8_check_iter(_self_, _183935_node.operator jule::Ptr<_1e0136809_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01381ce_ContSt>>()) {
			_case_begin_1acbd2c45:;
			{
				_1e0e051ba_check_cont(_self_, _183935_node.operator jule::Ptr<_1e01381ce_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0131a13_LabelSt>>()) {
			_case_begin_1acbd2cab:;
			{
				_1e0e05440_check_label(_self_, _183935_node.operator jule::Ptr<_1e0131a13_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0131dba_GotoSt>>()) {
			_case_begin_1acbd2d22:;
			{
				_1e0e056b5_push_goto(_self_, _183935_node.operator jule::Ptr<_1e0131dba_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0132d00_AssignSt>>()) {
			_case_begin_1acbd2d88:;
			{
				_1e0e07211_check_assign_st(_self_, _183935_node.operator jule::Ptr<_1e0132d00_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013a29c_MatchCase>>()) {
			_case_begin_1acbd2dee:;
			{
				_1e0e09147_check_match(_self_, _183935_node.operator jule::Ptr<_1e013a29c_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01321a6_FallSt>>()) {
			_case_begin_1acbd2e65:;
			{
				_1e0e093bc_check_fall(_self_, _183935_node.operator jule::Ptr<_1e01321a6_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0137d27_BreakSt>>()) {
			_case_begin_1acbd2ecb:;
			{
				_1e0e09c5d_check_break(_self_, _183935_node.operator jule::Ptr<_1e0137d27_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0136287_RetSt>>()) {
			_case_begin_1acbd3042:;
			{
				_1e0e09ed3_check_ret(_self_, _183935_node.operator jule::Ptr<_1e0136287_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0128ee4_UseExpr>>()) {
			_case_begin_1acbd30b9:;
			{
				_1e0e0a258_check_use_expr(_self_, _183935_node.operator jule::Ptr<_1e0128ee4_UseExpr>());
			}
		}
		else {
			_case_begin_1acbd23e8:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1acbd2393:;
	};
}



inline void _1e0e0a6a9_check_result(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	_1e00e2ead_Node _187917_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _187917_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e0128ee4_UseExpr>>()) {
			_case_begin_1acbdccc7:;
			{
				jule::Ptr<_1e0128ee4_UseExpr> _188221_ue = _187917_stmt._field_data.operator jule::Ptr<_1e0128ee4_UseExpr>();;
				jule::Ptr<_1e0e7ce9b_Data> _188321_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _188221_ue.get()._field_expr);;
				if ((_188321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_188321_d));;
				jule::Ptr<_1e0e7626e_RetTypeChecker> _188821_rtc = jule::new_ptr<_1e0e7626e_RetTypeChecker>(_1e0e7626e_RetTypeChecker{._field_sc=_self_, ._field_types=_1e01462db_types(_self_.get()._field_result.ptr()), ._field_error_token=_188221_ue.get()._field_expr.get()._field_token, });;
				_1e0e77160_check(_188821_rtc.ptr(), _188221_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0128b3c_Expr>>()) {
			_case_begin_1acbdcd3d:;
			{
				jule::Ptr<_1e0128b3c_Expr> _189521_expr = _187917_stmt._field_data.operator jule::Ptr<_1e0128b3c_Expr>();;
				jule::Ptr<_1e0e7ce9b_Data> _189621_d = _1e0e99cdc_eval_expr(_1e0e23e0e_eval(_self_.get()._field_s, jule::Trait<_1ed7974de_Lookup>(_self_, 0)), _189521_expr);;
				if ((_189621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _189621_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1acbe23c5:;
						{
							jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel> _190225_m = _189621_d.get()._field_model.operator jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>();;
							_1e0e01ddc_process_error_call(_self_, _190225_m,_189521_expr.get()._field_token);
							_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_189621_d));;
						}
					}
					else {
						_case_begin_1acbe24c4:;
						{
							return;;
						}
					}
					_match_end_1acbe2271:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0131dba_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1e0137d27_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1e01381ce_ContSt>>() || _match_expr.type_is<jule::Ptr<_1e0136287_RetSt>>()) {
			_case_begin_1acbdc4ad:;
			{
				_1e0e0a4cd_check_node(_self_, _187917_stmt._field_data);
			}
		}
		else {
			_case_begin_1acbdc3c0:;
			{
				_1e0e0a4cd_check_node(_self_, _187917_stmt._field_data);
				return;;
			}
		}
		_match_end_1acbdc36a:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1e0e0a885_check_tree(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _192417_n = _self_.get()._field_tree.get()._field_stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_192417_n)--;
	};
	for (; (_self_.get()._field_i < _192417_n); (_self_.get()._field_i)++) {
		{
			_1e00e2ead_Node _193221_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];;
			_1e0e0a4cd_check_node(_self_, _193221_stmt._field_data);
			if (_1e0dee03d_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1acbe56c5:;
	}
	_iter_end_1acbe56c5:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL))) {
		_1e0e0a6a9_check_result(_self_);
	};
}



inline void _1e0e0aba4_check_goto(_1e0debe4d_ScopeChecker* _self_, jule::Ptr<_1e0debc61_ScopeGoto>& _194334_gt, jule::Ptr<_1e0deba74_ScopeLabel>& _194355_label) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _194417_gtsc = _194334_gt.get()._field_scope;;
	while (((_194417_gtsc.get()._field_child_index - 1LL) > _194355_label.get()._field_scope.get()._field_child_index)) {
		{
			_194417_gtsc=_194417_gtsc.get()._field_parent;
		}
	_iter_next_1acbe83ed:;
	}
	_iter_end_1acbe83ed:;;
	jule::I32 _194917_n = 0LL;;
	if ((_194417_gtsc.get()._field_scope == _194355_label.get()._field_scope.get()._field_scope)) {
		if ((_194334_gt.get()._field_pos > _194355_label.get()._field_pos)) {
			return;;
		};
		_194917_n=_194334_gt.get()._field_pos;
	};
	jule::I32 _196217_i = (_194355_label.get()._field_pos - 1LL);;
	if ((_194917_n == 0LL)) {
		{
			auto &expr = _194355_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1acbeac2a:;
			if (it != expr.end()) {
				jule::I32 _196517_j = it - expr.begin();
				jule::Any _196520_stmt = *it;
				{
					if (_1e0db7996_stmt_is_goto_scope(_196520_stmt,_194417_gtsc.get()._field_scope)) {
						_194917_n=_196517_j;
						goto _iter_end_1acbeac2a;
					};
				}
				_iter_next_1acbeac2a:;
				++it;
				_196517_j++;
				goto _iter_begin_1acbeac2a;
			}
			_iter_end_1acbeac2a:;
		};
	};
	for (; (_196217_i >= _194917_n); (_196217_i)--) {
		{
			jule::Any _197521_stmt = _194355_label.get()._field_scope.get()._field_scope.get()._field_stmts[_196217_i];;
			if (_1e0dc5dd3_st_is_def(_197521_stmt)) {
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _194334_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_194334_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
				return;;
			};
		}
	_iter_next_1acbebe29:;
	}
	_iter_end_1acbebe29:;;
}



inline void _1e0e0ad80_check_gotos(_1e0debe4d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1acbed766:;
		if (it != expr.end()) {
			jule::Ptr<_1e0debc61_ScopeGoto> _198421_gt = *it;
			{
				jule::Ptr<_1e0deba74_ScopeLabel> _198521_label = _1e0e001a4_find_label_all(&(*_self_), _198421_gt.get()._field_gt.get()._field_label.get()._field_kind);;
				if ((_198521_label == nullptr)) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _198421_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_198421_gt.get()._field_gt.get()._field_label.get()._field_kind)}));
					goto _iter_next_1acbed766;
				};
				_198521_label.get()._field_used=true;
				_1e0e0aba4_check_goto(&(*_self_), _198421_gt,_198521_label);
			}
			_iter_next_1acbed766:;
			++it;
			goto _iter_begin_1acbed766;
		}
		_iter_end_1acbed766:;
	};
}



inline void _1e0e0b05b_check_labels(_1e0debe4d_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1acbedc50:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deba74_ScopeLabel> _199716_l = *it;
			{
				if ((!(_199716_l.get()._field_used))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _199716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_199716_l.get()._field_label.get()._field_ident)}));
				};
			}
			_iter_next_1acbedc50:;
			++it;
			goto _iter_begin_1acbedc50;
		}
		_iter_end_1acbedc50:;
	};
}



inline void _1e0e0b237_check_vars(_1e0debe4d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1acc0148e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _200516_v = *it;
			{
				if (((((!(_200516_v.get()._field_used)) && (!(_1dd996940_is_ignore_ident(_200516_v.get()._field_ident)))) && (!(_1dd996bd7_is_anon_ident(_200516_v.get()._field_ident)))) && (_200516_v.get()._field_ident != jule::Str("self", 4)))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _200516_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_200516_v.get()._field_ident)}));
				};
			}
			_iter_next_1acc0148e:;
			++it;
			goto _iter_begin_1acc0148e;
		}
		_iter_end_1acc0148e:;
	};
}



inline void _1e0e0b413_check_aliases(_1e0debe4d_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1acc02b88:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77ae84_TypeAlias> _201316_a = *it;
			{
				if ((((!(_201316_a.get()._field_used)) && (!(_1dd996940_is_ignore_ident(_201316_a.get()._field_ident)))) && (!(_1dd996bd7_is_anon_ident(_201316_a.get()._field_ident))))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _201316_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_201316_a.get()._field_ident)}));
				};
			}
			_iter_next_1acc02b88:;
			++it;
			goto _iter_begin_1acc02b88;
		}
		_iter_end_1acc02b88:;
	};
}



inline void _1e0e0b732_check(jule::Ptr<_1e0debe4d_ScopeChecker> _self_, jule::Ptr<_1e013340a_ScopeTree>& _202130_tree, jule::Ptr<_1e0dd6322_Scope>& _202153_s) {
	_202153_s.get()._field_deferred=_202130_tree.get()._field_deferred;
	_202153_s.get()._field_unsafety=_202130_tree.get()._field_unsafety;
	jule::I32 _202513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_202130_tree;
	_self_.get()._field_scope=_202153_s;
	_1e0e0a885_check_tree(_self_);
	if ((_202513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1e0e0b237_check_vars(_self_.ptr());
		_1e0e0b413_check_aliases(_self_.ptr());
		if (_1e0dedaed_is_root(_self_.ptr())) {
			_1e0e0ad80_check_gotos(_self_.ptr());
			_1e0e0b05b_check_labels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0e0b996_new_child_checker(jule::Ptr<_1e0debe4d_ScopeChecker> _self_) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _204517_base = _1e0d6e992_new_scope_checker_base(_self_.get()._field_s,nullptr);;
	_204517_base.get()._field_parent=_self_;
	_204517_base.get()._field_labels=_self_.get()._field_labels;
	_204517_base.get()._field_gotos=_self_.get()._field_gotos;
	_204517_base.get()._field_child_index=static_cast<jule::I32>((_self_.get()._field_child_index + 1LL));
	return _204517_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0debe4d_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e0ca30_check_cdef(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
			_case_begin_1acc0ad06:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e0144581_Fn>().get()._field_cpp_linked) {
					goto _match_end_1acc0b026;
				};
				goto _case_begin_1acc0b07b;
			}
		}
		else {
			_case_begin_1acc0b07b:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1630_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc0b026:;
	};
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e0e0cca5_check_typedef(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1acc0d7dc:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e010261b_Struct>().get()._field_cpp_linked) {
					goto _match_end_1acc0d963;
				};
				goto _case_begin_1acc0d9b8;
			}
		}
		else {
			_case_begin_1acc0d9b8:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3233_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc0d963:;
	};
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e0e0d02a_check_derive(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1acc1126d:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e010261b_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1acc113e4;
				};
				goto _case_begin_1acc11449;
			}
		}
		else {
			_case_begin_1acc11449:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1acc113e4:;
	};
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL].get()._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1acc152c7:;
		}
		else {
			_case_begin_1acc139e0:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4832_d.get()._field_args[0LL].get()._field_kind)}));
			}
		}
		_match_end_1acc14ddc:;
	};
}



inline void _1e0e0d2a0_check_namespace(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1acc165a3:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e010261b_Struct>().get()._field_cpp_linked))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
			_case_begin_1acc168d3:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e0144581_Fn>().get()._field_cpp_linked))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1acc16949:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1e0e366e6_Var>().get()._field_cpp_linked))) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1acc167d4:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7439_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc1677e:;
	};
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9941e0_Token> _9913_arg = _7439_d.get()._field_args[0LL];;
	if ((_9913_arg.get()._field_id != static_cast<jule::U32>(6LLU))) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_kind[0LL] != '\"')) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7439_d.get()._field_args[0LL].get()._field_kind=_9913_arg.get()._field_kind.slice(1LL,(_9913_arg.get()._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1acc207ee:;
			{
				if ((_1ed776754_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1e0124e35_Directive> _11625_typedef = jule::new_ptr<_1e0124e35_Directive>(_1e0124e35_Directive{._field_tag=_7439_d.get()._field_tag, });;
					_11625_typedef.get()._field_tag.get()._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1e0124e35_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1acc20799:;
	};
}



inline void _1e0e0d525_check_deprecated(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _12540_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1acc1dc2b:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e010261b_Struct>().get()._field_cpp_linked) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
			_case_begin_1acc22a65:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e0144581_Fn>().get()._field_cpp_linked) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1acc22acb:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1e0e366e6_Var>().get()._field_cpp_linked) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
				};
			}
		}
		else {
			_case_begin_1acc20b95:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12540_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc20b40:;
	};
	if ((_12540_d.get()._field_args.len() == 0LL)) {
		return;;
	};
	if ((_12540_d.get()._field_args.len() > 1LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12540_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9941e0_Token> _15013_arg = _12540_d.get()._field_args[0LL];;
	if ((_15013_arg.get()._field_id != static_cast<jule::U32>(6LLU))) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_kind[0LL] != '\"')) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12540_d.get()._field_args[0LL].get()._field_kind=_15013_arg.get()._field_kind.slice(1LL,(_15013_arg.get()._field_kind.len() - 1LL));
}



inline void _1e0e0d79a_check_test(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _16430_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
			_case_begin_1acc294c8:;
			{
				jule::Ptr<_1e0144581_Fn> _16717_f = (*_self_)._field_o.operator jule::Ptr<_1e0144581_Fn>();;
				if ((((!(_16717_f.get()._field_cpp_linked)) && (!(_1e00e98aa_is_init(_16717_f.ptr())))) && (!(_1e00a944c_is_entry_point(_16717_f.ptr()))))) {
					goto _match_end_1acc2b3ba;
				};
				if (_1e0123d35_is_method(_16717_f.ptr())) {
					_1e0e1e107_push_err((*_self_)._field_s.ptr(), _16717_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1acc2b3ba;
				};
				goto _case_begin_1acc2b420;
			}
		}
		else {
			_case_begin_1acc2b420:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16430_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc2b3ba:;
	};
	if ((_16430_d.get()._field_args.len() > 0LL)) {
		_1e0e1e107_push_err((*_self_)._field_s.ptr(), _16430_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1e0e0da20_check_directive(_1e0e0c5e0_DirectiveChecker* _self_, jule::Ptr<_1e0124e35_Directive>& _18539_d) {
	{
		auto &_match_expr{ _18539_d.get()._field_tag.get()._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1acc30644:;
			{
				_1e0e0ca30_check_cdef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1acc306aa:;
			{
				_1e0e0cca5_check_typedef(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1acc30721:;
			{
				_1e0e0d02a_check_derive(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1acc30787:;
			{
				_1e0e0d2a0_check_namespace(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1acc3158a:;
			{
				_1e0e0d525_check_deprecated(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1acc31601:;
			{
				_1e0e0d79a_check_test(&(*_self_), _18539_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1acc31667:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		else {
			_case_begin_1acc30314:;
			{
				_1e0e1e107_push_err((*_self_)._field_s.ptr(), _18539_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18539_d.get()._field_tag.get()._field_kind)}));
			}
		}
		_match_end_1acc3059a:;
	};
}



inline void _1e0e0dbeb_check(_1e0e0c5e0_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1acc3414d:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _20821_d = *it;
			{
				_1e0e0da20_check_directive(&(*_self_), _20821_d);
			}
			_iter_next_1acc3414d:;
			++it;
			goto _iter_begin_1acc3414d;
		}
		_iter_end_1acc3414d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e0c5e0_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1378e_find_package(_1e0e13272_ImportInfo* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e13a9c_select_package(_1e0e13272_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e13e54_find_var(_1e0e13272_ImportInfo* _self_, jule::Str _18131_ident, jule::Bool _18143_cpp_linked) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _18131_ident)))) {
		return nullptr;
	};
	return _1e0e10d85_find_var_in_package((*_self_)._field_package.get()._field_files,_18131_ident,false);
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e1430b_find_type_alias(_1e0e13272_ImportInfo* _self_, jule::Str _19338_ident, jule::Bool _19350_cpp_linked) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _19338_ident)))) {
		return nullptr;
	};
	return _1e0e112d6_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_19338_ident,false);
}



inline jule::Ptr<_1e010261b_Struct> _1e0e146b3_find_struct(_1e0e13272_ImportInfo* _self_, jule::Str _20534_ident, jule::Bool _20546_cpp_linked) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _20534_ident)))) {
		return nullptr;
	};
	return _1e0e116d2_find_struct_in_package((*_self_)._field_package.get()._field_files,_20534_ident,false);
}



inline jule::Ptr<_1e0144581_Fn> _1e0e14a6a_find_fn(_1e0e13272_ImportInfo* _self_, jule::Str _21730_ident, jule::Bool _21742_cpp_linked) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _21730_ident)))) {
		return nullptr;
	};
	return _1e0e11b11_find_fn_in_package((*_self_)._field_package.get()._field_files,_21730_ident,false);
}



inline jule::Ptr<_1e0567d06_Trait> _1e0e14d78_find_trait(_1e0e13272_ImportInfo* _self_, jule::Str _22833_ident) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _22833_ident)))) {
		return nullptr;
	};
	return _1e0e11e52_find_trait_in_package((*_self_)._field_package.get()._field_files,_22833_ident);
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0e15186_find_enum(_1e0e13272_ImportInfo* _self_, jule::Str _23932_ident) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _23932_ident)))) {
		return nullptr;
	};
	return _1e0e12293_find_enum_in_package((*_self_)._field_package.get()._field_files,_23932_ident);
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e15494_find_type_enum(_1e0e13272_ImportInfo* _self_, jule::Str _25037_ident) {
	if ((!(_1e0e158b2_is_lookupable(&(*_self_), _25037_ident)))) {
		return nullptr;
	};
	return _1e0e12606_find_type_enum_in_package((*_self_)._field_package.get()._field_files,_25037_ident);
}



inline jule::Bool _1e0e158b2_is_lookupable(_1e0e13272_ImportInfo* _self_, jule::Str _25928_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	};
	if ((!((*_self_)._field_import_all))) {
		if ((((*_self_)._field_alias.len() != 0LL) || _1e0e15bc0_exist_ident(&(*_self_), jule::Str("self", 4)))) {
			return true;
		};
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1e0e15bc0_exist_ident(&(*_self_), _25928_ident)))) {
				return false;
			};
		};
	};
	return true;
}



inline jule::Bool _1e0e15bc0_exist_ident(_1e0e13272_ImportInfo* _self_, jule::Str _27926_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1acc495e7:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> &_28016_sident = *it;
			{
				if ((_28016_sident.get()._field_kind == _27926_ident)) {
					return true;
				};
			}
			_iter_next_1acc495e7:;
			++it;
			goto _iter_begin_1acc495e7;
		}
		_iter_end_1acc495e7:;
	};
	return false;
}



inline jule::Bool _1e0e15e56_is_accessible_via_selection(_1e0e13272_ImportInfo* _self_) {
	return (((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1e0e15bc0_exist_ident(&(*_self_), jule::Str("self", 4)));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e13272_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1672b_find_package(_1e0e16253_Package* _self_, jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e16a39_select_package(_1e0e16253_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e16de1_find_var(_1e0e16253_Package* _self_, jule::Str _30931_ident, jule::Bool _30943_cpp_linked) {
	return _1e0e10d85_find_var_in_package((*_self_)._field_files,_30931_ident,_30943_cpp_linked);
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e17298_find_type_alias(_1e0e16253_Package* _self_, jule::Str _31538_ident, jule::Bool _31550_cpp_linked) {
	return _1e0e112d6_find_type_alias_in_package((*_self_)._field_files,_31538_ident,_31550_cpp_linked);
}



inline jule::Ptr<_1e010261b_Struct> _1e0e17650_find_struct(_1e0e16253_Package* _self_, jule::Str _32134_ident, jule::Bool _32146_cpp_linked) {
	return _1e0e116d2_find_struct_in_package((*_self_)._field_files,_32134_ident,_32146_cpp_linked);
}



inline jule::Ptr<_1e0144581_Fn> _1e0e17a07_find_fn(_1e0e16253_Package* _self_, jule::Str _32730_ident, jule::Bool _32742_cpp_linked) {
	return _1e0e11b11_find_fn_in_package((*_self_)._field_files,_32730_ident,_32742_cpp_linked);
}



inline jule::Ptr<_1e0567d06_Trait> _1e0e17d15_find_trait(_1e0e16253_Package* _self_, jule::Str _33333_ident) {
	return _1e0e11e52_find_trait_in_package((*_self_)._field_files,_33333_ident);
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0e18123_find_enum(_1e0e16253_Package* _self_, jule::Str _33932_ident) {
	return _1e0e12293_find_enum_in_package((*_self_)._field_files,_33932_ident);
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e18431_find_type_enum(_1e0e16253_Package* _self_, jule::Str _34537_ident) {
	return _1e0e12606_find_type_enum_in_package((*_self_)._field_files,_34537_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e16253_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1b8da_find_package(_1e0e1b3bd_Sema* _self_, jule::Str _22435_ident) {
	return _1e0e78518_find_package((*_self_)._field_file.ptr(), _22435_ident);
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e1bbe8_select_package(_1e0e1b3bd_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _23437_selector) {
	return _1e0e78826_select_package((*_self_)._field_file.ptr(), _23437_selector);
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e1c0a0_find_var(_1e0e1b3bd_Sema* _self_, jule::Str _24431_ident, jule::Bool _24443_cpp_linked) {
	jule::Ptr<_1e0e366e6_Var> _24617_v = _1e0e10d85_find_var_in_package((*_self_)._field_files,_24431_ident,_24443_cpp_linked);;
	if ((_24617_v != nullptr)) {
		return _24617_v;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acc6b88e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _25221_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_25221_imp,_24431_ident)))) {
					goto _iter_next_1acc6b88e;
				};
				_24617_v=_1e0e13e54_find_var(_25221_imp.ptr(), _24431_ident,_24443_cpp_linked);
				if (((_24617_v != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _24617_v.get()._field_public,_24617_v.get()._field_token))) {
					return _24617_v;
				};
			}
			_iter_next_1acc6b88e:;
			++it;
			goto _iter_begin_1acc6b88e;
		}
		_iter_end_1acc6b88e:;
	};
	return nullptr;
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e1c457_find_type_alias(_1e0e1b3bd_Sema* _self_, jule::Str _27138_ident, jule::Bool _27150_cpp_linked) {
	jule::Ptr<_1ed77ae84_TypeAlias> _27317_ta = _1e0e112d6_find_type_alias_in_package((*_self_)._field_files,_27138_ident,_27150_cpp_linked);;
	if ((_27317_ta != nullptr)) {
		return _27317_ta;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acc6e52e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _27921_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_27921_imp,_27138_ident)))) {
					goto _iter_next_1acc6e52e;
				};
				_27317_ta=_1e0e1430b_find_type_alias(_27921_imp.ptr(), _27138_ident,_27150_cpp_linked);
				if (((_27317_ta != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _27317_ta.get()._field_public,_27317_ta.get()._field_token))) {
					return _27317_ta;
				};
			}
			_iter_next_1acc6e52e:;
			++it;
			goto _iter_begin_1acc6e52e;
		}
		_iter_end_1acc6e52e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e010261b_Struct> _1e0e1c80e_find_struct(_1e0e1b3bd_Sema* _self_, jule::Str _29834_ident, jule::Bool _29846_cpp_linked) {
	jule::Ptr<_1e010261b_Struct> _30017_s = _1e0e116d2_find_struct_in_package((*_self_)._field_files,_29834_ident,_29846_cpp_linked);;
	if ((_30017_s != nullptr)) {
		return _30017_s;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acc7217a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _30621_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_30621_imp,_29834_ident)))) {
					goto _iter_next_1acc7217a;
				};
				_30017_s=_1e0e146b3_find_struct(_30621_imp.ptr(), _29834_ident,_29846_cpp_linked);
				if (((_30017_s != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _30017_s.get()._field_public,_30017_s.get()._field_token))) {
					return _30017_s;
				};
			}
			_iter_next_1acc7217a:;
			++it;
			goto _iter_begin_1acc7217a;
		}
		_iter_end_1acc7217a:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0144581_Fn> _1e0e1cbb6_find_fn(_1e0e1b3bd_Sema* _self_, jule::Str _32530_ident, jule::Bool _32542_cpp_linked) {
	jule::Ptr<_1e0144581_Fn> _32717_f = _1e0e11b11_find_fn_in_package((*_self_)._field_files,_32530_ident,_32542_cpp_linked);;
	if ((_32717_f != nullptr)) {
		return _32717_f;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acdd5684:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _33321_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_33321_imp,_32530_ident)))) {
					goto _iter_next_1acdd5684;
				};
				_32717_f=_1e0e14a6a_find_fn(_33321_imp.ptr(), _32530_ident,_32542_cpp_linked);
				if (((_32717_f != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _32717_f.get()._field_public,_32717_f.get()._field_token))) {
					return _32717_f;
				};
			}
			_iter_next_1acdd5684:;
			++it;
			goto _iter_begin_1acdd5684;
		}
		_iter_end_1acdd5684:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0567d06_Trait> _1e0e1cec4_find_trait(_1e0e1b3bd_Sema* _self_, jule::Str _35233_ident) {
	jule::Ptr<_1e0567d06_Trait> _35417_t = _1e0e11e52_find_trait_in_package((*_self_)._field_files,_35233_ident);;
	if ((_35417_t != nullptr)) {
		return _35417_t;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acdd8038:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _36021_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_36021_imp,_35233_ident)))) {
					goto _iter_next_1acdd8038;
				};
				_35417_t=_1e0e14d78_find_trait(_36021_imp.ptr(), _35233_ident);
				if (((_35417_t != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _35417_t.get()._field_public,_35417_t.get()._field_token))) {
					return _35417_t;
				};
			}
			_iter_next_1acdd8038:;
			++it;
			goto _iter_begin_1acdd8038;
		}
		_iter_end_1acdd8038:;
	};
	return nullptr;
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0e1d2d2_find_enum(_1e0e1b3bd_Sema* _self_, jule::Str _37932_ident) {
	jule::Ptr<_1e057b8b9_Enum> _38117_e = _1e0e12293_find_enum_in_package((*_self_)._field_files,_37932_ident);;
	if ((_38117_e != nullptr)) {
		return _38117_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acdda876:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _38721_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_38721_imp,_37932_ident)))) {
					goto _iter_next_1acdda876;
				};
				_38117_e=_1e0e15186_find_enum(_38721_imp.ptr(), _37932_ident);
				if (((_38117_e != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _38117_e.get()._field_public,_38117_e.get()._field_token))) {
					return _38117_e;
				};
			}
			_iter_next_1acdda876:;
			++it;
			goto _iter_begin_1acdda876;
		}
		_iter_end_1acdda876:;
	};
	return nullptr;
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e1d5e0_find_type_enum(_1e0e1b3bd_Sema* _self_, jule::Str _40637_ident) {
	jule::Ptr<_1e04c643a_TypeEnum> _40817_e = _1e0e12606_find_type_enum_in_package((*_self_)._field_files,_40637_ident);;
	if ((_40817_e != nullptr)) {
		return _40817_e;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acddd1b4:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _41421_imp = *it;
			{
				if ((!(_1e0e19d6c_imp_is_lookupable(_41421_imp,_40637_ident)))) {
					goto _iter_next_1acddd1b4;
				};
				_40817_e=_1e0e15494_find_type_enum(_41421_imp.ptr(), _40637_ident);
				if (((_40817_e != nullptr) && _1e0e1e7cd_is_accessible_define(&(*_self_), _40817_e.get()._field_public,_40817_e.get()._field_token))) {
					return _40817_e;
				};
			}
			_iter_next_1acddd1b4:;
			++it;
			goto _iter_begin_1acddd1b4;
		}
		_iter_end_1acddd1b4:;
	};
	return nullptr;
}



inline jule::Bool _1e0e1d9b9_is_flag(_1e0e1b3bd_Sema* _self_, jule::I32 _43022_flags) {
	return (((*_self_)._field_flags & _43022_flags) == _43022_flags);
}



inline void _1e0e1dc3e_set_current_file(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0e77eeb_SymbolTable> _43239_f) {
	(*_self_)._field_file=_43239_f;
}



inline void _1e0e1e107_push_err(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1dd9941e0_Token> _43427_token, jule::Str _43442_fmt, jule::Slice<jule::Any> _43455_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1e0e19a2b_compiler_err(_43427_token,true,_43442_fmt,jule::Any(_43455_args)));;
}



inline void _1e0e1e426_push_suggestion(_1e0e1b3bd_Sema* _self_, jule::Str _43934_fmt, jule::Slice<jule::Any> _43947_args) {
	{
		_1e0e1ae39_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43934_fmt,jule::Any(_43947_args));
	};
}



inline jule::Bool _1e0e1e7cd_is_accessible_define(_1e0e1b3bd_Sema* _self_, jule::Bool _44435_public, jule::Ptr<_1dd9941e0_Token> _44449_token) {
	return ((_44435_public || (_44449_token.get()._field_file == nullptr)) || (_1dd999ea4_dir((*_self_)._field_file.get()._field_file.ptr()) == _1dd999ea4_dir(_44449_token.get()._field_file.ptr())));
}



inline jule::Bool _1e0e1ec2e_is_duplicated_ident(_1e0e1b3bd_Sema* _self_, jule::Uintptr _45134_itself, jule::Str _45151_ident, jule::Bool _45163_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1acde51bb:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> &_45216_f = *it;
			{
				if (_1e0e7b4e9_is_duplicated_ident(_45216_f.ptr(), _45134_itself,_45151_ident,_45163_cpp_linked)) {
					return true;
				};
				{
					auto &expr = _45216_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1acde5ae5:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e13272_ImportInfo> &_45720_imp = *it;
						{
							{
								auto &expr = _45720_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1acde68a4:;
								if (it != expr.end()) {
									jule::Ptr<_1dd9941e0_Token> &_45824_selected = *it;
									{
										if ((_45824_selected.get()._field_kind == _45151_ident)) {
											return true;
										};
									}
									_iter_next_1acde68a4:;
									++it;
									goto _iter_begin_1acde68a4;
								}
								_iter_end_1acde68a4:;
							};
						}
						_iter_next_1acde5ae5:;
						++it;
						goto _iter_begin_1acde5ae5;
					}
					_iter_end_1acde5ae5:;
				};
			}
			_iter_next_1acde51bb:;
			++it;
			goto _iter_begin_1acde51bb;
		}
		_iter_end_1acde51bb:;
	};
	return false;
}



inline void _1e0e2004d_check_directives(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _46841_d, jule::Any _46867_o) {
	_1e0e0c5e0_DirectiveChecker _46917_dc = _1e0e0c5e0_DirectiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1e0124e35_Directive>>>)((&(_46841_d)))), ._field_o=jule::Any(_46867_o)};;
	_1e0e0dbeb_check(&_46917_dc);
}



inline jule::Bool _1e0e2049e_check_generic_quantity(_1e0e1b3bd_Sema* _self_, jule::I32 _47741_required, jule::I32 _47756_given, jule::Ptr<_1dd9941e0_Token> _47768_token) {
	jule::Bool _47785_ok = jule::Bool();
	{
		
		if (((_47741_required == 0LL) && (_47756_given > 0LL))) {
			_case_begin_1acde9269:;
			{
				_1e0e1e107_push_err(&(*_self_), _47768_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if (((_47741_required > 0LL) && (_47756_given == 0LL))) {
			_case_begin_1acde9313:;
			{
				_1e0e1e107_push_err(&(*_self_), _47768_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required < _47756_given)) {
			_case_begin_1acde9379:;
			{
				_1e0e1e107_push_err(&(*_self_), _47768_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else if ((_47741_required > _47756_given)) {
			_case_begin_1acde9049:;
			{
				_1e0e1e107_push_err(&(*_self_), _47768_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_47785_ok = false;
				return _47785_ok;
			}
		}
		else {
			_case_begin_1acde8ab5:;
			{
				_47785_ok = true;
				return _47785_ok;
			}
		}
		_match_end_1acde8a0a:;
	};
}



inline jule::Bool _1e0e20878_is_duplicated_import_selection(_1e0e1b3bd_Sema* _self_, jule::Uintptr _49645_itself, jule::Str _49662_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1acdec811:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> &_49716_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49716_imp) == _49645_itself)) {
					goto _iter_end_1acdec811;
				};
				if (_1e0e15bc0_exist_ident(_49716_imp.ptr(), _49662_ident)) {
					return true;
				};
			}
			_iter_next_1acdec811:;
			++it;
			goto _iter_begin_1acdec811;
		}
		_iter_end_1acdec811:;
	};
	return false;
}



inline jule::Any _1e0e20c41_get_import_def(_1e0e1b3bd_Sema* _self_, jule::Str _51129_ident, jule::Ptr<_1e0e13272_ImportInfo>& _51146_imp) {
	if ((_1ed81cbe6_find_package_builtin_def(_51146_imp.get()._field_link_path,_51129_ident) != nullptr)) {
		return jule::Any(true);
	};
	{
		auto &expr = _51146_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1acdee747:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _51621_f = *it;
			{
				;
				jule::Any _51821_def = _1e0e7b098_def_by_ident(_51621_f.ptr(), _51129_ident,false);;
				if ((_51821_def != nullptr)) {
					return jule::Any(_51821_def);
				};
			}
			_iter_next_1acdee747:;
			++it;
			goto _iter_begin_1acdee747;
		}
		_iter_end_1acdee747:;
	};
	return nullptr;
}



inline jule::Bool _1e0e21071_check_import_selections(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0e13272_ImportInfo>& _52747_imp) {
	jule::Bool _52767_ok = jule::Bool();
	_52767_ok=true;
	{
		auto &expr = _52747_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1ace0133c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> _52916_ident = *it;
			{
				if ((_52916_ident.get()._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1ace0133c;
				};
				if (_1e0e20878_is_duplicated_import_selection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_52747_imp)),_52916_ident.get()._field_kind)) {
					_1e0e1e107_push_err(&(*_self_), _52916_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
					_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_52767_ok=false;
					goto _iter_next_1ace0133c;
				};
				jule::Any _54121_def = _1e0e20c41_get_import_def(&(*_self_), _52916_ident.get()._field_kind,_52747_imp);;
				{
					auto &_match_expr{ _54121_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1ace04b15:;
						{
							goto _iter_next_1ace0133c;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
						_case_begin_1ace040a9:;
						{
							jule::Ptr<_1e0e366e6_Var> _54725_v = _54121_def.operator jule::Ptr<_1e0e366e6_Var>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _54725_v.get()._field_public,_54725_v.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
						_case_begin_1ace04120:;
						{
							jule::Ptr<_1ed77ae84_TypeAlias> _55225_ta = _54121_def.operator jule::Ptr<_1ed77ae84_TypeAlias>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _55225_ta.get()._field_public,_55225_ta.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
						_case_begin_1ace04c58:;
						{
							jule::Ptr<_1e010261b_Struct> _55725_strct = _54121_def.operator jule::Ptr<_1e010261b_Struct>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _55725_strct.get()._field_public,_55725_strct.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0567d06_Trait>>()) {
						_case_begin_1ace04cbe:;
						{
							jule::Ptr<_1e0567d06_Trait> _56225_t = _54121_def.operator jule::Ptr<_1e0567d06_Trait>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _56225_t.get()._field_public,_56225_t.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e057b8b9_Enum>>()) {
						_case_begin_1ace04d35:;
						{
							jule::Ptr<_1e057b8b9_Enum> _56725_e = _54121_def.operator jule::Ptr<_1e057b8b9_Enum>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _56725_e.get()._field_public,_56725_e.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e04c643a_TypeEnum>>()) {
						_case_begin_1ace04d9b:;
						{
							jule::Ptr<_1e04c643a_TypeEnum> _57225_e = _54121_def.operator jule::Ptr<_1e04c643a_TypeEnum>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _57225_e.get()._field_public,_57225_e.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
						_case_begin_1ace04e12:;
						{
							jule::Ptr<_1e0144581_Fn> _57725_f = _54121_def.operator jule::Ptr<_1e0144581_Fn>();;
							if (_1e0e1e7cd_is_accessible_define(&(*_self_), _57725_f.get()._field_public,_57725_f.get()._field_token)) {
								goto _iter_next_1ace0133c;
							};
						}
					}
					else {
						_case_begin_1ace03dab:;
						{
							_1e0e1e107_push_err(&(*_self_), _52916_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
							_52767_ok=false;
							goto _iter_next_1ace0133c;
						}
					}
					_match_end_1ace03d56:;
				};
				_1e0e1e107_push_err(&(*_self_), _52916_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52916_ident.get()._field_kind)}));
				_1e0e1e426_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_52767_ok=false;
			}
			_iter_next_1ace0133c:;
			++it;
			goto _iter_begin_1ace0133c;
		}
		_iter_end_1ace0133c:;
	};
	return _52767_ok;
}



inline jule::Bool _1e0e213b2_is_use_alias_duplication(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0e13272_ImportInfo>& _59444_imp) {
	if ((_59444_imp.get()._field_alias.len() == 0LL)) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ace0cda4:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _59921_imp2 = *it;
			{
				if ((_59921_imp2 == _59444_imp)) {
					goto _iter_end_1ace0cda4;
				};
				if ((_59921_imp2.get()._field_alias == _59444_imp.get()._field_alias)) {
					return true;
				};
				if (((_59921_imp2.get()._field_ident == _59921_imp2.get()._field_link_path) && (_59921_imp2.get()._field_ident == _59444_imp.get()._field_alias))) {
					return true;
				};
			}
			_iter_next_1ace0cda4:;
			++it;
			goto _iter_begin_1ace0cda4;
		}
		_iter_end_1ace0cda4:;
	};
	return false;
}



inline jule::Bool _1e0e216d1_check_import(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0e13272_ImportInfo>& _61536_imp) {
	if ((_61536_imp.get()._field_cpp_linked || (_61536_imp.get()._field_package.get()._field_files.len() == 0LL))) {
		return true;
	};
	if (_1e0e213b2_is_use_alias_duplication(&(*_self_), _61536_imp)) {
		_1e0e1e107_push_err(&(*_self_), _61536_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_61536_imp.get()._field_alias)}));
		_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_61536_imp.get()._field_duplicate))) {
		jule::Ptr<_1e0e1b3bd_Sema> _62621_sema = jule::new_ptr<_1e0e1b3bd_Sema>(_1e0e1b3bd_Sema{._field_flags=(*_self_)._field_flags});;
		_1e0e33715_check(_62621_sema, _61536_imp.get()._field_package.get()._field_files);
		if ((_62621_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_62621_sema.get()._field_errors);
			_62621_sema.get()._field_errors=nullptr;
			return false;
		};
	};
	return _1e0e21071_check_import_selections(&(*_self_), _61536_imp);
}



inline void _1e0e218ac_check_imports(_1e0e1b3bd_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1ace13b79:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _64021_file = *it;
			{
				_1e0e1dc3e_set_current_file(&(*_self_), _64021_file);
				{
					auto &expr = _64021_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1ace148a0:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e13272_ImportInfo> _64325_imp = *it;
						{
							jule::Bool _64421_ok = _1e0e216d1_check_import(&(*_self_), _64325_imp);;
							if ((!(_64421_ok))) {
								_1e0e1e107_push_err(&(*_self_), _64325_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>::make({jule::Any(_64325_imp.get()._field_link_path)}));
								return;;
							};
						}
						_iter_next_1ace148a0:;
						++it;
						goto _iter_begin_1ace148a0;
					}
					_iter_end_1ace148a0:;
				};
			}
			_iter_next_1ace13b79:;
			++it;
			goto _iter_begin_1ace13b79;
		}
		_iter_end_1ace13b79:;
	};
}



inline void _1e0e21a88_impl_file_impls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1ace14cac:;
		if (it != expr.end()) {
			jule::Ptr<_1e0159a3b_Impl> _65621_imp = *it;
			{
				_1e0e2a90a_impl_impl(_self_, _65621_imp);
			}
			_iter_next_1ace14cac:;
			++it;
			goto _iter_begin_1ace14cac;
		}
		_iter_end_1ace14cac:;
	};
}



inline void _1e0e21c64_impl_impls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ace165d8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _66221_file = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _66221_file);
				_1e0e21a88_impl_file_impls(_self_);
			}
			_iter_next_1ace165d8:;
			++it;
			goto _iter_begin_1ace165d8;
		}
		_iter_end_1ace165d8:;
	};
}



inline void _1e0e21e40_check_enums(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ace17ac3:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _66921_file = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _66921_file);
				_1e0e27de1_check_enum_decls(_self_);
				_1e0e28155_check_type_enum_decls(_self_);
			}
			_iter_next_1ace17ac3:;
			++it;
			goto _iter_begin_1ace17ac3;
		}
		_iter_end_1ace17ac3:;
	};
}



inline jule::Bool _1e0e22391_check_type_with_refers(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed780cd0_TypeSymbol>& _67847_t, jule::Trait<_1ed7974de_Lookup> _67913_l, jule::Ptr<_1ed78915c_Referencer> _67928_referencer) {
	jule::Bool _67955_ok = jule::Bool();
	if (_1ed7811cb_checked(_67847_t.ptr())) {
		_67955_ok = true;
		return _67955_ok;
	};
	_1ed789da5_TypeChecker _68317_tc = _1ed789da5_TypeChecker{._field_s=_self_, ._field_lookup=_67913_l, ._field_referencer=_67928_referencer, };;
	{
		auto &_match_expr{ _67913_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ace19e38:;
			{
				jule::Ptr<_1e0debe4d_ScopeChecker> _69121_hard = _1e0dee77a_get_hard_root(_67913_l.operator jule::Ptr<_1e0debe4d_ScopeChecker>());;
				_68317_tc._field_refers=_69121_hard.get()._field_owner.get()._field_refers;
			}
		}
		_match_end_1ace19dd3:;
	};
	if (((_67928_referencer != nullptr) && (_67928_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _67928_referencer.get()._field_owner };
			
			if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
				_case_begin_1ace1b357:;
				{
					_68317_tc._field_owner_alias=_67928_referencer.get()._field_owner.operator jule::Ptr<_1ed77ae84_TypeAlias>();
				}
			}
			_match_end_1ace1b302:;
		};
	};
	_1ed792396_check(&_68317_tc, _67847_t);
	_67955_ok = _1ed7811cb_checked(_67847_t.ptr());
	return _67955_ok;
}



inline jule::Bool _1e0e22748_check_type(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed780cd0_TypeSymbol>& _71135_t, jule::Trait<_1ed7974de_Lookup> _71155_l) {
	return _1e0e22391_check_type_with_refers(_self_, _71135_t,_71155_l,nullptr);
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e22bbb_build_type_with_generics(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01253db_TypeDecl>& _71749_t, jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _71813_generics, jule::Ptr<_1e01480ac_ReferenceStack> _71841_refers) {
	jule::Ptr<_1ed789da5_TypeChecker> _71917_tc = jule::new_ptr<_1ed789da5_TypeChecker>(_1ed789da5_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1ed7974de_Lookup>(_self_, 3), ._field_refers=_71841_refers, ._field_use_generics=_71813_generics, });;
	return _1ed792121_check_decl(_71917_tc.ptr(), _71749_t);
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e22eda_build_type(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01253db_TypeDecl>& _72935_t) {
	return _1e0e22bbb_build_type_with_generics(_self_, _72935_t,nullptr,nullptr);
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e232e8_select_type(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01253db_TypeDecl>& _73436_t) {
	jule::Ptr<_1ed789da5_TypeChecker> _73517_tc = jule::new_ptr<_1ed789da5_TypeChecker>(_1ed789da5_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1ed7974de_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ed792121_check_decl(_73517_tc.ptr(), _73436_t);
}



inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23749_evalpd(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Trait<_1ed7974de_Lookup> _74530_l, jule::Ptr<_1ed77bbbb_TypeKind> _74545_p, jule::Ptr<_1e0e366e6_Var> _74563_owner) {
	jule::Ptr<_1e0e7ea19_Eval> _74617_e = jule::new_ptr<_1e0e7ea19_Eval>(_1e0e7ea19_Eval{._field_s=_self_, ._field_lookup=_74530_l, ._field_owner=_74563_owner, });;
	{
		auto &_match_expr{ _74530_l };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ace21ea6:;
			{
				_74617_e.get()._field_unsafety=_1e0ded889_is_unsafe(_74530_l.operator jule::Ptr<_1e0debe4d_ScopeChecker>());
			}
		}
		_match_end_1ace21e51:;
	};
	_74617_e.get()._field_prefix=_74545_p;
	return _74617_e;
}



inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23b01_evalp(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Trait<_1ed7974de_Lookup> _76329_l, jule::Ptr<_1ed77bbbb_TypeKind> _76344_p) {
	return _1e0e23749_evalpd(_self_, _76329_l,_76344_p,nullptr);
}



inline jule::Ptr<_1e0e7ea19_Eval> _1e0e23e0e_eval(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Trait<_1ed7974de_Lookup> _76828_l) {
	return _1e0e23b01_evalp(_self_, _76828_l,nullptr);
}



inline jule::Bool _1e0e24409_check_assign_type(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Bool _77237_dest_is_ref, jule::Ptr<_1ed77bbbb_TypeKind>& _77261_dest, jule::Ptr<_1e0e7ce9b_Data>& _77314_d, jule::Ptr<_1dd9941e0_Token> _77328_error_token) {
	if (_77314_d.get()._field_decl) {
		_1e0e1e107_push_err(_self_.ptr(), _77328_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	};
	if (_77237_dest_is_ref) {
		if ((!(_1ed77c381_equals(_77261_dest, _77314_d.get()._field_kind)))) {
			_1e0e1e107_push_err(_self_.ptr(), _77328_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_77261_dest.ptr())),jule::Any(_1ed77c073_to_str(_77314_d.get()._field_kind.ptr()))}));
			return false;
		};
	} else {
		jule::Ptr<_1e0e6a4d8_AssignTypeChecker> _78421_atc = jule::new_ptr<_1e0e6a4d8_AssignTypeChecker>(_1e0e6a4d8_AssignTypeChecker{._field_s=_self_, ._field_dest=_77261_dest, ._field_d=_77314_d, ._field_error_token=_77328_error_token});;
		jule::Bool _79017_ok = _1e0e6b660_check(_78421_atc.ptr());;
		if ((!(_79017_ok))) {
			return false;
		};
	};
	if (((!(_1e0e7d85e_is_const(_77314_d.ptr()))) || (_1ed77dc89_prim(_77261_dest.ptr()) == nullptr))) {
		return true;
	};
	jule::Str _80017_kind = _1ed77dc89_prim(_77261_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e0de9423_is_sig_int(_80017_kind)) {
			_case_begin_1ace289e6:;
			{
				_1e0d51644_set_i64(_77314_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_77314_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e0de970e_is_unsig_int(_80017_kind)) {
			_case_begin_1ace28a6d:;
			{
				_1e0d518b9_set_u64(_77314_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_77314_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e0de9c92_is_float(_80017_kind)) {
			_case_begin_1ace28ae5:;
			{
				_1e0d52139_set_f64(_77314_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e0d513be_as_f64(_77314_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ace28919:;
	};
	return true;
}



inline jule::Bool _1e0e2487c_check_type_compatibility(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _81449_dest, jule::Ptr<_1ed77bbbb_TypeKind>& _81514_src, jule::Ptr<_1dd9941e0_Token>& _81535_error_token) {
	if ((_81514_src == nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _81535_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_81449_dest.ptr())),jule::Any(_1ed77c073_to_str(_81514_src.ptr()))}));
		return false;
	};
	if ((_1ed780928_tup(_81514_src.ptr()) != nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _81535_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_81449_dest.ptr())),jule::Any(_1ed77c073_to_str(_81514_src.ptr()))}));
		return false;
	};
	_1e0e68e43_TypeCompatibilityChecker _82917_tcc = _1e0e68e43_TypeCompatibilityChecker{._field_s=_self_, ._field_dest=_81449_dest, ._field_src=_81514_src, ._field_error_token=_81535_error_token};;
	if (_1e0e69e99_check(&_82917_tcc)) {
		return true;
	};
	_1e0e1e107_push_err(_self_.ptr(), _81535_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_81449_dest.ptr())),jule::Any(_1ed77c073_to_str(_81514_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1e0e24c67_build_non_generic_type_kind(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01253db_TypeDecl>& _85052_ast, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>& _85114_generics) {
	jule::Ptr<_1ed789da5_TypeChecker> _85217_tc = jule::new_ptr<_1ed789da5_TypeChecker>(_1ed789da5_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1ed7974de_Lookup>(_self_, 3), ._field_ignore_generics=_85114_generics, });;
	return _1ed792121_check_decl(_85217_tc.ptr(), _85052_ast);
}



inline void _1e0e25020_build_fn_non_generic_type_kinds(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01457c4_FnIns>& _86056_f) {
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _86117_generics = nullptr;;
	if (_1e0123d35_is_method(_86056_f.get()._field_decl.ptr())) {
		_86117_generics=jule::append(_86056_f.get()._field_decl.get()._field_generics,_86056_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_86117_generics=_86056_f.get()._field_decl.get()._field_generics;
	};
	{
		auto &expr = _86056_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ace31ea5:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> _86821_p = *it;
			{
				if ((!(_1e01184ab_is_self(_86821_p.get()._field_decl.ptr())))) {
					_86821_p.get()._field_kind=_1e0e24c67_build_non_generic_type_kind(_self_, _86821_p.get()._field_decl.get()._field_kind.get()._field_decl,_86117_generics);
				};
			}
			_iter_next_1ace31ea5:;
			++it;
			goto _iter_begin_1ace31ea5;
		}
		_iter_end_1ace31ea5:;
	};
	if ((!(_1e0105894_is_void(_86056_f.get()._field_decl.ptr())))) {
		_86056_f.get()._field_result=_1e0e24c67_build_non_generic_type_kind(_self_, _86056_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_86117_generics);
	};
}



inline jule::Ptr<_1e01457c4_FnIns> _1e0e25361_get_trait_check_fn_kind(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _87848_f) {
	if ((_87848_f.get()._field_instances.len() == 1LL)) {
		return _87848_f.get()._field_instances[0LL];
	};
	jule::Ptr<_1e01457c4_FnIns> _88217_ins = _1e01080d3_instance_force(_87848_f);;
	jule::Ptr<_1ed789da5_TypeChecker> _88417_tc = jule::new_ptr<_1ed789da5_TypeChecker>(_1ed789da5_TypeChecker{._field_s=_self_, ._field_lookup=jule::Trait<_1ed7974de_Lookup>(_self_, 3), });;
	{
		auto &expr = _88217_ins.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ace363e9:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> _88821_p = *it;
			{
				if ((!(_1e01184ab_is_self(_88821_p.get()._field_decl.ptr())))) {
					_88821_p.get()._field_kind=_1ed792121_check_decl(_88417_tc.ptr(), _88821_p.get()._field_decl.get()._field_kind.get()._field_decl);
				};
			}
			_iter_next_1ace363e9:;
			++it;
			goto _iter_begin_1ace363e9;
		}
		_iter_end_1ace363e9:;
	};
	if ((!(_1e0105894_is_void(_87848_f.ptr())))) {
		_88217_ins.get()._field_result=_1ed792121_check_decl(_88417_tc.ptr(), _87848_f.get()._field_result.get()._field_kind.get()._field_decl);
	};
	return _88217_ins;
}



inline jule::Bool _1e0e25680_reload_fn_ins_types(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01457c4_FnIns>& _90044_f) {
	jule::Bool _90057_ok = jule::Bool();
	if ((_1e0146550_is_builtin(_90044_f.ptr()) || _1e01467b4_is_anon(_90044_f.ptr()))) {
		_90057_ok = true;
		return _90057_ok;
	};
	jule::Ptr<_1e0e1b3bd_Sema> _90517_sema = _90044_f.get()._field_decl.get()._field_sema;;
	jule::Ptr<_1e0e77eeb_SymbolTable> _90717_old = _90044_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e0e1dc3e_set_current_file(_90044_f.get()._field_decl.get()._field_sema.ptr(), _90717_old);
	});;
	jule::Ptr<_1e0e77eeb_SymbolTable> _90917_file = _1e0e1aa4e_find_file(_90044_f.get()._field_decl.get()._field_sema.get()._field_files,_90044_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_90917_file != nullptr)) {
		_1e0e1dc3e_set_current_file(_90044_f.get()._field_decl.get()._field_sema.ptr(), _90917_file);
	};
	jule::I32 _91417_size = _90044_f.get()._field_generics.len();;
	if (((_90044_f.get()._field_decl != nullptr) && (_90044_f.get()._field_decl.get()._field_owner != nullptr))) {
		_91417_size+=_90044_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _91917_generics = jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>::alloc(0LL,_91417_size);;
	{
		auto &expr = _90044_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ace3ce39:;
		if (it != expr.end()) {
			jule::I32 _92114_i = it - expr.begin();
			jule::Ptr<_1ed77bbbb_TypeKind> _92121_g = *it;
			{
				_91917_generics = jule::alloc_for_append(_91917_generics,1);_91917_generics.__push(jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_ident=_90044_f.get()._field_decl.get()._field_generics[_92114_i].get()._field_ident, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_92121_g}), }));;
			}
			_iter_next_1ace3ce39:;
			++it;
			_92114_i++;
			goto _iter_begin_1ace3ce39;
		}
		_iter_end_1ace3ce39:;
	};
	if (((_90044_f.get()._field_decl != nullptr) && (_90044_f.get()._field_decl.get()._field_owner != nullptr))) {
		jule::Ptr<_1e010a05d_StructIns> _93121_owner = _90044_f.get()._field_owner;;
		{
			auto &expr = _93121_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ace3e9c9:;
			if (it != expr.end()) {
				jule::I32 _93218_i = it - expr.begin();
				jule::Ptr<_1ed77bbbb_TypeKind> _93225_g = *it;
				{
					_91917_generics = jule::alloc_for_append(_91917_generics,1);_91917_generics.__push(jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_ident=_93121_owner.get()._field_decl.get()._field_generics[_93218_i].get()._field_ident, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_93225_g}), }));;
				}
				_iter_next_1ace3e9c9:;
				++it;
				_93218_i++;
				goto _iter_begin_1ace3e9c9;
			}
			_iter_end_1ace3e9c9:;
		};
	};
	_90057_ok=true;
	{
		auto &expr = _90044_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ace402c1:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> _94321_p = *it;
			{
				if (_1e01184ab_is_self(_94321_p.get()._field_decl.ptr())) {
					if (_1e01202c6_is_ref(_94321_p.get()._field_decl.ptr())) {
						_94321_p.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed784ba2_Sptr>(_1ed784ba2_Sptr{._field_elem=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_90044_f.get()._field_owner, 0)})}), 7)});
					} else {
						_94321_p.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_90044_f.get()._field_owner, 0)});
					};
				} else {
					_94321_p.get()._field_kind=_1e0e22bbb_build_type_with_generics(_90517_sema, _94321_p.get()._field_decl.get()._field_kind.get()._field_decl,_91917_generics,_90044_f.get()._field_refers);
					if ((_94321_p.get()._field_kind != nullptr)) {
						_94321_p.get()._field_kind.get()._field_variadic=_94321_p.get()._field_decl.get()._field_variadic;
						if ((_94321_p.get()._field_decl.get()._field_reference && (!(_1ed793e03_is_valid_for_ref(_94321_p.get()._field_kind))))) {
							_1e0e1e107_push_err(_self_.ptr(), _94321_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_94321_p.get()._field_kind.ptr()))}));
						};
					} else {
						_90057_ok=false;
					};
				};
			}
			_iter_next_1ace402c1:;
			++it;
			goto _iter_begin_1ace402c1;
		}
		_iter_end_1ace402c1:;
	};
	if ((!(_1e0105894_is_void(_90044_f.get()._field_decl.ptr())))) {
		_90044_f.get()._field_result=_1e0e22bbb_build_type_with_generics(_90517_sema, _90044_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_91917_generics,_90044_f.get()._field_refers);
		_90057_ok=((_90044_f.get()._field_result != nullptr) && _90057_ok);
	};
	if ((_90517_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_90517_sema.get()._field_errors);
		_90517_sema.get()._field_errors=nullptr;
	};
	return _90057_ok;
}



inline jule::Bool _1e0e25b14_check_ref_validity_for_init_expr(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Bool _98452_left_mut, jule::Ptr<_1e0e7ce9b_Data>& _98473_d, jule::Ptr<_1dd9941e0_Token>& _98488_error_token) {
	{
		auto &_match_expr{ _98473_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1ace48d13:;
			{
				goto _match_end_1ace482a7;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
			_case_begin_1ace48d79:;
			{
				jule::Ptr<_1e0140cb9_TraitSubIdentExprModel> _98921_model = _98473_d.get()._field_model.operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>();;
				if ((!(_1e0e19586_is_valid_model_for_ref(_98921_model.get()._field_expr)))) {
					_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_98921_model.get()._field_method.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1ace48e01:;
			{
				jule::Ptr<_1e01411d7_StructSubIdentExprModel> _99521_model = _98473_d.get()._field_model.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>();;
				if ((!(_1e0e19586_is_valid_model_for_ref(_99521_model.get()._field_expr.get()._field_model)))) {
					_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_99521_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014179d_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1e014198a_CommonSubIdentExprModel>>()) {
			_case_begin_1ace48e67:;
			{
				_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
			_case_begin_1ace49022:;
			{
				jule::Ptr<_1e0111cac_UnaryExprModel> _100521_unary = _98473_d.get()._field_model.operator jule::Ptr<_1e0111cac_UnaryExprModel>();;
				if ((_100521_unary.get()._field_op.get()._field_kind == jule::Str("*", 1))) {
					if ((!(_1e0e19586_is_valid_model_for_ref(_98473_d.get()._field_model)))) {
						_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					};
					goto _match_end_1ace482a7;
				};
				goto _case_begin_1ace4830c;
			}
		}
		else {
			_case_begin_1ace4830c:;
			{
				_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1ace482a7:;
	};
	if ((_98452_left_mut && (!(_98473_d.get()._field_mutable)))) {
		_1e0e1e107_push_err(_self_.ptr(), _98488_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	};
	return true;
}



inline jule::Bool _1e0e2620d_check_validity_for_init_expr(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Bool _102648_left_mut, jule::Bool _102664_left_ref, jule::Ptr<_1ed77bbbb_TypeKind>& _102710_left_kind, jule::Ptr<_1e0e7ce9b_Data>& _102737_d, jule::Ptr<_1dd9941e0_Token>& _102752_error_token) {
	if (((_102648_left_mut && (!(_102737_d.get()._field_mutable))) && _1ed77d074_mutable(_102737_d.get()._field_kind.ptr()))) {
		_1e0e1e107_push_err(_self_.ptr(), _102752_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_102737_d.get()._field_kind.ptr()))}));
		return false;
	};
	if (_102664_left_ref) {
		if ((!(_1e0e25b14_check_ref_validity_for_init_expr(_self_, _102648_left_mut,_102737_d,_102752_error_token)))) {
			return false;
		};
	};
	jule::Ptr<_1e0e6a4d8_AssignTypeChecker> _103817_atc = jule::new_ptr<_1e0e6a4d8_AssignTypeChecker>(_1e0e6a4d8_AssignTypeChecker{._field_s=_self_, ._field_d=_102737_d, ._field_error_token=_102752_error_token});;
	return _1e0e6abae_check_validity(_103817_atc.ptr());
}



inline jule::Bool _1e0e265b5_check_type_alias_decl_kind(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed77ae84_TypeAlias>& _104651_ta, jule::Trait<_1ed7974de_Lookup> _104671_l) {
	jule::Bool _104684_ok = jule::Bool();
	jule::Ptr<_1e0e77eeb_SymbolTable> _104717_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e0e1dc3e_set_current_file(_self_.ptr(), _104717_old);
	});;
	if ((_104651_ta.get()._field_token != nullptr)) {
		jule::Ptr<_1e0e77eeb_SymbolTable> _105221_file = _1e0e1aa4e_find_file(_self_.get()._field_files,_104651_ta.get()._field_token.get()._field_file);;
		if ((_105221_file != nullptr)) {
			_1e0e1dc3e_set_current_file(_self_.ptr(), _105221_file);
		};
	};
	_104684_ok=_1e0e22391_check_type_with_refers(_self_, _104651_ta.get()._field_kind,_104671_l,jule::new_ptr<_1ed78915c_Referencer>(_1ed78915c_Referencer{._field_ident=_104651_ta.get()._field_ident, ._field_owner=jule::Any(_104651_ta), ._field_refs=(&(_104651_ta.get()._field_refers))}));
	if (((_104684_ok && (_1ed77e99e_arr(_104651_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1ed77e99e_arr(_104651_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto)) {
		_1e0e1e107_push_err(_self_.ptr(), _104651_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_104684_ok=false;
	};
	return _104684_ok;
}



inline void _1e0e268e5_check_type_alias_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed77ae84_TypeAlias>& _106946_ta, jule::Trait<_1ed7974de_Lookup> _106966_l) {
	if (_1dd996940_is_ignore_ident(_106946_ta.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _106946_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e0e265b5_check_type_alias_decl_kind(_self_, _106946_ta,_106966_l);
}



inline void _1e0e26b8c_check_type_alias_decl_dup(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1ed77ae84_TypeAlias>& _107750_ta) {
	if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_107750_ta)),_107750_ta.get()._field_ident,_107750_ta.get()._field_cpp_linked)) {
		_1e0e1e107_push_err(_self_.ptr(), _107750_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_107750_ta.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e0e265b5_check_type_alias_decl_kind(_self_, _107750_ta,jule::Trait<_1ed7974de_Lookup>(_self_, 3));
}



inline jule::Bool _1e0e26e12_check_type_alias_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _108644_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ace5bb8e:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77ae84_TypeAlias> _108721_ta = *it;
			{
				_1e0e26b8c_check_type_alias_decl_dup(_self_, _108721_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_108644_ok = false;
					return _108644_ok;
				};
			}
			_iter_next_1ace5bb8e:;
			++it;
			goto _iter_begin_1ace5bb8e;
		}
		_iter_end_1ace5bb8e:;
	};
	_108644_ok = true;
	return _108644_ok;
}



inline void _1ace6dae6_check_enum_items_dup(_1e0e1b3bd_Sema* _self_, jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>> _109842_items) {
	{
		auto &expr = _109842_items;
		auto it = expr.begin();
		_iter_begin_1ace6ecd4:;
		if (it != expr.end()) {
			jule::Ptr<_1e04ed4c8_EnumItem> &_109916_item = *it;
			{
				if (_109916_item.get()._field_ident.empty()) {
					goto _iter_next_1ace6ecd4;
				} else if (_1dd996940_is_ignore_ident(_109916_item.get()._field_ident)) {
					_1e0e1e107_push_err(&(*_self_), _109916_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _109842_items;
						auto it = expr.begin();
						_iter_begin_1ace718b8:;
						if (it != expr.end()) {
							jule::Ptr<_1e04ed4c8_EnumItem> &_110524_citem = *it;
							{
								if ((_109916_item == _110524_citem)) {
									goto _iter_end_1ace718b8;
								} else if ((_109916_item.get()._field_ident == _110524_citem.get()._field_ident)) {
									_1e0e1e107_push_err(&(*_self_), _109916_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109916_item.get()._field_ident)}));
									_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1ace718b8;
								};
							}
							_iter_next_1ace718b8:;
							++it;
							goto _iter_begin_1ace718b8;
						}
						_iter_end_1ace718b8:;
					};
				};
			}
			_iter_next_1ace6ecd4:;
			++it;
			goto _iter_begin_1ace6ecd4;
		}
		_iter_end_1ace6ecd4:;
	};
}

inline void _1ace7a152_check_enum_items_dup(_1e0e1b3bd_Sema* _self_, jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>> _109842_items) {
	{
		auto &expr = _109842_items;
		auto it = expr.begin();
		_iter_begin_1ace7b2eb:;
		if (it != expr.end()) {
			jule::Ptr<_1e05b1316_TypeEnumItem> &_109916_item = *it;
			{
				if (_109916_item.get()._field_ident.empty()) {
					goto _iter_next_1ace7b2eb;
				} else if (_1dd996940_is_ignore_ident(_109916_item.get()._field_ident)) {
					_1e0e1e107_push_err(&(*_self_), _109916_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _109842_items;
						auto it = expr.begin();
						_iter_begin_1ace7cdd0:;
						if (it != expr.end()) {
							jule::Ptr<_1e05b1316_TypeEnumItem> &_110524_citem = *it;
							{
								if ((_109916_item == _110524_citem)) {
									goto _iter_end_1ace7cdd0;
								} else if ((_109916_item.get()._field_ident == _110524_citem.get()._field_ident)) {
									_1e0e1e107_push_err(&(*_self_), _109916_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_109916_item.get()._field_ident)}));
									_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1ace7cdd0;
								};
							}
							_iter_next_1ace7cdd0:;
							++it;
							goto _iter_begin_1ace7cdd0;
						}
						_iter_end_1ace7cdd0:;
					};
				};
			}
			_iter_next_1ace7b2eb:;
			++it;
			goto _iter_begin_1ace7b2eb;
		}
		_iter_end_1ace7b2eb:;
	};
}



inline void _1e0e2740c_check_enum_items_str(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e057b8b9_Enum>& _111845_e) {
	jule::Ptr<_1e0e7ea19_Eval> _111917_eval = _1e0e23e0e_eval(_self_, jule::Trait<_1ed7974de_Lookup>(_self_, 3));;
	{
		auto &expr = _111845_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ace5d83e:;
		if (it != expr.end()) {
			jule::Ptr<_1e04ed4c8_EnumItem> _112021_item = *it;
			{
				if (_1e02006a3_auto_expr(_112021_item.ptr())) {
					_112021_item.get()._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_data=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_constant=static__1e0d4e642_new_str(_112021_item.get()._field_ident)})});
					_112021_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_112021_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1e0e7ce9b_Data> _112925_d = _1e0e99cdc_eval_expr(_111917_eval, _112021_item.get()._field_value.get()._field_expr);;
					if ((_112925_d == nullptr)) {
						goto _iter_next_1ace5d83e;
					};
					if ((!(_1e0e7d85e_is_const(_112925_d.ptr())))) {
						_1e0e1e107_push_err(_self_.ptr(), _112021_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e0e24409_check_assign_type(_self_, false,_111845_e.get()._field_kind.get()._field_kind,_112925_d,_112021_item.get()._field_token);
					_112021_item.get()._field_value.get()._field_data=_112925_d;
				};
			}
			_iter_next_1ace5d83e:;
			++it;
			goto _iter_begin_1ace5d83e;
		}
		_iter_end_1ace5d83e:;
	};
}



inline void _1e0e27682_check_enum_items_int(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e057b8b9_Enum>& _114445_e) {
	jule::Ptr<_1ed781693_Prim> _114513_prim = _1ed77dc89_prim(_114445_e.get()._field_kind.get()._field_kind.ptr());;
	jule::U64 _114617_max = static_cast<jule::U64>(_1e0de44b7_max(_1ed781a06_to_str(_114513_prim.ptr())));;
	jule::Ptr<_1e0e7ea19_Eval> _114717_eval = _1e0e23e0e_eval(_self_, jule::Trait<_1ed7974de_Lookup>(_self_, 3));;
	{
		auto &expr = _114445_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ace63eb5:;
		if (it != expr.end()) {
			jule::I32 _114814_i = it - expr.begin();
			jule::Ptr<_1e04ed4c8_EnumItem> _114821_item = *it;
			{
				if ((_114617_max == 0LLU)) {
					_1e0e1e107_push_err(_self_.ptr(), _114821_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_114617_max)--;
				};
				if (_1e02006a3_auto_expr(_114821_item.ptr())) {
					_114821_item.get()._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_data=jule::new_ptr<_1e0e7ce9b_Data>()});
					{
						
						if (_1e0de9423_is_sig_int(_1ed781a06_to_str(_114513_prim.ptr()))) {
							_case_begin_1ace663e6:;
							{
								_114821_item.get()._field_value.get()._field_data.get()._field_constant=static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>((_114617_max - (_114617_max - static_cast<jule::U64>(_114814_i))))));
							}
						}
						else {
							_case_begin_1ace66061:;
							{
								_114821_item.get()._field_value.get()._field_data.get()._field_constant=static__1e0d4e103_new_u64(static_cast<jule::U64>((_114617_max - (_114617_max - static_cast<jule::U64>(_114814_i)))));
							}
						}
						_match_end_1ace6600b:;
					};
					_114821_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_114821_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1e0e7ce9b_Data> _116625_d = _1e0e99cdc_eval_expr(_114717_eval, _114821_item.get()._field_value.get()._field_expr);;
					if ((_116625_d == nullptr)) {
						goto _iter_next_1ace63eb5;
					};
					if ((!(_1e0e7d85e_is_const(_116625_d.ptr())))) {
						_1e0e1e107_push_err(_self_.ptr(), _114821_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1e0e24409_check_assign_type(_self_, false,_114445_e.get()._field_kind.get()._field_kind,_116625_d,_114821_item.get()._field_token);
					_114821_item.get()._field_value.get()._field_data=_116625_d;
				};
			}
			_iter_next_1ace63eb5:;
			++it;
			_114814_i++;
			goto _iter_begin_1ace63eb5;
		}
		_iter_end_1ace63eb5:;
	};
}



inline void _1e0e27907_check_enum_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e057b8b9_Enum>& _118140_e) {
	if (_1dd996940_is_ignore_ident(_118140_e.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _118140_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_118140_e)),_118140_e.get()._field_ident,false)) {
		_1e0e1e107_push_err(_self_.ptr(), _118140_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_118140_e.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_118140_e.get()._field_items.len() == 0LL)) {
		_1e0e1e107_push_err(_self_.ptr(), _118140_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_118140_e.get()._field_ident)}));
	};
	_1ace6dae6_check_enum_items_dup(_self_.ptr(), _118140_e.get()._field_items);
	if ((_118140_e.get()._field_kind != nullptr)) {
		if ((!(_1e0e22748_check_type(_self_, _118140_e.get()._field_kind,jule::Trait<_1ed7974de_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_118140_e.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1ed781693_Prim> _120817_t = _1ed77dc89_prim(_118140_e.get()._field_kind.get()._field_kind.ptr());;
	if ((_120817_t == nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _118140_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ed784652_is_str(_120817_t.ptr())) {
			_case_begin_1ace75317:;
			{
				_1e0e2740c_check_enum_items_str(_self_, _118140_e);
			}
		}
		else if (_1e0de99a6_is_int(_1ed781a06_to_str(_120817_t.ptr()))) {
			_case_begin_1ace7505e:;
			{
				_1e0e27682_check_enum_items_int(_self_, _118140_e);
			}
		}
		else {
			_case_begin_1ace73557:;
			{
				_1e0e1e107_push_err(_self_.ptr(), _118140_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ace743e3:;
	};
}



inline void _1e0e27b7c_check_type_enum_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e04c643a_TypeEnum>& _122545_e) {
	if (_1dd996940_is_ignore_ident(_122545_e.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _122545_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_122545_e)),_122545_e.get()._field_ident,false)) {
		_1e0e1e107_push_err(_self_.ptr(), _122545_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_122545_e.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_122545_e.get()._field_items.len() == 0LL)) {
		_1e0e1e107_push_err(_self_.ptr(), _122545_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_122545_e.get()._field_ident)}));
		return;;
	};
	_1ace7a152_check_enum_items_dup(_self_.ptr(), _122545_e.get()._field_items);
	{
		auto &expr = _122545_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ace767ad:;
		if (it != expr.end()) {
			jule::Ptr<_1e05b1316_TypeEnumItem> _123921_item = *it;
			{
				if ((_123921_item.get()._field_kind == nullptr)) {
					_1e0e1e107_push_err(_self_.ptr(), _123921_item.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1ace767ad;
				};
				jule::Bool _124417_ok = _1e0e22748_check_type(_self_, _123921_item.get()._field_kind,jule::Trait<_1ed7974de_Lookup>(_self_, 3));;
				if ((!(_124417_ok))) {
					goto _iter_next_1ace767ad;
				};
				jule::Ptr<_1ed781693_Prim> _124817_p = _1ed77dc89_prim(_123921_item.get()._field_kind.get()._field_kind.ptr());;
				if (((_124817_p != nullptr) && _1ed7848b6_is_any(_124817_p.ptr()))) {
					_1e0e1e107_push_err(_self_.ptr(), _123921_item.get()._field_token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ace767ad:;
			++it;
			goto _iter_begin_1ace767ad;
		}
		_iter_end_1ace767ad:;
	};
	if ((_122545_e.get()._field_items.len() == 1LL)) {
		jule::Ptr<_1e05b1316_TypeEnumItem> _125421_item = _122545_e.get()._field_items[0LL];;
		_1ed77bbbb_TypeKind _125517_tk = _1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_122545_e, 4)};;
		if (((_125421_item.get()._field_kind.get()._field_kind != nullptr) && _1ed77c381_equals(_125421_item.get()._field_kind.get()._field_kind, ((jule::Ptr<_1ed77bbbb_TypeKind>)((&(_125517_tk))))))) {
			_1e0e1e107_push_err(_self_.ptr(), _125421_item.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1e04aae14_to_str(_122545_e.ptr()))}));
		};
	};
}



inline jule::Bool _1e0e27de1_check_enum_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _126538_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1ace84a74:;
		if (it != expr.end()) {
			jule::Ptr<_1e057b8b9_Enum> _126621_e = *it;
			{
				_1e0e27907_check_enum_decl(_self_, _126621_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_126538_ok = false;
					return _126538_ok;
				};
			}
			_iter_next_1ace84a74:;
			++it;
			goto _iter_begin_1ace84a74;
		}
		_iter_end_1ace84a74:;
	};
	_126538_ok = true;
	return _126538_ok;
}



inline jule::Bool _1e0e28155_check_type_enum_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _127843_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ace86191:;
		if (it != expr.end()) {
			jule::Ptr<_1e04c643a_TypeEnum> _127921_e = *it;
			{
				_1e0e27b7c_check_type_enum_decl(_self_, _127921_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_127843_ok = false;
					return _127843_ok;
				};
			}
			_iter_next_1ace86191:;
			++it;
			goto _iter_begin_1ace86191;
		}
		_iter_end_1ace86191:;
	};
	_127843_ok = true;
	return _127843_ok;
}



inline jule::Bool _1e0e28463_check_decl_generics(_1e0e1b3bd_Sema* _self_, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>& _129039_generics) {
	jule::Bool _129072_ok = jule::Bool();
	_129072_ok=true;
	{
		auto &expr = _129039_generics;
		auto it = expr.begin();
		_iter_begin_1ace8778b:;
		if (it != expr.end()) {
			jule::I32 _129213_i = it - expr.begin();
			jule::Ptr<_1e013165b_GenericDecl> &_129216_g = *it;
			{
				if (_1dd996940_is_ignore_ident(_129216_g.get()._field_ident)) {
					_1e0e1e107_push_err(&(*_self_), _129216_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_129072_ok=false;
					goto _iter_next_1ace8778b;
				};
				_julec_label_duplication_lookup:;
				{
					auto &expr = _129039_generics;
					auto it = expr.begin();
					_iter_begin_1ace893b4:;
					if (it != expr.end()) {
						jule::I32 _130117_j = it - expr.begin();
						jule::Ptr<_1e013165b_GenericDecl> &_130120_ct = *it;
						{
							{
								
								if ((_130117_j >= _129213_i)) {
									_case_begin_1ace89eca:;
									{
										goto _iter_end_1ace893b4;
									}
								}
								else if ((_129216_g.get()._field_ident == _130120_ct.get()._field_ident)) {
									_case_begin_1ace8a052:;
									{
										_1e0e1e107_push_err(&(*_self_), _129216_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129216_g.get()._field_ident)}));
										_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_129072_ok=false;
										goto _iter_end_1ace893b4;
									}
								}
								_match_end_1ace89dba:;
							};
						}
						_iter_next_1ace893b4:;
						++it;
						_130117_j++;
						goto _iter_begin_1ace893b4;
					}
					_iter_end_1ace893b4:;
				};
			}
			_iter_next_1ace8778b:;
			++it;
			_129213_i++;
			goto _iter_begin_1ace8778b;
		}
		_iter_end_1ace8778b:;
	};
	return _129072_ok;
}



inline jule::Bool _1e0e28793_check_fn_decl_params_dup(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0144581_Fn>& _131744_f) {
	jule::Bool _131754_ok = jule::Bool();
	_131754_ok=true;
	_julec_label_check:;
	{
		auto &expr = _131744_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ace8c63c:;
		if (it != expr.end()) {
			jule::I32 _132013_i = it - expr.begin();
			jule::Ptr<_1e0144394_Param> &_132016_p = *it;
			{
				{
					auto &expr = _131744_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ace8d1ed:;
					if (it != expr.end()) {
						jule::Ptr<_1e013165b_GenericDecl> &_132220_g = *it;
						{
							if ((_132016_p.get()._field_ident == _132220_g.get()._field_ident)) {
								_131754_ok=false;
								_1e0e1e107_push_err(&(*_self_), _132016_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132016_p.get()._field_ident)}));
								_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1ace8c63c;
							};
						}
						_iter_next_1ace8d1ed:;
						++it;
						goto _iter_begin_1ace8d1ed;
					}
					_iter_end_1ace8d1ed:;
				};
				_julec_label_params_lookup:;
				{
					auto &expr = _131744_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ace8d4d9:;
					if (it != expr.end()) {
						jule::I32 _133217_j = it - expr.begin();
						jule::Ptr<_1e0144394_Param> &_133220_jp = *it;
						{
							{
								
								if ((_133217_j >= _132013_i)) {
									_case_begin_1ace90893:;
									{
										goto _iter_end_1ace8d4d9;
									}
								}
								else if ((_1dd996bd7_is_anon_ident(_132016_p.get()._field_ident) || _1dd996bd7_is_anon_ident(_133220_jp.get()._field_ident))) {
									_case_begin_1ace9091a:;
									{
										goto _iter_end_1ace8d4d9;
									}
								}
								else if ((_132016_p.get()._field_ident == _133220_jp.get()._field_ident)) {
									_case_begin_1ace90992:;
									{
										_131754_ok=false;
										_1e0e1e107_push_err(&(*_self_), _132016_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_132016_p.get()._field_ident)}));
										_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1ace8c63c;
									}
								}
								_match_end_1ace90772:;
							};
						}
						_iter_next_1ace8d4d9:;
						++it;
						_133217_j++;
						goto _iter_begin_1ace8d4d9;
					}
					_iter_end_1ace8d4d9:;
				};
			}
			_iter_next_1ace8c63c:;
			++it;
			_132013_i++;
			goto _iter_begin_1ace8c63c;
		}
		_iter_end_1ace8c63c:;
	};
	return _131754_ok;
}



inline jule::Bool _1e0e28ad4_check_fn_decl_result_dup(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0144581_Fn>& _135144_f) {
	jule::Bool _135154_ok = jule::Bool();
	_135154_ok=true;
	if (_1e0105894_is_void(_135144_f.ptr())) {
		return _135154_ok;
	};
	{
		auto &expr = _135144_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ace93a94:;
		if (it != expr.end()) {
			jule::I32 _135813_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> &_135816_v = *it;
			{
				if ((_1dd996940_is_ignore_ident(_135816_v.get()._field_kind) || _1dd996bd7_is_anon_ident(_135816_v.get()._field_kind))) {
					goto _iter_next_1ace93a94;
				};
				{
					auto &expr = _135144_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ace94ec4:;
					if (it != expr.end()) {
						jule::Ptr<_1e013165b_GenericDecl> &_136320_g = *it;
						{
							if ((_135816_v.get()._field_kind == _136320_g.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ace94ec4:;
						++it;
						goto _iter_begin_1ace94ec4;
					}
					_iter_end_1ace94ec4:;
				};
				{
					auto &expr = _135144_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ace960b3:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144394_Param> &_136920_p = *it;
						{
							if ((_135816_v.get()._field_kind == _136920_p.get()._field_ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ace960b3:;
						++it;
						goto _iter_begin_1ace960b3;
					}
					_iter_end_1ace960b3:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _135144_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1ace972a1:;
					if (it != expr.end()) {
						jule::I32 _137717_j = it - expr.begin();
						jule::Ptr<_1dd9941e0_Token> &_137720_jv = *it;
						{
							{
								
								if ((_137717_j >= _135813_i)) {
									_case_begin_1ace97da6:;
									{
										goto _iter_end_1ace972a1;
									}
								}
								else if ((_137720_jv.get()._field_kind == _135816_v.get()._field_kind)) {
									_case_begin_1ace97e2d:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1ace97c96:;
							};
						}
						_iter_next_1ace972a1:;
						++it;
						_137717_j++;
						goto _iter_begin_1ace972a1;
					}
					_iter_end_1ace972a1:;
				};
				goto _iter_next_1ace93a94;
				_julec_label_exist:;
				_1e0e1e107_push_err(&(*_self_), _135816_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_135816_v.get()._field_kind)}));
				_1e0e1e426_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_135154_ok=false;
			}
			_iter_next_1ace93a94:;
			++it;
			_135813_i++;
			goto _iter_begin_1ace93a94;
		}
		_iter_end_1ace93a94:;
	};
	return _135154_ok;
}



inline void _1e0e28d8c_check_fn_decl_prototype(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _139848_f) {
	if ((_139848_f.get()._field_exceptional && _139848_f.get()._field_cpp_linked)) {
		_1e0e1e107_push_err(_self_.ptr(), _139848_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_139848_f.get()._field_exceptional) {
		if (_1e00a944c_is_entry_point(_139848_f.ptr())) {
			_1e0e1e107_push_err(_self_.ptr(), _139848_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1e00e98aa_is_init(_139848_f.ptr())) {
			_1e0e1e107_push_err(_self_.ptr(), _139848_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1e0e28463_check_decl_generics(_self_.ptr(), _139848_f.get()._field_generics)))) {
			_case_begin_1ace9b4b4:;
		}
		else if ((!(_1e0e28793_check_fn_decl_params_dup(_self_.ptr(), _139848_f)))) {
			_case_begin_1ace9b53b:;
		}
		else if ((!(_1e0e28ad4_check_fn_decl_result_dup(_self_.ptr(), _139848_f)))) {
			_case_begin_1ace9b5b3:;
		}
		_match_end_1ace9b393:;
	};
}



inline void _1e0e29145_check_trait_decl_method(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _141948_f) {
	if (_1dd996940_is_ignore_ident(_141948_f.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _141948_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_141948_f.get()._field_sema=_self_;
	_1e0e28d8c_check_fn_decl_prototype(_self_, _141948_f);
	jule::Ptr<_1e01457c4_FnIns> _142617_ins = _1e01098ba_instance(_141948_f);;
	_1e0e25680_reload_fn_ins_types(_self_, _142617_ins);
	_142617_ins.get()._field_reloaded=true;
	_1e012185a_append_instance(_141948_f.ptr(), _142617_ins);
}



inline void _1e0e293ed_check_trait_decl_methods(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0567d06_Trait>& _143249_t) {
	{
		auto &expr = _143249_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1acea170b:;
		if (it != expr.end()) {
			jule::I32 _143314_i = it - expr.begin();
			jule::Ptr<_1e0144581_Fn> _143321_f = *it;
			{
				_1e0e29145_check_trait_decl_method(_self_, _143321_f);
				_143249_t.get()._field_mutable=(_143249_t.get()._field_mutable || _143321_f.get()._field_params[0LL].get()._field_mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _143249_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1acea30c0:;
					if (it != expr.end()) {
						jule::I32 _144417_j = it - expr.begin();
						jule::Ptr<_1e0144581_Fn> _144420_jf = *it;
						{
							{
								
								if ((_144417_j >= _143314_i)) {
									_case_begin_1acea41d1:;
									{
										goto _iter_end_1acea30c0;
									}
								}
								else if ((_143321_f.get()._field_ident == _144420_jf.get()._field_ident)) {
									_case_begin_1acea4258:;
									{
										_1e0e1e107_push_err(_self_.ptr(), _143321_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_143321_f.get()._field_ident)}));
										_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1acea30c0;
									}
								}
								_match_end_1acea40c1:;
							};
						}
						_iter_next_1acea30c0:;
						++it;
						_144417_j++;
						goto _iter_begin_1acea30c0;
					}
					_iter_end_1acea30c0:;
				};
			}
			_iter_next_1acea170b:;
			++it;
			_143314_i++;
			goto _iter_begin_1acea170b;
		}
		_iter_end_1acea170b:;
	};
}



inline void _1e0e29684_check_trait_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0567d06_Trait>& _146341_t) {
	if (_1dd996940_is_ignore_ident(_146341_t.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _146341_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_146341_t)),_146341_t.get()._field_ident,false)) {
		_1e0e1e107_push_err(_self_.ptr(), _146341_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_146341_t.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e0e293ed_check_trait_decl_methods(_self_, _146341_t);
}



inline jule::Bool _1e0e298e8_check_trait_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _147539_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1acea8c1e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> _147621_t = *it;
			{
				_1e0e29684_check_trait_decl(_self_, _147621_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_147539_ok = false;
					return _147539_ok;
				};
			}
			_iter_next_1acea8c1e:;
			++it;
			goto _iter_begin_1acea8c1e;
		}
		_iter_end_1acea8c1e:;
	};
	_147539_ok = true;
	return _147539_ok;
}



inline jule::Bool _1e0e29cc2_check_trait_impl_methods(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0567d06_Trait>& _148748_base, jule::Ptr<_1e0159a3b_Impl>& _148763_ipl) {
	jule::Bool _148777_ok = jule::Bool();
	_148777_ok=true;
	{
		auto &expr = _148763_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aceaa7c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> &_148916_f = *it;
			{
				if ((_1e01ccd78_find_method(_148748_base.ptr(), _148916_f.get()._field_ident) == nullptr)) {
					_1e0e1e107_push_err(&(*_self_), _148916_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_148748_base.get()._field_ident),jule::Any(_148916_f.get()._field_ident)}));
					_148777_ok=false;
				};
			}
			_iter_next_1aceaa7c0:;
			++it;
			goto _iter_begin_1aceaa7c0;
		}
		_iter_end_1aceaa7c0:;
	};
	return _148777_ok;
}



inline jule::Bool _1e0e2a18a_impl_to_struct(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _149839_dest, jule::Ptr<_1e0159a3b_Impl>& _149859_ipl) {
	jule::Bool _149873_ok = jule::Bool();
	_149873_ok=true;
	{
		auto &expr = _149859_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aceacb57:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _150221_f = *it;
			{
				if (((_1e0100460_find_method(_149839_dest.ptr(), _150221_f.get()._field_ident,_150221_f.get()._field_statically) != nullptr) || (_1e0103045_find_field(_149839_dest.ptr(), _150221_f.get()._field_ident) != nullptr))) {
					_1e0e1e107_push_err(_self_.ptr(), _150221_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_149839_dest.get()._field_ident),jule::Any(_150221_f.get()._field_ident)}));
					_149873_ok=false;
					goto _iter_next_1aceacb57;
				};
				if (((_149839_dest.get()._field_generics.len() > 0LL) && (_150221_f.get()._field_generics.len() > 0LL))) {
					{
						auto &expr = _150221_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1aceb04b7:;
						if (it != expr.end()) {
							jule::Ptr<_1e013165b_GenericDecl> _151024_fg = *it;
							{
								{
									auto &expr = _149839_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1aceb0c6a:;
									if (it != expr.end()) {
										jule::Ptr<_1e013165b_GenericDecl> _151128_dg = *it;
										{
											if ((_151024_fg.get()._field_ident == _151128_dg.get()._field_ident)) {
												_1e0e1e107_push_err(_self_.ptr(), _151024_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_149873_ok=false;
											};
										}
										_iter_next_1aceb0c6a:;
										++it;
										goto _iter_begin_1aceb0c6a;
									}
									_iter_end_1aceb0c6a:;
								};
							}
							_iter_next_1aceb04b7:;
							++it;
							goto _iter_begin_1aceb04b7;
						}
						_iter_end_1aceb04b7:;
					};
				};
				_1e0e2004d_check_directives(_self_, _150221_f.get()._field_directives,jule::Any(_150221_f));
				_150221_f.get()._field_sema=_self_;
				_150221_f.get()._field_owner=_149839_dest;
				_149839_dest.get()._field_methods = jule::alloc_for_append(_149839_dest.get()._field_methods,1);_149839_dest.get()._field_methods.__push(_150221_f);;
			}
			_iter_next_1aceacb57:;
			++it;
			goto _iter_begin_1aceacb57;
		}
		_iter_end_1aceacb57:;
	};
	{
		auto &expr = _149859_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1aceb3531:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _152721_v = *it;
			{
				;
				if (((_1e0100460_find_method(_149839_dest.ptr(), _152721_v.get()._field_ident,true) != nullptr) || (_1e010164d_find_static(_149839_dest.ptr(), _152721_v.get()._field_ident) != nullptr))) {
					_1e0e1e107_push_err(_self_.ptr(), _152721_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_149839_dest.get()._field_ident),jule::Any(_152721_v.get()._field_ident)}));
					_149873_ok=false;
					goto _iter_next_1aceb3531;
				};
				_1e0e2ac29_check_var_decl(_self_, _152721_v,jule::Trait<_1ed7974de_Lookup>(_self_, 3));
				_1e0e2e39d_check_type_var(_self_, _152721_v,jule::Trait<_1ed7974de_Lookup>(_self_, 3));
				_149839_dest.get()._field_statics = jule::alloc_for_append(_149839_dest.get()._field_statics,1);_149839_dest.get()._field_statics.__push(_152721_v);;
			}
			_iter_next_1aceb3531:;
			++it;
			goto _iter_begin_1aceb3531;
		}
		_iter_end_1aceb3531:;
	};
	return _149873_ok;
}



inline void _1e0e2a410_impl_trait(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0159a3b_Impl>& _154335_decl) {
	jule::Ptr<_1ed77bbbb_TypeKind> _154417_base_t = _1e0e232e8_select_type(_self_, _154335_decl.get()._field_base);;
	if ((_154417_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e0567d06_Trait> _154817_base = _1ed780450_trt(_154417_base_t.ptr());;
	if ((_154817_base == nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _154335_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_154417_base_t.ptr()))}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _155517_dest_t = _1e0e232e8_select_type(_self_, _154335_decl.get()._field_dest);;
	if ((_155517_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e010a05d_StructIns> _155917_dest_s = _1ed7801db_strct(_155517_dest_t.ptr());;
	if ((_155917_dest_s == nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _154335_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_155517_dest_t.ptr()))}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e010261b_Struct> _156617_dest = _155917_dest_s.get()._field_decl;;
	if ((_1dd999ea4_dir(_156617_dest.get()._field_token.get()._field_file.ptr()) != _1dd999ea4_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e0e1e107_push_err(_self_.ptr(), _154335_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_154817_base.get()._field_implemented = jule::alloc_for_append(_154817_base.get()._field_implemented,1);_154817_base.get()._field_implemented.__push(_156617_dest);;
	_156617_dest.get()._field_implements = jule::alloc_for_append(_156617_dest.get()._field_implements,1);_156617_dest.get()._field_implements.__push(_154817_base);;
	if ((_154335_decl.get()._field_statics.len() > 0LL)) {
		_1e0e1e107_push_err(_self_.ptr(), _154335_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1e0e29cc2_check_trait_impl_methods(_self_.ptr(), _154817_base,_154335_decl)))) {
			_case_begin_1acebddaa:;
			{
				return;;
			}
		}
		else if ((!(_1e0e2a18a_impl_to_struct(_self_, _156617_dest,_154335_decl)))) {
			_case_begin_1acebde21:;
			{
				return;;
			}
		}
		_match_end_1acebdb57:;
	};
}



inline void _1e0e2a685_impl_struct(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0159a3b_Impl>& _158836_decl) {
	jule::Ptr<_1ed77bbbb_TypeKind> _158917_dest_t = _1e0e232e8_select_type(_self_, _158836_decl.get()._field_dest);;
	if ((_158917_dest_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1e010a05d_StructIns> _159317_dest_s = _1ed7801db_strct(_158917_dest_t.ptr());;
	if ((_159317_dest_s == nullptr)) {
		_1e0e1e107_push_err(_self_.ptr(), _158836_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_158917_dest_t.ptr()))}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e010261b_Struct> _160017_dest = _159317_dest_s.get()._field_decl;;
	if ((_1dd999ea4_dir(_160017_dest.get()._field_token.get()._field_file.ptr()) != _1dd999ea4_dir(_self_.get()._field_file.get()._field_file.ptr()))) {
		_1e0e1e107_push_err(_self_.ptr(), _158836_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1e0e2a18a_impl_to_struct(_self_, _160017_dest,_158836_decl)))) {
			_case_begin_1acec1000:;
			{
				return;;
			}
		}
		_match_end_1acec3442:;
	};
}



inline void _1e0e2a90a_impl_impl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0159a3b_Impl>& _161334_decl) {
	{
		
		if (_1e05711d8_is_trait_impl(_161334_decl.ptr())) {
			_case_begin_1acec4894:;
			{
				_1e0e2a410_impl_trait(_self_, _161334_decl);
			}
		}
		else if (_1e0572618_is_struct_impl(_161334_decl.ptr())) {
			_case_begin_1acec491b:;
			{
				_1e0e2a685_impl_struct(_self_, _161334_decl);
			}
		}
		_match_end_1acec4784:;
	};
}



inline void _1e0e2ac29_check_var_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0e366e6_Var>& _162439_decl, jule::Trait<_1ed7974de_Lookup> _162455_l) {
	if (_1dd996940_is_ignore_ident(_162439_decl.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1e0e36d12_is_type_inferred(_162439_decl.ptr())) {
		if ((!(_1e0e36a9d_is_initialized(_162439_decl.ptr())))) {
			_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1e0e22748_check_type(_self_, _162439_decl.get()._field_kind,_162455_l);
	};
	if ((_162439_decl.get()._field_constant && _162439_decl.get()._field_reference)) {
		_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1e0e36a9d_is_initialized(_162439_decl.ptr())))) {
		if (_162439_decl.get()._field_constant) {
			_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_162439_decl.get()._field_statically) {
			_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_162439_decl.get()._field_reference) {
			_1e0e1e107_push_err(_self_.ptr(), _162439_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1e0e2ae9e_check_global_var_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0e366e6_Var>& _165646_decl) {
	if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_165646_decl)),_165646_decl.get()._field_ident,_165646_decl.get()._field_cpp_linked)) {
		_1e0e1e107_push_err(_self_.ptr(), _165646_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_165646_decl.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_165646_decl.get()._field_cpp_linked && _165646_decl.get()._field_constant)) {
		_1e0e1e107_push_err(_self_.ptr(), _165646_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_165646_decl.get()._field_cpp_linked)) && (!(_165646_decl.get()._field_constant))) && (!(_165646_decl.get()._field_statically)))) {
		_1e0e1e107_push_err(_self_.ptr(), _165646_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1e0e2004d_check_directives(_self_, _165646_decl.get()._field_directives,jule::Any(_165646_decl));
	_1e0e2ac29_check_var_decl(_self_, _165646_decl,jule::Trait<_1ed7974de_Lookup>(_self_, 3));
}



inline jule::Bool _1e0e2b213_check_global_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _167540_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1aced09c1:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _167621_decl = *it;
			{
				_1e0e2ae9e_check_global_var_decl(_self_, _167621_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_167540_ok = false;
					return _167540_ok;
				};
			}
			_iter_next_1aced09c1:;
			++it;
			goto _iter_begin_1aced09c1;
		}
		_iter_end_1aced09c1:;
	};
	_167540_ok = true;
	return _167540_ok;
}



inline jule::Bool _1e0e2b5dc_check_struct_trait_impl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _168748_strct, jule::Ptr<_1e0567d06_Trait>& _168769_trt) {
	jule::Bool _168784_ok = jule::Bool();
	{
		auto &expr = _168769_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1aced23da:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _168821_tf = *it;
			{
				jule::Bool _168921_exist = false;;
				jule::Ptr<_1e0144581_Fn> _169021_sf = _1e0100460_find_method(_168748_strct.ptr(), _168821_tf.get()._field_ident,_168821_tf.get()._field_statically);;
				jule::Ptr<_1e01457c4_FnIns> _169117_tf_k = _1e0e25361_get_trait_check_fn_kind(_self_, _168821_tf);;
				if ((_169021_sf != nullptr)) {
					jule::Ptr<_1e01457c4_FnIns> _169325_sf_k = _1e0e25361_get_trait_check_fn_kind(_self_, _169021_sf);;
					_168921_exist=(((_169117_tf_k.get()._field_decl.get()._field_public == _169325_sf_k.get()._field_decl.get()._field_public) && (_169117_tf_k.get()._field_decl.get()._field_ident == _169325_sf_k.get()._field_decl.get()._field_ident)) && _1e0145e45_equals(_169117_tf_k, jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_169325_sf_k, 1)})));
				};
				if (_168921_exist) {
					jule::Ptr<_1e0124e35_Directive> _169921_d = _1ed776754_find_directive(_169021_sf.get()._field_directives,jule::Str("deprecated", 10));;
					if ((_169921_d != nullptr)) {
						_1e0e1e107_push_err(_self_.ptr(), _169921_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					_168784_ok=false;
				} else {
					;
					jule::Str _170625_s = _1e0146dd0_get_kind_str(_169117_tf_k.ptr(), true);;
					if (_168821_tf.get()._field_public) {
						(_170625_s).buffer.insert(0, (jule::Str("pub ", 4)));;
					};
					_1e0e1e107_push_err(_self_.ptr(), _168748_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_168769_trt.get()._field_ident),jule::Any(_170625_s)}));
					_168784_ok=false;
				};
			}
			_iter_next_1aced23da:;
			++it;
			goto _iter_begin_1aced23da;
		}
		_iter_end_1aced23da:;
	};
	return _168784_ok;
}



inline jule::Bool _1e0e2b90b_check_struct_impls(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _171743_s) {
	jule::Bool _171757_ok = jule::Bool();
	_171757_ok=true;
	{
		auto &expr = _171743_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1aced9216:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> _171921_trt = *it;
			{
				_171757_ok=(_1e0e2b5dc_check_struct_trait_impl(_self_, _171743_s,_171921_trt) && _171757_ok);
			}
			_iter_next_1aced9216:;
			++it;
			goto _iter_begin_1aced9216;
		}
		_iter_end_1aced9216:;
	};
	return _171757_ok;
}



inline jule::Bool _1e0e2bc19_check_struct_fields(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _172544_st) {
	jule::Bool _172559_ok = jule::Bool();
	_172559_ok=true;
	{
		auto &expr = _172544_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1aceda613:;
		if (it != expr.end()) {
			jule::Ptr<_1e010cc53_Field> _172721_f = *it;
			{
				_172721_f.get()._field_owner=_172544_st;
				{
					auto &expr = _172544_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1acedb0b4:;
					if (it != expr.end()) {
						jule::Ptr<_1e010cc53_Field> _172920_cf = *it;
						{
							if ((_172721_f == _172920_cf)) {
								goto _iter_end_1acedb0b4;
							} else if ((_172721_f.get()._field_ident == _172920_cf.get()._field_ident)) {
								_1e0e1e107_push_err(_self_.ptr(), _172721_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_172721_f.get()._field_ident)}));
								_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_172559_ok=false;
							};
						}
						_iter_next_1acedb0b4:;
						++it;
						goto _iter_begin_1acedb0b4;
					}
					_iter_end_1acedb0b4:;
				};
			}
			_iter_next_1aceda613:;
			++it;
			goto _iter_begin_1aceda613;
		}
		_iter_end_1aceda613:;
	};
	return _172559_ok;
}



inline void _1e0e2be8e_check_struct_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _174242_s) {
	if (_1dd996940_is_ignore_ident(_174242_s.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _174242_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_174242_s)),_174242_s.get()._field_ident,_174242_s.get()._field_cpp_linked)) {
		_1e0e1e107_push_err(_self_.ptr(), _174242_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_174242_s.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1e0e2004d_check_directives(_self_, _174242_s.get()._field_directives,jule::Any(_174242_s));
	{
		
		if ((!(_1e0e28463_check_decl_generics(_self_.ptr(), _174242_s.get()._field_generics)))) {
			_case_begin_1acee06c3:;
		}
		else if ((!(_1e0e2bc19_check_struct_fields(_self_, _174242_s)))) {
			_case_begin_1acee0739:;
		}
		else if ((!(_1e0e2b90b_check_struct_impls(_self_, _174242_s)))) {
			_case_begin_1acee07a0:;
		}
		_match_end_1acee0580:;
	};
}



inline jule::Bool _1e0e2c203_check_struct_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _176040_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1acee1dcd:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _176121_s = *it;
			{
				_1e0e2be8e_check_struct_decl(_self_, _176121_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_176040_ok = false;
					return _176040_ok;
				};
			}
			_iter_next_1acee1dcd:;
			++it;
			goto _iter_begin_1acee1dcd;
		}
		_iter_end_1acee1dcd:;
	};
	_176040_ok = true;
	return _176040_ok;
}



inline void _1e0e2c478_check_fn_decl(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _177338_f) {
	if (_1dd996940_is_ignore_ident(_177338_f.get()._field_ident)) {
		_1e0e1e107_push_err(_self_.ptr(), _177338_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1e0e2004d_check_directives(_self_, _177338_f.get()._field_directives,jule::Any(_177338_f));
	_177338_f.get()._field_sema=_self_;
	_1e0e28d8c_check_fn_decl_prototype(_self_, _177338_f);
	if (_1e0e1ec2e_is_duplicated_ident(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177338_f)),_177338_f.get()._field_ident,_177338_f.get()._field_cpp_linked)) {
		if ((_177338_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1e0144581_Fn> _178521_init = _1e0e1cbb6_find_fn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_178521_init != nullptr)) {
				return;;
			};
		};
		_1e0e1e107_push_err(_self_.ptr(), _177338_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177338_f.get()._field_ident)}));
		_1e0e1e426_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e0e2c6dc_check_fn_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	jule::Bool _179636_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1acee7796:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _179721_f = *it;
			{
				_1e0e2c478_check_fn_decl(_self_, _179721_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_179636_ok = false;
					return _179636_ok;
				};
			}
			_iter_next_1acee7796:;
			++it;
			goto _iter_begin_1acee7796;
		}
		_iter_end_1acee7796:;
	};
	_179636_ok = true;
	return _179636_ok;
}



inline void _1e0e2caa5_push_cycle_error(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e010261b_Struct>& _180832_st1, jule::Ptr<_1e010261b_Struct>& _180847_st2, jule::Str& _180866_message) {
	;
	jule::Str _181113_refers_to = _1dd65ae40_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_180832_st1.get()._field_ident),jule::Any(_180847_st2.get()._field_ident)}));;
	(_180866_message).buffer.insert(0, (((_1dd569b73_repeat(jule::Str(" ", 1),4LL) + _181113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e0e2d006_check_cross_cycle(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e010261b_Struct>& _181533_st1, jule::Ptr<_1e010261b_Struct>& _181548_st2, jule::Str& _181567_message) {
	{
		auto &expr = _181548_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1aceeacd8:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> &_181616_u = *it;
			{
				if ((_181616_u == _181533_st1)) {
					_1e0e2caa5_push_cycle_error(&(*_self_), _181548_st2,_181616_u,_181567_message);
					return false;
				};
				if ((!(_1e0e2d006_check_cross_cycle(&(*_self_), _181533_st1,_181616_u,_181567_message)))) {
					_1e0e2caa5_push_cycle_error(&(*_self_), _181548_st2,_181616_u,_181567_message);
					return false;
				};
			}
			_iter_next_1aceeacd8:;
			++it;
			goto _iter_begin_1aceeacd8;
		}
		_iter_end_1aceeacd8:;
	};
	return true;
}



inline jule::Bool _1e0e2d48a_check_struct_derive_illegal_cycles(_1e0e1b3bd_Sema* _self_, jule::Str _183153_derive, jule::Ptr<_1e010261b_Struct>& _183167_st1, jule::Ptr<_1ed77bbbb_TypeKind>& _183186_k) {
	jule::Bool _1831102_ok = jule::Bool();
	jule::Ptr<_1e010261b_Struct> _183217_st2 = _1ed794a80_get_struct_from_kind(_183186_k);;
	if ((_183217_st2 == nullptr)) {
		_1831102_ok = true;
		return _1831102_ok;
	};
	if ((_183167_st1 == _183217_st2)) {
		_1e0e1e107_push_err(&(*_self_), _183167_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_183153_derive),jule::Any(_183167_st1.get()._field_ident)}));
		_1831102_ok = false;
		return _1831102_ok;
	};
	jule::Str _184417_message = jule::Str();;
	if ((!(_1e0e2d006_check_cross_cycle(&(*_self_), _183167_st1,_183217_st2,_184417_message)))) {
		jule::Str _184721_err_msg = _184417_message;;
		_184417_message=jule::Str();
		_1e0e2caa5_push_cycle_error(&(*_self_), _183167_st1,_183217_st2,_184417_message);
		_184721_err_msg=(_184721_err_msg + _184417_message);
		_1e0e1e107_push_err(&(*_self_), _183167_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_183153_derive),jule::Any(_184721_err_msg)}));
		_1831102_ok = false;
		return _1831102_ok;
	};
	_1831102_ok = true;
	return _1831102_ok;
}



inline jule::Bool _1e0e2d7ba_check_struct_ins_derive_clone(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e010a05d_StructIns> _185852_st) {
	jule::Bool _185870_ok = jule::Bool();
	if ((!(_1e010a976_is_derives(_185852_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_185870_ok = true;
		return _185870_ok;
	};
	{
		auto &expr = _185852_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ad002916:;
		if (it != expr.end()) {
			jule::Ptr<_1e01087ba_FieldIns> _186321_f = *it;
			{
				if ((_186321_f.get()._field_kind == nullptr)) {
					goto _iter_next_1ad002916;
				};
				if ((!(_1ed77d7b1_supports_cloning(_186321_f.get()._field_kind.ptr())))) {
					_1e0e1e107_push_err(&(*_self_), _185852_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_186321_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_185870_ok = false;
					return _185870_ok;
				};
				if ((!(_1e0e2d48a_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_185852_st.get()._field_decl,_186321_f.get()._field_kind)))) {
					_185870_ok = false;
					return _185870_ok;
				};
			}
			_iter_next_1ad002916:;
			++it;
			goto _iter_begin_1ad002916;
		}
		_iter_end_1ad002916:;
	};
	_185870_ok = true;
	return _185870_ok;
}



inline void _1e0e2d9a7_check_package_decls(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad005364:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _188421_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _188421_f);
				if ((!(_1e0e26e12_check_type_alias_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ad005364:;
			++it;
			goto _iter_begin_1ad005364;
		}
		_iter_end_1ad005364:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad0056d8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _189121_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _189121_f);
				if ((!(_1e0e298e8_check_trait_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ad0056d8:;
			++it;
			goto _iter_begin_1ad0056d8;
		}
		_iter_end_1ad0056d8:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad006cd3:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _189821_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _189821_f);
				if ((!(_1e0e2b213_check_global_decls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ad006cd3:;
			++it;
			goto _iter_begin_1ad006cd3;
		}
		_iter_end_1ad006cd3:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad007278:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _190521_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _190521_f);
				{
					
					if ((!(_1e0e2c6dc_check_fn_decls(_self_)))) {
						_case_begin_1ad008950:;
					}
					else if ((!(_1e0e2c203_check_struct_decls(_self_)))) {
						_case_begin_1ad0089c7:;
					}
					else {
						_case_begin_1ad0088a6:;
						{
							goto _iter_next_1ad007278;
						}
					}
					_match_end_1ad00882e:;
				};
				return;;
			}
			_iter_next_1ad007278:;
			++it;
			goto _iter_begin_1ad007278;
		}
		_iter_end_1ad007278:;
	};
}



inline void _1e0e2dce8_check_data_for_type_inference(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e0e7ce9b_Data>& _191749_d, jule::Ptr<_1dd9941e0_Token>& _191760_err_token) {
	{
		
		if (_1e0e7d386_is_nil(_191749_d.ptr())) {
			_case_begin_1ad00992e:;
			{
				_1e0e1e107_push_err(&(*_self_), _191760_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1e0e7d5ea_is_void(_191749_d.ptr())) {
			_case_begin_1ad0099a6:;
			{
				_1e0e1e107_push_err(&(*_self_), _191760_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_191749_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ad009a2d:;
			{
				_1e0e1e107_push_err(&(*_self_), _191760_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad00981e:;
	};
}



inline void _1e0e2e07e_check_var(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0e366e6_Var>& _192834_v) {
	if (_192834_v.get()._field_cpp_linked) {
		return;;
	};
	if (_1e0e36d12_is_type_inferred(_192834_v.ptr())) {
		_192834_v.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_192834_v.get()._field_value.get()._field_data.get()._field_kind});
		_1e0e2dce8_check_data_for_type_inference(_self_.ptr(), _192834_v.get()._field_value.get()._field_data,_192834_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1ed7877a9_Arr> _193921_arr = _1ed77e99e_arr(_192834_v.get()._field_kind.get()._field_kind.ptr());;
		if ((_193921_arr != nullptr)) {
			if (_193921_arr.get()._field_auto) {
				jule::Ptr<_1ed7877a9_Arr> _194225_data_arr = _1ed77e99e_arr(_192834_v.get()._field_value.get()._field_data.get()._field_kind.ptr());;
				if ((_194225_data_arr != nullptr)) {
					_193921_arr.get()._field_n=_194225_data_arr.get()._field_n;
				};
			};
		};
		_1e0e24409_check_assign_type(_self_, _192834_v.get()._field_reference,_192834_v.get()._field_kind.get()._field_kind,_192834_v.get()._field_value.get()._field_data,_192834_v.get()._field_value.get()._field_expr.get()._field_token);
	};
	if ((_192834_v.get()._field_reference && (!(_1ed793e03_is_valid_for_ref(_192834_v.get()._field_kind.get()._field_kind))))) {
		_1e0e1e107_push_err(_self_.ptr(), _192834_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_192834_v.get()._field_kind.get()._field_kind.ptr()))}));
	};
	_1e0e2620d_check_validity_for_init_expr(_self_, _192834_v.get()._field_mutable,_192834_v.get()._field_reference,_192834_v.get()._field_kind.get()._field_kind,_192834_v.get()._field_value.get()._field_data,_192834_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_192834_v.get()._field_constant) {
		if ((!(_1e0e7d85e_is_const(_192834_v.get()._field_value.get()._field_data.ptr())))) {
			_1e0e1e107_push_err(_self_.ptr(), _192834_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_192834_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	};
	if ((_1ed780928_tup(_192834_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_192834_v.get()._field_kind.get()._field_kind=nullptr;
	};
}



inline void _1e0e2e39d_check_type_var(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0e366e6_Var>& _197739_decl, jule::Trait<_1ed7974de_Lookup> _197755_l) {
	if ((_197739_decl.get()._field_cpp_linked || (!(_1e0e36a9d_is_initialized(_197739_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1e0e7ea19_Eval> _198217_eval = nullptr;;
	if ((_197739_decl.get()._field_kind != nullptr)) {
		_198217_eval=_1e0e23749_evalpd(_self_, _197755_l,_197739_decl.get()._field_kind.get()._field_kind,_197739_decl);
	} else {
		_198217_eval=_1e0e23749_evalpd(_self_, _197755_l,nullptr,_197739_decl);
	};
	_198217_eval.get()._field_immutable=(!(_197739_decl.get()._field_mutable));
	_197739_decl.get()._field_value.get()._field_data=_1e0e99cdc_eval_expr(_198217_eval, _197739_decl.get()._field_value.get()._field_expr);
	if ((_197739_decl.get()._field_value.get()._field_data == nullptr)) {
		return;;
	};
	_1e0e2e07e_check_var(_self_, _197739_decl);
}



inline void _1e0e2e579_check_global_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1ad018ab4:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _199921_decl = *it;
			{
				if (((_1e0e36a9d_is_initialized(_199921_decl.ptr()) && (_199921_decl.get()._field_value.get()._field_data == nullptr)) || (_1e0e36d12_is_type_inferred(_199921_decl.ptr()) && (_199921_decl.get()._field_kind.get()._field_kind == nullptr)))) {
					_1e0e2e39d_check_type_var(_self_, _199921_decl,jule::Trait<_1ed7974de_Lookup>(_self_, 3));
				};
			}
			_iter_next_1ad018ab4:;
			++it;
			goto _iter_begin_1ad018ab4;
		}
		_iter_end_1ad018ab4:;
	};
}



inline jule::Ptr<_1e01457c4_FnIns> _1e0e2e931_ready_to_check_fn(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _201042_s, jule::Ptr<_1e0144581_Fn>& _201062_f) {
	jule::Ptr<_1e01457c4_FnIns> _201117_ins = _1e01098ba_instance(_201062_f);;
	if ((_201062_f.get()._field_instances.len() != 0LL)) {
		return _201117_ins;
	};
	_201117_ins.get()._field_owner=_201042_s;
	_1e012185a_append_instance(_201062_f.ptr(), _201117_ins);
	_201117_ins.get()._field_reloaded=true;
	if (_1e0e25680_reload_fn_ins_types(_self_, _201117_ins)) {
		return _201117_ins;
	};
	return nullptr;
}



inline void _1e0e2ec50_check_type_method(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _202442_s, jule::Ptr<_1e0144581_Fn>& _202462_f) {
	if ((_202462_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1e01457c4_FnIns> _202917_ins = _202462_f.get()._field_instances[0LL];;
	if ((_202917_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		return;;
	};
	_1e0e322d5_check_fn_ins(_self_, _202917_ins);
}



inline jule::Ptr<_1e01457c4_FnIns> _1e0e301a1_check_struct_ins_op(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _203744_s, jule::Ptr<_1e0144581_Fn>& _203764_f, jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)> _203772_p) {
	if ((((_203764_f == nullptr) || (_203764_f.get()._field_generics.len() > 0LL)) || (!(_203772_p(_203764_f))))) {
		return nullptr;
	};
	return _203764_f.get()._field_instances[0LL];
}



inline jule::Bool _1e0e304ae_check_fields(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _204437_s) {
	jule::Bool _204454_ok = jule::Bool();
	_1ed789da5_TypeChecker _204517_tc = _1ed789da5_TypeChecker{._field_s=_204437_s.get()._field_decl.get()._field_sema, ._field_lookup=jule::Trait<_1ed7974de_Lookup>(_204437_s.get()._field_decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1ed78915c_Referencer>(_1ed78915c_Referencer{._field_ident=_204437_s.get()._field_decl.get()._field_ident, ._field_owner=jule::Any(_204437_s.get()._field_decl), }), ._field_refers=_204437_s.get()._field_refers, };;
	if ((_204437_s.get()._field_generics.len() > 0LL)) {
		_204517_tc._field_use_generics=jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>::alloc(0LL,_204437_s.get()._field_generics.len());
		{
			auto &expr = _204437_s.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ad0228c0:;
			if (it != expr.end()) {
				jule::I32 _205718_i = it - expr.begin();
				jule::Ptr<_1ed77bbbb_TypeKind> _205725_g = *it;
				{
					_204517_tc._field_use_generics = jule::alloc_for_append(_204517_tc._field_use_generics,1);_204517_tc._field_use_generics.__push(jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_ident=_204437_s.get()._field_decl.get()._field_generics[_205718_i].get()._field_ident, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_205725_g}), }));;
				}
				_iter_next_1ad0228c0:;
				++it;
				_205718_i++;
				goto _iter_begin_1ad0228c0;
			}
			_iter_end_1ad0228c0:;
		};
	};
	jule::Ptr<_1e0e77eeb_SymbolTable> _206717_old_file = _self_.get()._field_file;;
	__JULE_DEFER({
		_1e0e1dc3e_set_current_file(_self_.ptr(), _206717_old_file);
	});;
	if ((_self_.get()._field_file.get()._field_file != _204437_s.get()._field_decl.get()._field_token.get()._field_file)) {
		jule::Ptr<_1e0e77eeb_SymbolTable> _207121_file = _1e0e1aa4e_find_file(_self_.get()._field_files,_204437_s.get()._field_decl.get()._field_token.get()._field_file);;
		if ((_207121_file != nullptr)) {
			_1e0e1dc3e_set_current_file(_self_.ptr(), _207121_file);
		};
	};
	jule::Ptr<_1e0e7ea19_Eval> _207717_eval = _1e0e23e0e_eval(_self_, jule::Trait<_1ed7974de_Lookup>(_self_, 3));;
	_204454_ok=true;
	{
		auto &expr = _204437_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1ad023195:;
		if (it != expr.end()) {
			jule::Ptr<_1e01087ba_FieldIns> _207921_f = *it;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _208021_kind = _1ed792121_check_decl(&_204517_tc, _207921_f.get()._field_decl.get()._field_kind.get()._field_decl);;
				_204454_ok=((_208021_kind != nullptr) && _204454_ok);
				if ((_208021_kind == nullptr)) {
					if (((_self_ != _204437_s.get()._field_decl.get()._field_sema) && (_204437_s.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_204437_s.get()._field_decl.get()._field_sema.get()._field_errors);
						_204437_s.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1ad023195;
				};
				_207921_f.get()._field_kind=_208021_kind;
				_204437_s.get()._field_mutable=(_204437_s.get()._field_mutable || ((!(_207921_f.get()._field_decl.get()._field_mutable)) && _1ed77d074_mutable(_207921_f.get()._field_kind.ptr())));
				_1e0e2d7ba_check_struct_ins_derive_clone(_self_.ptr(), _204437_s);
				if ((_207921_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1ad023195;
				};
				_207717_eval.get()._field_prefix=_207921_f.get()._field_kind;
				_207717_eval.get()._field_field=_207921_f;
				_207921_f.get()._field_default=_1e0e99cdc_eval_expr(_207717_eval, _207921_f.get()._field_decl.get()._field_default);
				if ((_207921_f.get()._field_default == nullptr)) {
					goto _iter_next_1ad023195;
				};
				;
				_1e0e24409_check_assign_type(_self_, false,_207921_f.get()._field_kind,_207921_f.get()._field_default,_207921_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1ad023195:;
			++it;
			goto _iter_begin_1ad023195;
		}
		_iter_end_1ad023195:;
	};
	return _204454_ok;
}



inline jule::Bool _1e0e307bc_precheck_struct_ins(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _211344_s) {
	jule::Bool _211361_ok = jule::Bool();
	_211361_ok=_1e0e304ae_check_fields(_self_, _211344_s);
	if ((!(_211361_ok))) {
		_211361_ok = false;
		return _211361_ok;
	};
	{
		auto &expr = _211344_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ad02d524:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _211821_f = *it;
			{
				if ((_211821_f.get()._field_generics.len() == 0LL)) {
					if ((_1e0e2e931_ready_to_check_fn(_self_, _211344_s,_211821_f) == nullptr)) {
						_211361_ok = false;
						return _211361_ok;
					};
				};
			}
			_iter_next_1ad02d524:;
			++it;
			goto _iter_begin_1ad02d524;
		}
		_iter_end_1ad02d524:;
	};
	_211361_ok = true;
	return _211361_ok;
}



inline void _1e0e30a42_check_struct_ins(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns>& _212841_s) {
	{
		auto &expr = _212841_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ad02ebeb:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _212921_f = *it;
			{
				_1e0e2ec50_check_type_method(_self_, _212841_s,_212921_f);
			}
			_iter_next_1ad02ebeb:;
			++it;
			goto _iter_begin_1ad02ebeb;
		}
		_iter_end_1ad02ebeb:;
	};
}



inline void _1e0e30cb7_check_type_struct(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _213442_s) {
	if (_213442_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_213442_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _213442_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ad0314d3:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _214721_ins = *it;
			{
				_1e0e30a42_check_struct_ins(_self_, _214721_ins);
			}
			_iter_next_1ad0314d3:;
			++it;
			goto _iter_begin_1ad0314d3;
		}
		_iter_end_1ad0314d3:;
	};
}



inline void _1e0e30e93_check_struct_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad03210a:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _215321_s = *it;
			{
				_1e0e30cb7_check_type_struct(_self_, _215321_s);
			}
			_iter_next_1ad03210a:;
			++it;
			goto _iter_begin_1ad03210a;
		}
		_iter_end_1ad03210a:;
	};
}



inline void _1e0e3123a_check_struct_ins_operators(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010a05d_StructIns> _215850_s) {
	{
		auto &expr = _215850_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ad032eeb:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _215921_m = *it;
			{
				{
					auto &_match_expr{ _215921_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1ad033606:;
						{
							_215850_s.get()._field_operators._field_eq=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _216268_f) mutable -> jule::Bool {
								return static__1e0e38220_eq(_216268_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1ad03388c:;
						{
							_215850_s.get()._field_operators._field_gt=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _216468_f) mutable -> jule::Bool {
								return static__1e0e384b7_gt(_216468_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1ad033b34:;
						{
							_215850_s.get()._field_operators._field_gt_eq=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _216671_f) mutable -> jule::Bool {
								return static__1e0e3875e_gt_eq(_216671_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1ad033b9a:;
						{
							_215850_s.get()._field_operators._field_lt=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _216868_f) mutable -> jule::Bool {
								return static__1e0e38a06_lt(_216868_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1ad033c22:;
						{
							_215850_s.get()._field_operators._field_lt_eq=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _217071_f) mutable -> jule::Bool {
								return static__1e0e38c9d_lt_eq(_217071_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1ad033c99:;
						{
							_215850_s.get()._field_operators._field_shl=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _217269_f) mutable -> jule::Bool {
								return static__1e0e39386_shl(_217269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1ad033d21:;
						{
							_215850_s.get()._field_operators._field_shr=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _217469_f) mutable -> jule::Bool {
								return static__1e0e3962d_shr(_217469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1ad033d98:;
						{
							_215850_s.get()._field_operators._field_add=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _217669_f) mutable -> jule::Bool {
								return static__1e0e398c5_add(_217669_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1ad033e20:;
						{
							_215850_s.get()._field_operators._field_sub=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _217869_f) mutable -> jule::Bool {
								return static__1e0e39b6c_sub(_217869_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1ad033e97:;
						{
							_215850_s.get()._field_operators._field_div=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _218069_f) mutable -> jule::Bool {
								return static__1e0e39e14_div(_218069_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1ad03401e:;
						{
							_215850_s.get()._field_operators._field_mul=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _218269_f) mutable -> jule::Bool {
								return static__1e0e3a1ab_mul(_218269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1ad034096:;
						{
							_215850_s.get()._field_operators._field_mod=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _218469_f) mutable -> jule::Bool {
								return static__1e0e3a453_mod(_218469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1ad03411d:;
						{
							_215850_s.get()._field_operators._field_bit_and=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _218673_f) mutable -> jule::Bool {
								return static__1e0e3a6ea_bit_and(_218673_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1ad034195:;
						{
							_215850_s.get()._field_operators._field_bit_or=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _218872_f) mutable -> jule::Bool {
								return static__1e0e3a992_bit_or(_218872_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1ad03421c:;
						{
							_215850_s.get()._field_operators._field_bit_xor=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _219073_f) mutable -> jule::Bool {
								return static__1e0e3ac39_bit_xor(_219073_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1ad034294:;
						{
							_215850_s.get()._field_operators._field_neg=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _219269_f) mutable -> jule::Bool {
								return static__1e0e3b322_neg(_219269_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1ad03431b:;
						{
							_215850_s.get()._field_operators._field_pos=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _219469_f) mutable -> jule::Bool {
								return static__1e0e3b5b9_pos(_219469_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1ad034393:;
						{
							_215850_s.get()._field_operators._field_bit_not=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _219673_f) mutable -> jule::Bool {
								return static__1e0e3b861_bit_not(_219673_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1ad03441a:;
						{
							_215850_s.get()._field_operators._field_add_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _219876_f) mutable -> jule::Bool {
								return static__1e0e3be49_add_assign(_219876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1ad034492:;
						{
							_215850_s.get()._field_operators._field_sub_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _220076_f) mutable -> jule::Bool {
								return static__1e0e3c1e1_sub_assign(_220076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1ad034519:;
						{
							_215850_s.get()._field_operators._field_div_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _220276_f) mutable -> jule::Bool {
								return static__1e0e3c488_div_assign(_220276_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1ad034591:;
						{
							_215850_s.get()._field_operators._field_mul_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _220476_f) mutable -> jule::Bool {
								return static__1e0e3c730_mul_assign(_220476_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1ad034618:;
						{
							_215850_s.get()._field_operators._field_mod_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _220676_f) mutable -> jule::Bool {
								return static__1e0e3c9c7_mod_assign(_220676_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1ad034690:;
						{
							_215850_s.get()._field_operators._field_shl_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _220876_f) mutable -> jule::Bool {
								return static__1e0e3cc6e_shl_assign(_220876_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1ad034717:;
						{
							_215850_s.get()._field_operators._field_shr_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _221076_f) mutable -> jule::Bool {
								return static__1e0e3d016_shr_assign(_221076_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1ad03478e:;
						{
							_215850_s.get()._field_operators._field_bit_or_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _221279_f) mutable -> jule::Bool {
								return static__1e0e3d2ad_bit_or_assign(_221279_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1ad034816:;
						{
							_215850_s.get()._field_operators._field_bit_and_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _221480_f) mutable -> jule::Bool {
								return static__1e0e3d555_bit_and_assign(_221480_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1ad03488d:;
						{
							_215850_s.get()._field_operators._field_bit_xor_assign=_1e0e301a1_check_struct_ins_op(_self_, _215850_s,_215921_m,jule::Fn<jule::Bool(jule::Ptr<_1e0144581_Fn>)>([=](jule::Ptr<_1e0144581_Fn> _221680_f) mutable -> jule::Bool {
								return static__1e0e3d7ec_bit_xor_assign(_221680_f);
							}));
						}
					}
					_match_end_1ad0337d2:;
				};
			}
			_iter_next_1ad032eeb:;
			++it;
			goto _iter_begin_1ad032eeb;
		}
		_iter_end_1ad032eeb:;
	};
}



inline void _1e0e314c1_precheck_struct_type(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e010261b_Struct>& _222145_s) {
	if (_222145_s.get()._field_cpp_linked) {
		return;;
	};
	if ((_222145_s.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_222145_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e010a05d_StructIns> _223221_ins = _1e00eb5c1_instance(_222145_s);;
		_223221_ins.get()._field_checked=true;
		_1e00edbde_append_instance(_222145_s.ptr(), _223221_ins);
		_1e0e307bc_precheck_struct_ins(_self_, _223221_ins);
	};
	_1e0e3123a_check_struct_ins_operators(_self_, _222145_s.get()._field_instances[0LL]);
}



inline void _1e0e3169c_precheck_struct_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad066925:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _224221_s = *it;
			{
				_1e0e314c1_precheck_struct_type(_self_, _224221_s);
			}
			_iter_next_1ad066925:;
			++it;
			goto _iter_begin_1ad066925;
		}
		_iter_end_1ad066925:;
	};
}



inline void _1e0e31922_check_rets(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e01457c4_FnIns>& _224734_f) {
	if (_1e0105894_is_void(_224734_f.get()._field_decl.ptr())) {
		return;;
	};
	_1e0e33abc_MissingRetChecker _225113_mrc = static__1e0e33e85_new();;
	jule::Bool _225213_ok = _1e0e34e97_check(&_225113_mrc, _224734_f.get()._field_scope);;
	if ((!(_225213_ok))) {
		_1e0e1e107_push_err(&(*_self_), _224734_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1e0e31c41_check_fn_ins_sc(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e01457c4_FnIns>& _225839_f, jule::Ptr<_1e0debe4d_ScopeChecker>& _225855_sc) {
	if (_225839_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	_1e0e1a169_append_ret_vars(_225855_sc.get()._field_table.get()._field_vars,_225839_f);
	_1e0e1a422_append_param_vars(_225855_sc.get()._field_table.get()._field_vars,_225839_f);
	_1e0e1a6ec_append_generic_type_aliases(_225855_sc.get()._field_table.get()._field_type_aliases,_225839_f);
	_1e0e0b732_check(_225855_sc, _225839_f.get()._field_decl.get()._field_scope,_225839_f.get()._field_scope);
	if ((!(_1e0dee03d_stopped(_225855_sc.ptr())))) {
		_1e0e31922_check_rets(&(*_self_), _225839_f);
	};
}



inline void _1e0e32060_check_fn_ins_caller(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01457c4_FnIns>& _227544_f, jule::Ptr<_1dd9941e0_Token> _227559_caller) {
	if (_227544_f.get()._field_decl.get()._field_cpp_linked) {
		return;;
	};
	jule::Ptr<_1e0e77eeb_SymbolTable> _228017_old = _227544_f.get()._field_decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1e0e1dc3e_set_current_file(_227544_f.get()._field_decl.get()._field_sema.ptr(), _228017_old);
	});;
	jule::Ptr<_1e0e77eeb_SymbolTable> _228217_file = _1e0e1aa4e_find_file(_227544_f.get()._field_decl.get()._field_sema.get()._field_files,_227544_f.get()._field_decl.get()._field_token.get()._field_file);;
	if ((_228217_file != nullptr)) {
		_1e0e1dc3e_set_current_file(_227544_f.get()._field_decl.get()._field_sema.ptr(), _228217_file);
	};
	jule::Ptr<_1e0debe4d_ScopeChecker> _228717_sc = _1e0d761c4_new_scope_checker(_227544_f.get()._field_decl.get()._field_sema,_227544_f);;
	_228717_sc.get()._field_called_from=_227559_caller;
	_1e0e31c41_check_fn_ins_sc(_self_.ptr(), _227544_f,_228717_sc);
	if ((_227544_f.get()._field_decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_227544_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_227544_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1e0e322d5_check_fn_ins(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e01457c4_FnIns>& _229737_f) {
	_1e0e32060_check_fn_ins_caller(_self_, _229737_f,nullptr);
}



inline void _1e0e3255a_check_type_fn(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _230138_f) {
	if (_230138_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_230138_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _230138_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ad072e2b:;
		if (it != expr.end()) {
			jule::Ptr<_1e01457c4_FnIns> _231121_ins = *it;
			{
				_1e0e322d5_check_fn_ins(_self_, _231121_ins);
			}
			_iter_next_1ad072e2b:;
			++it;
			goto _iter_begin_1ad072e2b;
		}
		_iter_end_1ad072e2b:;
	};
}



inline void _1e0e327d0_check_test_fn(_1e0e1b3bd_Sema* _self_, jule::Ptr<_1e01457c4_FnIns>& _231637_f) {
	if (_231637_f.get()._field_decl.get()._field_public) {
		_1e0e1e107_push_err(&(*_self_), _231637_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_231637_f.get()._field_params.len() != 1LL) || (_231637_f.get()._field_result != nullptr))) {
		_1e0e1e107_push_err(&(*_self_), _231637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ed784ba2_Sptr> _232917_sptr = _1ed77deed_sptr(_231637_f.get()._field_params[0LL].get()._field_kind.ptr());;
	if ((_232917_sptr == nullptr)) {
		_1e0e1e107_push_err(&(*_self_), _231637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e010a05d_StructIns> _233613_s = _1ed7801db_strct(_232917_sptr.get()._field_elem.ptr());;
	if (((_233613_s == nullptr) || (!(_1e0e1882c_is_std_package(_233613_s.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("testing", 7)))))) {
		_1e0e1e107_push_err(&(*_self_), _231637_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1e0e1e426_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e0e32a55_precheck_type_fn(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Ptr<_1e0144581_Fn>& _234441_f) {
	if (_234441_f.get()._field_cpp_linked) {
		return;;
	};
	if ((_234441_f.get()._field_generics.len() > 0LL)) {
		return;;
	};
	if ((_234441_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1e01457c4_FnIns> _235521_ins = _1e01098ba_instance(_234441_f);;
		_234441_f.get()._field_instances = jule::alloc_for_append(_234441_f.get()._field_instances,1);_234441_f.get()._field_instances.__push(_235521_ins);;
		_1e0e25680_reload_fn_ins_types(_self_, _235521_ins);
		_235521_ins.get()._field_reloaded=true;
		if (_1ed7935c8_has_directive(_234441_f.get()._field_directives,jule::Str("test", 4))) {
			_1e0e327d0_check_test_fn(_self_.ptr(), _235521_ins);
		};
	};
}



inline void _1e0e32c31_precheck_fn_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad07d145:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> _236821_decl = *it;
			{
				{
					auto &expr = _236821_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ad07d8d7:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _236925_m = *it;
						{
							_1e0e32a55_precheck_type_fn(_self_, _236925_m);
						}
						_iter_next_1ad07d8d7:;
						++it;
						goto _iter_begin_1ad07d8d7;
					}
					_iter_end_1ad07d8d7:;
				};
			}
			_iter_next_1ad07d145:;
			++it;
			goto _iter_begin_1ad07d145;
		}
		_iter_end_1ad07d145:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad07d5c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _237321_decl = *it;
			{
				_1e0e32a55_precheck_type_fn(_self_, _237321_decl);
			}
			_iter_next_1ad07d5c9:;
			++it;
			goto _iter_begin_1ad07d5c9;
		}
		_iter_end_1ad07d5c9:;
	};
}



inline void _1e0e32e0c_check_fn_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad07ec29:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _238021_decl = *it;
			{
				_1e0e3255a_check_type_fn(_self_, _238021_decl);
			}
			_iter_next_1ad07ec29:;
			++it;
			goto _iter_begin_1ad07ec29;
		}
		_iter_end_1ad07ec29:;
	};
}



inline void _1e0e330d8_check_package_types(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad080323:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _238821_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _238821_f);
				_1e0e2e579_check_global_types(_self_);
				_1e0e32c31_precheck_fn_types(_self_);
				_1e0e3169c_precheck_struct_types(_self_);
			}
			_iter_next_1ad080323:;
			++it;
			goto _iter_begin_1ad080323;
		}
		_iter_end_1ad080323:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad080d4b:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _239921_f = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _239921_f);
				_1e0e32e0c_check_fn_types(_self_);
				_1e0e30e93_check_struct_types(_self_);
			}
			_iter_next_1ad080d4b:;
			++it;
			goto _iter_begin_1ad080d4b;
		}
		_iter_end_1ad080d4b:;
	};
}



inline void _1e0e332b4_set_file_sema_fields(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad083458:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _240721_f = *it;
			{
				_240721_f.get()._field_sema=_self_;
			}
			_iter_next_1ad083458:;
			++it;
			goto _iter_begin_1ad083458;
		}
		_iter_end_1ad083458:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad083898:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _241121_st = *it;
			{
				_241121_st.get()._field_sema=_self_;
			}
			_iter_next_1ad083898:;
			++it;
			goto _iter_begin_1ad083898;
		}
		_iter_end_1ad083898:;
	};
}



inline void _1e0e33490_set_sema_fields(jule::Ptr<_1e0e1b3bd_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad08457a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _241721_file = *it;
			{
				_1e0e1dc3e_set_current_file(_self_.ptr(), _241721_file);
				_1e0e332b4_set_file_sema_fields(_self_);
			}
			_iter_next_1ad08457a:;
			++it;
			goto _iter_begin_1ad08457a;
		}
		_iter_end_1ad08457a:;
	};
}



inline void _1e0e33715_check(jule::Ptr<_1e0e1b3bd_Sema> _self_, jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _242330_files) {
	_self_.get()._field_files=_242330_files;
	_1e0e218ac_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e0e33490_set_sema_fields(_self_);
	_1e0e21e40_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e0e21c64_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e0e2d9a7_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1e0e330d8_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e1b3bd_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1e0e33abc_MissingRetChecker static__1e0e33e85_new(void) {
	return _1e0e33abc_MissingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LL), };
}



inline jule::Bool _1e0e34260_check_conditional(_1e0e33abc_MissingRetChecker* _self_, jule::Ptr<_1e0d879aa_Conditional> _246636_c) {
	{
		auto &expr = _246636_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ad088ccc:;
		if (it != expr.end()) {
			jule::Ptr<_1e0ddcc41_If> _246721_elif = *it;
			{
				if ((_246721_elif == nullptr)) {
					return false;
				};
				if ((!(_1e0e34b89_check_scope(&(*_self_), _246721_elif.get()._field_scope)))) {
					return false;
				};
			}
			_iter_next_1ad088ccc:;
			++it;
			goto _iter_begin_1ad088ccc;
		}
		_iter_end_1ad088ccc:;
	};
	return ((_246636_c.get()._field_default != nullptr) && _1e0e34b89_check_scope(&(*_self_), _246636_c.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e0e3456d_check_match(_1e0e33abc_MissingRetChecker* _self_, jule::Ptr<_1e0deb090_Match> _247830_m) {
	{
		auto &expr = _247830_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ad08aa6a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deb4ad_Case> _247921_c = *it;
			{
				if ((_247921_c == nullptr)) {
					return false;
				};
				jule::I32 _248317_n = (*_self_)._field_breaked.len();;
				jule::Bool _248417_ok = _1e0e34b89_check_scope(&(*_self_), _247921_c.get()._field_scope);;
				{
					
					if ((_248317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1ad08c462:;
						{
							return false;
						}
					}
					else if ((!(_248417_ok))) {
						_case_begin_1ad08c4d9:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							};
							goto _case_begin_1ad08c561;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1ad08c561:;
						{
							(*_self_)._field_falled=false;
							if ((_247921_c.get()._field_next == nullptr)) {
								return false;
							};
							goto _iter_next_1ad08aa6a;
						}
					}
					_match_end_1ad08c385:;
				};
			}
			_iter_next_1ad08aa6a:;
			++it;
			goto _iter_begin_1ad08aa6a;
		}
		_iter_end_1ad08aa6a:;
	};
	return ((_247830_m.get()._field_default != nullptr) && _1e0e34b89_check_scope(&(*_self_), _247830_m.get()._field_default.get()._field_scope));
}



inline jule::Bool _1e0e3487b_check_inf_iter(_1e0e33abc_MissingRetChecker* _self_, jule::Ptr<_1e0d985ae_InfIter> _250433_it) {
	jule::I32 _250513_n = (*_self_)._field_breaked.len();;
	if (_1e0e34b89_check_scope(&(*_self_), _250433_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250513_n);
		return true;
	};
	if ((_250513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _251117_itaddr = static_cast<jule::Uintptr>(_250433_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_250513_n);
			auto it = expr.begin();
			_iter_begin_1ad091246:;
			if (it != expr.end()) {
				jule::Uintptr _251220_addr = *it;
				{
					if ((_251117_itaddr == _251220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250513_n);
						return false;
					};
				}
				_iter_next_1ad091246:;
				++it;
				goto _iter_begin_1ad091246;
			}
			_iter_end_1ad091246:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_250513_n);
	};
	return true;
}



inline jule::Bool _1e0e34b89_check_scope(_1e0e33abc_MissingRetChecker* _self_, jule::Ptr<_1e0dd6322_Scope> _252330_s) {
	if ((_252330_s == nullptr)) {
		return false;
	};
	{
		auto &expr = _252330_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1ad092621:;
		if (it != expr.end()) {
			jule::Any _252721_st = *it;
			{
				{
					auto &_match_expr{ _252721_st };
					
					if (_match_expr.type_is<jule::Ptr<_1e0deb69a_FallSt>>()) {
						_case_begin_1ad0933ad:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0dea413_BreakSt>>()) {
						_case_begin_1ad093457:;
						{
							jule::Uintptr _253321_addr = _252721_st.operator jule::Ptr<_1e0dea413_BreakSt>().get()._field_it;;
							if ((_253321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_253321_addr);;
							};
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0dc6851_ContSt>>()) {
						_case_begin_1ad0934bd:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
						_case_begin_1ad093534:;
						{
							if (_1e0e3487b_check_inf_iter(&(*_self_), _252721_st.operator jule::Ptr<_1e0d985ae_InfIter>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0deb887_RetSt>>()) {
						_case_begin_1ad09359a:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0dd6322_Scope>>()) {
						_case_begin_1ad093611:;
						{
							if (_1e0e34b89_check_scope(&(*_self_), _252721_st.operator jule::Ptr<_1e0dd6322_Scope>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
						_case_begin_1ad093677:;
						{
							{
								auto &_match_expr{ _252721_st.operator jule::Ptr<_1e0e7ce9b_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
									_case_begin_1ad09724c:;
									{
										return true;
									}
								}
								_match_end_1ad0971e7:;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0d879aa_Conditional>>()) {
						_case_begin_1ad0936ee:;
						{
							if (_1e0e34260_check_conditional(&(*_self_), _252721_st.operator jule::Ptr<_1e0d879aa_Conditional>())) {
								return true;
							};
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
						_case_begin_1ad093776:;
						{
							if (_1e0e3456d_check_match(&(*_self_), _252721_st.operator jule::Ptr<_1e0deb090_Match>())) {
								return true;
							};
						}
					}
					_match_end_1ad09329d:;
				};
			}
			_iter_next_1ad092621:;
			++it;
			goto _iter_begin_1ad092621;
		}
		_iter_end_1ad092621:;
	};
	return false;
}



inline jule::Bool _1e0e34e97_check(_1e0e33abc_MissingRetChecker* _self_, jule::Ptr<_1e0dd6322_Scope> _256924_s) {
	return _1e0e34b89_check_scope(&(*_self_), _256924_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e33abc_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e3576c_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0e36a9d_is_initialized(_1e0e366e6_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1e0e36d12_is_type_inferred(_1e0e366e6_Var* _self_) {
	return (((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e366e6_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1e0e37890_dispose(jule::Ptr<_1e0144581_Fn> _1027_f) {
	return (((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1e0105894_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1e01202c6_is_ref(_1027_f.get()._field_params[0LL].ptr()))));
}



inline jule::Bool static__1e0e37b37_to_str(jule::Ptr<_1e0144581_Fn> _2526_f) {
	if ((((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1e0105894_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1e01202c6_is_ref(_2526_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e01457c4_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];;
	jule::Ptr<_1ed781693_Prim> _4113_prim = _1ed77dc89_prim(_4017_ins.get()._field_result.ptr());;
	if ((_4113_prim == nullptr)) {
		return false;
	};
	return _1ed784652_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1e0e37e78_logical(jule::Ptr<_1e0144581_Fn>& _4824_f, jule::Str _4832_ident) {
	if (((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1e0105894_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1e01202c6_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e01457c4_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];;
	jule::Ptr<_1ed781693_Prim> _6713_prim = _1ed77dc89_prim(_6617_ins.get()._field_result.ptr());;
	if (((_6713_prim == nullptr) || (!(_1ed7843dd_is_bool(_6713_prim.ptr()))))) {
		return false;
	};
	return (_6617_ins.get()._field_owner == _1ed7801db_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr()));
}



inline jule::Bool static__1e0e38220_eq(jule::Ptr<_1e0144581_Fn> _7522_f) {
	return static__1e0e37e78_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1e0e384b7_gt(jule::Ptr<_1e0144581_Fn> _8022_f) {
	return static__1e0e37e78_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1e0e3875e_gt_eq(jule::Ptr<_1e0144581_Fn> _8525_f) {
	return static__1e0e37e78_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1e0e38a06_lt(jule::Ptr<_1e0144581_Fn> _9022_f) {
	return static__1e0e37e78_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1e0e38c9d_lt_eq(jule::Ptr<_1e0144581_Fn> _9525_f) {
	return static__1e0e37e78_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1e0e390de_result(jule::Ptr<_1e0144581_Fn>& _9923_f, jule::Str _9931_ident) {
	if (((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1e0105894_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1e01202c6_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	jule::Ptr<_1e01457c4_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];;
	return (_1ed7801db_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner);
}



inline jule::Bool static__1e0e39386_shl(jule::Ptr<_1e0144581_Fn> _12223_f) {
	return static__1e0e390de_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1e0e3962d_shr(jule::Ptr<_1e0144581_Fn> _12723_f) {
	return static__1e0e390de_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1e0e398c5_add(jule::Ptr<_1e0144581_Fn> _13223_f) {
	return static__1e0e390de_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1e0e39b6c_sub(jule::Ptr<_1e0144581_Fn> _13723_f) {
	return static__1e0e390de_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1e0e39e14_div(jule::Ptr<_1e0144581_Fn> _14223_f) {
	return static__1e0e390de_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1e0e3a1ab_mul(jule::Ptr<_1e0144581_Fn> _14723_f) {
	return static__1e0e390de_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1e0e3a453_mod(jule::Ptr<_1e0144581_Fn> _15223_f) {
	return static__1e0e390de_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1e0e3a6ea_bit_and(jule::Ptr<_1e0144581_Fn> _15727_f) {
	return static__1e0e390de_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1e0e3a992_bit_or(jule::Ptr<_1e0144581_Fn> _16226_f) {
	return static__1e0e390de_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1e0e3ac39_bit_xor(jule::Ptr<_1e0144581_Fn> _16727_f) {
	return static__1e0e390de_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1e0e3b07a_unary(jule::Ptr<_1e0144581_Fn>& _17122_f, jule::Str _17130_ident) {
	if (((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1e0105894_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1e01202c6_is_ref(_17122_f.get()._field_params[0LL].ptr()))) {
		return false;
	};
	jule::Ptr<_1e01457c4_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];;
	return (_1ed7801db_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner);
}



inline jule::Bool static__1e0e3b322_neg(jule::Ptr<_1e0144581_Fn> _19223_f) {
	return static__1e0e3b07a_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1e0e3b5b9_pos(jule::Ptr<_1e0144581_Fn> _19723_f) {
	return static__1e0e3b07a_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1e0e3b861_bit_not(jule::Ptr<_1e0144581_Fn> _20227_f) {
	return static__1e0e3b07a_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1e0e3bba2_assign(jule::Ptr<_1e0144581_Fn>& _20623_f, jule::Str _20631_ident) {
	if (((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1e0105894_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1e01202c6_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference)) {
		return false;
	};
	return true;
}



inline jule::Bool static__1e0e3be49_add_assign(jule::Ptr<_1e0144581_Fn> _22730_f) {
	return static__1e0e3bba2_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1e0e3c1e1_sub_assign(jule::Ptr<_1e0144581_Fn> _23230_f) {
	return static__1e0e3bba2_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1e0e3c488_div_assign(jule::Ptr<_1e0144581_Fn> _23730_f) {
	return static__1e0e3bba2_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1e0e3c730_mul_assign(jule::Ptr<_1e0144581_Fn> _24230_f) {
	return static__1e0e3bba2_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1e0e3c9c7_mod_assign(jule::Ptr<_1e0144581_Fn> _24730_f) {
	return static__1e0e3bba2_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1e0e3cc6e_shl_assign(jule::Ptr<_1e0144581_Fn> _25230_f) {
	return static__1e0e3bba2_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1e0e3d016_shr_assign(jule::Ptr<_1e0144581_Fn> _25730_f) {
	return static__1e0e3bba2_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1e0e3d2ad_bit_or_assign(jule::Ptr<_1e0144581_Fn> _26233_f) {
	return static__1e0e3bba2_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1e0e3d555_bit_and_assign(jule::Ptr<_1e0144581_Fn> _26734_f) {
	return static__1e0e3bba2_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1e0e3d7ec_bit_xor_assign(jule::Ptr<_1e0144581_Fn> _27234_f) {
	return static__1e0e3bba2_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e3721e_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1e0e69284_push_err(_1e0e68e43_TypeCompatibilityChecker* _self_, jule::Str _11727_fmt, jule::Slice<jule::Any> _11740_args) {
	_1e0e1e107_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_11727_fmt,jule::Any(_11740_args));
}



inline jule::Bool _1e0e694e8_check_trait(_1e0e68e43_TypeCompatibilityChecker* _self_) {
	jule::Bool _12132_ok = jule::Bool();
	if (_1ed77ca9b_is_nil((*_self_)._field_src.ptr())) {
		_12132_ok = true;
		return _12132_ok;
	};
	jule::Ptr<_1e0567d06_Trait> _12513_trt = _1ed780450_trt((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1ed77deed_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad0d3112:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1ed77deed_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1ed7801db_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_12132_ok = false;
					return _12132_ok;
				};
				goto _case_begin_1ad0d31bc;
			}
		}
		else if ((_1ed7801db_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad0d31bc:;
			{
				jule::Ptr<_1e010a05d_StructIns> _13617_s = _1ed7801db_strct((*_self_)._field_src.ptr());;
				if ((!(_1e00ecb88_is_implements(_13617_s.get()._field_decl.ptr(), _12513_trt)))) {
					_12132_ok = false;
					return _12132_ok;
				};
				if (((!(_12617_ref)) && _1e0e67826_trait_has_reference_receiver(_12513_trt))) {
					_1e0e69284_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_12132_ok = false;
					return _12132_ok;
				};
				_12132_ok = true;
				return _12132_ok;
			}
		}
		else if ((_1ed780450_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1ad0d3233:;
			{
				_12132_ok = (_12513_trt == _1ed780450_trt((*_self_)._field_src.ptr()));
				return _12132_ok;
			}
		}
		else {
			_case_begin_1ad0d296e:;
			{
				_12132_ok = false;
				return _12132_ok;
			}
		}
		_match_end_1ad0d2908:;
	};
}



inline jule::Bool _1e0e6975c_check_ptr(_1e0e68e43_TypeCompatibilityChecker* _self_) {
	jule::Bool _15230_ok = jule::Bool();
	if (_1ed77ca9b_is_nil((*_self_)._field_src.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	jule::Ptr<_1ed788216_Ptr> _15617_dest = _1ed77e262_ptr((*_self_)._field_dest.ptr());;
	if (_1ed788bd9_is_unsafe(_15617_dest.ptr())) {
		_15230_ok = true;
		return _15230_ok;
	};
	_15230_ok = _1ed77c381_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _15230_ok;
}



inline jule::Bool _1e0e699c1_check_prim(_1e0e68e43_TypeCompatibilityChecker* _self_) {
	jule::Bool _16331_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1ed781693_Prim> _16517_prim = _1ed77dc89_prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1ed7848b6_is_any(_16517_prim.ptr()))) {
			_16331_ok = true;
			return _16331_ok;
		};
	};
	_16331_ok = _1ed77c381_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _16331_ok;
}



inline jule::Bool _1e0e69c35_check_type_enum(_1e0e68e43_TypeCompatibilityChecker* _self_) {
	jule::Bool _17336_ok = jule::Bool();
	if (_1ed77c381_equals((*_self_)._field_dest, (*_self_)._field_src)) {
		_17336_ok = true;
		return _17336_ok;
	};
	jule::Ptr<_1e04c643a_TypeEnum> _17717_e = _1ed77e73a_tenm((*_self_)._field_dest.ptr());;
	{
		auto &expr = _17717_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ad0db69d:;
		if (it != expr.end()) {
			jule::Ptr<_1e05b1316_TypeEnumItem> _17821_item = *it;
			{
				if (_1ed77c381_equals(_17821_item.get()._field_kind.get()._field_kind, (*_self_)._field_src)) {
					_17336_ok = true;
					return _17336_ok;
				};
			}
			_iter_next_1ad0db69d:;
			++it;
			goto _iter_begin_1ad0db69d;
		}
		_iter_end_1ad0db69d:;
	};
	_17336_ok = false;
	return _17336_ok;
}



inline jule::Bool _1e0e69e99_check(_1e0e68e43_TypeCompatibilityChecker* _self_) {
	jule::Bool _18626_ok = jule::Bool();
	if ((_1ed77e262_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_18626_ok = _1e0e6975c_check_ptr(&(*_self_));
		return _18626_ok;
	};
	if (_1ed77d2d8_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1ed77ca9b_is_nil((*_self_)._field_src.ptr())) {
			_18626_ok = true;
			return _18626_ok;
		};
	};
	{
		
		if ((_1ed77dc89_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad0de87c:;
			{
				_18626_ok = _1e0e699c1_check_prim(&(*_self_));
				return _18626_ok;
			}
		}
		else if ((_1ed77e73a_tenm((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad0de283:;
			{
				_18626_ok = _1e0e69c35_check_type_enum(&(*_self_));
				return _18626_ok;
			}
		}
		else if ((_1ed780450_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1ad0de2e9:;
			{
				_18626_ok = _1e0e694e8_check_trait(&(*_self_));
				return _18626_ok;
			}
		}
		else {
			_case_begin_1ad0dd68e:;
			{
				_18626_ok = _1ed77c381_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _18626_ok;
			}
		}
		_match_end_1ad0dd3d6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e68e43_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e6a94a_push_err(_1e0e6a4d8_AssignTypeChecker* _self_, jule::Str _21827_fmt, jule::Slice<jule::Any> _21840_args) {
	_1e0e1e107_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_21827_fmt,jule::Any(_21840_args));
}



inline jule::Bool _1e0e6abae_check_validity(_1e0e6a4d8_AssignTypeChecker* _self_) {
	jule::Bool _22317_valid = true;;
	{
		
		if ((_1ed77ee77_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad0e283b:;
			{
				jule::Ptr<_1e01457c4_FnIns> _22617_f = _1ed77ee77_fnc((*_self_)._field_d.get()._field_kind.ptr());;
				{
					
					if (_1e0146550_is_builtin(_22617_f.ptr())) {
						_case_begin_1ad0e3d6a:;
						{
							_1e0e6a94a_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_22317_valid=false;
						}
					}
					else if (_22617_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1ad0e3de2:;
						{
							_1e0e6a94a_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_22317_valid=false;
						}
					}
					else if (_1e0123d35_is_method(_22617_f.get()._field_decl.ptr())) {
						_case_begin_1ad0e3e69:;
						{
							_1e0e6a94a_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_22317_valid=false;
						}
					}
					else if ((_22617_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1ad0e3ee1:;
						{
							_1e0e6a94a_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_22317_valid=false;
						}
					}
					_match_end_1ad0e3c7c:;
				};
			}
		}
		else if ((_1ed780928_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad0e28b3:;
			{
				_1e0e6a94a_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_22317_valid=false;
			}
		}
		_match_end_1ad0e2770:;
	};
	return _22317_valid;
}



inline jule::Bool _1e0e6ae23_check_const(_1e0e6a4d8_AssignTypeChecker* _self_) {
	if (((((!(_1e0e7d85e_is_const((*_self_)._field_d.ptr()))) || (_1ed77dc89_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1e0dea039_is_num(_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind))))) {
		return false;
	};
	if (((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant)) {
		return false;
	};
	jule::Str _26213_kind = _1ed77dc89_prim((*_self_)._field_dest.ptr()).get()._field_kind;;
	{
		
		if (_1e0de9c92_is_float(_26213_kind)) {
			_case_begin_1ad0eab96:;
			{
				if ((!(_1e0e4ed2a_float_assignable(_26213_kind,(*_self_)._field_d)))) {
					_1e0e6a94a_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else if (_1e0de99a6_is_int(_26213_kind)) {
			_case_begin_1ad0eac84:;
			{
				if ((!(_1e0e68d11_int_assignable(_26213_kind,(*_self_)._field_d)))) {
					_1e0e6a94a_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				};
			}
		}
		else {
			_case_begin_1ad0ea569:;
			{
				return false;
			}
		}
		_match_end_1ad0ea503:;
	};
	return true;
}



inline jule::Bool _1e0e6b187_is_prim(_1e0e6a4d8_AssignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic)) {
		return false;
	};
	if ((_1ed77c837_cpp_linked((*_self_)._field_dest.ptr()) || _1ed77c837_cpp_linked((*_self_)._field_d.get()._field_kind.ptr()))) {
		return false;
	};
	return ((_1ed77dc89_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr));
}



inline jule::Bool _1e0e6b3eb_check_compatibility(_1e0e6a4d8_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ad0eec55:;
			{
				return false;
			}
		}
		else if ((!(_1e0e6abae_check_validity(&(*_self_))))) {
			_case_begin_1ad0eeccc:;
			{
				return false;
			}
		}
		else if (_1e0e6ae23_check_const(&(*_self_))) {
			_case_begin_1ad0eed54:;
			{
				return true;
			}
		}
		else if ((_1ed77e4c6_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad0eedcb:;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _30421_dkind = (*_self_)._field_dest;;
				if ((_1ed77e4c6_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_30421_dkind=_1ed77e4c6_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1ed77dc89_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1ad0eeb56;
				};
				if (_1e0de6761_types_are_compatible(_1ed77dc89_prim(_1ed77e4c6_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1ed77dc89_prim(_30421_dkind.ptr()).get()._field_kind)) {
					return true;
				};
			}
		}
		else if (_1e0e6b187_is_prim(&(*_self_))) {
			_case_begin_1ad0eee53:;
			{
				jule::Ptr<_1ed781693_Prim> _31417_dest = _1ed77dc89_prim((*_self_)._field_dest.ptr());;
				if (_1ed7848b6_is_any(_31417_dest.ptr())) {
					return true;
				};
				jule::Ptr<_1ed781693_Prim> _31821_src = _1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1e0de6761_types_are_compatible(_31417_dest.get()._field_kind,_31821_src.get()._field_kind)) {
					return true;
				};
			}
		}
		_match_end_1ad0eeb56:;
	};
	return _1e0e2487c_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1e0e6b660_check(_1e0e6a4d8_AssignTypeChecker* _self_) {
	jule::Bool _32713_ok = _1e0e6b3eb_check_compatibility(&(*_self_));;
	if (_32713_ok) {
		_1ed7950d0_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _32713_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e6a4d8_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e6c3b9_push_generic(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _34536_k, jule::I32 _34550_i) {
	(*_self_)._field_f.get()._field_generics[_34550_i]=_34536_k;
}



inline jule::Bool _1e0e6c694_annotate_prim(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _34944_k) {
	jule::Bool _34960_ok = jule::Bool();
	jule::Str _35013_kind = _1ed77c073_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ad108885:;
		if (it != expr.end()) {
			jule::I32 _35113_i = it - expr.begin();
			jule::Ptr<_1e013165b_GenericDecl> _35116_g = *it;
			{
				if ((_35013_kind != _35116_g.get()._field_ident)) {
					goto _iter_next_1ad108885;
				};
				jule::Ptr<_1ed77bbbb_TypeKind> _35617_t = (*_self_)._field_f.get()._field_generics[_35113_i];;
				{
					
					if ((_35617_t == nullptr)) {
						_case_begin_1ad109e5d:;
						{
							_1e0e6c3b9_push_generic(&(*_self_), _34944_k,_35113_i);
						}
					}
					else if ((!(_1ed77c381_equals(_35617_t, _34944_k)))) {
						_case_begin_1ad109ed5:;
						{
							_34960_ok = false;
							return _34960_ok;
						}
					}
					_match_end_1ad109d4d:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_34944_k.get()._field_kind;
				_34960_ok = true;
				return _34960_ok;
			}
			_iter_next_1ad108885:;
			++it;
			_35113_i++;
			goto _iter_begin_1ad108885;
		}
		_iter_end_1ad108885:;
	};
	_34960_ok = false;
	return _34960_ok;
}



inline jule::Bool _1e0e6c9a2_annotate_slc(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _37243_k) {
	jule::Bool _37259_ok = jule::Bool();
	jule::Ptr<_1ed78560e_Slc> _37317_pslc = _1ed77ec13_slc((*((*_self_)._field_k)).ptr());;
	if ((_37317_pslc == nullptr)) {
		_37259_ok = false;
		return _37259_ok;
	};
	jule::Ptr<_1ed78560e_Slc> _37817_slc = _1ed77ec13_slc(_37243_k.ptr());;
	(*_self_)._field_k=(&(_37317_pslc.get()._field_elem));
	_37259_ok = _1e0e6e1ac_annotate_kind(&(*_self_), _37817_slc.get()._field_elem);
	return _37259_ok;
}



inline jule::Bool _1e0e6cd59_check_map_key(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>* _38343_k, jule::Ptr<_1ed77bbbb_TypeKind>& _38363_ck) {
	jule::Bool _38380_ok = jule::Bool();
	jule::Ptr<_1ed77bbbb_TypeKind>* _38417_old = (*_self_)._field_k;;
	(*_self_)._field_k=_38343_k;
	_38380_ok=_1e0e6e1ac_annotate_kind(&(*_self_), _38363_ck);
	(*_self_)._field_k=_38417_old;
	return _38380_ok;
}



inline jule::Bool _1e0e6d167_annotate_map(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _39143_k) {
	jule::Bool _39159_ok = jule::Bool();
	jule::Ptr<_1ed786bb5_Map> _39217_pmap = _1ed7806b4_map((*((*_self_)._field_k)).ptr());;
	if ((_39217_pmap == nullptr)) {
		_39159_ok = false;
		return _39159_ok;
	};
	jule::Ptr<_1ed786bb5_Map> _39717_m = _1ed7806b4_map(_39143_k.ptr());;
	_39159_ok = (_1e0e6cd59_check_map_key(&(*_self_), (&(_39217_pmap.get()._field_key)),_39717_m.get()._field_key) && _1e0e6cd59_check_map_key(&(*_self_), (&(_39217_pmap.get()._field_val)),_39717_m.get()._field_val));
	return _39159_ok;
}



inline jule::Bool _1e0e6d475_annotate_fn(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _40342_k) {
	jule::Bool _40358_ok = jule::Bool();
	jule::Ptr<_1e01457c4_FnIns> _40417_pf = _1ed77ee77_fnc((*((*_self_)._field_k)).ptr());;
	if ((_40417_pf == nullptr)) {
		_40358_ok = false;
		return _40358_ok;
	};
	jule::Ptr<_1e01457c4_FnIns> _40817_f = _1ed77ee77_fnc(_40342_k.ptr());;
	{
		
		if ((_40417_pf.get()._field_params.len() != _40817_f.get()._field_params.len())) {
			_case_begin_1ad1132eb:;
			{
				_40358_ok = false;
				return _40358_ok;
			}
		}
		else if ((_1e0105894_is_void(_40417_pf.get()._field_decl.ptr()) != _1e0105894_is_void(_40817_f.get()._field_decl.ptr()))) {
			_case_begin_1ad113373:;
			{
				_40358_ok = false;
				return _40358_ok;
			}
		}
		_match_end_1ad113230:;
	};
	_40358_ok=true;
	jule::Ptr<_1ed77bbbb_TypeKind>* _41717_old = (*_self_)._field_k;;
	{
		auto &expr = _40817_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ad1146c6:;
		if (it != expr.end()) {
			jule::I32 _41814_i = it - expr.begin();
			jule::Ptr<_1e0144938_ParamIns> _41821_fp = *it;
			{
				(*_self_)._field_k=(&(_40417_pf.get()._field_params[_41814_i].get()._field_kind));
				_40358_ok=(_1e0e6e1ac_annotate_kind(&(*_self_), _41821_fp.get()._field_kind) && _40358_ok);
			}
			_iter_next_1ad1146c6:;
			++it;
			_41814_i++;
			goto _iter_begin_1ad1146c6;
		}
		_iter_end_1ad1146c6:;
	};
	if ((!(_1e0105894_is_void(_40417_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_40417_pf.get()._field_result));
		_40358_ok=(_1e0e6e1ac_annotate_kind(&(*_self_), _40817_f.get()._field_result) && _40358_ok);
	};
	(*_self_)._field_k=_41717_old;
	return _40358_ok;
}



inline jule::Bool _1e0e6d783_annotate_ptr(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _43243_k) {
	jule::Bool _43259_ok = jule::Bool();
	jule::Ptr<_1ed788216_Ptr> _43317_pptr = _1ed77e262_ptr((*((*_self_)._field_k)).ptr());;
	if ((_43317_pptr == nullptr)) {
		_43259_ok = false;
		return _43259_ok;
	};
	jule::Ptr<_1ed788216_Ptr> _43817_ptr = _1ed77e262_ptr(_43243_k.ptr());;
	(*_self_)._field_k=(&(_43317_pptr.get()._field_elem));
	_43259_ok = _1e0e6e1ac_annotate_kind(&(*_self_), _43817_ptr.get()._field_elem);
	return _43259_ok;
}



inline jule::Bool _1e0e6da91_annotate_sptr(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _44344_k) {
	jule::Bool _44360_ok = jule::Bool();
	jule::Ptr<_1ed784ba2_Sptr> _44417_ssptr = _1ed77deed_sptr((*((*_self_)._field_k)).ptr());;
	if ((_44417_ssptr == nullptr)) {
		_44360_ok = false;
		return _44360_ok;
	};
	jule::Ptr<_1ed784ba2_Sptr> _44917_sptr = _1ed77deed_sptr(_44344_k.ptr());;
	(*_self_)._field_k=(&(_44417_ssptr.get()._field_elem));
	_44360_ok = _1e0e6e1ac_annotate_kind(&(*_self_), _44917_sptr.get()._field_elem);
	return _44360_ok;
}



inline jule::Bool _1e0e6dd9e_annotate_any(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _45443_k) {
	jule::Bool _45459_ok = jule::Bool();
	jule::Str _45513_kind = _1ed77c073_to_str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ad11be92:;
		if (it != expr.end()) {
			jule::I32 _45613_i = it - expr.begin();
			jule::Ptr<_1e013165b_GenericDecl> _45616_g = *it;
			{
				if ((_45513_kind != _45616_g.get()._field_ident)) {
					goto _iter_next_1ad11be92;
				};
				jule::Ptr<_1ed77bbbb_TypeKind> _46117_t = (*_self_)._field_f.get()._field_generics[_45613_i];;
				{
					
					if ((_46117_t == nullptr)) {
						_case_begin_1ad11d56a:;
						{
							_1e0e6c3b9_push_generic(&(*_self_), _45443_k,_45613_i);
						}
					}
					else if ((!(_1ed77c381_equals(_46117_t, _45443_k)))) {
						_case_begin_1ad11d5e2:;
						{
							_45459_ok = false;
							return _45459_ok;
						}
					}
					_match_end_1ad11d45a:;
				};
				(*((*_self_)._field_k)).get()._field_kind=_45443_k.get()._field_kind;
				_45459_ok = true;
				return _45459_ok;
			}
			_iter_next_1ad11be92:;
			++it;
			_45613_i++;
			goto _iter_begin_1ad11be92;
		}
		_iter_end_1ad11be92:;
	};
	_45459_ok = false;
	return _45459_ok;
}



inline jule::Bool _1e0e6e1ac_annotate_kind(_1e0e6bd36_DynamicTypeAnnotation* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _47744_k) {
	jule::Bool _47760_ok = jule::Bool();
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return _47760_ok;
	};
	{
		
		if (_1e0e6dd9e_annotate_any(&(*_self_), _47744_k)) {
			_case_begin_1ad1211c7:;
			{
				_47760_ok = true;
				return _47760_ok;
			}
		}
		else if ((_1ed77dc89_prim(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad12123d:;
			{
				_47760_ok = _1e0e6c694_annotate_prim(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else if ((_1ed77ec13_slc(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad120e0d:;
			{
				_47760_ok = _1e0e6c9a2_annotate_slc(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else if ((_1ed7806b4_map(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad120e74:;
			{
				_47760_ok = _1e0e6d167_annotate_map(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else if ((_1ed77ee77_fnc(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad120eda:;
			{
				_47760_ok = _1e0e6d475_annotate_fn(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else if ((_1ed77e262_ptr(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad120a12:;
			{
				_47760_ok = _1e0e6d783_annotate_ptr(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else if ((_1ed77deed_sptr(_47744_k.ptr()) != nullptr)) {
			_case_begin_1ad120a78:;
			{
				_47760_ok = _1e0e6da91_annotate_sptr(&(*_self_), _47744_k);
				return _47760_ok;
			}
		}
		else {
			_case_begin_1ad12099b:;
			{
				_47760_ok = false;
				return _47760_ok;
			}
		}
		_match_end_1ad120946:;
	};
}



inline jule::Bool _1e0e6e421_annotate(_1e0e6bd36_DynamicTypeAnnotation* _self_) {
	jule::Bool _50236_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_50236_ok = _1e0e6e1ac_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _50236_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e6bd36_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e70147_push_err_token(_1e0e6eae7_FnCallArgChecker* _self_, jule::Ptr<_1dd9941e0_Token> _51833_token, jule::Str _51848_fmt, jule::Slice<jule::Any> _51861_args) {
	_1e0e1e107_push_err((*_self_)._field_e.get()._field_s.ptr(), _51833_token,_51848_fmt,jule::Any(_51861_args));
}



inline void _1e0e70466_push_err(_1e0e6eae7_FnCallArgChecker* _self_, jule::Str _52227_fmt, jule::Slice<jule::Any> _52240_args) {
	_1e0e70147_push_err_token(&(*_self_), (*_self_)._field_error_token,_52227_fmt,jule::Any(_52240_args));
}



inline jule::Slice<jule::Ptr<_1e0144938_ParamIns>> _1e0e706ca_get_params(_1e0e6eae7_FnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1e01184ab_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr()))) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	};
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1e0e709d8_check_counts(_1e0e6eae7_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>& _53532_params) {
	jule::Bool _53555_ok = jule::Bool();
	jule::I32 _53617_n = _53532_params.len();;
	if (((_53617_n > 0LL) && _1e01184ab_is_self(_53532_params[0LL].get()._field_decl.ptr()))) {
		(_53617_n)--;
	};
	jule::I32 _54117_diff = (_53617_n - (*_self_)._field_args.len());;
	{
		
		if ((_54117_diff == 0LL)) {
			_case_begin_1ad12b6ee:;
			{
				_53555_ok = true;
				return _53555_ok;
			}
		}
		else if (((_53617_n > 0LL) && _53532_params[(_53617_n - 1LL)].get()._field_decl.get()._field_variadic)) {
			_case_begin_1ad12b776:;
			{
				_53555_ok = true;
				return _53555_ok;
			}
		}
		else if (((_54117_diff < 0LL) || (_54117_diff > _53532_params.len()))) {
			_case_begin_1ad12b7ed:;
			{
				_1e0e70466_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_53555_ok = false;
				return _53555_ok;
			}
		}
		_match_end_1ad12b622:;
	};
	jule::Str _55217_idents = jule::Str();;
	for (; (_54117_diff > 0LL); (_54117_diff)--) {
		{
			_55217_idents+=(jule::Str(", ", 2) + _53532_params[(_53617_n - _54117_diff)].get()._field_decl.get()._field_ident);
		}
	_iter_next_1ad12b8a8:;
	}
	_iter_end_1ad12b8a8:;;
	(_55217_idents).mut_slice(2LL);;
	_1e0e70466_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_55217_idents)}));
	_53555_ok = false;
	return _53555_ok;
}



inline jule::Bool _1e0e70e39_check_arg(_1e0e6eae7_FnCallArgChecker* _self_, jule::Ptr<_1e0144938_ParamIns>& _56233_p, jule::Ptr<_1e0e7ce9b_Data>& _56252_arg, jule::Ptr<_1dd9941e0_Token>& _56269_error_token) {
	jule::Bool _56292_ok = jule::Bool();
	if (((*_self_)._field_dynamic_annotation && _1e01472ed_parameter_uses_generics(_56233_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics))) {
		_56292_ok=(!(_56233_p.get()._field_decl.get()._field_variadic));
		if (_56292_ok) {
			_1e0e6bd36_DynamicTypeAnnotation _56625_dta = _1e0e6bd36_DynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_56233_p, ._field_a=_56252_arg, ._field_error_token=_56269_error_token, };;
			_56292_ok=_1e0e6e421_annotate(&_56625_dta);
		};
		if ((!(_56292_ok))) {
			_1e0e70147_push_err_token(&(*_self_), _56269_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_56292_ok = false;
			return _56292_ok;
		};
	};
	if (_1e0e2620d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _56233_p.get()._field_decl.get()._field_mutable,_56233_p.get()._field_decl.get()._field_reference,_56233_p.get()._field_kind,_56252_arg,_56269_error_token)) {
		_1e0e24409_check_assign_type((*_self_)._field_e.get()._field_s, _56233_p.get()._field_decl.get()._field_reference,_56233_p.get()._field_kind,_56252_arg,_56269_error_token);
	};
	_56292_ok = true;
	return _56292_ok;
}



inline jule::Bool _1e0e712e1_push(_1e0e6eae7_FnCallArgChecker* _self_, jule::Ptr<_1e0144938_ParamIns>& _58928_p, jule::Ptr<_1e0128b3c_Expr> _58946_arg) {
	jule::Bool _58960_ok = jule::Bool();
	jule::Ptr<_1ed77bbbb_TypeKind> _59017_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _59113_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1e0e7ce9b_Data> _59217_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_58928_p.get()._field_decl.get()._field_mutable));
	if (((!((*_self_)._field_dynamic_annotation)) && (!(_58928_p.get()._field_decl.get()._field_variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_58928_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_59217_d=_1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any(_58946_arg.get()._field_kind));
	(*_self_)._field_e.get()._field_prefix=_59017_old;
	(*_self_)._field_e.get()._field_immutable=_59113_old_immut;
	if ((_59217_d == nullptr)) {
		_58960_ok = false;
		return _58960_ok;
	};
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_59217_d));;
	_58960_ok = _1e0e70e39_check_arg(&(*_self_), _58928_p,_59217_d,_58946_arg.get()._field_token);
	return _58960_ok;
}



inline jule::Bool _1e0e71698_push_variadic(_1e0e6eae7_FnCallArgChecker* _self_, jule::Ptr<_1e0144938_ParamIns>& _61337_p, jule::I32 _61355_i) {
	jule::Bool _61365_ok = jule::Bool();
	_61365_ok=true;
	jule::Bool _61517_variadiced = false;;
	jule::Bool _61613_more = ((_61355_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1e014013c_SliceExprModel> _61717_model = jule::new_ptr<_1e014013c_SliceExprModel>(_1e014013c_SliceExprModel{._field_elem_kind=_61337_p.get()._field_kind, });;
	jule::Ptr<_1ed77bbbb_TypeKind> _62117_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _62613_variadic = _61337_p.get()._field_kind.get()._field_variadic;;
	_61337_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_61337_p.get()._field_kind.get()._field_variadic=_62613_variadic;
	});;
	for (; (_61355_i < (*_self_)._field_args.len()); (_61355_i)++) {
		{
			jule::Ptr<_1e0128b3c_Expr> _63321_arg = (*_self_)._field_args[_61355_i];;
			{
				auto &_match_expr{ _63321_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1e012b39d_VariadicExpr>>()) {
					_case_begin_1ad13c138:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_61337_p.get()._field_kind}), 8)});
					}
				}
				else {
					_case_begin_1ad13c677:;
					{
						(*_self_)._field_e.get()._field_prefix=_61337_p.get()._field_kind;
					}
				}
				_match_end_1ad13c622:;
			};
			jule::Ptr<_1e0e7ce9b_Data> _64621_d = _1e0e999ce_eval((*_self_)._field_e, _63321_arg);;
			if ((_64621_d == nullptr)) {
				_61365_ok=false;
				goto _iter_next_1ad13bd19;
			};
			if (_64621_d.get()._field_kind.get()._field_variadic) {
				_61517_variadiced=true;
				{
					auto &_match_expr{ _64621_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
						_case_begin_1ad13e7bc:;
						{
							_61717_model=_64621_d.get()._field_model.operator jule::Ptr<_1e014013c_SliceExprModel>();
							_61717_model.get()._field_elem_kind=_61337_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1ad13ebda:;
						{
							_61717_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_64621_d));;
						}
					}
					_match_end_1ad13eb85:;
				};
				_61337_p.get()._field_kind.get()._field_variadic=true;
				_61365_ok=(_61365_ok && _1e0e70e39_check_arg(&(*_self_), _61337_p,_64621_d,_63321_arg.get()._field_token));
				(_61355_i)++;
				goto _iter_end_1ad13bd19;
			};
			_61365_ok=(_61365_ok && _1e0e70e39_check_arg(&(*_self_), _61337_p,_64621_d,_63321_arg.get()._field_token));
			_61717_model.get()._field_elems = jule::alloc_for_append(_61717_model.get()._field_elems,1);_61717_model.get()._field_elems.__push(jule::Any(_64621_d.get()._field_model));;
		}
	_iter_next_1ad13bd19:;
	}
	_iter_end_1ad13bd19:;;
	(*_self_)._field_e.get()._field_prefix=_62117_old;
	if ((_61517_variadiced && _61613_more)) {
		_1e0e70147_push_err_token(&(*_self_), (*_self_)._field_args[_61355_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_61717_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_61717_model));;
	};
	return _61365_ok;
}



inline jule::Bool _1e0e719a6_check_args(_1e0e6eae7_FnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>& _69234_params) {
	jule::Bool _69257_ok = jule::Bool();
	jule::Bool _69313_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	_69257_ok=true;
	jule::I32 _69717_i = 0LL;;
	if (((_69234_params.len() > 0LL) && _1e01184ab_is_self(_69234_params[0LL].get()._field_decl.ptr()))) {
		(_69717_i)++;
	};
	_julec_label_iter:;
	while ((_69717_i < _69234_params.len())) {
		{
			jule::Ptr<_1e0144938_ParamIns> _70421_p = _69234_params[_69717_i];;
			{
				
				if (_70421_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1ad146bd1:;
					{
						_69257_ok=(_1e0e71698_push_variadic(&(*_self_), _70421_p,_69717_i) && _69257_ok);
						goto _iter_end_1ad145509;
					}
				}
				else if (((*_self_)._field_args.len() <= _69717_i)) {
					_case_begin_1ad147594:;
					{
						_69257_ok=false;
						goto _iter_end_1ad145509;
					}
				}
				else {
					_case_begin_1ad14683a:;
					{
						_69257_ok=(_1e0e712e1_push(&(*_self_), _70421_p,(*_self_)._field_args[_69717_i]) && _69257_ok);
					}
				}
				_match_end_1ad1467c4:;
			};
			(_69717_i)++;
		}
	_iter_next_1ad145509:;
	}
	_iter_end_1ad145509:;;
	(*_self_)._field_e.get()._field_arg=_69313_arg;
	return _69257_ok;
}



inline jule::Bool _1e0e71c3c_check_dynamic_type_annotation(_1e0e6eae7_FnCallArgChecker* _self_) {
	jule::Bool _72350_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ad1490ce:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77bbbb_TypeKind> _72416_g = *it;
			{
				if ((_72416_g == nullptr)) {
					_1e0e70466_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_72350_ok = false;
					return _72350_ok;
				};
			}
			_iter_next_1ad1490ce:;
			++it;
			goto _iter_begin_1ad1490ce;
		}
		_iter_end_1ad1490ce:;
	};
	_72350_ok = true;
	return _72350_ok;
}



inline jule::Bool _1e0e71eb2_check(_1e0e6eae7_FnCallArgChecker* _self_) {
	jule::Bool _73326_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1e0144938_ParamIns>> _73417_params = _1e0e706ca_get_params(&(*_self_));;
	_73326_ok=_1e0e709d8_check_counts(&(*_self_), _73417_params);
	if ((!(_73326_ok))) {
		_73326_ok = false;
		return _73326_ok;
	};
	_73326_ok=_1e0e719a6_check_args(&(*_self_), _73417_params);
	if ((_73326_ok && (*_self_)._field_dynamic_annotation)) {
		_73326_ok=_1e0e71c3c_check_dynamic_type_annotation(&(*_self_));
	};
	return _73326_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e6eae7_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e72a0c_push_err(_1e0e72501_StructLitChecker* _self_, jule::Ptr<_1dd9941e0_Token> _75727_token, jule::Str _75742_fmt, jule::Slice<jule::Any> _75755_args) {
	_1e0e7eee2_push_err((*_self_)._field_e.ptr(), _75727_token,_75742_fmt,jule::Any(_75755_args));
}



inline void _1e0e72d2b_push_suggestion(_1e0e72501_StructLitChecker* _self_, jule::Str _76234_fmt, jule::Slice<jule::Any> _76247_args) {
	_1e0e80311_push_suggestion((*_self_)._field_e.ptr(), _76234_fmt,jule::Any(_76247_args));
}



inline void _1e0e731e4_push_match(_1e0e72501_StructLitChecker* _self_, jule::Ptr<_1e01087ba_FieldIns>& _76634_f, jule::Ptr<_1e0e7ce9b_Data>& _76653_d, jule::Ptr<_1dd9941e0_Token>& _76668_error_token) {
	;
	if (_1e0e2620d_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_76634_f.get()._field_kind,_76653_d,_76668_error_token)) {
		_1e0e24409_check_assign_type((*_self_)._field_e.get()._field_s, false,_76634_f.get()._field_kind,_76653_d,_76668_error_token);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1e0116795_StructArgExprModel>(_1e0116795_StructArgExprModel{._field_field=_76634_f, ._field_expr=jule::Any(_76653_d.get()._field_model)}));;
}



inline void _1e0e73513_check_pair(_1e0e72501_StructLitChecker* _self_, jule::Ptr<_1e012d625_FieldExprPair>& _77934_pair, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>& _77961_exprs) {
	jule::Ptr<_1e01087ba_FieldIns> _78117_f = _1e0112b59_find_field((*_self_)._field_s.ptr(), _77934_pair.get()._field_field.get()._field_kind);;
	if ((_78117_f == nullptr)) {
		_1e0e72a0c_push_err(&(*_self_), _77934_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_77934_pair.get()._field_field.get()._field_kind)}));
		return;;
	};
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _78117_f.get()._field_decl.get()._field_public,_78117_f.get()._field_decl.get()._field_token)))) {
		_1e0e72a0c_push_err(&(*_self_), _77934_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_77934_pair.get()._field_field.get()._field_kind)}));
		_1e0e72d2b_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _77961_exprs;
		auto it = expr.begin();
		_iter_begin_1ad154aac:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _79321_expr = *it;
			{
				{
					auto &_match_expr{ _79321_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e012d625_FieldExprPair>>()) {
						_case_begin_1ad155393:;
						{
							jule::Ptr<_1e012d625_FieldExprPair> _79625_dpair = _79321_expr.get()._field_kind.operator jule::Ptr<_1e012d625_FieldExprPair>();;
							{
								
								if ((_77934_pair == _79625_dpair)) {
									_case_begin_1ad15620c:;
									{
										goto _iter_end_1ad154aac;
									}
								}
								else if ((_77934_pair.get()._field_field.get()._field_kind == _79625_dpair.get()._field_field.get()._field_kind)) {
									_case_begin_1ad156284:;
									{
										_1e0e72a0c_push_err(&(*_self_), _77934_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_77934_pair.get()._field_field.get()._field_kind)}));
										goto _iter_end_1ad154aac;
									}
								}
								_match_end_1ad156152:;
							};
						}
					}
					_match_end_1ad15530a:;
				};
			}
			_iter_next_1ad154aac:;
			++it;
			goto _iter_begin_1ad154aac;
		}
		_iter_end_1ad154aac:;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _80717_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_80717_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_78117_f.get()._field_kind;
	jule::Ptr<_1e0e7ce9b_Data> _81117_d = _1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any(_77934_pair.get()._field_expr));;
	if ((_81117_d == nullptr)) {
		return;;
	};
	_1e0e731e4_push_match(&(*_self_), _78117_f,_81117_d,_77934_pair.get()._field_field);
}



inline jule::Bool _1e0e73821_ready_exprs(_1e0e72501_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>& _81835_exprs) {
	jule::Bool _81917_ok = true;;
	{
		auto &expr = _81835_exprs;
		auto it = expr.begin();
		_iter_begin_1ad159c49:;
		if (it != expr.end()) {
			jule::I32 _82014_i = it - expr.begin();
			jule::Ptr<_1e0128b3c_Expr> _82021_expr = *it;
			{
				{
					auto &_match_expr{ _82021_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e012eb43_KeyValPair>>()) {
						_case_begin_1ad15a84e:;
						{
							jule::Ptr<_1e012eb43_KeyValPair> _82325_pair = _82021_expr.get()._field_kind.operator jule::Ptr<_1e012eb43_KeyValPair>();;
							{
								auto &_match_expr{ _82325_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
									_case_begin_1ad15c4cc:;
									{
										goto _match_end_1ad15b7a6;
									}
								}
								else {
									_case_begin_1ad15b83e:;
									{
										_1e0e72a0c_push_err(&(*_self_), _82325_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_81917_ok=false;
										goto _iter_next_1ad159c49;
									}
								}
								_match_end_1ad15b7a6:;
							};
							_81835_exprs[_82014_i].get()._field_kind=jule::Any(jule::new_ptr<_1e012d625_FieldExprPair>(_1e012d625_FieldExprPair{._field_field=_82325_pair.get()._field_key.get()._field_token, ._field_expr=_82325_pair.get()._field_val}));
						}
					}
					_match_end_1ad15a7b6:;
				};
			}
			_iter_next_1ad159c49:;
			++it;
			_82014_i++;
			goto _iter_begin_1ad159c49;
		}
		_iter_end_1ad159c49:;
	};
	return _81917_ok;
}



inline void _1e0e73a96_check(_1e0e72501_StructLitChecker* _self_, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>& _84229_exprs) {
	if ((_84229_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1e0e73821_ready_exprs(&(*_self_), _84229_exprs)))) {
		return;;
	};
	jule::Bool _85117_paired = false;;
	{
		auto &expr = _84229_exprs;
		auto it = expr.begin();
		_iter_begin_1ad15dd19:;
		if (it != expr.end()) {
			jule::I32 _85214_i = it - expr.begin();
			jule::Ptr<_1e0128b3c_Expr> _85221_expr = *it;
			{
				{
					auto &_match_expr{ _85221_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e012d625_FieldExprPair>>()) {
						_case_begin_1ad16476a:;
						{
							jule::Ptr<_1e012d625_FieldExprPair> _85525_pair = _85221_expr.get()._field_kind.operator jule::Ptr<_1e012d625_FieldExprPair>();;
							if (((_85214_i > 0LL) && (!(_85117_paired)))) {
								_1e0e72a0c_push_err(&(*_self_), _85525_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_85117_paired=true;
							_1e0e73513_check_pair(&(*_self_), _85525_pair,_84229_exprs);
						}
					}
					else {
						_case_begin_1ad15e8db:;
						{
							if (_85117_paired) {
								_1e0e72a0c_push_err(&(*_self_), _85221_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_85214_i >= (*_self_)._field_s.get()._field_fields.len())) {
								_1e0e72a0c_push_err(&(*_self_), _85221_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1ad15dd19;
							};
							jule::Ptr<_1e01087ba_FieldIns> _87025_field = (*_self_)._field_s.get()._field_fields[_85214_i];;
							if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _87025_field.get()._field_decl.get()._field_public,_87025_field.get()._field_decl.get()._field_token)))) {
								_1e0e72a0c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1e0e72d2b_push_suggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ed77bbbb_TypeKind> _87825_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_87825_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_87025_field.get()._field_kind;
							jule::Ptr<_1e0e7ce9b_Data> _88225_d = _1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any(_85221_expr.get()._field_kind));;
							if ((_88225_d == nullptr)) {
								goto _iter_next_1ad15dd19;
							};
							_1e0e731e4_push_match(&(*_self_), _87025_field,_88225_d,_85221_expr.get()._field_token);
						}
					}
					_match_end_1ad15e886:;
				};
			}
			_iter_next_1ad15dd19:;
			++it;
			_85214_i++;
			goto _iter_begin_1ad15dd19;
		}
		_iter_end_1ad15dd19:;
	};
	if ((!(_85117_paired))) {
		jule::I32 _89317_n = (*_self_)._field_s.get()._field_fields.len();;
		jule::I32 _89421_diff = (_89317_n - _84229_exprs.len());;
		{
			
			if ((_89421_diff <= 0LL)) {
				_case_begin_1ad1677e5:;
				{
					return;;
				}
			}
			_match_end_1ad1676e6:;
		};
		jule::Str _90021_idents = jule::Str();;
		for (; (_89421_diff > 0LL); (_89421_diff)--) {
			{
				_90021_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[(_89317_n - _89421_diff)].get()._field_decl.get()._field_ident);
			}
		_iter_next_1ad15e5bc:;
		}
		_iter_end_1ad15e5bc:;;
		(_90021_idents).mut_slice(2LL);;
		_1e0e72a0c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_90021_idents)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e72501_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e7457a_build_var(_1e0e740d5_RangeChecker* _self_, jule::Ptr<_1e0135dd0_VarDecl>& _91929_decl) {
	jule::Ptr<_1e0e366e6_Var> _92017_v = _1e014cc82_build_var(_91929_decl);;
	return _92017_v;
}



inline void _1e0e74756_set_size_key(_1e0e740d5_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_a=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1ad16bee2:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1e0e3576c_IterRelation>(_1e0e3576c_IterRelation{._field_range=(*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e0e366e6_Var>()});
			}
		}
		_match_end_1ad16be59:;
	};
}



inline void _1e0e74b41_check_range_expr_validity(_1e0e740d5_RangeChecker* _self_, jule::Ptr<_1e0e7ce9b_Data>& _95049_d, jule::Ptr<_1e0e366e6_Var>& _95060_key, jule::Ptr<_1ed77bbbb_TypeKind>& _95076_k) {
	jule::Bool _95117__mut = _95060_key.get()._field_mutable;;
	if ((_95117__mut && (!(_1ed77d074_mutable(_95076_k.ptr()))))) {
		_95117__mut=false;
	};
	_1e0e2620d_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _95117__mut,_95060_key.get()._field_reference,_95060_key.get()._field_kind.get()._field_kind,_95049_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1e0e74d2d_check_slice(_1e0e740d5_RangeChecker* _self_) {
	_1e0e74756_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1ed78560e_Slc> _96917_slc = _1ed77ec13_slc((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_96917_slc.get()._field_elem});
	_1e0e74b41_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96917_slc.get()._field_elem);
}



inline void _1e0e75009_check_array(_1e0e740d5_RangeChecker* _self_) {
	_1e0e74756_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1ed7877a9_Arr> _98217_arr = _1ed77e99e_arr((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_98217_arr.get()._field_elem});
	_1e0e74b41_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_98217_arr.get()._field_elem);
}



inline void _1e0e751d5_check_map_key_a(_1e0e740d5_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_a == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1ed786bb5_Map> _99417_m = _1ed7806b4_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_a=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_99417_m.get()._field_key});
	jule::Ptr<_1e0e7ce9b_Data> _99817_d = jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d)));;
	_99817_d.get()._field_kind=_99417_m.get()._field_key;
	_1e0e74b41_check_range_expr_validity(&(*_self_), _99817_d,(*_self_)._field_kind.get()._field_key_a,_99417_m.get()._field_key);
}



inline void _1e0e753b1_check_map_key_b(_1e0e740d5_RangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	jule::Ptr<_1ed786bb5_Map> _100917_m = _1ed7806b4_map((*_self_)._field_d.get()._field_kind.ptr());;
	(*_self_)._field_kind.get()._field_key_b=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_100917_m.get()._field_val});
	jule::Ptr<_1e0e7ce9b_Data> _101317_d = jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d)));;
	_101317_d.get()._field_kind=_100917_m.get()._field_val;
	_1e0e74b41_check_range_expr_validity(&(*_self_), _101317_d,(*_self_)._field_kind.get()._field_key_b,_100917_m.get()._field_val);
}



inline void _1e0e7558c_check_map(_1e0e740d5_RangeChecker* _self_) {
	_1e0e751d5_check_map_key_a(&(*_self_));
	_1e0e753b1_check_map_key_b(&(*_self_));
}



inline void _1e0e75768_check_str(_1e0e740d5_RangeChecker* _self_) {
	_1e0e74756_set_size_key(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_key_b == nullptr) || _1dd996940_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident))) {
		return;;
	};
	(*_self_)._field_kind.get()._field_key_b=_1e0e7457a_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1e0e759cc_check(_1e0e740d5_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1ad180445:;
		}
		else if ((_1ed77ec13_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad1804ab:;
			{
				_1e0e74d2d_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1ed77e99e_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad180522:;
			{
				_1e0e75009_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1ed7806b4_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad180588:;
			{
				_1e0e7558c_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1ad1803ce:;
			{
				jule::Ptr<_1ed781693_Prim> _105217_prim = _1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr());;
				if (((_105217_prim != nullptr) && _1ed784652_is_str(_105217_prim.ptr()))) {
					_1e0e75768_check_str(&(*_self_));
					return true;
				};
			}
		}
		_match_end_1ad180313:;
	};
	_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e740d5_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e76725_prepare_types(_1e0e7626e_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1e01462db_types((*_self_)._field_f.ptr());
	};
}



inline void _1e0e7699a_prepare_exprs(_1e0e7626e_RetTypeChecker* _self_, jule::Ptr<_1e0128b3c_Expr>& _108137_e) {
	if ((_108137_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _108137_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e0129423_TupleExpr>>()) {
			_case_begin_1ad185d1e:;
			{
				(*_self_)._field_exprs=_108137_e.get()._field_kind.operator jule::Ptr<_1e0129423_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1ad185e95:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_108137_e);;
			}
		}
		_match_end_1ad185e40:;
	};
}



inline void _1e0e76b76_ret_vars(_1e0e7626e_RetTypeChecker* _self_) {
	if ((((*_self_)._field_f == nullptr) || _1e0105894_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		return;;
	};
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1e0e366e6_Var>>::alloc(0LL,(*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len());
	jule::Ptr<_1e0debe4d_ScopeChecker> _109917_root_scope = _1e0dee516_get_root((*_self_)._field_sc);;
	jule::I32 _110117_j = 0LL;;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1ad189141:;
		if (it != expr.end()) {
			jule::I32 _110213_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _110216_ident = *it;
			{
				if (((!(_1dd996940_is_ignore_ident(_110216_ident.get()._field_kind))) && (!(_1dd996bd7_is_anon_ident(_110216_ident.get()._field_kind))))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109917_root_scope.get()._field_table.get()._field_vars[_110117_j]);;
					(_110117_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_ident=jule::Str("_", 1), ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=(*_self_)._field_types[_110213_i]}), }));;
				};
			}
			_iter_next_1ad189141:;
			++it;
			_110213_i++;
			goto _iter_begin_1ad189141;
		}
		_iter_end_1ad189141:;
	};
	if ((_110117_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	};
}



inline void _1e0e76d52_check_exprs(_1e0e7626e_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _112517_datas = jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>::alloc(0LL,(*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ad18cb06:;
		if (it != expr.end()) {
			jule::I32 _112714_i = it - expr.begin();
			jule::Ptr<_1e0128b3c_Expr> _112721_expr = *it;
			{
				if ((_112714_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1ad18cb06;
				};
				jule::Ptr<_1ed77bbbb_TypeKind> _113221_t = (*_self_)._field_types[_112714_i];;
				jule::Ptr<_1e0e7ce9b_Data> _113421_d = _1e0e99cdc_eval_expr(_1e0e23b01_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1ed7974de_Lookup>((*_self_)._field_sc, 0),_113221_t), _112721_expr);;
				if ((_113421_d == nullptr)) {
					goto _iter_next_1ad18cb06;
				};
				_112517_datas = jule::alloc_for_append(_112517_datas,1);_112517_datas.__push(_113421_d);;
				if (((!(_113421_d.get()._field_mutable)) && _1ed77d074_mutable(_113421_d.get()._field_kind.ptr()))) {
					_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1e0e6a4d8_AssignTypeChecker _114621_ac = _1e0e6a4d8_AssignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_113221_t, ._field_d=_113421_d, ._field_error_token=(*_self_)._field_error_token};;
				_1e0e6b660_check(&_114621_ac);
			}
			_iter_next_1ad18cb06:;
			++it;
			_112714_i++;
			goto _iter_begin_1ad18cb06;
		}
		_iter_end_1ad18cb06:;
	};
	if ((_112517_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1e0141b77_TupleExprModel>(_1e0141b77_TupleExprModel{._field_datas=_112517_datas}));
	} else if ((_112517_datas.len() == 1LL)) {
		(*_self_)._field_model=jule::Any(_112517_datas[0LL].get()._field_model);
	};
}



inline jule::Bool _1e0e77160_check(_1e0e7626e_RetTypeChecker* _self_, jule::Ptr<_1e0128b3c_Expr>& _116529_e) {
	_1e0e76725_prepare_types(&(*_self_));
	_1e0e7699a_prepare_exprs(&(*_self_), _116529_e);
	_1e0e76b76_ret_vars(&(*_self_));
	jule::I32 _117013_n = (*_self_)._field_exprs.len();;
	if (((_117013_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1e010461d_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		};
		return true;
	};
	if ((((_117013_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1e0105894_is_void((*_self_)._field_f.get()._field_decl.ptr()))) {
		_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	};
	if ((_117013_n > (*_self_)._field_types.len())) {
		_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_117013_n < (*_self_)._field_types.len())) {
		_1e0e1e107_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1e0e76d52_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e7626e_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e78518_find_package(_1e0e77eeb_SymbolTable* _self_, jule::Str _2635_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ad19e2cc:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_ident == _2635_ident)) {
					return _2721_pkg;
				};
			}
			_iter_next_1ad19e2cc:;
			++it;
			goto _iter_begin_1ad19e2cc;
		}
		_iter_end_1ad19e2cc:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1e0e78826_select_package(_1e0e77eeb_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)> _3837_selector) {
	if ((_3837_selector == nullptr)) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1ad1a0553:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _4321_pkg = *it;
			{
				if (_3837_selector(_4321_pkg)) {
					return _4321_pkg;
				};
			}
			_iter_next_1ad1a0553:;
			++it;
			goto _iter_begin_1ad1a0553;
		}
		_iter_end_1ad1a0553:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e78bcd_find_var(_1e0e77eeb_SymbolTable* _self_, jule::Str _5331_ident, jule::Bool _5343_cpp_linked) {
	return _1e0e7a790___find_var(&(*_self_), _5331_ident,_5343_cpp_linked,false);
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e79085_find_type_alias(_1e0e77eeb_SymbolTable* _self_, jule::Str _5938_ident, jule::Bool _5950_cpp_linked) {
	return _1e0e7abe1___find_type_alias(&(*_self_), _5938_ident,_5950_cpp_linked,false);
}



inline jule::Ptr<_1e010261b_Struct> _1e0e7943c_find_struct(_1e0e77eeb_SymbolTable* _self_, jule::Str _6534_ident, jule::Bool _6546_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad1a2dd5:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _6621_s = *it;
			{
				if (((_6621_s.get()._field_ident == _6534_ident) && (_6621_s.get()._field_cpp_linked == _6546_cpp_linked))) {
					return _6621_s;
				};
			}
			_iter_next_1ad1a2dd5:;
			++it;
			goto _iter_begin_1ad1a2dd5;
		}
		_iter_end_1ad1a2dd5:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0144581_Fn> _1e0e797e4_find_fn(_1e0e77eeb_SymbolTable* _self_, jule::Str _7630_ident, jule::Bool _7642_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad1a425a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _7721_f = *it;
			{
				if (((_7721_f.get()._field_ident == _7630_ident) && (_7721_f.get()._field_cpp_linked == _7642_cpp_linked))) {
					return _7721_f;
				};
			}
			_iter_next_1ad1a425a:;
			++it;
			goto _iter_begin_1ad1a425a;
		}
		_iter_end_1ad1a425a:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0567d06_Trait> _1e0e79b02_find_trait(_1e0e77eeb_SymbolTable* _self_, jule::Str _8733_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad1a53c1:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> _8821_t = *it;
			{
				if ((_8821_t.get()._field_ident == _8733_ident)) {
					return _8821_t;
				};
			}
			_iter_next_1ad1a53c1:;
			++it;
			goto _iter_begin_1ad1a53c1;
		}
		_iter_end_1ad1a53c1:;
	};
	return nullptr;
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0e79e10_find_enum(_1e0e77eeb_SymbolTable* _self_, jule::Str _9832_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad1a625c:;
		if (it != expr.end()) {
			jule::Ptr<_1e057b8b9_Enum> _9921_e = *it;
			{
				if ((_9921_e.get()._field_ident == _9832_ident)) {
					return _9921_e;
				};
			}
			_iter_next_1ad1a625c:;
			++it;
			goto _iter_begin_1ad1a625c;
		}
		_iter_end_1ad1a625c:;
	};
	return nullptr;
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e7a21d_find_type_enum(_1e0e77eeb_SymbolTable* _self_, jule::Str _10937_ident) {
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ad1a70d7:;
		if (it != expr.end()) {
			jule::Ptr<_1e04c643a_TypeEnum> _11021_e = *it;
			{
				if ((_11021_e.get()._field_ident == _10937_ident)) {
					return _11021_e;
				};
			}
			_iter_next_1ad1a70d7:;
			++it;
			goto _iter_begin_1ad1a70d7;
		}
		_iter_end_1ad1a70d7:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e7a790___find_var(_1e0e77eeb_SymbolTable* _self_, jule::Str _12029_ident, jule::Bool _12041_cpp_linked, jule::Bool _12059_reverse) {
	if (_12059_reverse) {
		jule::I32 _12221_i = ((*_self_)._field_vars.len() - 1LL);;
		for (; (_12221_i >= 0LL); (_12221_i)--) {
			{
				jule::Ptr<_1e0e366e6_Var> _12425_v = (*_self_)._field_vars[_12221_i];;
				if (((_12425_v.get()._field_ident == _12029_ident) && (_12425_v.get()._field_cpp_linked == _12041_cpp_linked))) {
					return _12425_v;
				};
			}
		_iter_next_1ad1a879d:;
		}
		_iter_end_1ad1a879d:;;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1ad1aa085:;
			if (it != expr.end()) {
				jule::Ptr<_1e0e366e6_Var> _13025_v = *it;
				{
					if (((_13025_v.get()._field_ident == _12029_ident) && (_13025_v.get()._field_cpp_linked == _12041_cpp_linked))) {
						return _13025_v;
					};
				}
				_iter_next_1ad1aa085:;
				++it;
				goto _iter_begin_1ad1aa085;
			}
			_iter_end_1ad1aa085:;
		};
	};
	return nullptr;
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e7abe1___find_type_alias(_1e0e77eeb_SymbolTable* _self_, jule::Str _13936_ident, jule::Bool _13948_cpp_linked, jule::Bool _13966_reverse) {
	if (_13966_reverse) {
		jule::I32 _14121_i = ((*_self_)._field_type_aliases.len() - 1LL);;
		for (; (_14121_i >= 0LL); (_14121_i)--) {
			{
				jule::Ptr<_1ed77ae84_TypeAlias> _14325_ta = (*_self_)._field_type_aliases[_14121_i];;
				if (((_14325_ta.get()._field_ident == _13936_ident) && (_14325_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
					return _14325_ta;
				};
			}
		_iter_next_1ad1ab73a:;
		}
		_iter_end_1ad1ab73a:;;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1ad1ad022:;
			if (it != expr.end()) {
				jule::Ptr<_1ed77ae84_TypeAlias> _14925_ta = *it;
				{
					if (((_14925_ta.get()._field_ident == _13936_ident) && (_14925_ta.get()._field_cpp_linked == _13948_cpp_linked))) {
						return _14925_ta;
					};
				}
				_iter_next_1ad1ad022:;
				++it;
				goto _iter_begin_1ad1ad022;
			}
			_iter_end_1ad1ad022:;
		};
	};
	return nullptr;
}



inline jule::Any _1e0e7b098_def_by_ident(_1e0e77eeb_SymbolTable* _self_, jule::Str _16031_ident, jule::Bool _16043_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ad1ad51c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _16121_v = *it;
			{
				if (((_16121_v.get()._field_ident == _16031_ident) && (_16121_v.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16121_v);
				};
			}
			_iter_next_1ad1ad51c:;
			++it;
			goto _iter_begin_1ad1ad51c;
		}
		_iter_end_1ad1ad51c:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ad1ae991:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77ae84_TypeAlias> _16721_ta = *it;
			{
				if (((_16721_ta.get()._field_ident == _16031_ident) && (_16721_ta.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_16721_ta);
				};
			}
			_iter_next_1ad1ae991:;
			++it;
			goto _iter_begin_1ad1ae991;
		}
		_iter_end_1ad1ae991:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad1ae584:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _17321_s = *it;
			{
				if (((_17321_s.get()._field_ident == _16031_ident) && (_17321_s.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17321_s);
				};
			}
			_iter_next_1ad1ae584:;
			++it;
			goto _iter_begin_1ad1ae584;
		}
		_iter_end_1ad1ae584:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad1b02dd:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _17921_f = *it;
			{
				if (((_17921_f.get()._field_ident == _16031_ident) && (_17921_f.get()._field_cpp_linked == _16043_cpp_linked))) {
					return jule::Any(_17921_f);
				};
			}
			_iter_next_1ad1b02dd:;
			++it;
			goto _iter_begin_1ad1b02dd;
		}
		_iter_end_1ad1b02dd:;
	};
	if (_16043_cpp_linked) {
		return nullptr;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad1b0eae:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> _18921_t = *it;
			{
				if ((_18921_t.get()._field_ident == _16031_ident)) {
					return jule::Any(_18921_t);
				};
			}
			_iter_next_1ad1b0eae:;
			++it;
			goto _iter_begin_1ad1b0eae;
		}
		_iter_end_1ad1b0eae:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad1b35ee:;
		if (it != expr.end()) {
			jule::Ptr<_1e057b8b9_Enum> _19521_e = *it;
			{
				if ((_19521_e.get()._field_ident == _16031_ident)) {
					return jule::Any(_19521_e);
				};
			}
			_iter_next_1ad1b35ee:;
			++it;
			goto _iter_begin_1ad1b35ee;
		}
		_iter_end_1ad1b35ee:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ad1b4105:;
		if (it != expr.end()) {
			jule::Ptr<_1e04c643a_TypeEnum> _20121_te = *it;
			{
				if ((_20121_te.get()._field_ident == _16031_ident)) {
					return jule::Any(_20121_te);
				};
			}
			_iter_next_1ad1b4105:;
			++it;
			goto _iter_begin_1ad1b4105;
		}
		_iter_end_1ad1b4105:;
	};
	return nullptr;
}



inline jule::Bool _1e0e7b4e9_is_duplicated_ident(_1e0e77eeb_SymbolTable* _self_, jule::Uintptr _21334_itself, jule::Str _21351_ident, jule::Bool _21363_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ad1b4cb5:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> &_21416_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21416_v) != _21334_itself) && (_21416_v.get()._field_ident == _21351_ident)) && (_21416_v.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ad1b4cb5:;
			++it;
			goto _iter_begin_1ad1b4cb5;
		}
		_iter_end_1ad1b4cb5:;
	};
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1ad1b617e:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77ae84_TypeAlias> &_22016_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22016_ta) != _21334_itself) && (_22016_ta.get()._field_ident == _21351_ident)) && (_22016_ta.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ad1b617e:;
			++it;
			goto _iter_begin_1ad1b617e;
		}
		_iter_end_1ad1b617e:;
	};
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1ad1b52b0:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> &_22616_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22616_s) != _21334_itself) && (_22616_s.get()._field_ident == _21351_ident)) && (_22616_s.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ad1b52b0:;
			++it;
			goto _iter_begin_1ad1b52b0;
		}
		_iter_end_1ad1b52b0:;
	};
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1ad1b6349:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> &_23216_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23216_f) != _21334_itself) && (_23216_f.get()._field_ident == _21351_ident)) && (_23216_f.get()._field_cpp_linked == _21363_cpp_linked))) {
					return true;
				};
			}
			_iter_next_1ad1b6349:;
			++it;
			goto _iter_begin_1ad1b6349;
		}
		_iter_end_1ad1b6349:;
	};
	if (_21363_cpp_linked) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1ad1b954a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0567d06_Trait> &_24216_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24216_t) != _21334_itself) && (_24216_t.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ad1b954a:;
			++it;
			goto _iter_begin_1ad1b954a;
		}
		_iter_end_1ad1b954a:;
	};
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1ad1b93c4:;
		if (it != expr.end()) {
			jule::Ptr<_1e057b8b9_Enum> &_24816_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24816_e) != _21334_itself) && (_24816_e.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ad1b93c4:;
			++it;
			goto _iter_begin_1ad1b93c4;
		}
		_iter_end_1ad1b93c4:;
	};
	{
		auto &expr = (*_self_)._field_type_enums;
		auto it = expr.begin();
		_iter_begin_1ad1ba408:;
		if (it != expr.end()) {
			jule::Ptr<_1e04c643a_TypeEnum> &_25416_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25416_te) != _21334_itself) && (_25416_te.get()._field_ident == _21351_ident))) {
					return true;
				};
			}
			_iter_next_1ad1ba408:;
			++it;
			goto _iter_begin_1ad1ba408;
		}
		_iter_end_1ad1ba408:;
	};
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e77eeb_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "type_enums:" << _Src._field_type_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e0e7d386_is_nil(_1e0e7ce9b_Data* _self_) {
	return _1ed77ca9b_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1e0e7d5ea_is_void(_1e0e7ce9b_Data* _self_) {
	return _1ed77cd10_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1e0e7d85e_is_const(_1e0e7ce9b_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1e0e7db6c_good_operand(_1e0e7ce9b_Data* _self_, jule::Ptr<_1e0e7ce9b_Data>& _9436_other) {
	return ((((_1ed77dc89_prim(_9436_other.get()._field_kind.ptr()) == nullptr) || (!(_1ed7848b6_is_any(_1ed77dc89_prim(_9436_other.get()._field_kind.ptr()).ptr())))) && (_1ed780450_trt(_9436_other.get()._field_kind.ptr()) == nullptr)) && (!(_1ed77ca9b_is_nil((*_self_)._field_kind.ptr()))));
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e7ce9b_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e7e024_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1e0e7eee2_push_err(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _12227_token, jule::Str _12242_fmt, jule::Slice<jule::Any> _12255_args) {
	_1e0e1e107_push_err((*_self_)._field_s.ptr(), _12227_token,_12242_fmt,jule::Any(_12255_args));
}



inline void _1e0e80311_push_suggestion(_1e0e7ea19_Eval* _self_, jule::Str _12734_fmt, jule::Slice<jule::Any> _12747_args) {
	_1e0e1e426_push_suggestion((*_self_)._field_s.ptr(), _12734_fmt,jule::Any(_12747_args));
}



inline void _1e0e804dc_allow_builtin(_1e0e7ea19_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1e0e806b8_disallow_builtin(_1e0e7ea19_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1e0e8092c_is_unsafe(_1e0e7ea19_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1e0e80b91_is_global(_1e0e7ea19_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e1b3bd_Sema>>()) {
			_case_begin_1ad1eb192:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ad1eb4e4:;
			{
				return false;
			}
		}
		_match_end_1ad1eb0b5:;
	};
}



inline jule::Bool _1e0e80e9e_apply_numeric_prefix(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _15444_d) {
	if (((((_15444_d == nullptr) || (!(_1e0e7d85e_is_const(_15444_d.ptr())))) || (_1ed77dc89_prim(_15444_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;
	};
	jule::Ptr<_1ed781693_Prim> _16113_prim = _1ed77dc89_prim((*_self_)._field_prefix.ptr());;
	if ((_16113_prim == nullptr)) {
		return false;
	};
	{
		
		if (_1e0de9c92_is_float(_1ed781a06_to_str(_16113_prim.ptr()))) {
			_case_begin_1ad1ed958:;
			{
				_15444_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>((*((*_self_)._field_prefix)));
				_1e0d52139_set_f64(_15444_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e0d513be_as_f64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e0de9423_is_sig_int(_1ed781a06_to_str(_16113_prim.ptr()))) {
			_case_begin_1ad1ed9be:;
			{
				if ((!(_1e0e68a9c_sig_assignable(_1ed781a06_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>((*((*_self_)._field_prefix)));
				_1e0d51644_set_i64(_15444_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_15444_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e0de970e_is_unsig_int(_1ed781a06_to_str(_16113_prim.ptr()))) {
			_case_begin_1ad1eda35:;
			{
				if ((!(_1e0e68bce_unsig_assignable(_1ed781a06_to_str(_16113_prim.ptr()),_15444_d)))) {
					return false;
				};
				_15444_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>((*((*_self_)._field_prefix)));
				_1e0d518b9_set_u64(_15444_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_15444_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1ad1edc88:;
	};
	return true;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81213_lit_nil(_1e0e7ea19_Eval* _self_) {
	jule::Ptr<_1e0d4da1a_Const> _19017_constant = static__1e0d4ead7_new_nil();;
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=nullptr}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_19017_constant), ._field_decl=false, ._field_constant=_19017_constant});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81521_lit_str(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _20123_l) {
	jule::Str _20217_s = _20123_l.get()._field_value.slice(1LL,(_20123_l.get()._field_value.len() - 1LL));;
	if (_1dd995543_is_raw_str(_20123_l.get()._field_value)) {
		_20217_s=_1e0e67b67_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	} else {
		_20217_s=_1e0e67e20_to_str(static_cast<jule::Slice<jule::U8>>(_20217_s));
	};
	jule::Ptr<_1e0d4da1a_Const> _20817_constant = static__1e0d4e642_new_str(_20217_s);;
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("str", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_20817_constant), ._field_decl=false, ._field_constant=_20817_constant});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8182e_lit_bool(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _22224_l) {
	jule::Ptr<_1e0d4da1a_Const> _22317_constant = static__1e0d4e39a_new_bool((_22224_l.get()._field_value == jule::Str("true", 4)));;
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_22317_constant), ._field_decl=false, ._field_constant=_22317_constant});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81b3c_lit_rune(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _23624_l) {
	;
	;
	jule::Str _24013_lt = _23624_l.get()._field_value.slice(1LL,(_23624_l.get()._field_value.len() - 1LL));;
	jule::I32 _24113_r = _1e0e67a35_to_rune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1e0e7ce9b_Data> _24217_data = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, ._field_constant=static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _25013_is_ascii = _1e0e66061_is_ascii(_24113_r);;
	if (_25013_is_ascii) {
		_24217_data.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u8", 2)), 6)});
	} else {
		_24217_data.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i32", 3)), 6)});
	};
	_24217_data.get()._field_model=jule::Any(jule::new_ptr<_1e0143904_RuneExprModel>(_1e0143904_RuneExprModel{._field_code=_24113_r}));
	_24217_data.get()._field_is_rune=true;
	return _24217_data;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e81e4a_lit_float(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _26625_l) {
	;
	jule::F64 _26913_f = ({
		auto except = _1e083d131_parse_float(_26625_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e0d4da1a_Const> _27017_constant = static__1e0d4e8d9_new_f64(_26913_f);;
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_27017_constant), ._field_decl=false, ._field_constant=_27017_constant});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82258_lit_int(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _28427_l) {
	;
	jule::Str _28717_lit = _28427_l.get()._field_value;;
	jule::I32 _28817_base = 0LL;;
	{
		
		if (_1dd588048_has_prefix(_28717_lit,jule::Str("0x", 2))) {
			_case_begin_1ad2102b6:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=16LL;
			}
		}
		else if (_1dd588048_has_prefix(_28717_lit,jule::Str("0b", 2))) {
			_case_begin_1ad210580:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=2LL;
			}
		}
		else if (_1dd588048_has_prefix(_28717_lit,jule::Str("0o", 2))) {
			_case_begin_1ad2105e6:;
			{
				(_28717_lit).mut_slice(2LL);;
				_28817_base=8LL;
			}
		}
		else if (((_28717_lit[0LL] == '0') && (_28717_lit.len() > 1LL))) {
			_case_begin_1ad20ee86:;
			{
				(_28717_lit).mut_slice(1LL);;
				_28817_base=8LL;
			}
		}
		else {
			_case_begin_1ad20ee20:;
			{
				_28817_base=10LL;
			}
		}
		_match_end_1ad20eda9:;
	};
	jule::Ptr<_1e0e7ce9b_Data> _30817_d = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Bool _31417_ok = true;;
	jule::I64 _31513_sig = ({
		auto except = _1e09b1628_parse_int(_28717_lit,_28817_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31417_ok=false;
			0LL;
		});
	});;
	if (_31417_ok) {
		_30817_d.get()._field_constant=static__1e0d4dd5b_new_i64(_31513_sig);
		_30817_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32517_unsig = ({
			auto except = _1e08d7d46_parse_uint(_28717_lit,_28817_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1e0e7eee2_push_err(&(*_self_), _28427_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1e0e80311_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});;
		_30817_d.get()._field_constant=static__1e0d4e103_new_u64(_32517_unsig);
		_30817_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("uint", 4)), 6)});
	};
	_30817_d.get()._field_model=jule::Any(_30817_d.get()._field_constant);
	if ((!(_1e0e80e9e_apply_numeric_prefix(&(*_self_), _30817_d)))) {
		_1ed776ce8_fit_bitsize(_30817_d);
	};
	return _30817_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82566_lit_num(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr>& _34627_l) {
	{
		
		if (_1dd996159_is_float(_34627_l.get()._field_value)) {
			_case_begin_1ad218cc5:;
			{
				return _1e0e81e4a_lit_float(&(*_self_), _34627_l);
			}
		}
		else {
			_case_begin_1ad21827a:;
			{
				return _1e0e82258_lit_int(&(*_self_), _34627_l);
			}
		}
		_match_end_1ad2181ae:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e82874_eval_lit(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01297a8_LitExpr> _35527_lit) {
	{
		
		if (_1e0129b0a_is_nil(_35527_lit.ptr())) {
			_case_begin_1ad219c71:;
			{
				return _1e0e81213_lit_nil(&(*_self_));
			}
		}
		else if (_1dd99529b_is_str(_35527_lit.get()._field_value)) {
			_case_begin_1ad219cd7:;
			{
				return _1e0e81521_lit_str(&(*_self_), _35527_lit);
			}
		}
		else if (_1dd995db2_is_bool(_35527_lit.get()._field_value)) {
			_case_begin_1ad219a0c:;
			{
				return _1e0e8182e_lit_bool(&(*_self_), _35527_lit);
			}
		}
		else if (_1dd9957da_is_rune(_35527_lit.get()._field_value)) {
			_case_begin_1ad219a73:;
			{
				return _1e0e81b3c_lit_rune(&(*_self_), _35527_lit);
			}
		}
		else if (_1dd996401_is_num(_35527_lit.get()._field_value)) {
			_case_begin_1ad219ad9:;
			{
				return _1e0e82566_lit_num(&(*_self_), _35527_lit);
			}
		}
		else {
			_case_begin_1ad2190d3:;
			{
				return nullptr;
			}
		}
		_match_end_1ad21905b:;
	};
}



inline jule::Any _1e0e82b82_find_builtins(_1e0e7ea19_Eval* _self_, jule::Str _37232_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e13272_ImportInfo>>()) {
			_case_begin_1ad21c108:;
			{
				jule::Any _37521_def = _1ed776ad9_find_builtins_import(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e0e13272_ImportInfo>());;
				if ((_37521_def != nullptr)) {
					return jule::Any(_37521_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e1b3bd_Sema>>()) {
			_case_begin_1ad21c16e:;
			{
				jule::Any _38021_def = _1ed777777_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e0e1b3bd_Sema>());;
				if ((_38021_def != nullptr)) {
					return jule::Any(_38021_def);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad21c6ad:;
			{
				jule::Any _38521_def = _1ed777777_find_builtins_sema(_37232_ident,(*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>().get()._field_s);;
				if ((_38521_def != nullptr)) {
					return jule::Any(_38521_def);
				};
			}
		}
		_match_end_1ad21c05e:;
	};
	if ((*_self_)._field_dis_builtin) {
		return nullptr;
	};
	return jule::Any(_1ed7d1490_find_builtin_def(_37232_ident));
}



inline jule::Any _1e0e83039_get_def(_1e0e7ea19_Eval* _self_, jule::Str _39626_ident, jule::Bool _39638_cpp_linked) {
	if ((!(_39638_cpp_linked))) {
		jule::Ptr<_1e057b8b9_Enum> _39821_enm = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed79708d_find_enum((*_self_)._field_lookup, _39626_ident);;
		if ((_39821_enm != nullptr)) {
			return jule::Any(_39821_enm);
		};
		jule::Ptr<_1e04c643a_TypeEnum> _40321_tenm = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed79739b_find_type_enum((*_self_)._field_lookup, _39626_ident);;
		if ((_40321_tenm != nullptr)) {
			return jule::Any(_40321_tenm);
		};
	};
	jule::Ptr<_1e0e366e6_Var> _40917_v = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed795d5b_find_var((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_40917_v != nullptr)) {
		return jule::Any(_40917_v);
	};
	jule::Ptr<_1e0144581_Fn> _41417_f = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed796972_find_fn((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41417_f != nullptr)) {
		return jule::Any(_41417_f);
	};
	jule::Ptr<_1e010261b_Struct> _41917_s = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed7965ba_find_struct((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_41917_s != nullptr)) {
		return jule::Any(_41917_s);
	};
	jule::Ptr<_1ed77ae84_TypeAlias> _42417_ta = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed796213_find_type_alias((*_self_)._field_lookup, _39626_ident,_39638_cpp_linked);;
	if ((_42417_ta != nullptr)) {
		return jule::Any(_42417_ta);
	};
	return jule::Any(_1e0e82b82_find_builtins(&(*_self_), _39626_ident));
}



inline void _1ad235330_push_reference(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01457c4_FnIns>& _43241_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad236d04:;
			{
				jule::Ptr<_1e0debe4d_ScopeChecker> _43521_sc = _1e0dee77a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>());;
				if ((!(_1ad2379a3_exist(_43521_sc.get()._field_owner.get()._field_refers.ptr(), _43241_ref)))) {
					_1e0148cc2_push(_43521_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		else {
			_case_begin_1ad2365b7:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ad2379a3_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43241_ref))))) {
					_1e0148cc2_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		_match_end_1ad236562:;
	};
}

inline void _1ad24a345_push_reference(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e366e6_Var>& _43241_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad24bca3:;
			{
				jule::Ptr<_1e0debe4d_ScopeChecker> _43521_sc = _1e0dee77a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>());;
				if ((!(_1ad24c930_exist(_43521_sc.get()._field_owner.get()._field_refers.ptr(), _43241_ref)))) {
					_1e0148cc2_push(_43521_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		else {
			_case_begin_1ad24b566:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ad24c930_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43241_ref))))) {
					_1e0148cc2_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		_match_end_1ad24b511:;
	};
}

inline void _1ad2ce42e_push_reference(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e010a05d_StructIns>& _43241_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad2d0e36:;
			{
				jule::Ptr<_1e0debe4d_ScopeChecker> _43521_sc = _1e0dee77a_get_hard_root((*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>());;
				if ((!(_1ad2d1ab3_exist(_43521_sc.get()._field_owner.get()._field_refers.ptr(), _43241_ref)))) {
					_1e0148cc2_push(_43521_sc.get()._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		else {
			_case_begin_1ad2d06e9:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ad2d1ab3_exist((*_self_)._field_owner.get()._field_refers.ptr(), _43241_ref))))) {
					_1e0148cc2_push((*_self_)._field_owner.get()._field_refers.ptr(), jule::Any(_43241_ref));
				};
			}
		}
		_match_end_1ad2d0694:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e835bc___eval_enum(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e057b8b9_Enum> _44630_enm) {
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_44630_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e83974_eval_enum(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e057b8b9_Enum> _45832_enm, jule::Ptr<_1dd9941e0_Token> _45844_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _45832_enm.get()._field_public,_45832_enm.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _45844_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45832_enm.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e0e835bc___eval_enum(&(*_self_), _45832_enm);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e83c82___eval_type_enum(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e04c643a_TypeEnum> _46735_enm) {
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_46735_enm, 4)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84139_eval_type_enum(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e04c643a_TypeEnum> _47937_enm, jule::Ptr<_1dd9941e0_Token> _47953_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _47937_enm.get()._field_public,_47937_enm.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _47953_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47937_enm.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _1e0e83c82___eval_type_enum(&(*_self_), _47937_enm);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84447___eval_struct(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e010a05d_StructIns> _48832_s) {
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_48832_s, 0)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_48832_s), ._field_decl=true, ._field_constant=nullptr});
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e847ee_eval_struct(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e010a05d_StructIns> _50134_s, jule::Ptr<_1dd9941e0_Token> _50149_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _50134_s.get()._field_decl.get()._field_public,_50134_s.get()._field_decl.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _50149_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50134_s.get()._field_decl.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e0e84e2b_check_deprecated(&(*_self_), _50134_s.get()._field_decl.get()._field_directives,_50149_error_token);
	return _1e0e84447___eval_struct(&(*_self_), _50134_s);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e84b0c_eval_fn_ins(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01457c4_FnIns> _51130_f) {
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_51130_f, 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(_51130_f), ._field_decl=false, ._field_constant=nullptr});
}



inline void _1e0e84e2b_check_deprecated(_1e0e7ea19_Eval* _self_, jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _52440_directives, jule::Ptr<_1dd9941e0_Token> _52471_tok) {
	if (_1e0e8092c_is_unsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1e0124e35_Directive> _52913_d = _1ed776754_find_directive(_52440_directives,jule::Str("deprecated", 10));;
	if ((_52913_d != nullptr)) {
		if ((_52913_d.get()._field_args.len() == 0LL)) {
			_1e0e7eee2_push_err(&(*_self_), _52471_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1e0e7eee2_push_err(&(*_self_), _52471_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_52913_d.get()._field_args[0LL].get()._field_kind)}));
		};
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e852d3_eval_fn(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0144581_Fn> _54030_f, jule::Ptr<_1dd9941e0_Token> _54038_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _54030_f.get()._field_public,_54030_f.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _54038_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_54030_f.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e0e84e2b_check_deprecated(&(*_self_), _54030_f.get()._field_directives,_54038_error_token);
	jule::Ptr<_1e01457c4_FnIns> _54917_ins = _1e01098ba_instance(_54030_f);;
	_1ad235330_push_reference(&(*_self_), _54917_ins);
	return _1e0e84b0c_eval_fn_ins(&(*_self_), _54917_ins);
}



inline void _1e0e856bd_push_illegal_cycle_error(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e366e6_Var>& _55444_v1, jule::Ptr<_1e0e366e6_Var>& _55455_v2, jule::Str& _55470_message) {
	;
	jule::Str _55613_refers_to = _1dd65ae40_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_55444_v1.get()._field_ident),jule::Any(_55455_v2.get()._field_ident)}));;
	(_55470_message).buffer.insert(0, (((_1dd569b73_repeat(jule::Str(" ", 1),4LL) + _55613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1e0e85a86_check_cross_cycle(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e366e6_Var>& _56037_v, jule::Str& _56051_message) {
	{
		auto &expr = _56037_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1ad23cb0c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> &_56116_d = *it;
			{
				if ((_56116_d == (*_self_)._field_owner)) {
					_1e0e856bd_push_illegal_cycle_error(&(*_self_), _56037_v,_56116_d,_56051_message);
					return false;
				};
				if ((!(_1e0e85a86_check_cross_cycle(&(*_self_), _56116_d,_56051_message)))) {
					_1e0e856bd_push_illegal_cycle_error(&(*_self_), _56037_v,_56116_d,_56051_message);
					return false;
				};
			}
			_iter_next_1ad23cb0c:;
			++it;
			goto _iter_begin_1ad23cb0c;
		}
		_iter_end_1ad23cb0c:;
	};
	return true;
}



inline jule::Bool _1e0e85e3d_check_illegal_cycles(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e366e6_Var>& _57944_v, jule::Ptr<_1dd9941e0_Token> _57953_decl_token) {
	jule::Bool _57975_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_57975_ok = true;
		return _57975_ok;
	};
	if (((*_self_)._field_owner == _57944_v)) {
		_1e0e7eee2_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_57975_ok = false;
		return _57975_ok;
	};
	jule::Str _59117_message = jule::Str();;
	if ((!(_1e0e85a86_check_cross_cycle(&(*_self_), _57944_v,_59117_message)))) {
		jule::Str _59421_err_msg = _59117_message;;
		_59117_message=jule::Str();
		_1e0e856bd_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_57944_v,_59117_message);
		_59421_err_msg=(_59421_err_msg + _59117_message);
		_1e0e7eee2_push_err(&(*_self_), _57953_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_59421_err_msg)}));
		_57975_ok = false;
		return _57975_ok;
	};
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_57944_v);;
	_57975_ok = true;
	return _57975_ok;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e862e5_eval_var(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e366e6_Var> _60631_v, jule::Ptr<_1dd9941e0_Token> _60640_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _60631_v.get()._field_public,_60631_v.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _60640_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_60631_v.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e0e84e2b_check_deprecated(&(*_self_), _60631_v.get()._field_directives,_60640_error_token);
	_60631_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e1b3bd_Sema>>()) {
			_case_begin_1ad246022:;
			{
				jule::Bool _62017_ok = _1e0e85e3d_check_illegal_cycles(&(*_self_), _60631_v,_60640_error_token);;
				if ((!(_62017_ok))) {
					return nullptr;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad246088:;
			{
				if (((!(_60631_v.get()._field_reference)) || _1e0e8092c_is_unsafe(&(*_self_)))) {
					goto _match_end_1ad245e89;
				};
				jule::Ptr<_1e0debe4d_ScopeChecker> _62821_s = (*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>();;
				while (((_62821_s.get()._field_owner == nullptr) && (_62821_s.get()._field_parent != nullptr))) {
					{
						_62821_s=_62821_s.get()._field_parent;
					}
				_iter_next_1ad24640c:;
				}
				_iter_end_1ad24640c:;;
				if ((((_62821_s.get()._field_owner != nullptr) && _62821_s.get()._field_owner.get()._field_anon) && (_60631_v.get()._field_scope != _62821_s.get()._field_owner.get()._field_scope))) {
					_1e0e7eee2_push_err(&(*_self_), _60640_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_60631_v.get()._field_ident)}));
				};
			}
		}
		_match_end_1ad245e89:;
	};
	if ((_60631_v.get()._field_scope == nullptr)) {
		_1ad24a345_push_reference(&(*_self_), _60631_v);
	};
	if (((!(_60631_v.get()._field_cpp_linked)) && ((_60631_v.get()._field_value == nullptr) || (_60631_v.get()._field_value.get()._field_data == nullptr)))) {
		if (_60631_v.get()._field_constant) {
			_1e0e2e39d_check_type_var((*_self_)._field_s, _60631_v,jule::Trait<_1ed7974de_Lookup>((*_self_)._field_s, 3));
			if ((_60631_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			};
		};
	};
	if (((_60631_v.get()._field_kind == nullptr) || (_60631_v.get()._field_kind.get()._field_kind == nullptr))) {
		if ((_60631_v.get()._field_scope != nullptr)) {
			return nullptr;
		};
		_1e0e2e39d_check_type_var((*_self_)._field_s, _60631_v,(*_self_)._field_lookup);
		if (((_60631_v.get()._field_kind == nullptr) || (_60631_v.get()._field_kind.get()._field_kind == nullptr))) {
			return nullptr;
		};
	};
	jule::Ptr<_1e0e7ce9b_Data> _67117_d = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=_60631_v.get()._field_kind.get()._field_kind, ._field_mutable=_60631_v.get()._field_mutable, ._field_reference=_60631_v.get()._field_reference, ._field_lvalue=(!(_60631_v.get()._field_constant)), ._field_model=jule::Any(_60631_v), });;
	if ((((!(_60631_v.get()._field_cpp_linked)) && _1e0e36a9d_is_initialized(_60631_v.ptr())) && (_60631_v.get()._field_value.get()._field_data != nullptr))) {
		_67117_d.get()._field_is_rune=_60631_v.get()._field_value.get()._field_data.get()._field_is_rune;
	};
	if ((_60631_v.get()._field_constant && (_60631_v.get()._field_value.get()._field_data.get()._field_constant != nullptr))) {
		_67117_d.get()._field_constant=jule::new_ptr<_1e0d4da1a_Const>((*(_60631_v.get()._field_value.get()._field_data.get()._field_constant)));
		_67117_d.get()._field_model=jule::Any(_67117_d.get()._field_constant);
	};
	if (_1e0e7d85e_is_const(_67117_d.ptr())) {
		_1e0e80e9e_apply_numeric_prefix(&(*_self_), _67117_d);
	};
	return _67117_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8669c_eval_type_alias(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77ae84_TypeAlias> _69538_ta, jule::Ptr<_1dd9941e0_Token> _69554_error_token) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _69538_ta.get()._field_public,_69538_ta.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _69554_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_69538_ta.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	_69538_ta.get()._field_used=true;
	jule::Trait<_1ed77b78c_Kind> _70417_kind = _69538_ta.get()._field_kind.get()._field_kind.get()._field_kind;;
	jule::Ptr<_1e0e7ce9b_Data> _70517_d = nullptr;;
	{
		auto &_match_expr{ _70417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e010a05d_StructIns>>()) {
			_case_begin_1ad25b400:;
			{
				_70517_d=_1e0e84447___eval_struct(&(*_self_), _70417_kind.operator jule::Ptr<_1e010a05d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e057b8b9_Enum>>()) {
			_case_begin_1ad25a0d0:;
			{
				_70517_d=_1e0e835bc___eval_enum(&(*_self_), _70417_kind.operator jule::Ptr<_1e057b8b9_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e04c643a_TypeEnum>>()) {
			_case_begin_1ad25a146:;
			{
				_70517_d=_1e0e83c82___eval_type_enum(&(*_self_), _70417_kind.operator jule::Ptr<_1e04c643a_TypeEnum>());
			}
		}
		else {
			_case_begin_1ad259e7b:;
			{
				_70517_d=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=_69538_ta.get()._field_kind.get()._field_kind.get()._field_kind}), ._field_decl=true, });
				if (_69538_ta.get()._field_cpp_linked) {
					_70517_d.get()._field_kind.get()._field_cpp_ident=_69538_ta.get()._field_ident;
				} else {
					_70517_d.get()._field_kind.get()._field_cpp_ident=_69538_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
				};
				_70517_d.get()._field_model=jule::Any(_70517_d.get()._field_kind);
			}
		}
		_match_end_1ad259e26:;
	};
	_70517_d.get()._field_kind.get()._field_generic=_69538_ta.get()._field_generic;
	return _70517_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e86a54_eval_def(_1e0e7ea19_Eval* _self_, jule::Any _73131_def, jule::Ptr<_1dd9941e0_Token> _73141_ident) {
	{
		auto &_match_expr{ _73131_def };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1ad25dd70:;
			{
				return _1e0e862e5_eval_var(&(*_self_), _73131_def.operator jule::Ptr<_1e0e366e6_Var>(),_73141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e057b8b9_Enum>>()) {
			_case_begin_1ad25ddd6:;
			{
				return _1e0e83974_eval_enum(&(*_self_), _73131_def.operator jule::Ptr<_1e057b8b9_Enum>(),_73141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e04c643a_TypeEnum>>()) {
			_case_begin_1ad25de4c:;
			{
				return _1e0e84139_eval_type_enum(&(*_self_), _73131_def.operator jule::Ptr<_1e04c643a_TypeEnum>(),_73141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1ad25dec4:;
			{
				return _1e0e847ee_eval_struct(&(*_self_), _1e00eb5c1_instance(_73131_def.operator jule::Ptr<_1e010261b_Struct>()),_73141_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0144581_Fn>>()) {
			_case_begin_1ad25e03a:;
			{
				jule::Ptr<_1e0144581_Fn> _74221_f = _73131_def.operator jule::Ptr<_1e0144581_Fn>();;
				if ((_74221_f.get()._field_ident != jule::Str("init", 4))) {
					return _1e0e852d3_eval_fn(&(*_self_), _74221_f,_73141_ident);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
			_case_begin_1ad25e0a1:;
			{
				return _1e0e84b0c_eval_fn_ins(&(*_self_), _73131_def.operator jule::Ptr<_1e01457c4_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
			_case_begin_1ad25e117:;
			{
				return _1e0e8669c_eval_type_alias(&(*_self_), _73131_def.operator jule::Ptr<_1ed77ae84_TypeAlias>(),_73141_ident);
			}
		}
		_match_end_1ad25dd1a:;
	};
	_1e0e7eee2_push_err(&(*_self_), _73141_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_73141_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e86d62_eval_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e012a7dc_IdentExpr> _75529_ident) {
	jule::Any _75617_def = _1e0e83039_get_def(&(*_self_), _75529_ident.get()._field_ident,_75529_ident.get()._field_cpp_linked);;
	return _1e0e86a54_eval_def(&(*_self_), jule::Any(_75617_def),_75529_ident.get()._field_token);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87170_eval_unary(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012aee6_UnaryExpr> _76034_u) {
	_1e0e9a260_UnaryEval _76117_unary = static__1e0e9a716_new(_self_);;
	return _1e0e9b9ae_eval(&_76117_unary, _76034_u);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8747d_eval_variadic(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012b39d_VariadicExpr> _76537_v) {
	if ((_76537_v.get()._field_expr == nullptr)) {
		_1e0e7eee2_push_err(_self_.ptr(), _76537_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _77117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_77117_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _77517_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_76537_v.get()._field_expr));;
	if ((_77517_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ed77da25_variadicable(_77517_d.get()._field_kind.ptr())))) {
		_1e0e7eee2_push_err(_self_.ptr(), _76537_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_77517_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	jule::Ptr<_1ed78560e_Slc> _78513_slc = _1ed77ec13_slc(_77517_d.get()._field_kind.ptr());;
	_77517_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_cpp_ident=_78513_slc.get()._field_elem.get()._field_cpp_ident, ._field_generic=_78513_slc.get()._field_elem.get()._field_generic, ._field_variadic=true, ._field_kind=_78513_slc.get()._field_elem.get()._field_kind});
	return _77517_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8778b_eval_unsafe(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0129eb2_UnsafeExpr> _79535_u) {
	jule::Bool _79613_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1e0e7ce9b_Data> _79917_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_79535_u.get()._field_expr));;
	_self_.get()._field_unsafety=_79613_unsafety;
	return _79917_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87a99_eval_arr(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e013032a_SliceExpr> _80632_s) {
	jule::Ptr<_1ed7877a9_Arr> _80817_pt = _1ed77e99e_arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1ed7877a9_Arr> _81017_arr = jule::new_ptr<_1ed7877a9_Arr>(_1ed7877a9_Arr{._field_auto=false, ._field_n=0LL, ._field_elem=_80817_pt.get()._field_elem});;
	jule::Bool _81617_filled = false;;
	if ((_80632_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _80632_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1e012b39d_VariadicExpr>>()) {
				_case_begin_1ad26d9ea:;
				{
					if ((_80632_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1e012b39d_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1ad26d973;
					};
					if (_80817_pt.get()._field_auto) {
						_1e0e7eee2_push_err(_self_.ptr(), _80632_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					};
					_81617_filled=true;
					_80632_s.get()._field_exprs=_80632_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1ad26d973:;
		};
	};
	_81017_arr.get()._field_n=static_cast<jule::I32>(_80632_s.get()._field_exprs.len());
	if ((!(_80817_pt.get()._field_auto))) {
		if ((_81017_arr.get()._field_n > _80817_pt.get()._field_n)) {
			_1e0e7eee2_push_err(_self_.ptr(), _80632_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_81017_arr.get()._field_n < _80817_pt.get()._field_n)) {
			_81017_arr.get()._field_n=_80817_pt.get()._field_n;
		};
	};
	jule::Ptr<_1e01415b1_ArrayExprModel> _84517_model = jule::new_ptr<_1e01415b1_ArrayExprModel>(_1e01415b1_ArrayExprModel{._field_kind=_81017_arr, });;
	if (_81617_filled) {
		_84517_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,2LL);
	} else {
		_84517_model.get()._field_elems=jule::Slice<jule::Any>::alloc(0LL,_80632_s.get()._field_exprs.len());
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _85417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_81017_arr.get()._field_elem;
	{
		auto &expr = _80632_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ad273d1e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _85621_elem = *it;
			{
				jule::Ptr<_1e0e7ce9b_Data> _85721_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_85621_elem));;
				if ((_85721_d == nullptr)) {
					goto _iter_next_1ad273d1e;
				};
				_1e0e24409_check_assign_type(_self_.get()._field_s, false,_81017_arr.get()._field_elem,_85721_d,_80632_s.get()._field_token);
				_84517_model.get()._field_elems = jule::alloc_for_append(_84517_model.get()._field_elems,1);_84517_model.get()._field_elems.__push(jule::Any(_85721_d.get()._field_model));;
			}
			_iter_next_1ad273d1e:;
			++it;
			goto _iter_begin_1ad273d1e;
		}
		_iter_end_1ad273d1e:;
	};
	_self_.get()._field_prefix=_85417_prefix;
	if (_81617_filled) {
		_84517_model.get()._field_elems = jule::alloc_for_append(_84517_model.get()._field_elems,1);_84517_model.get()._field_elems.__push(nullptr);;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_81017_arr, 11)}), ._field_mutable=true, ._field_model=jule::Any(_84517_model), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e87e51_eval_exp_slc(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e013032a_SliceExpr> _88136_s, jule::Ptr<_1ed77bbbb_TypeKind> _88155_elem_type) {
	jule::Ptr<_1ed78560e_Slc> _88217_slc = jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_88155_elem_type});;
	jule::Ptr<_1e014013c_SliceExprModel> _88617_model = jule::new_ptr<_1e014013c_SliceExprModel>(_1e014013c_SliceExprModel{._field_elem_kind=_88155_elem_type, ._field_elems=jule::Slice<jule::Any>::alloc(0LL,_88136_s.get()._field_exprs.len())});;
	jule::Ptr<_1ed77bbbb_TypeKind> _89117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_88217_slc.get()._field_elem;
	{
		auto &expr = _88136_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ad278450:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _89321_elem = *it;
			{
				jule::Ptr<_1e0e7ce9b_Data> _89421_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_89321_elem));;
				if ((_89421_d == nullptr)) {
					goto _iter_next_1ad278450;
				};
				_1e0e24409_check_assign_type(_self_.get()._field_s, false,_88217_slc.get()._field_elem,_89421_d,_88136_s.get()._field_token);
				_88617_model.get()._field_elems = jule::alloc_for_append(_88617_model.get()._field_elems,1);_88617_model.get()._field_elems.__push(jule::Any(_89421_d.get()._field_model));;
			}
			_iter_next_1ad278450:;
			++it;
			goto _iter_begin_1ad278450;
		}
		_iter_end_1ad278450:;
	};
	_self_.get()._field_prefix=_89117_prefix;
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_88217_slc, 8)}), ._field_mutable=true, ._field_model=jule::Any(_88617_model), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8825e_eval_slice_expr(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e013032a_SliceExpr> _91239_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1ed77e99e_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad27b288:;
				{
					return _1e0e87a99_eval_arr(_self_, _91239_s);
				}
			}
			else if ((_1ed77ec13_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1ad27b310:;
				{
					jule::Ptr<_1ed78560e_Slc> _91825_pt = _1ed77ec13_slc(_self_.get()._field_prefix.ptr());;
					return _1e0e87e51_eval_exp_slc(_self_, _91239_s,_91825_pt.get()._field_elem);
				}
			}
			_match_end_1ad27b178:;
		};
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _92317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_91239_s.get()._field_exprs.len() == 0LL)) {
		_1e0e7eee2_push_err(_self_.ptr(), _91239_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _93117_first_elem = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_91239_s.get()._field_exprs[0LL]));;
	if ((_93117_first_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _93617_d = _1e0e87e51_eval_exp_slc(_self_, _91239_s,_93117_first_elem.get()._field_kind);;
	_self_.get()._field_prefix=_92317_prefix;
	return _93617_d;
}



inline void _1e0e885a0_check_integer_indexing_by_data(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _94254_d, jule::Ptr<_1dd9941e0_Token> _94264_token) {
	jule::Str _94313_err_key = _1ed778b52_check_data_for_integer_indexing(_94254_d);;
	{
		auto &_match_expr{ _94313_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad281843:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1ad2818a9:;
			{
				_1e0e7eee2_push_err(&(*_self_), _94264_token,_94313_err_key,jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_94254_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1ad281249:;
			{
				_1e0e7eee2_push_err(&(*_self_), _94264_token,_94313_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad281656:;
	};
}



inline void _1e0e88979_indexing_ptr(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _95436_d, jule::Ptr<_1e0e7ce9b_Data>& _95451_index, jule::Ptr<_1e0130b99_IndexingExpr>& _95466_i) {
	_1e0e885a0_check_integer_indexing_by_data(&(*_self_), _95451_index,_95466_i.get()._field_token);
	jule::Ptr<_1ed788216_Ptr> _95717_ptr = _1ed77e262_ptr(_95436_d.get()._field_kind.ptr());;
	{
		
		if (_1ed788bd9_is_unsafe(_95717_ptr.ptr())) {
			_case_begin_1ad284181:;
			{
				_1e0e7eee2_push_err(&(*_self_), _95466_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1e0e8092c_is_unsafe(&(*_self_))))) {
			_case_begin_1ad284208:;
			{
				_1e0e7eee2_push_err(&(*_self_), _95466_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad284071:;
	};
	_95436_d.get()._field_kind=_95717_ptr.get()._field_elem;
}



inline void _1e0e88d42_indexing_arr(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _96936_d, jule::Ptr<_1e0e7ce9b_Data>& _96951_index, jule::Ptr<_1e0130b99_IndexingExpr>& _96966_i) {
	jule::Ptr<_1ed7877a9_Arr> _97017_arr = _1ed77e99e_arr(_96936_d.get()._field_kind.ptr());;
	_96936_d.get()._field_kind=_97017_arr.get()._field_elem;
	_1e0e885a0_check_integer_indexing_by_data(&(*_self_), _96951_index,_96966_i.get()._field_token);
	if ((_1e0e7d85e_is_const(_96951_index.ptr()) && (_1e0d513be_as_f64(_96951_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(_97017_arr.get()._field_n)))) {
		_1e0e7eee2_push_err(&(*_self_), _96966_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e0e8920a_indexing_slc(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _97836_d, jule::Ptr<_1e0e7ce9b_Data>& _97851_index, jule::Ptr<_1e0130b99_IndexingExpr>& _97866_i) {
	jule::Ptr<_1ed78560e_Slc> _97917_slc = _1ed77ec13_slc(_97836_d.get()._field_kind.ptr());;
	_97836_d.get()._field_kind=_97917_slc.get()._field_elem;
	_1e0e885a0_check_integer_indexing_by_data(&(*_self_), _97851_index,_97866_i.get()._field_token);
	if ((!(_1e0e7d85e_is_const(_97851_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _97836_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
			_case_begin_1ad28a0dd:;
			{
				jule::Ptr<_1e014013c_SliceExprModel> _98921_m = _97836_d.get()._field_model.operator jule::Ptr<_1e014013c_SliceExprModel>();;
				jule::F64 _99017_indx = _1e0d513be_as_f64(_97851_index.get()._field_constant.ptr());;
				if ((_99017_indx >= static_cast<jule::F64>(_98921_m.get()._field_elems.len()))) {
					_1e0e7eee2_push_err(&(*_self_), _97866_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_97836_d.get()._field_model=jule::Any(_98921_m.get()._field_elems[static_cast<jule::I32>(static_cast<jule::U64>(_99017_indx))]);
					_97836_d.get()._field_decl=true;
				};
			}
		}
		_match_end_1ad28a088:;
	};
}



inline void _1e0e895c3_indexing_map(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _100036_d, jule::Ptr<_1e0e7ce9b_Data>& _100051_index, jule::Ptr<_1e0130b99_IndexingExpr>& _100070_i) {
	if ((_100051_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1ed786bb5_Map> _100517_m = _1ed7806b4_map(_100036_d.get()._field_kind.ptr());;
	_1e0e6a4d8_AssignTypeChecker _100617_atc = _1e0e6a4d8_AssignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_100517_m.get()._field_key, ._field_d=_100051_index, ._field_error_token=_100070_i.get()._field_token};;
	_1e0e6b660_check(&_100617_atc);
	_100036_d.get()._field_kind=_100517_m.get()._field_val;
}



inline void _1e0e8998b_indexing_str(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _101736_d, jule::Ptr<_1e0e7ce9b_Data>& _101751_index, jule::Ptr<_1e0130b99_IndexingExpr>& _101766_i) {
	;
	_101736_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u8", 2)), 6)});
	if ((_101751_index == nullptr)) {
		return;;
	};
	_1e0e885a0_check_integer_indexing_by_data(&(*_self_), _101751_index,_101766_i.get()._field_token);
	if ((!(_1e0e7d85e_is_const(_101751_index.ptr())))) {
		_101736_d.get()._field_constant=nullptr;
		return;;
	};
	if (_1e0e7d85e_is_const(_101736_d.ptr())) {
		jule::Ptr<_1dd9941e0_Token> _103317_error_token = _101766_i.get()._field_token;;
		jule::I64 _103417_j = _1e0d50de6_as_i64(_101751_index.get()._field_constant.ptr());;
		jule::Str _103517_s = _1e0d5091d_read_str(_101736_d.get()._field_constant.ptr());;
		if ((static_cast<jule::I32>(_103417_j) >= _103517_s.len())) {
			_1e0e7eee2_push_err(&(*_self_), _103317_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1e0d518b9_set_u64(_101736_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103517_s[static_cast<jule::I32>(_103417_j)])));
		};
	};
}



inline void _1e0e89d54_to_indexing(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _104435_d, jule::Ptr<_1e0e7ce9b_Data>& _104450_index, jule::Ptr<_1e0130b99_IndexingExpr>& _104469_i) {
	{
		
		if ((_1ed77e262_ptr(_104435_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad294d62:;
			{
				_1e0e88979_indexing_ptr(&(*_self_), _104435_d,_104450_index,_104469_i);
				return;;
			}
		}
		else if ((_1ed77e99e_arr(_104435_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad294dd9:;
			{
				_1e0e88d42_indexing_arr(&(*_self_), _104435_d,_104450_index,_104469_i);
				return;;
			}
		}
		else if ((_1ed77ec13_slc(_104435_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad294e61:;
			{
				_1e0e8920a_indexing_slc(&(*_self_), _104435_d,_104450_index,_104469_i);
				return;;
			}
		}
		else if ((_1ed7806b4_map(_104435_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad294ed8:;
			{
				_1e0e895c3_indexing_map(&(*_self_), _104435_d,_104450_index,_104469_i);
				return;;
			}
		}
		else if ((_1ed77dc89_prim(_104435_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad295060:;
			{
				jule::Ptr<_1ed781693_Prim> _105917_prim = _1ed77dc89_prim(_104435_d.get()._field_kind.ptr());;
				{
					
					if (_1ed784652_is_str(_105917_prim.ptr())) {
						_case_begin_1ad29941b:;
						{
							_1e0e8998b_indexing_str(&(*_self_), _104435_d,_104450_index,_104469_i);
							return;;
						}
					}
					_match_end_1ad299361:;
				};
			}
		}
		_match_end_1ad294c30:;
	};
	_1e0e7eee2_push_err(&(*_self_), _104469_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_104435_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1e0e8a2d8_push_generics_from_indexing_data_sub_ident(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012c080_SubIdentExpr>& _107067_expr, jule::Ptr<_1e012596e_IdentTypeDecl>& _107114_decl, jule::Ptr<_1e0130b99_IndexingExpr>& _107141_i) {
	jule::Ptr<_1e01260ac_SubIdentTypeDecl> _107217_t = jule::new_ptr<_1e01260ac_SubIdentTypeDecl>();;
	if ((!(_1ed779977_push_sub_ident_from_expr(jule::Any(_107067_expr),_107217_t)))) {
		_1e0e7eee2_push_err(_self_.ptr(), _107141_i.get()._field_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	_107114_decl.get()._field_generics = jule::alloc_for_append(_107114_decl.get()._field_generics,1);_107114_decl.get()._field_generics.__push(jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_kind=jule::Any(_107217_t)}));;
	return true;
}



inline jule::Bool _1e0e8a6e5_push_generics_from_index_data(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _108354_decl, jule::Ptr<_1e0130b99_IndexingExpr>& _108381_i) {
	{
		auto &_match_expr{ _108381_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012aee6_UnaryExpr>>()) {
			_case_begin_1ad29ddc1:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _108821_d = _1e0e87170_eval_unary(_self_, _108381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e012aee6_UnaryExpr>());;
				if ((!(_108821_d.get()._field_decl))) {
					_1e0e7eee2_push_err(_self_.ptr(), _108381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				};
				_108354_decl.get()._field_generics = jule::alloc_for_append(_108354_decl.get()._field_generics,1);_108354_decl.get()._field_generics.__push(jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_kind=jule::Any(_108821_d.get()._field_kind)}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01253db_TypeDecl>>()) {
			_case_begin_1ad29db7e:;
			{
				_108354_decl.get()._field_generics = jule::alloc_for_append(_108354_decl.get()._field_generics,1);_108354_decl.get()._field_generics.__push(_108381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e01253db_TypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012c080_SubIdentExpr>>()) {
			_case_begin_1ad29dbe5:;
			{
				jule::Ptr<_1e012c080_SubIdentExpr> _109921_expr = _108381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e012c080_SubIdentExpr>();;
				return _1e0e8a2d8_push_generics_from_indexing_data_sub_ident(_self_, _109921_expr,_108354_decl,_108381_i);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
			_case_begin_1ad29dc5b:;
			{
				jule::Ptr<_1e012a7dc_IdentExpr> _110221_expr = _108381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e012a7dc_IdentExpr>();;
				_108354_decl.get()._field_generics = jule::alloc_for_append(_108354_decl.get()._field_generics,1);_108354_decl.get()._field_generics.__push(jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_110221_expr.get()._field_token, ._field_ident=_110221_expr.get()._field_ident, }))}));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0129423_TupleExpr>>()) {
			_case_begin_1ad29d156:;
			{
				{
					auto &expr = _108381_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1e0129423_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ad2a35e0:;
					if (it != expr.end()) {
						jule::Ptr<_1e0128b3c_Expr> _111025_expr = *it;
						{
							{
								auto &_match_expr{ _111025_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1e01253db_TypeDecl>>()) {
									_case_begin_1ad2a4910:;
									{
										_108354_decl.get()._field_generics = jule::alloc_for_append(_108354_decl.get()._field_generics,1);_108354_decl.get()._field_generics.__push(_111025_expr.get()._field_kind.operator jule::Ptr<_1e01253db_TypeDecl>());;
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
									_case_begin_1ad2a49a9:;
									{
										jule::Ptr<_1e012a7dc_IdentExpr> _111529_idexpr = _111025_expr.get()._field_kind.operator jule::Ptr<_1e012a7dc_IdentExpr>();;
										_108354_decl.get()._field_generics = jule::alloc_for_append(_108354_decl.get()._field_generics,1);_108354_decl.get()._field_generics.__push(jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_111529_idexpr.get()._field_token, ._field_ident=_111529_idexpr.get()._field_ident, }))}));;
									}
								}
								_match_end_1ad2a4866:;
							};
						}
						_iter_next_1ad2a35e0:;
						++it;
						goto _iter_begin_1ad2a35e0;
					}
					_iter_end_1ad2a35e0:;
				};
			}
		}
		else {
			_case_begin_1ad29d0e0:;
			{
				_1e0e7eee2_push_err(_self_.ptr(), _108381_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1ad29d035:;
	};
	return true;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8aa9c_eval_ident_decl_from_indexing(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0e7ce9b_Data>& _113154_d, jule::Ptr<_1e0130b99_IndexingExpr>& _113169_i) {
	jule::Ptr<_1e01253db_TypeDecl> _113217_tdecl = jule::new_ptr<_1e01253db_TypeDecl>();;
	jule::Ptr<_1e012596e_IdentTypeDecl> _113317_decl = nullptr;;
	{
		auto &_match_expr{ _113169_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
			_case_begin_1ad2a80c8:;
			{
				jule::Ptr<_1e012a7dc_IdentExpr> _113621_expr = _113169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e012a7dc_IdentExpr>();;
				_113317_decl=jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_113621_expr.get()._field_token, ._field_ident=_113621_expr.get()._field_ident, });
				_113217_tdecl.get()._field_kind=jule::Any(_113317_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012bb0c_NsSelectionExpr>>()) {
			_case_begin_1ad2a7eda:;
			{
				jule::Ptr<_1e012bb0c_NsSelectionExpr> _114321_expr = _113169_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1e012bb0c_NsSelectionExpr>();;
				_113317_decl=jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_114321_expr.get()._field_ident, ._field_ident=_114321_expr.get()._field_ident.get()._field_kind, });
				_113217_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1e0126464_NamespaceTypeDecl>(_1e0126464_NamespaceTypeDecl{._field_idents=_114321_expr.get()._field_ns, ._field_kind=jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_113317_decl.get()._field_token, ._field_kind=jule::Any(_113317_decl)})}));
			}
		}
		else {
			_case_begin_1ad2a7418:;
			{
				_1e0e7eee2_push_err(_self_.ptr(), _113169_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad2a7380:;
	};
	if ((!(_1e0e8a6e5_push_generics_from_index_data(_self_, _113317_decl,_113169_i)))) {
		return nullptr;
	};
	return _1e0e90d49_eval_type(_self_.ptr(), _113217_tdecl);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8adbb_eval_indexing(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0130b99_IndexingExpr> _116537_i) {
	jule::Ptr<_1ed77bbbb_TypeKind> _116617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_116617_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _117017_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_116537_i.get()._field_expr));;
	if ((_117017_d == nullptr)) {
		return nullptr;
	};
	if (_117017_d.get()._field_decl) {
		return _1e0e8aa9c_eval_ident_decl_from_indexing(_self_, _117017_d,_116537_i);
	};
	_1e0e7ce9b_Data _118017_old_d = (*(_117017_d));;
	jule::Ptr<_1e0e7ce9b_Data> _118217_index = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_116537_i.get()._field_index));;
	if ((_118217_index == nullptr)) {
		return nullptr;
	};
	_117017_d.get()._field_decl=false;
	_1e0e89d54_to_indexing(_self_.ptr(), _117017_d,_118217_index,_116537_i);
	if (_1e0e7d85e_is_const(_117017_d.ptr())) {
		_117017_d.get()._field_decl=false;
		_117017_d.get()._field_model=jule::Any(_117017_d.get()._field_constant);
	} else if (_117017_d.get()._field_decl) {
		_117017_d.get()._field_decl=false;
	} else {
		_117017_d.get()._field_model=jule::Any(jule::new_ptr<_1e0140329_IndexingExprModel>(_1e0140329_IndexingExprModel{._field_token=_116537_i.get()._field_token, ._field_expr=jule::new_ptr<_1e0e7ce9b_Data>(_118017_old_d), ._field_index=_118217_index}));
	};
	return _117017_d;
}



inline std::tuple<jule::Ptr<_1e0e7ce9b_Data>,jule::Ptr<_1e0e7ce9b_Data>> _1e0e8b1c9_eval_slicing_exprs(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e01312a4_SlicingExpr>& _121343_s) {
	jule::Ptr<_1ed77bbbb_TypeKind> _121417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_121417_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _121817_l = nullptr;;
	jule::Ptr<_1e0e7ce9b_Data> _121917_r = nullptr;;
	if ((_121343_s.get()._field_start != nullptr)) {
		_121817_l=_1e0e996c1_eval_expr_kind(_self_, jule::Any(_121343_s.get()._field_start));
		if ((_121817_l != nullptr)) {
			_1e0e885a0_check_integer_indexing_by_data(_self_.ptr(), _121817_l,_121343_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	} else {
		_121817_l=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_constant=static__1e0d4dd5b_new_i64(0LL)});
		_121817_l.get()._field_model=jule::Any(_121817_l.get()._field_constant);
	};
	if ((_121343_s.get()._field_to != nullptr)) {
		_121917_r=_1e0e996c1_eval_expr_kind(_self_, jule::Any(_121343_s.get()._field_to));
		if ((_121917_r != nullptr)) {
			_1e0e885a0_check_integer_indexing_by_data(_self_.ptr(), _121917_r,_121343_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		};
	};
	return std::make_tuple(_121817_l,_121917_r);
}



inline void _1e0e8b44e_slicing_arr(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _124831_d) {
	jule::Ptr<_1ed77bbbb_TypeKind> _124917_elem_type = _1ed77e99e_arr(_124831_d.get()._field_kind.ptr()).get()._field_elem;;
	_124831_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_124917_elem_type}), 8)});
	_124831_d.get()._field_lvalue=false;
	_124831_d.get()._field_mutable=(_124831_d.get()._field_mutable || (!(_1ed77d074_mutable(_124917_elem_type.ptr()))));
}



inline void _1e0e8b817_slicing_str(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _126331_d, jule::Ptr<_1e0e7ce9b_Data>& _126342_l, jule::Ptr<_1e0e7ce9b_Data>& _126353_r) {
	_126331_d.get()._field_lvalue=false;
	_126331_d.get()._field_mutable=true;
	if ((!(_1e0e7d85e_is_const(_126331_d.ptr())))) {
		return;;
	};
	if (((_126342_l == nullptr) || (_126353_r == nullptr))) {
		_126331_d.get()._field_constant=nullptr;
		return;;
	};
	if ((_1e0e7d85e_is_const(_126342_l.ptr()) && _1e0e7d85e_is_const(_126353_r.ptr()))) {
		jule::I64 _127617_left = _1e0d50de6_as_i64(_126342_l.get()._field_constant.ptr());;
		if ((_127617_left < 0LL)) {
			return;;
		};
		jule::Str _128117_s = _1e0d5091d_read_str(_126331_d.get()._field_constant.ptr());;
		jule::I64 _128221_right = 0LL;;
		if ((_126353_r == nullptr)) {
			_128221_right=static_cast<jule::I64>(static_cast<jule::I64>(_128117_s.len()));
		} else {
			_128221_right=static_cast<jule::I64>(_1e0d50de6_as_i64(_126353_r.get()._field_constant.ptr()));
		};
		if ((_127617_left > _128221_right)) {
			return;;
		};
		_1e0d51db4_set_str(_126331_d.get()._field_constant.ptr(), _128117_s.slice(static_cast<jule::I32>(_127617_left),static_cast<jule::I32>(_128221_right)));
		_126331_d.get()._field_decl=true;
	} else {
		_126331_d.get()._field_constant=nullptr;
	};
}



inline void _1e0e8bc79_check_slicing(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _129937_d, jule::Ptr<_1e0e7ce9b_Data>& _129948_l, jule::Ptr<_1e0e7ce9b_Data>& _129959_r, jule::Ptr<_1e01312a4_SlicingExpr>& _129970_s) {
	{
		
		if ((_1ed77e99e_arr(_129937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad2bda7d:;
			{
				_1e0e8b44e_slicing_arr(&(*_self_), _129937_d);
				return;;
			}
		}
		else if ((_1ed77ec13_slc(_129937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad2bdb05:;
			{
				return;;
			}
		}
		else if ((_1ed77dc89_prim(_129937_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad2bdb7c:;
			{
				jule::Ptr<_1ed781693_Prim> _130717_prim = _1ed77dc89_prim(_129937_d.get()._field_kind.ptr());;
				{
					
					if (_1ed784652_is_str(_130717_prim.ptr())) {
						_case_begin_1ad2c107a:;
						{
							_1e0e8b817_slicing_str(&(*_self_), _129937_d,_129948_l,_129959_r);
							return;;
						}
					}
					_match_end_1ad2c0ec0:;
				};
			}
		}
		_match_end_1ad2bd96d:;
	};
	_1e0e7eee2_push_err(&(*_self_), _129970_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_129937_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8c087_eval_slicing(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e01312a4_SlicingExpr> _131836_s) {
	jule::Ptr<_1e0e7ce9b_Data> _131917_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_131836_s.get()._field_expr));;
	if ((_131917_d == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _132418_l;;
	jule::Ptr<_1e0e7ce9b_Data> _132425_r;;
	std::tie(_132418_l,_132425_r) = _1e0e8b1c9_eval_slicing_exprs(_self_, _131836_s);
	if ((_132418_l == nullptr)) {
		return _131917_d;
	};
	_131917_d.get()._field_decl=false;
	_1e0e8bc79_check_slicing(_self_.ptr(), _131917_d,_132418_l,_132425_r,_131836_s);
	if (_1e0e7d85e_is_const(_131917_d.ptr())) {
		_131917_d.get()._field_decl=false;
		_131917_d.get()._field_model=jule::Any(_131917_d.get()._field_constant);
	} else if (_131917_d.get()._field_decl) {
		_131917_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1e0140acc_SlicingExprModel> _134221_model = jule::new_ptr<_1e0140acc_SlicingExprModel>(_1e0140acc_SlicingExprModel{._field_token=_131836_s.get()._field_token, ._field_expr=jule::Any(_131917_d.get()._field_model), ._field_left=jule::Any(_132418_l.get()._field_model), });;
		if ((_132425_r != nullptr)) {
			_134221_model.get()._field_right=jule::Any(_132425_r.get()._field_model);
		};
		_131917_d.get()._field_model=jule::Any(_134221_model);
	};
	return _131917_d;
}



inline void _1e0e8c450_cast_ptr(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _135531_t, jule::Ptr<_1e0e7ce9b_Data> _135549_d, jule::Ptr<_1dd9941e0_Token> _135559_error_token) {
	jule::Ptr<_1ed784ba2_Sptr> _135613_sptr = _1ed77deed_sptr(_135549_d.get()._field_kind.ptr());;
	if ((_135613_sptr != nullptr)) {
		if ((!(_1ed77c381_equals(_1ed77e262_ptr(_135531_t.ptr()).get()._field_elem, _135613_sptr.get()._field_elem)))) {
			_1e0e7eee2_push_err(&(*_self_), _135559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_135549_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_135531_t.ptr()))}));
		};
		return;;
	};
	if ((!(_1e0e8092c_is_unsafe(&(*_self_))))) {
		_1e0e7eee2_push_err(&(*_self_), _135559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ed781693_Prim> _136913_prim = _1ed77dc89_prim(_135549_d.get()._field_kind.ptr());;
	if (((_1ed77e262_ptr(_135549_d.get()._field_kind.ptr()) == nullptr) && ((_136913_prim == nullptr) || (!(_1e0de99a6_is_int(_1ed781a06_to_str(_136913_prim.ptr()))))))) {
		_1e0e7eee2_push_err(&(*_self_), _135559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_135549_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_135531_t.ptr()))}));
	};
	_135549_d.get()._field_constant=nullptr;
}



inline void _1e0e8c818_cast_struct(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _137734_t, jule::Ptr<_1e0e7ce9b_Data> _137752_d, jule::Ptr<_1dd9941e0_Token> _137762_error_token) {
	jule::Ptr<_1e0567d06_Trait> _137817_tr = _1ed780450_trt(_137752_d.get()._field_kind.ptr());;
	if ((_137817_tr == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _137762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_137752_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_137734_t.ptr()))}));
		return;;
	};
	jule::Ptr<_1e010a05d_StructIns> _138417_s = _1ed7801db_strct(_137734_t.ptr());;
	_1ad2ce42e_push_reference(&(*_self_), _138417_s);
	if ((!(_1e00ecb88_is_implements(_138417_s.get()._field_decl.ptr(), _137817_tr)))) {
		_1e0e7eee2_push_err(&(*_self_), _137762_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_137752_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_137734_t.ptr()))}));
	};
}



inline void _1e0e8cbd1_cast_ref(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _139231_t, jule::Ptr<_1e0e7ce9b_Data> _139249_d, jule::Ptr<_1dd9941e0_Token> _139259_error_token) {
	jule::Ptr<_1ed784ba2_Sptr> _139317_sptr = _1ed77deed_sptr(_139231_t.ptr());;
	jule::Ptr<_1ed788216_Ptr> _139517_ptr = _1ed77e262_ptr(_139249_d.get()._field_kind.ptr());;
	if (((_139517_ptr != nullptr) && _1ed77c381_equals(_139317_sptr.get()._field_elem, _139517_ptr.get()._field_elem))) {
		if ((!(_1e0e8092c_is_unsafe(&(*_self_))))) {
			_1e0e7eee2_push_err(&(*_self_), _139259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ed7801db_strct(_139317_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1e0e8c818_cast_struct(&(*_self_), _139317_sptr.get()._field_elem,_139249_d,_139259_error_token);
		return;;
	};
	_1e0e7eee2_push_err(&(*_self_), _139259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_139249_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_139231_t.ptr()))}));
}



inline void _1e0e8d099_cast_slc(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _141431_t, jule::Ptr<_1e0e7ce9b_Data> _141449_d, jule::Ptr<_1dd9941e0_Token> _141459_error_token) {
	if ((_1ed77e4c6_enm(_141449_d.get()._field_kind.ptr()) != nullptr)) {
		if (((_1ed77dc89_prim(_1ed77e4c6_enm(_141449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1ed784652_is_str(_1ed77dc89_prim(_1ed77e4c6_enm(_141449_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
			_1e0e7eee2_push_err(&(*_self_), _141459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_141449_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_141431_t.ptr()))}));
			return;;
		};
	} else if (((_1ed77dc89_prim(_141449_d.get()._field_kind.ptr()) == nullptr) || (!(_1ed784652_is_str(_1ed77dc89_prim(_141449_d.get()._field_kind.ptr()).ptr()))))) {
		_1e0e7eee2_push_err(&(*_self_), _141459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_141449_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_141431_t.ptr()))}));
		return;;
	};
	_141431_t=_1ed77ec13_slc(_141431_t.ptr()).get()._field_elem;
	jule::Ptr<_1ed781693_Prim> _142613_prim = _1ed77dc89_prim(_141431_t.ptr());;
	if (((_142613_prim == nullptr) || ((!(_1ed782c27_is_u8(_142613_prim.ptr()))) && (!(_1ed78274e_is_i32(_142613_prim.ptr())))))) {
		_1e0e7eee2_push_err(&(*_self_), _141459_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_141449_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_141431_t.ptr()))}));
	};
}



inline void _1e0e8d3b8_cast_str(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _143231_d, jule::Ptr<_1dd9941e0_Token> _143241_error_token) {
	if ((_1ed77e4c6_enm(_143231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e057b8b9_Enum> _143421_e = _1ed77e4c6_enm(_143231_d.get()._field_kind.ptr());;
		if (((_1ed77dc89_prim(_143421_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1ed784652_is_str(_1ed77dc89_prim(_143421_e.get()._field_kind.get()._field_kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1ed77dc89_prim(_143231_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ed781693_Prim> _144117_prim = _1ed77dc89_prim(_143231_d.get()._field_kind.ptr());;
		if (((!(_1ed782c27_is_u8(_144117_prim.ptr()))) && (!(_1ed78274e_is_i32(_144117_prim.ptr()))))) {
			_1e0e7eee2_push_err(&(*_self_), _143241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ed77c073_to_str(_143231_d.get()._field_kind.ptr()))}));
		};
		return;;
	};
	if ((_1ed77ec13_slc(_143231_d.get()._field_kind.ptr()) == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _143241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ed77c073_to_str(_143231_d.get()._field_kind.ptr()))}));
		return;;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _145317_t = _1ed77ec13_slc(_143231_d.get()._field_kind.ptr()).get()._field_elem;;
	jule::Ptr<_1ed781693_Prim> _145413_prim = _1ed77dc89_prim(_145317_t.ptr());;
	if (((_145413_prim == nullptr) || ((!(_1ed782c27_is_u8(_145413_prim.ptr()))) && (!(_1ed78274e_is_i32(_145413_prim.ptr())))))) {
		_1e0e7eee2_push_err(&(*_self_), _143241_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ed77c073_to_str(_143231_d.get()._field_kind.ptr()))}));
	};
}



inline void _1e0e8d781_cast_int(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _146031_t, jule::Ptr<_1e0e7ce9b_Data> _146049_d, jule::Ptr<_1dd9941e0_Token> _146059_error_token) {
	if (_1e0e7d85e_is_const(_146049_d.ptr())) {
		jule::Ptr<_1ed781693_Prim> _146217_prim = _1ed77dc89_prim(_146031_t.ptr());;
		{
			
			if (_1e0de9423_is_sig_int(_146217_prim.get()._field_kind)) {
				_case_begin_1ad2e915d:;
				{
					_1e0d51644_set_i64(_146049_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_146049_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e0de970e_is_unsig_int(_146217_prim.get()._field_kind)) {
				_case_begin_1ad2e91d5:;
				{
					_1e0d518b9_set_u64(_146049_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_146049_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ad2e9092:;
		};
	};
	if ((_1ed77e4c6_enm(_146049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e057b8b9_Enum> _147217_e = _1ed77e4c6_enm(_146049_d.get()._field_kind.ptr());;
		if (_1e0dea039_is_num(_1ed77c073_to_str(_147217_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	if ((_1ed77deed_sptr(_146049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ed781693_Prim> _147917_prim = _1ed77dc89_prim(_146031_t.ptr());;
		if ((!(_1ed784179_is_uintptr(_147917_prim.ptr())))) {
			_1e0e7eee2_push_err(&(*_self_), _146059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_146049_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_146031_t.ptr()))}));
		};
		return;;
	};
	if ((_1ed77e262_ptr(_146049_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ed781693_Prim> _148617_prim = _1ed77dc89_prim(_146031_t.ptr());;
		if (_1ed784179_is_uintptr(_148617_prim.ptr())) {
		} else if ((!(_1e0e8092c_is_unsafe(&(*_self_))))) {
			_1e0e7eee2_push_err(&(*_self_), _146059_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if ((((((!(_1ed78274e_is_i32(_148617_prim.ptr()))) && (!(_1ed7829b3_is_i64(_148617_prim.ptr())))) && (!(_1ed782e8b_is_u16(_148617_prim.ptr())))) && (!(_1ed783200_is_u32(_148617_prim.ptr())))) && (!(_1ed783464_is_u64(_148617_prim.ptr()))))) {
			_1e0e7eee2_push_err(&(*_self_), _146059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_146049_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_146031_t.ptr()))}));
		};
		return;;
	};
	jule::Ptr<_1ed781693_Prim> _149713_prim = _1ed77dc89_prim(_146049_d.get()._field_kind.ptr());;
	if (((_149713_prim != nullptr) && _1e0dea039_is_num(_1ed781a06_to_str(_149713_prim.ptr())))) {
		return;;
	};
	_1e0e7eee2_push_err(&(*_self_), _146059_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_146049_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_146031_t.ptr()))}));
}



inline void _1e0e8db49_cast_num(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _150531_t, jule::Ptr<_1e0e7ce9b_Data> _150549_d, jule::Ptr<_1dd9941e0_Token> _150559_error_token) {
	if (_1e0e7d85e_is_const(_150549_d.ptr())) {
		jule::Ptr<_1ed781693_Prim> _150717_prim = _1ed77dc89_prim(_150531_t.ptr());;
		{
			
			if (_1e0de9c92_is_float(_150717_prim.get()._field_kind)) {
				_case_begin_1ad309c2e:;
				{
					_1e0d52139_set_f64(_150549_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e0d513be_as_f64(_150549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e0de9423_is_sig_int(_150717_prim.get()._field_kind)) {
				_case_begin_1ad309ca6:;
				{
					_1e0d51644_set_i64(_150549_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_150549_d.get()._field_constant.ptr())));
				}
			}
			else if (_1e0de970e_is_unsig_int(_150717_prim.get()._field_kind)) {
				_case_begin_1ad309d2d:;
				{
					_1e0d518b9_set_u64(_150549_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_150549_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1ad309b52:;
		};
	};
	if ((_1ed77e4c6_enm(_150549_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e057b8b9_Enum> _151917_e = _1ed77e4c6_enm(_150549_d.get()._field_kind.ptr());;
		if (_1e0dea039_is_num(_1ed77c073_to_str(_151917_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ed781693_Prim> _152513_prim = _1ed77dc89_prim(_150549_d.get()._field_kind.ptr());;
	if (((_152513_prim != nullptr) && _1e0dea039_is_num(_1ed781a06_to_str(_152513_prim.ptr())))) {
		return;;
	};
	_1e0e7eee2_push_err(&(*_self_), _150559_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_150549_d.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_150531_t.ptr()))}));
}



inline void _1e0e8e012_cast_prim(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _153332_t, jule::Ptr<_1e0e7ce9b_Data> _153350_d, jule::Ptr<_1dd9941e0_Token> _153360_error_token) {
	jule::Ptr<_1ed781693_Prim> _153413_prim = _1ed77dc89_prim(_153332_t.ptr());;
	{
		
		if (_1ed7848b6_is_any(_153413_prim.ptr())) {
			_case_begin_1ad3111ec:;
		}
		else if (_1ed784652_is_str(_153413_prim.ptr())) {
			_case_begin_1ad310dbc:;
			{
				_1e0e8d3b8_cast_str(&(*_self_), _153350_d,_153360_error_token);
			}
		}
		else if (_1e0de99a6_is_int(_1ed781a06_to_str(_153413_prim.ptr()))) {
			_case_begin_1ad310e33:;
			{
				_1e0e8d781_cast_int(&(*_self_), _153332_t,_153350_d,_153360_error_token);
			}
		}
		else if (_1e0dea039_is_num(_1ed781a06_to_str(_153413_prim.ptr()))) {
			_case_begin_1ad310e99:;
			{
				_1e0e8db49_cast_num(&(*_self_), _153332_t,_153350_d,_153360_error_token);
			}
		}
		else {
			_case_begin_1ad310d56:;
			{
				_1e0e7eee2_push_err(&(*_self_), _153360_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_153332_t.ptr()))}));
			}
		}
		_match_end_1ad310cce:;
	};
}



inline void _1e0e8e331_cast_constant(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _154937_t, jule::Ptr<_1e0e7ce9b_Data>& _154956_d) {
	if (((_154956_d == nullptr) || (!(_1e0e7d85e_is_const(_154956_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1ed781693_Prim> _155313_prim = _1ed77dc89_prim(_154937_t.ptr());;
	_1ed779207_cast_const_by_type(_155313_prim.get()._field_kind,_154956_d);
	_154956_d.get()._field_model=jule::Any(_154956_d.get()._field_constant);
}



inline void _1e0e8e6e9_cast_type_enum(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e04c643a_TypeEnum> _155837_t, jule::Ptr<_1ed77bbbb_TypeKind>& _155856_dest, jule::Ptr<_1dd9941e0_Token> _155877_error_token) {
	{
		auto &expr = _155837_t.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1ad315c5c:;
		if (it != expr.end()) {
			jule::Ptr<_1e05b1316_TypeEnumItem> _155921_item = *it;
			{
				if (_1ed77c381_equals(_155921_item.get()._field_kind.get()._field_kind, _155856_dest)) {
					return;;
				};
			}
			_iter_next_1ad315c5c:;
			++it;
			goto _iter_begin_1ad315c5c;
		}
		_iter_end_1ad315c5c:;
	};
	_1e0e7eee2_push_err(&(*_self_), _155877_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_155856_dest.ptr())),jule::Any(_1e04aae14_to_str(_155837_t.ptr()))}));
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8eb6c_eval_cast_by_type_n_data(_1e0e7ea19_Eval* _self_, jule::Ptr<_1ed77bbbb_TypeKind> _156747_t, jule::Ptr<_1e0e7ce9b_Data> _156765_d, jule::Ptr<_1dd9941e0_Token> _156779_error_token) {
	if (((_156765_d != nullptr) && _156765_d.get()._field_decl)) {
		_1e0e7eee2_push_err(&(*_self_), _156779_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	{
		
		if (((_1ed77dc89_prim(_156765_d.get()._field_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim(_156765_d.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ad318875:;
			{
				if ((_1ed77e4c6_enm(_156747_t.ptr()) != nullptr)) {
					_1e0e7eee2_push_err(&(*_self_), _156779_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1e0e80311_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1ed77e73a_tenm(_156747_t.ptr()) != nullptr)) {
					_1e0e7eee2_push_err(&(*_self_), _156779_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
			}
		}
		else if ((_1ed77e73a_tenm(_156765_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3188db:;
			{
				_1e0e8e6e9_cast_type_enum(&(*_self_), _1ed77e73a_tenm(_156765_d.get()._field_kind.ptr()),_156747_t,_156779_error_token);
			}
		}
		else if ((_1ed77e262_ptr(_156747_t.ptr()) != nullptr)) {
			_case_begin_1ad318952:;
			{
				_1e0e8c450_cast_ptr(&(*_self_), _156747_t,_156765_d,_156779_error_token);
			}
		}
		else if ((_1ed77deed_sptr(_156747_t.ptr()) != nullptr)) {
			_case_begin_1ad3189b8:;
			{
				_1e0e8cbd1_cast_ref(&(*_self_), _156747_t,_156765_d,_156779_error_token);
			}
		}
		else if ((_1ed77ec13_slc(_156747_t.ptr()) != nullptr)) {
			_case_begin_1ad319832:;
			{
				_1e0e8d099_cast_slc(&(*_self_), _156747_t,_156765_d,_156779_error_token);
			}
		}
		else if ((_1ed7801db_strct(_156747_t.ptr()) != nullptr)) {
			_case_begin_1ad319898:;
			{
				_1e0e8c818_cast_struct(&(*_self_), _156747_t,_156765_d,_156779_error_token);
			}
		}
		else if ((_1ed77dc89_prim(_156747_t.ptr()) != nullptr)) {
			_case_begin_1ad31990e:;
			{
				_1e0e8e012_cast_prim(&(*_self_), _156747_t,_156765_d,_156779_error_token);
				_1e0e8e331_cast_constant(&(*_self_), _156747_t,_156765_d);
			}
		}
		else {
			_case_begin_1ad31880e:;
			{
				_1e0e7eee2_push_err(&(*_self_), _156779_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_156747_t.ptr()))}));
				_156765_d=nullptr;
			}
		}
		_match_end_1ad317c4d:;
	};
	if ((_156765_d == nullptr)) {
		return nullptr;
	};
	_156765_d.get()._field_mutable=(_156765_d.get()._field_mutable || ((!(_1ed77d074_mutable(_156765_d.get()._field_kind.ptr()))) && _1ed77d074_mutable(_156747_t.ptr())));
	_156765_d.get()._field_lvalue=false;
	_156765_d.get()._field_decl=false;
	if (((_1ed77e4c6_enm(_156765_d.get()._field_kind.ptr()) == nullptr) || (!(_1ed77c381_equals(_1ed77e4c6_enm(_156765_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _156747_t))))) {
		_1ed77868a_apply_cast_kind(_156765_d,_156747_t);
		_156765_d.get()._field_model.operator jule::Ptr<_1e013ec63_CastingExprModel>().get()._field_token=_156779_error_token;
	} else {
		_156765_d.get()._field_kind=_156747_t;
	};
	return _156765_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e8ee8b_eval_cast(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012b755_CastExpr> _162033_c) {
	jule::Ptr<_1ed780cd0_TypeSymbol> _162117_t = _1e01497d9_build_type(_162033_c.get()._field_kind);;
	jule::Bool _162213_ok = _1e0e22748_check_type(_self_.get()._field_s, _162117_t,_self_.get()._field_lookup);;
	if ((!(_162213_ok))) {
		return nullptr;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _162717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_162717_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _163117_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_162033_c.get()._field_expr));;
	if ((_163117_d == nullptr)) {
		return nullptr;
	};
	return _1e0e8eb6c_eval_cast_by_type_n_data(_self_.ptr(), _162117_t.get()._field_kind,_163117_d,_162033_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90299_eval_ns_selection(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e012bb0c_NsSelectionExpr> _163936_s) {
	jule::Str _164013_path = _1ed794497_build_link_path_by_tokens(_163936_s.get()._field_ns);;
	jule::Ptr<_1e0e13272_ImportInfo> _164117_imp = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed7959a4_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>([=](jule::Ptr<_1e0e13272_ImportInfo> _164153_imp) mutable -> jule::Bool {
		if (((_163936_s.get()._field_ns.len() == 1LL) && (_164153_imp.get()._field_alias == _164013_path))) {
			return true;
		};
		return ((_164153_imp.get()._field_link_path == _164013_path) && _1e0e15e56_is_accessible_via_selection(_164153_imp.ptr()));
	}));;
	if ((_164117_imp == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _163936_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_164013_path)}));
		return nullptr;
	};
	jule::Trait<_1ed7974de_Lookup> _165317_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ed7974de_Lookup>(_164117_imp, 1);
	;
	_1e0e806b8_disallow_builtin(&(*_self_));
	jule::Any _165817_def = _1e0e83039_get_def(&(*_self_), _163936_s.get()._field_ident.get()._field_kind,false);;
	_1e0e804dc_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_165317_lookup;
	jule::Ptr<_1e0e7ce9b_Data> _166217_d = _1e0e86a54_eval_def(&(*_self_), jule::Any(_165817_def),_163936_s.get()._field_ident);;
	return _166217_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9071c_eval_struct_lit_explicit(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e010a05d_StructIns> _166748_s, jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _166813_exprs, jule::Ptr<_1dd9941e0_Token> _166833_error_token) {
	jule::Bool _166913_ok = _1e0e2049e_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_166748_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_166748_s.get()._field_generics.len()),_166833_error_token);;
	if ((!(_166913_ok))) {
		return nullptr;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _166748_s.get()._field_decl))) {
		_1e0e7eee2_push_err(_self_.ptr(), _166833_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_166748_s.get()._field_decl.get()._field_ident)}));
	};
	_1ad2ce42e_push_reference(_self_.ptr(), _166748_s);
	_1e0e84e2b_check_deprecated(_self_.ptr(), _166748_s.get()._field_decl.get()._field_directives,_166833_error_token);
	_1e0e72501_StructLitChecker _168217_slc = _1e0e72501_StructLitChecker{._field_e=_self_, ._field_error_token=_166833_error_token, ._field_s=_166748_s, };;
	_1e0e73a96_check(&_168217_slc, _166813_exprs);
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_166748_s, 0)}), ._field_mutable=(!(_self_.get()._field_immutable)), ._field_model=jule::Any(jule::new_ptr<_1e0116982_StructLitExprModel>(_1e0116982_StructLitExprModel{._field_strct=_166748_s, ._field_args=_168217_slc._field_args})), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90a3b_eval_struct_lit(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012ddea_StructLit> _170139_lit) {
	jule::Ptr<_1ed780cd0_TypeSymbol> _170217_t = _1e01497d9_build_type(_170139_lit.get()._field_kind);;
	jule::Bool _170313_ok = _1e0e22748_check_type(_self_.get()._field_s, _170217_t,_self_.get()._field_lookup);;
	if ((!(_170313_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e010a05d_StructIns> _170817_s = _1ed7801db_strct(_170217_t.get()._field_kind.ptr());;
	if ((_170817_s == nullptr)) {
		if ((_1ed77deed_sptr(_170217_t.get()._field_kind.ptr()) != nullptr)) {
			_170817_s=_1ed7801db_strct(_1ed77deed_sptr(_170217_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_170817_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1e0e7eee2_push_err(_self_.ptr(), _170139_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_eval:;
	jule::Ptr<_1e0e7ce9b_Data> _172117_d = _1e0e9071c_eval_struct_lit_explicit(_self_, _170817_s,_170139_lit.get()._field_exprs,_170139_lit.get()._field_kind.get()._field_token);;
	if ((_1ed77deed_sptr(_170217_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1e0116982_StructLitExprModel> _172321_model = _172117_d.get()._field_model.operator jule::Ptr<_1e0116982_StructLitExprModel>();;
		_1ed7770e5_make_struct_lit_alloc(_172117_d,_172321_model);
	};
	return _172117_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e90d49_eval_type(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01253db_TypeDecl> _172932_t) {
	jule::Ptr<_1ed780cd0_TypeSymbol> _173017_tk = _1e01497d9_build_type(_172932_t);;
	jule::Bool _173113_ok = _1e0e22748_check_type((*_self_)._field_s, _173017_tk,(*_self_)._field_lookup);;
	if ((!(_173113_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=_173017_tk.get()._field_kind, ._field_model=jule::Any(_173017_tk.get()._field_kind), ._field_decl=true, });
}



inline void _1e0e91168_call_type_fn(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012cb0d_FnCallExpr>& _174237_fc, jule::Ptr<_1e0e7ce9b_Data>& _174259_d) {
	if ((_174237_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_self_.ptr(), _174237_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_174259_d.get()._field_kind.ptr()))}));
	} else if ((_174237_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_self_.ptr(), _174237_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
	} else if ((_174237_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_self_.ptr(), _174237_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	if ((_174237_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1ed77bbbb_TypeKind> _175221_prefix = _self_.get()._field_prefix;;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1e0e7ce9b_Data> _175421_arg = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_174237_fc.get()._field_args[0LL].get()._field_kind));;
		_self_.get()._field_prefix=_175221_prefix;
		if ((_175421_arg != nullptr)) {
			_174259_d=_1e0e8eb6c_eval_cast_by_type_n_data(_self_.ptr(), _174259_d.get()._field_kind,_175421_arg,_174237_fc.get()._field_args[0LL].get()._field_token);
		};
	};
	if ((_174259_d != nullptr)) {
		_174259_d.get()._field_decl=false;
	};
}



inline std::tuple<jule::Bool,jule::Bool> _1e0e91520_check_fn_call_generics(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01457c4_FnIns> _176645_f, jule::Ptr<_1e012cb0d_FnCallExpr> _176713_fc) {
	jule::Bool _176732_ok = jule::Bool();
	jule::Bool _176742_dynamic_annotation = jule::Bool();
	{
		
		if ((((_176645_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_176713_fc.get()._field_generics.len() == 0LL)) && (_176645_f.get()._field_params.len() > 0LL))) {
			_case_begin_1ad345110:;
			{
				_176742_dynamic_annotation=true;
				_176645_f.get()._field_generics=jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::alloc(_176645_f.get()._field_decl.get()._field_generics.len());
				_176732_ok = true;
				_176742_dynamic_annotation = true;
				return std::make_tuple(_176732_ok,_176742_dynamic_annotation);
			}
		}
		else if ((!(_1e0e2049e_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I32>(_176645_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_176713_fc.get()._field_generics.len()),_176713_fc.get()._field_token)))) {
			_case_begin_1ad345176:;
			{
				_176732_ok = false;
				_176742_dynamic_annotation = false;
				return std::make_tuple(_176732_ok,_176742_dynamic_annotation);
			}
		}
		else {
			_case_begin_1ad342e54:;
			{
				_176645_f.get()._field_generics=jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::alloc(0LL,_176645_f.get()._field_decl.get()._field_generics.len());
				{
					auto &expr = _176713_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1ad343361:;
					if (it != expr.end()) {
						jule::Ptr<_1e01253db_TypeDecl> _177925_g = *it;
						{
							jule::Ptr<_1ed780cd0_TypeSymbol> _178025_k = _1e01497d9_build_type(_177925_g);;
							_176732_ok=_1e0e22748_check_type((*_self_)._field_s, _178025_k,(*_self_)._field_lookup);
							if ((!(_176732_ok))) {
								_176732_ok = false;
								_176742_dynamic_annotation = false;
								return std::make_tuple(_176732_ok,_176742_dynamic_annotation);
							};
							_176645_f.get()._field_generics = jule::alloc_for_append(_176645_f.get()._field_generics,1);_176645_f.get()._field_generics.__push(_178025_k.get()._field_kind);;
						}
						_iter_next_1ad343361:;
						++it;
						goto _iter_begin_1ad343361;
					}
					_iter_end_1ad343361:;
				};
				_176732_ok = true;
				_176742_dynamic_annotation = false;
				return std::make_tuple(_176732_ok,_176742_dynamic_annotation);
			}
		}
		_match_end_1ad342d99:;
	};
}



inline void _1e0e9183e_call_builtin_fn(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012cb0d_FnCallExpr>& _179240_fc, jule::Ptr<_1e0e7ce9b_Data>& _179262_d) {
	_179262_d=_1ed77ee77_fnc(_179262_d.get()._field_kind.ptr()).get()._field_caller(_self_,_179240_fc,_179262_d);
	if ((_179262_d == nullptr)) {
		return;;
	};
	_179262_d.get()._field_mutable=true;
}



inline void _1e0e91b80_check_fn_of_concurrent_call(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01457c4_FnIns>& _180047_f, jule::Ptr<_1dd9941e0_Token> _180058_error_token) {
	if (_1e0e8092c_is_unsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _180047_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ad34a863:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> &_180516_p = *it;
			{
				if (_180516_p.get()._field_decl.get()._field_reference) {
					_1e0e7eee2_push_err(&(*_self_), _180058_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ad34a863:;
			++it;
			goto _iter_begin_1ad34a863;
		}
		_iter_end_1ad34a863:;
	};
}



inline void _1e0e9207b_process_exceptional_handler(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e01457c4_FnIns>& _181351_f, jule::Ptr<_1e012cb0d_FnCallExpr>& _181367_fc, jule::Ptr<_1e0e7ce9b_Data>& _181389_d) {
	jule::Bool _181413_result_needed = ((!(_1e0105894_is_void(_181351_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1e0debe4d_ScopeChecker> _181517_csc = nullptr;;
	jule::Ptr<_1e0dd6322_Scope> _181617_ch = nullptr;;
	jule::Ptr<_1e013ee50_FnCallExprModel> _181817_model = _181389_d.get()._field_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>();;
	jule::Ptr<_1e0debe4d_ScopeChecker> _182217_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>();;
	_181517_csc=_1e0e0b996_new_child_checker(_182217_sc);
	if (_181413_result_needed) {
		_181517_csc.get()._field_result=_181351_f;
	};
	_181617_ch=_1e0e00cba_get_child(_182217_sc.ptr());
	_181367_fc.get()._field_exception.get()._field_parent=_182217_sc.get()._field_tree;
	_181517_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_181517_csc.get()._field_table.get()._field_vars,1);_181517_csc.get()._field_table.get()._field_vars.__push(_1ed777436_build_error_var(_181617_ch,_181367_fc));;
	_1e0e01183_check_child_ssc(_182217_sc, _181367_fc.get()._field_exception,_181617_ch,_181517_csc);
	_181817_model.get()._field_assigned=_181413_result_needed;
	_181817_model.get()._field_except=_181617_ch;
	if ((_181413_result_needed && (_181517_csc.get()._field_result != nullptr))) {
		_1e0e7eee2_push_err(&(*_self_), _181367_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1e0e923ab_call_fn(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012cb0d_FnCallExpr>& _184032_fc, jule::Ptr<_1e0e7ce9b_Data>& _184054_d) {
	jule::Ptr<_1e01457c4_FnIns> _184117_f = _1ed77ee77_fnc(_184054_d.get()._field_kind.ptr());;
	if ((_1e0e80b91_is_global(_self_.ptr()) && _184117_f.get()._field_decl.get()._field_exceptional)) {
		_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1e0e80311_push_suggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_184054_d=nullptr;
		return;;
	};
	if (_1e0146550_is_builtin(_184117_f.ptr())) {
		_1e0e9183e_call_builtin_fn(_self_, _184032_fc,_184054_d);
		return;;
	};
	if (((!(_1e0123d35_is_method(_184117_f.get()._field_decl.ptr()))) && _1ed7935c8_has_directive(_184117_f.get()._field_decl.get()._field_directives,jule::Str("test", 4)))) {
		_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_184054_d=nullptr;
		return;;
	};
	if (((((!(_184054_d.get()._field_mutable)) && _1e0123d35_is_method(_184117_f.get()._field_decl.ptr())) && (!(_184117_f.get()._field_decl.get()._field_statically))) && _184117_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable)) {
		_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1e0e8092c_is_unsafe(_self_.ptr()))) && _184117_f.get()._field_decl.get()._field_unsafety)) {
		_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _186618_ok;;
	jule::Bool _186622_dynamic_annotation;;
	std::tie(_186618_ok,_186622_dynamic_annotation) = _1e0e91520_check_fn_call_generics(_self_.ptr(), _184117_f,_184032_fc);
	if ((!(_186618_ok))) {
		_184054_d=nullptr;
		return;;
	};
	jule::Ptr<_1e0e1b3bd_Sema> _187217_old = _self_.get()._field_s;;
	if ((_184117_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_184117_f.get()._field_decl.get()._field_owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_187217_old != _self_.get()._field_s)) {
			_187217_old.get()._field_errors=jule::append(_187217_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_187217_old;
	});;
	if ((!(_186622_dynamic_annotation))) {
		if ((!(_184117_f.get()._field_reloaded))) {
			_186618_ok=_1e0e25680_reload_fn_ins_types(_self_.get()._field_s, _184117_f);
			if ((!(_186618_ok))) {
				_184054_d=nullptr;
				return;;
			};
			_184117_f.get()._field_reloaded=true;
		};
	} else if ((_184117_f.get()._field_generics.len() > 0LL)) {
		_1e0e25020_build_fn_non_generic_type_kinds(_self_.get()._field_s, _184117_f);
	};
	_1e0e6eae7_FnCallArgChecker _189817_fcac = _1e0e6eae7_FnCallArgChecker{._field_e=_self_, ._field_args=_184032_fc.get()._field_args, ._field_error_token=_184032_fc.get()._field_token, ._field_f=_184117_f, ._field_dynamic_annotation=_186622_dynamic_annotation, };;
	if ((_184117_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_187217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187217_old);
		_186618_ok=_1e0e71eb2_check(&_189817_fcac);
		std::tie(_187217_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_187217_old);
	} else {
		_186618_ok=_1e0e71eb2_check(&_189817_fcac);
	};
	if (((!(_186618_ok)) && _186622_dynamic_annotation)) {
		_184054_d=nullptr;
		return;;
	};
	if (_186622_dynamic_annotation) {
		_186618_ok=_1e0e25680_reload_fn_ins_types(_self_.get()._field_s, _184117_f);
		if ((!(_186618_ok))) {
			_184054_d=nullptr;
			return;;
		};
		_184117_f.get()._field_reloaded=true;
	};
	jule::Ptr<_1e01457c4_FnIns> _192717_exist_instance = _1e012185a_append_instance(_184117_f.get()._field_decl.ptr(), _184117_f);;
	if ((_192717_exist_instance != nullptr)) {
		_184117_f=_192717_exist_instance;
	};
	jule::Any _193217_call_model = _184054_d.get()._field_model;;
	if (_1e0105894_is_void(_184117_f.get()._field_decl.ptr())) {
		_184054_d=_1ed778888_build_void_data();
	} else {
		_184054_d.get()._field_kind=_184117_f.get()._field_result;
		_184054_d.get()._field_lvalue=false;
	};
	jule::Ptr<_1e013ee50_FnCallExprModel> _194117_model = jule::new_ptr<_1e013ee50_FnCallExprModel>(_1e013ee50_FnCallExprModel{._field_token=_184032_fc.get()._field_token, ._field_func=_184117_f, ._field_expr=jule::Any(_193217_call_model), ._field_args=_189817_fcac._field_arg_models, });;
	_184054_d.get()._field_model=jule::Any(_194117_model);
	_184054_d.get()._field_mutable=true;
	if (_184117_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1e012d081_unhandled(_184032_fc.ptr())) {
				_case_begin_1ad363e86:;
				{
					_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1e0e80311_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1e012d2e5_ignored(_184032_fc.ptr())) {
				_case_begin_1ad363b56:;
				{
					goto _match_end_1ad363a24;
				}
			}
			else {
				_case_begin_1ad363ae0:;
				{
					_1e0e9207b_process_exceptional_handler(_self_.ptr(), _184117_f,_184032_fc,_184054_d);
				}
			}
			_match_end_1ad363a24:;
		};
	} else if ((!(_1e012d081_unhandled(_184032_fc.ptr())))) {
		_1e0e7eee2_push_err(_self_.ptr(), _184032_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if ((_184117_f.get()._field_generics.len() > 0LL)) {
		if ((_192717_exist_instance != nullptr)) {
			_1ed779603_update_model_to_generic_ins(_194117_model,_184117_f);
		} else {
			_1e0e32060_check_fn_ins_caller(_self_.get()._field_s, _184117_f,_184032_fc.get()._field_token);
		};
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e926b9_eval_fn_call(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012cb0d_FnCallExpr> _198036_fc) {
	jule::Ptr<_1ed77bbbb_TypeKind> _198117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_198117_prefix;
	});;
	{
		auto &_match_expr{ _198036_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
			_case_begin_1ad368265:;
			{
				if ((_198036_fc.get()._field_expr.get()._field_token.get()._field_kind == jule::Str("error", 5))) {
					return _1ed806cac_builtin_caller_error(_self_,_198036_fc);
				};
			}
		}
		_match_end_1ad3681dd:;
	};
	jule::Ptr<_1e0e7ce9b_Data> _199417_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_198036_fc.get()._field_expr.get()._field_kind));;
	if ((_199417_d == nullptr)) {
		return nullptr;
	};
	if (_199417_d.get()._field_decl) {
		_1e0e91168_call_type_fn(_self_, _198036_fc,_199417_d);
		return _199417_d;
	};
	if ((_1ed77ee77_fnc(_199417_d.get()._field_kind.ptr()) == nullptr)) {
		_1e0e7eee2_push_err(_self_.ptr(), _198036_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	};
	_1e0e923ab_call_fn(_self_, _198036_fc,_199417_d);
	return _199417_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e92a71_eval_enum_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e057b8b9_Enum> _201339_enm, jule::Ptr<_1dd9941e0_Token> _201351_ident) {
	jule::Ptr<_1e0e7ce9b_Data> _201417_d = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_201339_enm, 3)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	jule::Ptr<_1e04ed4c8_EnumItem> _202317_item = _1e03dbedd_find_item(_201339_enm.ptr(), _201351_ident.get()._field_kind);;
	if ((_202317_item == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _201351_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_201339_enm.get()._field_ident),jule::Any(_201351_ident.get()._field_kind)}));
	} else {
		_201417_d.get()._field_constant=jule::new_ptr<_1e0d4da1a_Const>((*(_202317_item.get()._field_value.get()._field_data.get()._field_constant)));
		_201417_d.get()._field_model=jule::Any(_201417_d.get()._field_constant);
		_1ed778e3d_apply_cast_model_by_enum(_201417_d,_201339_enm);
	};
	return _201417_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e92e28_eval_type_enum_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e04c643a_TypeEnum> _203544_enm, jule::Ptr<_1dd9941e0_Token> _203560_ident) {
	jule::Ptr<_1e05b1316_TypeEnumItem> _203617_item = _1e0507aed_find_item(_203544_enm.ptr(), _203560_ident.get()._field_kind);;
	if ((_203617_item == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _203560_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_203544_enm.get()._field_ident),jule::Any(_203560_ident.get()._field_kind)}));
		return nullptr;
	};
	{
		
		if ((_1ed77e4c6_enm(_203617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3719dd:;
			{
				return _1e0e835bc___eval_enum(&(*_self_), _1ed77e4c6_enm(_203617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1ed77e73a_tenm(_203617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad371a54:;
			{
				return _1e0e83c82___eval_type_enum(&(*_self_), _1ed77e73a_tenm(_203617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else if ((_1ed7801db_strct(_203617_item.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad371aba:;
			{
				return _1e0e84447___eval_struct(&(*_self_), _1ed7801db_strct(_203617_item.get()._field_kind.get()._field_kind.ptr()));
			}
		}
		else {
			_case_begin_1ad3709a9:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _204921_d = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=_203617_item.get()._field_kind.get()._field_kind, ._field_decl=true, });;
				_204921_d.get()._field_model=jule::Any(_204921_d.get()._field_kind);
				return _204921_d;
			}
		}
		_match_end_1ad371900:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e932d0_eval_struct_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e010a05d_StructIns> _205841_s, jule::Ptr<_1dd9941e0_Token> _205856_ident) {
	jule::Ptr<_1e0e7ce9b_Data> _205917_d = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });;
	;
	jule::Ptr<_1e0144581_Fn> _206717_method = _1e011ae70_find_method(_205841_s.ptr(), _205856_ident.get()._field_kind,true);;
	if ((_206717_method != nullptr)) {
		if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _206717_method.get()._field_public,_206717_method.get()._field_token)))) {
			_1e0e7eee2_push_err(&(*_self_), _205856_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_205856_ident.get()._field_kind)}));
			_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e01457c4_FnIns> _207421_ins = _1e01098ba_instance(_206717_method);;
		_207421_ins.get()._field_owner=_205841_s;
		_1ad235330_push_reference(&(*_self_), _207421_ins);
		_205917_d.get()._field_model=jule::Any(jule::new_ptr<_1e01413c4_StructStaticIdentExprModel>(_1e01413c4_StructStaticIdentExprModel{._field_structure=_205841_s, ._field_expr=jule::Any(_205917_d.get()._field_model), ._field_method=_207421_ins}));
		_205917_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_207421_ins, 1)});
		return _205917_d;
	};
	jule::Ptr<_1e0e366e6_Var> _208817_sttc = _1e010164d_find_static(_205841_s.get()._field_decl.ptr(), _205856_ident.get()._field_kind);;
	if ((_208817_sttc != nullptr)) {
		return _1e0e862e5_eval_var(&(*_self_), _208817_sttc,_205856_ident);
	};
	_1e0e7eee2_push_err(&(*_self_), _205856_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_205841_s.get()._field_decl.get()._field_ident),jule::Any(_205856_ident.get()._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e93731_eval_trait_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _209743_d, jule::Ptr<_1e0567d06_Trait> _209757_trt, jule::Ptr<_1dd9941e0_Token> _209774_ident) {
	jule::Ptr<_1e0144581_Fn> _209817_f = _1e01ccd78_find_method(_209757_trt.ptr(), _209774_ident.get()._field_kind);;
	if ((_209817_f == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _209774_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_209757_trt.get()._field_ident),jule::Any(_209774_ident.get()._field_kind)}));
		return nullptr;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1e01098ba_instance(_209817_f), 1)}), ._field_mutable=false, ._field_lvalue=false, ._field_model=jule::Any(jule::new_ptr<_1e0140cb9_TraitSubIdentExprModel>(_1e0140cb9_TraitSubIdentExprModel{._field_token=_209774_ident, ._field_expr=jule::Any(_209743_d.get()._field_model), ._field_method=_209817_f, ._field_trt=_209757_trt})), ._field_decl=false, });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e93c2b_eval_struct_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _212044_d, jule::Ptr<_1e010a05d_StructIns> _212058_s, jule::Ptr<_1e012c080_SubIdentExpr> _212077_si, jule::Bool _212096_ref) {
	jule::Ptr<_1e01087ba_FieldIns> _212117_f = _1e0112b59_find_field(_212058_s.ptr(), _212077_si.get()._field_ident.get()._field_kind);;
	if ((_212117_f != nullptr)) {
		if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _212117_f.get()._field_decl.get()._field_public,_212117_f.get()._field_decl.get()._field_token)))) {
			_1e0e7eee2_push_err(&(*_self_), _212077_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_212117_f.get()._field_decl.get()._field_ident)}));
			_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1e01411d7_StructSubIdentExprModel> _212821_model = jule::new_ptr<_1e01411d7_StructSubIdentExprModel>(_1e01411d7_StructSubIdentExprModel{._field_token=_212077_si.get()._field_ident, ._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*(_212044_d))), ._field_expr_kind=_212044_d.get()._field_kind, ._field_field=_212117_f});;
		_212044_d.get()._field_model=jule::Any(_212821_model);
		_212044_d.get()._field_kind=_212117_f.get()._field_kind;
		_212044_d.get()._field_lvalue=true;
		if ((_212117_f.get()._field_decl.get()._field_mutable && (!(_212044_d.get()._field_mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
					_case_begin_1ad383d96:;
					{
						jule::Ptr<_1e0debe4d_ScopeChecker> _214225_scope = _1e0dee516_get_root((*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>());;
						_212044_d.get()._field_mutable=((_214225_scope.get()._field_owner != nullptr) && (_214225_scope.get()._field_owner.get()._field_owner == _212058_s));
					}
				}
				_match_end_1ad383d41:;
			};
		};
		return _212044_d;
	};
	;
	jule::Ptr<_1e0144581_Fn> _215117_m = _1e011ae70_find_method(_212058_s.ptr(), _212077_si.get()._field_ident.get()._field_kind,false);;
	if ((_215117_m == nullptr)) {
		_1e0e7eee2_push_err(&(*_self_), _212077_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212058_s.get()._field_decl.get()._field_ident),jule::Any(_212077_si.get()._field_ident.get()._field_kind)}));
		return nullptr;
	};
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _215117_m.get()._field_public,_215117_m.get()._field_token)))) {
		_1e0e7eee2_push_err(&(*_self_), _212077_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215117_m.get()._field_ident)}));
		_1e0e80311_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1e01202c6_is_ref(_215117_m.get()._field_params[0LL].ptr()) && (!(_212096_ref)))) {
		_1e0e7eee2_push_err(&(*_self_), _212077_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1e0e84e2b_check_deprecated(&(*_self_), _215117_m.get()._field_directives,_212077_si.get()._field_ident);
	jule::Ptr<_1e01457c4_FnIns> _216717_ins = _1e01098ba_instance(_215117_m);;
	_216717_ins.get()._field_owner=_212058_s;
	_1ad235330_push_reference(&(*_self_), _216717_ins);
	jule::Ptr<_1e0e7ce9b_Data> _217017_model = jule::new_ptr<_1e0e7ce9b_Data>((*(_212044_d)));;
	_212044_d.get()._field_model=jule::Any(jule::new_ptr<_1e01411d7_StructSubIdentExprModel>(_1e01411d7_StructSubIdentExprModel{._field_token=_212077_si.get()._field_ident, ._field_expr=_217017_model, ._field_expr_kind=_212044_d.get()._field_kind, ._field_method=_216717_ins, }));
	_212044_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_216717_ins, 1)});
	return _212044_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e940d3_eval_slice_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _218143_d, jule::Ptr<_1dd9941e0_Token> _218157_ident) {
	{
		auto &_match_expr{ _218157_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad38cc07:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_218143_d.get()._field_kind, ._field_expr=jule::Any(_218143_d.get()._field_model), ._field_token=_218157_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ad38da4e:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_218143_d.get()._field_kind, ._field_expr=jule::Any(_218143_d.get()._field_model), ._field_token=_218157_ident, ._field_ident=jule::Str("cap()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ad38dab5:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::make({jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_218143_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_218143_d.get()._field_kind, ._field_expr=jule::Any(_218143_d.get()._field_model), ._field_token=_218157_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ad38c630:;
			{
				_1e0e7eee2_push_err(&(*_self_), _218157_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_218143_d.get()._field_kind.ptr())),jule::Any(_218157_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad38c7ea:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9448a_eval_array_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _224043_d, jule::Ptr<_1dd9941e0_Token> _224057_ident) {
	{
		auto &_match_expr{ _224057_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad3933d3:;
			{
				jule::Ptr<_1e0d4da1a_Const> _224321_c = static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ed77e99e_arr(_224043_d.get()._field_kind.ptr()).get()._field_n)));;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(_224321_c), ._field_constant=_224321_c});
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1ad39422a:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::make({jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("i", 1)}), ._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("j", 1)}), ._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_224043_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_224043_d.get()._field_kind, ._field_expr=jule::Any(_224043_d.get()._field_model), ._field_token=_224057_ident, ._field_ident=jule::Str("swap", 4)})), });
			}
		}
		else {
			_case_begin_1ad390e4c:;
			{
				_1e0e7eee2_push_err(&(*_self_), _224057_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_224043_d.get()._field_kind.ptr())),jule::Any(_224057_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad39301a:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e94842_eval_map_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _228541_d, jule::Ptr<_1dd9941e0_Token> _228555_ident) {
	jule::Ptr<_1ed786bb5_Map> _228617_map_kind = _1ed7806b4_map(_228541_d.get()._field_kind.ptr());;
	{
		auto &_match_expr{ _228555_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad3992b8:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_mutable=false, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("len()", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1ad39932e:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228541_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("clear", 5)})), });
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1ad399131:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_result=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_228617_map_kind.get()._field_key}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228541_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("keys", 4)})), });
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1ad399197:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_result=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_228617_map_kind.get()._field_val}), 8)}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228541_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("values", 6)})), });
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1ad39920d:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::make({jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_228617_map_kind.get()._field_key})}), ._field_result=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcaca_builtin_caller_common), }), 1)}), ._field_mutable=_228541_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("has", 3)})), });
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1ad398284:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::make({jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("key", 3)}), ._field_kind=_228617_map_kind.get()._field_key})}), ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed7bcc0c_builtin_caller_common_mut), }), 1)}), ._field_mutable=_228541_d.get()._field_mutable, ._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_228541_d.get()._field_kind, ._field_expr=jule::Any(_228541_d.get()._field_model), ._field_token=_228555_ident, ._field_ident=jule::Str("del", 3)})), });
			}
		}
		else {
			_case_begin_1ad39435c:;
			{
				_1e0e7eee2_push_err(&(*_self_), _228555_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ed787028_to_str(_228617_map_kind.ptr())),jule::Any(_228555_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad398141:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e94be9_eval_str_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _240841_d, jule::Ptr<_1dd9941e0_Token> _240855_ident) {
	jule::Ptr<_1ed77bbbb_TypeKind> _240917_str_kind = jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("str", 3)), 6)});;
	{
		auto &_match_expr{ _240855_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ad3a3008:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _241221_sd = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1e0e7d85e_is_const(_240841_d.ptr())) {
					_241221_sd.get()._field_constant=static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e0d5091d_read_str(_240841_d.get()._field_constant.ptr()).len())));
					_241221_sd.get()._field_model=jule::Any(_241221_sd.get()._field_constant);
				} else {
					_241221_sd.get()._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_240841_d.get()._field_kind, ._field_expr=jule::Any(_240841_d.get()._field_model), ._field_token=_240855_ident, ._field_ident=jule::Str("len()", 5)}));
				};
				return _241221_sd;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ad3a3cd9:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _242821_sd = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), });;
				if (_1e0e7d85e_is_const(_240841_d.ptr())) {
					_242821_sd.get()._field_constant=static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e0d5091d_read_str(_240841_d.get()._field_constant.ptr()).cap())));
					_242821_sd.get()._field_model=jule::Any(_242821_sd.get()._field_constant);
				} else {
					_242821_sd.get()._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_240841_d.get()._field_kind, ._field_expr=jule::Any(_240841_d.get()._field_model), ._field_token=_240855_ident, ._field_ident=jule::Str("cap()", 5)}));
				};
				return _242821_sd;
			}
		}
		else {
			_case_begin_1ad3993ea:;
			{
				_1e0e7eee2_push_err(&(*_self_), _240855_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_240917_str_kind.ptr())),jule::Any(_240855_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3a2b84:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95007_eval_int_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _244939_ident) {
	;
	{
		auto &_match_expr{ _244939_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3a9471:;
			{
				jule::Ptr<_1e0d4da1a_Const> _245421_c = static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e0de44b7_max(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=jule::Any(_245421_c), ._field_constant=_245421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3aa076:;
			{
				jule::Ptr<_1e0d4da1a_Const> _246121_c = static__1e0d4dd5b_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1e0de41cb_min(jule::Str("int", 3)))));;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_model=jule::Any(_246121_c), ._field_constant=_246121_c});
			}
		}
		else {
			_case_begin_1ad3a823e:;
			{
				_1e0e7eee2_push_err(&(*_self_), _244939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3)),jule::Any(_244939_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3a90a8:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95315_eval_uint_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _247340_ident) {
	;
	{
		auto &_match_expr{ _247340_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3ace25:;
			{
				jule::Ptr<_1e0d4da1a_Const> _247821_c = static__1e0d4e103_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1e0de44b7_max(jule::Str("uint", 4)))));;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("uint", 4)), 6)}), ._field_model=jule::Any(_247821_c), ._field_constant=_247821_c});
			}
		}
		else {
			_case_begin_1ad3abe79:;
			{
				_1e0e7eee2_push_err(&(*_self_), _247340_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4)),jule::Any(_247340_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3acac3:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95623_eval_i8_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _249038_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249038_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3b0ea0:;
			{
				jule::Ptr<_1e0d4da1a_Const> _249721_c = static__1e0d4dd5b_new_i64(127LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=jule::Any(_249721_c), ._field_constant=_249721_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3b1a83:;
			{
				jule::Ptr<_1e0d4da1a_Const> _250421_c = static__1e0d4dd5b_new_i64(-128LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i8", 2)), 6)}), ._field_model=jule::Any(_250421_c), ._field_constant=_250421_c});
			}
		}
		else {
			_case_begin_1ad3b0785:;
			{
				_1e0e7eee2_push_err(&(*_self_), _249038_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2)),jule::Any(_249038_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3b0ad7:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95931_eval_i16_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _251639_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251639_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3b4b52:;
			{
				jule::Ptr<_1e0d4da1a_Const> _252321_c = static__1e0d4dd5b_new_i64(32767LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=jule::Any(_252321_c), ._field_constant=_252321_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3b5735:;
			{
				jule::Ptr<_1e0d4da1a_Const> _253021_c = static__1e0d4dd5b_new_i64(-32768LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i16", 3)), 6)}), ._field_model=jule::Any(_253021_c), ._field_constant=_253021_c});
			}
		}
		else {
			_case_begin_1ad3b4437:;
			{
				_1e0e7eee2_push_err(&(*_self_), _251639_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3)),jule::Any(_251639_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3b4789:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e95c3e_eval_i32_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _254239_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _254239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3b8804:;
			{
				jule::Ptr<_1e0d4da1a_Const> _254921_c = static__1e0d4dd5b_new_i64(2147483647LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=jule::Any(_254921_c), ._field_constant=_254921_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3b93d7:;
			{
				jule::Ptr<_1e0d4da1a_Const> _255621_c = static__1e0d4dd5b_new_i64(-2147483648LL);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i32", 3)), 6)}), ._field_model=jule::Any(_255621_c), ._field_constant=_255621_c});
			}
		}
		else {
			_case_begin_1ad3b80d9:;
			{
				_1e0e7eee2_push_err(&(*_self_), _254239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3)),jule::Any(_254239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3b843b:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9604c_eval_i64_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _256839_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _256839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3bc4a6:;
			{
				jule::Ptr<_1e0d4da1a_Const> _257521_c = static__1e0d4dd5b_new_i64(jule::MAX_I64);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=jule::Any(_257521_c), ._field_constant=_257521_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3bd089:;
			{
				jule::Ptr<_1e0d4da1a_Const> _258221_c = static__1e0d4dd5b_new_i64(jule::MIN_I64);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i64", 3)), 6)}), ._field_model=jule::Any(_258221_c), ._field_constant=_258221_c});
			}
		}
		else {
			_case_begin_1ad3bbc8b:;
			{
				_1e0e7eee2_push_err(&(*_self_), _256839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3)),jule::Any(_256839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3bc0dd:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9635a_eval_u8_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _259438_ident) {
	;
	;
	{
		auto &_match_expr{ _259438_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3c0c90:;
			{
				jule::Ptr<_1e0d4da1a_Const> _260021_c = static__1e0d4e103_new_u64(255LLU);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u8", 2)), 6)}), ._field_model=jule::Any(_260021_c), ._field_constant=_260021_c});
			}
		}
		else {
			_case_begin_1ad3c05db:;
			{
				_1e0e7eee2_push_err(&(*_self_), _259438_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2)),jule::Any(_259438_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3c0894:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96668_eval_u16_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _261239_ident) {
	;
	;
	{
		auto &_match_expr{ _261239_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3c3677:;
			{
				jule::Ptr<_1e0d4da1a_Const> _261821_c = static__1e0d4e103_new_u64(65535LLU);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u16", 3)), 6)}), ._field_model=jule::Any(_261821_c), ._field_constant=_261821_c});
			}
		}
		else {
			_case_begin_1ad3c2ec3:;
			{
				_1e0e7eee2_push_err(&(*_self_), _261239_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3)),jule::Any(_261239_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3c327b:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96976_eval_u32_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _263039_ident) {
	;
	;
	{
		auto &_match_expr{ _263039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3c605e:;
			{
				jule::Ptr<_1e0d4da1a_Const> _263621_c = static__1e0d4e103_new_u64(4294967295LLU);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u32", 3)), 6)}), ._field_model=jule::Any(_263621_c), ._field_constant=_263621_c});
			}
		}
		else {
			_case_begin_1ad3c58aa:;
			{
				_1e0e7eee2_push_err(&(*_self_), _263039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3)),jule::Any(_263039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3c5b63:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e96c84_eval_u64_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _264839_ident) {
	;
	;
	{
		auto &_match_expr{ _264839_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3c8946:;
			{
				jule::Ptr<_1e0d4da1a_Const> _265421_c = static__1e0d4e103_new_u64(jule::MAX_U64);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u64", 3)), 6)}), ._field_model=jule::Any(_265421_c), ._field_constant=_265421_c});
			}
		}
		else {
			_case_begin_1ad3c8292:;
			{
				_1e0e7eee2_push_err(&(*_self_), _264839_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3)),jule::Any(_264839_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3c854a:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97092_eval_f32_type_tatic(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _266638_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _266638_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3cb905:;
			{
				jule::Ptr<_1e0d4da1a_Const> _267421_c = static__1e0d4e8d9_new_f64(340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_267421_c), ._field_constant=_267421_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3cc582:;
			{
				jule::Ptr<_1e0d4da1a_Const> _268121_c = static__1e0d4e8d9_new_f64(-340282346638528860000000000000000000000.0);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_268121_c), ._field_constant=_268121_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ad3cc5e8:;
			{
				jule::Ptr<_1e0d4da1a_Const> _268821_c = static__1e0d4e8d9_new_f64(0.000000000000000000000000000000000000000000001401298464324817);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f32", 3)), 6)}), ._field_model=jule::Any(_268821_c), ._field_constant=_268821_c});
			}
		}
		else {
			_case_begin_1ad3cae54:;
			{
				_1e0e7eee2_push_err(&(*_self_), _266638_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3)),jule::Any(_266638_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3cb581:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e973a0_eval_f64_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1dd9941e0_Token> _270039_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _270039_ident.get()._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1ad3d17c8:;
			{
				jule::Ptr<_1e0d4da1a_Const> _270821_c = static__1e0d4e8d9_new_f64(jule::MAX_F64);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_270821_c), ._field_constant=_270821_c});
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1ad3d2455:;
			{
				jule::Ptr<_1e0d4da1a_Const> _271521_c = static__1e0d4e8d9_new_f64(jule::MIN_F64);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_271521_c), ._field_constant=_271521_c});
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1ad3d24bb:;
			{
				jule::Ptr<_1e0d4da1a_Const> _272221_c = static__1e0d4e8d9_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("f64", 3)), 6)}), ._field_model=jule::Any(_272221_c), ._field_constant=_272221_c});
			}
		}
		else {
			_case_begin_1ad3d11ce:;
			{
				_1e0e7eee2_push_err(&(*_self_), _270039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3)),jule::Any(_270039_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3d1454:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97757_eval_prim_static(_1e0e7ea19_Eval* _self_, jule::Str _273435_kind, jule::Ptr<_1dd9941e0_Token> _273446_ident) {
	{
		auto &_match_expr{ _273435_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ad3d16b8:;
			{
				return _1e0e95007_eval_int_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ad3d6338:;
			{
				return _1e0e95315_eval_uint_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ad3d639e:;
			{
				return _1e0e95623_eval_i8_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ad3d6415:;
			{
				return _1e0e95931_eval_i16_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ad3d5755:;
			{
				return _1e0e95c3e_eval_i32_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ad3d57bb:;
			{
				return _1e0e9604c_eval_i64_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ad3d5832:;
			{
				return _1e0e9635a_eval_u8_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ad3d5898:;
			{
				return _1e0e96668_eval_u16_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ad3d659c:;
			{
				return _1e0e96976_eval_u32_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ad3d6613:;
			{
				return _1e0e96c84_eval_u64_type_static(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ad3d6679:;
			{
				return _1e0e97092_eval_f32_type_tatic(&(*_self_), _273446_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ad3d66e0:;
			{
				return _1e0e973a0_eval_f64_type_static(&(*_self_), _273446_ident);
			}
		}
		else {
			_case_begin_1ad3d2543:;
			{
				_1e0e7eee2_push_err(&(*_self_), _273446_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_273435_kind),jule::Any(_273446_ident.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad3d2312:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97b0e_eval_type_static(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _276639_d, jule::Ptr<_1e012c080_SubIdentExpr> _276653_si) {
	{
		
		if ((_1ed77dc89_prim(_276639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3db54c:;
			{
				return _1e0e97757_eval_prim_static(&(*_self_), _1ed781a06_to_str(_1ed77dc89_prim(_276639_d.get()._field_kind.ptr()).ptr()),_276653_si.get()._field_ident);
			}
		}
		else if ((_1ed77e4c6_enm(_276639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3dc1b8:;
			{
				return _1e0e92a71_eval_enum_static(&(*_self_), _1ed77e4c6_enm(_276639_d.get()._field_kind.ptr()),_276653_si.get()._field_ident);
			}
		}
		else if ((_1ed77e73a_tenm(_276639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3dc22e:;
			{
				return _1e0e92e28_eval_type_enum_static(&(*_self_), _1ed77e73a_tenm(_276639_d.get()._field_kind.ptr()),_276653_si.get()._field_ident);
			}
		}
		else if ((_1ed7801db_strct(_276639_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3dc372:;
			{
				return _1e0e932d0_eval_struct_static(&(*_self_), _1ed7801db_strct(_276639_d.get()._field_kind.ptr()),_276653_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1ad3db1a6:;
			{
				_1e0e7eee2_push_err(&(*_self_), _276653_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_276639_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad3d6beb:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e97eb6_eval_obj_sub_ident(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0e7ce9b_Data> _278241_d, jule::Ptr<_1e012c080_SubIdentExpr> _278255_si) {
	if (_1dd996940_is_ignore_ident(_278255_si.get()._field_ident.get()._field_kind)) {
		_1e0e7eee2_push_err(&(*_self_), _278255_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _278817_kind = _278241_d.get()._field_kind;;
	{
		
		if ((_1ed77e262_ptr(_278241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e2355:;
			{
				jule::Ptr<_1ed788216_Ptr> _279117_ptr = _1ed77e262_ptr(_278241_d.get()._field_kind.ptr());;
				if (_1ed788bd9_is_unsafe(_279117_ptr.ptr())) {
					goto _match_end_1ad3e2245;
				};
				if (((!(_278255_si.get()._field_is_self)) && (!(_1e0e8092c_is_unsafe(&(*_self_)))))) {
					_1e0e7eee2_push_err(&(*_self_), _278255_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_278817_kind=_1ed77e262_ptr(_278241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1ed77deed_sptr(_278241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e23cc:;
			{
				_278817_kind=_1ed77deed_sptr(_278241_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1ad3e2245:;
	};
	{
		
		if ((_1ed780450_trt(_278241_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e4e07:;
			{
				return _1e0e93731_eval_trait_sub_ident(&(*_self_), _278241_d,_1ed780450_trt(_278241_d.get()._field_kind.ptr()),_278255_si.get()._field_ident);
			}
		}
		else if ((_1ed7801db_strct(_278817_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e4e7e:;
			{
				jule::Ptr<_1e010a05d_StructIns> _280717_s = _1ed7801db_strct(_278817_kind.ptr());;
				if (_1ed777d4e_is_instanced_struct(_280717_s)) {
					jule::Bool _280925_used_reference_elem = (_1ed77deed_sptr(_278241_d.get()._field_kind.ptr()) != nullptr);;
					return _1e0e93c2b_eval_struct_sub_ident(&(*_self_), _278241_d,_1ed7801db_strct(_278817_kind.ptr()),_278255_si,_280925_used_reference_elem);
				};
			}
		}
		else if ((_1ed77ec13_slc(_278817_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e5006:;
			{
				return _1e0e940d3_eval_slice_sub_ident(&(*_self_), _278241_d,_278255_si.get()._field_ident);
			}
		}
		else if ((_1ed77e99e_arr(_278817_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e507d:;
			{
				return _1e0e9448a_eval_array_sub_ident(&(*_self_), _278241_d,_278255_si.get()._field_ident);
			}
		}
		else if ((_1ed7806b4_map(_278817_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e5105:;
			{
				return _1e0e94842_eval_map_sub_ident(&(*_self_), _278241_d,_278255_si.get()._field_ident);
			}
		}
		else if ((_1ed77dc89_prim(_278817_kind.ptr()) != nullptr)) {
			_case_begin_1ad3e5655:;
			{
				jule::Ptr<_1ed781693_Prim> _281917_p = _1ed77dc89_prim(_278817_kind.ptr());;
				{
					auto &_match_expr{ _281917_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1ad3eb20a:;
						{
							return _1e0e94be9_eval_str_sub_ident(&(*_self_), _278241_d,_278255_si.get()._field_ident);
						}
					}
					_match_end_1ad3eb194:;
				};
			}
		}
		_match_end_1ad3e4d2a:;
	};
	_1e0e7eee2_push_err(&(*_self_), _278255_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_278241_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e982c4_eval_sub_ident(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012c080_SubIdentExpr> _282938_si) {
	jule::Ptr<_1ed77bbbb_TypeKind> _283017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_283017_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _283417_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_282938_si.get()._field_expr));;
	if ((_283417_d == nullptr)) {
		return nullptr;
	};
	if (_283417_d.get()._field_decl) {
		return _1e0e97b0e_eval_type_static(_self_.ptr(), _283417_d,_282938_si);
	};
	return _1e0e97eb6_eval_obj_sub_ident(_self_.ptr(), _283417_d,_282938_si);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e985d2_eval_tuple(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0129423_TupleExpr> _284634_tup) {
	jule::Ptr<_1ed786104_Tuple> _284717_tup_t = jule::new_ptr<_1ed786104_Tuple>(_1ed786104_Tuple{});;
	_284717_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::alloc(0LL,_284634_tup.get()._field_expr.len());
	jule::Ptr<_1e0141b77_TupleExprModel> _285017_model = jule::new_ptr<_1e0141b77_TupleExprModel>(_1e0141b77_TupleExprModel{._field_datas=jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>::alloc(0LL,_284634_tup.get()._field_expr.len())});;
	jule::Bool _285417_ok = true;;
	{
		auto &expr = _284634_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1ad401485:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _285521_expr = *it;
			{
				jule::Ptr<_1e0e7ce9b_Data> _285621_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_285521_expr.get()._field_kind));;
				if ((_285621_d == nullptr)) {
					_285417_ok=false;
					goto _iter_next_1ad401485;
				};
				_284717_tup_t.get()._field_types = jule::alloc_for_append(_284717_tup_t.get()._field_types,1);_284717_tup_t.get()._field_types.__push(_285621_d.get()._field_kind);;
				_285017_model.get()._field_datas = jule::alloc_for_append(_285017_model.get()._field_datas,1);_285017_model.get()._field_datas.__push(_285621_d);;
			}
			_iter_next_1ad401485:;
			++it;
			goto _iter_begin_1ad401485;
		}
		_iter_end_1ad401485:;
	};
	if ((!(_285417_ok))) {
		return nullptr;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_284717_tup_t, 9)}), ._field_model=jule::Any(_285017_model), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e98989_eval_map(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1ed786bb5_Map> _287532_m, jule::Ptr<_1e012e36d_BraceLit> _287545_lit) {
	jule::Ptr<_1e01408e0_MapExprModel> _287617_model = jule::new_ptr<_1e01408e0_MapExprModel>(_1e01408e0_MapExprModel{._field_key_kind=_287532_m.get()._field_key, ._field_val_kind=_287532_m.get()._field_val, });;
	{
		auto &expr = _287545_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1ad4636a1:;
		if (it != expr.end()) {
			jule::Ptr<_1e0128b3c_Expr> _288121_expr = *it;
			{
				{
					auto &_match_expr{ _288121_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1e012eb43_KeyValPair>>()) {
						_case_begin_1ad463c34:;
						{
							goto _match_end_1ad463e10;
						}
					}
					else {
						_case_begin_1ad463e65:;
						{
							_1e0e7eee2_push_err(_self_.ptr(), _287545_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1ad463e10:;
				};
				jule::Ptr<_1e012eb43_KeyValPair> _289121_pair = _288121_expr.get()._field_kind.operator jule::Ptr<_1e012eb43_KeyValPair>();;
				jule::Ptr<_1e0e7ce9b_Data> _289321_key = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_289121_pair.get()._field_key));;
				if ((_289321_key == nullptr)) {
					return nullptr;
				};
				jule::Ptr<_1e0e7ce9b_Data> _289821_val = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_289121_pair.get()._field_val));;
				if ((_289821_val == nullptr)) {
					return nullptr;
				};
				_1e0e24409_check_assign_type(_self_.get()._field_s, false,_287532_m.get()._field_key,_289321_key,_289121_pair.get()._field_colon);
				_1e0e24409_check_assign_type(_self_.get()._field_s, false,_287532_m.get()._field_val,_289821_val,_289121_pair.get()._field_colon);
				_287617_model.get()._field_entries = jule::alloc_for_append(_287617_model.get()._field_entries,1);_287617_model.get()._field_entries.__push(jule::new_ptr<_1e0140703_KeyValPairExprModel>(_1e0140703_KeyValPairExprModel{._field_key=jule::Any(_289321_key.get()._field_model), ._field_val=jule::Any(_289821_val.get()._field_model)}));;
			}
			_iter_next_1ad4636a1:;
			++it;
			goto _iter_begin_1ad4636a1;
		}
		_iter_end_1ad4636a1:;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_287532_m, 10)}), ._field_mutable=true, ._field_model=jule::Any(_287617_model), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e98c97_eval_brace_lit(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012e36d_BraceLit> _291938_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ad468e9d:;
			{
				_1e0e7eee2_push_err(_self_.ptr(), _291938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1ed7806b4_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad469795:;
			{
				return _1e0e98989_eval_map(_self_, _1ed7806b4_map(_self_.get()._field_prefix.ptr()),_291938_lit);
			}
		}
		else if ((_1ed7801db_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ad46980b:;
			{
				return _1e0e9071c_eval_struct_lit_explicit(_self_, _1ed7801db_strct(_self_.get()._field_prefix.ptr()),_291938_lit.get()._field_exprs,_291938_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1ad468b07:;
			{
				_1e0e7eee2_push_err(_self_.ptr(), _291938_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad46891a:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e990a5_eval_anon_fn(_1e0e7ea19_Eval* _self_, jule::Ptr<_1e0134e01_FnDecl> _293435_decl) {
	_1ed789da5_TypeChecker _293517_tc = _1ed789da5_TypeChecker{._field_s=(*_self_)._field_s, ._field_lookup=(*_self_)._field_lookup, };;
	jule::Ptr<_1e01457c4_FnIns> _293917_ins = _1ed7916e7_build_fn(&_293517_tc, _293435_decl);;
	_293917_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
			_case_begin_1ad46cc3d:;
			{
				jule::Ptr<_1e0debe4d_ScopeChecker> _294421_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>();;
				jule::Ptr<_1e0debe4d_ScopeChecker> _294521_scc = _1e0e0b996_new_child_checker(_294421_sc);;
				_294521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e0deba74_ScopeLabel>>>(nullptr);
				_294521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e0debc61_ScopeGoto>>>(nullptr);
				_294521_scc.get()._field_owner=nullptr;
				_294521_scc.get()._field_child_index=0LL;
				_294521_scc.get()._field_it=0LLU;
				_294521_scc.get()._field_cse=0LLU;
				_294521_scc.get()._field_owner=_293917_ins;
				_1e0e31c41_check_fn_ins_sc((*_self_)._field_s.ptr(), _293917_ins,_294521_scc);
			}
		}
		else {
			_case_begin_1ad46d5ce:;
			{
				_1e0e322d5_check_fn_ins((*_self_)._field_s, _293917_ins);
			}
		}
		_match_end_1ad46d579:;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_293917_ins, 1)}), ._field_model=jule::Any(jule::new_ptr<_1e0140516_AnonFnExprModel>(_1e0140516_AnonFnExprModel{._field_func=_293917_ins, ._field_global=_1e0e80b91_is_global(&(*_self_))})), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e993b3_eval_binop(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e012c503_BinopExpr> _296734_op) {
	_1e0e9beed_BinaryEval _296817_bs = static__1e0e9c5b4_new_plain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1ed781693_Prim> _297217_prim = _1ed77dc89_prim(_self_.get()._field_prefix.ptr());;
		if (((_297217_prim == nullptr) || (!(_1e0dea039_is_num(_1ed781a06_to_str(_297217_prim.ptr())))))) {
			jule::Ptr<_1ed77bbbb_TypeKind> _297425_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_297425_prefix;
			});;
			return _1ed776358_eval(&_296817_bs, _296734_op);
		};
	};
	return _1ed776358_eval(&_296817_bs, _296734_op);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e996c1_eval_expr_kind(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Any _298438_kind) {
	jule::Ptr<_1e0e7ce9b_Data> _298517_d = nullptr;;
	{
		auto &_match_expr{ _298438_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e0128b3c_Expr>>()) {
			_case_begin_1ad475a59:;
			{
				_298517_d=_1e0e996c1_eval_expr_kind(_self_, jule::Any(_298438_kind.operator jule::Ptr<_1e0128b3c_Expr>().get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01297a8_LitExpr>>()) {
			_case_begin_1ad475ac0:;
			{
				_298517_d=_1e0e82874_eval_lit(_self_.ptr(), _298438_kind.operator jule::Ptr<_1e01297a8_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
			_case_begin_1ad475b36:;
			{
				_298517_d=_1e0e86d62_eval_ident(_self_.ptr(), _298438_kind.operator jule::Ptr<_1e012a7dc_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012aee6_UnaryExpr>>()) {
			_case_begin_1ad475d23:;
			{
				_298517_d=_1e0e87170_eval_unary(_self_, _298438_kind.operator jule::Ptr<_1e012aee6_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012b39d_VariadicExpr>>()) {
			_case_begin_1ad475d89:;
			{
				_298517_d=_1e0e8747d_eval_variadic(_self_, _298438_kind.operator jule::Ptr<_1e012b39d_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0129eb2_UnsafeExpr>>()) {
			_case_begin_1ad475e00:;
			{
				_298517_d=_1e0e8778b_eval_unsafe(_self_, _298438_kind.operator jule::Ptr<_1e0129eb2_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013032a_SliceExpr>>()) {
			_case_begin_1ad475e77:;
			{
				_298517_d=_1e0e8825e_eval_slice_expr(_self_, _298438_kind.operator jule::Ptr<_1e013032a_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0130b99_IndexingExpr>>()) {
			_case_begin_1ad475eee:;
			{
				_298517_d=_1e0e8adbb_eval_indexing(_self_, _298438_kind.operator jule::Ptr<_1e0130b99_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01312a4_SlicingExpr>>()) {
			_case_begin_1ad476076:;
			{
				_298517_d=_1e0e8c087_eval_slicing(_self_, _298438_kind.operator jule::Ptr<_1e01312a4_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012b755_CastExpr>>()) {
			_case_begin_1ad4760ed:;
			{
				_298517_d=_1e0e8ee8b_eval_cast(_self_, _298438_kind.operator jule::Ptr<_1e012b755_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012bb0c_NsSelectionExpr>>()) {
			_case_begin_1ad476175:;
			{
				_298517_d=_1e0e90299_eval_ns_selection(_self_.ptr(), _298438_kind.operator jule::Ptr<_1e012bb0c_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012ddea_StructLit>>()) {
			_case_begin_1ad4761ec:;
			{
				_298517_d=_1e0e90a3b_eval_struct_lit(_self_, _298438_kind.operator jule::Ptr<_1e012ddea_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01253db_TypeDecl>>()) {
			_case_begin_1ad476274:;
			{
				_298517_d=_1e0e90d49_eval_type(_self_.ptr(), _298438_kind.operator jule::Ptr<_1e01253db_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>()) {
			_case_begin_1ad4762eb:;
			{
				_298517_d=_1e0e926b9_eval_fn_call(_self_, _298438_kind.operator jule::Ptr<_1e012cb0d_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012c080_SubIdentExpr>>()) {
			_case_begin_1ad476373:;
			{
				_298517_d=_1e0e982c4_eval_sub_ident(_self_, _298438_kind.operator jule::Ptr<_1e012c080_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0129423_TupleExpr>>()) {
			_case_begin_1ad4763ea:;
			{
				_298517_d=_1e0e985d2_eval_tuple(_self_, _298438_kind.operator jule::Ptr<_1e0129423_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012e36d_BraceLit>>()) {
			_case_begin_1ad476472:;
			{
				_298517_d=_1e0e98c97_eval_brace_lit(_self_, _298438_kind.operator jule::Ptr<_1e012e36d_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>()) {
			_case_begin_1ad4764e9:;
			{
				_298517_d=_1e0e990a5_eval_anon_fn(_self_.ptr(), _298438_kind.operator jule::Ptr<_1e0134e01_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012c503_BinopExpr>>()) {
			_case_begin_1ad476571:;
			{
				_298517_d=_1e0e993b3_eval_binop(_self_, _298438_kind.operator jule::Ptr<_1e012c503_BinopExpr>());
			}
		}
		_match_end_1ad475a04:;
	};
	return _298517_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e999ce_eval(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0128b3c_Expr> _303128_expr) {
	jule::Ptr<_1e0e7ce9b_Data> _303217_d = _1e0e996c1_eval_expr_kind(_self_, jule::Any(_303128_expr.get()._field_kind));;
	if (((_303217_d == nullptr) || (_303217_d.get()._field_kind == nullptr))) {
		return nullptr;
	};
	{
		
		if ((_1ed77ee77_fnc(_303217_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad48288a:;
			{
				jule::Ptr<_1e01457c4_FnIns> _303921_f = _1ed77ee77_fnc(_303217_d.get()._field_kind.ptr());;
				if (_1e0146550_is_builtin(_303921_f.ptr())) {
					goto _match_end_1ad4827ad;
				};
				if ((_303921_f.get()._field_generics.len() != _303921_f.get()._field_decl.get()._field_generics.len())) {
					_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _303128_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (_1e0123d35_is_method(_303921_f.get()._field_decl.ptr())) {
					_1e0e1e107_push_err(_self_.get()._field_s.ptr(), _303128_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ad4827ad:;
	};
	return _303217_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e99cdc_eval_expr(jule::Ptr<_1e0e7ea19_Eval> _self_, jule::Ptr<_1e0128b3c_Expr> _305733_expr) {
	jule::Ptr<_1e0e7ce9b_Data> _305817_d = _1e0e999ce_eval(_self_, _305733_expr);;
	{
		
		if ((_305817_d == nullptr)) {
			_case_begin_1ad4867d4:;
			{
				return nullptr;
			}
		}
		else if (_305817_d.get()._field_decl) {
			_case_begin_1ad48685b:;
			{
				_1e0e7eee2_push_err(_self_.ptr(), _305733_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1ad48631c:;
			{
				return _305817_d;
			}
		}
		_match_end_1ad4862b7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e7ea19_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1e0e9a260_UnaryEval static__1e0e9a716_new(jule::Ptr<_1e0e7ea19_Eval> _307823_e) {
	return _1e0e9a260_UnaryEval{._field_e=_307823_e, };
}



inline void _1e0e9a8e2_minus(_1e0e9a260_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ad488099:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad4884d9:;
			{
				if ((!(_1e0dea039_is_num(_1ed77c073_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad488550:;
			{
				if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad4878c3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad486ae2:;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e0d5302a_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad48b652:;
				{
					_1e0d52139_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(_1e0d50b82_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e0d52579_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad48b6c9:;
				{
					_1e0d51644_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1e0d501d1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e0d527dd_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad48b751:;
				{
					_1e0d51644_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(_1e0d50de6_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ad48b410:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e0e9aabd_plus(_1e0e9a260_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ad490ea3:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad4913e3:;
			{
				if ((!(_1e0dea039_is_num(_1ed77c073_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad491459:;
			{
				if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad490b0c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad490a41:;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e0d5302a_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad494539:;
				{
					_1e0d52139_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(_1e0d50b82_read_f64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e0d52579_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad4945b1:;
				{
					_1e0d51644_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1e0d501d1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e0d527dd_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad494638:;
				{
					_1e0d51644_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(_1e0d50de6_as_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ad4942e7:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e0e9ac99_caret(_1e0e9a260_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1ad498c25:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad499165:;
			{
				if ((!(_1e0de99a6_is_int(_1ed77c073_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad4991cb:;
			{
				if ((_1ed7801db_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ad49887e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad4987b3:;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e0d52579_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad49c2bc:;
				{
					_1e0d51644_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(_1e0d501d1_read_i64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			else if (_1e0d527dd_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad49c344:;
				{
					_1e0d518b9_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(_1e0d50445_read_u64((*_self_)._field_d.get()._field_constant.ptr())))));
				}
			}
			_match_end_1ad49c08b:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e0e9ae75_excl(_1e0e9a260_UnaryEval* _self_) {
	jule::Ptr<_1ed781693_Prim> _319713_t = _1ed77dc89_prim((*_self_)._field_d.get()._field_kind.ptr());;
	if (((_319713_t == nullptr) || (!(_1ed7843dd_is_bool(_319713_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1e0d52a52_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1ad4a1c72:;
				{
					_1e0d51b3e_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1e0d506a9_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1ad4a1b73:;
		};
	};
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
}



inline void _1e0e9b151_star(_1e0e9a260_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
	{
		
		if ((_1ed77e262_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad4a4c42:;
			{
				if ((!(_1e0e8092c_is_unsafe((*_self_)._field_e.ptr())))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ed788216_Ptr> _322921_t = _1ed77e262_ptr((*_self_)._field_d.get()._field_kind.ptr());;
				if (_1ed788bd9_is_unsafe(_322921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_kind=_322921_t.get()._field_elem;
			}
		}
		else if ((_1ed77deed_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad4a5182:;
			{
				(*_self_)._field_d.get()._field_kind=_1ed77deed_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1ad4a48bd:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad4a4868:;
	};
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1e0e9b32c_amper(_1e0e9a260_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0116982_StructLitExprModel>>()) {
			_case_begin_1ad4a99e4:;
			{
				jule::Ptr<_1e0116982_StructLitExprModel> _324921_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1e0116982_StructLitExprModel>();;
				_1ed7770e5_make_struct_lit_alloc((*_self_)._field_d,_324921_lit);
			}
		}
		else {
			_case_begin_1ad4a9186:;
			{
				{
					
					if (_1ed793870_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1ad4a9c9c:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed788216_Ptr>(_1ed788216_Ptr{._field_elem=(*_self_)._field_d.get()._field_kind}), 12)});
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>((*((*_self_)._field_d))), ._field_op=(*_self_)._field_u.get()._field_op}));
						}
					}
					else {
						_case_begin_1ad4a964d:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1ad4a95a4:;
				};
			}
		}
		_match_end_1ad4a90cb:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	};
}



inline void _1e0e9b508_type_decl(_1e0e9a260_UnaryEval* _self_) {
	_1ed789da5_TypeChecker _327317_tc = _1ed789da5_TypeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_error_token=(*_self_)._field_u.get()._field_op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad4b0434:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed790086_build_ptr_from_type(&_327317_tc, (*_self_)._field_d.get()._field_kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad4b049a:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed78e96a_build_sptr_from_type(&_327317_tc, (*_self_)._field_d.get()._field_kind), 7)});
			}
		}
		else {
			_case_begin_1ad4ace04:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ad4adb19:;
	};
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1e0e9b6d4_eval_data(_1e0e9a260_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ad4b2810:;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _329521_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_329521_prefix;
			}
		}
		else {
			_case_begin_1ad4b2128:;
			{
				(*_self_)._field_d=_1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1ad4b2458:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9b9ae_eval(_1e0e9a260_UnaryEval* _self_, jule::Ptr<_1e012aee6_UnaryExpr> _330427_u) {
	(*_self_)._field_u=_330427_u;
	_1e0e9b6d4_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	};
	if ((*_self_)._field_d.get()._field_decl) {
		_1e0e9b508_type_decl(&(*_self_));
		return (*_self_)._field_d;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _331513_kind = (*_self_)._field_d.get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad4b6ade:;
			{
				_1e0e9a8e2_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad4b6539:;
			{
				_1e0e9aabd_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad4b65a0:;
			{
				_1e0e9ac99_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ad4b6616:;
			{
				_1e0e9ae75_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad4b667c:;
			{
				_1e0e9b151_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad4b6c76:;
			{
				_1e0e9b32c_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1ad4b6094:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1ad4b64d4:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ad4b712d:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str(_331513_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1e0e7d85e_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1ad4b7194:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		_match_end_1ad4b8ae1:;
	};
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e9a260_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1e0e9beed_BinaryEval static__1e0e9c5b4_new_plain(jule::Ptr<_1e0e7ea19_Eval> _335329_e) {
	return _1e0e9beed_BinaryEval{._field_e=_335329_e, };
}



inline _1e0e9beed_BinaryEval static__1e0e9c905_new(jule::Ptr<_1e0e7ea19_Eval> _335923_e, jule::Ptr<_1dd9941e0_Token> _335937_op) {
	return _1e0e9beed_BinaryEval{._field_e=_335923_e, ._field_op=_335937_op};
}



inline jule::Bool _1e0e9cb8b_check_type_compatibility(_1e0e9beed_BinaryEval* _self_) {
	return _1e0e2487c_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1e0e9ce44_check_struct_common_operator_compatibility(_1e0e9beed_BinaryEval* _self_) {
	jule::Ptr<_1e01457c4_FnIns> _337317_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ad4bd92b:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad4be993:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad4bea09:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad4bea70:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad4bd662:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad4bd6c8:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad4bd73e:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad4bd7a5:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ad4bec5c:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad4becc3:;
			{
				_337317_overload=_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1ad4bd167:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1ad4bd5b8:;
	};
	if ((_337317_overload == nullptr)) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	};
	jule::Ptr<_1e0144938_ParamIns> _340517_p = _337317_overload.get()._field_params[1LL];;
	return _1e0e24409_check_assign_type((*_self_)._field_e.get()._field_s, _340517_p.get()._field_decl.get()._field_reference,_340517_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d1db_eval_nil(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1ed77d2d8_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3)),jule::Any(_1ed77c073_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4c932c:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4c8c88:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1ad4c8e31:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d450_eval_enum(_1e0e9beed_BinaryEval* _self_) {
	jule::Ptr<_1e057b8b9_Enum> _343017_enm = _1ed77e4c6_enm((*_self_)._field_l.get()._field_kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4ca2a6:;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _343421_rkind = (*_self_)._field_r.get()._field_kind;;
				if ((_1ed77e4c6_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_343421_rkind=_1ed77e4c6_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				};
				if ((!(_1e0e2487c_check_type_compatibility((*_self_)._field_e.get()._field_s, _343017_enm.get()._field_kind.get()._field_kind,_343421_rkind,(*_self_)._field_op)))) {
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ad4cb3c8:;
	};
	if (((_1ed77e4c6_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_343017_enm != _1ed77e4c6_enm((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_343017_enm.get()._field_ident),jule::Any(_1ed77c073_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad4d0de4:;
			{
				if ((!(_1e0dea039_is_num(_1ed77c073_to_str(_343017_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343017_enm.get()._field_ident)}));
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ad4d1d29:;
			{
				if (((_1ed77dc89_prim(_343017_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1e0de99a6_is_int(_1ed781a06_to_str(_1ed77dc89_prim(_343017_enm.get()._field_kind.get()._field_kind.ptr()).ptr())))))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343017_enm.get()._field_ident)}));
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ad4d0146:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_343017_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1ad4d0a3c:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d6b4_eval_type_enum(_1e0e9beed_BinaryEval* _self_) {
	jule::Ptr<_1e04c643a_TypeEnum> _348117_enm = _1ed77e73a_tenm((*_self_)._field_l.get()._field_kind.ptr());;
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4d737e:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4d6d1d:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1e04aae14_to_str(_348117_enm.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4d6955:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9d928_eval_sptr(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4d966c:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4d91b6:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4d8737:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1e0e9db8c_eval_ptr(_1e0e9beed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad4db64c:;
			{
				if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1ad4dc85c:;
			{
				if ((_1ed77e262_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				};
				if (_1ed788bd9_is_unsafe(_1ed77e262_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				};
				if ((!(_1ed778129_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ad4da849:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4dab24:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed772909_eval_arr(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4e2ed3:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4e28b7:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4dcecd:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed772ab3_eval_slc(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4e54ad:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4e5007:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4e4578:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed772d27_eval_fn(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4e7955:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad4e749e:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad4e6a20:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed77308b_eval_struct(_1e0e9beed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ad4e8e73:;
			{
				if ((_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad4e8ed9:;
			{
				if ((_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ad4e9061:;
			{
				if ((_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad4e90d8:;
			{
				if ((_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad4e9858:;
			{
				if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				};
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ad4e8e0c:;
	};
	if ((!(_1e0e9ce44_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	};
	return (*_self_)._field_l;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed773300_eval_trait(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad504a3e:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad504566:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad504214:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed773564_eval_any(_1e0e9beed_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad506a1e:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad505c1b:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1ad505ee6:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed7737c8_eval_bool(_1e0e9beed_BinaryEval* _self_) {
	if ((!(_1e0e9cb8b_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1ad508c52:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ad50879b:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(_1ed77c073_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1ad507d1c:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed773a3c_eval_str(_1e0e9beed_BinaryEval* _self_) {
	jule::Str _372317_rk = _1ed77c073_to_str((*_self_)._field_r.get()._field_kind.ptr());;
	if ((_372317_rk != jule::Str("str", 3))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_372317_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad50bd21:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad50bd87:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		else {
			_case_begin_1ad50ab99:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1ad50ad20:;
	};
}



inline void _1ed773c18_set_type_to_greater(_1e0e9beed_BinaryEval* _self_) {
	if (_1e0e7d85e_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1e0e7d85e_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_r.ptr())) {
		return;;
	};
	_julec_label_set:;
	if (_1e0de82ce_is_greater(_1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	};
}



inline void _1ed773e5a_check_mod_data(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _376638_d) {
	if ((!(_1e0e7d85e_is_const(_376638_d.ptr())))) {
		if (((_1ed77dc89_prim(_376638_d.get()._field_kind.ptr()) == nullptr) || (!(_1e0de99a6_is_int(_1ed77dc89_prim(_376638_d.get()._field_kind.ptr()).get()._field_kind))))) {
			_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1e0e68a9c_sig_assignable(jule::Str("i64", 3),_376638_d)) {
			_case_begin_1ad514268:;
			{
				_1e0d51644_set_i64(_376638_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_376638_d.get()._field_constant.ptr())));
			}
		}
		else if (_1e0e68bce_unsig_assignable(jule::Str("u64", 3),_376638_d)) {
			_case_begin_1ad513e6b:;
			{
				_1e0d518b9_set_u64(_376638_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_376638_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1ad513e05:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ad512541:;
	};
}



inline void _1ed774136_mod(_1e0e9beed_BinaryEval* _self_) {
	_1ed773e5a_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1ed773e5a_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1ed774510_numbers_are_compatibile(_1e0e9beed_BinaryEval* _self_, jule::Str& _378839_lk, jule::Str& _378849_rk) {
	if ((!(_1e0dea039_is_num(_378849_rk)))) {
		return false;
	};
	if (_1e0e7d85e_is_const((*_self_)._field_l.ptr())) {
		return true;
	};
	if ((_378839_lk == jule::Str("f32", 3))) {
		if (_1e0e7d85e_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_378849_rk == jule::Str("f32", 3));
	};
	if ((_378839_lk == jule::Str("f64", 3))) {
		if (_1e0e7d85e_is_const((*_self_)._field_r.ptr())) {
			return true;
		};
		return (_378849_rk == jule::Str("f64", 3));
	};
	if (_1e0e7d85e_is_const((*_self_)._field_r.ptr())) {
		return true;
	};
	return (_378839_lk == _378849_rk);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed774785_eval_float(_1e0e9beed_BinaryEval* _self_) {
	jule::Str _381813_lk = _1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _381913_rk = _1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	if ((!(_1ed774510_numbers_are_compatibile(&(*_self_), _381813_lk,_381913_rk)))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_381813_lk),jule::Any(_381913_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad51c20a:;
			{
				if (((!(_1e0e7d85e_is_const((*_self_)._field_l.ptr()))) || (!(_1e0e68d11_int_assignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_381813_lk),jule::Any(_381913_rk)}));
					return nullptr;
				};
				if (((!(_1e0e7d85e_is_const((*_self_)._field_r.ptr()))) || (!(_1e0e68d11_int_assignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_381813_lk),jule::Any(_381913_rk)}));
					return nullptr;
				};
				_1e0d51644_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1e0d518b9_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1ed777a1e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1ad51c194:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad51c293:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ad52274e:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ad524883:;
			{
				_1ed773c18_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad524795:;
			{
				if ((!(_1e0de99a6_is_int(_381913_rk)))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_381813_lk),jule::Any(_381913_rk)}));
					return nullptr;
				};
				_1ed774136_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1ad5229d5:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad52340e:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed7749e9_eval_int(_1e0e9beed_BinaryEval* _self_) {
	jule::Str _388213_lk = _1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;;
	jule::Str _388313_rk = _1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad5271e3:;
			{
				if (((!(_1e0de99a6_is_int(_388213_lk))) || (!(_1e0de99a6_is_int(_388313_rk))))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388213_lk),jule::Any(_388313_rk)}));
					return nullptr;
				};
				if ((!(_1ed777a1e_is_ok_for_shifting((*_self_)._field_r)))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				};
				return (*_self_)._field_l;
			}
		}
		_match_end_1ad527963:;
	};
	if ((!(_1ed774510_numbers_are_compatibile(&(*_self_), _388213_lk,_388313_rk)))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_388213_lk),jule::Any(_388313_rk)}));
		return nullptr;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad52b208:;
			{
				return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("bool", 4)), 6)}), });
			}
		}
		_match_end_1ad52b192:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ad52d44c:;
			{
				_1ed773c18_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad52d35e:;
			{
				_1ed774136_mod(&(*_self_));
				_1ed773c18_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1ad52b33a:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1ad52bed9:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed774c5d_eval_prim(_1e0e9beed_BinaryEval* _self_) {
	jule::Ptr<_1ed781693_Prim> _394113_prim = _1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr());;
	{
		
		if (_1ed7843dd_is_bool(_394113_prim.ptr())) {
			_case_begin_1ad530482:;
			{
				return _1ed7737c8_eval_bool(&(*_self_));
			}
		}
		else if (_1ed784652_is_str(_394113_prim.ptr())) {
			_case_begin_1ad530509:;
			{
				return _1ed773a3c_eval_str(&(*_self_));
			}
		}
		_match_end_1ad5303b6:;
	};
	if ((_1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed781a06_to_str(_394113_prim.ptr())),jule::Any(_1ed77c073_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	};
	{
		
		if (_1e0de9c92_is_float(_394113_prim.get()._field_kind)) {
			_case_begin_1ad533023:;
			{
				return _1ed774785_eval_float(&(*_self_));
			}
		}
		else if (_1e0de99a6_is_int(_394113_prim.get()._field_kind)) {
			_case_begin_1ad5330cd:;
			{
				return _1ed7749e9_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1ad53142d:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5313c8:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed774ec2_eval_op(_1e0e9beed_BinaryEval* _self_) {
	{
		
		if (_1ed77cd10_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ad534651:;
			{
				_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((_1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ad53473e:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ad5347a5;
			}
		}
		else if (((_1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ad5347a5:;
			{
				return _1ed773564_eval_any(&(*_self_));
			}
		}
		else if (_1ed77ca9b_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1ad533d26:;
			{
				return _1e0e9d1db_eval_nil(&(*_self_));
			}
		}
		else if ((_1ed77e4c6_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad533d8c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ad533e03;
			}
		}
		else if ((_1ed77e4c6_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad533e03:;
			{
				return _1e0e9d450_eval_enum(&(*_self_));
			}
		}
		else if ((_1ed77e73a_tenm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad533e69:;
			{
				return _1e0e9d6b4_eval_type_enum(&(*_self_));
			}
		}
		else if ((_1ed77deed_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad53482c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ad534893;
			}
		}
		else if ((_1ed77deed_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534893:;
			{
				return _1e0e9d928_eval_sptr(&(*_self_));
			}
		}
		else if ((_1ed77e262_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534909:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ad534970;
			}
		}
		else if ((_1ed77e262_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534970:;
			{
				return _1e0e9db8c_eval_ptr(&(*_self_));
			}
		}
		else if ((_1ed77e99e_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad5349d6:;
			{
				return _1ed772909_eval_arr(&(*_self_));
			}
		}
		else if ((_1ed77ec13_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534a5d:;
			{
				return _1ed772ab3_eval_slc(&(*_self_));
			}
		}
		else if ((_1ed77ee77_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534ad5:;
			{
				return _1ed772d27_eval_fn(&(*_self_));
			}
		}
		else if ((_1ed780450_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534b5c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1ad534bd4;
			}
		}
		else if ((_1ed780450_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534bd4:;
			{
				return _1ed773300_eval_trait(&(*_self_));
			}
		}
		else if ((_1ed7801db_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534c5b:;
			{
				return _1ed77308b_eval_struct(&(*_self_));
			}
		}
		else if ((_1ed77dc89_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad534cd3:;
			{
				return _1ed774c5d_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1ad533cb0:;
			{
				return nullptr;
			}
		}
		_match_end_1ad53330e:;
	};
}



inline void _1ed775247_eval_const(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _401334_d) {
	{
		
		if ((_401334_d == nullptr)) {
			_case_begin_1ad5434ea:;
			{
				return;;
			}
		}
		else if ((!(_1e0e7d85e_is_const((*_self_)._field_l.ptr()))) || (!(_1e0e7d85e_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1ad543b05:;
			{
				_401334_d.get()._field_constant=nullptr;
				return;;
			}
		}
		_match_end_1ad5433da:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ad544b7d:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad544a90:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ad545178:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(_1e0d53bb8_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ad5451de:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(_1e0d538aa_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ad545255:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ad5452bb:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ad545332:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ad545398:;
			{
				_401334_d.get()._field_constant=static__1e0d4e39a_new_bool(((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ad545420:;
			{
				_1e0d5501b_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ad545497:;
			{
				_1e0d55329_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad54551e:;
			{
				_1e0d55637_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad545596:;
			{
				jule::Bool _405017_ok = _1e0d55945_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_405017_ok)) && (_1e0d513be_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1ed781693_Prim> _405521_prim = _1ed77dc89_prim(_401334_d.get()._field_kind.ptr());;
				{
					
					if (_1e0de9423_is_sig_int(_405521_prim.get()._field_kind)) {
						_case_begin_1ad55264c:;
						{
							_1e0d51644_set_i64(_401334_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_401334_d.get()._field_constant.ptr())));
						}
					}
					else if (_1e0de970e_is_unsig_int(_405521_prim.get()._field_kind)) {
						_case_begin_1ad5526c4:;
						{
							_1e0d518b9_set_u64(_401334_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_401334_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1ad552581:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad54561d:;
			{
				jule::Bool _406317_ok = _1e0d55c53_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));;
				if (((!(_406317_ok)) && (_1e0d513be_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL))) {
					_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ad545695:;
			{
				_1e0d5636e_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ad54571c:;
			{
				_1e0d56061_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ad545794:;
			{
				_1e0d5667c_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ad54581b:;
			{
				_1e0d5698a_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ad545893:;
			{
				_1e0d56c98_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_401334_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1ad5448d6:;
	};
	_1ed778e3d_apply_cast_model_by_enum(_401334_d,_1ed77e4c6_enm(_401334_d.get()._field_kind.ptr()));
	jule::Ptr<_1ed781693_Prim> _408717_prim = _1ed77dc89_prim(_401334_d.get()._field_kind.ptr());;
	if (((_408717_prim == nullptr) || (!(_1e0dea039_is_num(_1ed781a06_to_str(_408717_prim.ptr())))))) {
		_401334_d.get()._field_model=jule::Any(_401334_d.get()._field_constant);
		return;;
	};
	if ((((*_self_)._field_op.get()._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op.get()._field_kind != jule::Str(">>", 2)))) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant))) {
			_401334_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_408717_prim=_1ed77dc89_prim(_401334_d.get()._field_kind.ptr());
		};
	};
	_1ed776ce8_fit_bitsize(_401334_d);
	_1ed779207_cast_const_by_type(_408717_prim.get()._field_kind,_401334_d);
}



inline void _1ed7754bc_check_data(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _410334_d) {
	jule::Ptr<_1e01457c4_FnIns> _410413_f = _1ed77ee77_fnc(_410334_d.get()._field_kind.ptr());;
	if ((((_410413_f != nullptr) && (_410413_f.get()._field_decl != nullptr)) && _1e0123d35_is_method(_410413_f.get()._field_decl.ptr()))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1ed775698_check_datas(_1e0e9beed_BinaryEval* _self_) {
	_1ed7754bc_check_data(&(*_self_), (*_self_)._field_l);
	_1ed7754bc_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1ed77591d_set_model(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _411533_d) {
	if (_1e0e7d85e_is_const(_411533_d.ptr())) {
		if ((((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant))) {
			return;;
		};
	};
	jule::Ptr<_1e0e7ce9b_Data> _412318_l = (*_self_)._field_l;;
	jule::Ptr<_1e0e7ce9b_Data> _412325_r = (*_self_)._field_r;;
	std::tie(_412318_l,_412325_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1e0e7db6c_good_operand(_412318_l.ptr(), _412325_r)))) {
		std::tie(_412318_l,_412325_r) = std::make_tuple(_412325_r,_412318_l);
	};
	_411533_d.get()._field_model=jule::Any(jule::new_ptr<_1e011cdb7_BinopExprModel>(_1e011cdb7_BinopExprModel{._field_left=jule::new_ptr<_1e0116dc2_OperandExprModel>(_1e0116dc2_OperandExprModel{._field_kind=_412318_l.get()._field_kind, ._field_model=jule::Any(_412318_l.get()._field_model)}), ._field_right=jule::new_ptr<_1e0116dc2_OperandExprModel>(_1e0116dc2_OperandExprModel{._field_kind=_412325_r.get()._field_kind, ._field_model=jule::Any(_412325_r.get()._field_model)}), ._field_op=(*_self_)._field_op}));
}



inline void _1ed775b93_post_eval(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _414133_d) {
	_414133_d.get()._field_lvalue=false;
	_1ed77591d_set_model(&(*_self_), _414133_d);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed77604a_solve_explicit(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e0e7ce9b_Data>& _414638_l, jule::Ptr<_1e0e7ce9b_Data>& _414653_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_414638_l,_414653_r);
	_1ed775698_check_datas(&(*_self_));
	jule::Ptr<_1e0e7ce9b_Data> _415117_d = _1ed774ec2_eval_op(&(*_self_));;
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_414638_l,_414653_r);
	_1ed775247_eval_const(&(*_self_), _415117_d);
	if ((_415117_d != nullptr)) {
		_415117_d.get()._field_mutable=true;
		_1ed775b93_post_eval(&(*_self_), _415117_d);
	};
	return _415117_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed776358_eval(_1e0e9beed_BinaryEval* _self_, jule::Ptr<_1e012c503_BinopExpr>& _416628_op) {
	if ((_416628_op.get()._field_op.get()._field_kind == jule::Str("=", 1))) {
		_1e0e7eee2_push_err((*_self_)._field_e.ptr(), _416628_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1e0e80311_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _417317_l = _1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any(_416628_op.get()._field_left));;
	if (((_417317_l == nullptr) || (_417317_l.get()._field_kind == nullptr))) {
		return nullptr;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _417817_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_417317_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_417817_prefix;
	});;
	jule::Ptr<_1e0e7ce9b_Data> _418117_r = _1e0e996c1_eval_expr_kind((*_self_)._field_e, jule::Any(_416628_op.get()._field_right));;
	if (((_418117_r == nullptr) || (_418117_r.get()._field_kind == nullptr))) {
		return nullptr;
	};
	(*_self_)._field_op=_416628_op.get()._field_op;
	jule::Ptr<_1e0e7ce9b_Data> _418817_d = _1ed77604a_solve_explicit(&(*_self_), _417317_l,_418117_r);;
	if ((((_418817_d != nullptr) && _417317_l.get()._field_is_rune) && _418117_r.get()._field_is_rune)) {
		_418817_d.get()._field_is_rune=true;
	};
	return _418817_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1e0e9beed_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed77ae84_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ed77c073_to_str(_1ed77bbbb_TypeKind* _self_) {
	if (_1ed77ca9b_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	};
	jule::Str _6817_kind = jule::Str();;
	if ((*_self_)._field_variadic) {
		_6817_kind+=jule::Str("...", 3);
	};
	if (_1ed77c837_cpp_linked(&(*_self_))) {
		_6817_kind+=jule::Str("cpp.", 4);
		_6817_kind+=(*_self_)._field_cpp_ident;
	} else {
		_6817_kind+=_1ed77b78c_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1ed77b33b_to_str((*_self_)._field_kind);
	};
	return _6817_kind;
}



inline jule::Bool _1ed77c381_equals(jule::Ptr<_1ed77bbbb_TypeKind> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _8426_other) {
	if (_1ed77ca9b_is_nil(_self_.ptr())) {
		return _1ed77ca9b_is_nil(_8426_other.ptr());
	};
	if (_1ed77c837_cpp_linked(_self_.ptr())) {
		return (_1ed77c837_cpp_linked(_8426_other.ptr()) && (_self_.get()._field_cpp_ident == _8426_other.get()._field_cpp_ident));
	};
	return _1ed77b78c_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1ed77b649_equals(_self_.get()._field_kind, _8426_other);
}



inline jule::Bool _1ed77c837_cpp_linked(_1ed77bbbb_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1ed77ca9b_is_nil(_1ed77bbbb_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1ed77cd10_void(_1ed77bbbb_TypeKind* _self_) {
	jule::Ptr<_1ed781693_Prim> _10713_prim = _1ed77dc89_prim(&(*_self_));;
	return ((_10713_prim != nullptr) && (_10713_prim.get()._field_kind == jule::Str("void", 4)));
}



inline jule::Bool _1ed77d074_mutable(_1ed77bbbb_TypeKind* _self_) {
	{
		_1ed77bbbb_TypeKind* _11421__self = (&((*_self_)));;
		if ((_1ed7801db_strct(_11421__self) != nullptr)) {
			return _1ed7801db_strct(_11421__self).get()._field_mutable;
		};
		if ((_1ed780450_trt(_11421__self) != nullptr)) {
			return _1ed780450_trt(_11421__self).get()._field_mutable;
		};
		if ((_1ed77dc89_prim(_11421__self) != nullptr)) {
			jule::Ptr<_1ed781693_Prim> _12321_p = _1ed77dc89_prim(_11421__self);;
			return _1ed7848b6_is_any(_12321_p.ptr());
		};
		if ((_1ed77e99e_arr(_11421__self) != nullptr)) {
			return _1ed77d074_mutable(_1ed77e99e_arr(_11421__self).get()._field_elem.ptr());
		};
		return (((_1ed77ec13_slc(_11421__self) != nullptr) || (_1ed77e262_ptr(_11421__self) != nullptr)) || (_1ed77deed_sptr(_11421__self) != nullptr));
	};
}



inline jule::Bool _1ed77d2d8_nil_compatible(_1ed77bbbb_TypeKind* _self_) {
	{
		_1ed77bbbb_TypeKind* _13821__self = (&((*_self_)));;
		jule::Ptr<_1ed781693_Prim> _14017_prim = _1ed77dc89_prim(_13821__self);;
		if (((_14017_prim != nullptr) && _1ed7848b6_is_any(_14017_prim.ptr()))) {
			return true;
		};
		return (((((((_1ed77ca9b_is_nil(_13821__self) || (_1ed77ee77_fnc(_13821__self) != nullptr)) || (_1ed77deed_sptr(_13821__self) != nullptr)) || (_1ed77e262_ptr(_13821__self) != nullptr)) || (_1ed780450_trt(_13821__self) != nullptr)) || (_1ed77ec13_slc(_13821__self) != nullptr)) || (_1ed7806b4_map(_13821__self) != nullptr)) || (_1ed77e73a_tenm(_13821__self) != nullptr));
	};
}



inline jule::Bool _1ed77d54c_performs_rc(_1ed77bbbb_TypeKind* _self_) {
	{
		_1ed77bbbb_TypeKind* _15921__self = (&((*_self_)));;
		return (((_1ed77deed_sptr(_15921__self) != nullptr) || (_1ed77ec13_slc(_15921__self) != nullptr)) || (_1ed780450_trt(_15921__self) != nullptr));
	};
}



inline jule::Bool _1ed77d7b1_supports_cloning(_1ed77bbbb_TypeKind* _self_) {
	{
		_1ed77bbbb_TypeKind* _16721__self = (&((*_self_)));;
		{
			
			if ((_1ed77dc89_prim(_16721__self) != nullptr)) {
				_case_begin_1ad59412d:;
				{
					return (!(_1ed7848b6_is_any(_1ed77dc89_prim(_16721__self).ptr())));
				}
			}
			else if ((_1ed77e4c6_enm(_16721__self) != nullptr)) {
				_case_begin_1ad594194:;
				{
					return true;
				}
			}
			else if ((_1ed77ee77_fnc(_16721__self) != nullptr)) {
				_case_begin_1ad593d97:;
				{
					return true;
				}
			}
			else if ((_1ed77e262_ptr(_16721__self) != nullptr)) {
				_case_begin_1ad593e0d:;
				{
					return true;
				}
			}
			else if ((_1ed77ec13_slc(_16721__self) != nullptr)) {
				_case_begin_1ad593e74:;
				{
					return _1ed77d7b1_supports_cloning(_1ed77ec13_slc(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ed7806b4_map(_16721__self) != nullptr)) {
				_case_begin_1ad593979:;
				{
					jule::Ptr<_1ed786bb5_Map> _18021_m = _1ed7806b4_map(_16721__self);;
					return (_1ed77d7b1_supports_cloning(_18021_m.get()._field_key.ptr()) && _1ed77d7b1_supports_cloning(_18021_m.get()._field_val.ptr()));
				}
			}
			else if ((_1ed77e99e_arr(_16721__self) != nullptr)) {
				_case_begin_1ad5939e0:;
				{
					return _1ed77d7b1_supports_cloning(_1ed77e99e_arr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ed77deed_sptr(_16721__self) != nullptr)) {
				_case_begin_1ad593a56:;
				{
					return _1ed77d7b1_supports_cloning(_1ed77deed_sptr(_16721__self).get()._field_elem.ptr());
				}
			}
			else if ((_1ed7801db_strct(_16721__self) != nullptr)) {
				_case_begin_1ad593acd:;
				{
					jule::Ptr<_1e010a05d_StructIns> _18725_s = _1ed7801db_strct(_16721__self);;
					return (((_18725_s.get()._field_decl != nullptr) && (!(_18725_s.get()._field_decl.get()._field_cpp_linked))) && _1e010a976_is_derives(_18725_s.get()._field_decl.ptr(), jule::Str("Clone", 5)));
				}
			}
			else {
				_case_begin_1ad593913:;
				{
					return false;
				}
			}
			_match_end_1ad59388b:;
		};
	};
}



inline jule::Bool _1ed77da25_variadicable(_1ed77bbbb_TypeKind* _self_) {
	{
		_1ed77bbbb_TypeKind* _20021__self = (&((*_self_)));;
		return (_1ed77ec13_slc(_20021__self) != nullptr);
	};
}



inline jule::Ptr<_1ed781693_Prim> _1ed77dc89_prim(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed781693_Prim>>()) {
			_case_begin_1ad58950d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed781693_Prim>();
			}
		}
		else {
			_case_begin_1ad59ad8d:;
			{
				return nullptr;
			}
		}
		_match_end_1ad599e8b:;
	};
}



inline jule::Ptr<_1ed784ba2_Sptr> _1ed77deed_sptr(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed784ba2_Sptr>>()) {
			_case_begin_1ad59bc4b:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed784ba2_Sptr>();
			}
		}
		else {
			_case_begin_1ad59b652:;
			{
				return nullptr;
			}
		}
		_match_end_1ad59b5ec:;
	};
}



inline jule::Ptr<_1ed788216_Ptr> _1ed77e262_ptr(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed788216_Ptr>>()) {
			_case_begin_1ad59c301:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed788216_Ptr>();
			}
		}
		else {
			_case_begin_1ad59c8b7:;
			{
				return nullptr;
			}
		}
		_match_end_1ad59c862:;
	};
}



inline jule::Ptr<_1e057b8b9_Enum> _1ed77e4c6_enm(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e057b8b9_Enum>>()) {
			_case_begin_1ad59c92d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e057b8b9_Enum>();
			}
		}
		else {
			_case_begin_1ad59d599:;
			{
				return nullptr;
			}
		}
		_match_end_1ad59caa4:;
	};
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1ed77e73a_tenm(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e04c643a_TypeEnum>>()) {
			_case_begin_1ad59dc09:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e04c643a_TypeEnum>();
			}
		}
		else {
			_case_begin_1ad59e2d1:;
			{
				return nullptr;
			}
		}
		_match_end_1ad59e27b:;
	};
}



inline jule::Ptr<_1ed7877a9_Arr> _1ed77e99e_arr(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed7877a9_Arr>>()) {
			_case_begin_1ad59e91e:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed7877a9_Arr>();
			}
		}
		else {
			_case_begin_1ad59eed5:;
			{
				return nullptr;
			}
		}
		_match_end_1ad59ee80:;
	};
}



inline jule::Ptr<_1ed78560e_Slc> _1ed77ec13_slc(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed78560e_Slc>>()) {
			_case_begin_1ad5a0634:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed78560e_Slc>();
			}
		}
		else {
			_case_begin_1ad5a0bea:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a0b95:;
	};
}



inline jule::Ptr<_1e01457c4_FnIns> _1ed77ee77_fnc(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
			_case_begin_1ad5a1349:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e01457c4_FnIns>();
			}
		}
		else {
			_case_begin_1ad5a1910:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a18aa:;
	};
}



inline jule::Ptr<_1e010a05d_StructIns> _1ed7801db_strct(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e010a05d_StructIns>>()) {
			_case_begin_1ad5a1976:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e010a05d_StructIns>();
			}
		}
		else {
			_case_begin_1ad5a25e2:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a1aec:;
	};
}



inline jule::Ptr<_1e0567d06_Trait> _1ed780450_trt(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e0567d06_Trait>>()) {
			_case_begin_1ad5a2c52:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1e0567d06_Trait>();
			}
		}
		else {
			_case_begin_1ad5a3329:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a32c4:;
	};
}



inline jule::Ptr<_1ed786bb5_Map> _1ed7806b4_map(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed786bb5_Map>>()) {
			_case_begin_1ad5a3967:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed786bb5_Map>();
			}
		}
		else {
			_case_begin_1ad5a402d:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a3ec8:;
	};
}



inline jule::Ptr<_1ed786104_Tuple> _1ed780928_tup(_1ed77bbbb_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed786104_Tuple>>()) {
			_case_begin_1ad5a467c:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ed786104_Tuple>();
			}
		}
		else {
			_case_begin_1ad5a4c43:;
			{
				return nullptr;
			}
		}
		_match_end_1ad5a4bdd:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ed77bbbb_TypeKind _Src) {
	_Stream << _1ed77c073_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1ed7811cb_checked(_1ed780cd0_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1ed7813a7_remove_kind(_1ed780cd0_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed780cd0_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ed781a06_to_str(_1ed781693_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1ed781d14_equals(jule::Ptr<_1ed781693_Prim> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _35326_other) {
	jule::Ptr<_1ed781693_Prim> _35413_prim = _1ed77dc89_prim(_35326_other.ptr());;
	if ((_35413_prim == nullptr)) {
		return false;
	};
	return (_self_.get()._field_kind == _35413_prim.get()._field_kind);
}



inline jule::Bool _1ed782276_is_i8(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1ed7824da_is_i16(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1ed78274e_is_i32(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1ed7829b3_is_i64(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1ed782c27_is_u8(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1ed782e8b_is_u16(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1ed783200_is_u32(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1ed783464_is_u64(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1ed7836c8_is_f32(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1ed78393c_is_f64(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1ed783ba1_is_int(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1ed783e15_is_uint(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1ed784179_is_uintptr(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1ed7843dd_is_bool(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1ed784652_is_str(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1ed7848b6_is_any(_1ed781693_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1ed781693_Prim _Src) {
	_Stream << _1ed781a06_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed785015_to_str(_1ed784ba2_Sptr* _self_) {
	return (jule::Str("&", 1) + _1ed77c073_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1ed785323_equals(jule::Ptr<_1ed784ba2_Sptr> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _42226_other) {
	jule::Ptr<_1ed784ba2_Sptr> _42313_sptr = _1ed77deed_sptr(_42226_other.ptr());;
	if ((_42313_sptr == nullptr)) {
		return false;
	};
	return _1ed77c381_equals(_self_.get()._field_elem, _42313_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ed784ba2_Sptr _Src) {
	_Stream << _1ed785015_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed785a82_to_str(_1ed78560e_Slc* _self_) {
	return (jule::Str("[]", 2) + _1ed77c073_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1ed785d90_equals(jule::Ptr<_1ed78560e_Slc> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _44126_other) {
	jule::Ptr<_1ed78560e_Slc> _44213_slc = _1ed77ec13_slc(_44126_other.ptr());;
	if ((_44213_slc == nullptr)) {
		return false;
	};
	return _1ed77c381_equals(_self_.get()._field_elem, _44213_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1ed78560e_Slc _Src) {
	_Stream << _1ed785a82_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed786500_to_str(_1ed786104_Tuple* _self_) {
	jule::Str _45817_s = jule::Str("(", 1);;
	_45817_s+=_1ed77c073_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ad5b3306:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77bbbb_TypeKind> &_46016_t = *it;
			{
				_45817_s+=jule::Str(",", 1);
				_45817_s+=_1ed77c073_to_str(_46016_t.ptr());
			}
			_iter_next_1ad5b3306:;
			++it;
			goto _iter_begin_1ad5b3306;
		}
		_iter_end_1ad5b3306:;
	};
	_45817_s+=jule::Str(")", 1);
	return _45817_s;
}



inline jule::Bool _1ed78680d_equals(jule::Ptr<_1ed786104_Tuple> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _46926_other) {
	jule::Ptr<_1ed786104_Tuple> _47013_tup = _1ed780928_tup(_46926_other.ptr());;
	if ((_47013_tup == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_types.len() != _47013_tup.get()._field_types.len())) {
		return false;
	};
	jule::I32 _47917_i = 0LL;;
	for (; (_47917_i < _self_.get()._field_types.len()); (_47917_i)++) {
		{
			if ((!(_1ed77c381_equals(_self_.get()._field_types[_47917_i], _47013_tup.get()._field_types[_47917_i])))) {
				return false;
			};
		}
	_iter_next_1ad5b5a67:;
	}
	_iter_end_1ad5b5a67:;;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed786104_Tuple _Src) {
	_Stream << _1ed786500_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed787028_to_str(_1ed786bb5_Map* _self_) {
	jule::Str _49917_s = jule::Str("[", 1);;
	_49917_s+=_1ed77c073_to_str((*_self_)._field_key.ptr());
	_49917_s+=jule::Str(":", 1);
	_49917_s+=_1ed77c073_to_str((*_self_)._field_val.ptr());
	_49917_s+=jule::Str("]", 1);
	return _49917_s;
}



inline jule::Bool _1ed787336_equals(jule::Ptr<_1ed786bb5_Map> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _50826_other) {
	jule::Ptr<_1ed786bb5_Map> _50913_map = _1ed7806b4_map(_50826_other.ptr());;
	if ((_50913_map == nullptr)) {
		return false;
	};
	return (_1ed77c381_equals(_self_.get()._field_key, _50913_map.get()._field_key) && _1ed77c381_equals(_self_.get()._field_val, _50913_map.get()._field_val));
}







std::ostream &operator<<(std::ostream &_Stream, _1ed786bb5_Map _Src) {
	_Stream << _1ed787028_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed787b1c_to_str(_1ed7877a9_Arr* _self_) {
	jule::Str _52717_s = jule::Str("[", 1);;
	_52717_s+=_1e0be7188_itoa((*_self_)._field_n);
	_52717_s+=jule::Str("]", 1);
	_52717_s+=_1ed77c073_to_str((*_self_)._field_elem.ptr());
	return _52717_s;
}



inline jule::Bool _1ed787e2a_equals(jule::Ptr<_1ed7877a9_Arr> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _53526_other) {
	jule::Ptr<_1ed7877a9_Arr> _53613_arr = _1ed77e99e_arr(_53526_other.ptr());;
	if ((_53613_arr == nullptr)) {
		return false;
	};
	return ((_self_.get()._field_n == _53613_arr.get()._field_n) && _1ed77c381_equals(_self_.get()._field_elem, _53613_arr.get()._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, _1ed7877a9_Arr _Src) {
	_Stream << _1ed787b1c_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1ed788579_to_str(_1ed788216_Ptr* _self_) {
	if (_1ed788bd9_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	};
	return (jule::Str("*", 1) + _1ed77c073_to_str((*_self_)._field_elem.ptr()));
}



inline jule::Bool _1ed788887_equals(jule::Ptr<_1ed788216_Ptr> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _55926_other) {
	jule::Ptr<_1ed788216_Ptr> _56013_ptr = _1ed77e262_ptr(_55926_other.ptr());;
	if ((_56013_ptr == nullptr)) {
		return false;
	};
	return _1ed77c381_equals(_self_.get()._field_elem, _56013_ptr.get()._field_elem);
}



inline jule::Bool _1ed788bd9_is_unsafe(_1ed788216_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ed788216_Ptr _Src) {
	_Stream << _1ed788579_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed78915c_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ed78a5ae_push_err(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1dd9941e0_Token> _63727_token, jule::Str _63742_fmt, jule::Slice<jule::Any> _63755_args) {
	_1e0e1e107_push_err((*_self_)._field_s.ptr(), _63727_token,_63742_fmt,jule::Any(_63755_args));
}



inline void _1ed78a78a_allow_builtin(_1ed789da5_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1ed78a966_disallow_builtin(_1ed789da5_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1ed781693_Prim> _1ed78ac74_build_prim(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _64930_decl) {
	if ((!(_1ed794d27_is_prim(_64930_decl.get()._field_ident)))) {
		_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_64930_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _64930_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_64930_decl.get()._field_ident)}));
		return nullptr;
	};
	return _1ed7947d8_build_prim_type(_64930_decl.get()._field_ident);
}



inline void _1ad5ca098_push_reference(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e010a05d_StructIns>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1ad2d1ab3_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1e0148cc2_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}

inline void _1ad5cce14_push_reference(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0567d06_Trait>& _66341_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1ad5ce9a4_exist((*_self_)._field_refers.ptr(), _66341_t)) {
		return;;
	};
	_1e0148cc2_push((*_self_)._field_refers.ptr(), jule::Any(_66341_t));
}



inline void _1ed78b26e_push_reference_by_kind(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _67346_k) {
	{
		
		if ((_1ed7801db_strct(_67346_k.ptr()) != nullptr)) {
			_case_begin_1ad5c8c9a:;
			{
				jule::Ptr<_1e010a05d_StructIns> _67621_t = _1ed7801db_strct(_67346_k.ptr());;
				_1ad5ca098_push_reference(&(*_self_), _67621_t);
			}
		}
		else if ((_1ed780450_trt(_67346_k.ptr()) != nullptr)) {
			_case_begin_1ad5c8d22:;
			{
				jule::Ptr<_1e0567d06_Trait> _67921_t = _1ed780450_trt(_67346_k.ptr());;
				_1ad5cce14_push_reference(&(*_self_), _67921_t);
			}
		}
		_match_end_1ad5c8b8a:;
	};
}



inline void _1ed78b637_push_cycle_error(_1ed789da5_TypeChecker* _self_, jule::Any _68431_def1, jule::Any _68442_def2, jule::Str& _68458_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _68713_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _68729_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _68729_def };
			
			if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
				_case_begin_1ad5d25bc:;
				{
					return _68729_def.operator jule::Ptr<_1ed77ae84_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
				_case_begin_1ad5d2c71:;
				{
					return _68729_def.operator jule::Ptr<_1e010261b_Struct>().get()._field_ident;
				}
			}
			else {
				_case_begin_1ad5d2743:;
				{
					return jule::Str();
				}
			}
			_match_end_1ad5d26dd:;
		};
	});;
	jule::Str _69813_def1_ident = _68713_get_ident(_68431_def1);;
	jule::Str _69913_def2_ident = _68713_get_ident(_68442_def2);;
	jule::Str _70013_refers_to = _1dd65ae40_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_69813_def1_ident),jule::Any(_69913_def2_ident)}));;
	(_68458_message).buffer.insert(0, (((_1dd569b73_repeat(jule::Str(" ", 1),4LL) + _70013_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ed78b9de_check_cross_cycle(_1ed789da5_TypeChecker* _self_, jule::Any _70432_decl, jule::Str& _70448_message) {
	{
		auto &_match_expr{ _70432_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
			_case_begin_1ad5d5339:;
			{
				jule::Ptr<_1ed77ae84_TypeAlias> _70717_ta = _70432_decl.operator jule::Ptr<_1ed77ae84_TypeAlias>();;
				{
					auto &expr = _70717_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1ad5d6109:;
					if (it != expr.end()) {
						jule::Any &_70820_d = *it;
						{
							{
								
								if ((_70820_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1ad5d6912:;
									{
										_1ed78b637_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1ed78b9de_check_cross_cycle(&(*_self_), jule::Any(_70820_d),_70448_message)))) {
									_case_begin_1ad5d6989:;
									{
										_1ed78b637_push_cycle_error(&(*_self_), jule::Any(_70717_ta),jule::Any(_70820_d),_70448_message);
										return false;
									}
								}
								_match_end_1ad5d6802:;
							};
						}
						_iter_next_1ad5d6109:;
						++it;
						goto _iter_begin_1ad5d6109;
					}
					_iter_end_1ad5d6109:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1ad5d53a0:;
			{
				jule::Ptr<_1e010261b_Struct> _71917_s = _70432_decl.operator jule::Ptr<_1e010261b_Struct>();;
				{
					auto &expr = _71917_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1ad5d6549:;
					if (it != expr.end()) {
						jule::Ptr<_1e010261b_Struct> &_72020_d = *it;
						{
							{
								
								if (((*_self_)._field_referencer.get()._field_owner == _72020_d)) {
									_case_begin_1ad5d9184:;
									{
										_1ed78b637_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								else if ((!(_1ed78b9de_check_cross_cycle(&(*_self_), jule::Any(_72020_d),_70448_message)))) {
									_case_begin_1ad5d920b:;
									{
										_1ed78b637_push_cycle_error(&(*_self_), jule::Any(_71917_s),jule::Any(_72020_d),_70448_message);
										return false;
									}
								}
								_match_end_1ad5d9074:;
							};
						}
						_iter_next_1ad5d6549:;
						++it;
						goto _iter_begin_1ad5d6549;
					}
					_iter_end_1ad5d6549:;
				};
			}
		}
		_match_end_1ad5d52d4:;
	};
	return true;
}



inline jule::Bool _1ed78bd96_check_illegal_cycles(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _73840_ident, jule::Any _73867_decl) {
	jule::Bool _73880_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_73880_ok = true;
		return _73880_ok;
	};
	{
		auto &_match_expr{ _73867_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1ad5db362:;
			{
				if (((*_self_)._field_not_plain || _73867_decl.operator jule::Ptr<_1e010261b_Struct>().get()._field_cpp_linked)) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
			_case_begin_1ad5d8cee:;
			{
				if (_73867_decl.operator jule::Ptr<_1ed77ae84_TypeAlias>().get()._field_cpp_linked) {
					_73880_ok = true;
					return _73880_ok;
				};
			}
		}
		_match_end_1ad5d8b56:;
	};
	if ((_73867_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1ed78a5ae_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_73880_ok = false;
		return _73880_ok;
	};
	jule::Str _76117_message = jule::Str();;
	if ((!(_1ed78b9de_check_cross_cycle(&(*_self_), jule::Any(_73867_decl),_76117_message)))) {
		jule::Str _76421_err_msg = _76117_message;;
		_76117_message=jule::Str();
		_1ed78b637_push_cycle_error(&(*_self_), jule::Any((*_self_)._field_referencer.get()._field_owner),jule::Any(_73867_decl),_76117_message);
		_76421_err_msg=(_76421_err_msg + _76117_message);
		_1ed78a5ae_push_err(&(*_self_), _73840_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_76421_err_msg)}));
		_73880_ok = false;
		return _73880_ok;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ed77ae84_TypeAlias>>()) {
			_case_begin_1ad5e0a1a:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({jule::Any(_73867_decl)}));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1ad5e0a92:;
			{
				{
					auto &_match_expr{ _73867_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
						_case_begin_1ad5e12bd:;
						{
							jule::Ptr<_1e010261b_Struct> _78025_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e010261b_Struct>();;
							_78025_s.get()._field_depends = jule::alloc_for_append(_78025_s.get()._field_depends,1);_78025_s.get()._field_depends.__push(_73867_decl.operator jule::Ptr<_1e010261b_Struct>());;
						}
					}
					_match_end_1ad5e1268:;
				};
			}
		}
		_match_end_1ad5e09a4:;
	};
	_73880_ok = true;
	return _73880_ok;
}



inline jule::Trait<_1ed77b78c_Kind> _1ed78c24d_from_type_alias(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _78835_decl, jule::Ptr<_1ed77ae84_TypeAlias>& _78862_ta) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _78862_ta.get()._field_public,_78862_ta.get()._field_token)))) {
		_1ed78a5ae_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	_78862_ta.get()._field_used=true;
	if ((_78835_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
		return nullptr;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ad5e5e0a:;
			if (it != expr.end()) {
				jule::Ptr<_1ed77ae84_TypeAlias> _80520_bg = *it;
				{
					if (((_80520_bg == _78862_ta) || ((_78862_ta.get()._field_kind.get()._field_kind != nullptr) && _1ed77c381_equals(_78862_ta.get()._field_kind.get()._field_kind, _80520_bg.get()._field_kind.get()._field_kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1ad5e5e0a;
					};
				}
				_iter_next_1ad5e5e0a:;
				++it;
				goto _iter_begin_1ad5e5e0a;
			}
			_iter_end_1ad5e5e0a:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1ad5e7bdc:;
			if (it != expr.end()) {
				jule::Ptr<_1ed77ae84_TypeAlias> _81620_bg = *it;
				{
					if ((_81620_bg == _78862_ta)) {
						_1ed78a5ae_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
						return nullptr;
					};
					{
						auto &expr = _78862_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1ad5e846d:;
						if (it != expr.end()) {
							jule::Ptr<_1ed77ae84_TypeAlias> _82124_dg = *it;
							{
								if ((_81620_bg == _82124_dg)) {
									_1ed78a5ae_push_err(&(*_self_), _78835_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_78835_decl.get()._field_ident)}));
									return nullptr;
								};
							}
							_iter_next_1ad5e846d:;
							++it;
							goto _iter_begin_1ad5e846d;
						}
						_iter_end_1ad5e846d:;
					};
				}
				_iter_next_1ad5e7bdc:;
				++it;
				goto _iter_begin_1ad5e7bdc;
			}
			_iter_end_1ad5e7bdc:;
		};
	};
	jule::Bool _83017_ok = _1ed78bd96_check_illegal_cycles(&(*_self_), _78835_decl,jule::Any(_78862_ta));;
	if ((!(_83017_ok))) {
		return nullptr;
	};
	_83017_ok=_1e0e265b5_check_type_alias_decl_kind((*_self_)._field_s, _78862_ta,(*_self_)._field_lookup);
	if ((!(_83017_ok))) {
		return nullptr;
	};
	if ((_78862_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr))) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_78862_ta);;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _84717_tk = jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_generic=_78862_ta.get()._field_generic, ._field_kind=_78862_ta.get()._field_kind.get()._field_kind.get()._field_kind});;
	_1ed78b26e_push_reference_by_kind(&(*_self_), _84717_tk);
	if (_78862_ta.get()._field_cpp_linked) {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_ident;
	} else {
		_84717_tk.get()._field_cpp_ident=_78862_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident;
	};
	return jule::Trait<_1ed77b78c_Kind>(_84717_tk, 5);
}



inline jule::Ptr<_1e057b8b9_Enum> _1ed78c605_from_enum(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _86029_decl, jule::Ptr<_1e057b8b9_Enum>& _86056_e) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _86056_e.get()._field_public,_86056_e.get()._field_token)))) {
		_1ed78a5ae_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_86029_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _86029_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_86029_decl.get()._field_ident)}));
		return nullptr;
	};
	return _86056_e;
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1ed78c9ac_from_type_enum(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _87234_decl, jule::Ptr<_1e04c643a_TypeEnum>& _87261_e) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _87261_e.get()._field_public,_87261_e.get()._field_token)))) {
		_1ed78a5ae_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_87234_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _87234_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_87234_decl.get()._field_ident)}));
		return nullptr;
	};
	return _87261_e;
}



inline jule::Ptr<_1e0567d06_Trait> _1ed78cd64_from_trait(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _88430_decl, jule::Ptr<_1e0567d06_Trait>& _88457_t) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _88457_t.get()._field_public,_88457_t.get()._field_token)))) {
		_1ed78a5ae_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((_88430_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _88430_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_88430_decl.get()._field_ident)}));
		return nullptr;
	};
	_1ad5cce14_push_reference(&(*_self_), _88457_t);
	return _88457_t;
}



inline jule::Bool _1ed78d21b_check_struct_ins(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e010a05d_StructIns>& _89740_ins, jule::Ptr<_1dd9941e0_Token>& _89758_error_token) {
	jule::Bool _89781_ok = jule::Bool();
	if (_89740_ins.get()._field_checked) {
		_89781_ok = true;
		return _89781_ok;
	};
	_89740_ins.get()._field_checked=true;
	if ((((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == _89740_ins.get()._field_decl))) {
		_89781_ok = true;
		return _89781_ok;
	};
	if ((!(_1e0e307bc_precheck_struct_ins((*_self_)._field_s, _89740_ins)))) {
		_89781_ok = false;
		return _89781_ok;
	};
	if ((_89740_ins.get()._field_generics.len() > 0LL)) {
		_1e0e3123a_check_struct_ins_operators((*_self_)._field_s, _89740_ins);
		_1e0e30a42_check_struct_ins((*_self_)._field_s, _89740_ins);
	};
	_89781_ok = true;
	return _89781_ok;
}



inline void _1ed78d4b3_append_used_struct_reference(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e010261b_Struct>& _91852_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1ad60a23d:;
			{
				jule::Ptr<_1e010261b_Struct> _92521_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1e010261b_Struct>();;
				if ((!(_1e010ca00_is_uses(_92521_ref_s.ptr(), _91852_s)))) {
					_92521_ref_s.get()._field_uses = jule::alloc_for_append(_92521_ref_s.get()._field_uses,1);_92521_ref_s.get()._field_uses.__push(_91852_s);;
				};
			}
		}
		_match_end_1ad60a1d8:;
	};
}



inline jule::Ptr<_1e010a05d_StructIns> _1ed78d87b_build_struct_instance(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _93245_decl, jule::Ptr<_1e010261b_Struct>& _93272_s) {
	jule::Ptr<_1ed78915c_Referencer> _93417_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>> _93617_banned_generics = (*_self_)._field_banned_generics;;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1e0debe4d_ScopeChecker>>()) {
				_case_begin_1ad60ccbd:;
				{
					jule::Ptr<_1e0debe4d_ScopeChecker> _94325_sc = (*_self_)._field_lookup.operator jule::Ptr<_1e0debe4d_ScopeChecker>();;
					jule::Ptr<_1e0debe4d_ScopeChecker> _94425_hard = _1e0dee77a_get_hard_root(_94325_sc);;
					if (((_94425_hard.get()._field_owner.get()._field_owner == nullptr) || (_94425_hard.get()._field_owner.get()._field_owner.get()._field_decl != _93272_s))) {
						goto _match_end_1ad60cc68;
					};
					jule::I32 _94821_n = (_94425_hard.get()._field_owner.get()._field_generics.len() + _94425_hard.get()._field_owner.get()._field_owner.get()._field_generics.len());;
					(*_self_)._field_banned_generics=_94425_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_94821_n);
				}
			}
			_match_end_1ad60cc68:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Ptr<_1e010a05d_StructIns> _95817_ins = _1e00eb5c1_instance(_93272_s);;
	_95817_ins.get()._field_generics=jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::alloc(0LL,_93245_decl.get()._field_generics.len());
	{
		auto &expr = _93245_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ad61108a:;
		if (it != expr.end()) {
			jule::Ptr<_1e01253db_TypeDecl> _96021_g = *it;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _96121_kind = _1ed791d13_build(&(*_self_), _96021_g.get()._field_kind);;
				if ((_96121_kind == nullptr)) {
					return nullptr;
				};
				_95817_ins.get()._field_generics = jule::alloc_for_append(_95817_ins.get()._field_generics,1);_95817_ins.get()._field_generics.__push(_96121_kind);;
			}
			_iter_next_1ad61108a:;
			++it;
			goto _iter_begin_1ad61108a;
		}
		_iter_end_1ad61108a:;
	};
	(*_self_)._field_banned_generics=_93617_banned_generics;
	(*_self_)._field_referencer=_93417_referencer;
	return _95817_ins;
}



inline jule::Ptr<_1e010a05d_StructIns> _1ed78dc33_from_struct(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _97535_decl, jule::Ptr<_1e010261b_Struct>& _97562_s) {
	if ((!(_1e0e1e7cd_is_accessible_define((*_self_)._field_s.ptr(), _97562_s.get()._field_public,_97562_s.get()._field_token)))) {
		_1ed78a5ae_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_97535_decl.get()._field_ident)}));
		return nullptr;
	};
	if ((*_self_)._field_selection) {
		if ((_97535_decl.get()._field_generics.len() > 0LL)) {
			_1ed78a5ae_push_err(&(*_self_), _97535_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		};
		return jule::new_ptr<_1e010a05d_StructIns>(_1e010a05d_StructIns{._field_decl=_97562_s, });
	};
	jule::Bool _99317_ok = ((*_self_)._field_not_plain || _1ed78bd96_check_illegal_cycles(&(*_self_), _97535_decl,jule::Any(_97562_s)));;
	if ((!(_99317_ok))) {
		return nullptr;
	};
	_1ed78d4b3_append_used_struct_reference(&(*_self_), _97562_s);
	jule::Ptr<_1e010a05d_StructIns> _99917_ins = _1ed78d87b_build_struct_instance(&(*_self_), _97535_decl,_97562_s);;
	if ((_99917_ins == nullptr)) {
		return nullptr;
	};
	_99317_ok=_1e0e2049e_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I32>(_99917_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I32>(_99917_ins.get()._field_generics.len()),_97535_decl.get()._field_token);
	if ((!(_99317_ok))) {
		return nullptr;
	};
	jule::Ptr<_1e010a05d_StructIns> _100917_exist_instance = _1e00edbde_append_instance(_97562_s.ptr(), _99917_ins);;
	if ((_100917_exist_instance != nullptr)) {
		_1ad5ca098_push_reference(&(*_self_), _100917_exist_instance);
		return _100917_exist_instance;
	};
	if ((!(_1ed78d21b_check_struct_ins(&(*_self_), _99917_ins,_97535_decl.get()._field_token)))) {
		return nullptr;
	};
	_1ad5ca098_push_reference(&(*_self_), _99917_ins);
	return _99917_ins;
}



inline jule::Trait<_1ed77b78c_Kind> _1ed78e041_get_def(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl>& _103031_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1ad61aca9:;
		if (it != expr.end()) {
			jule::Ptr<_1e013165b_GenericDecl> _103116_g = *it;
			{
				if ((_103116_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					return jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(_103116_g.get()._field_ident), 6);
				};
			}
			_iter_next_1ad61aca9:;
			++it;
			goto _iter_begin_1ad61aca9;
		}
		_iter_end_1ad61aca9:;
	};
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1ad61bd10:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77ae84_TypeAlias> _103721_g = *it;
			{
				if ((_103721_g.get()._field_ident == _103031_decl.get()._field_ident)) {
					jule::Ptr<_1e010a05d_StructIns> _103925_st = _1ed7801db_strct(_103721_g.get()._field_kind.get()._field_kind.ptr());;
					if ((_103925_st != nullptr)) {
						jule::Bool _104125_ok = _1ed78bd96_check_illegal_cycles(&(*_self_), _103031_decl,jule::Any(_103925_st.get()._field_decl));;
						if ((!(_104125_ok))) {
							return nullptr;
						};
					};
					return _103721_g.get()._field_kind.get()._field_kind.get()._field_kind;
				};
			}
			_iter_next_1ad61bd10:;
			++it;
			goto _iter_begin_1ad61bd10;
		}
		_iter_end_1ad61bd10:;
	};
	if ((!(_103031_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1e057b8b9_Enum> _105121_e = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed79708d_find_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105121_e != nullptr)) {
			return jule::Trait<_1ed77b78c_Kind>(_1ed78c605_from_enum(&(*_self_), _103031_decl,_105121_e), 3);
		};
		jule::Ptr<_1e04c643a_TypeEnum> _105621_te = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed79739b_find_type_enum((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if ((_105621_te != nullptr)) {
			return jule::Trait<_1ed77b78c_Kind>(_1ed78c9ac_from_type_enum(&(*_self_), _103031_decl,_105621_te), 4);
		};
		jule::Ptr<_1e0567d06_Trait> _106121_t = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed796c80_find_trait((*_self_)._field_lookup, _103031_decl.get()._field_ident);;
		if (((_106121_t == nullptr) && (!((*_self_)._field_dis_builtin)))) {
			_106121_t=_1ed7bd35b_find_builtin_trait(_103031_decl.get()._field_ident);
		};
		if ((_106121_t != nullptr)) {
			return jule::Trait<_1ed77b78c_Kind>(_1ed78cd64_from_trait(&(*_self_), _103031_decl,_106121_t), 2);
		};
	} else if ((*_self_)._field_selection) {
		_1ed78a5ae_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e010261b_Struct> _107317_s = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed7965ba_find_struct((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if ((_107317_s != nullptr)) {
		return jule::Trait<_1ed77b78c_Kind>(_1ed78dc33_from_struct(&(*_self_), _103031_decl,_107317_s), 0);
	};
	jule::Ptr<_1ed77ae84_TypeAlias> _107817_ta = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed796213_find_type_alias((*_self_)._field_lookup, _103031_decl.get()._field_ident,_103031_decl.get()._field_cpp_linked);;
	if (((_107817_ta == nullptr) && (!((*_self_)._field_dis_builtin)))) {
		_107817_ta=_1ed7a4771_find_builtin_type_alias(_103031_decl.get()._field_ident);
	};
	if ((_107817_ta != nullptr)) {
		return _1ed78c24d_from_type_alias(&(*_self_), _103031_decl,_107817_ta);
	};
	_1ed78a5ae_push_err(&(*_self_), _103031_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_103031_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1ed77b78c_Kind> _1ed78e34e_build_ident(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012596e_IdentTypeDecl> _109034_decl) {
	{
		
		if (_1ed794d27_is_prim(_109034_decl.get()._field_ident)) {
			_case_begin_1ad6277bb:;
			{
				return jule::Trait<_1ed77b78c_Kind>(_1ed78ac74_build_prim(&(*_self_), _109034_decl), 6);
			}
		}
		else {
			_case_begin_1ad626c71:;
			{
				return _1ed78e041_get_def(&(*_self_), _109034_decl);
			}
		}
		_match_end_1ad626ba5:;
	};
}



inline jule::Trait<_1ed77b78c_Kind> _1ed78e65c_build_sub_ident(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e01260ac_SubIdentTypeDecl> _109938_decl) {
	jule::Trait<_1ed77b78c_Kind> _110017_ident = _1ed78e34e_build_ident(&(*_self_), _109938_decl.get()._field_idents[0LL]);;
	if ((_110017_ident == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _110017_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1e04c643a_TypeEnum>>()) {
			_case_begin_1ad629999:;
			{
				goto _match_end_1ad628ca6;
			}
		}
		else {
			_case_begin_1ad628d0b:;
			{
				_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad628ca6:;
	};
	jule::Ptr<_1e04c643a_TypeEnum> _111217_t = _110017_ident.operator jule::Ptr<_1e04c643a_TypeEnum>();;
	jule::Slice<jule::Ptr<_1e012596e_IdentTypeDecl>> _111317_idents = _109938_decl.get()._field_idents.slice(1LL);;
	{
		auto &expr = _111317_idents;
		auto it = expr.begin();
		_iter_begin_1ad62a2e6:;
		if (it != expr.end()) {
			jule::I32 _111413_i = it - expr.begin();
			jule::Ptr<_1e012596e_IdentTypeDecl> _111416_id = *it;
			{
				jule::Ptr<_1e05b1316_TypeEnumItem> _111521_item = _1e0507aed_find_item(_111217_t.ptr(), _111416_id.get()._field_ident);;
				if ((_111521_item == nullptr)) {
					_1ed78a5ae_push_err(&(*_self_), _111416_id.get()._field_token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_111217_t.get()._field_ident),jule::Any(_111416_id.get()._field_ident)}));
					return nullptr;
				};
				if (((_111317_idents.len() - _111413_i) == 1LL)) {
					_1ed78b26e_push_reference_by_kind(&(*_self_), _111521_item.get()._field_kind.get()._field_kind);
					return jule::Trait<_1ed77b78c_Kind>(_111521_item.get()._field_kind.get()._field_kind, 5);
				};
				_111217_t=_1ed77e73a_tenm(_111521_item.get()._field_kind.get()._field_kind.ptr());
				if ((_111217_t == nullptr)) {
					_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
			_iter_next_1ad62a2e6:;
			++it;
			_111413_i++;
			goto _iter_begin_1ad62a2e6;
		}
		_iter_end_1ad62a2e6:;
	};
	return nullptr;
}



inline jule::Ptr<_1ed784ba2_Sptr> _1ed78e96a_build_sptr_from_type(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _113444_elem) {
	{
		
		if ((_113444_elem == nullptr)) {
			_case_begin_1ad62ac86:;
			{
				return nullptr;
			}
		}
		else if ((_1ed7801db_strct(_113444_elem.ptr()) != nullptr)) {
			_case_begin_1ad62e493:;
			{
				jule::Ptr<_1e010a05d_StructIns> _114017_s = _1ed7801db_strct(_113444_elem.ptr());;
				if (((_114017_s.get()._field_decl != nullptr) && _114017_s.get()._field_decl.get()._field_cpp_linked)) {
					_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				};
			}
		}
		else if (((_1ed77e99e_arr(_113444_elem.ptr()) != nullptr) && _1ed77e99e_arr(_113444_elem.ptr()).get()._field_auto)) {
			_case_begin_1ad62e51a:;
			{
				_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad62ab65:;
	};
	return jule::new_ptr<_1ed784ba2_Sptr>(_1ed784ba2_Sptr{._field_elem=_113444_elem});
}



inline jule::Ptr<_1ed784ba2_Sptr> _1ed78ec78_build_sptr(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0126750_SptrTypeDecl> _115433_decl) {
	jule::Bool _115513_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_115513_not_plain;
	});;
	jule::Ptr<_1ed77bbbb_TypeKind> _115917_elem = _1ed792121_check_decl(&(*_self_), _115433_decl.get()._field_elem);;
	return _1ed78e96a_build_sptr_from_type(&(*_self_), _115917_elem);
}



inline jule::Ptr<_1ed788216_Ptr> _1ed790086_build_ptr_from_type(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1ed77bbbb_TypeKind>& _116343_elem) {
	{
		
		if ((_116343_elem == nullptr)) {
			_case_begin_1ad63450e:;
			{
				return nullptr;
			}
		}
		else if (((_1ed77e99e_arr(_116343_elem.ptr()) != nullptr) && _1ed77e99e_arr(_116343_elem.ptr()).get()._field_auto)) {
			_case_begin_1ad634586:;
			{
				_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1ed788216_Ptr>();
			}
		}
		_match_end_1ad6343ee:;
	};
	return jule::new_ptr<_1ed788216_Ptr>(_1ed788216_Ptr{._field_elem=_116343_elem});
}



inline jule::Ptr<_1ed788216_Ptr> _1ed790394_build_ptr(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e012719b_PtrTypeDecl> _117832_decl) {
	jule::Bool _117913_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_117913_not_plain;
	});;
	jule::Ptr<_1ed77bbbb_TypeKind> _118317_elem = nullptr;;
	if ((!(_1e0127575_is_unsafe(_117832_decl.ptr())))) {
		_118317_elem=_1ed792121_check_decl(&(*_self_), _117832_decl.get()._field_elem);
		return _1ed790086_build_ptr_from_type(&(*_self_), _118317_elem);
	};
	return jule::new_ptr<_1ed788216_Ptr>(_1ed788216_Ptr{._field_elem=_118317_elem});
}



inline jule::Ptr<_1ed78560e_Slc> _1ed7906a2_build_slc(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0126ac4_SlcTypeDecl> _119532_decl) {
	jule::Bool _119613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_119613_not_plain;
	});;
	jule::Ptr<_1ed77bbbb_TypeKind> _120017_elem = _1ed792121_check_decl(&(*_self_), _119532_decl.get()._field_elem);;
	{
		
		if ((_120017_elem == nullptr)) {
			_case_begin_1ad639613:;
			{
				return nullptr;
			}
		}
		else if (((_1ed77e99e_arr(_120017_elem.ptr()) != nullptr) && _1ed77e99e_arr(_120017_elem.ptr()).get()._field_auto)) {
			_case_begin_1ad63968a:;
			{
				_1ed78a5ae_push_err(&(*_self_), _119532_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad639558:;
	};
	return jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=_120017_elem});
}



inline jule::Ptr<_1ed7877a9_Arr> _1ed7909b0_build_arr(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e01278e9_ArrTypeDecl> _121632_decl) {
	jule::Bool _121713_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_121713_not_plain;
	});;
	jule::I32 _122117_n = 0LL;;
	if ((!(_1e0127c4b_auto_sized(_121632_decl.ptr())))) {
		jule::Ptr<_1e0e7ce9b_Data> _122421_size = _1e0e99cdc_eval_expr(_1e0e23e0e_eval((*_self_)._field_s, (*_self_)._field_lookup), _121632_decl.get()._field_size);;
		if ((_122421_size == nullptr)) {
			return nullptr;
		};
		if ((!(_1e0e7d85e_is_const(_122421_size.ptr())))) {
			_1ed78a5ae_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1ed77dc89_prim(_122421_size.get()._field_kind.ptr()) == nullptr) || (!(_1e0de99a6_is_int(_1ed77dc89_prim(_122421_size.get()._field_kind.ptr()).get()._field_kind))))) {
			_1ed78a5ae_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		};
		_122117_n=static_cast<jule::I32>(static_cast<jule::I32>(_1e0d50de6_as_i64(_122421_size.get()._field_constant.ptr())));
		if ((_122117_n < 0LL)) {
			_1ed78a5ae_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if (((_1e0ddd01b_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_122117_n) > _1e0de44b7_max(jule::Str("int", 3))))) {
			_1ed78a5ae_push_err(&(*_self_), _121632_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _124717_elem = _1ed792121_check_decl(&(*_self_), _121632_decl.get()._field_elem);;
	{
		
		if ((_124717_elem == nullptr)) {
			_case_begin_1ad643694:;
			{
				return nullptr;
			}
		}
		else if (((_1ed77e99e_arr(_124717_elem.ptr()) != nullptr) && _1ed77e99e_arr(_124717_elem.ptr()).get()._field_auto)) {
			_case_begin_1ad64370a:;
			{
				_1ed78a5ae_push_err(&(*_self_), _121632_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad6434a7:;
	};
	return jule::new_ptr<_1ed7877a9_Arr>(_1ed7877a9_Arr{._field_auto=_1e0127c4b_auto_sized(_121632_decl.ptr()), ._field_n=_122117_n, ._field_elem=_124717_elem});
}



inline jule::Ptr<_1ed786bb5_Map> _1ed790cbd_build_map(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0128103_MapTypeDecl> _126532_decl) {
	jule::Bool _126613_not_plain = (*_self_)._field_not_plain;;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_126613_not_plain;
	});;
	jule::Ptr<_1ed77bbbb_TypeKind> _127017_key = _1ed792121_check_decl(&(*_self_), _126532_decl.get()._field_key);;
	if ((_127017_key == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _127517_val = _1ed792121_check_decl(&(*_self_), _126532_decl.get()._field_val);;
	if ((_127517_val == nullptr)) {
		return nullptr;
	};
	if ((_1ed77e4c6_enm(_127517_val.ptr()) != nullptr)) {
		_1ed78a5ae_push_err(&(*_self_), _126532_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ed786bb5_Map>(_1ed786bb5_Map{._field_key=_127017_key, ._field_val=_127517_val});
}



inline jule::Ptr<_1ed786104_Tuple> _1ed7910cb_build_tuple(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0126db0_TupleTypeDecl> _128934_decl) {
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _129017_types = jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>>::alloc(0LL,_128934_decl.get()._field_types.len());;
	{
		auto &expr = _128934_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1ad648de7:;
		if (it != expr.end()) {
			jule::Ptr<_1e01253db_TypeDecl> _129121_t = *it;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _129221_kind = _1ed792121_check_decl(&(*_self_), _129121_t);;
				if ((_129221_kind == nullptr)) {
					return nullptr;
				};
				_129017_types = jule::alloc_for_append(_129017_types,1);_129017_types.__push(_129221_kind);;
			}
			_iter_next_1ad648de7:;
			++it;
			goto _iter_begin_1ad648de7;
		}
		_iter_end_1ad648de7:;
	};
	return jule::new_ptr<_1ed786104_Tuple>(_1ed786104_Tuple{._field_types=_129017_types});
}



inline jule::Bool _1ed7913d9_check_fn_types(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e01457c4_FnIns>& _130238_f) {
	jule::Bool _130251_ok = jule::Bool();
	{
		auto &expr = _130238_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1ad64abda:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> _130321_p = *it;
			{
				_130321_p.get()._field_kind=_1ed791d13_build(&(*_self_), _130321_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_130251_ok=(_130321_p.get()._field_kind != nullptr);
				if ((!(_130251_ok))) {
					_130251_ok = false;
					return _130251_ok;
				};
			}
			_iter_next_1ad64abda:;
			++it;
			goto _iter_begin_1ad64abda;
		}
		_iter_end_1ad64abda:;
	};
	if ((!(_1e0105894_is_void(_130238_f.get()._field_decl.ptr())))) {
		_130238_f.get()._field_result=_1ed791d13_build(&(*_self_), _130238_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_130251_ok = (_130238_f.get()._field_result != nullptr);
		return _130251_ok;
	};
	_130251_ok = true;
	return _130251_ok;
}



inline jule::Ptr<_1e01457c4_FnIns> _1ed7916e7_build_fn(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0134e01_FnDecl> _131931_decl) {
	if ((_131931_decl.get()._field_generics.len() > 0LL)) {
		_1ed78a5ae_push_err(&(*_self_), _131931_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0144581_Fn> _132517_f = _1e014b2ad_build_fn(_131931_decl);;
	jule::Ptr<_1e01457c4_FnIns> _132617_ins = _1e01080d3_instance_force(_132517_f);;
	_132617_ins.get()._field_anon=true;
	jule::Bool _132913_ok = _1ed7913d9_check_fn_types(&(*_self_), _132617_ins);;
	if ((!(_132913_ok))) {
		return nullptr;
	};
	return _132617_ins;
}



inline jule::Trait<_1ed77b78c_Kind> _1ed791a05_build_by_namespace(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e0126464_NamespaceTypeDecl> _133741_decl) {
	jule::Str _133813_path = _1ed794497_build_link_path_by_tokens(_133741_decl.get()._field_idents);;
	jule::Ptr<_1e0e13272_ImportInfo> _133917_imp = _1ed7974de_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ed7959a4_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1e0e13272_ImportInfo>)>([=](jule::Ptr<_1e0e13272_ImportInfo> _133953_imp) mutable -> jule::Bool {
		if (((_133741_decl.get()._field_idents.len() == 1LL) && (_133953_imp.get()._field_alias == _133813_path))) {
			return true;
		};
		return ((_133953_imp.get()._field_link_path == _133813_path) && _1e0e15e56_is_accessible_via_selection(_133953_imp.ptr()));
	}));;
	if (((_133917_imp == nullptr) || (!(_1e0e158b2_is_lookupable(_133917_imp.ptr(), jule::Str("self", 4)))))) {
		_1ed78a5ae_push_err(&(*_self_), _133741_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_133813_path)}));
		return nullptr;
	};
	_1ed78a966_disallow_builtin(&(*_self_));
	jule::Trait<_1ed7974de_Lookup> _135217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ed7974de_Lookup>(_133917_imp, 1);
	jule::Ptr<_1ed77bbbb_TypeKind> _135417_kind = _1ed792121_check_decl(&(*_self_), _133741_decl.get()._field_kind);;
	(*_self_)._field_lookup=_135217_lookup;
	_1ed78a78a_allow_builtin(&(*_self_));
	return jule::Trait<_1ed77b78c_Kind>(_135417_kind, 5);
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1ed791d13_build(_1ed789da5_TypeChecker* _self_, jule::Any& _136129_decl_kind) {
	jule::Trait<_1ed77b78c_Kind> _136217_kind = nullptr;;
	{
		auto &_match_expr{ _136129_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012596e_IdentTypeDecl>>()) {
			_case_begin_1ad65691b:;
			{
				jule::Trait<_1ed77b78c_Kind> _136521_t = _1ed78e34e_build_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e012596e_IdentTypeDecl>());;
				if ((_136521_t != nullptr)) {
					_136217_kind=_136521_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01260ac_SubIdentTypeDecl>>()) {
			_case_begin_1ad6577da:;
			{
				jule::Trait<_1ed77b78c_Kind> _137021_t = _1ed78e65c_build_sub_ident(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e01260ac_SubIdentTypeDecl>());;
				if ((_137021_t != nullptr)) {
					_136217_kind=_137021_t;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126750_SptrTypeDecl>>()) {
			_case_begin_1ad657851:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed784ba2_Sptr> _137621_t = _1ed78ec78_build_sptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0126750_SptrTypeDecl>());;
				if ((_137621_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_137621_t, 7);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012719b_PtrTypeDecl>>()) {
			_case_begin_1ad6579c7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed788216_Ptr> _138221_t = _1ed790394_build_ptr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e012719b_PtrTypeDecl>());;
				if ((_138221_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_138221_t, 12);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126ac4_SlcTypeDecl>>()) {
			_case_begin_1ad657a3d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed78560e_Slc> _138821_t = _1ed7906a2_build_slc(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0126ac4_SlcTypeDecl>());;
				if ((_138821_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_138821_t, 8);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01278e9_ArrTypeDecl>>()) {
			_case_begin_1ad656dc2:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed7877a9_Arr> _139421_t = _1ed7909b0_build_arr(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e01278e9_ArrTypeDecl>());;
				if ((_139421_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_139421_t, 11);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0128103_MapTypeDecl>>()) {
			_case_begin_1ad656e49:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed786bb5_Map> _140021_t = _1ed790cbd_build_map(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0128103_MapTypeDecl>());;
				if ((_140021_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_140021_t, 10);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126db0_TupleTypeDecl>>()) {
			_case_begin_1ad656ec1:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ed786104_Tuple> _140621_t = _1ed7910cb_build_tuple(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0126db0_TupleTypeDecl>());;
				if ((_140621_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_140621_t, 9);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>()) {
			_case_begin_1ad657ab5:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1e01457c4_FnIns> _141221_t = _1ed7916e7_build_fn(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0134e01_FnDecl>());;
				if ((_141221_t != nullptr)) {
					_136217_kind=jule::Trait<_1ed77b78c_Kind>(_141221_t, 1);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126464_NamespaceTypeDecl>>()) {
			_case_begin_1ad657b2b:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1ed77b78c_Kind> _141821_t = _1ed791a05_build_by_namespace(&(*_self_), _136129_decl_kind.operator jule::Ptr<_1e0126464_NamespaceTypeDecl>());;
				if ((_141821_t != nullptr)) {
					_136217_kind=_141821_t;
				};
			}
		}
		else {
			_case_begin_1ad656c6d:;
			{
				_1ed78a5ae_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad656c18:;
	};
	if ((_136217_kind == nullptr)) {
		return nullptr;
	};
	{
		auto &_match_expr{ _136217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ed77bbbb_TypeKind>>()) {
			_case_begin_1ad664682:;
			{
				return _136217_kind.operator jule::Ptr<_1ed77bbbb_TypeKind>();
			}
		}
		else {
			_case_begin_1ad66273a:;
			{
				return jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=_136217_kind});
			}
		}
		_match_end_1ad6626d5:;
	};
}



inline jule::Ptr<_1ed77bbbb_TypeKind> _1ed792121_check_decl(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1e01253db_TypeDecl>& _143934_decl) {
	jule::Ptr<_1dd9941e0_Token> _144117_error_token = (*_self_)._field_error_token;;
	(*_self_)._field_error_token=_143934_decl.get()._field_token;
	jule::Ptr<_1ed77bbbb_TypeKind> _144417_kind = _1ed791d13_build(&(*_self_), _143934_decl.get()._field_kind);;
	(*_self_)._field_error_token=_144117_error_token;
	return _144417_kind;
}



inline void _1ed792396_check(_1ed789da5_TypeChecker* _self_, jule::Ptr<_1ed780cd0_TypeSymbol>& _145029_t) {
	if ((_145029_t.get()._field_decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1ed77bbbb_TypeKind> _145417_kind = _1ed792121_check_decl(&(*_self_), _145029_t.get()._field_decl);;
	if ((_145417_kind == nullptr)) {
		_1ed7813a7_remove_kind(_145029_t.ptr());
		return;;
	};
	_145029_t.get()._field_kind=_145417_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed789da5_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ed792a06___ident_type_decl(jule::Str& _146634_ident, jule::Ptr<_1e012596e_IdentTypeDecl> _146646_t) {
	if ((_146646_t.get()._field_ident == _146634_ident)) {
		return true;
	};
	{
		auto &expr = _146646_t.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ad667a3c:;
		if (it != expr.end()) {
			jule::Ptr<_1e01253db_TypeDecl> &_147016_g = *it;
			{
				if (static__1ed792d47_exist(_146634_ident,_147016_g.get()._field_kind)) {
					return true;
				};
			}
			_iter_next_1ad667a3c:;
			++it;
			goto _iter_begin_1ad667a3c;
		}
		_iter_end_1ad667a3c:;
	};
	return false;
}



inline jule::Bool static__1ed792d47_exist(jule::Str& _147822_ident, jule::Any& _147835_k) {
	{
		auto &_match_expr{ _147835_k };
		
		if (_match_expr.type_is<jule::Ptr<_1e012596e_IdentTypeDecl>>()) {
			_case_begin_1ad668455:;
			{
				return static__1ed792a06___ident_type_decl(_147822_ident,_147835_k.operator jule::Ptr<_1e012596e_IdentTypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01260ac_SubIdentTypeDecl>>()) {
			_case_begin_1ad66939b:;
			{
				jule::Ptr<_1e01260ac_SubIdentTypeDecl> _148317_sit = _147835_k.operator jule::Ptr<_1e01260ac_SubIdentTypeDecl>();;
				{
					auto &expr = _148317_sit.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1ad66aaa6:;
					if (it != expr.end()) {
						jule::Ptr<_1e012596e_IdentTypeDecl> &_148420_id = *it;
						{
							if (static__1ed792a06___ident_type_decl(_147822_ident,_148420_id)) {
								return true;
							};
						}
						_iter_next_1ad66aaa6:;
						++it;
						goto _iter_begin_1ad66aaa6;
					}
					_iter_end_1ad66aaa6:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126750_SptrTypeDecl>>()) {
			_case_begin_1ad669412:;
			{
				jule::Ptr<_1e0126750_SptrTypeDecl> _149117_sptr = _147835_k.operator jule::Ptr<_1e0126750_SptrTypeDecl>();;
				return static__1ed792d47_exist(_147822_ident,_149117_sptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012719b_PtrTypeDecl>>()) {
			_case_begin_1ad669478:;
			{
				jule::Ptr<_1e012719b_PtrTypeDecl> _149417_ptr = _147835_k.operator jule::Ptr<_1e012719b_PtrTypeDecl>();;
				return static__1ed792d47_exist(_147822_ident,_149417_ptr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126ac4_SlcTypeDecl>>()) {
			_case_begin_1ad6694de:;
			{
				jule::Ptr<_1e0126ac4_SlcTypeDecl> _149717_slc = _147835_k.operator jule::Ptr<_1e0126ac4_SlcTypeDecl>();;
				return static__1ed792d47_exist(_147822_ident,_149717_slc.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01278e9_ArrTypeDecl>>()) {
			_case_begin_1ad6690b0:;
			{
				jule::Ptr<_1e01278e9_ArrTypeDecl> _150017_arr = _147835_k.operator jule::Ptr<_1e01278e9_ArrTypeDecl>();;
				return static__1ed792d47_exist(_147822_ident,_150017_arr.get()._field_elem.get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0128103_MapTypeDecl>>()) {
			_case_begin_1ad669126:;
			{
				jule::Ptr<_1e0128103_MapTypeDecl> _150317_map = _147835_k.operator jule::Ptr<_1e0128103_MapTypeDecl>();;
				return (static__1ed792d47_exist(_147822_ident,_150317_map.get()._field_key.get()._field_kind) || static__1ed792d47_exist(_147822_ident,_150317_map.get()._field_val.get()._field_kind));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>()) {
			_case_begin_1ad66918c:;
			{
				jule::Ptr<_1e0134e01_FnDecl> _150717_f = _147835_k.operator jule::Ptr<_1e0134e01_FnDecl>();;
				{
					auto &expr = _150717_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1ad670ea7:;
					if (it != expr.end()) {
						jule::Ptr<_1e0133ad1_ParamDecl> &_150820_p = *it;
						{
							if (_1e0133e44_is_self(_150820_p.ptr())) {
								goto _iter_next_1ad670ea7;
							};
							if (static__1ed792d47_exist(_147822_ident,_150820_p.get()._field_kind.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ad670ea7:;
						++it;
						goto _iter_begin_1ad670ea7;
					}
					_iter_end_1ad670ea7:;
				};
				if ((_150717_f.get()._field_result != nullptr)) {
					return static__1ed792d47_exist(_147822_ident,_150717_f.get()._field_result.get()._field_kind.get()._field_kind);
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126db0_TupleTypeDecl>>()) {
			_case_begin_1ad669203:;
			{
				jule::Ptr<_1e0126db0_TupleTypeDecl> _152117_tup = _147835_k.operator jule::Ptr<_1e0126db0_TupleTypeDecl>();;
				{
					auto &expr = _152117_tup.get()._field_types;
					auto it = expr.begin();
					_iter_begin_1ad67331c:;
					if (it != expr.end()) {
						jule::Ptr<_1e01253db_TypeDecl> &_152220_t = *it;
						{
							if (static__1ed792d47_exist(_147822_ident,_152220_t.get()._field_kind)) {
								return true;
							};
						}
						_iter_next_1ad67331c:;
						++it;
						goto _iter_begin_1ad67331c;
					}
					_iter_end_1ad67331c:;
				};
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0126464_NamespaceTypeDecl>>()) {
			_case_begin_1ad6696a9:;
			{
				jule::Ptr<_1e0126464_NamespaceTypeDecl> _152917_ns = _147835_k.operator jule::Ptr<_1e0126464_NamespaceTypeDecl>();;
				return static__1ed792d47_exist(_147822_ident,_152917_ns.get()._field_kind.get()._field_kind);
			}
		}
		else {
			_case_begin_1ad668e5b:;
			{
				return false;
			}
		}
		_match_end_1ad668e06:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ed7925b6_IdentTypeLookup _Src) {
	_Stream << "IdentTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa442b8e_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4915d3_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1aa492590_stop(_1aa491e0d_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1aa492804_stopped(_1aa491e0d_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1aa492a68_finished(_1aa491e0d_ScopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());
}



inline jule::Bool _1aa492ccc_is_last_st(_1aa491e0d_ScopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());
}



inline void _1aa4930eb_push_err(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1dd9941e0_Token> _18927_token, jule::Str _18942_fmt) {
	_1aa4ad765_push_err((*_self_)._field_p.ptr(), _18927_token,_18942_fmt,jule::Slice<jule::Any>());
}



inline void _1aa49341a_push_suggestion(_1aa491e0d_ScopeParser* _self_, jule::Str _19434_fmt, jule::Slice<jule::Any> _19447_args) {
	_1aa4ada84_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,jule::Any(_19447_args));
}



inline void _1aa493690_insert_as_next(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1aa4915d3_Stmt>(_1aa4915d3_Stmt{._field_tokens=_19838_tokens, });
}



inline jule::Ptr<_1aa4915d3_Stmt> _1aa493904_next(_1aa491e0d_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1e013340a_ScopeTree> _1aa493cab_build_scope(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _20835_tokens, jule::Ptr<_1dd9941e0_Token> _20857_end) {
	jule::Ptr<_1e013340a_ScopeTree> _20917_s = _1aa49046c_new_scope();;
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_20917_s.get()._field_end=_20857_end;
	_1aa491e0d_ScopeParser _21217_ssp = _1aa491e0d_ScopeParser{._field_p=(*_self_)._field_p, };;
	_1aa49c930_build(&_21217_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1aa4940b9_build_var_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _21936_tokens) {
	jule::Ptr<_1e0135dd0_VarDecl> _22017_v = _1aa4b12d4_build_var((*_self_)._field_p, _21936_tokens);;
	_22017_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_22017_v);
}



inline jule::Any _1aa4943c7_build_ret_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _22535_tokens) {
	jule::Ptr<_1e0136287_RetSt> _22617_st = jule::new_ptr<_1e0136287_RetSt>(_1e0136287_RetSt{._field_token=_22535_tokens[0LL], });;
	if ((_22535_tokens.len() > 1LL)) {
		_22535_tokens=_22535_tokens.slice(1LL);
		_22617_st.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _22535_tokens);
	};
	return jule::Any(_22617_st);
}



inline jule::Any _1aa4946d5_build_while_next_iter(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1aa4915d3_Stmt>& _23645_s) {
	jule::Ptr<_1e0136809_Iter> _23717_it = jule::new_ptr<_1e0136809_Iter>(_1e0136809_Iter{._field_token=_23645_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _24017_tokens = _23645_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1e01370ce_WhileKind> _24117_kind = jule::new_ptr<_1e01370ce_WhileKind>(_1e01370ce_WhileKind{});;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _24017_tokens);
	};
	if (_1aa492ccc_is_last_st(&(*_self_))) {
		_1aa4930eb_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	_24017_tokens=_1aa493904_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _25317_st_tokens = _1aa49db2e_get_block_expr(_24017_tokens);;
	if ((_25317_st_tokens.len() > 0LL)) {
		jule::Ptr<_1aa4915d3_Stmt> _25521_stmt = jule::new_ptr<_1aa4915d3_Stmt>(_1aa4915d3_Stmt{._field_tokens=_25317_st_tokens, ._field_terminated=_23645_s.get()._field_terminated});;
		_24117_kind.get()._field_next_token=_25317_st_tokens[0LL];
		_24117_kind.get()._field_next=jule::Any(_1aa49c611_build_st(&(*_self_), _25521_stmt));
	};
	jule::I32 _26317_i = _25317_st_tokens.len();;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _26417_block_tokens = _1aa4ab422_range(_26317_i,jule::Str("{", 1),jule::Str("}", 1),_24017_tokens);;
	if ((_26417_block_tokens == nullptr)) {
		_1aa492590_stop(&(*_self_));
		_1aa4930eb_push_err(&(*_self_), _23717_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _24017_tokens[_26317_i],jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_scope=_1aa493cab_build_scope(&(*_self_), _26417_block_tokens,_24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_kind=jule::Any(_24117_kind);
	return jule::Any(_23717_it);
}



inline jule::Ptr<_1e01370ce_WhileKind> _1aa4949e3_build_while_iter_kind(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _28145_tokens) {
	return jule::new_ptr<_1e01370ce_WhileKind>(_1e01370ce_WhileKind{._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _28145_tokens), });
}



inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa494d23_get_range_kind_keys_tokens(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _28750_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _28818_vars;;
	jule::Slice<_1dd65aa00_Log> _28824_errs;;
	std::tie(_28818_vars,_28824_errs) = _1aa4abae8_parts(_28750_toks,static_cast<jule::U32>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28824_errs);
	return _28818_vars;
}



inline jule::Ptr<_1e0135dd0_VarDecl> _1aa495142_build_range_kind_key(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _29344_tokens) {
	if ((_29344_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e0135dd0_VarDecl> _29717_key = jule::new_ptr<_1e0135dd0_VarDecl>(_1e0135dd0_VarDecl{._field_token=_29344_tokens[0LL], });;
	if ((_29717_key.get()._field_token.get()._field_id == static_cast<jule::U32>(36LLU))) {
		_29717_key.get()._field_mutable=true;
		if ((_29344_tokens.len() == 1LL)) {
			_1aa4930eb_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_token=_29344_tokens[1LL];
	} else if ((_29344_tokens.len() > 1LL)) {
		_1aa4930eb_push_err(&(*_self_), _29344_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4930eb_push_err(&(*_self_), _29717_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_29717_key.get()._field_ident=_29717_key.get()._field_token.get()._field_kind;
	return _29717_key;
}



inline jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _1aa495450_build_range_kind_keys(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>& _31845_parts) {
	jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _31917_keys = nullptr;;
	{
		auto &expr = _31845_parts;
		auto it = expr.begin();
		_iter_begin_1ad7d9d79:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _32021_tokens = *it;
			{
				_31917_keys = jule::alloc_for_append(_31917_keys,1);_31917_keys.__push(_1aa495142_build_range_kind_key(&(*_self_), _32021_tokens));;
			}
			_iter_next_1ad7d9d79:;
			++it;
			goto _iter_begin_1ad7d9d79;
		}
		_iter_end_1ad7d9d79:;
	};
	return _31917_keys;
}



inline void _1aa495791_setup_range_kind_keys_plain(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1e0137970_RangeKind>& _32651_rng, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _32673_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _32717_key_tokens = _1aa494d23_get_range_kind_keys_tokens(&(*_self_), _32673_tokens);;
	if ((_32717_key_tokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_key_tokens.len() > 2LL)) {
		_1aa4930eb_push_err(&(*_self_), _32651_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _33417_keys = _1aa495450_build_range_kind_keys(&(*_self_), _32717_key_tokens);;
	_32651_rng.get()._field_key_a=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		_32651_rng.get()._field_key_b=_33417_keys[1LL];
	};
}



inline void _1aa495ae3_setup_range_kind_keys_explicit(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1e0137970_RangeKind>& _34154_rng, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _34176_tokens) {
	jule::I32 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _34317_rang = _1aa4ab422_range(_34217_i,jule::Str("(", 1),jule::Str(")", 1),_34176_tokens);;
	if ((_34217_i < _34176_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _34154_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	};
	_1aa495791_setup_range_kind_keys_plain(&(*_self_), _34154_rng,_34317_rang);
}



inline void _1aa495e23_setup_range_kind_keys(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1e0137970_RangeKind>& _35045_rng, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _35067_tokens) {
	if ((_35067_tokens[0LL].get()._field_id == static_cast<jule::U32>(3LLU))) {
		if ((_35067_tokens[0LL].get()._field_kind != jule::Str("(", 1))) {
			_1aa4930eb_push_err(&(*_self_), _35067_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1aa495ae3_setup_range_kind_keys_explicit(&(*_self_), _35045_rng,_35067_tokens);
		return;;
	};
	_1aa495791_setup_range_kind_keys_plain(&(*_self_), _35045_rng,_35067_tokens);
}



inline jule::Ptr<_1e0137970_RangeKind> _1aa496374_build_range_iter_kind(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _36245_var_tokens, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _36314_expr_tokens, jule::Ptr<_1dd9941e0_Token>& _36342_in_token) {
	jule::Ptr<_1e0137970_RangeKind> _36417_rng = jule::new_ptr<_1e0137970_RangeKind>(_1e0137970_RangeKind{._field_in_token=_36342_in_token, });;
	if ((_36314_expr_tokens.len() == 0LL)) {
		_1aa4930eb_push_err(&(*_self_), _36417_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36417_rng;
	};
	_36417_rng.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _36314_expr_tokens);
	if ((_36245_var_tokens.len() > 0LL)) {
		_1aa495e23_setup_range_kind_keys(&(*_self_), _36417_rng,_36245_var_tokens);
	};
	return _36417_rng;
}



inline jule::Any _1aa49672b_build_common_iter_kind(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _37846_tokens, jule::Ptr<_1dd9941e0_Token>& _37865_err_tok) {
	jule::I32 _37917_brace_n = 0LL;;
	{
		auto &expr = _37846_tokens;
		auto it = expr.begin();
		_iter_begin_1ad7e5eea:;
		if (it != expr.end()) {
			jule::I32 _38014_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _38021_tok = *it;
			{
				if ((_38021_tok.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _38021_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad7e745d:;
							{
								(_37917_brace_n)++;
								goto _iter_next_1ad7e5eea;
							}
						}
						else {
							_case_begin_1ad7e6d75:;
							{
								(_37917_brace_n)--;
							}
						}
						_match_end_1ad7e7062:;
					};
				};
				if ((_37917_brace_n != 0LL)) {
					goto _iter_next_1ad7e5eea;
				};
				{
					auto &_match_expr{ _38021_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(15LLU)) {
						_case_begin_1ad7e7e75:;
						{
							jule::Slice<jule::Ptr<_1dd9941e0_Token>> _39725_decl_tokens = _37846_tokens.slice(0LL,_38014_i);;
							jule::Slice<jule::Ptr<_1dd9941e0_Token>> _39825_expr_tokens = _37846_tokens.slice((_38014_i + 1LL));;
							return jule::Any(_1aa496374_build_range_iter_kind(&(*_self_), _39725_decl_tokens,_39825_expr_tokens,_38021_tok));
						}
					}
					_match_end_1ad7e7d98:;
				};
			}
			_iter_next_1ad7e5eea:;
			++it;
			_38014_i++;
			goto _iter_begin_1ad7e5eea;
		}
		_iter_end_1ad7e5eea:;
	};
	return jule::Any(_1aa4949e3_build_while_iter_kind(&(*_self_), _37846_tokens));
}



inline jule::Any _1aa496a39_build_common_iter(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _40540_tokens) {
	jule::Ptr<_1e0136809_Iter> _40617_it = jule::new_ptr<_1e0136809_Iter>(_1e0136809_Iter{._field_token=_40540_tokens[0LL], });;
	_40540_tokens=_40540_tokens.slice(1LL);
	if ((_40540_tokens.len() == 0LL)) {
		_1aa492590_stop(&(*_self_));
		_1aa4930eb_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _41617_expr_tokens = _1aa49db2e_get_block_expr(_40540_tokens);;
	if ((_41617_expr_tokens.len() > 0LL)) {
		_40617_it.get()._field_kind=jule::Any(_1aa49672b_build_common_iter_kind(&(*_self_), _41617_expr_tokens,_40617_it.get()._field_token));
	};
	jule::I32 _42017_i = _41617_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _42117_scope_tokens = _1aa4ab422_range(_42017_i,jule::Str("{", 1),jule::Str("}", 1),_40540_tokens);;
	if ((_42117_scope_tokens == nullptr)) {
		_1aa492590_stop(&(*_self_));
		_1aa4930eb_push_err(&(*_self_), _40617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_42017_i < _40540_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _40540_tokens[_42017_i],jule::Str("invalid syntax", 14));
	};
	_40617_it.get()._field_scope=_1aa493cab_build_scope(&(*_self_), _42117_scope_tokens,_40540_tokens[(_42017_i - 1LL)]);
	return jule::Any(_40617_it);
}



inline jule::Any _1aa496d47_build_iter_st(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1aa4915d3_Stmt>& _43537_st) {
	if (_43537_st.get()._field_terminated) {
		return jule::Any(_1aa4946d5_build_while_next_iter(&(*_self_), _43537_st));
	};
	return jule::Any(_1aa496a39_build_common_iter(&(*_self_), _43537_st.get()._field_tokens));
}



inline jule::Any _1aa497155_build_break_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _44238_tokens) {
	jule::Ptr<_1e0137d27_BreakSt> _44317_brk = jule::new_ptr<_1e0137d27_BreakSt>(_1e0137d27_BreakSt{._field_token=_44238_tokens[0LL], });;
	if ((_44238_tokens.len() > 1LL)) {
		if ((_44238_tokens[1LL].get()._field_id != static_cast<jule::U32>(2LLU))) {
			_1aa4930eb_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aa49341a_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44317_brk.get()._field_label=_44238_tokens[1LL];
			if ((_44238_tokens.len() > 2LL)) {
				_1aa4930eb_push_err(&(*_self_), _44238_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_44317_brk);
}



inline jule::Any _1aa497463_build_cont_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _46037_tokens) {
	jule::Ptr<_1e01381ce_ContSt> _46117_cont = jule::new_ptr<_1e01381ce_ContSt>(_1e01381ce_ContSt{._field_token=_46037_tokens[0LL], });;
	if ((_46037_tokens.len() > 1LL)) {
		if ((_46037_tokens[1LL].get()._field_id != static_cast<jule::U32>(2LLU))) {
			_1aa4930eb_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aa49341a_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46117_cont.get()._field_label=_46037_tokens[1LL];
			if ((_46037_tokens.len() > 2LL)) {
				_1aa4930eb_push_err(&(*_self_), _46037_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return jule::Any(_46117_cont);
}



inline jule::Ptr<_1e0138652_If> _1aa497771_build_if(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _47832_tokens) {
	jule::Ptr<_1e0138652_If> _47917_model = jule::new_ptr<_1e0138652_If>(_1e0138652_If{._field_token=_47832_tokens[0LL], });;
	_47832_tokens=_47832_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _48317_expr_tokens = _1aa49db2e_get_block_expr(_47832_tokens);;
	jule::I32 _48417_i = 0LL;;
	if ((_48317_expr_tokens.len() == 0LL)) {
		_1aa4930eb_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48417_i=static_cast<jule::I32>(_48317_expr_tokens.len());
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _49017_scope_tokens = _1aa4ab422_range(_48417_i,jule::Str("{", 1),jule::Str("}", 1),_47832_tokens);;
	if ((_49017_scope_tokens == nullptr)) {
		_1aa492590_stop(&(*_self_));
		_1aa4930eb_push_err(&(*_self_), _47917_model.get()._field_token,jule::Str("body is not exist", 17));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dd9941e0_Token> _49717_end = _47832_tokens[(_48417_i - 1LL)];;
	if ((_48417_i < _47832_tokens.len())) {
		if ((_47832_tokens[_48417_i].get()._field_id == static_cast<jule::U32>(17LLU))) {
			_47832_tokens=_47832_tokens.slice(_48417_i);
		} else {
			_1aa4930eb_push_err(&(*_self_), _47832_tokens[_48417_i],jule::Str("invalid syntax", 14));
			_47832_tokens=nullptr;
		};
	};
	_47917_model.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _48317_expr_tokens);
	_47917_model.get()._field_scope=_1aa493cab_build_scope(&(*_self_), _49017_scope_tokens,_49717_end);
	return _47917_model;
}



inline jule::Ptr<_1e0138a09_Else> _1aa497a7e_build_else(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _51134_tokens) {
	jule::Ptr<_1e0138a09_Else> _51217_els = jule::new_ptr<_1e0138a09_Else>(_1e0138a09_Else{._field_token=_51134_tokens[0LL], });;
	_51134_tokens=_51134_tokens.slice(1LL);
	jule::I32 _51617_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _51717_scope_tokens = _1aa4ab422_range(_51617_i,jule::Str("{", 1),jule::Str("}", 1),_51134_tokens);;
	if ((_51717_scope_tokens == nullptr)) {
		if ((_51617_i < _51134_tokens.len())) {
			_1aa4930eb_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1aa492590_stop(&(*_self_));
			_1aa4930eb_push_err(&(*_self_), _51217_els.get()._field_token,jule::Str("body is not exist", 17));
			_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	if ((_51617_i < _51134_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _51134_tokens[_51617_i],jule::Str("invalid syntax", 14));
	};
	_51217_els.get()._field_scope=_1aa493cab_build_scope(&(*_self_), _51717_scope_tokens,_51134_tokens[(_51617_i - 1LL)]);
	return _51217_els;
}



inline jule::Any _1aa497d8c_build_if_else_chain(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _53542_tokens) {
	jule::Ptr<_1e0138e7c_Conditional> _53617_chain = jule::new_ptr<_1e0138e7c_Conditional>(_1e0138e7c_Conditional{._field_head=_1aa497771_build_if(&(*_self_), _53542_tokens), });;
	if ((_53617_chain.get()._field_head == nullptr)) {
		return nullptr;
	};
	while ((_53542_tokens.len() != 0LL)) {
		{
			if ((_53542_tokens[0LL].get()._field_id != static_cast<jule::U32>(17LLU))) {
				goto _iter_end_1ad815525;
			};
			if (((_53542_tokens.len() > 1LL) && (_53542_tokens[1LL].get()._field_id == static_cast<jule::U32>(16LLU)))) {
				_53542_tokens=_53542_tokens.slice(1LL);
				jule::Ptr<_1e0138652_If> _54825_elif = _1aa497771_build_if(&(*_self_), _53542_tokens);;
				_53617_chain.get()._field_tail = jule::alloc_for_append(_53617_chain.get()._field_tail,1);_53617_chain.get()._field_tail.__push(_54825_elif);;
				goto _iter_next_1ad815525;
			};
			_53617_chain.get()._field_default=_1aa497a7e_build_else(&(*_self_), _53542_tokens);
			goto _iter_end_1ad815525;
		}
	_iter_next_1ad815525:;
	}
	_iter_end_1ad815525:;;
	return jule::Any(_53617_chain);
}



inline jule::Any _1aa49819a_build_co_call_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _55839_tokens) {
	jule::Ptr<_1e012a369_CoExpr> _55917_c = jule::new_ptr<_1e012a369_CoExpr>(_1e012a369_CoExpr{._field_token=_55839_tokens[0LL], });;
	_55839_tokens=_55839_tokens.slice(1LL);
	_55917_c.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _55839_tokens);
	return jule::Any(_55917_c);
}



inline jule::Any _1aa4984a8_build_goto_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _56737_tokens) {
	jule::Ptr<_1e0131dba_GotoSt> _56817_gt = jule::new_ptr<_1e0131dba_GotoSt>(_1e0131dba_GotoSt{._field_token=_56737_tokens[0LL], });;
	if ((_56737_tokens.len() == 1LL)) {
		_1aa4930eb_push_err(&(*_self_), _56817_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;
	} else if ((_56737_tokens.len() > 2LL)) {
		_1aa4930eb_push_err(&(*_self_), _56737_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1dd9941e0_Token> _57717_ident_token = _56737_tokens[1LL];;
	if ((_57717_ident_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4930eb_push_err(&(*_self_), _57717_ident_token,jule::Str("invalid syntax", 14));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56817_gt);
	};
	_56817_gt.get()._field_label=_57717_ident_token;
	return jule::Any(_56817_gt);
}



inline jule::Any _1aa4987b6_build_fall_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _58737_tokens) {
	jule::Ptr<_1e01321a6_FallSt> _58817_fll = jule::new_ptr<_1e01321a6_FallSt>(_1e01321a6_FallSt{._field_token=_58737_tokens[0LL]});;
	if ((_58737_tokens.len() > 1LL)) {
		_1aa4930eb_push_err(&(*_self_), _58737_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return jule::Any(_58817_fll);
}



inline jule::Any _1aa498ac4_build_type_alias_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _59743_tokens) {
	jule::Ptr<_1e0139653_TypeAliasDecl> _59817_tad = _1aa4b048c_build_type_alias_decl((*_self_)._field_p, _59743_tokens);;
	_59817_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59817_tad);
}



inline void _1aa499036_push_case_expr(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _60337_tokens, jule::Ptr<_1dd9941e0_Token> _60359_token, jule::Bool _6049_type_match, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>& _60432_exprs) {
	if ((_60337_tokens.len() == 0LL)) {
		return;;
	};
	if (_6049_type_match) {
		jule::I32 _61021_i = 0LL;;
		jule::Ptr<_1e01253db_TypeDecl> _61122_t;;
		jule::Bool _61125_ok;;
		std::tie(_61122_t,_61125_ok) = _1aa4b017e_build_type((*_self_)._field_p, _60337_tokens,(&(_61021_i)),true);
		if (_61125_ok) {
			_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(jule::new_ptr<_1e0128b3c_Expr>(_1e0128b3c_Expr{._field_token=_60337_tokens[0LL], ._field_kind=jule::Any(_61122_t)}));;
			if ((_61021_i < _60337_tokens.len())) {
				_1aa4930eb_push_err(&(*_self_), _60337_tokens[_61021_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_60432_exprs = jule::alloc_for_append(_60432_exprs,1);_60432_exprs.__push(_1aa4add92_build_expr((*_self_)._field_p, _60337_tokens));;
}



inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4993dd_build_case_exprs(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _62640_tokens, jule::Bool _62658_type_match) {
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _62717_exprs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>::alloc(0LL,1LL);;
	jule::I32 _62917_brace_n = 0LL;;
	jule::I32 _63017_j = 0LL;;
	{
		auto &expr = _62640_tokens;
		auto it = expr.begin();
		_iter_begin_1ad825458:;
		if (it != expr.end()) {
			jule::I32 _63114_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _63121_tok = *it;
			{
				if ((_63121_tok.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _63121_tok.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ad826855:;
							{
								(_62917_brace_n)++;
							}
						}
						else {
							_case_begin_1ad82626c:;
							{
								(_62917_brace_n)--;
							}
						}
						_match_end_1ad826459:;
					};
					goto _iter_next_1ad825458;
				} else if ((_62917_brace_n != 0LL)) {
					goto _iter_next_1ad825458;
				};
				{
					
					if (((_63121_tok.get()._field_id == static_cast<jule::U32>(7LLU)) && (_63121_tok.get()._field_kind == jule::Str("|", 1)))) {
						_case_begin_1ad826c62:;
						{
							jule::Slice<jule::Ptr<_1dd9941e0_Token>> _64721_expr_tokens = _62640_tokens.slice(_63017_j,_63114_i);;
							if ((_64721_expr_tokens.len() == 0LL)) {
								_1aa4930eb_push_err(&(*_self_), _63121_tok,jule::Str("expression missing", 18));
							} else {
								_1aa499036_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							};
							_63017_j=static_cast<jule::I32>((_63114_i + 1LL));
						}
					}
					else if ((_63121_tok.get()._field_id == static_cast<jule::U32>(11LLU))) {
						_case_begin_1ad827290:;
						{
							_1aa499036_push_case_expr(&(*_self_), _62640_tokens.slice(_63017_j,_63114_i),_63121_tok,_62658_type_match,_62717_exprs);
							_62640_tokens=_62640_tokens.slice((_63114_i + 1LL));
							return _62717_exprs;
						}
					}
					_match_end_1ad826ec6:;
				};
			}
			_iter_next_1ad825458:;
			++it;
			_63114_i++;
			goto _iter_begin_1ad825458;
		}
		_iter_end_1ad825458:;
	};
	_1aa4930eb_push_err(&(*_self_), _62640_tokens[0LL],jule::Str("invalid syntax", 14));
	_62640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1e013340a_ScopeTree> _1aa4996eb_build_case_scope(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _66540_tokens) {
	jule::I32 _66617_n = 0LL;;
	for (;;) {
		{
			jule::I32 _66821_i = 0LL;;
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _66922_next;;
			std::tie(_66922_next,std::ignore) = _1aa4912d6_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if ((_66922_next.len() == 0LL)) {
				goto _iter_end_1ad82b294;
			};
			jule::Ptr<_1dd9941e0_Token> _67317_tok = _66922_next[0LL];;
			if (((_67317_tok.get()._field_id != static_cast<jule::U32>(7LLU)) || (_67317_tok.get()._field_kind != jule::Str("|", 1)))) {
				_66617_n+=_66821_i;
				goto _iter_next_1ad82b294;
			};
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);;
			jule::Ptr<_1e013340a_ScopeTree> _67921_scope = _1aa493cab_build_scope(&(*_self_), _67821_scope_tokens,_66540_tokens[_66617_n]);;
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_1ad82b294:;
	}
	_iter_end_1ad82b294:;;
	jule::Ptr<_1dd9941e0_Token> _68317_end = jule::Ptr<_1dd9941e0_Token>();;
	if ((_66540_tokens.len() > 0LL)) {
		_68317_end=_66540_tokens[(_66540_tokens.len() - 1LL)];
	};
	jule::Ptr<_1e013340a_ScopeTree> _68717_scope = _1aa493cab_build_scope(&(*_self_), _66540_tokens,_68317_end);;
	_66540_tokens=nullptr;
	return _68717_scope;
}



inline std::tuple<jule::Ptr<_1e0139ac6_Case>,jule::Bool> _1aa499aa3_build_case(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _69234_tokens, jule::Bool _69252_type_match) {
	jule::Ptr<_1e0139ac6_Case> _69317_c = jule::new_ptr<_1e0139ac6_Case>(_1e0139ac6_Case{._field_token=_69234_tokens[0LL], });;
	_69234_tokens=_69234_tokens.slice(1LL);
	_69317_c.get()._field_exprs=_1aa4993dd_build_case_exprs(&(*_self_), _69234_tokens,_69252_type_match);
	_69317_c.get()._field_scope=_1aa4996eb_build_case_scope(&(*_self_), _69234_tokens);
	jule::Bool _69913_is_default = (_69317_c.get()._field_exprs.len() == 0LL);;
	return std::make_tuple(_69317_c,_69913_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1e0139ac6_Case>>,jule::Ptr<_1e0138a09_Else>> _1aa499e5a_build_cases(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _70334_tokens, jule::Bool _70352_type_match) {
	jule::Slice<jule::Ptr<_1e0139ac6_Case>> _70417_cases = nullptr;;
	jule::Ptr<_1e0138a09_Else> _70517_def = nullptr;;
	jule::Bool _70617_def_not_last = false;;
	while ((_70334_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1dd9941e0_Token> _70821_tok = _70334_tokens[0LL];;
			if (((_70821_tok.get()._field_id != static_cast<jule::U32>(7LLU)) || (_70821_tok.get()._field_kind != jule::Str("|", 1)))) {
				_1aa4930eb_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ad8340c1;
			};
			jule::Ptr<_1e0139ac6_Case> _71322_c;;
			jule::Bool _71325_is_default;;
			std::tie(_71322_c,_71325_is_default) = _1aa499aa3_build_case(&(*_self_), _70334_tokens,_70352_type_match);
			if (_71325_is_default) {
				_71322_c.get()._field_token=_70821_tok;
				if ((_70517_def == nullptr)) {
					_70517_def=jule::new_ptr<_1e0138a09_Else>(_1e0138a09_Else{._field_token=_71322_c.get()._field_token, ._field_scope=_71322_c.get()._field_scope});
				} else {
					_1aa4930eb_push_err(&(*_self_), _70821_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_70617_def_not_last=(_70617_def_not_last || (_70517_def != nullptr));
				_70417_cases = jule::alloc_for_append(_70417_cases,1);_70417_cases.__push(_71322_c);;
			};
		}
	_iter_next_1ad8340c1:;
	}
	_iter_end_1ad8340c1:;;
	if (_70617_def_not_last) {
		_1aa4930eb_push_err(&(*_self_), _70517_def.get()._field_token,jule::Str("default case should be last case", 32));
	};
	return std::make_tuple(_70417_cases,_70517_def);
}



inline jule::Ptr<_1e013a29c_MatchCase> _1aa49a268_build_match_case(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _73739_tokens) {
	jule::Ptr<_1e013a29c_MatchCase> _73817_m = jule::new_ptr<_1e013a29c_MatchCase>(_1e013a29c_MatchCase{._field_token=_73739_tokens[0LL], });;
	_73739_tokens=_73739_tokens.slice(1LL);
	if (((_73739_tokens.len() > 0LL) && (_73739_tokens[0LL].get()._field_id == static_cast<jule::U32>(10LLU)))) {
		_73817_m.get()._field_type_match=true;
		_73739_tokens=_73739_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _74817_expr_tokens = _1aa49db2e_get_block_expr(_73739_tokens);;
	if ((_74817_expr_tokens.len() > 0LL)) {
		_73817_m.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _74817_expr_tokens);
	} else if (_73817_m.get()._field_type_match) {
		_1aa4930eb_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("expression missing", 18));
	};
	jule::I32 _75517_i = _74817_expr_tokens.len();;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _75617_block_toks = _1aa4ab422_range(_75517_i,jule::Str("{", 1),jule::Str("}", 1),_73739_tokens);;
	if ((_75617_block_toks == nullptr)) {
		_1aa492590_stop(&(*_self_));
		_1aa4930eb_push_err(&(*_self_), _73817_m.get()._field_token,jule::Str("body is not exist", 17));
		_1aa49341a_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_75517_i < _73739_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _73739_tokens[_75517_i],jule::Str("invalid syntax", 14));
	};
	_73817_m.get()._field_end=_73739_tokens[(_75517_i - 1LL)];
	std::tie(_73817_m.get()._field_cases,_73817_m.get()._field_default) = _1aa499e5a_build_cases(&(*_self_), _75617_block_toks,_73817_m.get()._field_type_match);
	return _73817_m;
}



inline jule::Ptr<_1e013340a_ScopeTree> _1aa49a576_build_scope_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;;
	jule::Bool _77217_is_deferred = false;;
	jule::Ptr<_1dd9941e0_Token> _77317_token = _77037_tokens[0LL];;
	if ((_77317_token.get()._field_id == static_cast<jule::U32>(35LLU))) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1aa4930eb_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
		_77317_token=_77037_tokens[0LL];
		if ((_77317_token.get()._field_id == static_cast<jule::U32>(37LLU))) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if ((_77037_tokens.len() == 0LL)) {
				_1aa4930eb_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			};
		};
	} else if ((_77317_token.get()._field_id == static_cast<jule::U32>(37LLU))) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if ((_77037_tokens.len() == 0LL)) {
			_1aa4930eb_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		};
	};
	jule::I32 _79917_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _80017_scope_tokens = _1aa4ab422_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);;
	if ((_80017_scope_tokens == nullptr)) {
		_1aa4930eb_push_err(&(*_self_), _77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if ((_79917_i < _77037_tokens.len())) {
		_1aa4930eb_push_err(&(*_self_), _77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1e013340a_ScopeTree> _80717_scope = _1aa493cab_build_scope(&(*_self_), _80017_scope_tokens,_77037_tokens[(_79917_i - 1LL)]);;
	_80717_scope.get()._field_unsafety=_77117_is_unsafe;
	_80717_scope.get()._field_deferred=_77217_is_deferred;
	return _80717_scope;
}



inline jule::Ptr<_1e0131a13_LabelSt> _1aa49a884_build_label_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _81338_tokens) {
	jule::Ptr<_1e0131a13_LabelSt> _81417_lbl = jule::new_ptr<_1e0131a13_LabelSt>(_1e0131a13_LabelSt{._field_token=_81338_tokens[0LL], ._field_ident=_81338_tokens[0LL].get()._field_kind});;
	if ((_81338_tokens.len() > 2LL)) {
		_81338_tokens=_81338_tokens.slice(2LL);
		_1aa493690_insert_as_next(&(*_self_), _81338_tokens);
	};
	return _81417_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1aa49ab92_build_id_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _82835_tokens) {
	jule::Bool _82865_ok = jule::Bool();
	if ((_82835_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82865_ok);
	};
	jule::Ptr<_1dd9941e0_Token> _83317_token = _82835_tokens[1LL];;
	{
		auto &_match_expr{ _83317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ad849d1d:;
			{
				_82865_ok = true;
				return std::make_tuple(jule::Any(_1aa49a884_build_label_st(&(*_self_), _82835_tokens)),_82865_ok);
			}
		}
		_match_end_1ad84a8ce:;
	};
	return std::make_tuple(jule::Any(),_82865_ok);
}



inline jule::Ptr<_1aa4a9be5_AssignInfo> _1aa49aea0_build_assign_info(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _84241_tokens) {
	jule::Ptr<_1aa4a9be5_AssignInfo> _84317_info = jule::new_ptr<_1aa4a9be5_AssignInfo>(_1aa4a9be5_AssignInfo{._field_ok=true});;
	jule::I32 _84617_brace_n = 0LL;;
	{
		auto &expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_1ad84c53a:;
		if (it != expr.end()) {
			jule::I32 _84714_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _84721_token = *it;
			{
				if ((_84721_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _84721_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad84d9e2:;
							{
								(_84617_brace_n)++;
							}
						}
						else {
							_case_begin_1ad84d409:;
							{
								(_84617_brace_n)--;
							}
						}
						_match_end_1ad84d5e6:;
					};
				};
				{
					
					if ((_84617_brace_n > 0LL)) {
						_case_begin_1ad84dd99:;
						{
							goto _iter_next_1ad84c53a;
						}
					}
					else if ((_84721_token.get()._field_id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1ad84de10:;
						{
							goto _iter_next_1ad84c53a;
						}
					}
					else if ((!(_1dd998bea_is_assign_op(_84721_token.get()._field_kind)))) {
						_case_begin_1ad84de76:;
						{
							goto _iter_next_1ad84c53a;
						}
					}
					_match_end_1ad84dbac:;
				};
				_84317_info.get()._field_l=_84241_tokens.slice(0LL,_84714_i);
				if ((_84317_info.get()._field_l.len() == 0LL)) {
					_84317_info.get()._field_ok=false;
				};
				_84317_info.get()._field_setter=_84721_token;
				if (((_84714_i + 1LL) >= _84241_tokens.len())) {
					_84317_info.get()._field_r=nullptr;
					_84317_info.get()._field_ok=_1dd998953_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind);
					goto _iter_end_1ad84c53a;
				};
				_84317_info.get()._field_r=_84241_tokens.slice((_84714_i + 1LL));
				if (_1dd998953_is_postfix_op(_84317_info.get()._field_setter.get()._field_kind)) {
					if ((_84317_info.get()._field_r.len() > 0LL)) {
						_1aa4930eb_push_err(&(*_self_), _84317_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ad84c53a;
			}
			_iter_next_1ad84c53a:;
			++it;
			_84714_i++;
			goto _iter_begin_1ad84c53a;
		}
		_iter_end_1ad84c53a:;
	};
	return _84317_info;
}



inline jule::Ptr<_1e01327b1_AssignLeft> _1aa49b2ad_build_assign_l(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _89038_tokens) {
	jule::Ptr<_1e01327b1_AssignLeft> _89117_l = jule::new_ptr<_1e01327b1_AssignLeft>(_1e01327b1_AssignLeft{._field_token=_89038_tokens[0LL], });;
	if ((_89038_tokens[0LL].get()._field_id == static_cast<jule::U32>(2LLU))) {
		_89117_l.get()._field_ident=_89117_l.get()._field_token.get()._field_kind;
	};
	_89117_l.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _89038_tokens);
	return _89117_l;
}



inline jule::Slice<jule::Ptr<_1e01327b1_AssignLeft>> _1aa49b5bb_build_assign_ls(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>& _90339_parts) {
	jule::Slice<jule::Ptr<_1e01327b1_AssignLeft>> _90417_lefts = nullptr;;
	{
		auto &expr = _90339_parts;
		auto it = expr.begin();
		_iter_begin_1ad855a3d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _90521_part = *it;
			{
				jule::Ptr<_1e01327b1_AssignLeft> _90621_l = _1aa49b2ad_build_assign_l(&(*_self_), _90521_part);;
				_90417_lefts = jule::alloc_for_append(_90417_lefts,1);_90417_lefts.__push(_90621_l);;
			}
			_iter_next_1ad855a3d:;
			++it;
			goto _iter_begin_1ad855a3d;
		}
		_iter_end_1ad855a3d:;
	};
	return _90417_lefts;
}



inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49b8c9_build_plain_assign(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _91342_tokens) {
	jule::Ptr<_1aa4a9be5_AssignInfo> _91417_info = _1aa49aea0_build_assign_info(&(*_self_), _91342_tokens);;
	if ((!(_91417_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e0132d00_AssignSt> _91917_assign = jule::new_ptr<_1e0132d00_AssignSt>(_1e0132d00_AssignSt{._field_setter=_91417_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _92318_parts;;
	jule::Slice<_1dd65aa00_Log> _92325_errs;;
	std::tie(_92318_parts,_92325_errs) = _1aa4abae8_parts(_91417_info.get()._field_l,static_cast<jule::U32>(8LLU),true);
	if ((_92325_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_92325_errs);
		return std::make_tuple(nullptr,false);
	};
	_91917_assign.get()._field_left=_1aa49b5bb_build_assign_ls(&(*_self_), _92318_parts);
	if ((_91417_info.get()._field_r != nullptr)) {
		_91917_assign.get()._field_right=_1aa4add92_build_expr((*_self_)._field_p, _91417_info.get()._field_r);
	};
	return std::make_tuple(_91917_assign,true);
}



inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49bbd7_build_decl_assign(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _93740_tokens) {
	if ((_93740_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	};
	_93740_tokens=_93740_tokens.slice(1LL);
	jule::Ptr<_1dd9941e0_Token> _94317_token = _93740_tokens[0LL];;
	if (((_94317_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_94317_token.get()._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(nullptr,false);
	};
	jule::Ptr<_1e0132d00_AssignSt> _94817_assign = jule::new_ptr<_1e0132d00_AssignSt>(_1e0132d00_AssignSt{._field_declarative=true, });;
	jule::I32 _95217_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _95317_rang = _1aa4ab422_range(_95217_i,jule::Str("(", 1),jule::Str(")", 1),_93740_tokens);;
	if ((_95317_rang == nullptr)) {
		_1aa4930eb_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if (((_95217_i + 1LL) < _93740_tokens.len())) {
		_94817_assign.get()._field_setter=_93740_tokens[_95217_i];
		(_95217_i)++;
		jule::Slice<jule::Ptr<_1dd9941e0_Token>> _96021_expr_tokens = _93740_tokens.slice(_95217_i);;
		_94817_assign.get()._field_right=_1aa4add92_build_expr((*_self_)._field_p, _96021_expr_tokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _96518_parts;;
	jule::Slice<_1dd65aa00_Log> _96525_errs;;
	std::tie(_96518_parts,_96525_errs) = _1aa4abae8_parts(_95317_rang,static_cast<jule::U32>(8LLU),true);
	if ((_96525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_96525_errs);
		return std::make_tuple(nullptr,false);
	};
	{
		auto &expr = _96518_parts;
		auto it = expr.begin();
		_iter_begin_1ad861939:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _97121_part = *it;
			{
				jule::Bool _97221_is_mut = false;;
				jule::Bool _97321_is_ref = false;;
				_94317_token=_97121_part[0LL];
				if ((_94317_token.get()._field_id == static_cast<jule::U32>(36LLU))) {
					_97221_is_mut=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1aa4930eb_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ad861939;
					};
				};
				if (((_97121_part[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_97121_part[0LL].get()._field_kind == jule::Str("&", 1)))) {
					_97321_is_ref=true;
					_97121_part=_97121_part.slice(1LL);
					if ((_97121_part.len() == 0LL)) {
						_1aa4930eb_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ad861939;
					};
				};
				if ((((_97121_part[0LL].get()._field_id != static_cast<jule::U32>(2LLU)) && (_97121_part[0LL].get()._field_id != static_cast<jule::U32>(3LLU))) && (_97121_part[0LL].get()._field_kind != jule::Str("(", 1)))) {
					_1aa4930eb_push_err(&(*_self_), _94317_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ad861939;
				};
				jule::Ptr<_1e01327b1_AssignLeft> _100121_l = _1aa49b2ad_build_assign_l(&(*_self_), _97121_part);;
				_100121_l.get()._field_mutable=_97221_is_mut;
				_100121_l.get()._field_reference=_97321_is_ref;
				_94817_assign.get()._field_left = jule::alloc_for_append(_94817_assign.get()._field_left,1);_94817_assign.get()._field_left.__push(_100121_l);;
			}
			_iter_next_1ad861939:;
			++it;
			goto _iter_begin_1ad861939;
		}
		_iter_end_1ad861939:;
	};
	return std::make_tuple(_94817_assign,true);
}



inline std::tuple<jule::Ptr<_1e0132d00_AssignSt>,jule::Bool> _1aa49bee5_build_assign_st(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _101039_tokens) {
	jule::Ptr<_1e0132d00_AssignSt> _101059_st = jule::Ptr<_1e0132d00_AssignSt>();
	jule::Bool _101074_ok = jule::Bool();
	if ((!(_1aa4aa08b_check_assign_tokens(_101039_tokens)))) {
		_101059_st = nullptr;
		_101074_ok = false;
		return std::make_tuple(_101059_st,_101074_ok);
	};
	{
		auto &_match_expr{ _101039_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ad86ab52:;
			{
				std::tie(_101059_st,_101074_ok) = _1aa49bbd7_build_decl_assign(&(*_self_), _101039_tokens);
			}
		}
		else {
			_case_begin_1ad869c72:;
			{
				std::tie(_101059_st,_101074_ok) = _1aa49b8c9_build_plain_assign(&(*_self_), _101039_tokens);
			}
		}
		_match_end_1ad86a2e4:;
	};
	return std::make_tuple(_101059_st,_101074_ok);
}



inline jule::Any _1aa49c303_build_use_expr(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _102538_tokens) {
	if ((_102538_tokens.len() == 1LL)) {
		_1aa4930eb_push_err(&(*_self_), _102538_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;
	};
	jule::Ptr<_1e0128ee4_UseExpr> _103117_ue = jule::new_ptr<_1e0128ee4_UseExpr>(_1e0128ee4_UseExpr{._field_token=_102538_tokens[0LL], });;
	_102538_tokens=_102538_tokens.slice(1LL);
	_103117_ue.get()._field_expr=_1aa4add92_build_expr((*_self_)._field_p, _102538_tokens);
	return jule::Any(_103117_ue);
}



inline jule::Any _1aa49c611_build_st(_1aa491e0d_ScopeParser* _self_, jule::Ptr<_1aa4915d3_Stmt>& _104032_st) {
	jule::Ptr<_1dd9941e0_Token> _104117_token = _104032_st.get()._field_tokens[0LL];;
	if ((_104117_token.get()._field_id == static_cast<jule::U32>(2LLU))) {
		jule::Any _104322_s;;
		jule::Bool _104325_ok;;
		std::tie(_104322_s,_104325_ok) = _1aa49ab92_build_id_st(&(*_self_), _104032_st.get()._field_tokens);
		if (_104325_ok) {
			return jule::Any(_104322_s);
		};
	};
	jule::Ptr<_1e0132d00_AssignSt> _104918_s;;
	jule::Bool _104921_ok;;
	std::tie(_104918_s,_104921_ok) = _1aa49bee5_build_assign_st(&(*_self_), _104032_st.get()._field_tokens);
	if (_104921_ok) {
		return jule::Any(_104918_s);
	};
	{
		auto &_match_expr{ _104117_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1ad8703b5:;
			{
				return jule::Any(_1aa49c303_build_use_expr(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(38LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1ad870c78:;
			{
				return jule::Any(_1aa4940b9_build_var_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1ad8706a1:;
			{
				return jule::Any(_1aa4943c7_build_ret_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(12LLU)) {
			_case_begin_1ad870717:;
			{
				return jule::Any(_1aa496d47_build_iter_st(&(*_self_), _104032_st));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1ad87077d:;
			{
				return jule::Any(_1aa497155_build_break_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(14LLU)) {
			_case_begin_1ad870e21:;
			{
				return jule::Any(_1aa497463_build_cont_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1ad870e87:;
			{
				return jule::Any(_1aa497d8c_build_if_else_chain(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1ad870eed:;
			{
				return jule::Any(_1aa49819a_build_co_call_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1ad871064:;
			{
				return jule::Any(_1aa4984a8_build_goto_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1ad8710ca:;
			{
				return jule::Any(_1aa4987b6_build_fall_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1ad871141:;
			{
				return jule::Any(_1aa498ac4_build_type_alias_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1ad8711a7:;
			{
				return jule::Any(_1aa49a268_build_match_case(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU) || _match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1ad87121d:;
			{
				return jule::Any(_1aa49a576_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad871284:;
			{
				if ((_104117_token.get()._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1aa49a576_build_scope_st(&(*_self_), _104032_st.get()._field_tokens));
				};
			}
		}
		_match_end_1ad8709c0:;
	};
	jule::Ptr<_1e0128b3c_Expr> _109017_expr = _1aa4add92_build_expr((*_self_)._field_p, _104032_st.get()._field_tokens);;
	if ((_109017_expr != nullptr)) {
		return jule::Any(_109017_expr);
	};
	_1aa4930eb_push_err(&(*_self_), _104117_token,jule::Str("invalid syntax", 14));
	return nullptr;
}



inline void _1aa49c930_build(_1aa491e0d_ScopeParser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _109829_tokens, jule::Ptr<_1e013340a_ScopeTree>& _109852_s) {
	if ((_109852_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1aa491979_split_stmts(_109829_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109852_s;
	while (((!(_1aa492ccc_is_last_st(&(*_self_)))) && (!(_1aa492a68_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1aa4915d3_Stmt> _110721_st = _1aa493904_next(&(*_self_));;
			jule::Any _110821_data = _1aa49c611_build_st(&(*_self_), _110721_st);;
			if ((_110821_data != nullptr)) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1e00e2ead_Node{._field_token=_110721_st.get()._field_tokens[0LL], ._field_data=jule::Any(_110821_data)});;
			};
			if (_1aa492804_stopped(&(*_self_))) {
				goto _iter_end_1ad87a777;
			};
		}
	_iter_next_1ad87a777:;
	}
	_iter_end_1ad87a777:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa491e0d_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa49d4d0_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4a0229_push_err(_1aa49e932_ExprBuilder* _self_, jule::Ptr<_1dd9941e0_Token> _21827_token, jule::Str _21842_fmt, jule::Slice<jule::Any> _21855_args) {
	_1aa4ad765_push_err((*_self_)._field_p.ptr(), _21827_token,_21842_fmt,jule::Any(_21855_args));
}



inline void _1aa4a0548_push_suggestion(_1aa49e932_ExprBuilder* _self_, jule::Str _22334_fmt, jule::Slice<jule::Any> _22347_args) {
	_1aa4ada84_push_suggestion((*_self_)._field_p.ptr(), _22334_fmt,jule::Any(_22347_args));
}



inline jule::Ptr<_1e0129423_TupleExpr> _1aa4a0856_build_tuple(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>& _22735_parts) {
	jule::Ptr<_1e0129423_TupleExpr> _22817_tuple = jule::new_ptr<_1e0129423_TupleExpr>(_1e0129423_TupleExpr{._field_expr=jule::Slice<jule::Ptr<_1e0128b3c_Expr>>::alloc(0LL,_22735_parts.len())});;
	{
		auto &expr = _22735_parts;
		auto it = expr.begin();
		_iter_begin_1ad403e7c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _23121_part = *it;
			{
				_22817_tuple.get()._field_expr = jule::alloc_for_append(_22817_tuple.get()._field_expr,1);_22817_tuple.get()._field_expr.__push(_1aa4a9310_build_from_tokens(&(*_self_), _23121_part));;
			}
			_iter_next_1ad403e7c:;
			++it;
			goto _iter_begin_1ad403e7c;
		}
		_iter_end_1ad403e7c:;
	};
	return _22817_tuple;
}



inline jule::Ptr<_1e01297a8_LitExpr> _1aa4a0b64_build_lit(_1aa49e932_ExprBuilder* _self_, jule::Ptr<_1dd9941e0_Token> _23728_token) {
	return jule::new_ptr<_1e01297a8_LitExpr>(_1e01297a8_LitExpr{._field_token=_23728_token, ._field_value=_23728_token.get()._field_kind});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4a0e72_build_primitive_type(_1aa49e932_ExprBuilder* _self_, jule::Ptr<_1dd9941e0_Token>& _24440_token) {
	return _1aa4bd874_build_prim_type(_24440_token);
}



inline jule::Any _1aa4a1280_build_single(_1aa49e932_ExprBuilder* _self_, jule::Ptr<_1dd9941e0_Token> _24835_token) {
	{
		auto &_match_expr{ _24835_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1ad405159:;
			{
				return jule::Any(_1aa4a0b64_build_lit(&(*_self_), _24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ad4051c0:;
			{
				if ((_24835_token.get()._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1e012b39d_VariadicExpr>(_1e012b39d_VariadicExpr{._field_token=_24835_token, }));
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(28LLU) || _match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ad40527a:;
			{
				return jule::Any(_1aa49e459_build_ident_expr(_24835_token));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ad4052e1:;
			{
				return jule::Any(_1aa4a0e72_build_primitive_type(&(*_self_), _24835_token));
			}
		}
		_match_end_1ad404da1:;
	};
	_1aa4a0229_push_err(&(*_self_), _24835_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e012a7dc_IdentExpr> _1aa4a158d_build_cpp_linked_ident(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _26946_tokens) {
	if ((_26946_tokens[0LL].get()._field_id != static_cast<jule::U32>(31LLU))) {
		return nullptr;
	} else if ((_26946_tokens[1LL].get()._field_id != static_cast<jule::U32>(20LLU))) {
		_1aa4a0229_push_err(&(*_self_), _26946_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dd9941e0_Token> _27717_token = _26946_tokens[2LL];;
	if ((_27717_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4a0229_push_err(&(*_self_), _26946_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e012a7dc_IdentExpr> _28317_expr = _1aa49e459_build_ident_expr(_27717_token);;
	_28317_expr.get()._field_cpp_linked=true;
	return _28317_expr;
}



inline jule::Ptr<_1e012aee6_UnaryExpr> _1aa4a189b_build_unary(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _28834_tokens) {
	jule::Ptr<_1dd9941e0_Token> _28917_op = _28834_tokens[0LL];;
	if ((_28834_tokens.len() == 1LL)) {
		_1aa4a0229_push_err(&(*_self_), _28917_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1dd99492c_is_unary_op(_28917_op.get()._field_kind)))) {
		_1aa4a0229_push_err(&(*_self_), _28917_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_28917_op.get()._field_kind)}));
		return nullptr;
	};
	_28834_tokens=_28834_tokens.slice(1LL);
	return jule::new_ptr<_1e012aee6_UnaryExpr>(_1e012aee6_UnaryExpr{._field_op=_28917_op, ._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _28834_tokens)});
}



inline jule::Ptr<_1e012c080_SubIdentExpr> _1aa4a1ba9_build_obj_sub_ident(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _30942_tokens) {
	jule::I32 _31017_i = (_30942_tokens.len() - 1LL);;
	jule::Ptr<_1dd9941e0_Token> _31117_ident_token = _30942_tokens[_31017_i];;
	(_31017_i)--;
	_30942_tokens=_30942_tokens.slice(0LL,_31017_i);
	if ((_30942_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _31117_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e012c080_SubIdentExpr>(_1e012c080_SubIdentExpr{._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _30942_tokens), ._field_ident=_31117_ident_token});
}



inline jule::Ptr<_1e012bb0c_NsSelectionExpr> _1aa4a1eb7_build_ns_sub_ident(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _32442_tokens) {
	jule::Ptr<_1e012bb0c_NsSelectionExpr> _32517_ns = jule::new_ptr<_1e012bb0c_NsSelectionExpr>(_1e012bb0c_NsSelectionExpr{});;
	{
		auto &expr = _32442_tokens;
		auto it = expr.begin();
		_iter_begin_1ad411176:;
		if (it != expr.end()) {
			jule::I32 _32614_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _32621_token = *it;
			{
				if (((_32614_i & 1LL) == 0LL)) {
					if ((_32621_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
						_1aa4a0229_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aa4a0548_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_32517_ns.get()._field_ns = jule::alloc_for_append(_32517_ns.get()._field_ns,1);_32517_ns.get()._field_ns.__push(_32621_token);;
				} else if ((_32621_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
					_1aa4a0229_push_err(&(*_self_), _32621_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aa4a0548_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ad411176:;
			++it;
			_32614_i++;
			goto _iter_begin_1ad411176;
		}
		_iter_end_1ad411176:;
	};
	_32517_ns.get()._field_ident=_32517_ns.get()._field_ns[(_32517_ns.get()._field_ns.len() - 1LL)];
	_32517_ns.get()._field_ns=_32517_ns.get()._field_ns.slice(0LL,(_32517_ns.get()._field_ns.len() - 1LL));
	return _32517_ns;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4a22c5_build_type(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _34334_tokens) {
	jule::I32 _34417_i = 0LL;;
	jule::Ptr<_1e01253db_TypeDecl> _34518_t;;
	jule::Bool _34521_ok;;
	std::tie(_34518_t,_34521_ok) = _1aa4b017e_build_type((*_self_)._field_p, _34334_tokens,(&(_34417_i)),false);
	if ((!(_34521_ok))) {
		_1aa4a0229_push_err(&(*_self_), _34334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_34417_i < _34334_tokens.len())) {
		_1aa4a0229_push_err(&(*_self_), _34334_tokens[_34417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _34518_t;
}



inline jule::Any _1aa4a25d3_build_sub_ident(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _35739_tokens) {
	jule::I32 _35813_i = (_35739_tokens.len() - 2LL);;
	jule::Ptr<_1dd9941e0_Token> _35913_token = _35739_tokens[_35813_i];;
	{
		auto &_match_expr{ _35913_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1ad418205:;
			{
				return jule::Any(_1aa4a1ba9_build_obj_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1ad418d71:;
			{
				return jule::Any(_1aa4a1eb7_build_ns_sub_ident(&(*_self_), _35739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad418dd7:;
			{
				if ((_35913_token.get()._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1aa4a22c5_build_type(&(*_self_), _35739_tokens));
				};
			}
		}
		_match_end_1ad418c0b:;
	};
	_1aa4a0229_push_err(&(*_self_), _35913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e012b39d_VariadicExpr> _1aa4a28e1_build_variadic(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _37537_tokens) {
	jule::Ptr<_1dd9941e0_Token> _37617_token = _37537_tokens[(_37537_tokens.len() - 1LL)];;
	_37537_tokens=_37537_tokens.slice(0LL,(_37537_tokens.len() - 1LL));
	return jule::new_ptr<_1e012b39d_VariadicExpr>(_1e012b39d_VariadicExpr{._field_token=_37617_token, ._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _37537_tokens)});
}



inline jule::Any _1aa4a2bee_build_op_right(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _38438_tokens) {
	jule::Ptr<_1dd9941e0_Token> _38517_token = _38438_tokens[(_38438_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _38517_token.get()._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ad41c814:;
			{
				_38438_tokens=_38438_tokens.slice(0LL,(_38438_tokens.len() - 1LL));
				jule::Any _38921_d = _1aa4a8be4_build(&(*_self_), _38438_tokens);;
				if ((_38921_d == nullptr)) {
					return nullptr;
				};
				{
					auto &_match_expr{ _38921_d };
					
					if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>()) {
						_case_begin_1ad41e6e5:;
						{
							_38921_d.operator jule::Ptr<_1e012cb0d_FnCallExpr>().get()._field_exception=jule::new_ptr<_1e013340a_ScopeTree>(_1e013340a_ScopeTree{._field_deferred=true, });
							return jule::Any(_38921_d);
						}
					}
					_match_end_1ad41e690:;
				};
			}
		}
		_match_end_1ad41d02e:;
	};
	_1aa4a0229_push_err(&(*_self_), _38517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4a302e_build_between_parentheses(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _40548_tokens) {
	if ((_40548_tokens.len() == 2LL)) {
		_1aa4a0229_push_err(&(*_self_), _40548_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	};
	_40548_tokens=_40548_tokens.slice(1LL,(_40548_tokens.len() - 1LL));
	jule::Ptr<_1e0128b3c_Expr> _41217_expr = _1aa4a9310_build_from_tokens(&(*_self_), _40548_tokens);;
	_41217_expr.get()._field_range=true;
	return _41217_expr;
}



inline jule::Ptr<_1e012b755_CastExpr> _1aa4a334d_try_build_cast(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _41738_tokens) {
	jule::I32 _41817_range_n = 0LL;;
	{
		auto &expr = _41738_tokens;
		auto it = expr.begin();
		_iter_begin_1ad423386:;
		if (it != expr.end()) {
			jule::I32 _41913_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _41916_token = *it;
			{
				if ((_41916_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _41916_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad42472d:;
							{
								(_41817_range_n)++;
								goto _iter_next_1ad423386;
							}
						}
						else {
							_case_begin_1ad424145:;
							{
								(_41817_range_n)--;
							}
						}
						_match_end_1ad424332:;
					};
				};
				if ((_41817_range_n > 0LL)) {
					goto _iter_next_1ad423386;
				} else if (((_41913_i + 1LL) == _41738_tokens.len())) {
					return nullptr;
				};
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _43821_type_tokens = _41738_tokens.slice(0LL,(_41913_i + 1LL));;
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _43921_expr_tokens = _41738_tokens.slice((_41913_i + 1LL));;
				if ((_43921_expr_tokens.len() == 0LL)) {
					return nullptr;
				};
				jule::Ptr<_1dd9941e0_Token> _44617_tok = _43921_expr_tokens[0LL];;
				if (((_44617_tok.get()._field_id != static_cast<jule::U32>(3LLU)) || (_44617_tok.get()._field_kind != jule::Str("(", 1)))) {
					return nullptr;
				};
				jule::Ptr<_1e012b755_CastExpr> _45121_cast = jule::new_ptr<_1e012b755_CastExpr>(_1e012b755_CastExpr{});;
				if ((_43921_expr_tokens.len() == 2LL)) {
					_1aa4a0229_push_err(&(*_self_), _43921_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1aa4a0548_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_43821_type_tokens.len() == 2LL)) {
					_1aa4a0229_push_err(&(*_self_), _43821_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1aa4a0548_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_43821_type_tokens=_43821_type_tokens.slice(1LL,(_43821_type_tokens.len() - 1LL));
					jule::I32 _46525_type_index = 0LL;;
					jule::Ptr<_1e01253db_TypeDecl> _46626_t;;
					jule::Bool _46629_ok;;
					std::tie(_46626_t,_46629_ok) = _1aa4b017e_build_type((*_self_)._field_p, _43821_type_tokens,(&(_46525_type_index)),true);
					if ((_46629_ok && (_46525_type_index < _43821_type_tokens.len()))) {
						_1aa4a0229_push_err(&(*_self_), _43821_type_tokens[_46525_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_46629_ok))) {
						return _45121_cast;
					};
					_45121_cast.get()._field_kind=_46626_t;
					if ((_43921_expr_tokens.len() > 2LL)) {
						jule::I32 _47629_j = 0LL;;
						_1aa4ab422_range(_47629_j,jule::Str("(", 1),jule::Str(")", 1),_43921_expr_tokens);
						if ((_47629_j < _43921_expr_tokens.len())) {
							return nullptr;
						};
						_43921_expr_tokens=_43921_expr_tokens.slice(0LL,_47629_j);
						_45121_cast.get()._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _43921_expr_tokens);
					};
				};
				return _45121_cast;
			}
			_iter_next_1ad423386:;
			++it;
			_41913_i++;
			goto _iter_begin_1ad423386;
		}
		_iter_end_1ad423386:;
	};
	return nullptr;
}



inline void _1aa4a3716_push_arg(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1e0128b3c_Expr>>& _49132_args, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _49151_tokens, jule::Ptr<_1dd9941e0_Token> _49169_err_token) {
	if ((_49151_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _49169_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_49132_args = jule::alloc_for_append(_49132_args,1);_49132_args.__push(_1aa4a9310_build_from_tokens(&(*_self_), _49151_tokens));;
}



inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4a3a24_build_args(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _50033_tokens) {
	if ((_50033_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _50617_args = nullptr;;
	jule::I32 _50717_last = 0LL;;
	jule::I32 _50817_range_n = 0LL;;
	_50033_tokens=_50033_tokens.slice(1LL,(_50033_tokens.len() - 1LL));
	{
		auto &expr = _50033_tokens;
		auto it = expr.begin();
		_iter_begin_1ad432450:;
		if (it != expr.end()) {
			jule::I32 _51013_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _51016_token = *it;
			{
				if ((_51016_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _51016_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad433b5a:;
							{
								(_50817_range_n)++;
							}
						}
						else {
							_case_begin_1ad433572:;
							{
								(_50817_range_n)--;
							}
						}
						_match_end_1ad43375e:;
					};
				};
				if (((_50817_range_n > 0LL) || (_51016_token.get()._field_id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ad432450;
				};
				_1aa4a3716_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last,_51013_i),_51016_token);
				_50717_last=static_cast<jule::I32>((_51013_i + 1LL));
			}
			_iter_next_1ad432450:;
			++it;
			_51013_i++;
			goto _iter_begin_1ad432450;
		}
		_iter_end_1ad432450:;
	};
	if ((_50717_last < _50033_tokens.len())) {
		if ((_50717_last == 0LL)) {
			if ((_50033_tokens.len() > 0LL)) {
				_1aa4a3716_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[_50717_last]);
			};
		} else {
			_1aa4a3716_push_arg(&(*_self_), _50617_args,_50033_tokens.slice(_50717_last),_50033_tokens[(_50717_last - 1LL)]);
		};
	};
	return _50617_args;
}



inline jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _1aa4a3d32_build_call_generics(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _54242_tokens) {
	if ((_54242_tokens.len() == 0LL)) {
		return nullptr;
	};
	_54242_tokens=_54242_tokens.slice(1LL,(_54242_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _54818_parts;;
	jule::Slice<_1dd65aa00_Log> _54825_errs;;
	std::tie(_54818_parts,_54825_errs) = _1aa4abae8_parts(_54242_tokens,static_cast<jule::U32>(8LLU),true);
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _54917_generics = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>::alloc(0LL,_54818_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_54825_errs);
	{
		auto &expr = _54818_parts;
		auto it = expr.begin();
		_iter_begin_1ad438c09:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _55121_part = *it;
			{
				if ((_55121_part.len() == 0LL)) {
					goto _iter_next_1ad438c09;
				};
				jule::I32 _55521_j = 0LL;;
				jule::Ptr<_1e01253db_TypeDecl> _55622_generic;;
				std::tie(_55622_generic,std::ignore) = _1aa4b017e_build_type((*_self_)._field_p, _55121_part,(&(_55521_j)),true);
				if ((_55521_j < _55121_part.len())) {
					_1aa4a0229_push_err(&(*_self_), _55121_part[_55521_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_54917_generics = jule::alloc_for_append(_54917_generics,1);_54917_generics.__push(_55622_generic);;
			}
			_iter_next_1ad438c09:;
			++it;
			goto _iter_begin_1ad438c09;
		}
		_iter_end_1ad438c09:;
	};
	return _54917_generics;
}



inline jule::Ptr<_1e012cb0d_FnCallExpr> _1aa4a41d9_build_fn_call(_1aa49e932_ExprBuilder* _self_, jule::Ptr<_1dd9941e0_Token>& _56637_token, jule::Ptr<_1aa49d4d0_CallData>& _56657_data) {
	return jule::new_ptr<_1e012cb0d_FnCallExpr>(_1e012cb0d_FnCallExpr{._field_token=_56637_token, ._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _56657_data.get()._field_expr_tokens), ._field_generics=_1aa4a3d32_build_call_generics(&(*_self_), _56657_data.get()._field_generics_tokens), ._field_args=_1aa4a3a24_build_args(&(*_self_), _56657_data.get()._field_args_tokens), });
}



inline jule::Any _1aa4a4519_build_parentheses_range(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _57547_tokens) {
	jule::Ptr<_1dd9941e0_Token> _57617_token = _57547_tokens[0LL];;
	{
		auto &_match_expr{ _57617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ad43d12b:;
			{
				{
					auto &_match_expr{ _57617_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ad43e01c:;
						{
							jule::Ptr<_1e012b755_CastExpr> _58125_expr = _1aa4a334d_try_build_cast(&(*_self_), _57547_tokens);;
							if ((_58125_expr != nullptr)) {
								return jule::Any(_58125_expr);
							};
						}
					}
					_match_end_1ad43de95:;
				};
			}
		}
		_match_end_1ad43d67b:;
	};
	jule::Ptr<_1aa49d4d0_CallData> _58817_data = _1aa49d843_get_call_data(_57547_tokens);;
	if ((_58817_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1aa4a302e_build_between_parentheses(&(*_self_), _58817_data.get()._field_args_tokens));
	};
	return jule::Any(_1aa4a41d9_build_fn_call(&(*_self_), _57617_token,_58817_data));
}



inline jule::Ptr<_1e0129eb2_UnsafeExpr> _1aa4a4838_build_unsafe_expr(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _59940_tokens) {
	jule::Ptr<_1dd9941e0_Token> _60017_token = _59940_tokens[0LL];;
	_59940_tokens=_59940_tokens.slice(1LL);
	jule::I32 _60217_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _60317_range_tokens = _1aa4ab422_range(_60217_i,jule::Str("{", 1),jule::Str("}", 1),_59940_tokens);;
	if ((_60317_range_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _59940_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e0129eb2_UnsafeExpr>(_1e0129eb2_UnsafeExpr{._field_token=_60017_token, ._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _60317_range_tokens)});
}



inline jule::Ptr<_1e0134e01_FnDecl> _1aa4a4b46_build_anon_fn(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _61437_tokens) {
	jule::Ptr<_1e0134e01_FnDecl> _61517_f = _1aa4b4309_build_fn((*_self_)._field_p, _61437_tokens,false,false);;
	if ((!(_1e0135253_is_anon(_61517_f.ptr())))) {
		_1aa4a0229_push_err(&(*_self_), _61517_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _61517_f;
}



inline jule::Any _1aa4a4e54_build_unsafe(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _62336_tokens) {
	{
		auto &_match_expr{ _62336_tokens[1LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ad446992:;
			{
				return jule::Any(_1aa4a4b46_build_anon_fn(&(*_self_), _62336_tokens));
			}
		}
		else {
			_case_begin_1ad445a3a:;
			{
				return jule::Any(_1aa4a4838_build_unsafe_expr(&(*_self_), _62336_tokens));
			}
		}
		_match_end_1ad445e36:;
	};
}



inline void _1aa4a531c_push_range_lit_part(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _63342_part, jule::Ptr<_1dd9941e0_Token> _6349_error_token, jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>& _63435_parts) {
	if ((_63342_part.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _6349_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_63435_parts = jule::alloc_for_append(_63435_parts,1);_63435_parts.__push(_63342_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4a564c_get_brace_range_lit_expr_parts(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _64453_tokens) {
	if ((_64453_tokens.len() < 2LL)) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _65017_parts = nullptr;;
	jule::I32 _65217_last = 0LL;;
	jule::I32 _65317_range_n = 0LL;;
	_64453_tokens=_64453_tokens.slice(1LL,(_64453_tokens.len() - 1LL));
	{
		auto &expr = _64453_tokens;
		auto it = expr.begin();
		_iter_begin_1ad44a1b0:;
		if (it != expr.end()) {
			jule::I32 _65513_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _65516_token = *it;
			{
				if ((_65516_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _65516_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ad44b8ba:;
							{
								(_65317_range_n)++;
							}
						}
						else {
							_case_begin_1ad44b2d2:;
							{
								(_65317_range_n)--;
							}
						}
						_match_end_1ad44b4be:;
					};
				};
				if (((_65317_range_n > 0LL) || (_65516_token.get()._field_id != static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1ad44a1b0;
				};
				_1aa4a531c_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last,_65513_i),_65516_token,_65017_parts);
				_65217_last=static_cast<jule::I32>((_65513_i + 1LL));
			}
			_iter_next_1ad44a1b0:;
			++it;
			_65513_i++;
			goto _iter_begin_1ad44a1b0;
		}
		_iter_end_1ad44a1b0:;
	};
	if ((_65217_last < _64453_tokens.len())) {
		if ((_65217_last == 0LL)) {
			if ((_64453_tokens.len() > 0LL)) {
				_1aa4a531c_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[_65217_last],_65017_parts);
			};
		} else {
			_1aa4a531c_push_range_lit_part(&(*_self_), _64453_tokens.slice(_65217_last),_64453_tokens[(_65217_last - 1LL)],_65017_parts);
		};
	};
	return _65017_parts;
}



inline jule::Ptr<_1e012d625_FieldExprPair> _1aa4a596b_build_field_expr_pair(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _68644_tokens) {
	if (((_68644_tokens.len() - 2LL) == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _68644_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e012d625_FieldExprPair> _69117_pair = jule::new_ptr<_1e012d625_FieldExprPair>(_1e012d625_FieldExprPair{._field_field=_68644_tokens[0LL], });;
	_68644_tokens=_68644_tokens.slice(2LL);
	_69117_pair.get()._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _68644_tokens);
	return _69117_pair;
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4a5c79_build_struct_lit_expr(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _69945_tokens) {
	jule::Ptr<_1dd9941e0_Token> _70017_token = _69945_tokens[0LL];;
	if (((_70017_token.get()._field_id == static_cast<jule::U32>(2LLU)) && (_69945_tokens.len() > 1LL))) {
		_70017_token=_69945_tokens[1LL];
		if ((_70017_token.get()._field_id == static_cast<jule::U32>(11LLU))) {
			return jule::new_ptr<_1e0128b3c_Expr>(_1e0128b3c_Expr{._field_token=_70017_token, ._field_end=_69945_tokens[(_69945_tokens.len() - 1LL)], ._field_kind=jule::Any(_1aa4a596b_build_field_expr_pair(&(*_self_), _69945_tokens))});
		};
	};
	return _1aa4a9310_build_from_tokens(&(*_self_), _69945_tokens);
}



inline jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _1aa4a6087_build_struct_lit_exprs(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _71446_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _71517_parts = _1aa4a564c_get_brace_range_lit_expr_parts(&(*_self_), _71446_tokens);;
	if ((_71517_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e0128b3c_Expr>> _72017_pairs = jule::Slice<jule::Ptr<_1e0128b3c_Expr>>::alloc(0LL,_71517_parts.len());;
	{
		auto &expr = _71517_parts;
		auto it = expr.begin();
		_iter_begin_1ad455b7c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _72121_part = *it;
			{
				_72017_pairs = jule::alloc_for_append(_72017_pairs,1);_72017_pairs.__push(_1aa4a5c79_build_struct_lit_expr(&(*_self_), _72121_part));;
			}
			_iter_next_1ad455b7c:;
			++it;
			goto _iter_begin_1ad455b7c;
		}
		_iter_end_1ad455b7c:;
	};
	return _72017_pairs;
}



inline jule::Ptr<_1e012ddea_StructLit> _1aa4a63b7_build_typed_struct_literal(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _72749_tokens) {
	jule::I32 _72817_i = 0LL;;
	jule::Ptr<_1e01253db_TypeDecl> _72918_t;;
	jule::Bool _72921_ok;;
	std::tie(_72918_t,_72921_ok) = _1aa4b017e_build_type((*_self_)._field_p, _72749_tokens,(&(_72817_i)),true);
	if ((!(_72921_ok))) {
		return nullptr;
	} else if ((_72817_i >= _72749_tokens.len())) {
		_1aa4a0229_push_err(&(*_self_), _72749_tokens[_72817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_72749_tokens=_72749_tokens.slice(_72817_i);
	jule::Ptr<_1dd9941e0_Token> _73813_token = _72749_tokens[0LL];;
	if (((_73813_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_73813_token.get()._field_kind != jule::Str("{", 1)))) {
		_1aa4a0229_push_err(&(*_self_), _73813_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e012ddea_StructLit>(_1e012ddea_StructLit{._field_end=_72749_tokens[(_72749_tokens.len() - 1LL)], ._field_kind=_72918_t, ._field_exprs=_1aa4a6087_build_struct_lit_exprs(&(*_self_), _72749_tokens)});
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4a66d6_build_brace_lit_part(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _75144_tokens) {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _75218_l;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _75225_r;;
	std::tie(_75218_l,_75225_r) = _1aa49ddc6_split_colon(_75144_tokens);
	if ((_75218_l != nullptr)) {
		return jule::new_ptr<_1e0128b3c_Expr>(_1e0128b3c_Expr{._field_token=_75144_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1e012eb43_KeyValPair>(_1e012eb43_KeyValPair{._field_key=_1aa4a9310_build_from_tokens(&(*_self_), _75218_l), ._field_val=_1aa4a9310_build_from_tokens(&(*_self_), _75225_r), ._field_colon=_75144_tokens[_75218_l.len()]}))});
	};
	return _1aa4a9310_build_from_tokens(&(*_self_), _75144_tokens);
}



inline jule::Ptr<_1e012e36d_BraceLit> _1aa4a69e4_build_brace_lit(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _76739_tokens) {
	jule::Ptr<_1e012e36d_BraceLit> _76817_lit = jule::new_ptr<_1e012e36d_BraceLit>(_1e012e36d_BraceLit{._field_token=_76739_tokens[0LL], ._field_end=_76739_tokens[(_76739_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _77317_parts = _1aa4a564c_get_brace_range_lit_expr_parts(&(*_self_), _76739_tokens);;
	if ((_77317_parts == nullptr)) {
		return _76817_lit;
	};
	_76817_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1e0128b3c_Expr>>::alloc(0LL,_77317_parts.len());
	{
		auto &expr = _77317_parts;
		auto it = expr.begin();
		_iter_begin_1ad9e2427:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _77921_part = *it;
			{
				_76817_lit.get()._field_exprs = jule::alloc_for_append(_76817_lit.get()._field_exprs,1);_76817_lit.get()._field_exprs.__push(_1aa4a66d6_build_brace_lit_part(&(*_self_), _77921_part));;
			}
			_iter_next_1ad9e2427:;
			++it;
			goto _iter_begin_1ad9e2427;
		}
		_iter_end_1ad9e2427:;
	};
	return _76817_lit;
}



inline jule::Any _1aa4a6d02_build_brace_range(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _78641_tokens) {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _78718_expr_tokens;;
	jule::I32 _78731_range_n;;
	std::tie(_78718_expr_tokens,_78731_range_n) = _1aa49e701_get_range_expr_tokens(_78641_tokens);
	{
		
		if ((_78718_expr_tokens.len() == 0LL)) {
			_case_begin_1ad9e3bba:;
			{
				return jule::Any(_1aa4a69e4_build_brace_lit(&(*_self_), _78641_tokens));
			}
		}
		else if ((_78731_range_n > 0LL)) {
			_case_begin_1ad9e3c42:;
			{
				_1aa4a0229_push_err(&(*_self_), _78641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad9e3b10:;
	};
	jule::Ptr<_1dd9941e0_Token> _79813_else_token = _78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)];;
	if ((_78718_expr_tokens[(_78718_expr_tokens.len() - 1LL)].get()._field_id == static_cast<jule::U32>(17LLU))) {
		_78718_expr_tokens=_78718_expr_tokens.slice(0LL,(_78718_expr_tokens.len() - 1LL));
		jule::Any _80121_d = _1aa4a8be4_build(&(*_self_), _78718_expr_tokens);;
		if ((_80121_d == nullptr)) {
			return nullptr;
		};
		{
			auto &_match_expr{ _80121_d };
			
			if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>()) {
				_case_begin_1ad9e7bd0:;
				{
					_78641_tokens=_78641_tokens.slice((_78718_expr_tokens.len() + 1LL));
					jule::I32 _80825_i = 0LL;;
					jule::Slice<jule::Ptr<_1dd9941e0_Token>> _80925_range_tokens = _1aa4ab422_range(_80825_i,jule::Str("{", 1),jule::Str("}", 1),_78641_tokens);;
					jule::Ptr<_1e012cb0d_FnCallExpr> _81025_model = _80121_d.operator jule::Ptr<_1e012cb0d_FnCallExpr>();;
					if (_1e012d2e5_ignored(_81025_model.ptr())) {
						_1aa4a0229_push_err(&(*_self_), _79813_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aa4a0548_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_81025_model.get()._field_exception=_1aa4ae7cc_build_scope((*_self_)._field_p, _80925_range_tokens,_78641_tokens[(_80825_i - 1LL)]);
					return jule::Any(_80121_d);
				}
			}
			else {
				_case_begin_1ad9e6e32:;
				{
					_1aa4a0229_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
			_match_end_1ad9e6dcc:;
		};
	};
	{
		auto &_match_expr{ _78718_expr_tokens[0LL].get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1ad9ec146:;
			{
				return jule::Any(_1aa4a4e54_build_unsafe(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1ad9ec047:;
			{
				return jule::Any(_1aa4a4b46_build_anon_fn(&(*_self_), _78641_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1ad9ec0ad:;
			{
				return jule::Any(_1aa4a63b7_build_typed_struct_literal(&(*_self_), _78641_tokens));
			}
		}
		else {
			_case_begin_1ad9e3a44:;
			{
				_1aa4a0229_push_err(&(*_self_), _78718_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad9eb266:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4a7110_get_enumerable_parts(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _83843_tokens) {
	_83843_tokens=_83843_tokens.slice(1LL,(_83843_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _84018_parts;;
	jule::Slice<_1dd65aa00_Log> _84025_errors;;
	std::tie(_84018_parts,_84025_errors) = _1aa4abae8_parts(_83843_tokens,static_cast<jule::U32>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84025_errors);
	return _84018_parts;
}



inline jule::Ptr<_1e013032a_SliceExpr> _1aa4a741d_build_slice(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _84534_tokens) {
	jule::Ptr<_1e013032a_SliceExpr> _84617_slc = jule::new_ptr<_1e013032a_SliceExpr>(_1e013032a_SliceExpr{._field_token=_84534_tokens[0LL], ._field_end=_84534_tokens[(_84534_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _85117_parts = _1aa4a7110_get_enumerable_parts(&(*_self_), _84534_tokens);;
	if ((_85117_parts.len() == 0LL)) {
		return _84617_slc;
	};
	_84617_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1e0128b3c_Expr>>::alloc(0LL,_85117_parts.len());
	{
		auto &expr = _85117_parts;
		auto it = expr.begin();
		_iter_begin_1ada02305:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _85721_p = *it;
			{
				if ((_85721_p.len() == 0LL)) {
					goto _iter_next_1ada02305;
				};
				_84617_slc.get()._field_exprs = jule::alloc_for_append(_84617_slc.get()._field_exprs,1);_84617_slc.get()._field_exprs.__push(_1aa4a9310_build_from_tokens(&(*_self_), _85721_p));;
			}
			_iter_next_1ada02305:;
			++it;
			goto _iter_begin_1ada02305;
		}
		_iter_end_1ada02305:;
	};
	return _84617_slc;
}



inline jule::Ptr<_1e0130b99_IndexingExpr> _1aa4a786e_build_indexing(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _86737_expr_tokens, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _86813_tokens, jule::Ptr<_1dd9941e0_Token> _86835_error_token) {
	jule::Ptr<_1dd9941e0_Token> _86917_end = _86813_tokens[(_86813_tokens.len() - 1LL)];;
	_86813_tokens=_86813_tokens.slice(1LL,(_86813_tokens.len() - 1LL));
	if ((_86813_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _86835_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0128b3c_Expr> _87517_expr = _1aa4a9310_build_from_tokens(&(*_self_), _86737_expr_tokens);;
	if ((_87517_expr == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e0128b3c_Expr> _87917_index = _1aa4a9310_build_from_tokens(&(*_self_), _86813_tokens);;
	if ((_87917_index == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e0130b99_IndexingExpr>(_1e0130b99_IndexingExpr{._field_token=_86835_error_token, ._field_end=_86917_end, ._field_expr=_87517_expr, ._field_index=_87917_index});
}



inline jule::Ptr<_1e01312a4_SlicingExpr> _1aa4a7e13_build_slicing(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _89137_expr_tokens, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _89165_slicing_tokens, jule::I32& _89210_colon, jule::Ptr<_1dd9941e0_Token>& _89227_error_token, jule::Ptr<_1dd9941e0_Token> _89252_end) {
	jule::Ptr<_1e01312a4_SlicingExpr> _89317_slc = jule::new_ptr<_1e01312a4_SlicingExpr>(_1e01312a4_SlicingExpr{._field_token=_89227_error_token, ._field_end=_89252_end, ._field_expr=_1aa4a9310_build_from_tokens(&(*_self_), _89137_expr_tokens), });;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _89917_start_expr_tokens = _89165_slicing_tokens.slice(0LL,_89210_colon);;
	if ((_89917_start_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_start=_1aa4a9310_build_from_tokens(&(*_self_), _89917_start_expr_tokens);
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _90417_to_expr_tokens = _89165_slicing_tokens.slice((_89210_colon + 1LL));;
	if ((_90417_to_expr_tokens.len() > 0LL)) {
		_89317_slc.get()._field_to=_1aa4a9310_build_from_tokens(&(*_self_), _90417_to_expr_tokens);
	};
	return _89317_slc;
}



inline jule::Any _1aa4a8221_build_bracket_range(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _91242_tokens) {
	jule::Ptr<_1dd9941e0_Token> _91317_error_token = _91242_tokens[0LL];;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _91418_expr_tokens;;
	jule::I32 _91431_range_n;;
	std::tie(_91418_expr_tokens,_91431_range_n) = _1aa49e701_get_range_expr_tokens(_91242_tokens);
	{
		
		if ((_91418_expr_tokens.len() == 0LL)) {
			_case_begin_1ada0ab5a:;
			{
				return jule::Any(_1aa4a741d_build_slice(&(*_self_), _91242_tokens));
			}
		}
		else if (((_91418_expr_tokens.len() == 0LL) || (_91431_range_n > 0LL))) {
			_case_begin_1ada0abd2:;
			{
				_1aa4a0229_push_err(&(*_self_), _91317_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ada0aaa0:;
	};
	_91242_tokens=_91242_tokens.slice(_91418_expr_tokens.len());
	jule::I32 _93217_i = 0LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _93318_slicing_tokens;;
	jule::I32 _93334_colon;;
	std::tie(_93318_slicing_tokens,_93334_colon) = _1aa4bdbb5_split_map_range(_91242_tokens,_93217_i);
	if ((_93334_colon != -1LL)) {
		return jule::Any(_1aa4a7e13_build_slicing(&(*_self_), _91418_expr_tokens,_93318_slicing_tokens,_93334_colon,_91317_error_token,_91242_tokens[(_91242_tokens.len() - 1LL)]));
	};
	return jule::Any(_1aa4a786e_build_indexing(&(*_self_), _91418_expr_tokens,_91242_tokens,_91317_error_token));
}



inline jule::Any _1aa4a852e_build_data(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _94034_tokens) {
	{
		auto _match_expr{ _94034_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ada0ebc5:;
			{
				return nullptr;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ada0ec3b:;
			{
				return jule::Any(_1aa4a1280_build_single(&(*_self_), _94034_tokens[0LL]));
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ada0eca2:;
			{
				if ((_94034_tokens[0LL].get()._field_id == static_cast<jule::U32>(31LLU))) {
					return jule::Any(_1aa4a158d_build_cpp_linked_ident(&(*_self_), _94034_tokens));
				};
			}
		}
		_match_end_1ada0eb5e:;
	};
	jule::Ptr<_1dd9941e0_Token> _95217_token = _94034_tokens[(_94034_tokens.len() - 1LL)];;
	if (((_95217_token.get()._field_id == static_cast<jule::U32>(7LLU)) && (_95217_token.get()._field_kind == jule::Str("...", 3)))) {
		return jule::Any(_1aa4a28e1_build_variadic(&(*_self_), _94034_tokens));
	};
	_95217_token=_94034_tokens[0LL];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ada13091:;
			{
				if (((_94034_tokens.len() > 1LL) && (_95217_token.get()._field_kind == jule::Str("*", 1)))) {
					_95217_token=_94034_tokens[1LL];
					if (((_95217_token.get()._field_id == static_cast<jule::U32>(1LLU)) || (_95217_token.get()._field_id == static_cast<jule::U32>(35LLU)))) {
						return jule::Any(_1aa4a22c5_build_type(&(*_self_), _94034_tokens));
					};
				};
				return jule::Any(_1aa4a189b_build_unary(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ada13107:;
			{
				if ((_94034_tokens.len() < 3LL)) {
					goto _match_end_1ada1303b;
				};
				if ((_94034_tokens.len() > 3LL)) {
					jule::Ptr<_1dd9941e0_Token> _97421_t = _94034_tokens[(_94034_tokens.len() - 1LL)];;
					if (((_97421_t.get()._field_id == static_cast<jule::U32>(3LLU)) && (_97421_t.get()._field_kind == jule::Str(")", 1)))) {
						goto _match_end_1ada1303b;
					};
				};
				jule::Ptr<_1dd9941e0_Token> _98017_next = _94034_tokens[1LL];;
				if (((_98017_next.get()._field_id != static_cast<jule::U32>(3LLU)) || (_98017_next.get()._field_kind != jule::Str("]", 1)))) {
					goto _match_end_1ada1303b;
				};
				return jule::Any(_1aa4a22c5_build_type(&(*_self_), _94034_tokens));
			}
		}
		_match_end_1ada1303b:;
	};
	_95217_token=_94034_tokens[(_94034_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _95217_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1ada0ed18:;
			{
				return jule::Any(_1aa4a25d3_build_sub_ident(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1ada13190:;
			{
				return jule::Any(_1aa4a22c5_build_type(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ada18a03:;
			{
				return jule::Any(_1aa4a2bee_build_op_right(&(*_self_), _94034_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ada18a69:;
			{
				{
					auto &_match_expr{ _95217_token.get()._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ada1a5a4:;
						{
							return jule::Any(_1aa4a4519_build_parentheses_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ada1a61a:;
						{
							return jule::Any(_1aa4a6d02_build_brace_range(&(*_self_), _94034_tokens));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ada1a719:;
						{
							return jule::Any(_1aa4a8221_build_bracket_range(&(*_self_), _94034_tokens));
						}
					}
					_match_end_1ada1a054:;
				};
			}
		}
		_match_end_1ada13613:;
	};
	_1aa4a0229_push_err(&(*_self_), _95217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;
}



inline jule::Ptr<_1e012c503_BinopExpr> _1aa4a88d6_build_binop(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _101135_tokens, jule::I32 _101153_i) {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _101217_left_tokens = _101135_tokens.slice(0LL,_101153_i);;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _101317_right_tokens = _101135_tokens.slice((_101153_i + 1LL));;
	if ((_101217_left_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _101135_tokens[_101153_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_101317_right_tokens.len() == 0LL)) {
		_1aa4a0229_push_err(&(*_self_), _101135_tokens[_101153_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4a0548_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e012c503_BinopExpr>(_1e012c503_BinopExpr{._field_left=_1aa4a9310_build_from_tokens(&(*_self_), _101217_left_tokens), ._field_right=_1aa4a9310_build_from_tokens(&(*_self_), _101317_right_tokens), ._field_op=_101135_tokens[_101153_i]});
}



inline jule::Any _1aa4a8be4_build(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _103129_tokens) {
	jule::I32 _103213_i = _1aa49e1b2_find_lowest_prec_op(_103129_tokens);;
	if ((_103213_i == -1LL)) {
		return jule::Any(_1aa4a852e_build_data(&(*_self_), _103129_tokens));
	};
	return jule::Any(_1aa4a88d6_build_binop(&(*_self_), _103129_tokens,_103213_i));
}



inline jule::Any _1aa4a9002_build_kind(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _103934_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _104018_parts;;
	jule::Slice<_1dd65aa00_Log> _104025_errors;;
	std::tie(_104018_parts,_104025_errors) = _1aa4abae8_parts(_103934_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_104025_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_104025_errors);
		return nullptr;
	} else if ((_104018_parts.len() > 1LL)) {
		return jule::Any(_1aa4a0856_build_tuple(&(*_self_), _104018_parts));
	};
	return jule::Any(_1aa4a8be4_build(&(*_self_), _103934_tokens));
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4a9310_build_from_tokens(_1aa49e932_ExprBuilder* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _105040_tokens) {
	if ((_105040_tokens.len() == 0LL)) {
		return nullptr;
	};
	return jule::new_ptr<_1e0128b3c_Expr>(_1e0128b3c_Expr{._field_token=_105040_tokens[0LL], ._field_end=_105040_tokens[(_105040_tokens.len() - 1LL)], ._field_kind=jule::Any(_1aa4a9002_build_kind(&(*_self_), _105040_tokens))});
}







std::ostream &operator<<(std::ostream &_Stream, _1aa49e932_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4a9be5_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4ad138_stop(_1aa4acd08_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1aa4ad39c_stopped(_1aa4acd08_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1aa4ad765_push_err(_1aa4acd08_Parser* _self_, jule::Ptr<_1dd9941e0_Token> _23527_token, jule::Str _23542_fmt, jule::Slice<jule::Any> _23555_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1aa4ac2ad_compiler_err(_23527_token,_23542_fmt,jule::Any(_23555_args)));;
}



inline void _1aa4ada84_push_suggestion(_1aa4acd08_Parser* _self_, jule::Str _24034_fmt, jule::Slice<jule::Any> _24047_args) {
	{
		_1aa4ac610_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_24034_fmt,jule::Any(_24047_args));
	};
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4add92_build_expr(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _24435_tokens) {
	jule::Ptr<_1aa49e932_ExprBuilder> _24517_ep = jule::new_ptr<_1aa49e932_ExprBuilder>(_1aa49e932_ExprBuilder{._field_p=_self_});;
	jule::Ptr<_1e0128b3c_Expr> _24817_expr = _1aa4a9310_build_from_tokens(_24517_ep.ptr(), _24435_tokens);;
	return _24817_expr;
}



inline jule::Ptr<_1e0124e35_Directive> _1aa4ae1a0_build_directive(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _25238_tokens) {
	if ((_25238_tokens.len() == 1LL)) {
		_1aa4ad765_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_25238_tokens[1LL].get()._field_column != (_25238_tokens[0LL].get()._field_column + 1LL))) {
		_1aa4ad765_push_err(&(*_self_), _25238_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e0124e35_Directive>(_1e0124e35_Directive{._field_tag=_25238_tokens[1LL], ._field_args=_25238_tokens.slice(2LL)});
}



inline void _1aa4ae425_push_directive(_1aa4acd08_Parser* _self_, jule::Ptr<_1e0124e35_Directive> _26937_d) {
	if ((_26937_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ada4604c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _27516_pd = *it;
			{
				if ((_26937_d.get()._field_tag.get()._field_kind == _27516_pd.get()._field_tag.get()._field_kind)) {
					return;;
				};
			}
			_iter_next_1ada4604c:;
			++it;
			goto _iter_begin_1ada4604c;
		}
		_iter_end_1ada4604c:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26937_d);;
}



inline jule::Ptr<_1e013340a_ScopeTree> _1aa4ae7cc_build_scope(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _28336_tokens, jule::Ptr<_1dd9941e0_Token> _28358_end) {
	jule::Ptr<_1e013340a_ScopeTree> _28417_s = _1aa49046c_new_scope();;
	_28417_s.get()._field_end=_28358_end;
	_1aa491e0d_ScopeParser _28617_sp = _1aa491e0d_ScopeParser{._field_p=_self_, };;
	_1aa49c930_build(&_28617_sp, _28336_tokens,_28417_s);
	return _28417_s;
}



inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4aec2d___build_type(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _29344_tokens, jule::I32* _29413_i, jule::Bool _29422_err) {
	_1aa4be18d_TypeBuilder _29517_tb = _1aa4be18d_TypeBuilder{._field_p=_self_, ._field_tokens=_29344_tokens, ._field_i=_29413_i, ._field_err=_29422_err};;
	jule::Ptr<_1e01253db_TypeDecl> _30118_decl;;
	jule::Bool _30124_ok;;
	std::tie(_30118_decl,_30124_ok) = _1aa4c257b_build(&_29517_tb);
	return std::make_tuple(_30118_decl,_30124_ok);
}



inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4b017e_build_type(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _30642_tokens, jule::I32* _30713_i, jule::Bool _30722_err) {
	jule::Ptr<_1dd9941e0_Token> _30813_token = _30642_tokens[(*(_30713_i))];;
	jule::Ptr<_1e01253db_TypeDecl> _30918_t;;
	jule::Bool _30921_ok;;
	std::tie(_30918_t,_30921_ok) = _1aa4aec2d___build_type(_self_, _30642_tokens,_30713_i,_30722_err);
	if ((_30722_err && (!(_30921_ok)))) {
		_1aa4ad765_push_err(_self_.ptr(), _30813_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	return std::make_tuple(_30918_t,_30921_ok);
}



inline jule::Ptr<_1e0139653_TypeAliasDecl> _1aa4b048c_build_type_alias_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _31646_tokens) {
	jule::I32 _31717_i = 1LL;;
	if ((_31717_i >= _31646_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0139653_TypeAliasDecl> _32217_tad = jule::new_ptr<_1e0139653_TypeAliasDecl>(_1e0139653_TypeAliasDecl{._field_token=_31646_tokens[1LL], ._field_ident=_31646_tokens[1LL].get()._field_kind, });;
	jule::Ptr<_1dd9941e0_Token> _32617_token = _31646_tokens[_31717_i];;
	if ((_32617_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _32617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	_32617_token=_31646_tokens[_31717_i];
	if ((_32617_token.get()._field_id != static_cast<jule::U32>(11LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	(_31717_i)++;
	if ((_31717_i >= _31646_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _31646_tokens[(_31717_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _32217_tad;
	};
	jule::Ptr<_1e01253db_TypeDecl> _34718_t;;
	jule::Bool _34721_ok;;
	std::tie(_34718_t,_34721_ok) = _1aa4b017e_build_type(_self_, _31646_tokens,(&(_31717_i)),true);
	_32217_tad.get()._field_kind=_34718_t;
	if ((_34721_ok && (_31717_i < _31646_tokens.len()))) {
		_1aa4ad765_push_err(_self_.ptr(), _31646_tokens[_31717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _32217_tad;
}



inline void _1aa4b07cd_build_var_type_and_expr(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1e0135dd0_VarDecl>& _35548_v, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _35566_tokens) {
	jule::I32 _35617_i = 0LL;;
	jule::Ptr<_1dd9941e0_Token> _35717_tok = _35566_tokens[_35617_i];;
	if ((_35717_tok.get()._field_id == static_cast<jule::U32>(11LLU))) {
		(_35617_i)++;
		if (((_35617_i >= _35566_tokens.len()) || ((_35566_tokens[_35617_i].get()._field_id == static_cast<jule::U32>(7LLU)) && (_35566_tokens[_35617_i].get()._field_kind == jule::Str("=", 1))))) {
			_1aa4ad765_push_err(_self_.ptr(), _35717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1e01253db_TypeDecl> _36522_t;;
		jule::Bool _36525_ok;;
		std::tie(_36522_t,_36525_ok) = _1aa4b017e_build_type(_self_, _35566_tokens,(&(_35617_i)),true);
		if (_36525_ok) {
			_35548_v.get()._field_kind=_36522_t;
			if ((_35617_i >= _35566_tokens.len())) {
				return;;
			};
			_35717_tok=_35566_tokens[_35617_i];
		};
	};
	if ((_35717_tok.get()._field_id == static_cast<jule::U32>(7LLU))) {
		if ((_35717_tok.get()._field_kind != jule::Str("=", 1))) {
			_1aa4ad765_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1dd9941e0_Token>> _38021_expr_tokens = _35566_tokens.slice((_35617_i + 1LL));;
		if ((_38021_expr_tokens.len() == 0LL)) {
			_1aa4ad765_push_err(_self_.ptr(), _35717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_35548_v.get()._field_expr=_1aa4add92_build_expr(_self_, _38021_expr_tokens);
	} else {
		_1aa4ad765_push_err(_self_.ptr(), _35717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1aa4b0b0d_build_var_common(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1e0135dd0_VarDecl>& _39141_v, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _39158_tokens) {
	_39141_v.get()._field_token=_39158_tokens[0LL];
	if ((_39141_v.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _39141_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_39141_v.get()._field_ident=_39141_v.get()._field_token.get()._field_kind;
	_39141_v.get()._field_kind=nullptr;
	if ((_39158_tokens.len() > 1LL)) {
		_39158_tokens=_39158_tokens.slice(1LL);
		_1aa4b07cd_build_var_type_and_expr(_self_, _39141_v,_39158_tokens);
	};
}



inline void _1aa4b0ec6_build_var_begin(_1aa4acd08_Parser* _self_, jule::Ptr<_1e0135dd0_VarDecl>& _40639_v, jule::I32& _40657_i, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _40666_tokens) {
	jule::Ptr<_1dd9941e0_Token> _40713_tok = _40666_tokens[_40657_i];;
	{
		auto &_match_expr{ _40713_tok.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1ada61ad4:;
			{
				_40639_v.get()._field_statically=true;
				goto _case_begin_1ada61b4a;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1ada61b4a:;
			{
				(_40657_i)++;
				if ((_40657_i >= _40666_tokens.len())) {
					_1aa4ad765_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_40666_tokens[_40657_i].get()._field_id == static_cast<jule::U32>(36LLU))) {
					_40639_v.get()._field_mutable=true;
					(_40657_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1ada611cc:;
			{
				(_40657_i)++;
				_40639_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1ada60b6b:;
			{
				_1aa4ad765_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ada61078:;
	};
	if ((_40657_i >= _40666_tokens.len())) {
		_1aa4ad765_push_err(&(*_self_), _40713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1e0135dd0_VarDecl> _1aa4b12d4_build_var(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _43633_tokens) {
	jule::I32 _43717_i = 0LL;;
	jule::Ptr<_1e0135dd0_VarDecl> _43817_v = jule::new_ptr<_1e0135dd0_VarDecl>(_1e0135dd0_VarDecl{._field_token=_43633_tokens[0LL], });;
	_1aa4b0ec6_build_var_begin(_self_.ptr(), _43817_v,_43717_i,_43633_tokens);
	if ((_43717_i >= _43633_tokens.len())) {
		return nullptr;
	};
	_43633_tokens=_43633_tokens.slice(_43717_i);
	if (((_43633_tokens[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_43633_tokens[0LL].get()._field_kind == jule::Str("&", 1)))) {
		_43817_v.get()._field_reference=true;
		if ((_43633_tokens.len() == 1LL)) {
			return nullptr;
		};
		_43633_tokens=_43633_tokens.slice(1LL);
	};
	_1aa4b0b0d_build_var_common(_self_, _43817_v,_43633_tokens);
	return _43817_v;
}



inline jule::Ptr<_1e013165b_GenericDecl> _1aa4b15e2_build_generic(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _45837_tokens) {
	if ((_45837_tokens.len() > 1LL)) {
		_1aa4ad765_push_err(&(*_self_), _45837_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e013165b_GenericDecl> _46217_g = jule::new_ptr<_1e013165b_GenericDecl>(_1e013165b_GenericDecl{._field_token=_45837_tokens[0LL], });;
	if ((_46217_g.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(&(*_self_), _46217_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_46217_g.get()._field_ident=_46217_g.get()._field_token.get()._field_kind;
	return _46217_g;
}



inline jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _1aa4b1999_build_generics(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _47338_tokens, jule::Ptr<_1dd9941e0_Token>& _47357_error_token) {
	if ((_47338_tokens.len() == 0LL)) {
		_1aa4ad765_push_err(&(*_self_), _47357_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _47918_parts;;
	jule::Slice<_1dd65aa00_Log> _47925_errors;;
	std::tie(_47918_parts,_47925_errors) = _1aa4abae8_parts(_47338_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_47925_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47925_errors);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e013165b_GenericDecl>> _48517_generics = jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>::alloc(0LL,_47918_parts.len());;
	{
		auto &expr = _47918_parts;
		auto it = expr.begin();
		_iter_begin_1ada6db13:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _48621_part = *it;
			{
				_48517_generics = jule::alloc_for_append(_48517_generics,1);_48517_generics.__push(_1aa4b15e2_build_generic(&(*_self_), _48621_part));;
			}
			_iter_next_1ada6db13:;
			++it;
			goto _iter_begin_1ada6db13;
		}
		_iter_end_1ada6db13:;
	};
	return _48517_generics;
}



inline jule::Ptr<_1e0133ad1_ParamDecl> _1aa4b1ca7_build_self_param(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _49339_tokens) {
	if ((_49339_tokens.len() == 0LL)) {
		return nullptr;
	};
	jule::Ptr<_1e0133ad1_ParamDecl> _49817_param = jule::new_ptr<_1e0133ad1_ParamDecl>();;
	jule::I32 _50117_i = 0LL;;
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U32>(36LLU))) {
		_49817_param.get()._field_mutable=true;
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1aa4ad765_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_kind == jule::Str("&", 1))) {
		_49817_param.get()._field_ident=jule::Str("&", 1);
		(_50117_i)++;
		if ((_50117_i >= _49339_tokens.len())) {
			_1aa4ad765_push_err(&(*_self_), _49339_tokens[(_50117_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
	};
	if ((_49339_tokens[_50117_i].get()._field_id == static_cast<jule::U32>(28LLU))) {
		_49817_param.get()._field_ident+=jule::Str("self", 4);
		_49817_param.get()._field_token=_49339_tokens[_50117_i];
		(_50117_i)++;
		if ((_50117_i < _49339_tokens.len())) {
			_1aa4ad765_push_err(&(*_self_), _49339_tokens[_50117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _49817_param;
}



inline void _1aa4b2170_param_type_begin(_1aa4acd08_Parser* _self_, jule::Ptr<_1e0133ad1_ParamDecl>& _53240_param, jule::I32& _53264_i, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _53273_tokens) {
	for (; (_53264_i < _53273_tokens.len()); (_53264_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _53417_token = _53273_tokens[_53264_i];;
			if ((_53417_token.get()._field_id != static_cast<jule::U32>(7LLU))) {
				return;;
			} else if ((_53417_token.get()._field_kind != jule::Str("...", 3))) {
				return;;
			};
			if (_53240_param.get()._field_variadic) {
				_1aa4ad765_push_err(&(*_self_), _53417_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1ada736ea;
			};
			_53240_param.get()._field_variadic=true;
		}
	_iter_next_1ada736ea:;
	}
	_iter_end_1ada736ea:;;
}



inline void _1aa4b248e_build_param_type(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1e0133ad1_ParamDecl>& _54941_param, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _54965_tokens) {
	jule::I32 _55017_i = 0LL;;
	_1aa4b2170_param_type_begin(_self_.ptr(), _54941_param,_55017_i,_54965_tokens);
	if ((_55017_i >= _54965_tokens.len())) {
		return;;
	};
	std::tie(_54941_param.get()._field_kind,std::ignore) = _1aa4b017e_build_type(_self_, _54965_tokens,(&(_55017_i)),true);
	if ((_55017_i < _54965_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _54965_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1aa4b27ad_build_param_body(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1e0133ad1_ParamDecl>& _56241_param, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _56264_tokens) {
	jule::Ptr<_1dd9941e0_Token> _56317_tok = _56264_tokens[0LL];;
	_56241_param.get()._field_ident=_56317_tok.get()._field_kind;
	if ((_56264_tokens.len() == 1LL)) {
		return;;
	} else if ((_56264_tokens.len() < 3LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _56317_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_56264_tokens[1LL].get()._field_id != static_cast<jule::U32>(11LLU))) {
		_1aa4b248e_build_param_type(_self_, _56241_param,_56264_tokens);
		return;;
	};
	_56264_tokens=_56264_tokens.slice(2LL);
	_1aa4b248e_build_param_type(_self_, _56241_param,_56264_tokens);
}



inline jule::Ptr<_1e0133ad1_ParamDecl> _1aa4b2abb_build_param(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _58035_tokens) {
	jule::Ptr<_1e0133ad1_ParamDecl> _58117_param = jule::new_ptr<_1e0133ad1_ParamDecl>(_1e0133ad1_ParamDecl{._field_token=_58035_tokens[0LL], });;
	if ((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U32>(36LLU))) {
		_58117_param.get()._field_mutable=true;
		if ((_58035_tokens.len() == 1LL)) {
			_1aa4ad765_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_58035_tokens=_58035_tokens.slice(1LL);
		_58117_param.get()._field_token=_58035_tokens[0LL];
	};
	if ((_58035_tokens.len() >= 3LL)) {
		if (((_58117_param.get()._field_token.get()._field_id == static_cast<jule::U32>(7LLU)) && (_58117_param.get()._field_token.get()._field_kind == jule::Str("&", 1)))) {
			if ((_58035_tokens.len() == 1LL)) {
				_1aa4ad765_push_err(_self_.ptr(), _58035_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			};
			if (((_58035_tokens[1LL].get()._field_id == static_cast<jule::U32>(2LLU)) && (_58035_tokens[2LL].get()._field_id == static_cast<jule::U32>(11LLU)))) {
				_58117_param.get()._field_reference=true;
				_58035_tokens=_58035_tokens.slice(1LL);
				_58117_param.get()._field_token=_58035_tokens[0LL];
			};
		};
	};
	if ((_58117_param.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_58117_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1aa4b248e_build_param_type(_self_, _58117_param,_58035_tokens);
	} else {
		_1aa4b27ad_build_param_body(_self_, _58117_param,_58035_tokens);
	};
	return _58117_param;
}



inline void _1aa4b2d41_check_params(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>>& _62336_params) {
	{
		auto &expr = _62336_params;
		auto it = expr.begin();
		_iter_begin_1ada84909:;
		if (it != expr.end()) {
			jule::Ptr<_1e0133ad1_ParamDecl> _62421_param = *it;
			{
				if ((_1e0133e44_is_self(_62421_param.ptr()) || (_62421_param.get()._field_kind != nullptr))) {
					goto _iter_next_1ada84909;
				};
				if ((_62421_param.get()._field_token == nullptr)) {
					_1aa4ad765_push_err(&(*_self_), _62421_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_62421_param.get()._field_kind=jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_62421_param.get()._field_token, ._field_kind=jule::Any(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_62421_param.get()._field_token, ._field_ident=_62421_param.get()._field_token.get()._field_kind, }))});
					_62421_param.get()._field_ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1ada84909:;
			++it;
			goto _iter_begin_1ada84909;
		}
		_iter_end_1ada84909:;
	};
}



inline jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>> _1aa4b31e8_build_params(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _64337_tokens, jule::Bool _64355_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _64418_parts;;
	jule::Slice<_1dd65aa00_Log> _64425_errs;;
	std::tie(_64418_parts,_64425_errs) = _1aa4abae8_parts(_64337_tokens,static_cast<jule::U32>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_64425_errs);
	if ((_64418_parts.len() == 0LL)) {
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>> _65017_params = nullptr;;
	if ((_64355_method && (_64418_parts.len() > 0LL))) {
		jule::Ptr<_1e0133ad1_ParamDecl> _65221_param = _1aa4b1ca7_build_self_param(_self_.ptr(), _64418_parts[0LL]);;
		if (((_65221_param != nullptr) && _1e0133e44_is_self(_65221_param.ptr()))) {
			_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_65221_param);;
			_64418_parts=_64418_parts.slice(1LL);
		};
	};
	{
		auto &expr = _64418_parts;
		auto it = expr.begin();
		_iter_begin_1ada8a4d1:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _65921_part = *it;
			{
				jule::Ptr<_1e0133ad1_ParamDecl> _66021_param = _1aa4b2abb_build_param(_self_, _65921_part);;
				if ((_66021_param != nullptr)) {
					_65017_params = jule::alloc_for_append(_65017_params,1);_65017_params.__push(_66021_param);;
				};
			}
			_iter_next_1ada8a4d1:;
			++it;
			goto _iter_begin_1ada8a4d1;
		}
		_iter_end_1ada8a4d1:;
	};
	_1aa4b2d41_check_params(_self_.ptr(), _65017_params);
	return _65017_params;
}



inline std::tuple<jule::Ptr<_1e01284aa_RetTypeDecl>,jule::Bool> _1aa4b35a0_build_multi_ret_type(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _67045_tokens, jule::I32& _67068_i) {
	jule::Ptr<_1e01284aa_RetTypeDecl> _67078_t = jule::Ptr<_1e01284aa_RetTypeDecl>();
	jule::Bool _67095_ok = jule::Bool();
	_67078_t=jule::new_ptr<_1e01284aa_RetTypeDecl>();
	(_67068_i)++;
	if ((_67068_i >= _67045_tokens.len())) {
		(_67068_i)--;
		std::tie(_67078_t.get()._field_kind,_67095_ok) = _1aa4b017e_build_type(_self_, _67045_tokens,(&(_67068_i)),false);
		return std::make_tuple(_67078_t,_67095_ok);
	};
	(_67068_i)--;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _68017_range_tokens = _1aa4ab422_range(_67068_i,jule::Str("(", 1),jule::Str(")", 1),_67045_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _68218_parts;;
	jule::Slice<_1dd65aa00_Log> _68225_errs;;
	std::tie(_68218_parts,_68225_errs) = _1aa4abae8_parts(_68017_range_tokens,static_cast<jule::U32>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68225_errs);
	if ((_68218_parts.len() == 0LL)) {
		return std::make_tuple(_67078_t,_67095_ok);
	};
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _68817_types = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>::alloc(0LL,_68218_parts.len());;
	_67078_t.get()._field_idents=jule::Slice<jule::Ptr<_1dd9941e0_Token>>::alloc(0LL,_68218_parts.len());
	{
		auto &expr = _68218_parts;
		auto it = expr.begin();
		_iter_begin_1ada9199e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _69021_part = *it;
			{
				jule::Ptr<_1dd9941e0_Token> _69121_token = _69021_part[0LL];;
				jule::I32 _69221_offset = 0LL;;
				if ((_69021_part.len() > 1LL)) {
					_69121_token=_69021_part[1LL];
					if ((_69121_token.get()._field_id == static_cast<jule::U32>(11LLU))) {
						_69221_offset=2LL;
						if ((_69021_part.len() < 3LL)) {
							_1aa4ad765_push_err(_self_.ptr(), _69121_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1ada9199e;
						};
					};
				};
				_69121_token=_69021_part[0LL];
				if ((_69221_offset != 2LL)) {
					jule::Ptr<_1dd9941e0_Token> _70825_new_token = jule::new_ptr<_1dd9941e0_Token>((*(_69121_token)));;
					_70825_new_token.get()._field_kind=jule::Str("<anonymous>", 11);
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_70825_new_token);;
				} else {
					_67078_t.get()._field_idents = jule::alloc_for_append(_67078_t.get()._field_idents,1);_67078_t.get()._field_idents.__push(_69121_token);;
				};
				jule::Ptr<_1e01253db_TypeDecl> _71522_tk;;
				std::tie(_71522_tk,std::ignore) = _1aa4b017e_build_type(_self_, _69021_part,(&(_69221_offset)),true);
				if ((_69221_offset < _69021_part.len())) {
					_1aa4ad765_push_err(_self_.ptr(), _69021_part[_69221_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_68817_types = jule::alloc_for_append(_68817_types,1);_68817_types.__push(_71522_tk);;
			}
			_iter_next_1ada9199e:;
			++it;
			goto _iter_begin_1ada9199e;
		}
		_iter_end_1ada9199e:;
	};
	if ((_68817_types.len() > 1LL)) {
		_67078_t.get()._field_kind=jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_67045_tokens[0LL], ._field_kind=jule::Any(jule::new_ptr<_1e0126db0_TupleTypeDecl>(_1e0126db0_TupleTypeDecl{._field_types=_68817_types}))});
	} else {
		_67078_t.get()._field_kind=_68817_types[0LL];
	};
	_67095_ok=true;
	return std::make_tuple(_67078_t,_67095_ok);
}



inline std::tuple<jule::Ptr<_1e01284aa_RetTypeDecl>,jule::Bool> _1aa4b3957_build_ret_type(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _73839_tokens, jule::I32& _73862_i) {
	jule::Ptr<_1e01284aa_RetTypeDecl> _73872_t = jule::Ptr<_1e01284aa_RetTypeDecl>();
	jule::Bool _73889_ok = jule::Bool();
	_73872_t=jule::new_ptr<_1e01284aa_RetTypeDecl>();
	if ((_73862_i >= _73839_tokens.len())) {
		return std::make_tuple(_73872_t,_73889_ok);
	};
	jule::Ptr<_1dd9941e0_Token> _74417_token = _73839_tokens[_73862_i];;
	{
		auto &_match_expr{ _74417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1ada99b94:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1ada99c0a:;
			{
				if ((_74417_token.get()._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_73872_t,_73889_ok);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1ada99c82:;
			{
				if (((_73862_i + 1LL) >= _73839_tokens.len())) {
					_1aa4ad765_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_73872_t,_73889_ok);
				};
				(_73862_i)++;
				_74417_token=_73839_tokens[_73862_i];
				if ((_74417_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _74417_token.get()._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1ada9c878:;
							{
								std::tie(_73872_t,_73889_ok) = _1aa4b35a0_build_multi_ret_type(_self_, _73839_tokens,_73862_i);
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1ada9c911:;
							{
								_1aa4ad765_push_err(_self_.ptr(), _74417_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_73872_t,_73889_ok);
							}
						}
						_match_end_1ada9c801:;
					};
				};
				std::tie(_73872_t.get()._field_kind,_73889_ok) = _1aa4b017e_build_type(_self_, _73839_tokens,(&(_73862_i)),true);
				return std::make_tuple(_73872_t,_73889_ok);
			}
		}
		_match_end_1ada99b3e:;
	};
	(_73862_i)++;
	_1aa4ad765_push_err(_self_.ptr(), _74417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_73872_t,_73889_ok);
}



inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b3da8_build_fn_prototype(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _78343_tokens, jule::I32& _78366_i, jule::Bool _78374_method) {
	jule::Ptr<_1e0134e01_FnDecl> _78417_f = jule::new_ptr<_1e0134e01_FnDecl>(_1e0134e01_FnDecl{._field_token=_78343_tokens[_78366_i], });;
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U32>(38LLU))) {
		_78417_f.get()._field_statically=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	if ((_78417_f.get()._field_token.get()._field_id == static_cast<jule::U32>(35LLU))) {
		_78417_f.get()._field_unsafety=true;
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_token=_78343_tokens[_78366_i];
	};
	(_78366_i)++;
	if ((_78366_i >= _78343_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1dd9941e0_Token> _81713_tok = _78343_tokens[_78366_i];;
	if ((_81713_tok.get()._field_id == static_cast<jule::U32>(2LLU))) {
		(_78366_i)++;
		if ((_78366_i >= _78343_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _78417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_78417_f.get()._field_ident=_81713_tok.get()._field_kind;
	} else {
		_78417_f.get()._field_ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1dd9941e0_Token> _82913_error_token = _78343_tokens[_78366_i];;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _83017_generics_tokens = _1aa4ab422_range(_78366_i,jule::Str("[", 1),jule::Str("]", 1),_78343_tokens);;
	if ((_83017_generics_tokens != nullptr)) {
		_78417_f.get()._field_generics=_1aa4b1999_build_generics(_self_.ptr(), _83017_generics_tokens,_82913_error_token);
	};
	if ((_78343_tokens[_78366_i].get()._field_kind != jule::Str("(", 1))) {
		_1aa4ad765_push_err(_self_.ptr(), _78343_tokens[_78366_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _84017_params_toks = _1aa4ab422_range(_78366_i,jule::Str("(", 1),jule::Str(")", 1),_78343_tokens);;
	if ((_84017_params_toks.len() > 0LL)) {
		_78417_f.get()._field_params=_1aa4b31e8_build_params(_self_, _84017_params_toks,_78374_method);
	};
	if ((_78366_i < _78343_tokens.len())) {
		jule::Ptr<_1dd9941e0_Token> _84617_token = _78343_tokens[_78366_i];;
		if (((_84617_token.get()._field_id == static_cast<jule::U32>(7LLU)) && (_84617_token.get()._field_kind == jule::Str("!", 1)))) {
			_78417_f.get()._field_exceptional=true;
			(_78366_i)++;
		};
	};
	std::tie(_78417_f.get()._field_result,std::ignore) = _1aa4b3957_build_ret_type(_self_, _78343_tokens,_78366_i);
	return _78417_f;
}



inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b4309_build_fn(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _85933_tokens, jule::Bool _85951_method, jule::Bool _85965_prototype) {
	jule::I32 _86017_i = 0LL;;
	jule::Ptr<_1e0134e01_FnDecl> _86117_f = _1aa4b3da8_build_fn_prototype(_self_, _85933_tokens,_86017_i,_85951_method);;
	if (_85965_prototype) {
		if ((_86017_i < _85933_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _85933_tokens[(_86017_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _86117_f;
	} else if ((_86117_f == nullptr)) {
		return _86117_f;
	};
	if ((_86017_i >= _85933_tokens.len())) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _87717_block_tokens = _1aa4ab422_range(_86017_i,jule::Str("{", 1),jule::Str("}", 1),_85933_tokens);;
	if ((_87717_block_tokens != nullptr)) {
		_86117_f.get()._field_scope=_1aa4ae7cc_build_scope(_self_, _87717_block_tokens,_85933_tokens[(_86017_i - 1LL)]);
		_86117_f.get()._field_scope.get()._field_unsafety=_86117_f.get()._field_unsafety;
		if ((_86017_i < _85933_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _85933_tokens[_86017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _86117_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _86117_f;
}



inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa4b4617_get_use_decl_selectors(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _89345_tokens) {
	jule::I32 _89417_i = 0LL;;
	_89345_tokens=_1aa4ab422_range(_89417_i,jule::Str("{", 1),jule::Str("}", 1),_89345_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _89618_parts;;
	jule::Slice<_1dd65aa00_Log> _89625_errs;;
	std::tie(_89618_parts,_89625_errs) = _1aa4abae8_parts(_89345_tokens,static_cast<jule::U32>(8LLU),true);
	if ((_89625_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_89625_errs);
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _90217_selectors = jule::Slice<jule::Ptr<_1dd9941e0_Token>>::alloc(0LL,_89618_parts.len());;
	{
		auto &expr = _89618_parts;
		auto it = expr.begin();
		_iter_begin_1adab5781:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_1aa4ad765_push_err(&(*_self_), _90321_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1dd9941e0_Token> _90721_tok = _90321_part[0LL];;
				if (((_90721_tok.get()._field_id != static_cast<jule::U32>(2LLU)) && (_90721_tok.get()._field_id != static_cast<jule::U32>(28LLU)))) {
					_1aa4ad765_push_err(&(*_self_), _90721_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aa4ada84_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1adab5781;
				};
				_90217_selectors = jule::alloc_for_append(_90217_selectors,1);_90217_selectors.__push(_90721_tok);;
			}
			_iter_next_1adab5781:;
			++it;
			goto _iter_begin_1adab5781;
		}
		_iter_end_1adab5781:;
	};
	return _90217_selectors;
}



inline void _1aa4b4936_build_cpp_use_decl(_1aa4acd08_Parser* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _91842_decl, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _91859_tokens) {
	if ((_91859_tokens.len() > 1LL)) {
		_1aa4ad765_push_err(&(*_self_), _91859_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9941e0_Token> _92213_token = _91859_tokens[0LL];;
	if (((_92213_token.get()._field_id != static_cast<jule::U32>(6LLU)) || ((_92213_token.get()._field_kind[0LL] != '`') && (_92213_token.get()._field_kind[0LL] != '\"')))) {
		_1aa4ad765_push_err(&(*_self_), _92213_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_91842_decl.get()._field_cpp_linked=true;
	_91842_decl.get()._field_link_path=_92213_token.get()._field_kind.slice(1LL,(_92213_token.get()._field_kind.len() - 1LL));
}



inline void _1aa4b4c55_build_std_use_decl(_1aa4acd08_Parser* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _93142_decl, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _93162_tokens) {
	_93142_decl.get()._field_std=true;
	jule::Ptr<_1dd9941e0_Token> _93417_token = _93162_tokens[0LL];;
	if ((_93162_tokens.len() < 3LL)) {
		_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_93162_tokens=_93162_tokens.slice(2LL);
	_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _93417_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1adabe49e:;
			{
				_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1adabe559:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("}", 1))) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _95121_selectors = nullptr;;
				std::tie(_93162_tokens,_95121_selectors) = _1aa4ab6b9_range_last(_93162_tokens);
				_93142_decl.get()._field_selected=_1aa4b4617_get_use_decl_selectors(&(*_self_), _95121_selectors);
				if ((_93162_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1adabe5c0:;
			{
				if ((_93417_token.get()._field_kind != jule::Str("*", 1))) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93417_token=_93162_tokens[(_93162_tokens.len() - 1LL)];
				if ((_93417_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93162_tokens=_93162_tokens.slice(0LL,(_93162_tokens.len() - 1LL));
				if ((_93162_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _93417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_93142_decl.get()._field_full=true;
			}
		}
		_match_end_1adabe449:;
	};
	_93142_decl.get()._field_link_path=(jule::Str("std::", 5) + _1aa4ac940_tokstoa(_93162_tokens));
}



inline void _1aa4b5074_build_ident_use_decl(_1aa4acd08_Parser* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _99344_decl, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _99364_tokens) {
	_99344_decl.get()._field_std=false;
	jule::Ptr<_1dd9941e0_Token> _99617_token = _99364_tokens[(_99364_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1adac9003:;
			{
				_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1adac9cd4:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("}", 1))) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _100721_selectors = nullptr;;
				std::tie(_99364_tokens,_100721_selectors) = _1aa4ab6b9_range_last(_99364_tokens);
				_99344_decl.get()._field_selected=_1aa4b4617_get_use_decl_selectors(&(*_self_), _100721_selectors);
				if ((_99364_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1adac9d4a:;
			{
				if ((_99617_token.get()._field_kind != jule::Str("*", 1))) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99617_token=_99364_tokens[(_99364_tokens.len() - 1LL)];
				if ((_99617_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99364_tokens=_99364_tokens.slice(0LL,(_99364_tokens.len() - 1LL));
				if ((_99364_tokens.len() == 0LL)) {
					_1aa4ad765_push_err(&(*_self_), _99617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99344_decl.get()._field_full=true;
			}
		}
		_match_end_1adac9b80:;
	};
	_99344_decl.get()._field_link_path=_1aa4ac940_tokstoa(_99364_tokens);
}



inline void _1aa4b5393_parse_use_decl(_1aa4acd08_Parser* _self_, jule::Ptr<_1e013aa3e_UseDecl>& _105638_decl, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _105658_tokens) {
	if (_105638_decl.get()._field_cpp_linked) {
		_1aa4b4936_build_cpp_use_decl(&(*_self_), _105638_decl,_105658_tokens);
		return;;
	};
	jule::Ptr<_1dd9941e0_Token> _106217_token = _105658_tokens[0LL];;
	if ((_106217_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_105658_tokens.len() > 2LL) && (_105658_tokens[1LL].get()._field_id == static_cast<jule::U32>(12LLU)))) {
		_105638_decl.get()._field_alias=_106217_token.get()._field_kind;
		if ((_105658_tokens[2LL].get()._field_id != static_cast<jule::U32>(2LLU))) {
			_1aa4ad765_push_err(&(*_self_), _106217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1aa4ada84_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_105658_tokens=_105658_tokens.slice(2LL);
		_106217_token=_105658_tokens[0LL];
	};
	;
	{
		
		if ((_106217_token.get()._field_kind == jule::Str("std", 3))) {
			_case_begin_1adad9365:;
			{
				_1aa4b4c55_build_std_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		else {
			_case_begin_1adad8ebe:;
			{
				_1aa4b5074_build_ident_use_decl(&(*_self_), _105638_decl,_105658_tokens);
			}
		}
		_match_end_1adad8e47:;
	};
}



inline jule::Ptr<_1e013aa3e_UseDecl> _1aa4b574a_build_use_decl(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _109037_tokens, jule::Bool _109055_cpp_linked) {
	jule::Ptr<_1e013aa3e_UseDecl> _109117_decl = jule::new_ptr<_1e013aa3e_UseDecl>(_1e013aa3e_UseDecl{._field_token=_109037_tokens[0LL], ._field_cpp_linked=_109055_cpp_linked, });;
	if ((_109037_tokens.len() < 2LL)) {
		_1aa4ad765_push_err(&(*_self_), _109117_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	};
	_109037_tokens=_109037_tokens.slice(1LL);
	_1aa4b5393_parse_use_decl(&(*_self_), _109117_decl,_109037_tokens);
	return _109117_decl;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4b5b24_build_type_enum_item_kind(jule::Ptr<_1aa4acd08_Parser> _self_, jule::I32& _110450_i, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _110463_tokens) {
	jule::I32 _110517_brace_n = 0LL;;
	jule::I32 _110613_expr_start = _110450_i;;
	for (; (_110450_i < _110463_tokens.len()); (_110450_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _110817_t = _110463_tokens[_110450_i];;
			if ((_110817_t.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _110817_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1adade2b0:;
						{
							(_110517_brace_n)++;
							goto _iter_next_1adadcd6e;
						}
					}
					else {
						_case_begin_1adaddbe9:;
						{
							(_110517_brace_n)--;
						}
					}
					_match_end_1adadddb4:;
				};
			};
			if ((_110517_brace_n > 0LL)) {
				goto _iter_next_1adadcd6e;
			};
			if (((_110817_t.get()._field_id == static_cast<jule::U32>(8LLU)) || ((_110450_i + 1LL) >= _110463_tokens.len()))) {
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _112425_kind_tokens = nullptr;;
				if ((_110817_t.get()._field_id == static_cast<jule::U32>(8LLU))) {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start,_110450_i);
				} else {
					_112425_kind_tokens=_110463_tokens.slice(_110613_expr_start);
				};
				jule::I32 _113025_j = 0LL;;
				jule::Ptr<_1e01253db_TypeDecl> _113126_kind;;
				std::tie(_113126_kind,std::ignore) = _1aa4b017e_build_type(_self_, _112425_kind_tokens,(&(_113025_j)),true);
				if ((_113025_j < _112425_kind_tokens.len())) {
					_1aa4ad765_push_err(_self_.ptr(), _112425_kind_tokens[_113025_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _113126_kind;
			};
		}
	_iter_next_1adadcd6e:;
	}
	_iter_end_1adadcd6e:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>> _1aa4b5e43_build_type_enum_items(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _114146_tokens) {
	jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>> _114217_items = jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>>::alloc(0LL,1LL);;
	jule::I32 _114317_i = 0LL;;
	for (; (_114317_i < _114146_tokens.len()); (_114317_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _114521_t = _114146_tokens[_114317_i];;
			jule::Ptr<_1e013c3d1_TypeEnumItemDecl> _114621_item = jule::new_ptr<_1e013c3d1_TypeEnumItemDecl>();;
			_114621_item.get()._field_token=_114521_t;
			if (((_114621_item.get()._field_token.get()._field_id == static_cast<jule::U32>(2LLU)) && ((_114146_tokens.len() - _114317_i) > 2LL))) {
				_114621_item.get()._field_ident=_114621_item.get()._field_token.get()._field_kind;
				_114521_t=_114146_tokens[(_114317_i + 1LL)];
				if ((_114521_t.get()._field_id == static_cast<jule::U32>(11LLU))) {
					_114317_i+=2LL;
					if (((_114317_i >= _114146_tokens.len()) || (_114146_tokens[_114317_i].get()._field_id == static_cast<jule::U32>(8LLU)))) {
						_1aa4ad765_push_err(_self_.ptr(), _114521_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1adae3bee;
					};
				};
			};
			_114621_item.get()._field_kind=_1aa4b5b24_build_type_enum_item_kind(_self_, _114317_i,_114146_tokens);
			_114217_items = jule::alloc_for_append(_114217_items,1);_114217_items.__push(_114621_item);;
		}
	_iter_next_1adae3bee:;
	}
	_iter_end_1adae3bee:;;
	return _114217_items;
}



inline jule::Ptr<_1e013c9db_TypeEnumDecl> _1aa4b6251_build_type_enum_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _116545_tokens) {
	jule::I32 _116617_i = 1LL;;
	jule::Ptr<_1e013c9db_TypeEnumDecl> _116717_e = jule::new_ptr<_1e013c9db_TypeEnumDecl>(_1e013c9db_TypeEnumDecl{._field_token=_116545_tokens[_116617_i], });;
	if ((_116717_e.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_ident=_116717_e.get()._field_token.get()._field_kind;
	_116617_i+=3LL;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _117617_item_tokens = _1aa4ab422_range(_116617_i,jule::Str("{", 1),jule::Str("}", 1),_116545_tokens);;
	if ((_117617_item_tokens == nullptr)) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _116717_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _116717_e;
	} else if ((_116617_i < _116545_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _116545_tokens[_116617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_116717_e.get()._field_end=_116545_tokens[(_116617_i - 1LL)];
	_116717_e.get()._field_items=_1aa4b5e43_build_type_enum_items(_self_, _117617_item_tokens);
	return _116717_e;
}



inline jule::Ptr<_1e0128b3c_Expr> _1aa4b6608_build_enum_item_expr(jule::Ptr<_1aa4acd08_Parser> _self_, jule::I32& _119045_i, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _119058_tokens) {
	jule::I32 _119117_brace_n = 0LL;;
	jule::I32 _119213_expr_start = _119045_i;;
	for (; (_119045_i < _119058_tokens.len()); (_119045_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _119417_t = _119058_tokens[_119045_i];;
			if ((_119417_t.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _119417_t.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1adb00667:;
						{
							(_119117_brace_n)++;
							goto _iter_next_1adaee226;
						}
					}
					else {
						_case_begin_1adb000a1:;
						{
							(_119117_brace_n)--;
						}
					}
					_match_end_1adb0026b:;
				};
			};
			if ((_119117_brace_n > 0LL)) {
				goto _iter_next_1adaee226;
			};
			if (((_119417_t.get()._field_id == static_cast<jule::U32>(8LLU)) || ((_119045_i + 1LL) >= _119058_tokens.len()))) {
				jule::Slice<jule::Ptr<_1dd9941e0_Token>> _121025_expr_tokens = nullptr;;
				if ((_119417_t.get()._field_id == static_cast<jule::U32>(8LLU))) {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start,_119045_i);
				} else {
					_121025_expr_tokens=_119058_tokens.slice(_119213_expr_start);
				};
				return _1aa4add92_build_expr(_self_, _121025_expr_tokens);
			};
		}
	_iter_next_1adaee226:;
	}
	_iter_end_1adaee226:;;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>> _1aa4b6916_build_enum_items(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _122241_tokens) {
	jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>> _122317_items = jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>>::alloc(0LL,1LL);;
	jule::I32 _122417_i = 0LL;;
	for (; (_122417_i < _122241_tokens.len()); (_122417_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _122621_t = _122241_tokens[_122417_i];;
			jule::Ptr<_1e013aeb2_EnumItemDecl> _122721_item = jule::new_ptr<_1e013aeb2_EnumItemDecl>();;
			_122721_item.get()._field_token=_122621_t;
			if ((_122721_item.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
				_1aa4ad765_push_err(_self_.ptr(), _122721_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_122721_item.get()._field_ident=_122721_item.get()._field_token.get()._field_kind;
			if ((((_122417_i + 1LL) >= _122241_tokens.len()) || (_122241_tokens[(_122417_i + 1LL)].get()._field_id == static_cast<jule::U32>(8LLU)))) {
				if (((_122417_i + 1LL) < _122241_tokens.len())) {
					(_122417_i)++;
				};
				_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
				goto _iter_next_1adb03a00;
			};
			(_122417_i)++;
			_122621_t=_122241_tokens[_122417_i];
			(_122417_i)++;
			if ((_122621_t.get()._field_id != static_cast<jule::U32>(11LLU))) {
				_1aa4ad765_push_err(_self_.ptr(), _122621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1adb03a00;
			};
			if (((_122417_i >= _122241_tokens.len()) || (_122241_tokens[_122417_i].get()._field_id == static_cast<jule::U32>(8LLU)))) {
				_1aa4ad765_push_err(_self_.ptr(), _122621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1adb03a00;
			};
			_122721_item.get()._field_expr=_1aa4b6608_build_enum_item_expr(_self_, _122417_i,_122241_tokens);
			_122317_items = jule::alloc_for_append(_122317_items,1);_122317_items.__push(_122721_item);;
		}
	_iter_next_1adb03a00:;
	}
	_iter_end_1adb03a00:;;
	return _122317_items;
}



inline jule::Ptr<_1e013bb0b_EnumDecl> _1aa4b6c24_build_enum_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _125940_tokens) {
	if ((_125940_tokens.len() < 3LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _125940_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e013bb0b_EnumDecl> _126417_e = jule::new_ptr<_1e013bb0b_EnumDecl>(_1e013bb0b_EnumDecl{._field_token=_125940_tokens[1LL], });;
	if ((_126417_e.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_ident=_126417_e.get()._field_token.get()._field_kind;
	jule::I32 _127217_i = 2LL;;
	if ((_125940_tokens[_127217_i].get()._field_id == static_cast<jule::U32>(11LLU))) {
		(_127217_i)++;
		if ((_127217_i >= _125940_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _125940_tokens[(_127217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _126417_e;
		};
		std::tie(_126417_e.get()._field_kind,std::ignore) = _1aa4b017e_build_type(_self_, _125940_tokens,(&(_127217_i)),true);
		if ((_127217_i >= _125940_tokens.len())) {
			_1aa4ad138_stop(_self_.ptr());
			_1aa4ad765_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _126417_e;
		};
	} else {
		_126417_e.get()._field_kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _128917_item_tokens = _1aa4ab422_range(_127217_i,jule::Str("{", 1),jule::Str("}", 1),_125940_tokens);;
	if ((_128917_item_tokens == nullptr)) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _126417_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _126417_e;
	} else if ((_127217_i < _125940_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _125940_tokens[_127217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_126417_e.get()._field_end=_125940_tokens[(_127217_i - 1LL)];
	_126417_e.get()._field_items=_1aa4b6916_build_enum_items(_self_, _128917_item_tokens);
	return _126417_e;
}



inline jule::Any _1aa4b7032_build_node_enum_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _130345_tokens) {
	if (((_130345_tokens.len() > 3LL) && (_130345_tokens[2LL].get()._field_id == static_cast<jule::U32>(11LLU)))) {
		if ((_130345_tokens[3LL].get()._field_id == static_cast<jule::U32>(10LLU))) {
			return jule::Any(_1aa4b6251_build_type_enum_decl(_self_, _130345_tokens));
		};
	};
	return jule::Any(_1aa4b6c24_build_enum_decl(_self_, _130345_tokens));
}



inline jule::Ptr<_1e013d1b2_FieldDecl> _1aa4b7340_build_field(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _131235_tokens) {
	jule::Ptr<_1e013d1b2_FieldDecl> _131317_f = jule::new_ptr<_1e013d1b2_FieldDecl>(_1e013d1b2_FieldDecl{});;
	_131317_f.get()._field_public=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U32>(21LLU));
	if (_131317_f.get()._field_public) {
		if ((_131235_tokens.len() == 1LL)) {
			_1aa4ad765_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_mutable=(_131235_tokens[0LL].get()._field_id == static_cast<jule::U32>(36LLU));
	if (_131317_f.get()._field_mutable) {
		if ((_131235_tokens.len() == 1LL)) {
			_1aa4ad765_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(1LL);
	};
	_131317_f.get()._field_token=_131235_tokens[0LL];
	if ((_131317_f.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _131317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131317_f.get()._field_ident=_131317_f.get()._field_token.get()._field_kind;
	if ((_131235_tokens.len() == 1LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _131235_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((_131235_tokens[1LL].get()._field_id != static_cast<jule::U32>(11LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _131235_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	_131235_tokens=_131235_tokens.slice(2LL);
	jule::I32 _135017_i = 0LL;;
	std::tie(_131317_f.get()._field_kind,std::ignore) = _1aa4b017e_build_type(_self_, _131235_tokens,(&(_135017_i)),true);
	if ((_135017_i < _131235_tokens.len())) {
		jule::Ptr<_1dd9941e0_Token> _135317_token = _131235_tokens[_135017_i];;
		if (((_135317_token.get()._field_id != static_cast<jule::U32>(7LLU)) || (_135317_token.get()._field_kind != jule::Str("=", 1)))) {
			_1aa4ad765_push_err(_self_.ptr(), _131235_tokens[_135017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_135017_i)++;
		if ((_135017_i >= _131235_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _135317_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		};
		_131235_tokens=_131235_tokens.slice(_135017_i);
		_131317_f.get()._field_default=_1aa4add92_build_expr(_self_, _131235_tokens);
	};
	return _131317_f;
}



inline jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>> _1aa4b7670_build_struct_decl_fields(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _137048_tokens) {
	jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>> _137117_fields = nullptr;;
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _137217_stmts = _1aa491979_split_stmts(_137048_tokens);;
	{
		auto &expr = _137217_stmts;
		auto it = expr.begin();
		_iter_begin_1adb23206:;
		if (it != expr.end()) {
			jule::Ptr<_1aa4915d3_Stmt> _137321_stmt = *it;
			{
				_137048_tokens=_137321_stmt.get()._field_tokens;
				jule::Ptr<_1e013d1b2_FieldDecl> _137521_f = _1aa4b7340_build_field(_self_, _137048_tokens);;
				_137117_fields = jule::alloc_for_append(_137117_fields,1);_137117_fields.__push(_137521_f);;
			}
			_iter_next_1adb23206:;
			++it;
			goto _iter_begin_1adb23206;
		}
		_iter_end_1adb23206:;
	};
	return _137117_fields;
}



inline jule::Ptr<_1e013da20_StructDecl> _1aa4b798e_build_struct_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _138142_tokens) {
	if ((_138142_tokens.len() < 3LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _138142_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I32 _138717_i = 1LL;;
	jule::Ptr<_1e013da20_StructDecl> _138817_s = jule::new_ptr<_1e013da20_StructDecl>(_1e013da20_StructDecl{._field_token=_138142_tokens[_138717_i], });;
	if ((_138817_s.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_138717_i)++;
	if ((_138717_i >= _138142_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _138817_s;
	};
	_138817_s.get()._field_ident=_138817_s.get()._field_token.get()._field_kind;
	jule::Ptr<_1dd9941e0_Token> _140213_error_token = _138142_tokens[_138717_i];;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _140317_generics_tokens = _1aa4ab422_range(_138717_i,jule::Str("[", 1),jule::Str("]", 1),_138142_tokens);;
	if ((_140317_generics_tokens != nullptr)) {
		_138817_s.get()._field_generics=_1aa4b1999_build_generics(_self_.ptr(), _140317_generics_tokens,_140213_error_token);
	};
	if ((_138717_i >= _138142_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _138142_tokens[(_138717_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _141317_body_tokens = _1aa4ab422_range(_138717_i,jule::Str("{", 1),jule::Str("}", 1),_138142_tokens);;
	if ((_141317_body_tokens == nullptr)) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _138817_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _138817_s;
	};
	if ((_138717_i < _138142_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _138142_tokens[_138717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_138817_s.get()._field_fields=_1aa4b7670_build_struct_decl_fields(_self_, _141317_body_tokens);
	_138817_s.get()._field_end=_138142_tokens[(_138717_i - 1LL)];
	return _138817_s;
}



inline void _1aa4b7c14_check_method_receiver(_1aa4acd08_Parser* _self_, jule::Ptr<_1e0134e01_FnDecl>& _142841_f) {
	if (_142841_f.get()._field_statically) {
		if (((_142841_f.get()._field_params.len() > 0LL) && _1e0133e44_is_self(_142841_f.get()._field_params[0LL].ptr()))) {
			_1aa4ad765_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_142841_f.get()._field_params.len() == 0LL)) {
		_1aa4ad765_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1e0133ad1_ParamDecl> _144113_param = _142841_f.get()._field_params[0LL];;
	if ((!(_1e0133e44_is_self(_144113_param.ptr())))) {
		_1aa4ad765_push_err(&(*_self_), _142841_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1e0134e01_FnDecl>> _1aa4b8022_build_trait_methods(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _144843_tokens) {
	jule::Slice<jule::Ptr<_1e0134e01_FnDecl>> _144917_methods = nullptr;;
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _145017_stmts = _1aa491979_split_stmts(_144843_tokens);;
	{
		auto &expr = _145017_stmts;
		auto it = expr.begin();
		_iter_begin_1adb335bd:;
		if (it != expr.end()) {
			jule::Ptr<_1aa4915d3_Stmt> _145121_stmt = *it;
			{
				_144843_tokens=_145121_stmt.get()._field_tokens;
				if ((_144843_tokens.len() == 0LL)) {
					goto _iter_next_1adb335bd;
				};
				jule::Bool _145721_is_pub = false;;
				if ((_144843_tokens[0LL].get()._field_id == static_cast<jule::U32>(21LLU))) {
					_145721_is_pub=true;
					if ((_144843_tokens.len() == 1LL)) {
						_1aa4ad765_push_err(_self_.ptr(), _144843_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1adb335bd;
					};
					_144843_tokens=_144843_tokens.slice(1LL);
				};
				jule::Ptr<_1e0134e01_FnDecl> _146721_f = _1aa4b4309_build_fn(_self_, _144843_tokens,true,true);;
				if ((_146721_f != nullptr)) {
					if (_1e0135253_is_anon(_146721_f.ptr())) {
						_1aa4ad765_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1aa4b7c14_check_method_receiver(_self_.ptr(), _146721_f);
					if ((_146721_f.get()._field_generics.len() > 0LL)) {
						_1aa4ad765_push_err(_self_.ptr(), _146721_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_146721_f.get()._field_public=_145721_is_pub;
					_144917_methods = jule::alloc_for_append(_144917_methods,1);_144917_methods.__push(_146721_f);;
				};
			}
			_iter_next_1adb335bd:;
			++it;
			goto _iter_begin_1adb335bd;
		}
		_iter_end_1adb335bd:;
	};
	return _144917_methods;
}



inline jule::Ptr<_1e013dc1d_TraitDecl> _1aa4b8330_build_trait_decl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _148341_tokens) {
	if ((_148341_tokens.len() < 3LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _148341_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e013dc1d_TraitDecl> _148817_t = jule::new_ptr<_1e013dc1d_TraitDecl>(_1e013dc1d_TraitDecl{._field_token=_148341_tokens[1LL], });;
	if ((_148817_t.get()._field_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_ident=_148817_t.get()._field_token.get()._field_kind;
	jule::I32 _149617_i = 2LL;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _149717_body_tokens = _1aa4ab422_range(_149617_i,jule::Str("{", 1),jule::Str("}", 1),_148341_tokens);;
	if ((_149717_body_tokens == nullptr)) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _148817_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_149617_i < _148341_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _148341_tokens[_149617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_148817_t.get()._field_methods=_1aa4b8022_build_trait_methods(_self_, _149717_body_tokens);
	_148817_t.get()._field_end=_148341_tokens[(_149617_i - 1LL)];
	return _148817_t;
}



inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b863d_build_cpp_link_fn(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _151241_tokens) {
	_151241_tokens=_151241_tokens.slice(1LL);
	jule::Ptr<_1e0134e01_FnDecl> _151417_f = _1aa4b4309_build_fn(_self_, _151241_tokens,false,true);;
	if ((_151417_f != nullptr)) {
		if (_1e0135253_is_anon(_151417_f.ptr())) {
			_1aa4ad765_push_err(_self_.ptr(), _151417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_151417_f.get()._field_cpp_linked=true;
	};
	return _151417_f;
}



inline jule::Ptr<_1e0135dd0_VarDecl> _1aa4b894b_build_cpp_link_var(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _152442_tokens) {
	_152442_tokens=_152442_tokens.slice(1LL);
	jule::Ptr<_1e0135dd0_VarDecl> _152617_v = _1aa4b12d4_build_var(_self_, _152442_tokens);;
	if ((_152617_v != nullptr)) {
		_152617_v.get()._field_cpp_linked=true;
		if ((_152617_v.get()._field_expr != nullptr)) {
			_1aa4ad765_push_err(_self_.ptr(), _152617_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _152617_v;
}



inline jule::Ptr<_1e013da20_StructDecl> _1aa4b8c59_build_cpp_link_struct(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _153645_tokens) {
	_153645_tokens=_153645_tokens.slice(1LL);
	jule::Ptr<_1e013da20_StructDecl> _153817_s = _1aa4b798e_build_struct_decl(_self_, _153645_tokens);;
	if ((_153817_s != nullptr)) {
		_153817_s.get()._field_cpp_linked=true;
	};
	return _153817_s;
}



inline jule::Ptr<_1e0139653_TypeAliasDecl> _1aa4b9089_build_cpp_link_type_alias(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _154549_tokens) {
	_154549_tokens=_154549_tokens.slice(1LL);
	jule::Ptr<_1e0139653_TypeAliasDecl> _154717_t = _1aa4b048c_build_type_alias_decl(_self_, _154549_tokens);;
	if ((_154717_t != nullptr)) {
		_154717_t.get()._field_cpp_linked=true;
	};
	return _154717_t;
}



inline jule::Ptr<_1e013aa3e_UseDecl> _1aa4b93a8_build_cpp_link_use(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _155442_tokens) {
	if ((_155442_tokens.len() == 1LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _155442_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_155442_tokens=_155442_tokens.slice(1LL);
	;
	return _1aa4b574a_build_use_decl(_self_.ptr(), _155442_tokens,true);
}



inline jule::Any _1aa4b96b6_build_cpp_link(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _156539_tokens) {
	jule::Ptr<_1dd9941e0_Token> _156617_token = _156539_tokens[0LL];;
	if ((_156539_tokens.len() == 1LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	_156617_token=_156539_tokens[1LL];
	{
		auto &_match_expr{ _156617_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1adb4ea4b:;
			{
				return jule::Any(_1aa4b93a8_build_cpp_link_use(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1adb4eab2:;
			{
				return jule::Any(_1aa4b863d_build_cpp_link_fn(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1adb4eb28:;
			{
				return jule::Any(_1aa4b894b_build_cpp_link_var(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1adb4eb8e:;
			{
				return jule::Any(_1aa4b8c59_build_cpp_link_struct(_self_, _156539_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1adb50475:;
			{
				return jule::Any(_1aa4b9089_build_cpp_link_type_alias(_self_, _156539_tokens));
			}
		}
		else {
			_case_begin_1adb4e51d:;
			{
				_1aa4ad765_push_err(_self_.ptr(), _156617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1adb4e93b:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0134e01_FnDecl> _1aa4b99c4_get_method(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _159135_tokens) {
	jule::I32 _159217_i = 0LL;;
	jule::Ptr<_1dd9941e0_Token> _159317_token = _159135_tokens[_159217_i];;
	if ((_159317_token.get()._field_id == static_cast<jule::U32>(38LLU))) {
		if (((_159217_i + 1LL) >= _159135_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _159317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159217_i)++;
		_159317_token=_159135_tokens[_159217_i];
	};
	if ((_159317_token.get()._field_id == static_cast<jule::U32>(35LLU))) {
		if (((_159217_i + 1LL) >= _159135_tokens.len())) {
			_1aa4ad765_push_err(_self_.ptr(), _159317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		};
		(_159217_i)++;
		_159317_token=_159135_tokens[_159217_i];
	};
	if ((_159317_token.get()._field_id != static_cast<jule::U32>(33LLU))) {
		_1aa4ad765_push_err(_self_.ptr(), _159317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0134e01_FnDecl> _161717_f = _1aa4b4309_build_fn(_self_, _159135_tokens,true,false);;
	if (((_161717_f != nullptr) && _1e0135253_is_anon(_161717_f.ptr()))) {
		_1aa4ad765_push_err(_self_.ptr(), _161717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _161717_f;
}



inline void _1aa4b9ce3_parse_impl_body(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1e013e2b2_Impl>& _162440_ipl, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _162457_tokens) {
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _162517_stmts = _1aa491979_split_stmts(_162457_tokens);;
	{
		auto &expr = _162517_stmts;
		auto it = expr.begin();
		_iter_begin_1adb58b87:;
		if (it != expr.end()) {
			jule::Ptr<_1aa4915d3_Stmt> _162621_stmt = *it;
			{
				_162457_tokens=_162621_stmt.get()._field_tokens;
				jule::Ptr<_1dd9941e0_Token> _162821_token = _162457_tokens[0LL];;
				jule::Bool _162921_is_pub = false;;
				{
					auto &_match_expr{ _162821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(39LLU)) {
						_case_begin_1adb59e52:;
						{
							_1aa4ae425_push_directive(_self_.ptr(), _1aa4ae1a0_build_directive(_self_.ptr(), _162457_tokens));
							goto _iter_next_1adb58b87;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(21LLU)) {
						_case_begin_1adb5a12d:;
						{
							_162921_is_pub=true;
							if ((_162457_tokens.len() == 1LL)) {
								_1aa4ad765_push_err(_self_.ptr(), _162457_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1adb58b87;
							};
							_162457_tokens=_162457_tokens.slice(1LL);
							if ((_162457_tokens.len() > 0LL)) {
								_162821_token=_162457_tokens[0LL];
							};
						}
					}
					_match_end_1adb5a0c8:;
				};
				{
					auto &_match_expr{ _162821_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(9LLU)) {
						_case_begin_1adb5cbbe:;
						{
							jule::Ptr<_1e0135dd0_VarDecl> _164825_v = _1aa4b12d4_build_var(_self_, _162457_tokens);;
							if ((_164825_v != nullptr)) {
								_164825_v.get()._field_public=_162921_is_pub;
								_162440_ipl.get()._field_statics = jule::alloc_for_append(_162440_ipl.get()._field_statics,1);_162440_ipl.get()._field_statics.__push(_164825_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(38LLU) || _match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1adb5b00d:;
						{
							jule::Ptr<_1e0134e01_FnDecl> _165625_f = _1aa4b99c4_get_method(_self_, _162457_tokens);;
							if ((_165625_f != nullptr)) {
								_1aa4b7c14_check_method_receiver(_self_.ptr(), _165625_f);
								_1aa4ba9a3_apply_fn_meta(_self_.ptr(), _165625_f,_162921_is_pub);
								_162440_ipl.get()._field_methods = jule::alloc_for_append(_162440_ipl.get()._field_methods,1);_162440_ipl.get()._field_methods.__push(_165625_f);;
							};
						}
					}
					else {
						_case_begin_1adb5a1d8:;
						{
							_1aa4ad765_push_err(_self_.ptr(), _162821_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1adb58b87;
						}
					}
					_match_end_1adb5c32d:;
				};
			}
			_iter_next_1adb58b87:;
			++it;
			goto _iter_begin_1adb58b87;
		}
		_iter_end_1adb58b87:;
	};
}



inline jule::Ptr<_1e013e2b2_Impl> _1aa4ba101_build_impl(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _166934_tokens) {
	jule::Ptr<_1dd9941e0_Token> _167017_token = _166934_tokens[0LL];;
	if ((_166934_tokens.len() < 2LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::I32 _167617_i = 1LL;;
	jule::Ptr<_1e01253db_TypeDecl> _167818_base;;
	jule::Bool _167828_ok;;
	std::tie(_167818_base,_167828_ok) = _1aa4b017e_build_type(_self_, _166934_tokens,(&(_167617_i)),true);
	if ((!(_167828_ok))) {
		return nullptr;
	};
	if ((_167617_i >= _166934_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e013e2b2_Impl> _168717_ipl = jule::new_ptr<_1e013e2b2_Impl>(_1e013e2b2_Impl{._field_base=_167818_base, });;
	_167017_token=_166934_tokens[_167617_i];
	if ((_167017_token.get()._field_id != static_cast<jule::U32>(12LLU))) {
		if (((_167017_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_167017_token.get()._field_kind == jule::Str("{", 1)))) {
			std::tie(_168717_ipl.get()._field_base,_168717_ipl.get()._field_dest) = std::make_tuple(_168717_ipl.get()._field_dest,_168717_ipl.get()._field_base);
			goto _julec_label_body;
		};
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	(_167617_i)++;
	if ((_167617_i >= _166934_tokens.len())) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	std::tie(_168717_ipl.get()._field_dest,_167828_ok) = _1aa4b017e_build_type(_self_, _166934_tokens,(&(_167617_i)),true);
	if ((!(_167828_ok))) {
		return nullptr;
	};
	if ((_167617_i >= _166934_tokens.len())) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _172717_body_tokens = _1aa4ab422_range(_167617_i,jule::Str("{", 1),jule::Str("}", 1),_166934_tokens);;
	if ((_172717_body_tokens == nullptr)) {
		_1aa4ad138_stop(_self_.ptr());
		_1aa4ad765_push_err(_self_.ptr(), _167017_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((_167617_i < _166934_tokens.len())) {
		_1aa4ad765_push_err(_self_.ptr(), _166934_tokens[_167617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_168717_ipl.get()._field_end=_166934_tokens[(_167617_i - 1LL)];
	_1aa4b9ce3_parse_impl_body(_self_, _168717_ipl,_172717_body_tokens);
	return _168717_ipl;
}



inline jule::Any _1aa4ba40e_build_node_data(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _174240_tokens) {
	jule::Ptr<_1dd9941e0_Token> _174317_token = _174240_tokens[0LL];;
	{
		auto &_match_expr{ _174317_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1adb6e818:;
			{
				;
				return jule::Any(_1aa4b574a_build_use_decl(_self_.ptr(), _174240_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1adb6ee67:;
			{
				jule::Ptr<_1e0134e01_FnDecl> _175021_f = _1aa4b4309_build_fn(_self_, _174240_tokens,false,false);;
				if ((_175021_f != nullptr)) {
					_175021_f.get()._field_global=true;
					if (_1e0135253_is_anon(_175021_f.ptr())) {
						_1aa4ad765_push_err(_self_.ptr(), _175021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_175021_f);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(9LLU) || _match_expr == static_cast<jule::U32>(36LLU) || _match_expr == static_cast<jule::U32>(38LLU)) {
			_case_begin_1adb6eecd:;
			{
				return jule::Any(_1aa4b12d4_build_var(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1adb70154:;
			{
				return jule::Any(_1aa4b048c_build_type_alias_decl(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(24LLU)) {
			_case_begin_1adb701ba:;
			{
				return jule::Any(_1aa4b7032_build_node_enum_decl(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1adb6e54e:;
			{
				return jule::Any(_1aa4b798e_build_struct_decl(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1adb6e5c6:;
			{
				return jule::Any(_1aa4b8330_build_trait_decl(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1adb6e64d:;
			{
				return jule::Any(_1aa4ba101_build_impl(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1adb70242:;
			{
				return jule::Any(_1aa4b96b6_build_cpp_link(_self_, _174240_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1adb702a8:;
			{
				return jule::Any(_1aa4ae1a0_build_directive(_self_.ptr(), _174240_tokens));
			}
		}
		else {
			_case_begin_1adb6ddcd:;
			{
				_1aa4ad765_push_err(_self_.ptr(), _174317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1adb6e43e:;
	};
}



inline void _1aa4ba684_check_directive(_1aa4acd08_Parser* _self_, _1e00e2ead_Node& _178335_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _178335_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e0124e35_Directive>>()) {
			_case_begin_1adb77755:;
			{
				goto _match_end_1adb73597;
			}
		}
		else {
			_case_begin_1adb76ee6:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1aa4ad765_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
				};
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1adb73597:;
	};
}



inline void _1aa4ba9a3_apply_fn_meta(_1aa4acd08_Parser* _self_, jule::Ptr<_1e0134e01_FnDecl>& _180037_f, jule::Bool _180049_is_pub) {
	_180037_f.get()._field_public=_180049_is_pub;
	_180037_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1aa4bacc2_apply_meta(_1aa4acd08_Parser* _self_, _1e00e2ead_Node& _180634_node, jule::Bool _180646_is_pub) {
	{
		auto &_match_expr{ _180634_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e0135dd0_VarDecl>>()) {
			_case_begin_1adb79d40:;
			{
				jule::Ptr<_1e0135dd0_VarDecl> _180921_v = _180634_node._field_data.operator jule::Ptr<_1e0135dd0_VarDecl>();;
				if ((_180921_v == nullptr)) {
					return;;
				};
				_180921_v.get()._field_public=_180646_is_pub;
				_180921_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0134e01_FnDecl>>()) {
			_case_begin_1adb79da6:;
			{
				jule::Ptr<_1e0134e01_FnDecl> _181721_f = _180634_node._field_data.operator jule::Ptr<_1e0134e01_FnDecl>();;
				if ((_181721_f == nullptr)) {
					return;;
				};
				_1aa4ba9a3_apply_fn_meta(&(*_self_), _181721_f,_180646_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0139653_TypeAliasDecl>>()) {
			_case_begin_1adb79e1c:;
			{
				jule::Ptr<_1e0139653_TypeAliasDecl> _182321_tad = _180634_node._field_data.operator jule::Ptr<_1e0139653_TypeAliasDecl>();;
				if ((_182321_tad == nullptr)) {
					return;;
				};
				_182321_tad.get()._field_public=_180646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013bb0b_EnumDecl>>()) {
			_case_begin_1adb79e83:;
			{
				jule::Ptr<_1e013bb0b_EnumDecl> _182921_ed = _180634_node._field_data.operator jule::Ptr<_1e013bb0b_EnumDecl>();;
				if ((_182921_ed == nullptr)) {
					return;;
				};
				_182921_ed.get()._field_public=_180646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013c9db_TypeEnumDecl>>()) {
			_case_begin_1adb7a192:;
			{
				jule::Ptr<_1e013c9db_TypeEnumDecl> _183521_ted = _180634_node._field_data.operator jule::Ptr<_1e013c9db_TypeEnumDecl>();;
				if ((_183521_ted == nullptr)) {
					return;;
				};
				_183521_ted.get()._field_public=_180646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013da20_StructDecl>>()) {
			_case_begin_1adb7a208:;
			{
				jule::Ptr<_1e013da20_StructDecl> _184121_sd = _180634_node._field_data.operator jule::Ptr<_1e013da20_StructDecl>();;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_184121_sd.get()._field_public=_180646_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013dc1d_TraitDecl>>()) {
			_case_begin_1adb7a26e:;
			{
				jule::Ptr<_1e013dc1d_TraitDecl> _184921_td = _180634_node._field_data.operator jule::Ptr<_1e013dc1d_TraitDecl>();;
				if ((_184921_td == nullptr)) {
					return;;
				};
				_184921_td.get()._field_public=_180646_is_pub;
			}
		}
		else {
			_case_begin_1adb79c41:;
			{
				if (_180646_is_pub) {
					_1aa4ad765_push_err(&(*_self_), _180634_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1adb79bdb:;
	};
}



inline void _1aa4bb047_check_use_decl(_1aa4acd08_Parser* _self_, _1e00e2ead_Node& _186134_node) {
	{
		auto &_match_expr{ _186134_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1e013aa3e_UseDecl>>()) {
			_case_begin_1adb821ee:;
			{
				goto _match_end_1adb83101;
			}
		}
		else {
			_case_begin_1adb83156:;
			{
				return;;
			}
		}
		_match_end_1adb83101:;
	};
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1aa4ad765_push_err(&(*_self_), _186134_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1aa4ada84_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline std::tuple<jule::Bool,jule::Any> _1aa4bb377_build_general_scope_node_data(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _187653_st) {
	jule::Bool _187669_is_pub = jule::Bool();
	jule::Any _187683_data = jule::Any();
	if ((_187653_st[0LL].get()._field_id == static_cast<jule::U32>(21LLU))) {
		_187669_is_pub=true;
		_187653_st=_187653_st.slice(1LL);
		if ((_187653_st.len() == 0LL)) {
			_1aa4ad765_push_err(_self_.ptr(), _187653_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_187669_is_pub,_187683_data);
		};
	};
	_187683_data=jule::Any(_1aa4ba40e_build_node_data(_self_, _187653_st));
	_187683_data = jule::Any(_187683_data);
	return std::make_tuple(_187669_is_pub,_187683_data);
}



inline _1e00e2ead_Node _1aa4bb696_parse_node(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _189135_st) {
	_1e00e2ead_Node _189217_node = _1e00e2ead_Node{._field_token=_189135_st[0LL], };;
	jule::Bool _189614_is_pub;;
	jule::Any _189626_data;;
	std::tie(_189614_is_pub,_189626_data) = _1aa4bb377_build_general_scope_node_data(_self_, _189135_st);
	if ((_189626_data == nullptr)) {
		return _189217_node;
	};
	_189217_node._field_data=jule::Any(_189626_data);
	_1aa4bacc2_apply_meta(_self_.ptr(), _189217_node,_189614_is_pub);
	_1aa4ba684_check_directive(_self_.ptr(), _189217_node);
	_1aa4bb047_check_use_decl(_self_.ptr(), _189217_node);
	return _189217_node;
}



inline void _1aa4bb91b_append_node(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _190936_st) {
	if ((_190936_st.len() == 0LL)) {
		return;;
	};
	_1e00e2ead_Node _191417_node = _1aa4bb696_parse_node(_self_, _190936_st);;
	if (((_191417_node._field_data == nullptr) || _1aa4ad39c_stopped(_self_.ptr()))) {
		return;;
	};
	{
		
		if (_1e00e3640_is_directive(&_191417_node)) {
			_case_begin_1adb8b703:;
			{
				_1aa4ae425_push_directive(_self_.ptr(), _191417_node._field_data.operator jule::Ptr<_1e0124e35_Directive>());
			}
		}
		else if (_1e00e3b18_is_use_decl(&_191417_node)) {
			_case_begin_1adb8b406:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_191417_node._field_data.operator jule::Ptr<_1e013aa3e_UseDecl>());;
			}
		}
		else if ((_1e00e33cb_is_decl(&_191417_node) || _1e00e38a4_is_impl(&_191417_node))) {
			_case_begin_1adb8b46c:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_191417_node);;
			}
		}
		else {
			_case_begin_1adb8b390:;
			{
				_1aa4ad765_push_err(_self_.ptr(), _191417_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1adb8b33a:;
	};
}



inline void _1aa4bbd7d_remove_range(_1aa4acd08_Parser* _self_, jule::I32 _193231_i, jule::Str _193239_kind, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _193251_tokens, jule::Slice<jule::I32>& _193274_ranges) {
	jule::Str _193313_close = _1aa4abdb2_get_close_kind_of_brace(_193239_kind);;
	for (; (_193231_i >= 0LL); (_193231_i)--) {
		{
			jule::Ptr<_1dd9941e0_Token> _193517_tok = _193251_tokens[_193274_ranges[_193231_i]];;
			if ((_193517_tok.get()._field_kind != _193313_close)) {
				goto _iter_next_1adb8ed55;
			};
			_193274_ranges=jule::append(_193274_ranges.slice(0LL,_193231_i),_193274_ranges.slice((_193231_i + 1LL)));
			goto _iter_end_1adb8ed55;
		}
	_iter_next_1adb8ed55:;
	}
	_iter_end_1adb8ed55:;;
}



inline void _1aa4bc268_push_wrong_order_close_err(_1aa4acd08_Parser* _self_, jule::Ptr<_1dd9941e0_Token>& _194446_t, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _194458_tokens, jule::Slice<jule::I32>& _194477_ranges) {
	{
		auto &_match_expr{ _194458_tokens[_194477_ranges[(_194477_ranges.len() - 1LL)]].get()._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1adb92198:;
			{
				_1aa4ad765_push_err(&(*_self_), _194446_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1adb9220e:;
			{
				_1aa4ad765_push_err(&(*_self_), _194446_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1adb92275:;
			{
				_1aa4ad765_push_err(&(*_self_), _194446_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1adb92110:;
	};
}



inline void _1aa4bc6db_push_range_close(_1aa4acd08_Parser* _self_, jule::Ptr<_1dd9941e0_Token> _195535_t, jule::Str _195546_left, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _195558_tokens, jule::Slice<jule::I32>& _195581_ranges) {
	jule::I32 _195613_n = _195581_ranges.len();;
	if ((_195613_n == 0LL)) {
		{
			auto &_match_expr{ _195535_t.get()._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1adb95102:;
				{
					_1aa4ad765_push_err(&(*_self_), _195535_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1adb9518a:;
				{
					_1aa4ad765_push_err(&(*_self_), _195535_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1adb95201:;
				{
					_1aa4ad765_push_err(&(*_self_), _195535_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1adb95047:;
		};
		return;;
	} else if ((_195558_tokens[_195581_ranges[(_195613_n - 1LL)]].get()._field_kind != _195546_left)) {
		_1aa4bc268_push_wrong_order_close_err(&(*_self_), _195535_t,_195558_tokens,_195581_ranges);
	};
	_1aa4bbd7d_remove_range(&(*_self_), static_cast<jule::I32>((_195613_n - 1LL)),_195535_t.get()._field_kind,_195558_tokens,_195581_ranges);
}



inline void _1aa4bc961_check_ranges(_1aa4acd08_Parser* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _197332_tokens) {
	jule::Slice<jule::I32> _197417_ranges = nullptr;;
	{
		auto &expr = _197332_tokens;
		auto it = expr.begin();
		_iter_begin_1adb98985:;
		if (it != expr.end()) {
			jule::I32 _197613_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> &_197616_token = *it;
			{
				if ((_197616_token.get()._field_id != static_cast<jule::U32>(3LLU))) {
					goto _iter_next_1adb98985;
				};
				{
					auto &_match_expr{ _197616_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1adb993e2:;
						{
							_197417_ranges = jule::alloc_for_append(_197417_ranges,1);_197417_ranges.__push(_197613_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1adb9958a:;
						{
							_1aa4bc6db_push_range_close(&(*_self_), _197616_token,jule::Str("(", 1),_197332_tokens,_197417_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1adb99b73:;
						{
							_1aa4bc6db_push_range_close(&(*_self_), _197616_token,jule::Str("{", 1),_197332_tokens,_197417_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1adb99bd9:;
						{
							_1aa4bc6db_push_range_close(&(*_self_), _197616_token,jule::Str("[", 1),_197332_tokens,_197417_ranges);
						}
					}
					_match_end_1adb99a30:;
				};
			}
			_iter_next_1adb98985:;
			++it;
			_197613_i++;
			goto _iter_begin_1adb98985;
		}
		_iter_end_1adb98985:;
	};
	{
		auto &expr = _197417_ranges;
		auto it = expr.begin();
		_iter_begin_1adb9c14d:;
		if (it != expr.end()) {
			jule::I32 _199416_i = *it;
			{
				jule::Ptr<_1dd9941e0_Token> _199517_token = _197332_tokens[_199416_i];;
				{
					auto &_match_expr{ _199517_token.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1adb9c89b:;
						{
							_1aa4ad765_push_err(&(*_self_), _199517_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1adb9c912:;
						{
							_1aa4ad765_push_err(&(*_self_), _199517_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1adb9c99a:;
						{
							_1aa4ad765_push_err(&(*_self_), _199517_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1adb9c835:;
				};
			}
			_iter_next_1adb9c14d:;
			++it;
			goto _iter_begin_1adb9c14d;
		}
		_iter_end_1adb9c14d:;
	};
}



inline void _1aa4bcbd6_parse(jule::Ptr<_1aa4acd08_Parser> _self_, jule::Ptr<_1dd9995ad_File>& _200730_f) {
	_self_.get()._field_ast=jule::new_ptr<_1e00e2760_Ast>(_1e00e2760_Ast{._field_file=_200730_f, });
	_1aa4bc961_check_ranges(_self_.ptr(), _200730_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _201717_stmts = _1aa491979_split_stmts(_200730_f.get()._field_tokens);;
	jule::I32 _202017_i = 0LL;;
	for (; (_202017_i < _201717_stmts.len()); (_202017_i)++) {
		{
			jule::Ptr<_1aa4915d3_Stmt> _202221_stmt = _201717_stmts[_202017_i];;
			if ((_202221_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_202221_stmt.get()._field_tokens[0LL].get()._field_id != static_cast<jule::U32>(39LLU))) {
				goto _iter_end_1adba0d99;
			};
			if ((!(_1dd65c86a_is_top_directive(_202221_stmt.get()._field_tokens[1LL].get()._field_kind)))) {
				goto _iter_end_1adba0d99;
			};
			_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_1aa4ae1a0_build_directive(_self_.ptr(), _202221_stmt.get()._field_tokens));;
		}
	_iter_next_1adba0d99:;
	}
	_iter_end_1adba0d99:;;
	_self_.get()._field_errors=nullptr;
	for (; (_202017_i < _201717_stmts.len()); (_202017_i)++) {
		{
			jule::Ptr<_1aa4915d3_Stmt> _203921_stmt = _201717_stmts[_202017_i];;
			_1aa4bb91b_append_node(_self_, _203921_stmt.get()._field_tokens);
			if (_1aa4ad39c_stopped(_self_.ptr())) {
				goto _iter_end_1adba0e32;
			};
		}
	_iter_next_1adba0e32:;
	}
	_iter_end_1adba0e32:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1aa4ad765_push_err(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4acd08_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4be765_push_err(_1aa4be18d_TypeBuilder* _self_, jule::Ptr<_1dd9941e0_Token> _7827_token, jule::Str _7842_fmt) {
	if ((*_self_)._field_err) {
		_1aa4ad765_push_err((*_self_)._field_p.ptr(), _7827_token,_7842_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1aa4bea84_push_suggestion(_1aa4be18d_TypeBuilder* _self_, jule::Str _8534_fmt, jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1aa4ada84_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,jule::Any(_8547_args));
	};
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bece8_build_prim(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1e01253db_TypeDecl> _9217_t = _1aa4bd874_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c005c_build_namespace(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1e01253db_TypeDecl> _9817_t = jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1e0126464_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1e0126464_NamespaceTypeDecl>();;
	jule::I32 _10317_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1dd9941e0_Token> _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_10317_n & 1LL) == 0LL)) {
				if ((_10521_token.get()._field_id != static_cast<jule::U32>(2LLU))) {
					_1aa4be765_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1aa4bea84_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);;
			} else if ((_10521_token.get()._field_id != static_cast<jule::U32>(23LLU))) {
				goto _iter_end_1adbae0a5;
			};
			(_10317_n)++;
		}
	_iter_next_1adbae0a5:;
	}
	_iter_end_1adbae0a5:;;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1aa4c0799_build_ident(&(*_self_));
	_9817_t.get()._field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _1aa4c02c1_build_generics(_1aa4be18d_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1dd9941e0_Token> _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_13113_token.get()._field_id != static_cast<jule::U32>(3LLU)) || (_13113_token.get()._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _13617_parts = _1aa4c0535_ident_generics(&(*_self_));;
	if ((_13617_parts.len() == 0LL)) {
		_1aa4be765_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1e01253db_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1e01253db_TypeDecl>>::alloc(0LL,_13617_parts.len());;
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1adbb69b4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _14321_part = *it;
			{
				jule::I32 _14421_j = 0LL;;
				jule::Ptr<_1e01253db_TypeDecl> _14522_t;;
				std::tie(_14522_t,std::ignore) = _1aa4b017e_build_type((*_self_)._field_p, _14321_part,(&(_14421_j)),true);
				if ((_14421_j < _14321_part.len())) {
					_1aa4be765_push_err(&(*_self_), _14321_part[_14421_j],jule::Str("invalid syntax", 14));
				};
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);;
			}
			_iter_next_1adbb69b4:;
			++it;
			goto _iter_begin_1adbb69b4;
		}
		_iter_end_1adbb69b4:;
	};
	return _14217_types;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4c0535_ident_generics(_1aa4be18d_TypeBuilder* _self_) {
	jule::I32 _15513_first = (*((*_self_)._field_i));;
	jule::I32 _15617_range_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_1dd9941e0_Token> _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_15817_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _15817_token.get()._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1adbba688:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1adbba721:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1adbba5cd:;
				};
			};
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1adbb7ec1;
			};
		}
	_iter_next_1adbb7ec1:;
	}
	_iter_end_1adbb7ec1:;;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _17217_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _17318_parts;;
	jule::Slice<_1dd65aa00_Log> _17325_errors;;
	std::tie(_17318_parts,_17325_errors) = _1aa4abae8_parts(_17217_tokens,static_cast<jule::U32>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17325_errors);
	};
	return _17318_parts;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0799_build_ident(_1aa4be18d_TypeBuilder* _self_) {
	jule::Bool _18117_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_18117_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id == static_cast<jule::U32>(23LLU)))) {
		return _1aa4c005c_build_namespace(&(*_self_));
	};
	jule::Ptr<_1dd9941e0_Token> _18517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e012596e_IdentTypeDecl> _18617_it = jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_18517_token, ._field_ident=_18517_token.get()._field_kind, ._field_cpp_linked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e01253db_TypeDecl> _19217_itd = jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_18517_token, ._field_kind=jule::Any(_18617_it)});;
	if (((!(_18117_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U32>(20LLU)))) {
		_18617_it.get()._field_generics=_1aa4c02c1_build_generics(&(*_self_));
		return _19217_itd;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1aa4be765_push_err(&(*_self_), _18517_token,jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id != static_cast<jule::U32>(2LLU))) {
		_1aa4be765_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _19217_itd;
	};
	jule::Ptr<_1e01260ac_SubIdentTypeDecl> _20917_sit = jule::new_ptr<_1e01260ac_SubIdentTypeDecl>();;
	_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_18617_it);;
	jule::Ptr<_1e01253db_TypeDecl> _21117_ident = _1aa4c0799_build_ident(&(*_self_));;
	{
		auto &_match_expr{ _21117_ident.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1e012596e_IdentTypeDecl>>()) {
			_case_begin_1adbc58b3:;
			{
				_20917_sit.get()._field_idents = jule::alloc_for_append(_20917_sit.get()._field_idents,1);_20917_sit.get()._field_idents.__push(_21117_ident.get()._field_kind.operator jule::Ptr<_1e012596e_IdentTypeDecl>());;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01260ac_SubIdentTypeDecl>>()) {
			_case_begin_1adbc596d:;
			{
				_20917_sit.get()._field_idents=jule::append(_20917_sit.get()._field_idents,_21117_ident.get()._field_kind.operator jule::Ptr<_1e01260ac_SubIdentTypeDecl>().get()._field_idents);
			}
		}
		_match_end_1adbc585d:;
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_18517_token, ._field_kind=jule::Any(_20917_sit)});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0a0d_build_cpp_link(_1aa4be18d_TypeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_id != static_cast<jule::U32>(20LLU)))) {
		_1aa4be765_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1e01253db_TypeDecl> _23017_t = _1aa4c0799_build_ident(&(*_self_));;
	_23017_t.get()._field_kind.operator jule::Ptr<_1e012596e_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _23017_t;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0c72_build_fn(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _23617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1e0134e01_FnDecl> _23717_f = _1aa4b3da8_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_23717_f == nullptr)) {
		return nullptr;
	};
	if ((!(_1e0135253_is_anon(_23717_f.ptr())))) {
		_1aa4be765_push_err(&(*_self_), _23717_f.get()._field_token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_23617_token, ._field_kind=jule::Any(_23717_f)});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c0ed6_build_ptr(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _25117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1aa4be765_push_err(&(*_self_), _25117_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_id == static_cast<jule::U32>(35LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_25117_token, ._field_kind=jule::Any(jule::new_ptr<_1e012719b_PtrTypeDecl>(_1e012719b_PtrTypeDecl{._field_elem=nullptr}))});
	};
	jule::Ptr<_1e01253db_TypeDecl> _26817_elem = _1aa4c2317_step(&(*_self_));;
	if ((_26817_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_25117_token, ._field_kind=jule::Any(jule::new_ptr<_1e012719b_PtrTypeDecl>(_1e012719b_PtrTypeDecl{._field_elem=_26817_elem}))});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c124a_build_sptr(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _28217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1aa4be765_push_err(&(*_self_), _28217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e01253db_TypeDecl> _28917_elem = _1aa4c2317_step(&(*_self_));;
	if ((_28917_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_28217_token, ._field_kind=jule::Any(jule::new_ptr<_1e0126750_SptrTypeDecl>(_1e0126750_SptrTypeDecl{._field_elem=_28917_elem}))});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c14ae_build_op(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _30317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _30317_token.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1adbd49e3:;
			{
				return _1aa4c0ed6_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1adbd4a59:;
			{
				return _1aa4c124a_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1adbd4828:;
			{
				return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_kind=jule::Any(jule::new_ptr<_1e0126750_SptrTypeDecl>(_1e0126750_SptrTypeDecl{._field_elem=_1aa4c124a_build_sptr(&(*_self_))}))});
			}
		}
		else {
			_case_begin_1adbd2b23:;
			{
				_1aa4be765_push_err(&(*_self_), _30317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1adbd3d55:;
	};
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1723_build_slc(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _32217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1e01253db_TypeDecl> _32417_elem = _1aa4c2317_step(&(*_self_));;
	if ((_32417_elem == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_32217_token, ._field_kind=jule::Any(jule::new_ptr<_1e0126ac4_SlcTypeDecl>(_1e0126ac4_SlcTypeDecl{._field_elem=_32417_elem}))});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1987_build_arr(_1aa4be18d_TypeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1aa4be765_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	};
	jule::I32 _34513_expr_delta = (*((*_self_)._field_i));;
	jule::Ptr<_1e01253db_TypeDecl> _34717_elem = _1aa4c2317_step(&(*_self_));;
	if ((_34717_elem == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1e01278e9_ArrTypeDecl> _35217_arrt = jule::new_ptr<_1e01278e9_ArrTypeDecl>(_1e01278e9_ArrTypeDecl{._field_elem=_34717_elem, });;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _35617_expr_tokens = (*_self_)._field_tokens.slice(0LL,_34513_expr_delta);;
	std::tie(std::ignore,_35617_expr_tokens) = _1aa4ab6b9_range_last(_35617_expr_tokens);
	_35617_expr_tokens=_35617_expr_tokens.slice(1LL,(_35617_expr_tokens.len() - 1LL));
	jule::Ptr<_1dd9941e0_Token> _35917_token = _35617_expr_tokens[0LL];;
	if ((((_35617_expr_tokens.len() == 1LL) && (_35917_token.get()._field_id == static_cast<jule::U32>(7LLU))) && (_35917_token.get()._field_kind == jule::Str("...", 3)))) {
	} else {
		_35217_arrt.get()._field_size=_1aa4add92_build_expr((*_self_)._field_p, _35617_expr_tokens);
	};
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_35917_token, ._field_kind=jule::Any(_35217_arrt)});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c1d3e_build_map(_1aa4be18d_TypeBuilder* _self_, jule::I32 _37228_colon, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _37245_tokens) {
	jule::Ptr<_1dd9941e0_Token> _37317_colon_token = (*_self_)._field_tokens[_37228_colon];;
	if (((_37228_colon == 0LL) || ((_37228_colon + 1LL) >= _37245_tokens.len()))) {
		_1aa4be765_push_err(&(*_self_), _37317_colon_token,jule::Str("type missing", 12));
		return nullptr;
	};
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _37817_key_tokens = _37245_tokens.slice(0LL,_37228_colon);;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _37917_val_tokens = _37245_tokens.slice((_37228_colon + 1LL));;
	jule::Ptr<_1e0128103_MapTypeDecl> _38017_mapt = jule::new_ptr<_1e0128103_MapTypeDecl>(_1e0128103_MapTypeDecl{});;
	jule::I32 _38217_j = 0LL;;
	jule::Ptr<_1e01253db_TypeDecl> _38318_keyt;;
	jule::Bool _38328_ok;;
	std::tie(_38318_keyt,_38328_ok) = _1aa4b017e_build_type((*_self_)._field_p, _37817_key_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37817_key_tokens.len())) {
		_1aa4be765_push_err(&(*_self_), _37817_key_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_key=_38318_keyt;
	_38217_j=0LL;
	jule::Ptr<_1e01253db_TypeDecl> _39218_valt;;
	std::tie(_39218_valt,_38328_ok) = _1aa4b017e_build_type((*_self_)._field_p, _37917_val_tokens,(&(_38217_j)),(*_self_)._field_err);
	if ((!(_38328_ok))) {
		return nullptr;
	} else if ((_38217_j < _37917_val_tokens.len())) {
		_1aa4be765_push_err(&(*_self_), _37917_val_tokens[_38217_j],jule::Str("invalid syntax", 14));
	};
	_38017_mapt.get()._field_val=_39218_valt;
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_37317_colon_token, ._field_kind=jule::Any(_38017_mapt)});
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c20a3_build_enumerable(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _40717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_40717_token.get()._field_id != static_cast<jule::U32>(3LLU))) || (_40717_token.get()._field_kind != jule::Str("[", 1)))) {
		_1aa4be765_push_err(&(*_self_), _40717_token,jule::Str("invalid syntax", 14));
		return nullptr;
	};
	((*((*_self_)._field_i)))++;
	_40717_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_40717_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_40717_token.get()._field_kind == jule::Str("]", 1)))) {
		return _1aa4c1723_build_slc(&(*_self_));
	};
	((*((*_self_)._field_i)))--;
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _42118_map_tokens;;
	jule::I32 _42130_colon;;
	std::tie(_42118_map_tokens,_42130_colon) = _1aa4bdbb5_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_42130_colon == -1LL)) {
		return _1aa4c1987_build_arr(&(*_self_));
	};
	return _1aa4c1d3e_build_map(&(*_self_), _42130_colon,_42118_map_tokens);
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4c2317_step(_1aa4be18d_TypeBuilder* _self_) {
	jule::Ptr<_1dd9941e0_Token> _43013_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _43013_token.get()._field_id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1adbea047:;
			{
				return _1aa4bece8_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1adbe9d05:;
			{
				return _1aa4c0799_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1adbe9d6b:;
			{
				return _1aa4c0a0d_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1adbe9dd2:;
			{
				return _1aa4c0c72_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1adbe9244:;
			{
				return _1aa4c14ae_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(3LLU)) {
			_case_begin_1adbe92aa:;
			{
				return _1aa4c20a3_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1adbe894c:;
			{
				((*((*_self_)._field_i)))++;
				_1aa4be765_push_err(&(*_self_), _43013_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1adbe9101:;
	};
}



inline std::tuple<jule::Ptr<_1e01253db_TypeDecl>,jule::Bool> _1aa4c257b_build(_1aa4be18d_TypeBuilder* _self_) {
	jule::Bool _45344_ok = jule::Bool();
	jule::Ptr<_1e01253db_TypeDecl> _45417_root = _1aa4c2317_step(&(*_self_));;
	if ((_45417_root == nullptr)) {
		_45344_ok = false;
		return std::make_tuple(_1aa4bd5ee_build_void_type(),_45344_ok);
	};
	_45344_ok = true;
	return std::make_tuple(_45417_root,_45344_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4be18d_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed92a30e_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1ed92bbb2_push_err(_1ed92b662_DirectiveEval* _self_, jule::Ptr<_1dd9941e0_Token> _2127_t, jule::Str _2138_fmt, jule::Slice<jule::Any> _2151_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_row=_2127_t.get()._field_row, ._field_column=_2127_t.get()._field_column, ._field_path=_2127_t.get()._field_file.get()._field_path, ._field_text=_1dd65ae40_logf(_2138_fmt,jule::Any(_2151_args)), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1ed92c069_split_operans(_1ed92b662_DirectiveEval* _self_, jule::Str _3332_op, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _3352_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>::alloc(0LL,10LL);;
	jule::I32 _3617_i = 0LL;;
	jule::I32 _3717_range_n = 0LL;;
	jule::I32 _3817_last = 0LL;;
	for (; (_3617_i < (_3352_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _4017_b = _3352_tokens[_3617_i];;
			if ((_4017_b.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1adc204bd:;
						{
							(_3717_range_n)++;
							goto _iter_next_1adc1e610;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1adc206aa:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1adc20457:;
				};
			};
			if (((_3717_range_n > 0LL) || (_4017_b.get()._field_id != static_cast<jule::U32>(7LLU)))) {
				goto _iter_next_1adc1e610;
			};
			if ((_4017_b.get()._field_kind == _3332_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I32>((_3617_i + 1LL));
			};
		}
	_iter_next_1adc1e610:;
	}
	_iter_end_1adc1e610:;;
	if ((_3817_last < _3352_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));;
	} else {
		_1ed92bbb2_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return _3417_parts;
}



inline jule::Bool _1ed92c377_eval_directive_ident(_1ed92b662_DirectiveEval* _self_, jule::Str _7335_ident) {
	if (_7335_ident.empty()) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1adc23d84:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7335_ident)) {
					return true;
				};
			}
			_iter_next_1adc23d84:;
			++it;
			goto _iter_begin_1adc23d84;
		}
		_iter_end_1adc23d84:;
	};
	return false;
}



inline jule::Bool _1ed92c685_eval_directive_part(_1ed92b662_DirectiveEval* _self_, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _8742_part) {
	jule::Bool _8813_logical_not = ((_8742_part[0LL].get()._field_id == static_cast<jule::U32>(7LLU)) && (_8742_part[0LL].get()._field_kind == jule::Str("!", 1)));;
	if (_8813_logical_not) {
		_8742_part=_8742_part.slice(1LL);
	};
	if ((_8742_part.len() > 1LL)) {
		_1ed92bbb2_push_err(&(*_self_), _8742_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _9817_result = _1ed92c377_eval_directive_ident(&(*_self_), _8742_part[0LL].get()._field_kind);;
	if (_8813_logical_not) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;
}



inline jule::Bool _1ed92c8e9_eval(_1ed92b662_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1ed92bbb2_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _11317_logical_or_parts = _1ed92c069_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);;
	if ((_11317_logical_or_parts == nullptr)) {
		return false;
	};
	{
		auto &expr = _11317_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1adc299e4:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _12021_logical_and_parts = _1ed92c069_split_operans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logical_and_parts == nullptr)) {
					return false;
				};
				{
					auto &expr = _12021_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1adc2b2ba:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_1dd9941e0_Token>> _12525_and_part = *it;
						{
							jule::Ptr<_1dd9941e0_Token> _12621_first = _12525_and_part[0LL];;
							if (((_12621_first.get()._field_id == static_cast<jule::U32>(3LLU)) && (_12621_first.get()._field_kind == jule::Str("(", 1)))) {
								jule::Ptr<_1dd9941e0_Token> _12825_end = _12525_and_part[(_12525_and_part.len() - 1LL)];;
								if (((_12825_end.get()._field_id != static_cast<jule::U32>(3LLU)) || (_12825_end.get()._field_kind != jule::Str(")", 1)))) {
									_1ed92bbb2_push_err(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								};
								_12525_and_part=_12525_and_part.slice(1LL,(_12525_and_part.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ed92c685_eval_directive_part(&(*_self_), _12525_and_part));
						}
						_iter_next_1adc2b2ba:;
						++it;
						goto _iter_begin_1adc2b2ba;
					}
					_iter_end_1adc2b2ba:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1adc299e4:;
			++it;
			goto _iter_begin_1adc299e4;
		}
		_iter_end_1adc299e4:;
	};
	return _11117_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed92b662_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa39e546_JuleImporter> static__1c2c903e7_new(_1ed92a30e_CompileInfo _5823_info) {
	jule::Ptr<_1aa39e546_JuleImporter> _5917_imp = jule::new_ptr<_1aa39e546_JuleImporter>(_1aa39e546_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1dd66e45e_PATH_STDLIB}), });;
	_1ed92ab28_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _1c2c97542_all_packages(_1aa39e546_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1c2c98169_set_mod_path(_1aa39e546_JuleImporter* _self_, jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1c2cb3a36_get_mod_path(_1aa39e546_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1c2cb8aa2_mod_by_id(_1aa39e546_JuleImporter* _self_, jule::I32 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1c2cbb104_get_import(_1aa39e546_JuleImporter* _self_, jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1adc3326c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_path == _8733_path)) {
					return _8821_p;
				};
			}
			_iter_next_1adc3326c:;
			++it;
			goto _iter_begin_1adc3326c;
		}
		_iter_end_1adc3326c:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1e00e2760_Ast>>,jule::Slice<_1dd65aa00_Log>> _1c2cec7ea_import_package(_1aa39e546_JuleImporter* _self_, jule::Str _9637_path, jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>> _9717_dirents = ({
		auto except = static__1dc5a1925_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1dd65aa00_Log>::make({_1c2c8c4e3_flat_compiler_err((jule::Str("connot read package directory: ", 31) + _9637_path))}));
		} jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>();});
	});;
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1ed93bab2_find_module_file_deep(_9637_path);;
		if ((_10217_new_mod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1dd65aa00_Log> _10525_errs = _1ed93bd37_check_module_file((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			};
		};
	};
	jule::Slice<jule::Ptr<_1e00e2760_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1e00e2760_Ast>>::alloc(0LL,_9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1adc372d7:;
		if (it != expr.end()) {
			jule::Ptr<_1db7a7dc4_DirEntry> _11316_dirent = *it;
			{
				if ((_1db6ea267_is_dir(_11316_dirent.get()._field_stat.ptr()) || (!(_1dd56a1e5_has_suffix(_11316_dirent.get()._field_name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1adc372d7;
				};
				jule::Str _11917__path = _1dc68e46e_join(jule::Slice<jule::Str>::make({_9637_path,_11316_dirent.get()._field_name}));;
				jule::Ptr<_1dd9995ad_File> _12021_file = _1dd99aadc_new_file_set(_11917__path);;
				_1dd999c40_fill(_12021_file.ptr(), _1c2c7d12c_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1dd65aa00_Log> _12221_errors = _1dd9a63de_lex(_12021_file,static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				};
				jule::Ptr<_1aa442b8e_FileInfo> _12721_finfo = _1aa48e4e3_parse_file(_12021_file);;
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				};
				if ((!(_1ed92941d_is_pass_file_annotation(_11316_dirent.get()._field_name)))) {
					goto _iter_next_1adc372d7;
				};
				jule::Bool _13718_r;;
				jule::Slice<_1dd65aa00_Log> _13725_logs;;
				std::tie(_13718_r,_13725_logs) = _1c2d51d27_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				};
				if ((!(_13718_r))) {
					goto _iter_next_1adc372d7;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);;
			}
			_iter_next_1adc372d7:;
			++it;
			goto _iter_begin_1adc372d7;
		}
		_iter_end_1adc372d7:;
	};
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1c2d01c1c_imported(_1aa39e546_JuleImporter* _self_, jule::Ptr<_1e0e13272_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1adc3d4ca:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_15516_p.get()._field_link_path == _15335_imp.get()._field_link_path))) {
					return;;
				};
			}
			_iter_next_1adc3d4ca:;
			++it;
			goto _iter_begin_1adc3d4ca;
		}
		_iter_end_1adc3d4ca:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1adc3e520:;
			if (it != expr.end()) {
				jule::I32 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15335_imp.get()._field_mod_id=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1adc3e520:;
				++it;
				_16217_i++;
				goto _iter_begin_1adc3e520;
			}
			_iter_end_1adc3e520:;
		};
		_15335_imp.get()._field_mod_id=static_cast<jule::I32>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);;
}



inline std::tuple<jule::Bool,jule::Slice<_1dd65aa00_Log>> _1c2d51d27_is_pass_build_directives(_1aa39e546_JuleImporter* _self_, jule::Ptr<_1e00e2760_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1adc42622:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_tag.get()._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1adc42622;
				};
				_1ed92b662_DirectiveEval _18421_de = _1ed92b662_DirectiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1ed92c8e9_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				};
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				};
			}
			_iter_next_1adc42622:;
			++it;
			goto _iter_begin_1adc42622;
		}
		_iter_end_1adc42622:;
	};
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa39e546_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9442486_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1adc6439c_is_common_ordered(jule::Slice<jule::Ptr<_1e010261b_Struct>>& _1837_s, jule::Ptr<_1e010261b_Struct> _1846_t) {
	jule::Ptr<_1e010261b_Struct>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e010261b_Struct>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1adc664c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1adc664c0;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1adc664c0:;
			++it;
			goto _iter_begin_1adc664c0;
		}
		_iter_end_1adc664c0:;
	};
	return false;
}

inline jule::Bool _1adc6c031_is_common_ordered(jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _1837_s, jule::Ptr<_1e0e366e6_Var> _1846_t) {
	jule::Ptr<_1e0e366e6_Var>* _1917_p = (&(_1846_t.get()._field_depends[0LL]));;
	jule::Ptr<_1e0e366e6_Var>* _2013_end = (_1917_p + _1846_t.get()._field_depends.len());;
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_1adc6e110:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> &_2116_tt = *it;
			{
				{
					if ((_2116_tt == _1846_t)) {
						goto _iter_end_1adc6e110;
					};
					if ((((*(_1917_p)).get()._field_cpp_linked || ((*(_1917_p)).get()._field_depends.len() == 0LL)) || (_2116_tt == (*(_1917_p))))) {
						(_1917_p)++;
						if ((_1917_p == _2013_end)) {
							return true;
						};
					};
				};
			}
			_iter_next_1adc6e110:;
			++it;
			goto _iter_begin_1adc6e110;
		}
		_iter_end_1adc6e110:;
	};
	return false;
}



inline void _1adc5e9a2_order_common(jule::Slice<jule::Ptr<_1e010261b_Struct>>& _3940_s) {
	jule::I32 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1adc60be5:;
		if (it != expr.end()) {
			jule::I32 _4114_j = it - expr.begin();
			jule::Ptr<_1e010261b_Struct> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1adc60be5:;
			++it;
			_4114_j++;
			goto _iter_begin_1adc60be5;
		}
		_iter_end_1adc60be5:;
	};
	jule::I32 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I32 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1adc6439c_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I32>((_5021_k + 1LL)));
					};
				}
			_iter_next_1adc62d29:;
			}
			_iter_end_1adc62d29:;;
		}
	_iter_next_1adc60574:;
	}
	_iter_end_1adc60574:;;
}

inline void _1adc631e2_order_common(jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _3940_s) {
	jule::I32 _4017_i = 0LL;;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_1adc68879:;
		if (it != expr.end()) {
			jule::I32 _4114_j = it - expr.begin();
			jule::Ptr<_1e0e366e6_Var> _4121_t = *it;
			{
				if ((_4121_t.get()._field_cpp_linked || (_4121_t.get()._field_depends.len() == 0LL))) {
					_3940_s.swap(_4017_i,_4114_j);
					(_4017_i)++;
				};
			}
			_iter_next_1adc68879:;
			++it;
			_4114_j++;
			goto _iter_begin_1adc68879;
		}
		_iter_end_1adc68879:;
	};
	jule::I32 _4817_j = _4017_i;;
	for (; (_4817_j < _3940_s.len()); (_4817_j)++) {
		{
			jule::I32 _5021_k = _4017_i;;
			for (; (_5021_k < (_3940_s.len() - 1LL)); (_5021_k)++) {
				{
					if ((!(_1adc6c031_is_common_ordered(_3940_s,_3940_s[_5021_k])))) {
						_3940_s.swap(_5021_k,static_cast<jule::I32>((_5021_k + 1LL)));
					};
				}
			_iter_next_1adc6a9ad:;
			}
			_iter_end_1adc6a9ad:;;
		}
	_iter_next_1adc66bb8:;
	}
	_iter_end_1adc66bb8:;;
}



inline void static__1a949e108_order_structures(jule::Slice<jule::Ptr<_1e010261b_Struct>>& _6141_structs) {
	_1adc5e9a2_order_common(_6141_structs);
}



inline void static__1a94ce303_order_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _6735_vars) {
	_1adc631e2_order_common(_6735_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a965184e_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa594dbd_LiveTable _Src) {
	_Stream << "LiveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1aa5c9cc1_optimize_child(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0dd6322_Scope>& _3839_s) {
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _3917_sdc = jule::new_ptr<_1aa5c9809_ScopeDeadCode>(_1aa5c9809_ScopeDeadCode{._field_parent=_self_, ._field_s=_3839_s, ._field_stmts=(&(_3839_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1aa5cc158_optimize_stmts(_3917_sdc);
	};
}



inline void _1aa5ca046_optimize_body_child(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0dd6322_Scope>& _4944_s) {
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _5017_sdc = jule::new_ptr<_1aa5c9809_ScopeDeadCode>(_1aa5c9809_ScopeDeadCode{._field_s=_4944_s, ._field_stmts=(&(_4944_s.get()._field_stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos});;
	{
		_1aa5cc158_optimize_stmts(_5017_sdc);
	};
}



inline void _1aa5ca2bb_optimize_expr_model(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Any& _5944_model) {
	_1aa5cd4bc_ExprDeadCode _6013_edc = static__1aa5cdac7_new(_self_);;
	_1aa5d4072_optimize(&_6013_edc, _5944_model);
}



inline void _1aa5ca497_eliminate_followed(_1aa5c9809_ScopeDeadCode* _self_) {
	if (((*_self_)._field_gotos.get().len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _7117_parent = (*_self_)._field_parent;;
	while ((_7117_parent != nullptr)) {
		{
			{
				(*(_7117_parent.get()._field_stmts))=(*(_7117_parent.get()._field_stmts)).slice(0LL,(_7117_parent.get()._field_i + 1LL));
			};
			_7117_parent=_7117_parent.get()._field_parent;
		}
	_iter_next_1bb5a96c9:;
	}
	_iter_end_1bb5a96c9:;;
}



inline void _1aa5ca71c_push_goto(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0dea7dc_GotoSt> _8033_gt) {
	jule::I32 _8117_i = 0LL;;
	for (; (_8117_i < _self_.get()._field_labels.get().len()); (_8117_i)++) {
		{
			if ((_8033_gt.get()._field_ident == (*(_self_.get()._field_labels))[_8117_i].get()._field_ident)) {
				return;;
			};
		}
	_iter_next_1bb5ac963:;
	}
	_iter_end_1bb5ac963:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>>::make({_8033_gt}));
}



inline void _1aa5ca992_push_label(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0dea600_Label> _9034_l) {
	jule::I32 _9117_i = 0LL;;
	while ((_9117_i < _self_.get()._field_gotos.get().len())) {
		{
			if ((_9034_l.get()._field_ident == (*(_self_.get()._field_gotos))[_9117_i].get()._field_ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_9117_i)), ((*(_self_.get()._field_gotos)).slice((_9117_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,(_self_.get()._field_gotos.get().len() - 1LL));
				goto _iter_next_1bb5ae569;
			};
			(_9117_i)++;
		}
	_iter_next_1bb5ae569:;
	}
	_iter_end_1bb5ae569:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1e0dea600_Label>>::make({_9034_l}));
}



inline void _1aa5cac17_optimize_range_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0dc6664_RangeIter> _10343_it) {
	_1aa5ca2bb_optimize_expr_model(_self_, _10343_it.get()._field_expr.get()._field_model);
	_1aa5ca046_optimize_body_child(_self_, _10343_it.get()._field_scope);
}



inline void _1aa5cae8c_optimize_while_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0d9879b_WhileIter> _10843_it) {
	_1aa5ca2bb_optimize_expr_model(_self_, _10843_it.get()._field_expr);
	if ((_10843_it.get()._field_next != nullptr)) {
		_1aa5ca2bb_optimize_expr_model(_self_, _10843_it.get()._field_next);
	};
	_1aa5ca046_optimize_body_child(_self_, _10843_it.get()._field_scope);
}



inline void _1aa5cb212_optimize_inf_iter(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0d985ae_InfIter> _11641_it) {
	_1aa5ca046_optimize_body_child(_self_, _11641_it.get()._field_scope);
}



inline void _1aa5cb487_optimize_conditional(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0d879aa_Conditional> _12044_c) {
	{
		auto &expr = _12044_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1bb5b520c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0ddcc41_If> _12121_case = *it;
			{
				if ((_12121_case != nullptr)) {
					_1aa5ca2bb_optimize_expr_model(_self_, _12121_case.get()._field_expr);
					_1aa5ca046_optimize_body_child(_self_, _12121_case.get()._field_scope);
				};
			}
			_iter_next_1bb5b520c:;
			++it;
			goto _iter_begin_1bb5b520c;
		}
		_iter_end_1bb5b520c:;
	};
	if ((_12044_c.get()._field_default != nullptr)) {
		if ((_12044_c.get()._field_elifs.len() == 0LL)) {
			_1aa5c9cc1_optimize_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		} else {
			_1aa5ca046_optimize_body_child(_self_, _12044_c.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1aa5cb70c_optimize_match(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0deb090_Match> _13838_m) {
	{
		auto &expr = _13838_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1bb5b7dbe:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deb4ad_Case> _13921_case = *it;
			{
				{
					auto &expr = _13921_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1bb5b8683:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e7ce9b_Data> _14025_expr = *it;
						{
							_1aa5ca2bb_optimize_expr_model(_self_, _14025_expr.get()._field_model);
						}
						_iter_next_1bb5b8683:;
						++it;
						goto _iter_begin_1bb5b8683;
					}
					_iter_end_1bb5b8683:;
				};
				_1aa5ca046_optimize_body_child(_self_, _13921_case.get()._field_scope);
			}
			_iter_next_1bb5b7dbe:;
			++it;
			goto _iter_begin_1bb5b7dbe;
		}
		_iter_end_1bb5b7dbe:;
	};
	if ((_13838_m.get()._field_default != nullptr)) {
		if ((_13838_m.get()._field_cases.len() == 0LL)) {
			_1aa5c9cc1_optimize_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		} else {
			_1aa5ca046_optimize_body_child(_self_, _13838_m.get()._field_default.get()._field_scope);
		};
	};
}



inline void _1aa5cb982_optimize_assign(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0deabb6_Assign> _15639_assign) {
	_1aa5ca2bb_optimize_expr_model(_self_, _15639_assign.get()._field_l.get()._field_model);
	_1aa5ca2bb_optimize_expr_model(_self_, _15639_assign.get()._field_r.get()._field_model);
}



inline void _1aa5cbc07_optimize_multi_assign(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Ptr<_1e0deada3_MultiAssign> _16145_assign) {
	{
		auto &expr = _16145_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1bb5bbc19:;
		if (it != expr.end()) {
			jule::Any _16221_l = *it;
			{
				if ((_16221_l != nullptr)) {
					_1aa5ca2bb_optimize_expr_model(_self_, _16221_l);
				};
			}
			_iter_next_1bb5bbc19:;
			++it;
			goto _iter_begin_1bb5bbc19;
		}
		_iter_end_1bb5bbc19:;
	};
	_1aa5ca2bb_optimize_expr_model(_self_, _16145_assign.get()._field_r);
}



inline void _1aa5cbe7c_optimize_stmt(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_, jule::Any _17037_st) {
	{
		auto &_match_expr{ _17037_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e0dd6322_Scope>>()) {
			_case_begin_1bb5bd0d3:;
			{
				jule::Ptr<_1e0dd6322_Scope> _17321_scope = _17037_st.operator jule::Ptr<_1e0dd6322_Scope>();;
				if (_17321_scope.get()._field_deferred) {
					_1aa5cc444_eliminate_dead_code_of_scope(_17321_scope);
				} else {
					_1aa5c9cc1_optimize_child(_self_, _17321_scope);
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
			_case_begin_1bb5bd29d:;
			{
				_1aa5cac17_optimize_range_iter(_self_, _17037_st.operator jule::Ptr<_1e0dc6664_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
			_case_begin_1bb5bd314:;
			{
				_1aa5cae8c_optimize_while_iter(_self_, _17037_st.operator jule::Ptr<_1e0d9879b_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
			_case_begin_1bb5bd37a:;
			{
				_1aa5cb212_optimize_inf_iter(_self_, _17037_st.operator jule::Ptr<_1e0d985ae_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d879aa_Conditional>>()) {
			_case_begin_1bb5bd3e1:;
			{
				_1aa5cb487_optimize_conditional(_self_, _17037_st.operator jule::Ptr<_1e0d879aa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
			_case_begin_1bb5bd457:;
			{
				_1aa5cb70c_optimize_match(_self_, _17037_st.operator jule::Ptr<_1e0deb090_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deabb6_Assign>>()) {
			_case_begin_1bb5bd4bd:;
			{
				_1aa5cb982_optimize_assign(_self_, _17037_st.operator jule::Ptr<_1e0deabb6_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deada3_MultiAssign>>()) {
			_case_begin_1bb5bd545:;
			{
				_1aa5cbc07_optimize_multi_assign(_self_, _17037_st.operator jule::Ptr<_1e0deada3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb5bd5bc:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _19421_d = _17037_st.operator jule::Ptr<_1e0e7ce9b_Data>();;
				{
					auto &_match_expr{ _19421_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>()) {
						_case_begin_1bb5c4518:;
						{
							_1aa5ca497_eliminate_followed(_self_.ptr());
						}
					}
					else {
						_case_begin_1bb5c3c54:;
						{
							_1aa5ca2bb_optimize_expr_model(_self_, _19421_d.get()._field_model);
						}
					}
					_match_end_1bb5c3bee:;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb887_RetSt>>()) {
			_case_begin_1bb5bd644:;
			{
				_1aa5ca497_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea7dc_GotoSt>>()) {
			_case_begin_1bb5bd6bb:;
			{
				_1aa5ca71c_push_goto(_self_, _17037_st.operator jule::Ptr<_1e0dea7dc_GotoSt>());
				_1aa5ca497_eliminate_followed(_self_.ptr());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea600_Label>>()) {
			_case_begin_1bb5bd743:;
			{
				_1aa5ca992_push_label(_self_, _17037_st.operator jule::Ptr<_1e0dea600_Label>());
			}
		}
		_match_end_1bb5bd204:;
	};
}



inline void _1aa5cc158_optimize_stmts(jule::Ptr<_1aa5c9809_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < _self_.get()._field_stmts->len()); (_self_.get()._field_i)++) {
		{
			_1aa5cbe7c_optimize_stmt(_self_, jule::Any((*(_self_.get()._field_stmts))[_self_.get()._field_i]));
		}
	_iter_next_1bb5be69a:;
	}
	_iter_end_1bb5be69a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5c9809_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos;
	_Stream << "}";
	return _Stream;
}



inline _1aa5cd4bc_ExprDeadCode static__1aa5cdac7_new(jule::Ptr<_1aa5c9809_ScopeDeadCode>& _4724_s) {
	return _1aa5cd4bc_ExprDeadCode{._field_s=_4724_s};
}



inline void _1aa5cdd4c_binary(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e011cdb7_BinopExprModel> _5325_m) {
	_1aa5d4072_optimize(&(*_self_), _5325_m.get()._field_left.get()._field_model);
	_1aa5d4072_optimize(&(*_self_), _5325_m.get()._field_right.get()._field_model);
}



inline void _1aa5ce0c2_unary(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0111cac_UnaryExprModel> _5824_m) {
	_1aa5d4072_optimize(&(*_self_), _5824_m.get()._field_expr.get()._field_model);
}



inline void _1aa5ce347_structure_lit(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0116982_StructLitExprModel> _6232_m) {
	{
		auto &expr = _6232_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1bb5c9c8d:;
		if (it != expr.end()) {
			jule::Ptr<_1e0116795_StructArgExprModel> _6321_arg = *it;
			{
				_1aa5d4072_optimize(&(*_self_), _6321_arg.get()._field_expr);
			}
			_iter_next_1bb5c9c8d:;
			++it;
			goto _iter_begin_1bb5c9c8d;
		}
		_iter_end_1bb5c9c8d:;
	};
}



inline void _1aa5ce5bc_alloc_structure(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e013ea76_AllocStructLitExprModel> _6834_m) {
	_1aa5ce347_structure_lit(&(*_self_), _6834_m.get()._field_lit);
}



inline void _1aa5ce842_casting(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e013ec63_CastingExprModel> _7226_m) {
	_1aa5d4072_optimize(&(*_self_), _7226_m.get()._field_expr);
}



inline void _1aa5ceab7_args(_1aa5cd4bc_ExprDeadCode* _self_, jule::Slice<jule::Any>& _7624_args) {
	{
		auto &expr = _7624_args;
		auto it = expr.begin();
		_iter_begin_1bb5cbce5:;
		if (it != expr.end()) {
			jule::Any _7721_arg = *it;
			{
				_1aa5d4072_optimize(&(*_self_), _7721_arg);
			}
			_iter_next_1bb5cbce5:;
			++it;
			goto _iter_begin_1bb5cbce5;
		}
		_iter_end_1bb5cbce5:;
	};
}



inline void _1aa5ced3c_func_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e013ee50_FnCallExprModel> _8228_m) {
	_1aa5d4072_optimize(&(*_self_), _8228_m.get()._field_expr);
	_1aa5ceab7_args(&(*_self_), _8228_m.get()._field_args);
	if ((_8228_m.get()._field_except != nullptr)) {
		_1aa5ca046_optimize_body_child((*_self_)._field_s, _8228_m.get()._field_except);
	};
}



inline void _1aa5d00b2_slice(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e014013c_SliceExprModel> _9024_m) {
	_1aa5ceab7_args(&(*_self_), _9024_m.get()._field_elems);
}



inline void _1aa5d0337_array(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e01415b1_ArrayExprModel> _9424_m) {
	if (((_9424_m.get()._field_elems.len() == 2LL) && (_9424_m.get()._field_elems[1LL] == nullptr))) {
		_1aa5d4072_optimize(&(*_self_), _9424_m.get()._field_elems[0LL]);
	};
	_1aa5ceab7_args(&(*_self_), _9424_m.get()._field_elems);
}



inline void _1aa5d05ac_indexing(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0140329_IndexingExprModel> _10127_m) {
	_1aa5d4072_optimize(&(*_self_), _10127_m.get()._field_expr.get()._field_model);
	_1aa5d4072_optimize(&(*_self_), _10127_m.get()._field_index.get()._field_model);
}



inline void _1aa5d0832_anon_func(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0140516_AnonFnExprModel> _10628_m) {
	_1aa5cc444_eliminate_dead_code_of_scope(_10628_m.get()._field_func.get()._field_scope);
}



inline void _1aa5d0aa7_map(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e01408e0_MapExprModel> _11022_m) {
	{
		auto &expr = _11022_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1bb5d30e8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0140703_KeyValPairExprModel> _11121_pair = *it;
			{
				_1aa5d4072_optimize(&(*_self_), _11121_pair.get()._field_key);
				_1aa5d4072_optimize(&(*_self_), _11121_pair.get()._field_val);
			}
			_iter_next_1bb5d30e8:;
			++it;
			goto _iter_begin_1bb5d30e8;
		}
		_iter_end_1bb5d30e8:;
	};
}



inline void _1aa5d0d2c_slicing(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0140acc_SlicingExprModel> _11726_m) {
	_1aa5d4072_optimize(&(*_self_), _11726_m.get()._field_expr);
	_1aa5d4072_optimize(&(*_self_), _11726_m.get()._field_left);
	if ((_11726_m.get()._field_right != nullptr)) {
		_1aa5d4072_optimize(&(*_self_), _11726_m.get()._field_right);
	};
}



inline void _1aa5d10a2_trait_sub(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel> _12528_m) {
	_1aa5d4072_optimize(&(*_self_), _12528_m.get()._field_expr);
}



inline void _1aa5d1327_structure_sub(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e01411d7_StructSubIdentExprModel> _12932_m) {
	_1aa5d4072_optimize(&(*_self_), _12932_m.get()._field_expr.get()._field_model);
}



inline void _1aa5d159c_common_sub(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e014198a_CommonSubIdentExprModel> _13329_m) {
	_1aa5d4072_optimize(&(*_self_), _13329_m.get()._field_expr);
}



inline void _1aa5d1822_tuple(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0141b77_TupleExprModel> _13724_m) {
	{
		auto &expr = _13724_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1bb5d7707:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e7ce9b_Data> _13821_d = *it;
			{
				_1aa5d4072_optimize(&(*_self_), _13821_d.get()._field_model);
			}
			_iter_next_1bb5d7707:;
			++it;
			goto _iter_begin_1bb5d7707;
		}
		_iter_end_1bb5d7707:;
	};
}



inline void _1aa5d1a97_new_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e014242a_BuiltinNewCallExprModel> _14327_m) {
	if ((_14327_m.get()._field_init != nullptr)) {
		_1aa5d4072_optimize(&(*_self_), _14327_m.get()._field_init);
	};
}



inline void _1aa5d1d1c_out_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel> _14927_m) {
	_1aa5d4072_optimize(&(*_self_), _14927_m.get()._field_expr);
}



inline void _1aa5d2092_outln_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel> _15329_m) {
	_1aa5d4072_optimize(&(*_self_), _15329_m.get()._field_expr);
}



inline void _1aa5d2317_panic_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel> _15729_m) {
	_1aa5d4072_optimize(&(*_self_), _15729_m.get()._field_expr);
}



inline void _1aa5d258c_assert_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel> _16130_m) {
	_1aa5d4072_optimize(&(*_self_), _16130_m.get()._field_expr);
}



inline void _1aa5d2812_error_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel> _16529_m) {
	_1aa5d4072_optimize(&(*_self_), _16529_m.get()._field_err);
}



inline void _1aa5d2a87_make_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel> _16928_m) {
	if ((_16928_m.get()._field_len != nullptr)) {
		_1aa5d4072_optimize(&(*_self_), _16928_m.get()._field_len);
	};
	if ((_16928_m.get()._field_cap != nullptr)) {
		_1aa5d4072_optimize(&(*_self_), _16928_m.get()._field_cap);
	};
}



inline void _1aa5d2d0c_append_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel> _17830_m) {
	_1aa5d4072_optimize(&(*_self_), _17830_m.get()._field_dest);
	_1aa5d4072_optimize(&(*_self_), _17830_m.get()._field_elements);
}



inline void _1aa5d3082_clone_call(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel> _18329_m) {
	_1aa5d4072_optimize(&(*_self_), _18329_m.get()._field_expr);
}



inline void _1aa5d3307_sizeof(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0140ea6_SizeofExprModel> _18725_m) {
	_1aa5d4072_optimize(&(*_self_), _18725_m.get()._field_expr);
}



inline void _1aa5d357c_alignof(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0143717_AlignofExprModel> _19126_m) {
	_1aa5d4072_optimize(&(*_self_), _19126_m.get()._field_expr);
}



inline void _1aa5d3802_integrated_to_str(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel> _19536_m) {
	_1aa5d4072_optimize(&(*_self_), _19536_m.get()._field_expr);
}



inline void _1aa5d3a77_free(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0143eba_FreeExprModel> _19923_m) {
	_1aa5d4072_optimize(&(*_self_), _19923_m.get()._field_expr);
}



inline void _1aa5d3cec_backend_emit(_1aa5cd4bc_ExprDeadCode* _self_, jule::Ptr<_1e0143ccd_BackendEmitExprModel> _20331_m) {
	_1aa5ceab7_args(&(*_self_), _20331_m.get()._field_exprs);
}



inline void _1aa5d4072_optimize(_1aa5cd4bc_ExprDeadCode* _self_, jule::Any& _20728_model) {
	{
		auto &_match_expr{ _20728_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb5e2976:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _21021_d = _20728_model.operator jule::Ptr<_1e0e7ce9b_Data>();;
				_1aa5d4072_optimize(&(*_self_), _21021_d.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
			_case_begin_1bb5e29dc:;
			{
				_1aa5cdd4c_binary(&(*_self_), _20728_model.operator jule::Ptr<_1e011cdb7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
			_case_begin_1bb5e2a53:;
			{
				_1aa5ce0c2_unary(&(*_self_), _20728_model.operator jule::Ptr<_1e0111cac_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0116982_StructLitExprModel>>()) {
			_case_begin_1bb5e2e71:;
			{
				_1aa5ce347_structure_lit(&(*_self_), _20728_model.operator jule::Ptr<_1e0116982_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ea76_AllocStructLitExprModel>>()) {
			_case_begin_1bb5e2ed7:;
			{
				_1aa5ce5bc_alloc_structure(&(*_self_), _20728_model.operator jule::Ptr<_1e013ea76_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ec63_CastingExprModel>>()) {
			_case_begin_1bb5e304d:;
			{
				_1aa5ce842_casting(&(*_self_), _20728_model.operator jule::Ptr<_1e013ec63_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1bb5e30b4:;
			{
				_1aa5ced3c_func_call(&(*_self_), _20728_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
			_case_begin_1bb5e312a:;
			{
				_1aa5d00b2_slice(&(*_self_), _20728_model.operator jule::Ptr<_1e014013c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01415b1_ArrayExprModel>>()) {
			_case_begin_1bb5e31a2:;
			{
				_1aa5d0337_array(&(*_self_), _20728_model.operator jule::Ptr<_1e01415b1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140329_IndexingExprModel>>()) {
			_case_begin_1bb5e3229:;
			{
				_1aa5d05ac_indexing(&(*_self_), _20728_model.operator jule::Ptr<_1e0140329_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140516_AnonFnExprModel>>()) {
			_case_begin_1bb5e32a1:;
			{
				_1aa5d0832_anon_func(&(*_self_), _20728_model.operator jule::Ptr<_1e0140516_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01408e0_MapExprModel>>()) {
			_case_begin_1bb5e3328:;
			{
				_1aa5d0aa7_map(&(*_self_), _20728_model.operator jule::Ptr<_1e01408e0_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140acc_SlicingExprModel>>()) {
			_case_begin_1bb5e33a0:;
			{
				_1aa5d0d2c_slicing(&(*_self_), _20728_model.operator jule::Ptr<_1e0140acc_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
			_case_begin_1bb5e3427:;
			{
				_1aa5d10a2_trait_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1bb5e349e:;
			{
				_1aa5d1327_structure_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014198a_CommonSubIdentExprModel>>()) {
			_case_begin_1bb5e3526:;
			{
				_1aa5d159c_common_sub(&(*_self_), _20728_model.operator jule::Ptr<_1e014198a_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141b77_TupleExprModel>>()) {
			_case_begin_1bb5e359d:;
			{
				_1aa5d1822_tuple(&(*_self_), _20728_model.operator jule::Ptr<_1e0141b77_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>>()) {
			_case_begin_1bb5e3625:;
			{
				_1aa5d1d1c_out_call(&(*_self_), _20728_model.operator jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1bb5e369c:;
			{
				_1aa5d2092_outln_call(&(*_self_), _20728_model.operator jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014242a_BuiltinNewCallExprModel>>()) {
			_case_begin_1bb5e3724:;
			{
				_1aa5d1a97_new_call(&(*_self_), _20728_model.operator jule::Ptr<_1e014242a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>()) {
			_case_begin_1bb5e379b:;
			{
				_1aa5d2317_panic_call(&(*_self_), _20728_model.operator jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>>()) {
			_case_begin_1bb5e3823:;
			{
				_1aa5d258c_assert_call(&(*_self_), _20728_model.operator jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bb5e389a:;
			{
				_1aa5d2812_error_call(&(*_self_), _20728_model.operator jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>>()) {
			_case_begin_1bb5e3922:;
			{
				_1aa5d2a87_make_call(&(*_self_), _20728_model.operator jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>>()) {
			_case_begin_1bb5e3999:;
			{
				_1aa5d2d0c_append_call(&(*_self_), _20728_model.operator jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1bb5e3a21:;
			{
				_1aa5d3082_clone_call(&(*_self_), _20728_model.operator jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140ea6_SizeofExprModel>>()) {
			_case_begin_1bb5e3a98:;
			{
				_1aa5d3307_sizeof(&(*_self_), _20728_model.operator jule::Ptr<_1e0140ea6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143717_AlignofExprModel>>()) {
			_case_begin_1bb5e3b20:;
			{
				_1aa5d357c_alignof(&(*_self_), _20728_model.operator jule::Ptr<_1e0143717_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>>()) {
			_case_begin_1bb5e3b97:;
			{
				_1aa5d3802_integrated_to_str(&(*_self_), _20728_model.operator jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143eba_FreeExprModel>>()) {
			_case_begin_1bb5e3c1e:;
			{
				_1aa5d3a77_free(&(*_self_), _20728_model.operator jule::Ptr<_1e0143eba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ccd_BackendEmitExprModel>>()) {
			_case_begin_1bb5e3c96:;
			{
				_1aa5d3cec_backend_emit(&(*_self_), _20728_model.operator jule::Ptr<_1e0143ccd_BackendEmitExprModel>());
			}
		}
		_match_end_1bb5e2b85:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5cd4bc_ExprDeadCode _Src) {
	_Stream << "ExprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed83964c_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed83996b_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed839d34_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed83a3b7_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ed83a791_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ed83b95c_ScopeOptimizer> static__1ed83bde1_new(jule::Ptr<_1e0dd6322_Scope> _4527_scope) {
	return jule::new_ptr<_1ed83b95c_ScopeOptimizer>(_1ed83b95c_ScopeOptimizer{._field_scope=_4527_scope});
}



inline void _1ed83c166_set_current_stmt(_1ed83b95c_ScopeOptimizer* _self_, jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=jule::Any(_5139_stmt);
}



inline void _1ed83c3db_optimize_data(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0e7ce9b_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1bb62b64c:;
			{
				jule::Ptr<_1e013ee50_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>();;
				if (_1db66070a_PRODUCTION) {
					if (((!(_1e0146550_is_builtin(_5821_m.get()._field_func.ptr()))) && _1ed8402bd_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token.get()._field_file.get()._field_path,jule::Str("debug", 5)))) {
						_1ed83c166_set_current_stmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1bb62b5b4:;
	};
	static__1ed842523_optimize(_5536_d.get()._field_model);
}



inline void _1ed83c661_optimize_var(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0e366e6_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1ed842523_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1ed83c8d6_optimize_conditional(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0d879aa_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1bb62ea5c:;
		if (it != expr.end()) {
			jule::Ptr<_1e0ddcc41_If> _7721_elif = *it;
			{
				static__1ed842523_optimize(_7721_elif.get()._field_expr);
				_1ed83ebe6_optimize_child(&(*_self_), _7721_elif.get()._field_scope);
			}
			_iter_next_1bb62ea5c:;
			++it;
			goto _iter_begin_1bb62ea5c;
		}
		_iter_end_1bb62ea5c:;
	};
	if ((_7643_c.get()._field_default != nullptr)) {
		_1ed83ebe6_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	};
	if ((!(_1ed849d66_COND))) {
		return;;
	};
	jule::Bool _8917_const_case = false;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1bb631a1a:;
		if (it != expr.end()) {
			jule::I32 _9214_i = it - expr.begin();
			jule::Ptr<_1e0ddcc41_If> _9221_elif = *it;
			{
				if ((!(_1ed8405dc_is_constant_valid_conditional_case(_9221_elif)))) {
					goto _iter_next_1bb631a1a;
				};
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_9214_i);
				_7643_c.get()._field_default=jule::new_ptr<_1e0d877bd_Else>(_1e0d877bd_Else{._field_scope=_9221_elif.get()._field_scope});
				goto _iter_end_1bb631a1a;
			}
			_iter_next_1bb631a1a:;
			++it;
			_9214_i++;
			goto _iter_begin_1bb631a1a;
		}
		_iter_end_1bb631a1a:;
	};
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e0ddcc41_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));;
	jule::Ptr<_1e0ddcc41_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1ed840e6c_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1bb6348b9:;
	}
	_iter_end_1bb6348b9:;;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_const_case))) {
		return;;
	};
	jule::I32 _12817_only = -1LL;;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1bb63616d:;
		if (it != expr.end()) {
			jule::I32 _12913_j = it - expr.begin();
			jule::Ptr<_1e0ddcc41_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1bb63616d:;
			++it;
			_12913_j++;
			goto _iter_begin_1bb63616d;
		}
		_iter_end_1bb63616d:;
	};
	if ((_12817_only != -1LL)) {
		_1ed83c166_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	};
}



inline void _1ed83ccc1_build_default_constat_true_case(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deb4ad_Case> _14554_case, jule::I32& _14572_i, jule::Ptr<_1e0deb090_Match>& _14585_m) {
	_14554_case.get()._field_exprs=nullptr;
	jule::I32 _14713_start = _14572_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14554_case.get()._field_scope.get()._field_stmts.len() == 0LL)) {
				goto _iter_end_1bb63858d;
			};
			jule::Any &_15322_stmt = _14554_case.get()._field_scope.get()._field_stmts[(_14554_case.get()._field_scope.get()._field_stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type_is<jule::Ptr<_1e0deb69a_FallSt>>()) {
					_case_begin_1bb63a43b:;
					{
						(_14572_i)++;
						if ((_14572_i >= _14585_m.get()._field_cases.len())) {
							_15322_stmt=jule::Any(_14585_m.get()._field_default.get()._field_scope);
							goto _iter_end_1bb63858d;
						};
						_14554_case=_14585_m.get()._field_cases[_14572_i];
						_15322_stmt=jule::Any(_14554_case.get()._field_scope);
					}
				}
				else {
					_case_begin_1bb63a2d7:;
					{
						goto _iter_end_1bb63858d;
					}
				}
				_match_end_1bb63a282:;
			};
		}
	_iter_next_1bb63858d:;
	}
	_iter_end_1bb63858d:;;
	_14585_m.get()._field_default=_14585_m.get()._field_cases[_14713_start];
	_14585_m.get()._field_cases=_14585_m.get()._field_cases.slice(0LL,_14713_start);
}



inline void _1ed83d057_optimize_match(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deb090_Match> _17137_m) {
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1bb63c3d8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deb4ad_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1bb63cbbe:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e7ce9b_Data> _17325_expr = *it;
						{
							static__1ed842523_optimize(_17325_expr.get()._field_model);
						}
						_iter_next_1bb63cbbe:;
						++it;
						goto _iter_begin_1bb63cbbe;
					}
					_iter_end_1bb63cbbe:;
				};
				_1ed83ebe6_optimize_child(&(*_self_), _17221_case.get()._field_scope);
			}
			_iter_next_1bb63c3d8:;
			++it;
			goto _iter_begin_1bb63c3d8;
		}
		_iter_end_1bb63c3d8:;
	};
	if ((_17137_m.get()._field_default != nullptr)) {
		_1ed83ebe6_optimize_child(&(*_self_), _17137_m.get()._field_default.get()._field_scope);
	};
	if ((!(_1ed849d66_COND))) {
		return;;
	};
	jule::Bool _18617_const_case = false;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1bb63e86e:;
		if (it != expr.end()) {
			jule::I32 _18918_i = it - expr.begin();
			jule::Ptr<_1e0deb4ad_Case> _18925_case = *it;
			{
				if ((!(_1ed840b92_is_constant_valid_match_case(_18925_case)))) {
					goto _iter_next_1bb63e86e;
				};
				_18617_const_case=true;
				_1ed83ccc1_build_default_constat_true_case(&(*_self_), _18925_case,_18918_i,_17137_m);
				goto _iter_end_1bb63e86e;
			}
			_iter_next_1bb63e86e:;
			++it;
			_18918_i++;
			goto _iter_begin_1bb63e86e;
		}
		_iter_end_1bb63e86e:;
	};
	if ((_17137_m.get()._field_cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1e0deb4ad_Case>* _20317_i = (&(_17137_m.get()._field_cases[0LL]));;
	jule::Ptr<_1e0deb4ad_Case>* _20413_end = (&(_17137_m.get()._field_cases[(_17137_m.get()._field_cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1ed841247_is_unreachable_match_case((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1bb6423bb:;
	}
	_iter_end_1bb6423bb:;;
	if ((!(_18617_const_case))) {
		return;;
	};
	jule::I32 _21817_only = -1LL;;
	{
		auto &expr = _17137_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1bb6435dc:;
		if (it != expr.end()) {
			jule::I32 _21913_j = it - expr.begin();
			jule::Ptr<_1e0deb4ad_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1bb6435dc:;
			++it;
			_21913_j++;
			goto _iter_begin_1bb6435dc;
		}
		_iter_end_1bb6435dc:;
	};
	if ((_21817_only != -1LL)) {
		_1ed83c166_set_current_stmt(&(*_self_), jule::Any(_17137_m.get()._field_cases[_21817_only].get()._field_scope));
	};
}



inline void _1ed83d2cc_optimize_range_iter(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0dc6664_RangeIter> _23542_it) {
	static__1ed842523_optimize(_23542_it.get()._field_expr.get()._field_model);
	_1ed83ebe6_optimize_child(&(*_self_), _23542_it.get()._field_scope);
}



inline void _1ed83d552_optimize_while_iter(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0d9879b_WhileIter> _24042_it) {
	static__1ed842523_optimize(_24042_it.get()._field_expr);
	_1ed83e971_optimize_stmt(&(*_self_), jule::Any(_24042_it.get()._field_next));
	_1ed83ebe6_optimize_child(&(*_self_), _24042_it.get()._field_scope);
}



inline jule::Bool _1ed83d860_substr(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deabb6_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0140acc_SlicingExprModel>>()) {
			_case_begin_1bb647723:;
			{
				jule::Ptr<_1e0140acc_SlicingExprModel> _24921_sem = _24629_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e0140acc_SlicingExprModel>();;
				if ((_24921_sem.get()._field_expr == _24629_a.get()._field_l.get()._field_model)) {
					_1ed83c166_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ed83a3b7_MutSlicingExprModel>(_1ed83a3b7_MutSlicingExprModel{._field_token=_24921_sem.get()._field_token, ._field_expr=jule::Any(_24921_sem.get()._field_expr), ._field_left=jule::Any(_24921_sem.get()._field_left), ._field_right=jule::Any(_24921_sem.get()._field_right)})));
					return true;
				};
			}
		}
		_match_end_1bb64768a:;
	};
	return false;
}



inline jule::Bool _1ed83db6d_str_insert(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deabb6_Assign> _26333_a) {
	{
		auto &_match_expr{ _26333_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
			_case_begin_1bb649c20:;
			{
				jule::Ptr<_1e011cdb7_BinopExprModel> _26621_m = _26333_a.get()._field_r.get()._field_model.operator jule::Ptr<_1e011cdb7_BinopExprModel>();;
				if ((_26621_m.get()._field_right.get()._field_model == _26333_a.get()._field_l.get()._field_model)) {
					_1ed83c166_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ed83a791_StrInsertBeginExprModel>(_1ed83a791_StrInsertBeginExprModel{._field_dest=jule::Any(_26333_a.get()._field_l.get()._field_model), ._field_expr=jule::Any(_26621_m.get()._field_left.get()._field_model)})));
					return true;
				};
			}
		}
		_match_end_1bb649b65:;
	};
	return false;
}



inline jule::Bool _1ed83de7b_str_assign(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deabb6_Assign> _27833_a) {
	if ((_27833_a.get()._field_op.get()._field_kind != jule::Str("=", 1))) {
		return false;
	};
	jule::Ptr<_1ed781693_Prim> _28213_lp = _1ed77dc89_prim(_27833_a.get()._field_l.get()._field_kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1ed784652_is_str(_28213_lp.ptr()))))) {
		return false;
	};
	{
		
		if (_1ed83d860_substr(&(*_self_), _27833_a) || _1ed83db6d_str_insert(&(*_self_), _27833_a)) {
			_case_begin_1bb64d592:;
			{
				return true;
			}
		}
		_match_end_1bb64d509:;
	};
	return false;
}



inline void _1ed83e201_optimize_assign(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deabb6_Assign> _29438_assign) {
	if ((_1ed848ace_COPY && _1ed83de7b_str_assign(&(*_self_), _29438_assign))) {
		return;;
	};
	static__1ed842523_optimize(_29438_assign.get()._field_l.get()._field_model);
	static__1ed842523_optimize(_29438_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _29438_assign.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bb64e83a:;
			{
				if ((_1ed849371_MATH && (_1ed7801db_strct(_29438_assign.get()._field_l.get()._field_kind.ptr()) == nullptr))) {
					_29438_assign.get()._field_op.get()._field_kind=_29438_assign.get()._field_op.get()._field_kind.slice(0LL,(_29438_assign.get()._field_op.get()._field_kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1e011cdb7_BinopExprModel>(_1e011cdb7_BinopExprModel{._field_left=_29438_assign.get()._field_l, ._field_right=_29438_assign.get()._field_r, ._field_op=_29438_assign.get()._field_op}));;
					static__1ed842523_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
							_case_begin_1bb652c5b:;
							{
								_29438_assign.get()._field_r=jule::new_ptr<_1e0116dc2_OperandExprModel>((*(_29438_assign.get()._field_r)));
								_29438_assign.get()._field_op.get()._field_kind=jule::Str("=", 1);
								_29438_assign.get()._field_r.get()._field_model=jule::Any(_30725_model);
								return;;
							}
						}
						_match_end_1bb6529c5:;
					};
					_29438_assign.get()._field_op.get()._field_kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1bb6506b5:;
	};
	if (_1ed8490c9_APPEND) {
		{
			auto &_match_expr{ _29438_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>>()) {
				_case_begin_1bb6547a7:;
				{
					jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel> _32825_m = _29438_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>();;
					{
						auto &_match_expr{ _32825_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
							_case_begin_1bb655753:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>() || _match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
										_case_begin_1bb65605b:;
										{
											_1ed83c166_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1ed839d34_PushToSliceExprModel>(_1ed839d34_PushToSliceExprModel{._field_dest=jule::Any(_32825_m.get()._field_dest), ._field_elems=_32825_m.get()._field_elements.operator jule::Ptr<_1e014013c_SliceExprModel>()})));
										}
									}
									_match_end_1bb655ec3:;
								};
							}
						}
						_match_end_1bb6556ba:;
					};
				}
			}
			_match_end_1bb6546ec:;
		};
	};
}



inline void _1ed83e476_optimize_multi_assign(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deada3_MultiAssign> _34444_assign) {
	{
		auto &expr = _34444_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1bb654c08:;
		if (it != expr.end()) {
			jule::I32 _34514_i = it - expr.begin();
			jule::Any _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1ed842523_optimize(_34521_l);
					_34444_assign.get()._field_l[_34514_i]=jule::Any(_34521_l);
				};
			}
			_iter_next_1bb654c08:;
			++it;
			_34514_i++;
			goto _iter_begin_1bb654c08;
		}
		_iter_end_1bb654c08:;
	};
	static__1ed842523_optimize(_34444_assign.get()._field_r);
}



inline void _1ed83e6eb_optimize_ret(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0deb887_RetSt> _35435_r) {
	static__1ed842523_optimize(_35435_r.get()._field_expr);
}



inline void _1ed83e971_optimize_stmt(_1ed83b95c_ScopeOptimizer* _self_, jule::Any _35836_stmt) {
	{
		auto &_match_expr{ _35836_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e0dd6322_Scope>>()) {
			_case_begin_1bb658b41:;
			{
				_1ed83ebe6_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0dd6322_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb658bb8:;
			{
				_1ed83c3db_optimize_data(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0e7ce9b_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1bb658c2e:;
			{
				_1ed83c661_optimize_var(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0e366e6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d879aa_Conditional>>()) {
			_case_begin_1bb658c95:;
			{
				_1ed83c8d6_optimize_conditional(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0d879aa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
			_case_begin_1bb658d0b:;
			{
				_1ed83d2cc_optimize_range_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0dc6664_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
			_case_begin_1bb658d83:;
			{
				_1ed83d552_optimize_while_iter(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0d9879b_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
			_case_begin_1bb658e0a:;
			{
				_1ed83ebe6_optimize_child(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0d985ae_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deabb6_Assign>>()) {
			_case_begin_1bb658e82:;
			{
				_1ed83e201_optimize_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0deabb6_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deada3_MultiAssign>>()) {
			_case_begin_1bb659009:;
			{
				_1ed83e476_optimize_multi_assign(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0deada3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
			_case_begin_1bb659081:;
			{
				_1ed83d057_optimize_match(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0deb090_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb887_RetSt>>()) {
			_case_begin_1bb659108:;
			{
				_1ed83e6eb_optimize_ret(&(*_self_), _35836_stmt.operator jule::Ptr<_1e0deb887_RetSt>());
			}
		}
		_match_end_1bb658a0e:;
	};
}



inline void _1ed83ebe6_optimize_child(_1ed83b95c_ScopeOptimizer* _self_, jule::Ptr<_1e0dd6322_Scope> _38537_child) {
	jule::Ptr<_1ed83b95c_ScopeOptimizer> _38617_so = static__1ed83bde1_new(_38537_child);;
	_1ed83edc2_optimize(_38617_so.ptr());
}



inline void _1ed83edc2_optimize(_1ed83b95c_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1bb6609e4:;
		if (it != expr.end()) {
			jule::I32 _39214_i = it - expr.begin();
			jule::Any _39221_stmt = *it;
			{
				(*_self_)._field_i=_39214_i;
				_1ed83e971_optimize_stmt(&(*_self_), jule::Any(_39221_stmt));
			}
			_iter_next_1bb6609e4:;
			++it;
			_39214_i++;
			goto _iter_begin_1bb6609e4;
		}
		_iter_end_1bb6609e4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ed83b95c_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ed842523_optimize(jule::Any& _5533_model) {
	if (_1aa4d0710_expr_enabled) {
		jule::Ptr<_1ed84205b_ExprOptimizer> _5821_exop = jule::new_ptr<_1ed84205b_ExprOptimizer>(_1ed84205b_ExprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5533_model))))});;
		_1ed847ea7_do(_5821_exop.ptr());
	};
}



inline jule::Bool _1ed842831_str_cond(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e011cdb7_BinopExprModel> _6527_m) {
	jule::Ptr<_1ed781693_Prim> _6613_lp = _1ed77dc89_prim(_6527_m.get()._field_left.get()._field_kind.ptr());;
	if (((_6613_lp == nullptr) || (!(_1ed784652_is_str(_6613_lp.ptr()))))) {
		return false;
	};
	if (((_6527_m.get()._field_op.get()._field_kind != jule::Str("==", 2)) && (_6527_m.get()._field_op.get()._field_kind != jule::Str("!=", 2)))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1ad89dbeb:;
			{
				std::tie(_6527_m.get()._field_left,_6527_m.get()._field_right) = std::make_tuple(_6527_m.get()._field_right,_6527_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1ad89db41:;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1ad89d37c:;
			{
				goto _match_end_1ad89eb75;
			}
		}
		else {
			_case_begin_1ad89ec0d:;
			{
				return true;
			}
		}
		_match_end_1ad89eb75:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e0d4da1a_Const> _8513_c = _6527_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e0d4da1a_Const>();;
	if ((!(_1e0d5091d_read_str(_8513_c.ptr()).empty()))) {
		return false;
	};
	{
		auto &_match_expr{ _6527_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ad8a101c:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)}));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ad8a1380:;
			{
				jule::Ptr<_1dd9941e0_Token> _9721_op = _6527_m.get()._field_op;;
				_9721_op.get()._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1e0111cac_UnaryExprModel>(_1e0111cac_UnaryExprModel{._field_expr=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_model=jule::Any(jule::new_ptr<_1e014198a_CommonSubIdentExprModel>(_1e014198a_CommonSubIdentExprModel{._field_expr_kind=_6527_m.get()._field_left.get()._field_kind, ._field_expr=jule::Any(_6527_m.get()._field_left.get()._field_model), ._field_ident=jule::Str("empty()", 7)})), }), ._field_op=_9721_op}));
			}
		}
		_match_end_1ad8a132a:;
	};
	return true;
}



inline void _1ed842aa6_binary(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e011cdb7_BinopExprModel> _11325_m) {
	static__1ed842523_optimize(_11325_m.get()._field_left.get()._field_model);
	static__1ed842523_optimize(_11325_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11325_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1ad8a1418:;
			{
				goto _match_end_1ad8a4e99;
			}
		}
		else {
			_case_begin_1ad8a5054:;
			{
				return;;
			}
		}
		_match_end_1ad8a4e99:;
	};
	if ((_1ed849d66_COND && _1ed842831_str_cond(&(*_self_), _11325_m))) {
		return;;
	};
	if ((!(_1ed849371_MATH))) {
		return;;
	};
	{
		auto &_match_expr{ _11325_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ad8a6143:;
			{
				jule::Bool _13318_ok;;
				jule::U64 _13322_x;;
				std::tie(_13318_ok,_13322_x) = _1ed8483c5_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_13318_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1e0d4da1a_Const> _13625_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e0d4da1a_Const>();;
					_1e0d518b9_set_u64(_13625_c.ptr(), _13322_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ad8a61a9:;
			{
				jule::Bool _14118_ok;;
				jule::U64 _14122_x;;
				std::tie(_14118_ok,_14122_x) = _1ed8483c5_check_for_bit_shift_opt(_11325_m.get()._field_left,_11325_m.get()._field_right);
				if (_14118_ok) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1e0d4da1a_Const> _14425_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e0d4da1a_Const>();;
					_1e0d518b9_set_u64(_14425_c.ptr(), _14122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ad8a6220:;
			{
				jule::Ptr<_1e0d4da1a_Const> _14921_c = _11325_m.get()._field_right.get()._field_model.operator jule::Ptr<_1e0d4da1a_Const>();;
				jule::F64 _15017_d = _1e0d513be_as_f64(_14921_c.ptr());;
				if ((_15017_d == 2LL)) {
					_11325_m.get()._field_op.get()._field_kind=jule::Str("&", 1);
					_1e0d51644_set_i64(_14921_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ad8a6000:;
	};
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ed83964c_UnsafeBinopExprModel>(_1ed83964c_UnsafeBinopExprModel{._field_node=_11325_m}));
}



inline void _1ed842d2b_unary(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0111cac_UnaryExprModel> _16124_m) {
	static__1ed842523_optimize(_16124_m.get()._field_expr.get()._field_model);
	if ((_1ed849a7a_PTR && (_16124_m.get()._field_op.get()._field_kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16124_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
				_case_begin_1ad8acc0a:;
				{
					jule::Ptr<_1e0111cac_UnaryExprModel> _16625_um = _16124_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e0111cac_UnaryExprModel>();;
					if ((_16625_um.get()._field_op.get()._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=jule::Any(_16625_um.get()._field_expr.get()._field_model);
					};
				}
			}
			_match_end_1ad8acb72:;
		};
	};
}



inline void _1ed8430a1_structure_lit(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0116982_StructLitExprModel> _17432_m) {
	{
		auto &expr = _17432_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1ad8ae844:;
		if (it != expr.end()) {
			jule::Ptr<_1e0116795_StructArgExprModel> _17521_arg = *it;
			{
				static__1ed842523_optimize(_17521_arg.get()._field_expr);
			}
			_iter_next_1ad8ae844:;
			++it;
			goto _iter_begin_1ad8ae844;
		}
		_iter_end_1ad8ae844:;
	};
}



inline void _1ed843326_alloc_structure(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e013ea76_AllocStructLitExprModel> _18034_m) {
	_1ed8430a1_structure_lit(&(*_self_), _18034_m.get()._field_lit);
}



inline void _1ed84359b_casting(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e013ec63_CastingExprModel> _18426_m) {
	static__1ed842523_optimize(_18426_m.get()._field_expr);
}



inline void _1ed843821_args(_1ed84205b_ExprOptimizer* _self_, jule::Slice<jule::Any>& _18824_args) {
	{
		auto &expr = _18824_args;
		auto it = expr.begin();
		_iter_begin_1ad8b0aed:;
		if (it != expr.end()) {
			jule::I32 _18914_i = it - expr.begin();
			jule::Any _18921_arg = *it;
			{
				static__1ed842523_optimize(_18921_arg);
				_18824_args[_18914_i]=jule::Any(_18921_arg);
			}
			_iter_next_1ad8b0aed:;
			++it;
			_18914_i++;
			goto _iter_begin_1ad8b0aed;
		}
		_iter_end_1ad8b0aed:;
	};
}



inline void _1ed843a96_scope(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0dd6322_Scope>& _19525_s) {
	jule::Ptr<_1ed83b95c_ScopeOptimizer> _19617_scopt = static__1ed83bde1_new(_19525_s);;
	_1ed83edc2_optimize(_19617_scopt.ptr());
}



inline void _1ed843d1b_func_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e013ee50_FnCallExprModel> _20028_m) {
	static__1ed842523_optimize(_20028_m.get()._field_expr);
	_1ed843821_args(&(*_self_), _20028_m.get()._field_args);
	if ((_20028_m.get()._field_except != nullptr)) {
		_1ed843a96_scope(&(*_self_), _20028_m.get()._field_except);
	};
}



inline void _1ed844091_slice(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e014013c_SliceExprModel> _20824_m) {
	_1ed843821_args(&(*_self_), _20824_m.get()._field_elems);
}



inline void _1ed844316_array(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e01415b1_ArrayExprModel> _21224_m) {
	if (((_21224_m.get()._field_elems.len() == 2LL) && (_21224_m.get()._field_elems[1LL] == nullptr))) {
		jule::Any _21421_elem = _21224_m.get()._field_elems[0LL];;
		static__1ed842523_optimize(_21421_elem);
		_21224_m.get()._field_elems[0LL]=jule::Any(_21421_elem);
	};
	_1ed843821_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _1ed84458b_indexing(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0140329_IndexingExprModel> _22127_m) {
	static__1ed842523_optimize(_22127_m.get()._field_expr.get()._field_model);
	static__1ed842523_optimize(_22127_m.get()._field_index.get()._field_model);
	if ((!(_1ed8495c4_ACCESS))) {
		return;;
	};
	jule::Bool _22713_array = (_1ed77e99e_arr(_22127_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);;
	if ((_22713_array && _1e0e7d85e_is_const(_22127_m.get()._field_index.ptr()))) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ed83996b_UnsafeIndexingExprModel>(_1ed83996b_UnsafeIndexingExprModel{._field_node=_22127_m}));
		return;;
	};
	{
		auto &_match_expr{ _22127_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1ad8b9530:;
			{
				jule::Ptr<_1e0e366e6_Var> _23717_i = _22127_m.get()._field_index.get()._field_model.operator jule::Ptr<_1e0e366e6_Var>();;
				if ((_23717_i.get()._field_mutable || (_23717_i.get()._field_iter_relation == nullptr))) {
					goto _match_end_1ad8b9486;
				};
				{
					auto &_match_expr{ _22127_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
						_case_begin_1ad8bac7e:;
						{
							jule::Ptr<_1e0e366e6_Var> _24321_r = _22127_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1e0e366e6_Var>();;
							if ((_23717_i.get()._field_iter_relation.get()._field_range == _24321_r)) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ed83996b_UnsafeIndexingExprModel>(_1ed83996b_UnsafeIndexingExprModel{._field_node=_22127_m}));
							};
						}
					}
					_match_end_1ad8babc4:;
				};
			}
		}
		_match_end_1ad8b9486:;
	};
}



inline void _1ed844811_anon_func(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0140516_AnonFnExprModel> _25428_m) {
	_1ed843a96_scope(&(*_self_), _25428_m.get()._field_func.get()._field_scope);
}



inline void _1ed844a86_map(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e01408e0_MapExprModel> _25822_m) {
	{
		auto &expr = _25822_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1ad8bcb71:;
		if (it != expr.end()) {
			jule::Ptr<_1e0140703_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1ed842523_optimize(_25921_pair.get()._field_key);
				static__1ed842523_optimize(_25921_pair.get()._field_val);
			}
			_iter_next_1ad8bcb71:;
			++it;
			goto _iter_begin_1ad8bcb71;
		}
		_iter_end_1ad8bcb71:;
	};
}



inline void _1ed844d0b_slicing(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0140acc_SlicingExprModel> _26526_m) {
	static__1ed842523_optimize(_26526_m.get()._field_expr);
	static__1ed842523_optimize(_26526_m.get()._field_left);
	if ((_26526_m.get()._field_right != nullptr)) {
		static__1ed842523_optimize(_26526_m.get()._field_right);
	};
}



inline void _1ed845081_trait_sub(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel> _27328_m) {
	static__1ed842523_optimize(_27328_m.get()._field_expr);
}



inline void _1ed845306_structure_sub(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e01411d7_StructSubIdentExprModel> _27732_m) {
	static__1ed842523_optimize(_27732_m.get()._field_expr.get()._field_model);
}



inline void _1ed84557b_common_sub(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e014198a_CommonSubIdentExprModel> _28129_m) {
	static__1ed842523_optimize(_28129_m.get()._field_expr);
}



inline void _1ed845801_tuple(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0141b77_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1ad8c1229:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e7ce9b_Data> _28621_d = *it;
			{
				static__1ed842523_optimize(_28621_d.get()._field_model);
			}
			_iter_next_1ad8c1229:;
			++it;
			goto _iter_begin_1ad8c1229;
		}
		_iter_end_1ad8c1229:;
	};
}



inline void _1ed845a76_new_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e014242a_BuiltinNewCallExprModel> _29127_m) {
	if ((_29127_m.get()._field_init != nullptr)) {
		static__1ed842523_optimize(_29127_m.get()._field_init);
	};
}



inline void _1ed845ceb_out_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel> _29727_m) {
	static__1ed842523_optimize(_29727_m.get()._field_expr);
}



inline void _1ed846071_outln_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel> _30129_m) {
	static__1ed842523_optimize(_30129_m.get()._field_expr);
}



inline void _1ed8462e6_panic_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel> _30529_m) {
	static__1ed842523_optimize(_30529_m.get()._field_expr);
}



inline void _1ed84656b_assert_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel> _30930_m) {
	static__1ed842523_optimize(_30930_m.get()._field_expr);
}



inline void _1ed8467e1_error_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel> _31329_m) {
	static__1ed842523_optimize(_31329_m.get()._field_err);
}



inline void _1ed846a66_make_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel> _31728_m) {
	if ((_31728_m.get()._field_len != nullptr)) {
		static__1ed842523_optimize(_31728_m.get()._field_len);
	};
	if ((_31728_m.get()._field_cap != nullptr)) {
		static__1ed842523_optimize(_31728_m.get()._field_cap);
	};
}



inline void _1ed846cdb_append_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel> _32630_m) {
	static__1ed842523_optimize(_32630_m.get()._field_dest);
	static__1ed842523_optimize(_32630_m.get()._field_elements);
}



inline void _1ed847061_clone_call(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel> _33129_m) {
	static__1ed842523_optimize(_33129_m.get()._field_expr);
}



inline void _1ed8472d6_sizeof(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0140ea6_SizeofExprModel> _33525_m) {
	static__1ed842523_optimize(_33525_m.get()._field_expr);
}



inline void _1ed84755b_alignof(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0143717_AlignofExprModel> _33926_m) {
	static__1ed842523_optimize(_33926_m.get()._field_expr);
}



inline void _1ed8477d1_integrated_to_str(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel> _34336_m) {
	static__1ed842523_optimize(_34336_m.get()._field_expr);
}



inline void _1ed847a56_free(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0143eba_FreeExprModel> _34723_m) {
	static__1ed842523_optimize(_34723_m.get()._field_expr);
}



inline void _1ed847ccb_backend_emit(_1ed84205b_ExprOptimizer* _self_, jule::Ptr<_1e0143ccd_BackendEmitExprModel> _35131_m) {
	_1ed843821_args(&(*_self_), _35131_m.get()._field_exprs);
}



inline void _1ed847ea7_do(_1ed84205b_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1ad8c8b49:;
			{
				(*((*_self_)._field_model))=jule::Any((*((*_self_)._field_model)).operator jule::Ptr<_1e0e7ce9b_Data>().get()._field_model);
				_1ed847ea7_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
			_case_begin_1ad8c8e35:;
			{
				_1ed842aa6_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e011cdb7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
			_case_begin_1ad8c8e9b:;
			{
				_1ed842d2b_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0111cac_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0116982_StructLitExprModel>>()) {
			_case_begin_1ad8c9012:;
			{
				_1ed8430a1_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0116982_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ea76_AllocStructLitExprModel>>()) {
			_case_begin_1ad8c9089:;
			{
				_1ed843326_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e013ea76_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ec63_CastingExprModel>>()) {
			_case_begin_1ad8c9111:;
			{
				_1ed84359b_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e013ec63_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1ad8c9188:;
			{
				_1ed843d1b_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e013ee50_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
			_case_begin_1ad8c9210:;
			{
				_1ed844091_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e014013c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01415b1_ArrayExprModel>>()) {
			_case_begin_1ad8c9287:;
			{
				_1ed844316_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e01415b1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140329_IndexingExprModel>>()) {
			_case_begin_1ad8c930e:;
			{
				_1ed84458b_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0140329_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140516_AnonFnExprModel>>()) {
			_case_begin_1ad8c9386:;
			{
				_1ed844811_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0140516_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01408e0_MapExprModel>>()) {
			_case_begin_1ad8c940d:;
			{
				_1ed844a86_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e01408e0_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140acc_SlicingExprModel>>()) {
			_case_begin_1ad8c9485:;
			{
				_1ed844d0b_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0140acc_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
			_case_begin_1ad8c950c:;
			{
				_1ed845081_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1ad8c9584:;
			{
				_1ed845306_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014198a_CommonSubIdentExprModel>>()) {
			_case_begin_1ad8c960b:;
			{
				_1ed84557b_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e014198a_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141b77_TupleExprModel>>()) {
			_case_begin_1ad8c9683:;
			{
				_1ed845801_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0141b77_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>>()) {
			_case_begin_1ad8c970a:;
			{
				_1ed845ceb_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1ad8c9782:;
			{
				_1ed846071_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014242a_BuiltinNewCallExprModel>>()) {
			_case_begin_1ad8c9809:;
			{
				_1ed845a76_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e014242a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>()) {
			_case_begin_1ad8c9881:;
			{
				_1ed8462e6_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>>()) {
			_case_begin_1ad8c9908:;
			{
				_1ed84656b_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1ad8c9980:;
			{
				_1ed8467e1_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>>()) {
			_case_begin_1ad8c9a07:;
			{
				_1ed846a66_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>>()) {
			_case_begin_1ad8c9a7e:;
			{
				_1ed846cdb_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1ad8c9b06:;
			{
				_1ed847061_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140ea6_SizeofExprModel>>()) {
			_case_begin_1ad8c9b7d:;
			{
				_1ed8472d6_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0140ea6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143717_AlignofExprModel>>()) {
			_case_begin_1ad8c9c05:;
			{
				_1ed84755b_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0143717_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>>()) {
			_case_begin_1ad8c9c7c:;
			{
				_1ed8477d1_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143eba_FreeExprModel>>()) {
			_case_begin_1ad8c9d04:;
			{
				_1ed847a56_free(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0143eba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ccd_BackendEmitExprModel>>()) {
			_case_begin_1ad8c9d7b:;
			{
				_1ed847ccb_backend_emit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1e0143ccd_BackendEmitExprModel>());
			}
		}
		_match_end_1ad8c8ad3:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ed84205b_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aa56cc31_Optimizer> static__1aa4eb5a5_new(jule::Ptr<_1c2c92949_IR>& _2528_ir) {
	return jule::new_ptr<_1aa56cc31_Optimizer>(_1aa56cc31_Optimizer{._field_ir=_2528_ir});
}



inline void _1aa511840_optimize_global(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0e366e6_Var>& _3139_v) {
	if ((!(_3139_v.get()._field_cpp_linked))) {
		static__1ed842523_optimize(_3139_v.get()._field_value.get()._field_data.get()._field_model);
	};
}



inline void _1aa542200_optimize_function(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0144581_Fn>& _3741_func) {
	if (_3741_func.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _3741_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ad8e313b:;
		if (it != expr.end()) {
			jule::Ptr<_1e01457c4_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1ed83b95c_ScopeOptimizer> _4221_so = static__1ed83bde1_new(_4121_ins.get()._field_scope);;
				_1ed83edc2_optimize(_4221_so.ptr());
			}
			_iter_next_1ad8e313b:;
			++it;
			goto _iter_begin_1ad8e313b;
		}
		_iter_end_1ad8e313b:;
	};
}



inline void _1aa551b5a_optimize_struct(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e010261b_Struct>& _4739_s) {
	if (_4739_s.get()._field_cpp_linked) {
		return;;
	};
	{
		auto &expr = _4739_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1ad8e446c:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1ad8e4aee:;
					if (it != expr.end()) {
						jule::Ptr<_1e01087ba_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_default != nullptr)) {
								static__1ed842523_optimize(_5225_f.get()._field_default.get()._field_model);
							};
						}
						_iter_next_1ad8e4aee:;
						++it;
						goto _iter_begin_1ad8e4aee;
					}
					_iter_end_1ad8e4aee:;
				};
				{
					auto &expr = _5121_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1ad8e5506:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _5725_m = *it;
						{
							_1aa542200_optimize_function(&(*_self_), _5725_m);
						}
						_iter_next_1ad8e5506:;
						++it;
						goto _iter_begin_1ad8e5506;
					}
					_iter_end_1ad8e5506:;
				};
			}
			_iter_next_1ad8e446c:;
			++it;
			goto _iter_begin_1ad8e446c;
		}
		_iter_end_1ad8e446c:;
	};
}



inline void _1aa551ce2_optimize_globals(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0e16253_Package>& _6340_p) {
	{
		auto &expr = _6340_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad8e4769:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1ad8e6b89:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e366e6_Var> _6525_v = *it;
						{
							_1aa511840_optimize_global(&(*_self_), _6525_v);
						}
						_iter_next_1ad8e6b89:;
						++it;
						goto _iter_begin_1ad8e6b89;
					}
					_iter_end_1ad8e6b89:;
				};
			}
			_iter_next_1ad8e4769:;
			++it;
			goto _iter_begin_1ad8e4769;
		}
		_iter_end_1ad8e4769:;
	};
}



inline void _1aa5978b5_optimize_functions(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0e16253_Package>& _7142_p) {
	{
		auto &expr = _7142_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad8e7151:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1ad8e7ddd:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _7325_func = *it;
						{
							_1aa542200_optimize_function(&(*_self_), _7325_func);
						}
						_iter_next_1ad8e7ddd:;
						++it;
						goto _iter_begin_1ad8e7ddd;
					}
					_iter_end_1ad8e7ddd:;
				};
			}
			_iter_next_1ad8e7151:;
			++it;
			goto _iter_begin_1ad8e7151;
		}
		_iter_end_1ad8e7151:;
	};
}



inline void _1aa5a46b3_optimize_structs(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0e16253_Package>& _7940_p) {
	{
		auto &expr = _7940_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1ad8e840a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1ad8e9120:;
					if (it != expr.end()) {
						jule::Ptr<_1e010261b_Struct> _8125_s = *it;
						{
							_1aa551b5a_optimize_struct(&(*_self_), _8125_s);
						}
						_iter_next_1ad8e9120:;
						++it;
						goto _iter_begin_1ad8e9120;
					}
					_iter_end_1ad8e9120:;
				};
			}
			_iter_next_1ad8e840a:;
			++it;
			goto _iter_begin_1ad8e840a;
		}
		_iter_end_1ad8e840a:;
	};
}



inline void _1aa59c304_optimize_package(_1aa56cc31_Optimizer* _self_, jule::Ptr<_1e0e16253_Package>& _8740_p) {
	_1aa551ce2_optimize_globals(&(*_self_), _8740_p);
	_1aa5978b5_optimize_functions(&(*_self_), _8740_p);
	_1aa5a46b3_optimize_structs(&(*_self_), _8740_p);
}



inline void _1aa4ee685_optimize(_1aa56cc31_Optimizer* _self_) {
	_1aa5580d4_detect_enabled();
	if (_1ed848d76_DEADCODE) {
		_1aa5c84a6_eliminate_defines((*_self_)._field_ir);
	};
	if ((_1aa4d0d92_scope_enabled || _1aa4d0710_expr_enabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_used;
			auto it = expr.begin();
			_iter_begin_1ad8eb74e:;
			if (it != expr.end()) {
				jule::Ptr<_1e0e13272_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_cpp_linked))) {
						_1aa59c304_optimize_package(&(*_self_), _10325_u.get()._field_package);
					};
				}
				_iter_next_1ad8eb74e:;
				++it;
				goto _iter_begin_1ad8eb74e;
			}
			_iter_end_1ad8eb74e:;
		};
		_1aa59c304_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
	};
	if (_1ed848d76_DEADCODE) {
		_1aa5ccdc3_eliminate_scopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa56cc31_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1aa5e9dce_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1aa5ea011_print(jule::Str _1925_escape, jule::Str _1938_text) {
	jule::out(_1925_escape);
	jule::out(_1938_text);
	static__1aa5e9dce_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5e9be2_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1aa5eb298_log_flat(_1dd65aa00_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1aa5eb4a7_log_error(_1dd65aa00_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1aa5e9dce_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	};
	if (((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e0be7188_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e0be7188_itoa(_1930_l._field_column));
	};
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1dd5eb2ba_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = ((_1930_l._field_line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_old_len = _3621_line.len();;
		_3621_line=_1dd5eb2ba_trim_left(_3621_line,jule::Str("\t", 1));
		if ((_3821_old_len != _3621_line.len())) {
			_3721_offset+=((_3821_old_len - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e0be7188_itoa(_1930_l._field_row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1dd569b73_repeat(jule::Str(" ", 1),static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1dd569b73_repeat(jule::Str(" ", 1),static_cast<jule::I32>((_1930_l._field_column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1dd569b73_repeat(jule::Str(" ", 1),static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1aa5ea011_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1aa5eb6b6_log(_1dd65aa00_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1ad90aa9e:;
			{
				static__1aa5eb298_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1ad90aecd:;
			{
				static__1aa5eb4a7_log_error(_6524_l);
			}
		}
		_match_end_1ad90adbd:;
	};
}



inline void static__1aa5eb8c5_print_logs(jule::Slice<_1dd65aa00_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1ad90c089:;
		if (it != expr.end()) {
			_1dd65aa00_Log &_7616_l = *it;
			{
				static__1aa5eb6b6_log(_7616_l);
			}
			_iter_next_1ad90c089:;
			++it;
			goto _iter_begin_1ad90c089;
		}
		_iter_end_1ad90c089:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e0be7188_itoa(static_cast<jule::I32>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5eaece_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1aac0d635_unix(_1aac0d24a_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1aac1330a_unix_year_to_seconds(_5717_y,_5617_leap);;
	_6817_t+=_1aac13690_unix_month_to_seconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_hour);
	_6817_t+=(60LLU * (*_self_)._field_minute);
	_6817_t+=(*_self_)._field_second;
	return _6817_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0d24a_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1aac0d921_Time static__1aac0dcb7_unix(jule::U64 _9124_sec) {
	return _1aac0d921_Time{._field_sec=_9124_sec};
}



inline _1aac0d921_Time static__1aac0deb5_now(void) {
	return static__1aac0dcb7_unix(static_cast<jule::U64>(_1aac12eb9_unix()));
}



inline jule::U64 _1aac0e416_unix(_1aac0d921_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1aac0e67a_day(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_day;
}



inline jule::U64 _1aac0e8de_month(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_month;
}



inline jule::U64 _1aac0eb53_year(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_year;
}



inline jule::U64 _1aac0edb7_second(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_second;
}



inline jule::U64 _1aac1012b_minute(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1aac10390_hour(_1aac0d921_Time* _self_) {
	return _1aac10604_abs(&(*_self_))._field_hour;
}



inline _1aac0d24a_AbsTime _1aac10604_abs(_1aac0d921_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_rem_secs = (_12713_secs % 86400LL);;
	if ((_12917_rem_secs < 0LLU)) {
		_12917_rem_secs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qc_cycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_rem_days = (_12817_days % 146097LL);;
	if ((_13617_rem_days < 0LLU)) {
		_13617_rem_days+=146097LLU;
		(_13517_qc_cycles)--;
	};
	jule::U64 _14217_c_cycles = (_13617_rem_days / 36524LLU);;
	if ((_14217_c_cycles == 4LLU)) {
		(_14217_c_cycles)--;
	};
	_13617_rem_days-=(_14217_c_cycles * 36524LLU);
	jule::U64 _14817_q_cycles = (_13617_rem_days / 1461LLU);;
	if ((_14817_q_cycles == 25LLU)) {
		(_14817_q_cycles)--;
	};
	_13617_rem_days-=(_14817_q_cycles * 1461LLU);
	jule::U64 _15417_rem_years = (_13617_rem_days / 365LLU);;
	if ((_15417_rem_years == 4LLU)) {
		(_15417_rem_years)--;
	};
	_13617_rem_days-=(_15417_rem_years * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_rem_years == 0LLU) && ((_14817_q_cycles > 0LLU) || (_14217_c_cycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_y_day = (((_13617_rem_days + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_y_day >= (365LLU + _16017_leap))) {
		_16417_y_day-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1aac0c799_MDAYS[static_cast<jule::I32>(_16917_months)] <= _13617_rem_days); (_16917_months)++) {
		{
			_13617_rem_days-=_1aac0c799_MDAYS[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1ad9342c0:;
	}
	_iter_end_1ad9342c0:;;
	_1aac0d24a_AbsTime _17417_t = _1aac0d24a_AbsTime{};;
	_17417_t._field_year=static_cast<jule::U64>(((((_15417_rem_years + (4LLU * _14817_q_cycles)) + (100LLU * _14217_c_cycles)) + (400LLU * _13517_qc_cycles)) + 100LLU));
	_17417_t._field_month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_month >= 12LLU)) {
		_17417_t._field_month-=12LLU;
		(_17417_t._field_year)++;
	};
	_17417_t._field_month+=1LLU;
	_17417_t._field_year+=1900LLU;
	_17417_t._field_day=static_cast<jule::U64>((_13617_rem_days + 1LLU));
	_17417_t._field_week_day=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_week_day < 0LLU)) {
		_17417_t._field_week_day+=7LLU;
	};
	_17417_t._field_year_day=_16417_y_day;
	_17417_t._field_hour=static_cast<jule::U64>((_12917_rem_secs / 3600LLU));
	_17417_t._field_minute=static_cast<jule::U64>(((_12917_rem_secs / 60LLU) % 60LL));
	_17417_t._field_second=static_cast<jule::U64>((_12917_rem_secs % 60LL));
	return _17417_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0d921_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab855ce_ScopeCoder> static__1aab859db_new(jule::Ptr<_1aabca998_ObjectCoder>& _4724_oc) {
	return jule::new_ptr<_1aab855ce_ScopeCoder>(_1aab855ce_ScopeCoder{._field_oc=_4724_oc});
}



inline void _1aab85c2d_range_index_iter(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dc6664_RangeIter>& _5341_it) {
	jule::Str _5413_begin = static__1aaba1771_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	jule::Str _5513_next = static__1aaba1cb0_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it)));;
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1ed848ace_COPY && _1aab8a8e2_is_copy_optimizable(_5341_it.get()._field_expr))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1aab97ec6_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_5341_it.get()._field_expr.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, _5413_begin);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1aac1584b_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	if ((_5341_it.get()._field_key_b != nullptr)) {
		if (_1ed848ace_COPY) {
			_5341_it.get()._field_key_b.get()._field_reference=_1aab8ac99_is_iter_copy_optimizable(_5341_it.get()._field_expr,_5341_it.get()._field_key_b);
		};
		_1aac1584b_var_init_expr(_self_.get()._field_oc, _5341_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	_1aab8a31a_scope(_self_, _5341_it.get()._field_scope);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, _5513_next);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1aabd6762_indent(_self_.get()._field_oc);
	if ((_5341_it.get()._field_key_a != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, static__1aaba14c9_var(_5341_it.get()._field_key_a));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aabd5145_write(_self_.get()._field_oc, _5413_begin);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1a18_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_5341_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aab85ea3_range_hashmap_iter(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dc6664_RangeIter>& _12143_it) {
	jule::Str _12213_begin = static__1aaba1771_iter_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	jule::Str _12313_next = static__1aaba1cb0_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it)));;
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1ed848ace_COPY && _1aab8a8e2_is_copy_optimizable(_12143_it.get()._field_expr))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1aab97ec6_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_12143_it.get()._field_expr.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, _12213_begin);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	if ((_12143_it.get()._field_key_a != nullptr)) {
		if (_1ed848ace_COPY) {
			_12143_it.get()._field_key_a.get()._field_reference=_1aab8ac99_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_a);
		};
		_1aac1584b_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_a,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	if ((_12143_it.get()._field_key_b != nullptr)) {
		if (_1ed848ace_COPY) {
			_12143_it.get()._field_key_b.get()._field_reference=_1aab8ac99_is_iter_copy_optimizable(_12143_it.get()._field_expr,_12143_it.get()._field_key_b);
		};
		_1aac1584b_var_init_expr(_self_.get()._field_oc, _12143_it.get()._field_key_b,jule::Fn<void(void)>([=](void) mutable -> void {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	_1aab8a31a_scope(_self_, _12143_it.get()._field_scope);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, _12313_next);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aabd5145_write(_self_.get()._field_oc, _12213_begin);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1a18_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12143_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aab86228_if_case(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0ddcc41_If> _18731_i) {
	if ((_18731_i.get()._field_expr != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_18731_i.get()._field_expr));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1aab8a31a_scope(_self_, _18731_i.get()._field_scope);
}



inline void _1aab8649d_conditional(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0d879aa_Conditional> _19635_c) {
	jule::Bool _19717_writed = false;;
	{
		auto &expr = _19635_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1ad9c2e63:;
		if (it != expr.end()) {
			jule::Ptr<_1e0ddcc41_If> _19821_elif = *it;
			{
				if ((_19821_elif == nullptr)) {
					goto _iter_next_1ad9c2e63;
				};
				if (_19717_writed) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_19717_writed=true;
				_1aab86228_if_case(_self_, _19821_elif);
			}
			_iter_next_1ad9c2e63:;
			++it;
			goto _iter_begin_1ad9c2e63;
		}
		_iter_end_1ad9c2e63:;
	};
	if ((_19635_c.get()._field_default != nullptr)) {
		if (_19717_writed) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1aab8a31a_scope(_self_, _19635_c.get()._field_default.get()._field_scope);
	};
}



inline void _1aab86723_inf_iter(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0d985ae_InfIter> _21632_it) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aab8a31a_scope(_self_, _21632_it.get()._field_scope);
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1cb0_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1a18_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_21632_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1aab86998_while_iter(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0d9879b_WhileIter> _23334_it) {
	if (((_23334_it.get()._field_expr != nullptr) && (_23334_it.get()._field_next == nullptr))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_23334_it.get()._field_expr != nullptr)) {
			_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_23334_it.get()._field_expr));
		};
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_23334_it.get()._field_next != nullptr)) {
			_1aab89d20_st(_self_, jule::Any(_23334_it.get()._field_next));
		};
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aab8a31a_scope(_self_, _23334_it.get()._field_scope);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1cb0_iter_next(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1a18_iter_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23334_it))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1aab86c1d_range_iter(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dc6664_RangeIter> _26634_it) {
	{
		
		if ((_1ed77ec13_slc(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad9d4716:;
			{
				_1aab85c2d_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1ed77e99e_arr(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad9d43d6:;
			{
				_1aab85c2d_range_index_iter(_self_, _26634_it);
			}
		}
		else if ((_1ed7806b4_map(_26634_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad9d444c:;
			{
				_1aab85ea3_range_hashmap_iter(_self_, _26634_it);
			}
		}
		else {
			_case_begin_1ad9d4370:;
			{
				_1aab85c2d_range_index_iter(_self_, _26634_it);
			}
		}
		_match_end_1ad9d42a4:;
	};
}



inline void _1aab86e93_cont(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dc6851_ContSt> _27924_c) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba1cb0_iter_next(_27924_c.get()._field_it));
}



inline void _1aab87218_label(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dea600_Label> _28425_l) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba2057_label(_28425_l.get()._field_ident));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1aab8748d_goto_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dea7dc_GotoSt> _28927_gt) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba2057_label(_28927_gt.get()._field_ident));
}



inline void _1aab87713_postfix(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dea9c9_Postfix> _29431_p) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_29431_p.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1aabd5145_write(_self_.get()._field_oc, _29431_p.get()._field_op);
}



inline void _1aab87988_assign(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deabb6_Assign> _30130_a) {
	_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_l.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, _30130_a.get()._field_op.get()._field_kind);
	_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30130_a.get()._field_r.get()._field_model));
}



inline void _1aab87c0d_multi_assign(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deada3_MultiAssign> _30736_a) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::tie(", 9));
	{
		auto &expr = _30736_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1bb6d5371:;
		if (it != expr.end()) {
			jule::I32 _30914_i = it - expr.begin();
			jule::Any _30921_l = *it;
			{
				if ((_30921_l == nullptr)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::ignore", 11));
				} else {
					_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30921_l));
				};
				if (((_30736_a.get()._field_l.len() - _30914_i) > 1LL)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb6d5371:;
			++it;
			_30914_i++;
			goto _iter_begin_1bb6d5371;
		}
		_iter_end_1bb6d5371:;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(") = ", 4));
	_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_30736_a.get()._field_r));
}



inline jule::Fn<void(void)> _1aab8801b_match_expr(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb090_Match> _32334_m) {
	if ((!(_1e0e7d85e_is_const(_32334_m.get()._field_expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});
	};
	if (((!(_1e0d52a52_is_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1e0d506a9_read_bool(_32334_m.get()._field_expr.get()._field_constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1aab97ec6_model(_self_.get()._field_oc.get()._field_ec, jule::Any(_32334_m.get()._field_expr.get()._field_model));
		});
	};
	return nullptr;
}



inline void _1aab8833a_case(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb090_Match> _33328_m, jule::Ptr<_1e0deb4ad_Case> _33343_c) {
	if (((_33343_c.get()._field_exprs.len() != 0LL) && (!(_1e0dc849b_is_generic_type_match(_33328_m.ptr()))))) {
		if (((_33328_m.get()._field_cases.len() > 0LL) && (_33328_m.get()._field_cases[0LL] == _33343_c))) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _33343_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1bb6dce7d:;
			if (it != expr.end()) {
				jule::I32 _34018_i = it - expr.begin();
				jule::Ptr<_1e0e7ce9b_Data> _34025_expr = *it;
				{
					{
						
						if ((!(_33328_m.get()._field_type_match))) {
							_case_begin_1bb6de457:;
							{
								jule::Fn<void(void)> _34325_case_expr = _1aab8801b_match_expr(_self_, _33328_m);;
								if (_1e0e7db6c_good_operand(_33328_m.get()._field_expr.ptr(), _34025_expr)) {
									if ((_34325_case_expr != nullptr)) {
										_34325_case_expr();
										_1aabd5145_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								} else {
									_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
									if ((_34325_case_expr != nullptr)) {
										_1aabd5145_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_34325_case_expr();
									};
								};
							}
						}
						else {
							_case_begin_1bb6de0b1:;
							{
								_1aabd5145_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								_1aabd5145_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
								_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_34025_expr.get()._field_model));
								_1aabd5145_write(_self_.get()._field_oc, jule::Str(">()", 3));
							}
						}
						_match_end_1bb6ddee5:;
					};
					if (((_33343_c.get()._field_exprs.len() - _34018_i) > 1LL)) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1bb6dce7d:;
				++it;
				_34018_i++;
				goto _iter_begin_1bb6dce7d;
			}
			_iter_end_1bb6dce7d:;
		};
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_33328_m.get()._field_default == _33343_c) && (_33328_m.get()._field_cases.len() != 0LL))) {
		_1aabd6762_indent(_self_.get()._field_oc);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba2596_case_begin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33343_c))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_33343_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_1aabd6762_indent(_self_.get()._field_oc);
		_1aab8a31a_scope(_self_, _33343_c.get()._field_scope);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aab885b0_match_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb090_Match> _39232_m) {
	if (((_39232_m.get()._field_cases.len() == 0LL) && (_39232_m.get()._field_default == nullptr))) {
		return;;
	};
	jule::Bool _39713_generic_type_match = _1e0dc849b_is_generic_type_match(_39232_m.ptr());;
	if ((_39713_generic_type_match && ((_39232_m.get()._field_default == nullptr) || (_39232_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL)))) {
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	if (((!(_39713_generic_type_match)) && (!(_1e0e7d85e_is_const(_39232_m.get()._field_expr.ptr()))))) {
		if ((_1ed848ace_COPY && _1aab8a8e2_is_copy_optimizable(_39232_m.get()._field_expr))) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_39232_m.get()._field_expr.get()._field_model));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1aabd6762_indent(_self_.get()._field_oc);
	};
	if ((_39232_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _39232_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1bb70116c:;
			if (it != expr.end()) {
				jule::Ptr<_1e0deb4ad_Case> _42125_c = *it;
				{
					if ((_42125_c == nullptr)) {
						goto _iter_next_1bb70116c;
					};
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1aabd6762_indent(_self_.get()._field_oc);
					_1aab8833a_case(_self_, _39232_m,_42125_c);
				}
				_iter_next_1bb70116c:;
				++it;
				goto _iter_begin_1bb70116c;
			}
			_iter_end_1bb70116c:;
		};
	};
	if ((_39232_m.get()._field_default != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1aab8833a_case(_self_, _39232_m,_39232_m.get()._field_default);
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba22ee_match_end(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_39232_m))));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aab88835_fall_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb69a_FallSt> _44827_f) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba2596_case_begin(_44827_f.get()._field_dest_case));
}



inline void _1aab88aaa_break_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dea413_BreakSt> _45328_b) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_45328_b.get()._field_it != 0LLU)) {
		_1aabd5145_write(_self_.get()._field_oc, static__1aaba1a18_iter_end(_45328_b.get()._field_it));
	} else {
		_1aabd5145_write(_self_.get()._field_oc, static__1aaba22ee_match_end(_45328_b.get()._field_mtch));
	};
}



inline void _1aab88d30_ret_with_vars(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb887_RetSt> _46237_r) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_46237_r.get()._field_func.get()._field_result));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	};
	{
		auto &expr = _46237_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1bb70b9c4:;
		if (it != expr.end()) {
			jule::I32 _47214_i = it - expr.begin();
			jule::Ptr<_1e0e366e6_Var> _47221_v = *it;
			{
				if (_1dd996940_is_ignore_ident(_47221_v.get()._field_ident)) {
					_1aab98746_init_expr(_self_.get()._field_oc.get()._field_ec, _47221_v.get()._field_kind.get()._field_kind);
				} else {
					_1aabd5145_write(_self_.get()._field_oc, static__1aaba14c9_var(_47221_v));
				};
				if (((_46237_r.get()._field_vars.len() - _47214_i) > 1LL)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb70b9c4:;
			++it;
			_47214_i++;
			goto _iter_begin_1bb70b9c4;
		}
		_iter_end_1bb70b9c4:;
	};
	if ((_46237_r.get()._field_vars.len() > 1LL)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	if (_46237_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aab890a5_ret_tuple(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb887_RetSt> _49233_r) {
	jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _49317_datas = _49233_r.get()._field_expr.operator jule::Ptr<_1e0141b77_TupleExprModel>().get()._field_datas;;
	{
		auto &expr = _49233_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1bb711b61:;
		if (it != expr.end()) {
			jule::I32 _49414_i = it - expr.begin();
			jule::Ptr<_1e0e366e6_Var> _49421_v = *it;
			{
				if (_1dd996940_is_ignore_ident(_49421_v.get()._field_ident)) {
					goto _iter_next_1bb711b61;
				};
				jule::Any _49821_model = _49317_datas[_49414_i].get()._field_model;;
				if ((_49821_model == _49421_v)) {
					goto _iter_next_1bb711b61;
				};
				_1aabd5145_write(_self_.get()._field_oc, static__1aaba14c9_var(_49421_v));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_49821_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1aabd6762_indent(_self_.get()._field_oc);
			}
			_iter_next_1bb711b61:;
			++it;
			_49414_i++;
			goto _iter_begin_1bb711b61;
		}
		_iter_end_1bb711b61:;
	};
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_49233_r.get()._field_func.get()._field_result));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
	} else {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("return ", 7));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _49317_datas;
		auto it = expr.begin();
		_iter_begin_1bb716e52:;
		if (it != expr.end()) {
			jule::I32 _51914_i = it - expr.begin();
			jule::Ptr<_1e0e7ce9b_Data> _51921_d = *it;
			{
				jule::Ptr<_1e0e366e6_Var> _52021_v = _49233_r.get()._field_vars[_51914_i];;
				if (_1dd996940_is_ignore_ident(_52021_v.get()._field_ident)) {
					_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_51921_d.get()._field_model));
				} else {
					_1aabd5145_write(_self_.get()._field_oc, static__1aaba14c9_var(_52021_v));
				};
				if (((_49317_datas.len() - _51914_i) > 1LL)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb716e52:;
			++it;
			_51914_i++;
			goto _iter_begin_1bb716e52;
		}
		_iter_end_1bb716e52:;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_49233_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aab8932a_ret_with_exprs(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb887_RetSt> _53738_r) {
	if ((_53738_r.get()._field_vars.len() > 1LL)) {
		_1aab890a5_ret_tuple(_self_, _53738_r);
		return;;
	};
	if ((_53738_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1e0e366e6_Var> _54521_v = _53738_r.get()._field_vars[0LL];;
		if (((!(_1dd996940_is_ignore_ident(_54521_v.get()._field_ident))) && (_53738_r.get()._field_expr != _54521_v))) {
			jule::Str _54721_ident = static__1aaba14c9_var(_54521_v);;
			_1aabd5145_write(_self_.get()._field_oc, _54721_ident);
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(" = ", 3));
			_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			_1aabd6762_indent(_self_.get()._field_oc);
			if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_53738_r.get()._field_func.get()._field_result));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
				_1aabd5145_write(_self_.get()._field_oc, _54721_ident);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			} else {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("return ", 7));
				_1aabd5145_write(_self_.get()._field_oc, _54721_ident);
			};
			return;;
		};
	};
	if (_53738_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_53738_r.get()._field_func.get()._field_result));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(jule::Any(),", 14));
		_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("return ", 7));
	_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_53738_r.get()._field_expr));
	return;;
}



inline void _1aab895a0_ret_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0deb887_RetSt> _58130_r) {
	if (((_58130_r.get()._field_expr == nullptr) && (_58130_r.get()._field_vars.len() == 0LL))) {
		if (_58130_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	};
	if ((_58130_r.get()._field_expr == nullptr)) {
		_1aab88d30_ret_with_vars(_self_, _58130_r);
		return;;
	};
	_1aab8932a_ret_with_exprs(_self_, _58130_r);
}



inline void _1aab89a9a_var(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0e366e6_Var> _61627_v) {
	if ((!(_61627_v.get()._field_constant))) {
		_1aac1597d_var(_self_.get()._field_oc, _61627_v);
	};
}



inline void _1aab89d20_st(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Any _62326_st) {
	if ((_62326_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _62326_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e0dd6322_Scope>>()) {
			_case_begin_1bb72e673:;
			{
				_1aab8a31a_scope(_self_, _62326_st.operator jule::Ptr<_1e0dd6322_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1bb72e2ee:;
			{
				_1aab89a9a_var(_self_, _62326_st.operator jule::Ptr<_1e0e366e6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb72ed05:;
			{
				_1aab9824b_expr(_self_.get()._field_oc.get()._field_ec, jule::Any(_62326_st.operator jule::Ptr<_1e0e7ce9b_Data>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d879aa_Conditional>>()) {
			_case_begin_1bb72ed6b:;
			{
				_1aab8649d_conditional(_self_, _62326_st.operator jule::Ptr<_1e0d879aa_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
			_case_begin_1bb72edd2:;
			{
				_1aab86723_inf_iter(_self_, _62326_st.operator jule::Ptr<_1e0d985ae_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
			_case_begin_1bb72ee48:;
			{
				_1aab86998_while_iter(_self_, _62326_st.operator jule::Ptr<_1e0d9879b_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
			_case_begin_1bb72eeae:;
			{
				_1aab86c1d_range_iter(_self_, _62326_st.operator jule::Ptr<_1e0dc6664_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dc6851_ContSt>>()) {
			_case_begin_1bb730025:;
			{
				_1aab86e93_cont(_self_, _62326_st.operator jule::Ptr<_1e0dc6851_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea600_Label>>()) {
			_case_begin_1bb73008b:;
			{
				_1aab87218_label(_self_, _62326_st.operator jule::Ptr<_1e0dea600_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea7dc_GotoSt>>()) {
			_case_begin_1bb730102:;
			{
				_1aab8748d_goto_st(_self_, _62326_st.operator jule::Ptr<_1e0dea7dc_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea9c9_Postfix>>()) {
			_case_begin_1bb730179:;
			{
				_1aab87713_postfix(_self_, _62326_st.operator jule::Ptr<_1e0dea9c9_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deabb6_Assign>>()) {
			_case_begin_1bb730201:;
			{
				_1aab87988_assign(_self_, _62326_st.operator jule::Ptr<_1e0deabb6_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deada3_MultiAssign>>()) {
			_case_begin_1bb730278:;
			{
				_1aab87c0d_multi_assign(_self_, _62326_st.operator jule::Ptr<_1e0deada3_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
			_case_begin_1bb730300:;
			{
				_1aab885b0_match_st(_self_, _62326_st.operator jule::Ptr<_1e0deb090_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb69a_FallSt>>()) {
			_case_begin_1bb730377:;
			{
				_1aab88835_fall_st(_self_, _62326_st.operator jule::Ptr<_1e0deb69a_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dea413_BreakSt>>()) {
			_case_begin_1bb7303ee:;
			{
				_1aab88aaa_break_st(_self_, _62326_st.operator jule::Ptr<_1e0dea413_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb887_RetSt>>()) {
			_case_begin_1bb730476:;
			{
				_1aab895a0_ret_st(_self_, _62326_st.operator jule::Ptr<_1e0deb887_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed839d34_PushToSliceExprModel>>()) {
			_case_begin_1bb7304ed:;
			{
				_1aab95e5d_push_to_slice(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1ed839d34_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83a3b7_MutSlicingExprModel>>()) {
			_case_begin_1bb730575:;
			{
				_1aab979cb_mut_slicing(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1ed83a3b7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83a791_StrInsertBeginExprModel>>()) {
			_case_begin_1bb7305ec:;
			{
				_1aab97c51_str_insert_begin(_self_.get()._field_oc.get()._field_ec, _62326_st.operator jule::Ptr<_1ed83a791_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1bb72e068:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bb72e013:;
	};
}



inline void _1aab8a095_scope_stmts(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dd6322_Scope>& _67336_s) {
	{
		auto &expr = _67336_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1bb73b608:;
		if (it != expr.end()) {
			jule::Any _67421_st = *it;
			{
				_1aabd6762_indent(_self_.get()._field_oc);
				_1aab89d20_st(_self_, jule::Any(_67421_st));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1bb73b608:;
			++it;
			goto _iter_begin_1bb73b608;
		}
		_iter_end_1bb73b608:;
	};
}



inline void _1aab8a31a_scope(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e0dd6322_Scope> _68229_s) {
	_1aabd582c_add_indent(_self_.get()._field_oc);
	if (_68229_s.get()._field_deferred) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aab8a095_scope_stmts(_self_, _68229_s);
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68229_s.get()._field_deferred) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1aab8a590_func_scope(jule::Ptr<_1aab855ce_ScopeCoder> _self_, jule::Ptr<_1e01457c4_FnIns> _69834_f) {
	if ((_69834_f.get()._field_scope == nullptr)) {
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	if ((!(_1e0105894_is_void(_69834_f.get()._field_decl.ptr())))) {
		jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _70521_types = _1e01462db_types(_69834_f.ptr());;
		{
			auto &expr = _69834_f.get()._field_decl.get()._field_result.get()._field_idents;
			auto it = expr.begin();
			_iter_begin_1bb742a1b:;
			if (it != expr.end()) {
				jule::I32 _70617_i = it - expr.begin();
				jule::Ptr<_1dd9941e0_Token> _70620_ident = *it;
				{
					if ((_1dd996940_is_ignore_ident(_70620_ident.get()._field_kind) || _1dd996bd7_is_anon_ident(_70620_ident.get()._field_kind))) {
						goto _iter_next_1bb742a1b;
					};
					_1aabd6762_indent(_self_.get()._field_oc);
					_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_70521_types[_70617_i]));
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1aabd5145_write(_self_.get()._field_oc, static__1aab9edbd_to_local(_70620_ident.get()._field_row,_70620_ident.get()._field_column,_70620_ident.get()._field_kind));
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1aab98746_init_expr(_self_.get()._field_oc.get()._field_ec, _70521_types[_70617_i]);
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				}
				_iter_next_1bb742a1b:;
				++it;
				_70617_i++;
				goto _iter_begin_1bb742a1b;
			}
			_iter_end_1bb742a1b:;
		};
	};
	_1aab8a095_scope_stmts(_self_, _69834_f.get()._field_scope);
	if ((_69834_f.get()._field_decl.get()._field_exceptional && _1e0105894_is_void(_69834_f.get()._field_decl.ptr()))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(" return jule::VoidExceptional();\n", 33));
	};
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1aab855ce_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab8c87d_ExprCoder> static__1aab8cc79_new(jule::Ptr<_1aabca998_ObjectCoder>& _9024_oc) {
	return jule::new_ptr<_1aab8c87d_ExprCoder>(_1aab8c87d_ExprCoder{._field_oc=_9024_oc});
}



inline void _1aab8ceee_string(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0d4da1a_Const>& _9627_c) {
	jule::Str _9713_content = _1e0d5091d_read_str(_9627_c.ptr());;
	if ((_9713_content.len() == 0LL)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9713_content);;
	jule::Str _10313_len = _1e0be7056_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);;
	jule::Str _10413_lit = _1aab99417_cstr_lit(_10213_bytes);;
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aabd5145_write(_self_.get()._field_oc, _10413_lit);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1aabd5145_write(_self_.get()._field_oc, _10313_len);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab8d274_boolean(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0d4da1a_Const>& _11328_c) {
	if (_1e0d506a9_read_bool(_11328_c.ptr())) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1aab8d450_nil_lit(jule::Ptr<_1aab8c87d_ExprCoder> _self_) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1aab8d75d_ftoa_special_cases(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::F64& _12539_x) {
	{
		
		if (_1e0b2c5b8_is_nan(_12539_x)) {
			_case_begin_1bb7624a8:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e0b2aaa0_is_inf(_12539_x,1LL)) {
			_case_begin_1bb762585:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e0b2aaa0_is_inf(_12539_x,-1LL)) {
			_case_begin_1bb7625eb:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bb761d6a:;
			{
				return false;
			}
		}
		_match_end_1bb761c9e:;
	};
	return true;
}



inline void _1aab8d9d3_float32(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0d4da1a_Const>& _13928_c) {
	jule::F64 _14013_x = _1e0d513be_as_f64(_13928_c.ptr());;
	if (_1aab8d75d_ftoa_special_cases(_self_, _14013_x)) {
		return;;
	};
	{
		
		if ((_14013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bb765511:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_14013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bb765214:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bb76519d:;
			{
				_1aabd5145_write(_self_.get()._field_oc, _1aab99758_ftoa(_14013_x,32LL));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1bb7650c1:;
	};
}



inline void _1aab8dc58_float64(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0d4da1a_Const>& _15828_c) {
	jule::F64 _15913_x = _1e0d513be_as_f64(_15828_c.ptr());;
	if (_1aab8d75d_ftoa_special_cases(_self_, _15913_x)) {
		return;;
	};
	{
		
		if ((_15913_x == jule::MAX_F64)) {
			_case_begin_1bb768899:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_15913_x == jule::MIN_F64)) {
			_case_begin_1bb7685e1:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bb76857a:;
			{
				_1aabd5145_write(_self_.get()._field_oc, _1aab99758_ftoa(_15913_x,64LL));
			}
		}
		_match_end_1bb76846a:;
	};
}



inline void _1aab8e077_constant(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0d4da1a_Const> _17732_c, jule::Bool _17743_fx32) {
	{
		
		if (_1e0d52cb6_is_str(_17732_c.ptr())) {
			_case_begin_1bb76aaaa:;
			{
				_1aab8ceee_string(_self_, _17732_c);
			}
		}
		else if (_1e0d52a52_is_bool(_17732_c.ptr())) {
			_case_begin_1bb76ab21:;
			{
				_1aab8d274_boolean(_self_, _17732_c);
			}
		}
		else if (_1e0d5302a_is_f64(_17732_c.ptr())) {
			_case_begin_1bb76ab87:;
			{
				{
					
					if (_17743_fx32) {
						_case_begin_1bb76d096:;
						{
							_1aab8d9d3_float32(_self_, _17732_c);
						}
					}
					else {
						_case_begin_1bb76cc00:;
						{
							_1aab8dc58_float64(_self_, _17732_c);
						}
					}
					_match_end_1bb76cb34:;
				};
			}
		}
		else if (_1e0d52579_is_i64(_17732_c.ptr())) {
			_case_begin_1bb76abed:;
			{
				_1aabd5145_write(_self_.get()._field_oc, _1aab99a00_itoa(static_cast<jule::I64>(_1e0d501d1_read_i64(_17732_c.ptr()))));
			}
		}
		else if (_1e0d527dd_is_u64(_17732_c.ptr())) {
			_case_begin_1bb76b5d3:;
			{
				_1aabd5145_write(_self_.get()._field_oc, _1aab99c97_utoa(static_cast<jule::U64>(_1e0d50445_read_u64(_17732_c.ptr()))));
			}
		}
		else if (_1e0d5328e_is_nil(_17732_c.ptr())) {
			_case_begin_1bb76b649:;
			{
				_1aab8d450_nil_lit(_self_);
			}
		}
		else {
			_case_begin_1bb76aa44:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bb76a989:;
	};
}



inline void _1aab8e440_div_by_zero_binary(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1dd9941e0_Token>& _20139_op, jule::Ptr<_1e0116dc2_OperandExprModel>& _20156_l, jule::Ptr<_1e0116dc2_OperandExprModel>& _20183_r) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _20139_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1bb771396:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1bb77140c:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1bb771330:;
	};
	if ((!(_1db66070a_PRODUCTION))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aabd7c91_loc_info(_self_.get()._field_oc, _20139_op);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aab9824b_expr(_self_, jule::Any(_20156_l.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aab9824b_expr(_self_, jule::Any(_20183_r.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab8e6b5_unsafe_binary(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e011cdb7_BinopExprModel> _22337_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab97ec6_model(_self_, jule::Any(_22337_m.get()._field_left.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aabd5145_write(_self_.get()._field_oc, _22337_m.get()._field_op.get()._field_kind);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aab97ec6_model(_self_, jule::Any(_22337_m.get()._field_right.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab8e93a_binary(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e011cdb7_BinopExprModel> _23330_m) {
	{
		auto &_match_expr{ _23330_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1bb7786bc:;
			{
				if ((_1ed7801db_strct(_23330_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					_1aab8e440_div_by_zero_binary(_self_, _23330_m.get()._field_op,_23330_m.get()._field_left,_23330_m.get()._field_right);
					return;;
				};
			}
		}
		_match_end_1bb778612:;
	};
	_1aab8e6b5_unsafe_binary(_self_, _23330_m);
}



inline void _1aab8ebb0_var(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0e366e6_Var> _24527_m) {
	if (_24527_m.get()._field_cpp_linked) {
		jule::Ptr<_1e0124e35_Directive> _24717_d = _1aac25cce_find_directive(_24527_m.get()._field_directives,jule::Str("namespace", 9));;
		if ((_24717_d != nullptr)) {
			_1aabd5145_write(_self_.get()._field_oc, _1aac18321_concat_all_parts(_24717_d.get()._field_args));
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba14c9_var(_24527_m));
}



inline void _1aab8ee35_structure(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e010261b_Struct> _25629_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aac22391_structure(_25629_m));
}



inline void _1aab901aa_structure_ins(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e010a05d_StructIns> _26037_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aac22638_structure_ins(_26037_m));
}



inline void _1aab90430_unary(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0111cac_UnaryExprModel> _26429_m) {
	{
		auto &_match_expr{ _26429_m.get()._field_op.get()._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1bb77e4b4:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1aab9824b_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1bb77e52a:;
			{
				if ((_1db66070a_PRODUCTION || (_1ed77deed_sptr(_26429_m.get()._field_expr.get()._field_kind.ptr()) == nullptr))) {
					goto _match_end_1bb77e409;
				};
				_1aab9824b_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1aabd7c91_loc_info(_self_.get()._field_oc, _26429_m.get()._field_op);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1bb77e409:;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aabd5145_write(_self_.get()._field_oc, _26429_m.get()._field_op.get()._field_kind);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab9824b_expr(_self_, jule::Any(_26429_m.get()._field_expr.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1aab906a5_structure_lit(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0116982_StructLitExprModel> _28837_m) {
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0e8a_structure_ins(_28837_m.get()._field_strct));
	if (_28837_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_28837_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28837_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1bb7878c9:;
			if (it != expr.end()) {
				jule::I32 _30117_i = it - expr.begin();
				jule::Ptr<_1e01087ba_FieldIns> _30120_f = *it;
				{
					{
						auto &expr = _28837_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1bb788468:;
						if (it != expr.end()) {
							jule::Ptr<_1e0116795_StructArgExprModel> _30229_arg = *it;
							{
								if ((_30229_arg.get()._field_field == _30120_f)) {
									_1aabd5145_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1aabd5145_write(_self_.get()._field_oc, static__1aaba1232_field(_30229_arg.get()._field_field.get()._field_decl));
									_1aabd5145_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1aab9824b_expr(_self_, jule::Any(_30229_arg.get()._field_expr));
									if (((_28837_m.get()._field_strct.get()._field_fields.len() - _30117_i) > 1LL)) {
										_1aabd5145_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1bb7878c9;
								};
							}
							_iter_next_1bb788468:;
							++it;
							goto _iter_begin_1bb788468;
						}
						_iter_end_1bb788468:;
					};
				}
				_iter_next_1bb7878c9:;
				++it;
				_30117_i++;
				goto _iter_begin_1bb7878c9;
			}
			_iter_end_1bb7878c9:;
		};
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1aab9092a_alloc_structure(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ea76_AllocStructLitExprModel> _31939_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0e8a_structure_ins(_31939_m.get()._field_lit.get()._field_strct));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1aab906a5_structure_lit(_self_, _31939_m.get()._field_lit);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab90ba0_casting(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ec63_CastingExprModel> _32731_m) {
	{
		
		if (((_1ed77dc89_prim(_32731_m.get()._field_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim(_32731_m.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1bb78e925:;
			{
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1aab97ec6_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1ed77e262_ptr(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || (_1ed77e262_ptr(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1bb78e5e5:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1aab9824b_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_1ed780450_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) || ((_1ed77dc89_prim(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && _1ed7848b6_is_any(_1ed77dc89_prim(_32731_m.get()._field_expr_kind.ptr()).ptr())) || (_1ed77e73a_tenm(_32731_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1bb78e65b:;
			{
				_1aab97ec6_model(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_1db66070a_PRODUCTION) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if (((_1ed780450_trt(_32731_m.get()._field_expr_kind.ptr()) != nullptr) && (_1ed77deed_sptr(_32731_m.get()._field_kind.ptr()) != nullptr))) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_1ed77deed_sptr(_32731_m.get()._field_kind.ptr()).get()._field_elem));
					} else {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
					};
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1aabd7c91_loc_info(_self_.get()._field_oc, _32731_m.get()._field_token);
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1ed780450_trt(_32731_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1bb78e6c2:;
			{
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1aab9824b_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1aabd5145_write(_self_.get()._field_oc, _1e0be7188_itoa(static_cast<jule::I32>(_1aabe6c39_find_type_offset(_self_.get()._field_oc.ptr(), _1ed780450_trt(_32731_m.get()._field_kind.ptr()),_32731_m.get()._field_expr_kind))));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1bb78e57e:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_32731_m.get()._field_kind));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1aab9824b_expr(_self_, jule::Any(_32731_m.get()._field_expr));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bb78e4b3:;
	};
}



inline void _1aab90e25_args(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Slice<jule::Any> _37828_args) {
	if ((_37828_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _37828_args;
		auto it = expr.begin();
		_iter_begin_1bb7a263b:;
		if (it != expr.end()) {
			jule::I32 _38214_i = it - expr.begin();
			jule::Any _38221_a = *it;
			{
				_1aab9824b_expr(_self_, jule::Any(_38221_a));
				if (((_37828_args.len() - _38214_i) > 1LL)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb7a263b:;
			++it;
			_38214_i++;
			goto _iter_begin_1bb7a263b;
		}
		_iter_end_1bb7a263b:;
	};
}



inline void _1aab9119a_model_for_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Any _39038_expr) {
	{
		auto &_match_expr{ _39038_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
			_case_begin_1bb7a3ede:;
			{
				_1aab93e7d_func_ins(_self_, _39038_expr.operator jule::Ptr<_1e01457c4_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1bb7a4055:;
			{
				jule::Ptr<_1e01411d7_StructSubIdentExprModel> _39621_ssie = _39038_expr.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>();;
				if ((_39621_ssie.get()._field_method != nullptr)) {
					_1aab93e7d_func_ins(_self_, _39621_ssie.get()._field_method);
					return;;
				};
			}
		}
		_match_end_1bb7a3e89:;
	};
	_1aab97ec6_model(_self_, jule::Any(_39038_expr));
}



inline void _1aab91420_push_call_inf(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ee50_FnCallExprModel>& _40534_m) {
	if ((_1db66070a_PRODUCTION || ((!(_40534_m.get()._field_func.get()._field_anon)) && (!(_1aab9a391_is_builtin_call_has_debuginf(_40534_m)))))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_40534_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _40534_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
				_case_begin_1bb7a75db:;
				{
					if (_40534_m.get()._field_expr.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1bb7a782d;
				}
			}
			else {
				_case_begin_1bb7a782d:;
				{
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1bb7a77c8:;
		};
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1aabd7c91_loc_info(_self_.get()._field_oc, _40534_m.get()._field_token);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_40534_m.get()._field_args.len() != 0LL)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1aab9172d_is_wrapped(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ee50_FnCallExprModel>& _43035_m) {
	if ((((!(_1e0146550_is_builtin(_43035_m.get()._field_func.ptr()))) && (_43035_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e01184ab_is_self(_43035_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _43035_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
				_case_begin_1bb7ab722:;
				{
					jule::Ptr<_1e01411d7_StructSubIdentExprModel> _43425_ssie = _43035_m.get()._field_expr.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>();;
					{
						
						if (_1e01202c6_is_ref(_43035_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()) || (_1ed77deed_sptr(_43425_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1bb7ae68c:;
							{
								goto _match_end_1bb7ac4e2;
							}
						}
						else {
							_case_begin_1bb7ac558:;
							{
								if ((_1ed7801db_strct(_43425_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									if ((!(_43425_ssie.get()._field_expr.get()._field_lvalue))) {
										_1aabd5145_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1aab97ec6_model(_self_, jule::Any(_43425_ssie.get()._field_expr));
										_1aabd5145_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;
									};
								};
							}
						}
						_match_end_1bb7ac4e2:;
					};
				}
			}
			_match_end_1bb7ab689:;
		};
	};
	return false;
}



inline void _1aab919a3_pure_func_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ee50_FnCallExprModel>& _45439_m) {
	jule::Bool _45513_wrapped = _1aab9172d_is_wrapped(_self_, _45439_m);;
	if (_45439_m.get()._field_is_co) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("__JULE_CO(", 10));
	};
	_1aab9119a_model_for_call(_self_, jule::Any(_45439_m.get()._field_expr));
	if ((!(_1e0146550_is_builtin(_45439_m.get()._field_func.ptr())))) {
		if ((_45439_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_45439_m.get()._field_func.get()._field_generics.len() > 0LL))) {
			if ((!(_1aac26164_has_directive(_45439_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _45439_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1bb7b3d01:;
					if (it != expr.end()) {
						jule::I32 _46426_i = it - expr.begin();
						jule::Ptr<_1ed77bbbb_TypeKind> _46433_g = *it;
						{
							_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_46433_g));
							if (((_45439_m.get()._field_func.get()._field_generics.len() - _46426_i) > 1LL)) {
								_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1bb7b3d01:;
						++it;
						_46426_i++;
						goto _iter_begin_1bb7b3d01;
					}
					_iter_end_1bb7b3d01:;
				};
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1aab91420_push_call_inf(_self_, _45439_m);
	jule::Bool _47517_locinfo = false;;
	if ((((!(_1e0146550_is_builtin(_45439_m.get()._field_func.ptr()))) && (_45439_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1e01184ab_is_self(_45439_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr()))) {
		{
			auto &_match_expr{ _45439_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
				_case_begin_1bb7b761d:;
				{
					jule::Ptr<_1e01411d7_StructSubIdentExprModel> _47925_ssie = _45439_m.get()._field_expr.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>();;
					{
						
						if (_1e01202c6_is_ref(_45439_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1bb7b97eb:;
							{
								_1aab97ec6_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
							}
						}
						else if ((_1ed77deed_sptr(_47925_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1bb7b95cb:;
							{
								_1aab97ec6_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
								_1aabd5145_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1db66070a_PRODUCTION))) {
									_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1aabd7c91_loc_info(_self_.get()._field_oc, _45439_m.get()._field_token);
									_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1bb7b84cb:;
							{
								if ((_1ed7801db_strct(_47925_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_1aabd5145_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_45513_wrapped) {
									_1aabd5145_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1aab97ec6_model(_self_, jule::Any(_47925_ssie.get()._field_expr));
								};
							}
						}
						_match_end_1bb7b8465:;
					};
					if ((_45439_m.get()._field_args.len() > 0LL)) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
				_case_begin_1bb7b76b7:;
				{
					_1aab97ec6_model(_self_, jule::Any(_45439_m.get()._field_expr.operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>().get()._field_expr));
					if ((!(_1db66070a_PRODUCTION))) {
						_47517_locinfo=true;
					};
					if ((_45439_m.get()._field_args.len() > 0LL)) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1bb7b7574:;
		};
	};
	_1aab90e25_args(_self_, _45439_m.get()._field_args);
	if (_47517_locinfo) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1aabd7c91_loc_info(_self_.get()._field_oc, _45439_m.get()._field_token);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_45513_wrapped) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
	if (_45439_m.get()._field_is_co) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1aab91c28_func_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e013ee50_FnCallExprModel> _53333_m) {
	if (((_1e0146550_is_builtin(_53333_m.get()._field_func.ptr()) || (!(_53333_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_53333_m.get()._field_except != nullptr) && (_53333_m.get()._field_except.get()._field_stmts.len() == 0LL)))) {
		_1aab919a3_pure_func_call(_self_, _53333_m);
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1aab919a3_pure_func_call(_self_, _53333_m);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	if ((_53333_m.get()._field_except != nullptr)) {
		if (((_53333_m.get()._field_func.get()._field_result == nullptr) || (!(_53333_m.get()._field_assigned)))) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1aab8a31a_scope(_self_.get()._field_oc.get()._field_sc, _53333_m.get()._field_except);
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _55521_forwarded = _1aab9a0c7_is_forwarded(_53333_m.get()._field_except);;
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_55521_forwarded) {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			_1aab8a31a_scope(_self_.get()._field_oc.get()._field_sc, _53333_m.get()._field_except);
			if (_55521_forwarded) {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1aab98746_init_expr(_self_, _53333_m.get()._field_func.get()._field_result);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1aabd6047_done_indent(_self_.get()._field_oc);
	} else {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1aabd7c91_loc_info(_self_.get()._field_oc, _53333_m.get()._field_token);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1e0105894_is_void(_53333_m.get()._field_func.get()._field_decl.ptr())))) {
			_1aabd6762_indent(_self_.get()._field_oc);
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1aabd6047_done_indent(_self_.get()._field_oc);
	};
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aab91e9d_slice(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e014013c_SliceExprModel> _58429_m) {
	if ((_58429_m.get()._field_elems.len() == 0LL)) {
		_1aabd5145_write(_self_.get()._field_oc, static__1aac2156b_as_slice(_58429_m.get()._field_elem_kind));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aac2156b_as_slice(_58429_m.get()._field_elem_kind));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1aab90e25_args(_self_, _58429_m.get()._field_elems);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aab92223_indexing(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0140329_IndexingExprModel> _59632_m) {
	_1aab97ec6_model(_self_, jule::Any(_59632_m.get()._field_expr.get()._field_model));
	{
		
		if (_1db66070a_PRODUCTION || (_1ed77e262_ptr(_59632_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1ed7806b4_map(_59632_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1bb7d5a15:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1aab9824b_expr(_self_, jule::Any(_59632_m.get()._field_index.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bb7d566e:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1aabd7c91_loc_info(_self_.get()._field_oc, _59632_m.get()._field_token);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1aab9824b_expr(_self_, jule::Any(_59632_m.get()._field_index.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bb7d55e7:;
	};
}



inline void _1aab92498_unsafe_indexing(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1ed83996b_UnsafeIndexingExprModel> _61539_m) {
	_1aab97ec6_model(_self_, jule::Any(_61539_m.get()._field_node.get()._field_expr.get()._field_model));
	{
		
		if (_1db66070a_PRODUCTION || (_1ed77e262_ptr(_61539_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1ed7806b4_map(_61539_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1bb7da6b8:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1aab9824b_expr(_self_, jule::Any(_61539_m.get()._field_node.get()._field_index.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1bb7da322:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1aab9824b_expr(_self_, jule::Any(_61539_m.get()._field_node.get()._field_index.get()._field_model));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1bb7da29a:;
	};
}



inline void _1aab9271d_anon_func(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0140516_AnonFnExprModel> _63233_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aac2399c_func(_63233_m.get()._field_func));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1aac15719_params_ins(_self_.get()._field_oc, _63233_m.get()._field_func.get()._field_params);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1aabd5145_write(_self_.get()._field_oc, static__1aac2345d_func_ins_result(_63233_m.get()._field_func));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1aab8a590_func_scope(_self_.get()._field_oc.get()._field_sc, _63233_m.get()._field_func);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab92993_map(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01408e0_MapExprModel> _64327_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_64327_m.get()._field_key_kind));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_64327_m.get()._field_val_kind));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_64327_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _64327_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1bb7e4d76:;
			if (it != expr.end()) {
				jule::I32 _65018_i = it - expr.begin();
				jule::Ptr<_1e0140703_KeyValPairExprModel> _65025_pair = *it;
				{
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1aab9824b_expr(_self_, jule::Any(_65025_pair.get()._field_key));
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1aab9824b_expr(_self_, jule::Any(_65025_pair.get()._field_val));
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_64327_m.get()._field_entries.len() - _65018_i) > 1LL)) {
						_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1bb7e4d76:;
				++it;
				_65018_i++;
				goto _iter_begin_1bb7e4d76;
			}
			_iter_end_1bb7e4d76:;
		};
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1aab92c18_slicing(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0140acc_SlicingExprModel> _66431_m) {
	_1aab97ec6_model(_self_, jule::Any(_66431_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1db66070a_PRODUCTION))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aabd7c91_loc_info(_self_.get()._field_oc, _66431_m.get()._field_token);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aab9824b_expr(_self_, jule::Any(_66431_m.get()._field_left));
	if ((_66431_m.get()._field_right != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aab9824b_expr(_self_, jule::Any(_66431_m.get()._field_right));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab92e8d_trait_sub(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0140cb9_TraitSubIdentExprModel> _68033_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba06a4_trait_decl(_68033_m.get()._field_trt));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1aab97ec6_model(_self_, jule::Any(_68033_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0165_func(_68033_m.get()._field_method));
}



inline void _1aab93213_structure_sub(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01411d7_StructSubIdentExprModel> _68937_m) {
	_1aab97ec6_model(_self_, jule::Any(_68937_m.get()._field_expr));
	if ((_68937_m.get()._field_field != nullptr)) {
		if ((_1ed77e262_ptr(_68937_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1ed77deed_sptr(_68937_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_1db66070a_PRODUCTION))) {
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1aabd7c91_loc_info(_self_.get()._field_oc, _68937_m.get()._field_token);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1aabd5145_write(_self_.get()._field_oc, static__1aaba1232_field(_68937_m.get()._field_field.get()._field_decl));
	};
}



inline void _1aab93488_common_ident(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e014179d_CommonIdentExprModel> _70932_m) {
	_1aabd5145_write(_self_.get()._field_oc, _70932_m.get()._field_ident);
}



inline void _1aab9370d_common_sub(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e014198a_CommonSubIdentExprModel> _71334_m) {
	_1aab97ec6_model(_self_, jule::Any(_71334_m.get()._field_expr));
	{
		
		if ((_1ed77e262_ptr(_71334_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1bb8062a5:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1ed77deed_sptr(_71334_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1bb805e75:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1db66070a_PRODUCTION))) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1aabd7c91_loc_info(_self_.get()._field_oc, _71334_m.get()._field_token);
					_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1bb805e0e:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1bb805d98:;
	};
	_1aabd5145_write(_self_.get()._field_oc, _71334_m.get()._field_ident);
}



inline void _1aab93983_array(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01415b1_ArrayExprModel> _73229_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aac228d0_array(_73229_m.get()._field_kind));
	if ((_73229_m.get()._field_elems.len() == 0LL)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_73229_m.get()._field_elems.len() == 2LL) && (_73229_m.get()._field_elems[1LL] == nullptr))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1aab9824b_expr(_self_, jule::Any(_73229_m.get()._field_elems[0LL]));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1aab90e25_args(_self_, _73229_m.get()._field_elems);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1aab93c08_func_ins_common(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01457c4_FnIns> _75539_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aac2399c_func(_75539_m));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab93e7d_func_ins(_self_, _75539_m);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab93e7d_func_ins(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01457c4_FnIns> _76232_m) {
	if (((_76232_m.get()._field_decl != nullptr) && _76232_m.get()._field_decl.get()._field_cpp_linked)) {
		jule::Ptr<_1e0124e35_Directive> _76417_d = _1aac25cce_find_directive(_76232_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_76417_d != nullptr)) {
			_1aabd5145_write(_self_.get()._field_oc, _1aac18321_concat_all_parts(_76417_d.get()._field_args));
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba040c_func_ins(_76232_m));
}



inline void _1aab94203_tuple(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0141b77_TupleExprModel> _77329_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::make_tuple(", 16));
	{
		auto &expr = _77329_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1bb814add:;
		if (it != expr.end()) {
			jule::I32 _77514_i = it - expr.begin();
			jule::Ptr<_1e0e7ce9b_Data> _77521_d = *it;
			{
				_1aab9824b_expr(_self_, jule::Any(_77521_d.get()._field_model));
				if (((_77329_m.get()._field_datas.len() - _77514_i) > 1LL)) {
					_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1bb814add:;
			++it;
			_77514_i++;
			goto _iter_begin_1bb814add;
		}
		_iter_end_1bb814add:;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab94478_new_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e014242a_BuiltinNewCallExprModel> _78432_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_78432_m.get()._field_kind));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_78432_m.get()._field_init != nullptr)) {
		_1aab9824b_expr(_self_, jule::Any(_78432_m.get()._field_init));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab946ed_out_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0141d64_BuiltinOutCallExprModel> _79432_m) {
	if ((_79432_m.get()._field_debug && _1db66070a_PRODUCTION)) {
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1aab9824b_expr(_self_, jule::Any(_79432_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab94973_outln_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel> _80334_m) {
	if ((_80334_m.get()._field_debug && _1db66070a_PRODUCTION)) {
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1aab9824b_expr(_self_, jule::Any(_80334_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab94be8_panic_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0142617_BuiltinPanicCallExprModel> _81234_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1aab9824b_expr(_self_, jule::Any(_81234_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1aabd7c91_loc_info(_self_.get()._field_oc, _81234_m.get()._field_token);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1aab94e6d_assert_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0142804_BuiltinAssertCallExprModel> _82035_m) {
	if (_1db66070a_PRODUCTION) {
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1aab9824b_expr(_self_, jule::Any(_82035_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1aabd5145_write(_self_.get()._field_oc, _1aab99417_cstr_lit(static_cast<jule::Slice<jule::U8>>(_82035_m.get()._field_log)));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1aabd7c91_loc_info(_self_.get()._field_oc, _82035_m.get()._field_token);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1aab951e3_error_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel> _83334_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1e0105894_is_void(_83334_m.get()._field_func.get()._field_decl.ptr())) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(", 22));
	} else {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_83334_m.get()._field_func.get()._field_result));
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(", 2));
	};
	_1aab9824b_expr(_self_, jule::Any(_83334_m.get()._field_err));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab95468_copy_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0142dba_BuiltinCopyCallExprModel> _84633_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1aab97ec6_model(_self_, jule::Any(_84633_m.get()._field_dest.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ed77dc89_prim(_84633_m.get()._field_dest.get()._field_kind.ptr()) != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1aab97ec6_model(_self_, jule::Any(_84633_m.get()._field_src.get()._field_model));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ed77dc89_prim(_84633_m.get()._field_src.get()._field_kind.ptr()) != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab956dd_make_call_slice(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>& _86240_m) {
	jule::Ptr<_1ed78560e_Slc> _86317_slice = _1ed77ec13_slc(_86240_m.get()._field_kind.ptr());;
	_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_86240_m.get()._field_kind));
	if ((_1ed77e4c6_enm(_86317_slice.get()._field_elem.ptr()) != nullptr)) {
		if ((_86240_m.get()._field_cap != nullptr)) {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
		} else {
			_1aabd5145_write(_self_.get()._field_oc, jule::Str("::alloc_def(", 12));
		};
	} else {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	};
	_1aab9824b_expr(_self_, jule::Any(_86240_m.get()._field_len));
	if ((_86240_m.get()._field_cap != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aab9824b_expr(_self_, jule::Any(_86240_m.get()._field_cap));
	};
	if ((_1ed77e4c6_enm(_86317_slice.get()._field_elem.ptr()) != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aab98746_init_expr(_self_, _86317_slice.get()._field_elem);
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab95963_make_call_str(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>& _88838_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1aab9824b_expr(_self_, jule::Any(_88838_m.get()._field_len));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab95bd8_make_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel> _89533_m) {
	if ((_1ed77ec13_slc(_89533_m.get()._field_kind.ptr()) != nullptr)) {
		_1aab956dd_make_call_slice(_self_, _89533_m);
		return;;
	};
	_1aab95963_make_call_str(_self_, _89533_m);
}



inline void _1aab95e5d_push_to_slice(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1ed839d34_PushToSliceExprModel> _90337_m) {
	jule::I32 _90413_n = _self_.get()._field_oc.get()._field_obj.len();;
	_1aab97ec6_model(_self_, jule::Any(_90337_m.get()._field_dest));
	jule::Str _90613_dest = _self_.get()._field_oc.get()._field_obj.slice(_90413_n);;
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1aabd5145_write(_self_.get()._field_oc, _90613_dest);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aabd5145_write(_self_.get()._field_oc, _1e0be7188_itoa(static_cast<jule::I32>(_90337_m.get()._field_elems.get()._field_elems.len())));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _90337_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1bb83c3eb:;
		if (it != expr.end()) {
			jule::Any _91321_e = *it;
			{
				_1aabd5145_write(_self_.get()._field_oc, _90613_dest);
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1aab97ec6_model(_self_, jule::Any(_91321_e));
				_1aabd5145_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1bb83c3eb:;
			++it;
			goto _iter_begin_1bb83c3eb;
		}
		_iter_end_1bb83c3eb:;
	};
}



inline void _1aab961d3_append_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel> _92235_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1aab97ec6_model(_self_, jule::Any(_92235_m.get()._field_dest));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1aab97ec6_model(_self_, jule::Any(_92235_m.get()._field_elements));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab96458_clone_call(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e014223d_BuiltinCloneCallExprModel> _93034_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1aab97ec6_model(_self_, jule::Any(_93034_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab966cd_sizeof(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0140ea6_SizeofExprModel> _93630_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1aab97ec6_model(_self_, jule::Any(_93630_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab96953_alignof(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0143717_AlignofExprModel> _94231_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1aab97ec6_model(_self_, jule::Any(_94231_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1aab96c61_rune_lit(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0143904_RuneExprModel> _94828_m) {
	if ((_94828_m.get()._field_code <= 127LL)) {
		jule::Str _95021_b = _1aab98d84_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_94828_m.get()._field_code)));;
		if ((_95021_b == jule::Str("'", 1))) {
			_95021_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _95021_b) + jule::Str("'", 1));
	};
	return _1aab99a00_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_94828_m.get()._field_code)));
}



inline void _1aab96ed6_structure_static(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e01413c4_StructStaticIdentExprModel> _95940_m) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba040c_func_ins(_95940_m.get()._field_method));
}



inline void _1aab9725b_integrated_to_str(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0143ae1_IntegratedToStrExprModel> _96341_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1aab97ec6_model(_self_, jule::Any(_96341_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1aab974d1_backend_emit(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0143ccd_BackendEmitExprModel> _96936_m) {
	if ((_96936_m.get()._field_exprs.len() == 0LL)) {
		_1aabd5145_write(_self_.get()._field_oc, _96936_m.get()._field_code);
		return;;
	};
	jule::I32 _97413_n = _self_.get()._field_oc.get()._field_obj.len();;
	{
		auto &expr = _96936_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1bb84a607:;
		if (it != expr.end()) {
			jule::I32 _97514_i = it - expr.begin();
			jule::Any _97521_expr = *it;
			{
				_1aab9824b_expr(_self_, jule::Any(_97521_expr));
				jule::Str _97717_obj = _self_.get()._field_oc.get()._field_obj.slice(_97413_n);;
				_96936_m.get()._field_exprs[_97514_i]=jule::Any(_97717_obj);
				_self_.get()._field_oc.get()._field_obj=_self_.get()._field_oc.get()._field_obj.slice(0LL,_97413_n);
			}
			_iter_next_1bb84a607:;
			++it;
			_97514_i++;
			goto _iter_begin_1bb84a607;
		}
		_iter_end_1bb84a607:;
	};
	_1aabd5145_write(_self_.get()._field_oc, _1ed80e028_format(_96936_m.get()._field_code,jule::Any(_96936_m.get()._field_exprs)));
}



inline void _1aab97756_free(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0143eba_FreeExprModel> _98428_m) {
	_1aab9824b_expr(_self_, jule::Any(_98428_m.get()._field_expr));
	if (_1db6601bb_RC) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1aab979cb_mut_slicing(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1ed83a3b7_MutSlicingExprModel> _99335_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab97ec6_model(_self_, jule::Any(_99335_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1db66070a_PRODUCTION))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1aabd7c91_loc_info(_self_.get()._field_oc, _99335_m.get()._field_token);
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1aab9824b_expr(_self_, jule::Any(_99335_m.get()._field_left));
	if ((_99335_m.get()._field_right != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1aab9824b_expr(_self_, jule::Any(_99335_m.get()._field_right));
	};
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1aab97c51_str_insert_begin(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1ed83a791_StrInsertBeginExprModel> _101040_m) {
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1aab97ec6_model(_self_, jule::Any(_101040_m.get()._field_dest));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1aab97ec6_model(_self_, jule::Any(_101040_m.get()._field_expr));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1aab97ec6_model(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Any _101829_m) {
	{
		auto &_match_expr{ _101829_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb8559ca:;
			{
				_1aab97ec6_model(_self_, jule::Any(_101829_m.operator jule::Ptr<_1e0e7ce9b_Data>().get()._field_model));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed77bbbb_TypeKind>>()) {
			_case_begin_1bb855a41:;
			{
				_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_101829_m.operator jule::Ptr<_1ed77bbbb_TypeKind>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1bb855cd8:;
			{
				_1aab8e077_constant(_self_, _101829_m.operator jule::Ptr<_1e0d4da1a_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1bb855d4e:;
			{
				_1aab8ebb0_var(_self_, _101829_m.operator jule::Ptr<_1e0e366e6_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0567d06_Trait>>()) {
			_case_begin_1bb855db5:;
			{
				static__1aaba06a4_trait_decl(_101829_m.operator jule::Ptr<_1e0567d06_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e010261b_Struct>>()) {
			_case_begin_1bb855e3c:;
			{
				_1aab8ee35_structure(_self_, _101829_m.operator jule::Ptr<_1e010261b_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e010a05d_StructIns>>()) {
			_case_begin_1bb856998:;
			{
				_1aab901aa_structure_ins(_self_, _101829_m.operator jule::Ptr<_1e010a05d_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
			_case_begin_1bb856a20:;
			{
				_1aab93c08_func_ins_common(_self_, _101829_m.operator jule::Ptr<_1e01457c4_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83964c_UnsafeBinopExprModel>>()) {
			_case_begin_1bb856a97:;
			{
				_1aab8e6b5_unsafe_binary(_self_, _101829_m.operator jule::Ptr<_1ed83964c_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
			_case_begin_1bb856b1e:;
			{
				_1aab8e93a_binary(_self_, _101829_m.operator jule::Ptr<_1e011cdb7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
			_case_begin_1bb856b96:;
			{
				_1aab90430_unary(_self_, _101829_m.operator jule::Ptr<_1e0111cac_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0116982_StructLitExprModel>>()) {
			_case_begin_1bb856c1d:;
			{
				_1aab906a5_structure_lit(_self_, _101829_m.operator jule::Ptr<_1e0116982_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ea76_AllocStructLitExprModel>>()) {
			_case_begin_1bb856c95:;
			{
				_1aab9092a_alloc_structure(_self_, _101829_m.operator jule::Ptr<_1e013ea76_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ec63_CastingExprModel>>()) {
			_case_begin_1bb856d1c:;
			{
				_1aab90ba0_casting(_self_, _101829_m.operator jule::Ptr<_1e013ec63_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1bb856d94:;
			{
				_1aab91c28_func_call(_self_, _101829_m.operator jule::Ptr<_1e013ee50_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014013c_SliceExprModel>>()) {
			_case_begin_1bb856e1b:;
			{
				_1aab91e9d_slice(_self_, _101829_m.operator jule::Ptr<_1e014013c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01415b1_ArrayExprModel>>()) {
			_case_begin_1bb856e93:;
			{
				_1aab93983_array(_self_, _101829_m.operator jule::Ptr<_1e01415b1_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83996b_UnsafeIndexingExprModel>>()) {
			_case_begin_1bb85701a:;
			{
				_1aab92498_unsafe_indexing(_self_, _101829_m.operator jule::Ptr<_1ed83996b_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140329_IndexingExprModel>>()) {
			_case_begin_1bb857092:;
			{
				_1aab92223_indexing(_self_, _101829_m.operator jule::Ptr<_1e0140329_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140516_AnonFnExprModel>>()) {
			_case_begin_1bb857119:;
			{
				_1aab9271d_anon_func(_self_, _101829_m.operator jule::Ptr<_1e0140516_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01408e0_MapExprModel>>()) {
			_case_begin_1bb857191:;
			{
				_1aab92993_map(_self_, _101829_m.operator jule::Ptr<_1e01408e0_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140acc_SlicingExprModel>>()) {
			_case_begin_1bb857218:;
			{
				_1aab92c18_slicing(_self_, _101829_m.operator jule::Ptr<_1e0140acc_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
			_case_begin_1bb857290:;
			{
				_1aab92e8d_trait_sub(_self_, _101829_m.operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1bb857317:;
			{
				_1aab93213_structure_sub(_self_, _101829_m.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014179d_CommonIdentExprModel>>()) {
			_case_begin_1bb85738e:;
			{
				_1aab93488_common_ident(_self_, _101829_m.operator jule::Ptr<_1e014179d_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014198a_CommonSubIdentExprModel>>()) {
			_case_begin_1bb857416:;
			{
				_1aab9370d_common_sub(_self_, _101829_m.operator jule::Ptr<_1e014198a_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141b77_TupleExprModel>>()) {
			_case_begin_1bb85748d:;
			{
				_1aab94203_tuple(_self_, _101829_m.operator jule::Ptr<_1e0141b77_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>>()) {
			_case_begin_1bb857515:;
			{
				_1aab946ed_out_call(_self_, _101829_m.operator jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1bb85758c:;
			{
				_1aab94973_outln_call(_self_, _101829_m.operator jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014242a_BuiltinNewCallExprModel>>()) {
			_case_begin_1bb857614:;
			{
				_1aab94478_new_call(_self_, _101829_m.operator jule::Ptr<_1e014242a_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>>()) {
			_case_begin_1bb85768b:;
			{
				_1aab94be8_panic_call(_self_, _101829_m.operator jule::Ptr<_1e0142617_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>>()) {
			_case_begin_1bb857713:;
			{
				_1aab94e6d_assert_call(_self_, _101829_m.operator jule::Ptr<_1e0142804_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1bb85778a:;
			{
				_1aab951e3_error_call(_self_, _101829_m.operator jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>>()) {
			_case_begin_1bb857812:;
			{
				_1aab95bd8_make_call(_self_, _101829_m.operator jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>>()) {
			_case_begin_1bb857889:;
			{
				_1aab961d3_append_call(_self_, _101829_m.operator jule::Ptr<_1e0142bcd_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>>()) {
			_case_begin_1bb857911:;
			{
				_1aab96458_clone_call(_self_, _101829_m.operator jule::Ptr<_1e014223d_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0142dba_BuiltinCopyCallExprModel>>()) {
			_case_begin_1bb857988:;
			{
				_1aab95468_copy_call(_self_, _101829_m.operator jule::Ptr<_1e0142dba_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140ea6_SizeofExprModel>>()) {
			_case_begin_1bb857a10:;
			{
				_1aab966cd_sizeof(_self_, _101829_m.operator jule::Ptr<_1e0140ea6_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143717_AlignofExprModel>>()) {
			_case_begin_1bb857a87:;
			{
				_1aab96953_alignof(_self_, _101829_m.operator jule::Ptr<_1e0143717_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143904_RuneExprModel>>()) {
			_case_begin_1bb857b0e:;
			{
				_1aabd5145_write(_self_.get()._field_oc, _1aab96c61_rune_lit(_self_, _101829_m.operator jule::Ptr<_1e0143904_RuneExprModel>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01413c4_StructStaticIdentExprModel>>()) {
			_case_begin_1bb857b86:;
			{
				_1aab96ed6_structure_static(_self_, _101829_m.operator jule::Ptr<_1e01413c4_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>>()) {
			_case_begin_1bb857c0d:;
			{
				_1aab9725b_integrated_to_str(_self_, _101829_m.operator jule::Ptr<_1e0143ae1_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143ccd_BackendEmitExprModel>>()) {
			_case_begin_1bb857c85:;
			{
				_1aab974d1_backend_emit(_self_, _101829_m.operator jule::Ptr<_1e0143ccd_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0143eba_FreeExprModel>>()) {
			_case_begin_1bb857d0c:;
			{
				_1aab97756_free(_self_, _101829_m.operator jule::Ptr<_1e0143eba_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83a3b7_MutSlicingExprModel>>()) {
			_case_begin_1bb857d84:;
			{
				_1aab979cb_mut_slicing(_self_, _101829_m.operator jule::Ptr<_1ed83a3b7_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ed83a791_StrInsertBeginExprModel>>()) {
			_case_begin_1bb857e0b:;
			{
				_1aab97c51_str_insert_begin(_self_, _101829_m.operator jule::Ptr<_1ed83a791_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1bb855b84:;
			{
				_1aabd5145_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1bb855b2e:;
	};
}



inline void _1aab9824b_expr(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Any _111728_e) {
	_1aab97ec6_model(_self_, jule::Any(_111728_e));
}



inline void _1aab984c1_val(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1e0e7e024_Value> _112127_v) {
	if (_1e0e7d85e_is_const(_112127_v.get()._field_data.ptr())) {
		_1aab8e077_constant(_self_, _112127_v.get()._field_data.get()._field_constant,((_112127_v.get()._field_data.get()._field_kind != nullptr) && _1ed7836c8_is_f32(_1ed77dc89_prim(_112127_v.get()._field_data.get()._field_kind.ptr()).ptr())));
		return;;
	};
	_1aab9824b_expr(_self_, jule::Any(_112127_v.get()._field_data.get()._field_model));
}



inline void _1aab98746_init_expr(jule::Ptr<_1aab8c87d_ExprCoder> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _112933_t) {
	if ((_1ed77e262_ptr(_112933_t.ptr()) != nullptr)) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		return;;
	};
	jule::Ptr<_1e057b8b9_Enum> _113417_enm = _1ed77e4c6_enm(_112933_t.ptr());;
	if ((_113417_enm != nullptr)) {
		_1aab984c1_val(_self_, _113417_enm.get()._field_items[0LL].get()._field_value);
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aac23c44_kind(_112933_t));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1aab8c87d_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aab9aca9_clone_func_decl(jule::Ptr<_1e010261b_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1aac22391_structure(_1032_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1aab9b051_clone_func_def(jule::Ptr<_1e010261b_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1aac22391_structure(_1631_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab9a99b_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab9be31_TestCoder> static__1aab9c3a4_new(jule::Ptr<_1aabca998_ObjectCoder>& _2828_oc) {
	return jule::new_ptr<_1aab9be31_TestCoder>(_1aab9be31_TestCoder{._field_oc=_2828_oc});
}



inline jule::Ptr<_1e0e13272_ImportInfo> _1aab9c618_find_testing_package(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bb878d2d:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _3521_imp;
				};
			}
			_iter_next_1bb878d2d:;
			++it;
			goto _iter_begin_1bb878d2d;
		}
		_iter_end_1bb878d2d:;
	};
	return nullptr;
}



inline void _1aab9c88d_append_test(jule::Ptr<_1aab9be31_TestCoder> _self_, jule::Ptr<_1e01457c4_FnIns> _4335_f) {
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aab9d053_call_tm_reset(_self_);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1aabd5145_write(_self_.get()._field_oc, _1aab99417_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4335_f.get()._field_decl.get()._field_ident)));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba040c_func_ins(_4335_f));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1aab9cb13_append_package_tests(jule::Ptr<_1aab9be31_TestCoder> _self_, jule::Ptr<_1e0e16253_Package>& _6045_p) {
	{
		auto &expr = _6045_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bb87eb7a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1bb880461:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _6225_f = *it;
						{
							if (_1aac26164_has_directive(_6225_f.get()._field_directives,jule::Str("test", 4))) {
								_1aab9c88d_append_test(_self_, _6225_f.get()._field_instances[0LL]);
							};
						}
						_iter_next_1bb880461:;
						++it;
						goto _iter_begin_1bb880461;
					}
					_iter_end_1bb880461:;
				};
			}
			_iter_next_1bb87eb7a:;
			++it;
			goto _iter_begin_1bb87eb7a;
		}
		_iter_end_1bb87eb7a:;
	};
}



inline jule::Bool _1aab9cd77_ready_testing_package(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	jule::Ptr<_1e0e13272_ImportInfo> _7117_p = _1aab9c618_find_testing_package(_self_);;
	if ((_7117_p == nullptr)) {
		return false;
	};
	_self_.get()._field_t=_1e0e146b3_find_struct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	_self_.get()._field_tm_reset=_1e011ae70_find_method(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tm_failed=_1e011ae70_find_method(_self_.get()._field_t.ptr(), jule::Str("failed", 6),false);
	_self_.get()._field_tm_skipped=_1e011ae70_find_method(_self_.get()._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline void _1aab9d053_call_tm_reset(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0165_func(_self_.get()._field_tm_reset));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aab9d22e_call_tm_failed(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0165_func(_self_.get()._field_tm_failed));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aab9d40a_call_tm_skipped(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	_1aabd5145_write(_self_.get()._field_oc, static__1aaba0165_func(_self_.get()._field_tm_skipped));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1aab9d5d6_serialize(jule::Ptr<_1aab9be31_TestCoder> _self_) {
	_1aac177d7_serialize_head(_self_.get()._field_oc);
	__JULE_DEFER({
		_1aac1760b_end(_self_.get()._field_oc);
	});;
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	if ((!(_1aab9cd77_ready_testing_package(_self_)))) {
		_1aabd5145_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1aabd6047_done_indent(_self_.get()._field_oc);
		return;;
	};
	_1aabd5145_write(_self_.get()._field_oc, static__1aac2049e_as_sptr(static__1aac22638_structure_ins(_self_.get()._field_t)));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1aabd5145_write(_self_.get()._field_oc, static__1aac22638_structure_ins(_self_.get()._field_t));
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1aabd582c_add_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1aab9d22e_call_tm_failed(_self_);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1aab9d40a_call_tm_skipped(_self_);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1aab9cb13_append_package_tests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_main);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1aabd6047_done_indent(_self_.get()._field_oc);
	_1aabd6762_indent(_self_.get()._field_oc);
	_1aabd5145_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1aab9be31_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1aab9e9d3_to_out(jule::Str& _3323_ident, jule::Uintptr _3335_addr) {
	if ((_3335_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3335_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3323_ident;
		return _3521_obj;
	};
	jule::Str _4217_obj = jule::Str::alloc((_3323_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3323_ident;
	return _4217_obj;
}



inline jule::Str static__1aab9edbd_to_local(jule::I32 _5424_row, jule::I32 _5434_col, jule::Str& _5445_ident) {
	jule::Str _5517_obj = jule::Str::alloc(40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1e0be7188_itoa(_5424_row);
	_5517_obj+=_1e0be7188_itoa(_5434_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5445_ident;
	return _5517_obj;
}



inline jule::Str static__1aaba0165_func(jule::Ptr<_1e0144581_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_cpp_linked) {
			_case_begin_1bb89a04c:;
			{
				return _6521_f.get()._field_ident;
			}
		}
		else if ((_6521_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1bb89936a:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1e0123d35_is_method(_6521_f.ptr())) {
			_case_begin_1bb8993d1:;
			{
				jule::Str _7221_obj = static__1aab9e9d3_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;
				};
				return _7221_obj;
			}
		}
		else {
			_case_begin_1bb899249:;
			{
				return static__1aab9e9d3_to_out(_6521_f.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));
			}
		}
		_match_end_1bb89917d:;
	};
}



inline jule::Str static__1aaba040c_func_ins(jule::Ptr<_1e01457c4_FnIns>& _8425_f) {
	if (_1e0146550_is_builtin(_8425_f.ptr())) {
		return (jule::Str("jule::", 6) + _8425_f.get()._field_decl.get()._field_ident);
	};
	if ((_8425_f.get()._field_decl.get()._field_cpp_linked || (_8425_f.get()._field_generics.len() == 0LL))) {
		return static__1aaba0165_func(_8425_f.get()._field_decl);
	};
	return static__1aab9e9d3_to_out(_8425_f.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8425_f)));
}



inline jule::Str static__1aaba06a4_trait_decl(jule::Ptr<_1e0567d06_Trait> _9526_t) {
	if (_1e01a46ac_is_builtin(_9526_t.ptr())) {
		return (jule::Str("jule::", 6) + _9526_t.get()._field_ident);
	};
	return static__1aab9e9d3_to_out(_9526_t.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9526_t)));
}



inline jule::Str static__1aaba094b_param(jule::Ptr<_1e0144394_Param>& _10322_p) {
	if ((_1dd996bd7_is_anon_ident(_10322_p.get()._field_ident) || _1dd996940_is_ignore_ident(_10322_p.get()._field_ident))) {
		return jule::Str();
	};
	if (_1e01184ab_is_self(_10322_p.ptr())) {
		return jule::Str("_self_", 6);
	};
	if ((_10322_p.get()._field_token == nullptr)) {
		return static__1aab9edbd_to_local(0LL,0LL,_10322_p.get()._field_ident);
	};
	return static__1aab9edbd_to_local(_10322_p.get()._field_token.get()._field_row,_10322_p.get()._field_token.get()._field_column,_10322_p.get()._field_ident);
}



inline jule::Str static__1aaba0be3_structure(jule::Ptr<_1e010261b_Struct>& _11726_s) {
	if (_11726_s.get()._field_cpp_linked) {
		if (_1aac26164_has_directive(_11726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_ident;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_ident);
	};
	return static__1aab9e9d3_to_out(_11726_s.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));
}



inline jule::Str static__1aaba0e8a_structure_ins(jule::Ptr<_1e010a05d_StructIns>& _12830_s) {
	if ((_12830_s.get()._field_decl.get()._field_cpp_linked || (_12830_s.get()._field_generics.len() == 0LL))) {
		return static__1aaba0be3_structure(_12830_s.get()._field_decl);
	};
	return static__1aab9e9d3_to_out(_12830_s.get()._field_decl.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12830_s)));
}



inline jule::Str static__1aaba1232_field(jule::Ptr<_1e010cc53_Field>& _13622_f) {
	if (_13622_f.get()._field_owner.get()._field_cpp_linked) {
		return _13622_f.get()._field_ident;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_ident);
}



inline jule::Str static__1aaba14c9_var(jule::Ptr<_1e0e366e6_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_cpp_linked) {
			_case_begin_1bb8a5a4c:;
			{
				return _14423_v.get()._field_ident;
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1bb8a5ab3:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_14423_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1bb8a4d15:;
			{
				if ((_1ed77deed_sptr(_14423_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				};
				return jule::Str("_self_", 6);
			}
		}
		else if ((_14423_v.get()._field_scope != nullptr)) {
			_case_begin_1bb8a4d7b:;
			{
				return static__1aab9edbd_to_local(_14423_v.get()._field_token.get()._field_row,_14423_v.get()._field_token.get()._field_column,_14423_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1bb8a4c9e:;
			{
				return static__1aab9e9d3_to_out(_14423_v.get()._field_ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));
			}
		}
		_match_end_1bb8a4551:;
	};
}



inline jule::Str static__1aaba1771_iter_begin(jule::Uintptr _16326_it) {
	jule::Str _16417_obj = jule::Str::alloc(30LL);;
	_16417_obj+=jule::Str("_iter_begin_", 12);
	_16417_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_16326_it)),15LL);
	return _16417_obj;
}



inline jule::Str static__1aaba1a18_iter_end(jule::Uintptr _17124_it) {
	jule::Str _17217_obj = jule::Str::alloc(30LL);;
	_17217_obj+=jule::Str("_iter_end_", 10);
	_17217_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17124_it)),15LL);
	return _17217_obj;
}



inline jule::Str static__1aaba1cb0_iter_next(jule::Uintptr _17925_it) {
	jule::Str _18017_obj = jule::Str::alloc(30LL);;
	_18017_obj+=jule::Str("_iter_next_", 11);
	_18017_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_17925_it)),15LL);
	return _18017_obj;
}



inline jule::Str static__1aaba2057_label(jule::Str& _18722_ident) {
	jule::Str _18817_obj = jule::Str::alloc(30LL);;
	_18817_obj+=jule::Str("_julec_label_", 13);
	_18817_obj+=_18722_ident;
	return _18817_obj;
}



inline jule::Str static__1aaba22ee_match_end(jule::Uintptr _19525_m) {
	jule::Str _19617_obj = jule::Str::alloc(30LL);;
	_19617_obj+=jule::Str("_match_end_", 11);
	_19617_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19525_m)),15LL);
	return _19617_obj;
}



inline jule::Str static__1aaba2596_case_begin(jule::Uintptr _20326_c) {
	jule::Str _20417_obj = jule::Str::alloc(30LL);;
	_20417_obj+=jule::Str("_case_begin_", 12);
	_20417_obj+=_1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20326_c)),15LL);
	return _20417_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab9e40b_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabd6e7c_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabca7ab_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aac1e15c_to_str(_1aac1dd93_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1aac1e46a_equals(jule::Ptr<_1aac1dd93_CustomType> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _3926_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac1dd93_CustomType _Src) {
	_Stream << _1aac1e15c_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1aac1ebb8_to_type(jule::Str _6027_id) {
	if ((_6027_id != jule::Str("uintptr", 7))) {
		_6027_id=_1e0ddda88_real_kind_of(_6027_id);
	};
	if (((97LL <= _6027_id[0LL]) && (_6027_id[0LL] <= 122LLU))) {
		_6027_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6027_id);
}



inline jule::Str static__1aac1ee60_prim(jule::Ptr<_1ed781693_Prim> _7120_p) {
	return static__1aac1ebb8_to_type(_1ed781a06_to_str(_7120_p.ptr()));
}



inline jule::Str static__1aac20207_tuple(jule::Ptr<_1ed786104_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1bb98de43:;
		if (it != expr.end()) {
			jule::Ptr<_1ed77bbbb_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1aac23c44_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1bb98de43:;
			++it;
			goto _iter_begin_1bb98de43;
		}
		_iter_end_1bb98de43:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;
}



inline jule::Str static__1aac2049e_as_sptr(jule::Str _8823_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8823_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;
}



inline jule::Str static__1aac20746_as_ptr(jule::Str _9622_elem) {
	return (_9622_elem + jule::Str("*", 1));
}



inline jule::Str static__1aac209dd_sptr(jule::Ptr<_1ed784ba2_Sptr> _10124_sptr) {
	return static__1aac2049e_as_sptr(static__1aac23c44_kind(_10124_sptr.get()._field_elem));
}



inline jule::Str static__1aac20c85_ptr(jule::Ptr<_1ed788216_Ptr> _10623_p) {
	;
	if (_1ed788bd9_is_unsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);
	};
	jule::Str _11117_elem = static__1aac23c44_kind(_10623_p.get()._field_elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;
}



inline jule::Str static__1aac2102c_enum_decl(jule::Ptr<_1e057b8b9_Enum> _11729_e) {
	return static__1aac23c44_kind(_11729_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1aac212c4_type_enum_decl(jule::Ptr<_1e04c643a_TypeEnum> _12234_e) {
	return jule::Str("jule::Any", 9);
}



inline jule::Str static__1aac2156b_as_slice(jule::Ptr<_1ed77bbbb_TypeKind> _12628_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1aac23c44_kind(_12628_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;
}



inline jule::Str static__1aac21813_slice(jule::Ptr<_1ed78560e_Slc> _13425_s) {
	return static__1aac2156b_as_slice(_13425_s.get()._field_elem);
}



inline jule::Str static__1aac21aaa_map(jule::Ptr<_1ed786bb5_Map> _13923_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1aac23c44_kind(_13923_m.get()._field_key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1aac23c44_kind(_13923_m.get()._field_val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;
}



inline jule::Str static__1aac21d52_trait_ident(jule::Str _14827_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14827_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;
}



inline jule::Str static__1aac220e9_trait_decl(jule::Ptr<_1e0567d06_Trait> _15626_t) {
	return static__1aac21d52_trait_ident(static__1aaba06a4_trait_decl(_15626_t));
}



inline jule::Str static__1aac22391_structure(jule::Ptr<_1e010261b_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_cpp_linked && (!(_1aac26164_has_directive(_16125_s.get()._field_directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1aaba0be3_structure(_16125_s);
	return _16217_rep;
}



inline jule::Str static__1aac22638_structure_ins(jule::Ptr<_1e010a05d_StructIns> _17133_s) {
	if (_17133_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17321_ident = static__1aaba0e8a_structure_ins(_17133_s);;
		if ((_17133_s.get()._field_generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17133_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1bb99dace:;
				if (it != expr.end()) {
					jule::Ptr<_1ed77bbbb_TypeKind> _17629_g = *it;
					{
						_17321_ident+=static__1aac23c44_kind(_17629_g);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1bb99dace:;
					++it;
					goto _iter_begin_1bb99dace;
				}
				_iter_end_1bb99dace:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1e0124e35_Directive> _18317_d = _1aac25cce_find_directive(_17133_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1aac18321_concat_all_parts(_18317_d.get()._field_args) + jule::Str("::", 2))));;
		};
		return _17321_ident;
	};
	return static__1aaba0e8a_structure_ins(_17133_s);
}



inline jule::Str static__1aac228d0_array(jule::Ptr<_1ed7877a9_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1aac23c44_kind(_19325_a.get()._field_elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1e0be7188_itoa(_19325_a.get()._field_n);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;
}



inline jule::Str static__1aac22e1e_param_ins(jule::Ptr<_1e0144938_ParamIns>& _21930_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21930_p.get()._field_decl.get()._field_variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1aac23c44_kind(_21930_p.get()._field_kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1aac23c44_kind(_21930_p.get()._field_kind);
	};
	if (_21930_p.get()._field_decl.get()._field_reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;
}



inline jule::Str static__1aac2345d_func_ins_result(jule::Ptr<_1e01457c4_FnIns>& _24936_f) {
	if (_1e0105894_is_void(_24936_f.get()._field_decl.ptr())) {
		if (_24936_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		};
		return jule::Str("void", 4);
	};
	if (_24936_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1aac23c44_kind(_24936_f.get()._field_result)) + jule::Str(">", 1));
	};
	return static__1aac23c44_kind(_24936_f.get()._field_result);
}



inline jule::Str static__1aac23705_anon_func(jule::Ptr<_1e01457c4_FnIns> _26229_f) {
	jule::Str _26317_decl = static__1aac2345d_func_ins_result(_26229_f);;
	_26317_decl+=jule::Str("(", 1);
	if ((_26229_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26229_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1bb9a9eb4:;
			if (it != expr.end()) {
				jule::Ptr<_1e0144938_ParamIns> _26625_param = *it;
				{
					if (_1e01184ab_is_self(_26625_param.get()._field_decl.ptr())) {
						goto _iter_next_1bb9a9eb4;
					};
					_26317_decl+=static__1aac22e1e_param_ins(_26625_param);
					_26317_decl+=jule::Str(",", 1);
				}
				_iter_next_1bb9a9eb4:;
				++it;
				goto _iter_begin_1bb9a9eb4;
			}
			_iter_end_1bb9a9eb4:;
		};
		(_26317_decl).mut_slice(0LL,(_26317_decl.len() - 1LL));;
	} else {
		_26317_decl+=jule::Str("void", 4);
	};
	_26317_decl+=jule::Str(")", 1);
	return _26317_decl;
}



inline jule::Str static__1aac2399c_func(jule::Ptr<_1e01457c4_FnIns> _28224_f) {
	jule::Str _28317_obj = jule::Str("jule::Fn<", 9);;
	_28317_obj+=static__1aac23705_anon_func(_28224_f);
	_28317_obj+=jule::Str(">", 1);
	return _28317_obj;
}



inline jule::Str static__1aac23c44_kind(jule::Ptr<_1ed77bbbb_TypeKind> _29024_k) {
	{
		
		if (_1ed77c837_cpp_linked(_29024_k.ptr())) {
			_case_begin_1bb9ac736:;
			{
				return _29024_k.get()._field_cpp_ident;
			}
		}
		else if ((_1ed77dc89_prim(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9ac912:;
			{
				return static__1aac1ee60_prim(_1ed77dc89_prim(_29024_k.ptr()));
			}
		}
		else if ((_1ed780928_tup(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9ac978:;
			{
				return static__1aac20207_tuple(_1ed780928_tup(_29024_k.ptr()));
			}
		}
		else if ((_1ed77deed_sptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9ac9de:;
			{
				return static__1aac209dd_sptr(_1ed77deed_sptr(_29024_k.ptr()));
			}
		}
		else if ((_1ed77e262_ptr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9aca55:;
			{
				return static__1aac20c85_ptr(_1ed77e262_ptr(_29024_k.ptr()));
			}
		}
		else if ((_1ed77e4c6_enm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acabb:;
			{
				return static__1aac2102c_enum_decl(_1ed77e4c6_enm(_29024_k.ptr()));
			}
		}
		else if ((_1ed77e73a_tenm(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acb32:;
			{
				return static__1aac212c4_type_enum_decl(_1ed77e73a_tenm(_29024_k.ptr()));
			}
		}
		else if ((_1ed77ec13_slc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acba9:;
			{
				return static__1aac21813_slice(_1ed77ec13_slc(_29024_k.ptr()));
			}
		}
		else if ((_1ed7806b4_map(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acc31:;
			{
				return static__1aac21aaa_map(_1ed7806b4_map(_29024_k.ptr()));
			}
		}
		else if ((_1ed780450_trt(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acca8:;
			{
				return static__1aac220e9_trait_decl(_1ed780450_trt(_29024_k.ptr()));
			}
		}
		else if ((_1ed7801db_strct(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acd30:;
			{
				return static__1aac22638_structure_ins(_1ed7801db_strct(_29024_k.ptr()));
			}
		}
		else if ((_1ed77e99e_arr(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9acda7:;
			{
				return static__1aac228d0_array(_1ed77e99e_arr(_29024_k.ptr()));
			}
		}
		else if ((_1ed77ee77_fnc(_29024_k.ptr()) != nullptr)) {
			_case_begin_1bb9ace2e:;
			{
				return static__1aac2399c_func(_1ed77ee77_fnc(_29024_k.ptr()));
			}
		}
		_match_end_1bb9ac659:;
	};
	{
		auto &_match_expr{ _29024_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aac1dd93_CustomType>>()) {
			_case_begin_1bb9b6520:;
			{
				return _29024_k.get()._field_kind.operator jule::Ptr<_1aac1dd93_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1bb9b5871:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1bb9b581b:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aac1e68a_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1bb9b6dd3_name(_1bb9b65b9_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1bb9b7015_what(_1bb9b65b9_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1bb9b7147_reset(_1bb9b65b9_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1bb9b7279_short(_1bb9b65b9_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb9b65b9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb9b8b4e_name(_1bb9ba579_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1bb9ba216_what(_1bb9ba579_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1bb9ba843_reset(_1bb9ba579_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1bb9ba975_short(_1bb9ba579_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb9ba579_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb9bc1b3_name(_1bb9bdadd_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1bb9bd77a_what(_1bb9bdadd_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1bb9bdda7_reset(_1bb9bdadd_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1bb9bded9_short(_1bb9bdadd_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb9bdadd_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb9c076b_name(_1bb9c2196_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1bb9c1d33_what(_1bb9c2196_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1bb9c2460_reset(_1bb9c2196_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1bb9c2592_short(_1bb9c2196_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb9c2196_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1bb9c3cd0_name(_1bb9c570a_Flag* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1bb9c5397_what(_1bb9c570a_Flag* _self_) {
	return (*_self_)._field__what;
}



inline void _1bb9c59c4_reset(_1bb9c570a_Flag* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1bb9c5b06_short(_1bb9c570a_Flag* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1bb9c570a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aac56d43_FlagSet> static__1aac5712e_new(void) {
	return jule::new_ptr<_1aac56d43_FlagSet>(_1aac56d43_FlagSet{._field__flags=jule::Slice<jule::Trait<_1aac55825_CommonFlag>>::alloc(0LL,20LL)});
}



inline jule::Trait<_1aac55825_CommonFlag> _1aac575e6_find_flag(_1aac56d43_FlagSet* _self_, jule::Str _7132_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1bb9d00e9:;
		if (it != expr.end()) {
			jule::Trait<_1aac55825_CommonFlag> _7221_flag = *it;
			{
				if ((_1aac55825_CommonFlag_mptr_data[(_7221_flag).type_offset]._1aac5534c_name(_7221_flag) == _7132_name)) {
					return _7221_flag;
				};
			}
			_iter_next_1bb9d00e9:;
			++it;
			goto _iter_begin_1bb9d00e9;
		}
		_iter_end_1bb9d00e9:;
	};
	return nullptr;
}



inline jule::Trait<_1aac55825_CommonFlag> _1aac57904_find_flag_short(_1aac56d43_FlagSet* _self_, jule::I32 _8138_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1bb9d10c8:;
		if (it != expr.end()) {
			jule::Trait<_1aac55825_CommonFlag> _8221_flag = *it;
			{
				if ((_1aac55825_CommonFlag_mptr_data[(_8221_flag).type_offset]._1aac5547e_short(_8221_flag) == _8138_name)) {
					return _8221_flag;
				};
			}
			_iter_next_1bb9d10c8:;
			++it;
			goto _iter_begin_1bb9d10c8;
		}
		_iter_end_1bb9d10c8:;
	};
	return nullptr;
}



inline jule::Slice<jule::Trait<_1aac55825_CommonFlag>> _1aac57b68_flags(_1aac56d43_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aac57e76_parse(_1aac56d43_FlagSet* _self_, jule::Slice<jule::Str> _11528_args) {
	_1aac5954e_ArgParser _11617_ap = _1aac5954e_ArgParser{._field_set=(*_self_), ._field_args=_11528_args, };;
	({
		auto except = _1aac5a93a_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11617_ap._field_content);
}



inline void _1aac58152_reset(_1aac56d43_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1bb9d2ddd:;
		if (it != expr.end()) {
			jule::Trait<_1aac55825_CommonFlag> _12616_f = *it;
			{
				_1aac55825_CommonFlag_mptr_data[(_12616_f).type_offset]._1aac556e3_reset(_12616_f);
			}
			_iter_next_1bb9d2ddd:;
			++it;
			goto _iter_begin_1bb9d2ddd;
		}
		_iter_end_1bb9d2ddd:;
	};
}



inline jule::Ptr<_1bb9c570a_Flag> _1bba49361_add_flag_common(_1aac56d43_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1bba4ac9c:;
			{
				goto _match_end_1bba4ac47;
			}
		}
		_match_end_1bba4ac47:;
	};
	if ((_1aac575e6_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1aac57904_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bb9c570a_Flag> _14817_flag = jule::new_ptr<_1bb9c570a_Flag>(_1bb9c570a_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aac55825_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;
}

inline jule::Ptr<_1bb9c2196_Flag> _1bba53447_add_flag_common(_1aac56d43_FlagSet* _self_, jule::Str _13141_name, jule::I32 _13152_short, jule::Str _13165_what) {
	{
		
{
			_case_begin_1bba54d3e:;
			{
				goto _match_end_1bba54cd9;
			}
		}
		_match_end_1bba54cd9:;
	};
	if ((_1aac575e6_find_flag(&(*_self_), _13141_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _13141_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13152_short != 0LL) && (_1aac57904_find_flag_short(&(*_self_), _13152_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13152_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1bb9c2196_Flag> _14817_flag = jule::new_ptr<_1bb9c2196_Flag>(_1bb9c2196_Flag{._field__name=_13141_name, ._field__short=_13152_short, ._field__what=_13165_what, });;
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1aac55825_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;
}



inline void _1bba46bbb_add_var(_1aac56d43_FlagSet* _self_, jule::Ptr<jule::Str> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1bb9c570a_Flag> _17617_flag = _1bba49361_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}

inline void _1bba50cb3_add_var(_1aac56d43_FlagSet* _self_, jule::Ptr<jule::Bool> _17537_var, jule::Str _17546_name, jule::I32 _17557_short, jule::Str _17570_what) {
	jule::Ptr<_1bb9c2196_Flag> _17617_flag = _1bba53447_add_flag_common(&(*_self_), _17546_name,_17557_short,_17570_what);;
	_17617_flag.get()._field__default=(*(_17537_var));
	_17617_flag.get()._field__data=_17537_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac56d43_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1c2c92949_IR>,jule::Slice<_1dd65aa00_Log>> static__1c2d5470e_build(jule::Str _2825_path, jule::I32 _2836_flags) {
	jule::Ptr<_1aa39e546_JuleImporter> _2917_importer = static__1c2c903e7_new(_1a9472ab0_build_compile_info());;
	jule::Slice<jule::Ptr<_1e00e2760_Ast>> _3018_files;;
	jule::Slice<_1dd65aa00_Log> _3029_logs;;
	std::tie(_3018_files,_3029_logs) = _1c2cec7ea_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Str _3413_root = _2825_path;;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e0e16253_Package> _4018_pkg;;
	std::tie(_4018_pkg,_3029_logs) = _1ed798864_analyze_package(_3018_files,jule::Trait<_1e0e10a00_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	};
	jule::Ptr<_1c2c92949_IR> _4517_ir = jule::new_ptr<_1c2c92949_IR>(_1c2c92949_IR{._field_root=_3413_root, ._field_main=_4018_pkg, ._field_used=_1c2c97542_all_packages(_2917_importer.ptr()), });;
	_4517_ir.get()._field_passes=_1a9448d1c_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1a9427856_append_structs(_1c2c92949_IR* _self_, jule::Ptr<_1e0e16253_Package>& _5734_p, jule::Slice<jule::Ptr<_1e010261b_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1adc57060:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _5821_f = *it;
			{
				{
					auto &expr = _5821_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1adc57824:;
					if (it != expr.end()) {
						jule::Ptr<_1e010261b_Struct> _5925_s = *it;
						{
							if ((!(_5925_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_5925_s);;
							};
						}
						_iter_next_1adc57824:;
						++it;
						goto _iter_begin_1adc57824;
					}
					_iter_end_1adc57824:;
				};
			}
			_iter_next_1adc57060:;
			++it;
			goto _iter_begin_1adc57060;
		}
		_iter_end_1adc57060:;
	};
}



inline jule::Slice<jule::Ptr<_1e010261b_Struct>> _1a9430e47_get_all_structures(_1c2c92949_IR* _self_) {
	jule::Slice<jule::Ptr<_1e010261b_Struct>> _7017_buffer = nullptr;;
	_1a9427856_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1adc57c97:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _7221_u = *it;
			{
				if ((!(_7221_u.get()._field_cpp_linked))) {
					_1a9427856_append_structs(&(*_self_), _7221_u.get()._field_package,_7017_buffer);
				};
			}
			_iter_next_1adc57c97:;
			++it;
			goto _iter_begin_1adc57c97;
		}
		_iter_end_1adc57c97:;
	};
	return _7017_buffer;
}



inline void _1a943da48_append_globals(_1c2c92949_IR* _self_, jule::Ptr<_1e0e16253_Package>& _8034_p, jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _8058_buffer) {
	{
		auto &expr = _8034_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1adc5a041:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _8121_f = *it;
			{
				{
					auto &expr = _8121_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1adc5a805:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e366e6_Var> _8225_v = *it;
						{
							if ((((_8225_v.get()._field_token != nullptr) && (!(_8225_v.get()._field_cpp_linked))) && (!(_8225_v.get()._field_constant)))) {
								_8058_buffer = jule::alloc_for_append(_8058_buffer,1);_8058_buffer.__push(_8225_v);;
							};
						}
						_iter_next_1adc5a805:;
						++it;
						goto _iter_begin_1adc5a805;
					}
					_iter_end_1adc5a805:;
				};
			}
			_iter_next_1adc5a041:;
			++it;
			goto _iter_begin_1adc5a041;
		}
		_iter_end_1adc5a041:;
	};
}



inline jule::Slice<jule::Ptr<_1e0e366e6_Var>> _1a9444950_get_all_globals(_1c2c92949_IR* _self_) {
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _9317_buffer = nullptr;;
	_1a943da48_append_globals(&(*_self_), (*_self_)._field_main,_9317_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1adc5c10e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _9521_u = *it;
			{
				if ((!(_9521_u.get()._field_cpp_linked))) {
					_1a943da48_append_globals(&(*_self_), _9521_u.get()._field_package,_9317_buffer);
				};
			}
			_iter_next_1adc5c10e:;
			++it;
			goto _iter_begin_1adc5c10e;
		}
		_iter_end_1adc5c10e:;
	};
	return _9317_buffer;
}



inline void _1a9445599_order(_1c2c92949_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1a9430e47_get_all_structures(&(*_self_));
	(*_self_)._field_ordered._field_globals=_1a9444950_get_all_globals(&(*_self_));
	static__1a949e108_order_structures((*_self_)._field_ordered._field_structs);
	static__1a94ce303_order_vars((*_self_)._field_ordered._field_globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1c2c92949_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1e00eb03d_to_str(_1e010a05d_StructIns* _self_) {
	jule::Str _24317_kind = jule::Str();;
	_24317_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24317_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab2c9a14:;
			if (it != expr.end()) {
				jule::Ptr<_1ed77bbbb_TypeKind> &_24720_g = *it;
				{
					_24317_kind+=_1ed77c073_to_str(_24720_g.ptr());
					_24317_kind+=jule::Str(",", 1);
				}
				_iter_next_1ab2c9a14:;
				++it;
				goto _iter_begin_1ab2c9a14;
			}
			_iter_end_1ab2c9a14:;
		};
		(_24317_kind).mut_slice(0LL,(_24317_kind.len() - 1LL));;
		_24317_kind+=jule::Str("]", 1);
	};
	return _24317_kind;
}



inline jule::Bool _1e0104c28_equals(jule::Ptr<_1e010a05d_StructIns> _self_, jule::Ptr<_1ed77bbbb_TypeKind> _25826_other) {
	jule::Ptr<_1e010a05d_StructIns> _25913_s = _1ed7801db_strct(_25826_other.ptr());;
	if ((_25913_s == nullptr)) {
		return false;
	};
	if ((_self_.get()._field_decl != _25913_s.get()._field_decl)) {
		return false;
	};
	if ((_self_.get()._field_generics.len() != _25913_s.get()._field_generics.len())) {
		return false;
	};
	jule::I32 _27217_i = 0LL;;
	for (; (_27217_i < _self_.get()._field_generics.len()); (_27217_i)++) {
		{
			if ((!(_1ed77c381_equals(_self_.get()._field_generics[_27217_i], _25913_s.get()._field_generics[_27217_i])))) {
				return false;
			};
		}
	_iter_next_1ab2ccc7b:;
	}
	_iter_end_1ab2ccc7b:;;
	return true;
}



inline jule::Bool _1e0119105_same(_1e010a05d_StructIns* _self_, jule::Ptr<_1e010a05d_StructIns> _28623_s) {
	if ((((*_self_)._field_decl != _28623_s.get()._field_decl) || (_28623_s.get()._field_generics.len() != (*_self_)._field_generics.len()))) {
		return false;
	};
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab2d0036:;
		if (it != expr.end()) {
			jule::I32 _29113_i = it - expr.begin();
			jule::Ptr<_1ed77bbbb_TypeKind> &_29116_g = *it;
			{
				if ((!(_1ed77c381_equals(_29116_g, _28623_s.get()._field_generics[_29113_i])))) {
					return false;
				};
			}
			_iter_next_1ab2d0036:;
			++it;
			_29113_i++;
			goto _iter_begin_1ab2d0036;
		}
		_iter_end_1ab2d0036:;
	};
	return true;
}



inline jule::Ptr<_1e0144581_Fn> _1e011ae70_find_method(_1e010a05d_StructIns* _self_, jule::Str _30134_ident, jule::Bool _30146_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1ab2d1741:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _30221_f = *it;
			{
				if (((_30221_f.get()._field_statically == _30146_statically) && (_30221_f.get()._field_ident == _30134_ident))) {
					return _30221_f;
				};
			}
			_iter_next_1ab2d1741:;
			++it;
			goto _iter_begin_1ab2d1741;
		}
		_iter_end_1ab2d1741:;
	};
	return nullptr;
}



inline jule::Ptr<_1e01087ba_FieldIns> _1e0112b59_find_field(_1e010a05d_StructIns* _self_, jule::Str _31233_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1ab2d28a7:;
		if (it != expr.end()) {
			jule::Ptr<_1e01087ba_FieldIns> _31321_f = *it;
			{
				if ((_31321_f.get()._field_decl.get()._field_ident == _31233_ident)) {
					return _31321_f;
				};
			}
			_iter_next_1ab2d28a7:;
			++it;
			goto _iter_begin_1ab2d28a7;
		}
		_iter_end_1ab2d28a7:;
	};
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1e010a05d_StructIns _Src) {
	_Stream << _1e00eb03d_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa595121_ObjectDeadCode> static__1aa59551c_new(jule::Ptr<_1c2c92949_IR>& _3424_ir) {
	return jule::new_ptr<_1aa595121_ObjectDeadCode>(_1aa595121_ObjectDeadCode{._field_ir=_3424_ir});
}



inline jule::Bool _1adc92908_is_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0567d06_Trait>& _4031_t) {
	jule::Slice<jule::Ptr<_1e0567d06_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1adc94465:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1adc94113:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1adc94ee3:;
		if (it != expr.end()) {
			jule::I32 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1adc94ee3:;
			++it;
			_5213_i++;
			goto _iter_begin_1adc94ee3;
		}
		_iter_end_1adc94ee3:;
	};
	return false;
}

inline jule::Bool _1adc97655_is_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e01457c4_FnIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1e01457c4_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1adc99503:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1adc99448:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1adc994ae:;
		if (it != expr.end()) {
			jule::I32 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1adc994ae:;
			++it;
			_5213_i++;
			goto _iter_begin_1adc994ae;
		}
		_iter_end_1adc994ae:;
	};
	return false;
}

inline jule::Bool _1adc9ebce_is_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e010a05d_StructIns>& _4031_t) {
	jule::Slice<jule::Ptr<_1e010a05d_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bb576960:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1bb576674:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bb5768e9:;
		if (it != expr.end()) {
			jule::I32 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1bb5768e9:;
			++it;
			_5213_i++;
			goto _iter_begin_1bb5768e9;
		}
		_iter_end_1bb5768e9:;
	};
	return false;
}

inline jule::Bool _1bb5793ad_is_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e366e6_Var>& _4031_t) {
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1bb57ace9:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1bb57aa74:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1bb57b02a:;
		if (it != expr.end()) {
			jule::I32 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4031_t)) {
					return true;
				};
			}
			_iter_next_1bb57b02a:;
			++it;
			_5213_i++;
			goto _iter_begin_1bb57b02a;
		}
		_iter_end_1bb57b02a:;
	};
	return false;
}



inline void _1adc93893_push_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0567d06_Trait> _6036_t) {
	{
		
{
			_case_begin_1adc964cd:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6036_t);;
			}
		}
		_match_end_1adc9619d:;
	};
}

inline void _1adc9aee9_push_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e01457c4_FnIns> _6036_t) {
	{
		
{
			_case_begin_1adc9bc20:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6036_t);;
			}
		}
		_match_end_1adc9baee:;
	};
}

inline void _1adc9e283_push_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e010a05d_StructIns> _6036_t) {
	{
		
{
			_case_begin_1adca08d3:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6036_t);;
			}
		}
		_match_end_1adca062a:;
	};
}

inline void _1bb57a304_push_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e366e6_Var> _6036_t) {
	{
		
{
			_case_begin_1bb57d0b5:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6036_t);;
			}
		}
		_match_end_1bb57d00a:;
	};
}



inline void _1aa5c666e_set_references_as_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e01480ac_ReferenceStack>& _7347_rs) {
	if ((_7347_rs == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _1e014873e_len(_7347_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1e0148a4c_at(_7347_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type_is<jule::Ptr<_1e0567d06_Trait>>()) {
					_case_begin_1adc9160a:;
					{
						jule::Ptr<_1e0567d06_Trait> _8225_t = _7921_ref.operator jule::Ptr<_1e0567d06_Trait>();;
						if (_1adc92908_is_live(_self_, _8225_t)) {
							goto _iter_next_1adc900dc;
						};
						_1adc93893_push_live(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1adc92c16:;
							if (it != expr.end()) {
								jule::Ptr<_1e0144581_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1adc96478:;
										if (it != expr.end()) {
											jule::Ptr<_1e01457c4_FnIns> _8833_mins = *it;
											{
												if (_1adc97655_is_live(_self_, _8833_mins)) {
													goto _iter_next_1adc96478;
												};
												_1adc9aee9_push_live(_self_, _8833_mins);
												_1aa5c666e_set_references_as_live(_self_, _8833_mins.get()._field_refers);
											}
											_iter_next_1adc96478:;
											++it;
											goto _iter_begin_1adc96478;
										}
										_iter_end_1adc96478:;
									};
								}
								_iter_next_1adc92c16:;
								++it;
								goto _iter_begin_1adc92c16;
							}
							_iter_end_1adc92c16:;
						};
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
					_case_begin_1adc91671:;
					{
						jule::Ptr<_1e01457c4_FnIns> _9725_f = _7921_ref.operator jule::Ptr<_1e01457c4_FnIns>();;
						if (_1adc97655_is_live(_self_, _9725_f)) {
							goto _match_end_1adc91550;
						};
						if (((_9725_f.get()._field_owner != nullptr) && (!(_9725_f.get()._field_decl.get()._field_statically)))) {
							if ((!(_1adc9ebce_is_live(_self_, _9725_f.get()._field_owner)))) {
								_1adc9e283_push_live(_self_, _9725_f.get()._field_owner);
								_1aa5c666e_set_references_as_live(_self_, _9725_f.get()._field_owner.get()._field_refers);
							};
						};
						_1adc9aee9_push_live(_self_, _9725_f);
						_1aa5c666e_set_references_as_live(_self_, _9725_f.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
					_case_begin_1adc917c5:;
					{
						jule::Ptr<_1e0e366e6_Var> _11025_v = _7921_ref.operator jule::Ptr<_1e0e366e6_Var>();;
						if (_1bb5793ad_is_live(_self_, _11025_v)) {
							goto _match_end_1adc91550;
						};
						_1bb57a304_push_live(_self_, _11025_v);
						_1aa5c666e_set_references_as_live(_self_, _11025_v.get()._field_refers);
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1e010a05d_StructIns>>()) {
					_case_begin_1adc9183b:;
					{
						jule::Ptr<_1e010a05d_StructIns> _11725_s = _7921_ref.operator jule::Ptr<_1e010a05d_StructIns>();;
						if (_1adc9ebce_is_live(_self_, _11725_s)) {
							goto _match_end_1adc91550;
						};
						_1adc9e283_push_live(_self_, _11725_s);
						_1aa5c666e_set_references_as_live(_self_, _11725_s.get()._field_refers);
						{
							auto &expr = _11725_s.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1bb5814e7:;
							if (it != expr.end()) {
								jule::Ptr<_1e0144581_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1bb581c89:;
										if (it != expr.end()) {
											jule::Ptr<_1e01457c4_FnIns> _12433_mins = *it;
											{
												if (_1adc97655_is_live(_self_, _12433_mins)) {
													goto _iter_next_1bb581c89;
												};
												_1adc9aee9_push_live(_self_, _12433_mins);
												_1aa5c666e_set_references_as_live(_self_, _12433_mins.get()._field_refers);
											}
											_iter_next_1bb581c89:;
											++it;
											goto _iter_begin_1bb581c89;
										}
										_iter_end_1bb581c89:;
									};
								}
								_iter_next_1bb5814e7:;
								++it;
								goto _iter_begin_1bb5814e7;
							}
							_iter_end_1bb5814e7:;
						};
					}
				}
				_match_end_1adc91550:;
			};
		}
	_iter_next_1adc900dc:;
	}
	_iter_end_1adc900dc:;;
}



inline void _1aa5c68e4_inits(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e16253_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bb581e98:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1bb584286:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_ident == jule::Str("init", 4))) {
								jule::Ptr<_1e01457c4_FnIns> _14029_ins = _13825_f.get()._field_instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1aa5c666e_set_references_as_live(_self_, _14029_ins.get()._field_refers);
							};
						}
						_iter_next_1bb584286:;
						++it;
						goto _iter_begin_1bb584286;
					}
					_iter_end_1bb584286:;
				};
			}
			_iter_next_1bb581e98:;
			++it;
			goto _iter_begin_1bb581e98;
		}
		_iter_end_1bb581e98:;
	};
}



inline void _1aa5c6b69_collect_live_package(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e16253_Package>& _14845_pkg) {
	_1aa5c68e4_inits(_self_, _14845_pkg);
	if (_1db65ee68_TEST) {
		{
			auto &expr = _14845_pkg.get()._field_files;
			auto it = expr.begin();
			_iter_begin_1bb5866c8:;
			if (it != expr.end()) {
				jule::Ptr<_1e0e77eeb_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_funcs;
						auto it = expr.begin();
						_iter_begin_1bb586eae:;
						if (it != expr.end()) {
							jule::Ptr<_1e0144581_Fn> _15529_f = *it;
							{
								if (_1aa5c8b7c_has_directive(_15529_f.get()._field_directives,jule::Str("test", 4))) {
									jule::Ptr<_1e01457c4_FnIns> _15733_ins = _15529_f.get()._field_instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1aa5c666e_set_references_as_live(_self_, _15733_ins.get()._field_refers);
								};
							}
							_iter_next_1bb586eae:;
							++it;
							goto _iter_begin_1bb586eae;
						}
						_iter_end_1bb586eae:;
					};
				}
				_iter_next_1bb5866c8:;
				++it;
				goto _iter_begin_1bb5866c8;
			}
			_iter_end_1bb5866c8:;
		};
	};
}



inline void _1aa5c6d45_collect_live(jule::Ptr<_1aa595121_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bb586882:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_cpp_linked))) {
					_1aa5c6b69_collect_live_package(_self_, _16721_used.get()._field_package);
				};
			}
			_iter_next_1bb586882:;
			++it;
			goto _iter_begin_1bb586882;
		}
		_iter_end_1bb586882:;
	};
	_1aa5c6b69_collect_live_package(_self_, _self_.get()._field_ir.get()._field_main);
	jule::Ptr<_1e0144581_Fn> _17517_main = _1e0e17a07_find_fn(_self_.get()._field_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1e01457c4_FnIns> _17617_ins = _17517_main.get()._field_instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1aa5c666e_set_references_as_live(_self_, _17617_ins.get()._field_refers);
}



inline void _1aa5c70ba_remove_dead_globals(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _18144_vars) {
	jule::I32 _18217_i = 0LL;;
	while ((_18217_i < _18144_vars.len())) {
		{
			jule::Ptr<_1e0e366e6_Var> _18417_v = _18144_vars[_18217_i];;
			if (_1bb5793ad_is_live(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1bb58bd82;
			};
			_18144_vars=jule::append(_18144_vars.slice(0LL,_18217_i),_18144_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1bb58bd82:;
	}
	_iter_end_1bb58bd82:;;
}



inline void _1aa5c7340_remove_dead_fns(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e0144581_Fn>>& _19340_funcs) {
	jule::I32 _19417_i = 0LL;;
	while ((_19417_i < _19340_funcs.len())) {
		{
			jule::Ptr<_1e0144581_Fn> _19621_f = _19340_funcs[_19417_i];;
			jule::I32 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_instances.len())) {
				{
					jule::Ptr<_1e01457c4_FnIns> _19921_ins = _19621_f.get()._field_instances[_19721_j];;
					if (_1adc97655_is_live(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1bb58ee1d;
					};
					_19621_f.get()._field_instances=jule::append(_19621_f.get()._field_instances.slice(0LL,_19721_j),_19621_f.get()._field_instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1bb58ee1d:;
			}
			_iter_end_1bb58ee1d:;;
			if ((_19621_f.get()._field_instances.len() == 0LL)) {
				_19340_funcs=jule::append(_19340_funcs.slice(0LL,_19417_i),_19340_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1bb58e14d;
			};
			(_19417_i)++;
		}
	_iter_next_1bb58e14d:;
	}
	_iter_end_1bb58e14d:;;
}



inline void _1aa5c75b5_remove_dead_structs(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e010261b_Struct>>& _21444_structs) {
	jule::I32 _21517_i = 0LL;;
	while ((_21517_i < _21444_structs.len())) {
		{
			jule::Ptr<_1e010261b_Struct> _21721_s = _21444_structs[_21517_i];;
			jule::I32 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_instances.len())) {
				{
					jule::Ptr<_1e010a05d_StructIns> _22025_ins = _21721_s.get()._field_instances[_21821_j];;
					_1aa5c7340_remove_dead_fns(_self_, _22025_ins.get()._field_methods);
					if (((_22025_ins.get()._field_methods.len() != 0LL) || _1adc9ebce_is_live(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1bb593dab;
					};
					_21721_s.get()._field_instances=jule::append(_21721_s.get()._field_instances.slice(0LL,_21821_j),_21721_s.get()._field_instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1bb593dab:;
			}
			_iter_end_1bb593dab:;;
			if ((_21721_s.get()._field_instances.len() == 0LL)) {
				_21444_structs=jule::append(_21444_structs.slice(0LL,_21517_i),_21444_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1bb5930db;
			};
			(_21517_i)++;
		}
	_iter_next_1bb5930db:;
	}
	_iter_end_1bb5930db:;;
}



inline void _1aa5c783a_remove_dead_traits(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1e0567d06_Trait>>& _23643_traits) {
	jule::I32 _23717_i = 0LL;;
	while ((_23717_i < _23643_traits.len())) {
		{
			jule::Ptr<_1e0567d06_Trait> _23921_t = _23643_traits[_23717_i];;
			if ((!(_1adc92908_is_live(_self_, _23921_t)))) {
				_23643_traits=jule::append(_23643_traits.slice(0LL,_23717_i),_23643_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1bb597a08;
			};
			jule::I32 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_implemented.len())) {
				{
					jule::Ptr<_1e010261b_Struct> _24621_s = _23921_t.get()._field_implemented[_24421_j];;
					if ((_24621_s.get()._field_instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1bb5983aa;
					};
					_23921_t.get()._field_implemented=jule::append(_23921_t.get()._field_implemented.slice(0LL,_24421_j),_23921_t.get()._field_implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1bb5983aa:;
			}
			_iter_end_1bb5983aa:;;
			(_23717_i)++;
		}
	_iter_next_1bb597a08:;
	}
	_iter_end_1bb597a08:;;
}



inline void _1aa5c7ab0_remove_deads_file(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e77eeb_SymbolTable>& _25742_file) {
	_1aa5c7340_remove_dead_fns(_self_, _25742_file.get()._field_funcs);
	_1aa5c75b5_remove_dead_structs(_self_, _25742_file.get()._field_structs);
	_1aa5c783a_remove_dead_traits(_self_, _25742_file.get()._field_traits);
	_1aa5c70ba_remove_dead_globals(_self_, _25742_file.get()._field_vars);
}



inline void _1aa5c7d35_remove_deads_package(jule::Ptr<_1aa595121_ObjectDeadCode> _self_, jule::Ptr<_1e0e16253_Package>& _26445_pkg) {
	{
		auto &expr = _26445_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bb59d1e5:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _26521_file = *it;
			{
				_1aa5c7ab0_remove_deads_file(_self_, _26521_file);
			}
			_iter_next_1bb59d1e5:;
			++it;
			goto _iter_begin_1bb59d1e5;
		}
		_iter_end_1bb59d1e5:;
	};
}



inline void _1aa5c8011_remove_deads(jule::Ptr<_1aa595121_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bb59dbeb:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_cpp_linked))) {
					_1aa5c7d35_remove_deads_package(_self_, _27121_used.get()._field_package);
				};
			}
			_iter_next_1bb59dbeb:;
			++it;
			goto _iter_begin_1bb59dbeb;
		}
		_iter_end_1bb59dbeb:;
	};
	_1aa5c7d35_remove_deads_package(_self_, _self_.get()._field_ir.get()._field_main);
}



inline void _1aa5c81dc_elimanate(jule::Ptr<_1aa595121_ObjectDeadCode> _self_) {
	_1aa5c6d45_collect_live(_self_);
	_1aa5c8011_remove_deads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa595121_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aabca998_ObjectCoder> static__1aabd48a3_new(jule::Ptr<_1c2c92949_IR>& _7228_ir, _1aabd6e7c_SerializationInfo _7237_info) {
	jule::Ptr<_1aabca998_ObjectCoder> _7317_oc = jule::new_ptr<_1aabca998_ObjectCoder>(_1aabca998_ObjectCoder{._field_ir=_7228_ir, ._field_info=_7237_info, });;
	_7317_oc.get()._field_ec=static__1aab8cc79_new(_7317_oc);
	_7317_oc.get()._field_sc=static__1aab859db_new(_7317_oc);
	return _7317_oc;
}



inline void _1aabd5145_write(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Str _8225_s) {
	_self_.get()._field_obj+=_8225_s;
}



inline void _1aabd582c_add_indent(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	;
	_self_.get()._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1aabd6047_done_indent(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_self_.get()._field_indent_buffer=_self_.get()._field_indent_buffer.slice(0LL,(_self_.get()._field_indent_buffer.len() - 1LL));
}



inline void _1aabd6762_indent(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_self_.get()._field_obj+=_self_.get()._field_indent_buffer;
}



inline jule::I32 _1aabe6c39_find_type_offset(_1aabca998_ObjectCoder* _self_, jule::Ptr<_1e0567d06_Trait> _10231_t, jule::Ptr<_1ed77bbbb_TypeKind> _10246_k) {
	if ((_10231_t.get()._field_implemented.len() == 0LL)) {
		return 0LL;
	};
	jule::Ptr<_1e010a05d_StructIns> _10617_s = nullptr;;
	if ((_1ed77deed_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1ed77deed_sptr(_10246_k.ptr()).get()._field_elem;
	};
	if ((_1ed7801db_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	};
	_10617_s=_1ed7801db_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bb8b89d8:;
		if (it != expr.end()) {
			jule::Ptr<_1aabca7ab_TraitHash> &_11416_hash = *it;
			{
				if (((_11416_hash.get()._field_t == _10231_t) && (_11416_hash.get()._field_s == _10617_s))) {
					return _11416_hash.get()._field_i;
				};
			}
			_iter_next_1bb8b89d8:;
			++it;
			goto _iter_begin_1bb8b89d8;
		}
		_iter_end_1bb8b89d8:;
	};
	return -1LL;
}



inline void _1aabd7c91_loc_info(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1dd9941e0_Token>& _12329_t) {
	jule::Str &_12414_loc = _12329_t.get()._field_file.get()._field_path;;
	if (_1db66070a_PRODUCTION) {
		{
			
			if (_1dd588048_has_prefix(_12414_loc,_1dd66e45e_PATH_STDLIB)) {
				_case_begin_1bb8bb326:;
				{
					_1aabd5145_write(_self_, _1aab9912b_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1dc6ae24c_dir(_1dd66e45e_PATH_STDLIB).len() + 1LL)))));
				}
			}
			else if (_1dd588048_has_prefix(_12414_loc,_self_.get()._field_ir.get()._field_root)) {
				_case_begin_1bb8babd8:;
				{
					_1aabd5145_write(_self_, _1aab9912b_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc.slice((_1dc6ae24c_dir(_self_.get()._field_ir.get()._field_root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1bb8ba842:;
				{
					_1aabd5145_write(_self_, _1aab9912b_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
				}
			}
			_match_end_1bb8ba776:;
		};
	} else {
		_1aabd5145_write(_self_, _1aab9912b_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12414_loc)));
	};
	_1aabd5145_write(_self_, jule::Str(":", 1));
	_1aabd5145_write(_self_, _1e0be7188_itoa(_12329_t.get()._field_row));
	_1aabd5145_write(_self_, jule::Str(":", 1));
	_1aabd5145_write(_self_, _1e0be7188_itoa(_12329_t.get()._field_column));
}



inline void _1aabd7ad7_head(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac0d921_Time _15013_time = static__1aac0deb5_now();;
	_1aac0d24a_AbsTime _15113_abs = _1aac10604_abs(&_15013_time);;
	_1aabd5145_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1aabd5145_write(_self_, jule::Str("// JuleC version: ", 18));
	_1aabd5145_write(_self_, jule::Str("jule0.0.11 @master", 18));
	_1aabd5145_write(_self_, jule::Str("\n", 1));
	_1aabd5145_write(_self_, jule::Str("// Date: ", 9));
	_1aabd5145_write(_self_, _1e0be6e24_fmt_uint(_15113_abs._field_day,10LL));
	_1aabd5145_write(_self_, jule::Str("/", 1));
	_1aabd5145_write(_self_, _1e0be6e24_fmt_uint(_15113_abs._field_month,10LL));
	_1aabd5145_write(_self_, jule::Str("/", 1));
	_1aabd5145_write(_self_, _1e0be6e24_fmt_uint(_15113_abs._field_year,10LL));
	_1aabd5145_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aabd5145_write(_self_, _self_.get()._field_info._field_compiler);
	_1aabd5145_write(_self_, jule::Str(" ", 1));
	_1aabd5145_write(_self_, _self_.get()._field_info._field_compiler_command);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	if (_1db66070a_PRODUCTION) {
		_1aabd5145_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1db6601bb_RC))) {
		_1aabd5145_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1db6604a7_SAFETY))) {
		_1aabd5145_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aabd5145_write(_self_, jule::Str("\n\n#include \"", 12));
	_1aabd5145_write(_self_, _1dd69b029_PATH_API);
	_1aabd5145_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1aabcc77a_links(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bb8c85b9:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _18316_used = *it;
			{
				{
					
					if ((!(_18316_used.get()._field_cpp_linked))) {
						_case_begin_1bb8c93cd:;
						{
							goto _iter_next_1bb8c85b9;
						}
					}
					else if (_1dd64e098_is_std_header_path(_18316_used.get()._field_path)) {
						_case_begin_1bb8c909d:;
						{
							_1aabd5145_write(_self_, jule::Str("#include ", 9));
							_1aabd5145_write(_self_, _18316_used.get()._field_path);
							_1aabd5145_write(_self_, jule::Str("\n", 1));
						}
					}
					else {
						_case_begin_1bb8c9037:;
						{
							_1aabd5145_write(_self_, jule::Str("#include \"", 10));
							_1aabd5145_write(_self_, _18316_used.get()._field_path);
							_1aabd5145_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1bb8c8e6b:;
				};
			}
			_iter_next_1bb8c85b9:;
			++it;
			goto _iter_begin_1bb8c85b9;
		}
		_iter_end_1bb8c85b9:;
	};
}



inline void _1aabe8532_prepare_structures(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1bb8caa50:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _20021_s = *it;
			{
				if ((_20021_s.get()._field_token != nullptr)) {
					_1aac18079_prepare_structure(_20021_s);
				};
			}
			_iter_next_1bb8caa50:;
			++it;
			goto _iter_begin_1bb8caa50;
		}
		_iter_end_1bb8caa50:;
	};
}



inline void _1aac13bac_iter_packages(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)> _20733_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bb8ccbc8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _20821_used = *it;
			{
				if ((!(_20821_used.get()._field_cpp_linked))) {
					_20733_f(_20821_used.get()._field_package);
				};
			}
			_iter_next_1bb8ccbc8:;
			++it;
			goto _iter_begin_1bb8ccbc8;
		}
		_iter_end_1bb8ccbc8:;
	};
	_20733_f(_self_.get()._field_ir.get()._field_main);
}



inline void _1aac13cde_build_trait_map(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _21736_pkg) mutable -> void {
		_1aac17d26_iter_files(_21736_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _21837_file) mutable -> void {
			{
				auto &expr = _21837_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1bb8d1072:;
				if (it != expr.end()) {
					jule::Ptr<_1e0567d06_Trait> _21929_t = *it;
					{
						if ((_21929_t.get()._field_token == nullptr)) {
							return;;
						};
						if ((_21929_t.get()._field_implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1aabca7ab_TraitHash>(_1aabca7ab_TraitHash{._field_t=_21929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1bb8d1072;
						};
						jule::I32 _23129_i = 0LL;;
						{
							auto &expr = _21929_t.get()._field_implemented;
							auto it = expr.begin();
							_iter_begin_1bb8d2c33:;
							if (it != expr.end()) {
								jule::Ptr<_1e010261b_Struct> _23233_s = *it;
								{
									{
										auto &expr = _23233_s.get()._field_instances;
										auto it = expr.begin();
										_iter_begin_1bb8d344d:;
										if (it != expr.end()) {
											jule::Ptr<_1e010a05d_StructIns> _23337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1aabca7ab_TraitHash>(_1aabca7ab_TraitHash{._field_t=_21929_t, ._field_s=_23337_ins, ._field_i=_23129_i}));;
												(_23129_i)++;
											}
											_iter_next_1bb8d344d:;
											++it;
											goto _iter_begin_1bb8d344d;
										}
										_iter_end_1bb8d344d:;
									};
								}
								_iter_next_1bb8d2c33:;
								++it;
								goto _iter_begin_1bb8d2c33;
							}
							_iter_end_1bb8d2c33:;
						};
					}
					_iter_next_1bb8d1072:;
					++it;
					goto _iter_begin_1bb8d1072;
				}
				_iter_end_1bb8d1072:;
			};
		}));
	}));
}



inline void _1aac13e21_trait_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _24836_pkg) mutable -> void {
		_1aac17d26_iter_files(_24836_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _24937_file) mutable -> void {
			{
				auto &expr = _24937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1bb8d58a1:;
				if (it != expr.end()) {
					jule::Ptr<_1e0567d06_Trait> _25029_t = *it;
					{
						if ((_25029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1aabd6762_indent(_self_);
						_1aabd5145_write(_self_, jule::Str("struct ", 7));
						_1aabd5145_write(_self_, static__1aaba06a4_trait_decl(_25029_t));
						_1aabd5145_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1bb8d58a1:;
					++it;
					goto _iter_begin_1bb8d58a1;
				}
				_iter_end_1bb8d58a1:;
			};
		}));
	}));
}



inline void _1aac14053_structure_plain_decl(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010261b_Struct>& _26345_s) {
	{
		auto &expr = _26345_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb8d5296:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _26421_ins = *it;
			{
				_1aabd5145_write(_self_, jule::Str("struct ", 7));
				_1aabd5145_write(_self_, static__1aaba0e8a_structure_ins(_26421_ins));
				_1aabd5145_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bb8d5296:;
			++it;
			goto _iter_begin_1bb8d5296;
		}
		_iter_end_1bb8d5296:;
	};
}



inline void _1aac14185_structure_plain_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1bb8d8de3:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _27221_s = *it;
			{
				if ((_27221_s.get()._field_token != nullptr)) {
					_1aac14053_structure_plain_decl(_self_, _27221_s);
				};
			}
			_iter_next_1bb8d8de3:;
			++it;
			goto _iter_begin_1bb8d8de3;
		}
		_iter_end_1bb8d8de3:;
	};
}



inline void _1aac142b7_field_decl(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e01087ba_FieldIns>& _27935_f) {
	_1aabd5145_write(_self_, static__1aac23c44_kind(_27935_f.get()._field_kind));
	_1aabd5145_write(_self_, jule::Str(" ", 1));
	_1aabd5145_write(_self_, static__1aaba1232_field(_27935_f.get()._field_decl));
	_1aabd5145_write(_self_, jule::Str(" = ", 3));
	if ((_27935_f.get()._field_default == nullptr)) {
		_1aab98746_init_expr(_self_.get()._field_ec, _27935_f.get()._field_kind);
	} else {
		_1aab9824b_expr(_self_.get()._field_ec, jule::Any(_27935_f.get()._field_default.get()._field_model));
	};
	_1aabd5145_write(_self_, jule::Str(";", 1));
}



inline void _1aac143e9_structure_destructor(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _29445_s) {
	;
	jule::Ptr<_1e0144581_Fn> _29613_dispose_method = _1e011ae70_find_method(_29445_s.ptr(), jule::Str("dispose", 7),false);;
	jule::Bool _29717_disposed = static__1e0e37890_dispose(_29613_dispose_method);;
	if ((!(_29717_disposed))) {
		return;;
	};
	_1aabd5145_write(_self_, jule::Str("~", 1));
	_1aabd5145_write(_self_, static__1aaba0e8a_structure_ins(_29445_s));
	_1aabd5145_write(_self_, jule::Str("(void) { ", 9));
	_1aabd5145_write(_self_, static__1aaba0165_func(_29613_dispose_method));
	_1aabd5145_write(_self_, jule::Str("(this); }", 9));
}



inline void _1aac1452b_structure_derive_defs_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _30948_s) {
	if (_1e010a976_is_derives(_30948_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, static__1aab9aca9_clone_func_decl(_30948_s.get()._field_decl));
		_1aabd5145_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1aac1465d_structure_operator_eq(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Str& _31742_ident, jule::Ptr<_1e010a05d_StructIns>& _31759_s) {
	if ((_31759_s.get()._field_operators._field_eq != nullptr)) {
		_1aac148c2_structure_operator(_self_, _31742_ident,_31759_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;;
	};
	_1aabd6762_indent(_self_);
	if (_1ed849827_INLINE) {
		_1aabd5145_write(_self_, jule::Str("inline ", 7));
	};
	_1aabd5145_write(_self_, jule::Str("bool operator==(", 16));
	_1aabd5145_write(_self_, _31742_ident);
	_1aabd5145_write(_self_, jule::Str(" _other) {", 10));
	if ((_31759_s.get()._field_fields.len() > 0LL)) {
		_1aabd582c_add_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("\n", 1));
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("return ", 7));
		_1aabd582c_add_indent(_self_);
		jule::Bool _33721_writed = false;;
		{
			auto &expr = _31759_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1bb8e7495:;
			if (it != expr.end()) {
				jule::Ptr<_1e01087ba_FieldIns> _33825_f = *it;
				{
					jule::Ptr<_1e010a05d_StructIns> _34021_strct = _1ed7801db_strct(_33825_f.get()._field_kind.ptr());;
					if ((((_34021_strct != nullptr) && (_34021_strct.get()._field_decl != nullptr)) && _34021_strct.get()._field_decl.get()._field_cpp_linked)) {
						goto _iter_next_1bb8e7495;
					};
					if (_33721_writed) {
						_1aabd5145_write(_self_, jule::Str(" &&", 3));
					};
					_33721_writed=true;
					_1aabd5145_write(_self_, jule::Str("\n", 1));
					_1aabd6762_indent(_self_);
					_1aabd5145_write(_self_, jule::Str("this->", 6));
					jule::Str _35221_f_ident = static__1aaba1232_field(_33825_f.get()._field_decl);;
					_1aabd5145_write(_self_, _35221_f_ident);
					_1aabd5145_write(_self_, jule::Str(" == _other.", 11));
					_1aabd5145_write(_self_, _35221_f_ident);
				}
				_iter_next_1bb8e7495:;
				++it;
				goto _iter_begin_1bb8e7495;
			}
			_iter_end_1bb8e7495:;
		};
		_1aabd6047_done_indent(_self_);
		if ((!(_33721_writed))) {
			_1aabd5145_write(_self_, jule::Str("true", 4));
		};
		_1aabd5145_write(_self_, jule::Str(";\n", 2));
		_1aabd6047_done_indent(_self_);
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("}", 1));
	} else {
		_1aabd5145_write(_self_, jule::Str(" return true; }", 15));
	};
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aac14790_structure_operator_not_eq(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Str& _37146_ident, jule::Ptr<_1e010a05d_StructIns>& _37163_s) {
	_1aabd6762_indent(_self_);
	if (_1ed849827_INLINE) {
		_1aabd5145_write(_self_, jule::Str("inline ", 7));
	};
	_1aabd5145_write(_self_, jule::Str("bool operator!=(", 16));
	_1aabd5145_write(_self_, _37146_ident);
	_1aabd5145_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1aac148c2_structure_operator(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Str& _38239_ident, jule::Ptr<_1e01457c4_FnIns>& _38256_f, jule::Str _38267_op) {
	if ((_38256_f == nullptr)) {
		return;;
	};
	jule::Bool _38713_unary = (_38256_f.get()._field_params.len() == 1LL);;
	jule::Bool _38813_assignment = _1e0105894_is_void(_38256_f.get()._field_decl.ptr());;
	_1aabd6762_indent(_self_);
	if (_1ed849827_INLINE) {
		_1aabd5145_write(_self_, jule::Str("inline ", 7));
	};
	if (_38813_assignment) {
		_1aabd5145_write(_self_, _38239_ident);
		_1aabd5145_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1ed77dc89_prim(_38256_f.get()._field_result.ptr()) == nullptr)) {
			_1aabd5145_write(_self_, _38239_ident);
		} else {
			_1aabd5145_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1aabd5145_write(_self_, jule::Str(" operator", 9));
	_1aabd5145_write(_self_, _38267_op);
	_1aabd5145_write(_self_, jule::Str("(", 1));
	if ((!(_38713_unary))) {
		jule::Ptr<_1e0144938_ParamIns> _41021_p = _38256_f.get()._field_params[1LL];;
		_1aabd5145_write(_self_, static__1aac22e1e_param_ins(_41021_p));
		_1aabd5145_write(_self_, jule::Str(" _other", 7));
	};
	_1aabd5145_write(_self_, jule::Str(") { ", 4));
	if ((!(_38813_assignment))) {
		_1aabd5145_write(_self_, jule::Str("return ", 7));
	};
	_1aabd5145_write(_self_, static__1aaba040c_func_ins(_38256_f));
	if ((!(_38713_unary))) {
		_1aabd5145_write(_self_, jule::Str("(this, _other); ", 16));
		if (_38813_assignment) {
			_1aabd5145_write(_self_, jule::Str("return *this; ", 14));
		};
		_1aabd5145_write(_self_, jule::Str("}", 1));
	} else {
		_1aabd5145_write(_self_, jule::Str("(this); }", 9));
	};
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aac14a04_structure_operators(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _43144_s) {
	jule::Str _43213_ident = static__1aaba0e8a_structure_ins(_43144_s);;
	_1aac1465d_structure_operator_eq(_self_, _43213_ident,_43144_s);
	_1aac14790_structure_operator_not_eq(_self_, _43213_ident,_43144_s);
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1aac148c2_structure_operator(_self_, _43213_ident,_43144_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
}



inline void _1aac14b36_structure_ins_decl(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _47043_s) {
	if ((_47043_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _47043_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1bb9194a6:;
			if (it != expr.end()) {
				jule::Ptr<_1e0144581_Fn> _47225_m = *it;
				{
					_1aac15241_func_decl(_self_, _47225_m,false);
				}
				_iter_next_1bb9194a6:;
				++it;
				goto _iter_begin_1bb9194a6;
			}
			_iter_end_1bb9194a6:;
		};
	};
	_1aabd5145_write(_self_, jule::Str("struct ", 7));
	jule::Str _47813_out_ident = static__1aaba0e8a_structure_ins(_47043_s);;
	_1aabd5145_write(_self_, _47813_out_ident);
	_1aabd5145_write(_self_, jule::Str(" {\n", 3));
	_1aabd582c_add_indent(_self_);
	{
		auto &expr = _47043_s.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1bb91b453:;
		if (it != expr.end()) {
			jule::Ptr<_1e01087ba_FieldIns> _48421_f = *it;
			{
				_1aabd6762_indent(_self_);
				_1aac142b7_field_decl(_self_, _48421_f);
				_1aabd5145_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1bb91b453:;
			++it;
			goto _iter_begin_1bb91b453;
		}
		_iter_end_1bb91b453:;
	};
	_1aabd6762_indent(_self_);
	_1aac143e9_structure_destructor(_self_, _47043_s);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aabd6762_indent(_self_);
	_1aabd5145_write(_self_, _47813_out_ident);
	_1aabd5145_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1aac1452b_structure_derive_defs_decls(_self_, _47043_s);
	_1aac14a04_structure_operators(_self_, _47043_s);
	_1aabd5145_write(_self_, jule::Str("\n", 1));
	_1aabd6047_done_indent(_self_);
	_1aabd6762_indent(_self_);
	_1aabd5145_write(_self_, jule::Str("};", 2));
}



inline void _1aac14c68_structure_decl(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010261b_Struct>& _50939_s) {
	{
		auto &expr = _50939_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb920be9:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _51021_ins = *it;
			{
				_1aac14b36_structure_ins_decl(_self_, _51021_ins);
			}
			_iter_next_1bb920be9:;
			++it;
			goto _iter_begin_1bb920be9;
		}
		_iter_end_1bb920be9:;
	};
}



inline void _1aac14d9a_structure_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1bb9218dc:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _51621_s = *it;
			{
				if ((_51621_s.get()._field_token != nullptr)) {
					_1aac14c68_structure_decl(_self_, _51621_s);
					_1aabd5145_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1bb9218dc:;
			++it;
			goto _iter_begin_1bb9218dc;
		}
		_iter_end_1bb9218dc:;
	};
}



inline void _1aac14ecc_params_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>& _52437_params) {
	if ((_52437_params.len() == 0LL)) {
		_1aabd5145_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aabd5145_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _52437_params;
		auto it = expr.begin();
		_iter_begin_1bb923b53:;
		if (it != expr.end()) {
			jule::I32 _53114_i = it - expr.begin();
			jule::Ptr<_1e0144938_ParamIns> _53121_p = *it;
			{
				_1aabd5145_write(_self_, static__1aac22e1e_param_ins(_53121_p));
				if (((_52437_params.len() - _53114_i) > 1LL)) {
					_1aabd5145_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bb923b53:;
			++it;
			_53114_i++;
			goto _iter_begin_1bb923b53;
		}
		_iter_end_1bb923b53:;
	};
	_1aabd5145_write(_self_, jule::Str(")", 1));
}



inline void _1aac1510e_func_head(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e01457c4_FnIns>& _54134_f, jule::Bool _54145_ptr) {
	if ((((!(_54145_ptr)) && _1ed849827_INLINE) && (!(_1e00a944c_is_entry_point(_54134_f.get()._field_decl.ptr()))))) {
		_1aabd5145_write(_self_, jule::Str("inline ", 7));
	};
	_1aabd5145_write(_self_, static__1aac2345d_func_ins_result(_54134_f));
	if (_54145_ptr) {
		_1aabd5145_write(_self_, jule::Str("(*", 2));
		_1aabd5145_write(_self_, static__1aaba040c_func_ins(_54134_f));
		_1aabd5145_write(_self_, jule::Str(")", 1));
	} else {
		_1aabd5145_write(_self_, jule::Str(" ", 1));
		_1aabd5145_write(_self_, static__1aaba040c_func_ins(_54134_f));
	};
}



inline void _1aac15241_func_decl(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0144581_Fn>& _55634_f, jule::Bool _55642_ptr) {
	{
		auto &expr = _55634_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb92962b:;
		if (it != expr.end()) {
			jule::Ptr<_1e01457c4_FnIns> _55721_c = *it;
			{
				_1aabd6762_indent(_self_);
				_1aac1510e_func_head(_self_, _55721_c,_55642_ptr);
				_1aac14ecc_params_decls(_self_, _55721_c.get()._field_params);
				_1aabd5145_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bb92962b:;
			++it;
			goto _iter_begin_1bb92962b;
		}
		_iter_end_1bb92962b:;
	};
}



inline void _1aac15373_func_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _56636_pkg) mutable -> void {
		_1aac17d26_iter_files(_56636_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _56737_file) mutable -> void {
			{
				auto &expr = _56737_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1bb92d058:;
				if (it != expr.end()) {
					jule::Ptr<_1e0144581_Fn> _56829_f = *it;
					{
						if (((!(_56829_f.get()._field_cpp_linked)) && (_56829_f.get()._field_token != nullptr))) {
							_1aac15241_func_decl(_self_, _56829_f,false);
						};
					}
					_iter_next_1bb92d058:;
					++it;
					goto _iter_begin_1bb92d058;
				}
				_iter_end_1bb92d058:;
			};
		}));
	}));
}



inline void _1aac154a5_trait_data_types(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _57836_pkg) mutable -> void {
		_1aac17d26_iter_files(_57836_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _57937_file) mutable -> void {
			{
				auto &expr = _57937_file.get()._field_traits;
				auto it = expr.begin();
				_iter_begin_1bb930e18:;
				if (it != expr.end()) {
					jule::Ptr<_1e0567d06_Trait> _58029_t = *it;
					{
						if ((_58029_t.get()._field_token == nullptr)) {
							return;;
						};
						_1aabd5145_write(_self_, jule::Str("struct ", 7));
						_1aabd5145_write(_self_, static__1aaba06a4_trait_decl(_58029_t));
						_1aabd5145_write(_self_, jule::Str("MptrData", 8));
						_1aabd5145_write(_self_, jule::Str(" {\n", 3));
						_1aabd582c_add_indent(_self_);
						{
							auto &expr = _58029_t.get()._field_methods;
							auto it = expr.begin();
							_iter_begin_1bb93316d:;
							if (it != expr.end()) {
								jule::Ptr<_1e0144581_Fn> _58933_m = *it;
								{
									jule::Ptr<_1e01457c4_FnIns> _59033_ins = _58933_m.get()._field_instances[0LL];;
									jule::Ptr<_1e0144938_ParamIns> _59133_p = _59033_ins.get()._field_params[0LL];;
									_59133_p.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_58029_t, 2)});
									{
										auto expr = _59033_ins.get()._field_params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1bb934c96:;
										if (it != expr.end()) {
											jule::I32 _59530_i = it - expr.begin();
											jule::Ptr<_1e0144938_ParamIns> _59537_ip = *it;
											{
												if (_1dd996bd7_is_anon_ident(_59537_ip.get()._field_decl.get()._field_ident)) {
													_59537_ip.get()._field_decl.get()._field_ident=(jule::Str("_", 1) + _1e0be7188_itoa(_59530_i));
												};
											}
											_iter_next_1bb934c96:;
											++it;
											_59530_i++;
											goto _iter_begin_1bb934c96;
										}
										_iter_end_1bb934c96:;
									};
									if ((!(_1db66070a_PRODUCTION))) {
										_59033_ins.get()._field_params = jule::alloc_for_append(_59033_ins.get()._field_params,1);_59033_ins.get()._field_params.__push(jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_ident=jule::Str("__file", 6)}), ._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1aac1dd93_CustomType>(_1aac1dd93_CustomType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1aac15241_func_decl(_self_, _58933_m,true);
								}
								_iter_next_1bb93316d:;
								++it;
								goto _iter_begin_1bb93316d;
							}
							_iter_end_1bb93316d:;
						};
						_1aabd6047_done_indent(_self_);
						_1aabd6762_indent(_self_);
						_1aabd5145_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1bb930e18:;
					++it;
					goto _iter_begin_1bb930e18;
				}
				_iter_end_1bb930e18:;
			};
		}));
	}));
}



inline void _1aac155d7_param_ins(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0144938_ParamIns>& _62234_p) {
	_1aabd5145_write(_self_, static__1aac22e1e_param_ins(_62234_p));
	_1aabd5145_write(_self_, jule::Str(" ", 1));
	_1aabd5145_write(_self_, static__1aaba094b_param(_62234_p.get()._field_decl));
}



inline void _1aac15719_params_ins(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1e0144938_ParamIns>>& _62835_params) {
	if ((_62835_params.len() == 0LL)) {
		_1aabd5145_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1aabd5145_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _62835_params;
		auto it = expr.begin();
		_iter_begin_1bb939086:;
		if (it != expr.end()) {
			jule::I32 _63414_i = it - expr.begin();
			jule::Ptr<_1e0144938_ParamIns> _63421_p = *it;
			{
				_1aac155d7_param_ins(_self_, _63421_p);
				if (((_62835_params.len() - _63414_i) > 1LL)) {
					_1aabd5145_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1bb939086:;
			++it;
			_63414_i++;
			goto _iter_begin_1bb939086;
		}
		_iter_end_1bb939086:;
	};
	_1aabd5145_write(_self_, jule::Str(")", 1));
}



inline void _1aac1584b_var_init_expr(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0e366e6_Var>& _64338_v, jule::Fn<void(void)> _64347_init) {
	if (_64338_v.get()._field_statically) {
		_1aabd5145_write(_self_, jule::Str("static ", 7));
	};
	_1aabd5145_write(_self_, static__1aac23c44_kind(_64338_v.get()._field_kind.get()._field_kind));
	_1aabd5145_write(_self_, jule::Str(" ", 1));
	if (_64338_v.get()._field_reference) {
		_1aabd5145_write(_self_, jule::Str("&", 1));
	};
	_1aabd5145_write(_self_, static__1aaba14c9_var(_64338_v));
	if ((_64347_init != nullptr)) {
		_1aabd5145_write(_self_, jule::Str(" = ", 3));
		_64347_init();
	};
	_1aabd5145_write(_self_, jule::Str(";", 1));
}



inline void _1aac1597d_var(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0e366e6_Var> _66127_v) {
	if (_1dd996940_is_ignore_ident(_66127_v.get()._field_ident)) {
		return;;
	};
	if (((_66127_v.get()._field_value != nullptr) && (_66127_v.get()._field_value.get()._field_expr != nullptr))) {
		if ((_66127_v.get()._field_value.get()._field_data.get()._field_model != nullptr)) {
			_1aac1584b_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1aab984c1_val(_self_.get()._field_ec, _66127_v.get()._field_value);
			}));
			return;;
		};
		_1aac1584b_var_init_expr(_self_, _66127_v,nullptr);
		return;;
	};
	_1aac1584b_var_init_expr(_self_, _66127_v,jule::Fn<void(void)>([=](void) mutable -> void {
		_1aab98746_init_expr(_self_.get()._field_ec, _66127_v.get()._field_kind.get()._field_kind);
	}));
}



inline void _1aac15ab0_func(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0144581_Fn>& _67629_f) {
	{
		auto &expr = _67629_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb9445e1:;
		if (it != expr.end()) {
			jule::Ptr<_1e01457c4_FnIns> _67721_ins = *it;
			{
				_1aac1510e_func_head(_self_, _67721_ins,false);
				_1aac15719_params_ins(_self_, _67721_ins.get()._field_params);
				_1aabd5145_write(_self_, jule::Str(" ", 1));
				_1aab8a590_func_scope(_self_.get()._field_sc, _67721_ins);
				if ((_67721_ins.get()._field_scope != nullptr)) {
					_1aabd5145_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bb9445e1:;
			++it;
			goto _iter_begin_1bb9445e1;
		}
		_iter_end_1bb9445e1:;
	};
}



inline void _1aac15be2_trait_wrappers(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bb944998:;
		if (it != expr.end()) {
			jule::Ptr<_1aabca7ab_TraitHash> _68921_hash = *it;
			{
				{
					auto &expr = _68921_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1bb947182:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _69025_m = *it;
						{
							jule::Str _69121_ident = _69025_m.get()._field_ident;;
							_69025_m.get()._field_instances[0LL].get()._field_scope=nullptr;
							_69025_m.get()._field_ident=((_69121_ident + jule::Str("_", 1)) + _1e0be7188_itoa(_68921_hash.get()._field_i));
							_1aac15ab0_func(_self_, _69025_m);
							_69025_m.get()._field_ident=_69121_ident;
							if ((_68921_hash.get()._field_s == nullptr)) {
								if (_1db66070a_PRODUCTION) {
									_1aabd5145_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1aabd5145_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1bb947182;
							};
							jule::Bool _70721_ptr = (!(_1e01202c6_is_ref(_69025_m.get()._field_params[0LL].ptr())));;
							jule::Ptr<_1e0144581_Fn> _70925_sm = _1e011ae70_find_method(_68921_hash.get()._field_s.ptr(), _69025_m.get()._field_ident,false);;
							if (((_70925_sm == nullptr) || (_70925_sm.get()._field_instances.len() == 0LL))) {
								goto _iter_next_1bb947182;
							};
							_1aabd582c_add_indent(_self_);
							_1aabd5145_write(_self_, jule::Str("{\n", 2));
							_1aabd6762_indent(_self_);
							if ((!(_1e0105894_is_void(_70925_sm.ptr())))) {
								_1aabd5145_write(_self_, jule::Str("return ", 7));
							};
							_1aabd5145_write(_self_, static__1aaba0165_func(_70925_sm));
							_1aabd5145_write(_self_, jule::Str("(", 1));
							if (_70721_ptr) {
								_1aabd5145_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1aabd5145_write(_self_, static__1aac22638_structure_ins(_68921_hash.get()._field_s));
								_1aabd5145_write(_self_, jule::Str(">(", 2));
								if ((!(_1db66070a_PRODUCTION))) {
									_1aabd5145_write(_self_, jule::Str("_00___file", 10));
								};
								_1aabd5145_write(_self_, jule::Str(")", 1));
							} else {
								_1aabd5145_write(_self_, jule::Str("_self_.data.as<", 15));
								_1aabd5145_write(_self_, static__1aac22391_structure(_70925_sm.get()._field_owner));
								_1aabd5145_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _69025_m.get()._field_params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1bb95108c:;
								if (it != expr.end()) {
									jule::Ptr<_1e0144394_Param> _73524_mp = *it;
									{
										_1aabd5145_write(_self_, jule::Str(", ", 2));
										_1aabd5145_write(_self_, static__1aaba094b_param(_73524_mp));
									}
									_iter_next_1bb95108c:;
									++it;
									goto _iter_begin_1bb95108c;
								}
								_iter_end_1bb95108c:;
							};
							_1aabd5145_write(_self_, jule::Str(");\n}\n", 5));
							_1aabd6047_done_indent(_self_);
						}
						_iter_next_1bb947182:;
						++it;
						goto _iter_begin_1bb947182;
					}
					_iter_end_1bb947182:;
				};
			}
			_iter_next_1bb944998:;
			++it;
			goto _iter_begin_1bb944998;
		}
		_iter_end_1bb944998:;
	};
}



inline void _1aac15d24_trait_datas(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	jule::Ptr<_1e0567d06_Trait> _74617_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1bb953930:;
		if (it != expr.end()) {
			jule::Ptr<_1aabca7ab_TraitHash> _74721_hash = *it;
			{
				jule::Str _74817_ident = static__1aaba06a4_trait_decl(_74721_hash.get()._field_t);;
				if ((_74721_hash.get()._field_t != _74617_old)) {
					if ((_74617_old != nullptr)) {
						_1aabd6047_done_indent(_self_);
						_1aabd6762_indent(_self_);
						_1aabd5145_write(_self_, jule::Str("};\n", 3));
					};
					_1aabd5145_write(_self_, jule::Str("static ", 7));
					_1aabd5145_write(_self_, _74817_ident);
					_1aabd5145_write(_self_, jule::Str("MptrData ", 9));
					_1aabd5145_write(_self_, _74817_ident);
					_1aabd5145_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_74617_old=_74721_hash.get()._field_t;
					_1aabd582c_add_indent(_self_);
				};
				_1aabd6762_indent(_self_);
				_1aabd5145_write(_self_, jule::Str("{\n", 2));
				_1aabd582c_add_indent(_self_);
				{
					auto &expr = _74721_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1bb957d41:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _76625_m = *it;
						{
							jule::Str _76721_m_ident = static__1aaba0165_func(_76625_m);;
							_1aabd6762_indent(_self_);
							_1aabd5145_write(_self_, jule::Str(".", 1));
							_1aabd5145_write(_self_, _76721_m_ident);
							_1aabd5145_write(_self_, jule::Str("=", 1));
							_1aabd5145_write(_self_, _76721_m_ident);
							_1aabd5145_write(_self_, jule::Str("_", 1));
							_1aabd5145_write(_self_, _1e0be7188_itoa(_74721_hash.get()._field_i));
							_1aabd5145_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1bb957d41:;
						++it;
						goto _iter_begin_1bb957d41;
					}
					_iter_end_1bb957d41:;
				};
				_1aabd6047_done_indent(_self_);
				_1aabd6762_indent(_self_);
				_1aabd5145_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1bb953930:;
			++it;
			goto _iter_begin_1bb953930;
		}
		_iter_end_1bb953930:;
	};
	if ((_74617_old != nullptr)) {
		_1aabd6047_done_indent(_self_);
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1aac15e56_globals(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_globals;
		auto it = expr.begin();
		_iter_begin_1bb95c6b4:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e366e6_Var> _78921_v = *it;
			{
				_1aabd5145_write(_self_, static__1aac23c44_kind(_78921_v.get()._field_kind.get()._field_kind));
				_1aabd5145_write(_self_, jule::Str(" ", 1));
				if (_78921_v.get()._field_reference) {
					_1aabd5145_write(_self_, jule::Str("&", 1));
				};
				_1aabd5145_write(_self_, static__1aaba14c9_var(_78921_v));
				_1aabd5145_write(_self_, jule::Str(" = ", 3));
				_1aab984c1_val(_self_.get()._field_ec, _78921_v.get()._field_value);
				_1aabd5145_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1bb95c6b4:;
			++it;
			goto _iter_begin_1bb95c6b4;
		}
		_iter_end_1bb95c6b4:;
	};
}



inline void _1aac16088_decls(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13e21_trait_decls(_self_);
	_1aac14185_structure_plain_decls(_self_);
	_1aac14d9a_structure_decls(_self_);
	_1aac15373_func_decls(_self_);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac154a5_trait_data_types(_self_);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac15be2_trait_wrappers(_self_);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac15d24_trait_datas(_self_);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac15e56_globals(_self_);
}



inline void _1aac161ba_structure_methods(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _81742_s) {
	{
		auto &expr = _81742_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1bb963c70:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _81821_f = *it;
			{
				_1aac15ab0_func(_self_, _81821_f);
				_1aabd5145_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bb963c70:;
			++it;
			goto _iter_begin_1bb963c70;
		}
		_iter_end_1bb963c70:;
	};
}



inline void _1aac163a7_structure_derive_defs(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _82446_s) {
	if (_1e010a976_is_derives(_82446_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_1aabd5145_write(_self_, static__1aab9b051_clone_func_def(_82446_s.get()._field_decl));
		_1aabd5145_write(_self_, jule::Str("{\n", 2));
		_1aabd582c_add_indent(_self_);
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, static__1aac22638_structure_ins(_82446_s));
		_1aabd5145_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _82446_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1bb966e0a:;
			if (it != expr.end()) {
				jule::Ptr<_1e01087ba_FieldIns> _83220_f = *it;
				{
					jule::Str _83321_ident = static__1aaba1232_field(_83220_f.get()._field_decl);;
					_1aabd6762_indent(_self_);
					_1aabd5145_write(_self_, jule::Str("clone.", 6));
					_1aabd5145_write(_self_, _83321_ident);
					_1aabd5145_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1aabd5145_write(_self_, _83321_ident);
					_1aabd5145_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1bb966e0a:;
				++it;
				goto _iter_begin_1bb966e0a;
			}
			_iter_end_1bb966e0a:;
		};
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("return clone;\n", 14));
		_1aabd6047_done_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("}", 1));
	};
}



inline void _1aac1662c_structure_ostream(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _84842_s) {
	_1aabd6762_indent(_self_);
	_1aabd5145_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1aabd5145_write(_self_, static__1aaba0e8a_structure_ins(_84842_s));
	_1aabd5145_write(_self_, jule::Str(" _Src) {\n", 9));
	_1aabd582c_add_indent(_self_);
	_1aabd6762_indent(_self_);
	jule::Ptr<_1e0144581_Fn> _85617_fts = _1e011ae70_find_method(_84842_s.ptr(), jule::Str("to_str", 6),false);;
	if (static__1e0e37b37_to_str(_85617_fts)) {
		_1aabd5145_write(_self_, jule::Str("_Stream << ", 11));
		_1aabd5145_write(_self_, static__1aaba0165_func(_85617_fts));
		_1aabd5145_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1aabd5145_write(_self_, jule::Str("_Stream << \"", 12));
		_1aabd5145_write(_self_, _84842_s.get()._field_decl.get()._field_ident);
		_1aabd5145_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _84842_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1bb970397:;
			if (it != expr.end()) {
				jule::I32 _86618_i = it - expr.begin();
				jule::Ptr<_1e01087ba_FieldIns> _86625_f = *it;
				{
					_1aabd6762_indent(_self_);
					_1aabd5145_write(_self_, jule::Str("_Stream << \"", 12));
					_1aabd5145_write(_self_, _86625_f.get()._field_decl.get()._field_ident);
					_1aabd5145_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1e010a05d_StructIns> _87321_strct = _1ed7801db_strct(_86625_f.get()._field_kind.ptr());;
					if ((((_87321_strct != nullptr) && (_87321_strct.get()._field_decl != nullptr)) && _87321_strct.get()._field_decl.get()._field_cpp_linked)) {
						_1aabd5145_write(_self_, jule::Str(" cpp.", 5));
						_1aabd5145_write(_self_, static__1aaba1232_field(_86625_f.get()._field_decl));
						_1aabd5145_write(_self_, jule::Str("\"", 1));
					} else {
						_1aabd5145_write(_self_, jule::Str("\" << _Src.", 10));
						_1aabd5145_write(_self_, static__1aaba1232_field(_86625_f.get()._field_decl));
					};
					if (((_86618_i + 1LL) < _84842_s.get()._field_fields.len())) {
						_1aabd5145_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1aabd5145_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1bb970397:;
				++it;
				_86618_i++;
				goto _iter_begin_1bb970397;
			}
			_iter_end_1bb970397:;
		};
		_1aabd6762_indent(_self_);
		_1aabd5145_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1aabd6762_indent(_self_);
	_1aabd5145_write(_self_, jule::Str("return _Stream;\n", 16));
	_1aabd6047_done_indent(_self_);
	_1aabd5145_write(_self_, jule::Str("}", 1));
}



inline void _1aac168a2_structure_ins(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010a05d_StructIns>& _89938_s) {
	_1aac161ba_structure_methods(_self_, _89938_s);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac163a7_structure_derive_defs(_self_, _89938_s);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
	_1aac1662c_structure_ostream(_self_, _89938_s);
}



inline void _1aac16b27_structure(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e010261b_Struct>& _90734_s) {
	{
		auto &expr = _90734_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb978e83:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _90821_ins = *it;
			{
				_1aac168a2_structure_ins(_self_, _90821_ins);
				_1aabd5145_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1bb978e83:;
			++it;
			goto _iter_begin_1bb978e83;
		}
		_iter_end_1bb978e83:;
	};
}



inline void _1aac16d03_structures(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1bb97a0e9:;
		if (it != expr.end()) {
			jule::Ptr<_1e010261b_Struct> _91521_s = *it;
			{
				if ((_91521_s.get()._field_token != nullptr)) {
					_1aac16b27_structure(_self_, _91521_s);
					_1aabd5145_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1bb97a0e9:;
			++it;
			goto _iter_begin_1bb97a0e9;
		}
		_iter_end_1bb97a0e9:;
	};
}



inline void _1aac16ece_funcs(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _92436_pkg) mutable -> void {
		_1aac17d26_iter_files(_92436_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _92537_file) mutable -> void {
			{
				auto &expr = _92537_file.get()._field_funcs;
				auto it = expr.begin();
				_iter_begin_1bb97d52b:;
				if (it != expr.end()) {
					jule::Ptr<_1e0144581_Fn> _92629_f = *it;
					{
						if (((!(_1db65ee68_TEST)) && _1aac26164_has_directive(_92629_f.get()._field_directives,jule::Str("test", 4)))) {
							goto _iter_next_1bb97d52b;
						};
						if (((!(_92629_f.get()._field_cpp_linked)) && (_92629_f.get()._field_token != nullptr))) {
							_1aac15ab0_func(_self_, _92629_f);
							_1aabd5145_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1bb97d52b:;
					++it;
					goto _iter_begin_1bb97d52b;
				}
				_iter_end_1bb97d52b:;
			};
		}));
	}));
}



inline void _1aac17254_push_init(jule::Ptr<_1aabca998_ObjectCoder> _self_, jule::Ptr<_1e0e16253_Package>& _93934_pkg) {
	_1aac17d26_iter_files(_93934_pkg,jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)>([=](jule::Ptr<_1e0e77eeb_SymbolTable>& _94033_file) mutable -> void {
		{
			auto &expr = _94033_file.get()._field_funcs;
			auto it = expr.begin();
			_iter_begin_1bb981199:;
			if (it != expr.end()) {
				jule::Ptr<_1e0144581_Fn> _94120_f = *it;
				{
					if ((_94120_f.get()._field_ident == jule::Str("init", 4))) {
						_1aabd6762_indent(_self_);
						_1aabd5145_write(_self_, static__1aaba0165_func(_94120_f));
						_1aabd5145_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1bb981199:;
				++it;
				goto _iter_begin_1bb981199;
			}
			_iter_end_1bb981199:;
		};
	}));
}



inline void _1aac17430_init_caller(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aabd5145_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1aabd582c_add_indent(_self_);
	_1aac13bac_iter_packages(_self_, jule::Fn<void(jule::Ptr<_1e0e16253_Package>&)>([=](jule::Ptr<_1e0e16253_Package>& _95436_pkg) mutable -> void {
		_1aac17254_push_init(_self_, _95436_pkg);
	}));
	_1aabd6047_done_indent(_self_);
	_1aabd5145_write(_self_, jule::Str("\n}", 2));
}



inline void _1aac1760b_end(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aabd5145_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1db65ee68_TEST) {
		_1aabd5145_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1aabd5145_write(_self_, jule::Str("entry_point();", 14));
	};
	_1aabd5145_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1aac177d7_serialize_head(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aabe8532_prepare_structures(_self_);
	_1aac13cde_build_trait_map(_self_);
	_1aabd7ad7_head(_self_);
	_1aabcc77a_links(_self_);
	_1aabd5145_write(_self_, jule::Str("\n", 1));
	_1aac16088_decls(_self_);
	_1aabd5145_write(_self_, jule::Str("\n", 1));
	_1aac16d03_structures(_self_);
	_1aac16ece_funcs(_self_);
	_1aac17430_init_caller(_self_);
	_1aabd5145_write(_self_, jule::Str("\n\n", 2));
}



inline void _1aac179b3_serialize(jule::Ptr<_1aabca998_ObjectCoder> _self_) {
	_1aac177d7_serialize_head(_self_);
	_1aac1760b_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1aabca998_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "obj:" << _Src._field_obj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1bb9d7db0_parse_integer(_1aac5954e_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)> _19040_parser) {
	jule::I64 _19084_x = jule::I64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1bb9dcb62:;
			{
				_19084_x = 0LL;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1bb9dc832:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1bb9dc07e:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1bb9dc0e5:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1bb9dc15b:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1bb9dc018:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1bb9dbe4c:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1bb9e15a0_parse_integer(_1aac5954e_ArgParser* _self_, jule::Str& _19032_s, jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)> _19040_parser) {
	jule::U64 _19084_x = jule::U64();
	jule::Bool _19090_ok = jule::Bool();
	{
		
		if (_19032_s.empty()) {
			_case_begin_1bb9e62ec:;
			{
				_19084_x = 0LLU;
				_19090_ok = false;
				return std::make_tuple(_19084_x,_19090_ok);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0x", 2))) {
			_case_begin_1bb9e5ebc:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),16LL);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0b", 2))) {
			_case_begin_1bb9e5719:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),2LL);
			}
		}
		else if (_1dd588048_has_prefix(_19032_s,jule::Str("0o", 2))) {
			_case_begin_1bb9e5780:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(2LL),8LL);
			}
		}
		else if ((_19032_s[0LL] == '0')) {
			_case_begin_1bb9e57e6:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1bb9e56a3:;
			{
				std::tie(_19084_x,_19090_ok) = _19040_parser(_19032_s,10LL);
			}
		}
		_match_end_1bb9e55d7:;
	};
	return std::make_tuple(_19084_x,_19090_ok);
}



inline jule::Str _1aac59d13_get_data(_1aac5954e_ArgParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1aac5a088_process_flag(_1aac5954e_ArgParser* _self_, jule::Trait<_1aac55825_CommonFlag>& _21736_flag) {
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bb9c2196_Flag>>()) {
			_case_begin_1bb9d5176:;
			{
				jule::Ptr<_1bb9c2196_Flag> _22021_bf = _21736_flag.operator jule::Ptr<_1bb9c2196_Flag>();;
				(*(_22021_bf.get()._field__data))=(!(_22021_bf.get()._field__default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1bb9d4bd1:;
	};
	jule::Str _22513_data = _1aac59d13_get_data(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1aac55825_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aac5534c_name(_21736_flag)) + jule::Str(": expression missing", 20)));
	};
	{
		auto &_match_expr{ _21736_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1bb9b65b9_Flag>>()) {
			_case_begin_1bb9d7057:;
			{
				jule::Ptr<_1bb9b65b9_Flag> _23221_intf = _21736_flag.operator jule::Ptr<_1bb9b65b9_Flag>();;
				jule::Bool _23333_ok;;
				std::tie((*(_23221_intf.get()._field__data)),_23333_ok) = _1bb9d7db0_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I32)>([=](jule::Str _23372_s, jule::I32 _23380_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1e09b1628_parse_int(_23372_s,_23380_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_23333_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aac55825_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aac5534c_name(_21736_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bb9ba579_Flag>>()) {
			_case_begin_1bb9d70bd:;
			{
				jule::Ptr<_1bb9ba579_Flag> _24021_uintf = _21736_flag.operator jule::Ptr<_1bb9ba579_Flag>();;
				jule::Bool _24134_ok;;
				std::tie((*(_24021_uintf.get()._field__data)),_24134_ok) = _1bb9e15a0_parse_integer(&(*_self_), _22513_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I32)>([=](jule::Str _24173_s, jule::I32 _24181_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1e08d7d46_parse_uint(_24173_s,_24181_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_24134_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1aac55825_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aac5534c_name(_21736_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bb9bdadd_Flag>>()) {
			_case_begin_1bb9d7134:;
			{
				jule::Ptr<_1bb9bdadd_Flag> _24821_ff = _21736_flag.operator jule::Ptr<_1bb9bdadd_Flag>();;
				(*(_24821_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1e083d131_parse_float(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1aac55825_CommonFlag_mptr_data[(_21736_flag).type_offset]._1aac5534c_name(_21736_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1bb9c570a_Flag>>()) {
			_case_begin_1bb9d719a:;
			{
				(*(_21736_flag.operator jule::Ptr<_1bb9c570a_Flag>().get()._field__data))=_22513_data;
			}
		}
		_match_end_1bb9d65b7:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aac5a30d_single_dash(_1aac5954e_ArgParser* _self_, jule::Str& _25731_arg) {
	if ((_25731_arg.len() == 1LL)) {
		return jule::VoidExceptional((_25731_arg + jule::Str(": missing argument", 18)));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25731_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1bb9ebc1a:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1aac55825_CommonFlag> _26321_flag = _1aac57904_find_flag_short(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(((_25731_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)));
				};
				({
					auto except = _1aac5a088_process_flag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1bb9ebc1a:;
			++it;
			goto _iter_begin_1bb9ebc1a;
		}
		_iter_end_1bb9ebc1a:;
	};
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aac5a583_double_dash(_1aac5954e_ArgParser* _self_, jule::Str& _27231_arg) {
	if ((_27231_arg.len() == 2LL)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": missing argument", 18)));
	};
	jule::Trait<_1aac55825_CommonFlag> _27617_flag = _1aac575e6_find_flag(&(*_self_)._field_set, _27231_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional((_27231_arg + jule::Str(": flag is not exist", 19)));
	};
	({
		auto except = _1aac5a088_process_flag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aac5a75e_try_arg(_1aac5954e_ArgParser* _self_) {
	jule::Str _28513_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28513_arg[0LL] == '-')) {
		if (((_28513_arg.len() > 1LL) && (_28513_arg[1LL] == '-'))) {
			({
				auto except = _1aac5a583_double_dash(&(*_self_), _28513_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1aac5a30d_single_dash(&(*_self_), _28513_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28513_arg);;
 return jule::VoidExceptional();
}



inline jule::VoidExceptional _1aac5a93a_parse(_1aac5954e_ArgParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1aac5a75e_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1bba04805:;
	}
	_iter_end_1bba04805:;;
 return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1aac5954e_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _1dc4a058d_decode_rune(jule::I32 _6820_r1, jule::I32 _6830_r2) {
	if (((((55296LL <= _6820_r1) && (_6820_r1 < 56320LL)) && (56320LL <= _6830_r2)) && (_6830_r2 < 57344LL))) {
		return static_cast<jule::I32>(((((_6820_r1 - 55296LL) << 10LL) | (_6830_r2 - 56320LL)) + 65536LL));
	};
	return 65533LL;
}



inline std::tuple<jule::I32,jule::I32> _1dc4a0835_encode_rune(jule::I32 _7824_r) {
	jule::I32 _7835_r1 = jule::I32();
	jule::I32 _7845_r2 = jule::I32();
	if (((_7824_r < 65536LL) || (_7824_r > 1114111LL))) {
		_7835_r1 = 65533LL;
		_7845_r2 = 65533LL;
		return std::make_tuple(_7835_r1,_7845_r2);
	};
	_7824_r-=65536LL;
	_7835_r1 = static_cast<jule::I32>((55296LL + ((_7824_r >> 10LL) & 1023LL)));
	_7845_r2 = static_cast<jule::I32>((56320LL + (_7824_r & 1023LL)));
	return std::make_tuple(_7835_r1,_7845_r2);
}



inline jule::Slice<jule::I32> _1dc4a0db8_decode(jule::Slice<jule::U16> _11915_s) {
	jule::Slice<jule::I32> _12013_a = jule::Slice<jule::I32>::alloc(_11915_s.len());;
	jule::I32 _12113_n = 0LL;;
	jule::I32 _12213_i = 0LL;;
	for (; (_12213_i < _11915_s.len()); (_12213_i)++) {
		{
			jule::U16 _12413_r = _11915_s[_12213_i];;
			{
				
				if ((_12413_r < 55296LLU) || (57344LL <= _12413_r)) {
					_case_begin_1aac69c24:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(static_cast<jule::I32>(_12413_r));
					}
				}
				else if (((((_12413_r < 56320LLU) && ((_12213_i + 1LL) < _11915_s.len())) && (56320LL <= _11915_s[(_12213_i + 1LL)])) && (_11915_s[(_12213_i + 1LL)] < 57344LLU))) {
					_case_begin_1aac698e4:;
					{
						_12013_a[_12113_n]=static_cast<jule::I32>(_1dc4a058d_decode_rune(static_cast<jule::I32>(static_cast<jule::I32>(_12413_r)),static_cast<jule::I32>(static_cast<jule::I32>(_11915_s[(_12213_i + 1LL)]))));
						(_12213_i)++;
					}
				}
				else {
					_case_begin_1aac6987d:;
					{
						_12013_a[_12113_n]=65533LL;
					}
				}
				_match_end_1aac69817:;
			};
			(_12113_n)++;
		}
	_iter_next_1aac68daa:;
	}
	_iter_end_1aac68daa:;;
	return _12013_a.slice(0LL,_12113_n);
}



inline jule::Slice<jule::U16> _1dc4a1209_append_rune(jule::Slice<jule::U16> _14924_a, jule::I32 _14934_r) {
	{
		
		if (((0LL <= _14934_r) && (_14934_r < 55296LL)) || ((57344LL <= _14934_r) && (_14934_r < 65536LL))) {
			_case_begin_1aac6ce9c:;
			{
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_14934_r))}));
			}
		}
		else if (((65536LL <= _14934_r) && (_14934_r <= 1114111LL))) {
			_case_begin_1aac6d013:;
			{
				jule::I32 _15614_r1;;
				jule::I32 _15618_r2;;
				std::tie(_15614_r1,_15618_r2) = _1dc4a0835_encode_rune(_14934_r);
				return jule::append(_14924_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(static_cast<jule::U16>(_15614_r1)),static_cast<jule::U16>(static_cast<jule::U16>(_15618_r2))}));
			}
		}
		_match_end_1aac6bd36:;
	};
	return jule::append(_14924_a,jule::Slice<jule::U16>::make({65533LLU}));
}



inline jule::Slice<jule::U16> _1dc48cc73_utf16_from_str(jule::Str _1423_s) {
	;
	jule::Slice<jule::I32> _209_runes = static_cast<jule::Slice<jule::I32>>(_1423_s);;
	jule::Slice<jule::U16> _2113_buff = jule::Slice<jule::U16>::alloc(0LL,_209_runes.len());;
	{
		auto &expr = _209_runes;
		auto it = expr.begin();
		_iter_begin_1aac79074:;
		if (it != expr.end()) {
			jule::I32 &_2212_r = *it;
			{
				if ((_2212_r == 0LL)) {
					goto _iter_end_1aac79074;
				};
				_2113_buff=_1dc4a1209_append_rune(_2113_buff,_2212_r);
			}
			_iter_next_1aac79074:;
			++it;
			goto _iter_begin_1aac79074;
		}
		_iter_end_1aac79074:;
	};
	return _1dc4a1209_append_rune(_2113_buff,0LL);
}



inline jule::Str _1dc495c15_utf16_to_str(jule::Slice<jule::U16> _3421_s) {
	if ((_3421_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _3813_code_page = _3421_s;;
	{
		auto &expr = _3421_s;
		auto it = expr.begin();
		_iter_begin_1aac7ab9c:;
		if (it != expr.end()) {
			jule::I32 _399_i = it - expr.begin();
			jule::U16 &_3912_v = *it;
			{
				if ((_3912_v == 0LLU)) {
					_3813_code_page=_3813_code_page.slice(0LL,_399_i);
					goto _iter_end_1aac7ab9c;
				};
			}
			_iter_next_1aac7ab9c:;
			++it;
			_399_i++;
			goto _iter_begin_1aac7ab9c;
		}
		_iter_end_1aac7ab9c:;
	};
	return static_cast<jule::Str>(_1dc4a0db8_decode(_3813_code_page));
}



inline jule::Str _1dc489cd6_u16_ptr_to_str(jule::U16* _5030_s) {
	if ((_5030_s == nullptr)) {
		return jule::Str();
	};
	jule::Slice<jule::U16> _5513_code_page = nullptr;;
	jule::I32 _5613_i = 0LL;;
	for (; ; (_5613_i)++) {
		{
			jule::U16 _5813_r = _5030_s[_5613_i];;
			if ((_5813_r == 0LLU)) {
				return static_cast<jule::Str>(_1dc4a0db8_decode(_5513_code_page));
			};
			_5513_code_page = jule::alloc_for_append(_5513_code_page,1);_5513_code_page.__push(_5813_r);;
		}
	_iter_next_1aac7b2c9:;
	}
	_iter_end_1aac7b2c9:;;
	return jule::Str();
}



inline jule::I32 _1db82de17_get_last_errno(void) {
	return errno;
}



inline jule::Uintptr _1dc4a20c8_get_std_handle(jule::Uintptr _5423_stdh) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(GetStdHandle(_5423_stdh))));
}



inline jule::I32 _1dc4a26b1_wstat(jule::U16* _5821_path, struct stat* _5837_stat) {
	return static_cast<jule::I32>(wstat(((wchar_t*)(_5821_path)),_5837_stat));
}



inline jule::I32 _1dc4a2a9b__wopen(jule::U16* _6322_path, jule::I32 _6334_flag, jule::I32 _6345_mode) {
	return static_cast<jule::I32>(_wopen(((wchar_t*)((&(_6322_path[0LL])))),_6334_flag,_6345_mode));
}



inline jule::U32 _1dc4a2c99_get_last_error(void) {
	return static_cast<jule::U32>(GetLastError());
}



inline jule::U32 _1dc4a30da_get_current_directory(jule::U32 _7237_bufflen, jule::U16* _7255_buff) {
	return static_cast<jule::U32>(GetCurrentDirectoryW(_7237_bufflen,((wchar_t*)(_7255_buff))));
}



inline jule::Bool _1dc4a3629_delete_file(jule::U16* _8327_path) {
	return DeleteFileW(((wchar_t*)(_8327_path)));
}



inline jule::Bool _1dc4a38c1_create_directory(jule::U16* _8832_path) {
	return CreateDirectoryW(((wchar_t*)(_8832_path)),nullptr);
}



inline jule::Bool _1dc4a3b68_remove_directory(jule::U16* _9332_path) {
	return RemoveDirectoryW(((wchar_t*)(_9332_path)));
}



inline _WDIR* _1dc4a3e10__wopendir(jule::U16* _9825_path) {
	return _wopendir(((wchar_t*)(_9825_path)));
}



inline struct _wdirent* _1dc4a41a7__wreaddir(_WDIR* _10129_dir) {
	return _wreaddir(_10129_dir);
}



inline jule::I32 _1dc4a444e__wclosedir(_WDIR* _10430_dir) {
	return static_cast<jule::I32>(_wclosedir(_10430_dir));
}



inline jule::U32 _1dc4a4b25_get_full_path_name(jule::U16* _10734_path, jule::U32 _10746_bufflen, jule::U16* _1085_buff, jule::U16** _10817_fname) {
	return static_cast<jule::U32>(GetFullPathNameW(((wchar_t*)(_10734_path)),_10746_bufflen,((wchar_t*)(_1085_buff)),((wchar_t**)(_10817_fname))));
}



inline jule::Bool _1dc4a4e66_get_console_mode(jule::Uintptr _11325_handle, jule::I32& _11346_mode) {
	return GetConsoleMode(((HANDLE)(_11325_handle)),((DWORD*)((&(_11346_mode)))));
}



inline jule::Bool _1dc4a52a7_set_console_mode(jule::Uintptr _11825_handle, jule::I32 _11841_mode) {
	return SetConsoleMode(((HANDLE)(_11825_handle)),static_cast<DWORD>(_11841_mode));
}



inline jule::Bool _1dc4a57d5_write_console(jule::Uintptr _12329_handle, jule::U16* _12345_buffer, jule::I32 _12359_to_write, jule::I32& _12410_written, void* _12424_reserved) {
	return WriteConsoleW(((HANDLE)(_12329_handle)),((void*)(_12345_buffer)),static_cast<DWORD>(_12359_to_write),((DWORD*)(_12410_written)),_12424_reserved);
}



inline jule::Bool _1dc4a5d13_read_console(jule::Uintptr _13028_handle, jule::U16* _13048_buffer, jule::I32 _13062_to_read, jule::I32& _13110_readed, void* _13123_input_control) {
	return ReadConsoleW(((HANDLE)(_13028_handle)),((void*)(_13048_buffer)),static_cast<DWORD>(_13062_to_read),((DWORD*)((&(_13110_readed)))),_13123_input_control);
}



inline jule::I32 _1dc4a8167_seek(jule::I32 _2613_handle, jule::I32 _2626_offset, jule::I32 _2639_origin) {
	return static_cast<jule::I32>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I32 _1dc4a8552_read(jule::I32 _3120_handle, void* _3137_buff, jule::U32 _3152_n) {
	return static_cast<jule::I32>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I32 _1dc4a8882_close(jule::I32 _3614_handle) {
	return static_cast<jule::I32>(close(_3614_handle));
}



inline jule::I32 _1dc4a8c6c_write(jule::I32 _3921_handle, void* _3934_buff, jule::U32 _3949_n) {
	return static_cast<jule::I32>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1dc4a8e7b_exit(jule::I32 _4413_code) {
	exit(_4413_code);
}



inline std::tuple<jule::I32,jule::I32> _1dc58b800_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I32 _18242_size = jule::I32();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _1869_p0 = _18220_p[0LL];;
	jule::U8 _1879_x = _1dc58a645_FIRST[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_1dc58abb7_accept_range _1969_accept = _1dc58b019_ACCEPT_RANGES[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18220_p.len() < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2009_b1 = _18220_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2079_b2 = _18220_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	jule::U8 _2149_b3 = _18220_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	};
	_18233_r = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I32> _1dc58bd83_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I32 _27647_size = jule::I32();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I32 _2809_end = _27625_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1dc58d714_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1aace7d6d;
			};
		}
	_iter_next_1aace7d6d:;
	}
	_iter_end_1aace7d6d:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	std::tie(_27638_r,_27647_size) = _1dc58b800_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if (((_28113_start + _27647_size) != _2809_end)) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	};
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::I32 _1dc58c3c2_rune_len(jule::I32 _35217_r) {
	{
		
		if ((_35217_r < 0LL)) {
			_case_begin_1aaceeb33:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 127LL)) {
			_case_begin_1aacee924:;
			{
				return 1LL;
			}
		}
		else if ((_35217_r <= 2047LL)) {
			_case_begin_1aacee98a:;
			{
				return 2LL;
			}
		}
		else if (((55296LL <= _35217_r) && (_35217_r <= 57343LL))) {
			_case_begin_1aaceea12:;
			{
				return -1LL;
			}
		}
		else if ((_35217_r <= 65535LL)) {
			_case_begin_1aacee7ae:;
			{
				return 3LL;
			}
		}
		else if ((_35217_r <= 1114111LL)) {
			_case_begin_1aacee836:;
			{
				return 4LL;
			}
		}
		else {
			_case_begin_1aacee319:;
			{
				return -1LL;
			}
		}
		_match_end_1aaced846:;
	};
}



inline jule::I32 _1dc58c79b_encode_rune(jule::Slice<jule::U8> _37424_p, jule::I32 _37439_r) {
	jule::U32 _3769_i = static_cast<jule::U32>(_37439_r);;
	{
		
		if ((_3769_i <= 127LLU)) {
			_case_begin_1aad04a17:;
			{
				_37424_p[0LL]=static_cast<jule::U8>(static_cast<jule::U8>(_37439_r));
				return 1LL;
			}
		}
		else if ((_3769_i <= 2047LLU)) {
			_case_begin_1aad047e7:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_37439_r >> 6LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 2LL;
			}
		}
		else if ((_3769_i > 1114111LLU) || ((55296LL <= _3769_i) && (_3769_i <= 57343LLU))) {
			_case_begin_1aad0485d:;
			{
				_37439_r=65533LL;
				goto _case_begin_1aad048c4;
			}
		}
		else if ((_3769_i <= 65535LLU)) {
			_case_begin_1aad048c4:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_37439_r >> 12LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 3LL;
			}
		}
		else {
			_case_begin_1aad021eb:;
			{
				_37424_p[0LL]=static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_37439_r >> 18LL))));
				_37424_p[1LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 12LL)) & 63LLU)));
				_37424_p[2LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_37439_r >> 6LL)) & 63LLU)));
				_37424_p[3LL]=static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_37439_r) & 63LLU)));
				return 4LL;
			}
		}
		_match_end_1aad02152:;
	};
}



inline jule::Slice<jule::U8> _1dc58cadc_append_rune(jule::Slice<jule::U8> _40524_p, jule::I32 _40535_r) {
	if ((_40535_r <= 127LL)) {
		return jule::append(_40524_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40535_r))}));
	};
	return _1dc58ce2d_append_rune_non_ascii(_40524_p,_40535_r);
}



inline jule::Slice<jule::U8> _1dc58ce2d_append_rune_non_ascii(jule::Slice<jule::U8> _41230_p, jule::I32 _41245_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41245_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1aad0c646:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41245_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1aad0ae3b:;
			{
				_41245_r=65533LL;
				goto _case_begin_1aad0aea2;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1aad0aea2:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41245_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		else {
			_case_begin_1aad0a424:;
			{
				return jule::append(_41230_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41245_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41245_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41245_r) & 63LLU)))}));
			}
		}
		_match_end_1aad0a37a:;
	};
}



inline jule::I32 _1dc58d46c_rune_count_str(jule::Str _47323_s) {
	jule::I32 _47333_n = jule::I32();
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47323_s.len()); (_47333_n)++) {
		{
			jule::U8 _47617_c = _47323_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1aad16485;
			};
			jule::U8 _48213_x = _1dc58a645_FIRST[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1aad16485;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47323_s.len())) {
				(_47413_i)++;
				goto _iter_next_1aad16485;
			};
			_1dc58abb7_accept_range _49213_accept = _1dc58b019_ACCEPT_RANGES[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47323_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47323_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47323_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1aad16485:;
	}
	_iter_end_1aad16485:;;
	return _47333_n;
}



inline jule::Bool _1dc58d714_rune_start(jule::U8 _51719_b) {
	return ((_51719_b & 192LLU) != 128LLU);
}



inline jule::I32 _1dc6405a7_get_last_os_error_windows(void) {
	jule::U32 _169_err = _1dc4a2c99_get_last_error();;
	{
		auto &_match_expr{ _169_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1aad399b4:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aad39431:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1aad39497:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1aad3950d:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else {
			_case_begin_1aad37929:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		_match_end_1aad366c5:;
	};
}



inline jule::Slice<jule::Str> _1dc6448b9_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1dc644d09_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1dc6456de___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1dc6456de___getwd(void) {
	jule::Array<jule::U16,261> _1513_buff = jule::Array<jule::U16,261>();;
	jule::U32 _169_n = _1dc4a30da_get_current_directory(261LLU,(&(_1513_buff[0LL])));;
	if ((_169_n == 0LLU)) {
		return jule::Exceptional<jule::Str>(_1dc6405a7_get_last_os_error_windows());
	};
	return jule::Exceptional<jule::Str>(jule::Any(),_1dc489cd6_u16_ptr_to_str((&(_1513_buff[0LL]))));
}



inline jule::Slice<jule::U8> _1dc6ce06e_stobs(jule::Str& _1315_s) {
	return _1315_s.fake_slice();
}



inline jule::Bool _1dd5911b6_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1dd5e2921__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	};
	return _1dd5ea1ed_is_excluding_latin(_1dd59906a_LETTER,_7618_r);
}



inline jule::Bool _1dd5e9692_is16(jule::Slice<_1dd5e7a58_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1ab4b53d6:;
			if (it != expr.end()) {
				jule::I32 _19313_i = it - expr.begin();
				{
					_1dd5e7a58_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_lo)) {
							return false;
						};
						if ((_19128_r <= _19417_range->_field_hi)) {
							return ((_19417_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_lo),_19417_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1ab4b53d6:;
				++it;
				_19313_i++;
				goto _iter_begin_1ab4b53d6;
			}
			_iter_end_1ab4b53d6:;
		};
		return false;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1dd5e7a58_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi))) {
					return ((_21213_range->_field_stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_lo),_21213_range->_field_stride) == 0LLU));
				};
				if ((_19128_r < _21213_range->_field_lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1ab4b4d75:;
	}
	_iter_end_1ab4b4d75:;;
	return false;
}



inline jule::Bool _1dd5e99d3_is32(jule::Slice<_1dd5e8020_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1ab4bb51e:;
			if (it != expr.end()) {
				jule::I32 _23013_i = it - expr.begin();
				{
					_1dd5e8020_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_lo)) {
							return false;
						};
						if ((_22828_r <= _23117_range->_field_hi)) {
							return ((_23117_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_lo),_23117_range->_field_stride) == 0LLU));
						};
					};
				}
				_iter_next_1ab4bb51e:;
				++it;
				_23013_i++;
				goto _iter_begin_1ab4bb51e;
			}
			_iter_end_1ab4bb51e:;
		};
		return false;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1dd5e8020_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi))) {
					return ((_24913_range->_field_stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_lo),_24913_range->_field_stride) == 0LLU));
				};
				if ((_22828_r < _24913_range->_field_lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1ab4bb002:;
	}
	_iter_end_1ab4bb002:;;
	return false;
}



inline jule::Bool _1dd5ea1ed_is_excluding_latin(jule::Ptr<_1dd5e8493_RangeTable> _27823_range_tab, jule::I32 _27847_r) {
	{
		jule::Slice<_1dd5e7a58_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;;
		jule::I32 _28213_off = _27823_range_tab.get()._field_latin_offset;;
		if (((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi)))) {
			return _1dd5e9692_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		};
	};
	jule::Slice<_1dd5e8020_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;;
	if (((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo)))) {
		return _1dd5e99d3_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	};
	return false;
}



inline jule::Str _1dd569b73_repeat(jule::Str _1415_s, jule::I32 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	};
	if ((_1415_s.len() > jule::div(2147483647LL,_1427_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:19:9"));;
	};
	jule::Str _2213_ss = jule::Str::alloc((_1415_s.len() * _1427_n));;
	for (; (_1427_n > 0LL); (_1427_n)--) {
		{
			_2213_ss+=_1415_s;
		}
	_iter_next_1ab4db352:;
	}
	_iter_end_1ab4db352:;;
	return _2213_ss;
}



inline jule::Bool _1dd569733__has_prefix(jule::Str& _2917_s, jule::Str& _2926_sub, jule::I32 _2940_start) {
	if (((_2926_sub.len() == 0LL) || ((_2917_s.len() - _2940_start) < _2926_sub.len()))) {
		return false;
	};
	jule::I32 _3413_i = 0LL;;
	for (; (_3413_i < _2926_sub.len()); std::tie(_3413_i,_2940_start) = std::make_tuple(static_cast<jule::I32>((_3413_i + 1LL)),static_cast<jule::I32>((_2940_start + 1LL)))) {
		{
			if ((_2917_s[_2940_start] != _2926_sub[_3413_i])) {
				return false;
			};
		}
	_iter_next_1ab4de366:;
	}
	_iter_end_1ab4de366:;;
	return true;
}



inline jule::Bool _1dd588048_has_prefix(jule::Str _4419_s, jule::Str _4427_sub) {
	return _1dd569733__has_prefix(_4419_s,_4427_sub,0LL);
}



inline jule::Bool _1dc6d9167__has_suffix(jule::Str& _4817_s, jule::Str& _4826_sub, jule::I32 _4840_start) {
	if (((_4826_sub.len() == 0LL) || ((_4817_s.len() - _4840_start) < _4826_sub.len()))) {
		return false;
	};
	_4840_start=static_cast<jule::I32>((_4817_s.len() - _4840_start));
	jule::I32 _5413_i = 0LL;;
	for (; (_5413_i < _4826_sub.len()); (_5413_i)++) {
		{
			if ((_4817_s[((_4840_start - _5413_i) - 1LL)] != _4826_sub[((_4826_sub.len() - _5413_i) - 1LL)])) {
				return false;
			};
		}
	_iter_next_1ab4e0b70:;
	}
	_iter_end_1ab4e0b70:;;
	return true;
}



inline jule::Bool _1dd56a1e5_has_suffix(jule::Str _6419_s, jule::Str _6427_sub) {
	return _1dc6d9167__has_suffix(_6419_s,_6427_sub,0LL);
}



inline jule::I32 _1dd56a723_find_at(jule::Str _7216_s, jule::Str _7224_sub, jule::I32 _7238_i) {
	if ((((_7238_i < 0LL) || (_7216_s.len() < _7224_sub.len())) || (_7224_sub.len() == 0LL))) {
		return -1LL;
	};
	for (; (_7238_i < _7216_s.len()); (_7238_i)++) {
		{
			if (_1dd569733__has_prefix(_7216_s,_7224_sub,_7238_i)) {
				return _7238_i;
			};
		}
	_iter_next_1ab4e4aec:;
	}
	_iter_end_1ab4e4aec:;;
	return -1LL;
}



inline jule::I32 _1dc6dda84_find_last_at(jule::Str _9521_s, jule::Str _9529_sub, jule::I32 _9539_i) {
	jule::I32 _9613_j = ((_9539_i - _9529_sub.len()) + 1LL);;
	if (((((_9529_sub.len() == 0LL) || (_9539_i < 0LL)) || (_9539_i >= _9521_s.len())) || (_9613_j < 0LL))) {
		return -1LL;
	};
	_julec_label_loop:;
	for (; (_9613_j >= 0LL); (_9613_j)--) {
		{
			jule::I32 _10217_k = _9613_j;;
			jule::I32 _10317_z = 0LL;;
			for (; (_10317_z < _9529_sub.len()); std::tie(_10217_k,_10317_z) = std::make_tuple(static_cast<jule::I32>((_10217_k + 1LL)),static_cast<jule::I32>((_10317_z + 1LL)))) {
				{
					if ((_9521_s[_10217_k] != _9529_sub[_10317_z])) {
						goto _iter_next_1ab4e74d4;
					};
				}
			_iter_next_1ab4e9250:;
			}
			_iter_end_1ab4e9250:;;
			return _9613_j;
		}
	_iter_next_1ab4e74d4:;
	}
	_iter_end_1ab4e74d4:;;
	return -1LL;
}



inline jule::I32 _1dc6ddbb6_find_last(jule::Str _11718_s, jule::Str _11726_sub) {
	return static_cast<jule::I32>(_1dc6dda84_find_last_at(_11718_s,_11726_sub,static_cast<jule::I32>((_11718_s.len() - 1LL))));
}



inline jule::I32 _1dd30e044__find_rune(jule::Slice<jule::U8>& _17316_s, jule::I32 _17327_r) {
	jule::I32 _17413_i = 0LL;;
	while ((_17413_i < _17316_s.len())) {
		{
			jule::I32 _17614_br;;
			jule::I32 _17618_n;;
			std::tie(_17614_br,_17618_n) = _1dc58b800_decode_rune(_17316_s.slice(_17413_i));
			if ((_17327_r == _17614_br)) {
				return _17413_i;
			};
			_17413_i+=_17618_n;
		}
	_iter_next_1ab5023ce:;
	}
	_iter_end_1ab5023ce:;;
	return -1LL;
}



inline jule::I32 _1dd30e4d9_find_last_byte(jule::Str _20023_s, jule::U8 _20031_b) {
	jule::I32 _20113_i = (_20023_s.len() - 1LL);;
	for (; (_20113_i >= 0LL); (_20113_i)--) {
		{
			if ((_20023_s[_20113_i] == _20031_b)) {
				return _20113_i;
			};
		}
	_iter_next_1ab504a41:;
	}
	_iter_end_1ab504a41:;;
	return -1LL;
}



inline jule::I32 _1dd30e9b2_find_any(jule::Str _24117_s, jule::Str _24125_runes) {
	jule::Slice<jule::U8> _2429_sb = _1dc6ce06e_stobs(_24117_s);;
	jule::Slice<jule::U8> _24313_rb = _1dc6ce06e_stobs(_24125_runes);;
	jule::I32 _24413_i = 0LL;;
	while ((_24413_i < _2429_sb.len())) {
		{
			jule::I32 _24614_r;;
			jule::I32 _24617_n;;
			std::tie(_24614_r,_24617_n) = _1dc58b800_decode_rune(_2429_sb.slice(_24413_i));
			if ((_1dd30e044__find_rune(_24313_rb,_24614_r) != -1LL)) {
				return _24413_i;
			};
			_24413_i+=_24617_n;
		}
	_iter_next_1ab509d65:;
	}
	_iter_end_1ab509d65:;;
	return -1LL;
}



inline jule::Slice<jule::Str> _1dd30ec26_split(jule::Str _27514_s, jule::Str _27522_sub, jule::I32 _27536_n) {
	jule::I32 _27613_cap = _27536_n;;
	if ((_27536_n < 0LL)) {
		_27613_cap=16LL;
	};
	jule::Slice<jule::Str> _28013_parts = jule::Slice<jule::Str>::alloc(0LL,_27613_cap);;
	if ((_27536_n == 0LL)) {
		return _28013_parts;
	};
	if ((_27536_n < 0LL)) {
		_27536_n=static_cast<jule::I32>(_27514_s.len());
	};
	jule::I32 _28713_i = 0LL;;
	for (; (_27536_n > 0LL); (_27536_n)--) {
		{
			jule::I32 _28913_j = _1dd56a723_find_at(_27514_s,_27522_sub,_28713_i);;
			if ((_28913_j == -1LL)) {
				goto _iter_end_1ab51095e;
			};
			_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i,_28913_j));;
			_28713_i=static_cast<jule::I32>((_28913_j + _27522_sub.len()));
		}
	_iter_next_1ab51095e:;
	}
	_iter_end_1ab51095e:;;
	if (((_27536_n > 0LL) && (_28713_i < _27514_s.len()))) {
		_28013_parts = jule::alloc_for_append(_28013_parts,1);_28013_parts.__push(_27514_s.slice(_28713_i));;
	};
	return _28013_parts;
}



inline jule::Bool _1dd30ed58_contains(jule::Str _30317_s, jule::Str _30325_sub) {
	return (_1dd56a723_find_at(_30317_s,_30325_sub,0LL) != -1LL);
}



inline jule::Bool _1dd56aeb5_contains_any(jule::Str _31921_s, jule::Str _31929_runes) {
	return (_1dd30e9b2_find_any(_31921_s,_31929_runes) != -1LL);
}



inline jule::Str _1dd5ea86e_replace(jule::Str _34516_s, jule::Str _34524_sub, jule::Str _34534_new, jule::I32 _34548_n) {
	if (((_34548_n == 0LL) || (_34524_sub == _34534_new))) {
		return _34516_s;
	};
	if ((_34548_n < 0LL)) {
		_34548_n=static_cast<jule::I32>(_34516_s.len());
	};
	jule::Str _35413_ss = jule::Str::alloc(_34516_s.len());;
	jule::I32 _35513_i = 0LL;;
	for (; (_34548_n > 0LL); (_34548_n)--) {
		{
			jule::I32 _35713_j = _1dd56a723_find_at(_34516_s,_34524_sub,_35513_i);;
			if ((_35713_j == -1LL)) {
				goto _iter_end_1ab5192d6;
			};
			_35413_ss+=_34516_s.slice(_35513_i,_35713_j);
			_35413_ss+=_34534_new;
			_35513_i=static_cast<jule::I32>((_35713_j + _34524_sub.len()));
		}
	_iter_next_1ab5192d6:;
	}
	_iter_end_1ab5192d6:;;
	_35413_ss+=_34516_s.slice(_35513_i);
	return _35413_ss;
}



inline void _1dd30e2a8__trim_left(jule::Slice<jule::U8>& _39720_s, jule::Slice<jule::U8>& _39732_cutset) {
	jule::I32 _39813_i = 0LL;;
	while ((_39813_i < _39720_s.len())) {
		{
			jule::I32 _40014_r;;
			jule::I32 _40017_n;;
			std::tie(_40014_r,_40017_n) = _1dc58b800_decode_rune(_39720_s.slice(_39813_i));
			if ((_1dd30e044__find_rune(_39732_cutset,_40014_r) == -1LL)) {
				_39720_s=_39720_s.slice(_39813_i);
				return;;
			};
			_39813_i+=_40017_n;
		}
	_iter_next_1ab51e385:;
	}
	_iter_end_1ab51e385:;;
	_39720_s=nullptr;
}



inline jule::Str _1dd5eb2ba_trim_left(jule::Str _41218_s, jule::Str _41226_cutset) {
	jule::Slice<jule::U8> _41313_bytes = _1dc6ce06e_stobs(_41218_s);;
	jule::Slice<jule::U8> _4149_bcutset = _1dc6ce06e_stobs(_41226_cutset);;
	_1dd30e2a8__trim_left(_41313_bytes,_4149_bcutset);
	return static_cast<jule::Str>(_41313_bytes);
}



inline void _1dd5eb3ec__trim_right(jule::Slice<jule::U8>& _41921_s, jule::Slice<jule::U8>& _41933_cutset) {
	jule::I32 _42013_i = _41921_s.len();;
	while ((_42013_i > 0LL)) {
		{
			jule::I32 _42214_r;;
			jule::I32 _42217_n;;
			std::tie(_42214_r,_42217_n) = _1dc58bd83_decode_last_rune(_41921_s.slice(0LL,_42013_i));
			if ((_1dd30e044__find_rune(_41933_cutset,_42214_r) == -1LL)) {
				_41921_s=_41921_s.slice(0LL,_42013_i);
				return;;
			};
			_42013_i-=_42217_n;
		}
	_iter_next_1ab522487:;
	}
	_iter_end_1ab522487:;;
	_41921_s=nullptr;
}



inline jule::Str _1dd5eb661_trim(jule::Str _44313_s, jule::Str _44321_cutset) {
	jule::Slice<jule::U8> _44413_bytes = _1dc6ce06e_stobs(_44313_s);;
	jule::Slice<jule::U8> _4459_bcutset = _1dc6ce06e_stobs(_44321_cutset);;
	_1dd30e2a8__trim_left(_44413_bytes,_4459_bcutset);
	_1dd5eb3ec__trim_right(_44413_bytes,_4459_bcutset);
	return static_cast<jule::Str>(_44413_bytes);
}



inline jule::Bool _1dc61c111_is_path_sep(jule::U8 _4820_c) {
	return ((_4820_c == 92LLU) || (_4820_c == '/'));
}



inline jule::Bool _1dc61c40d_is_slash(jule::U8 _5213_c) {
	return ((_5213_c == '\\') || (_5213_c == '/'));
}



inline jule::U8 _1dc61c540_to_upper(jule::U8 _5413_c) {
	if ((('a' <= _5413_c) && (_5413_c <= 'z'))) {
		return static_cast<jule::U8>((_5413_c - ('a' - 'A')));
	};
	return _5413_c;
}



inline jule::I32 _1dc619dcd_volume_name_len(jule::Str _8220_path) {
	if ((_8220_path.len() < 2LL)) {
		return 0LL;
	};
	jule::U8 _879_c = _8220_path[0LL];;
	if (((_8220_path[1LL] == ':') && ((('a' <= _879_c) && (_879_c <= 'z')) || (('A' <= _879_c) && (_879_c <= 'Z'))))) {
		return 2LL;
	};
	if (((!(_1dc61c40d_is_slash(_8220_path[0LL]))) || (!(_1dc61c40d_is_slash(_8220_path[1LL]))))) {
		return 0LL;
	};
	jule::Str _9510_p1;;
	jule::Str _9518_rest;;
	std::tie(_9510_p1,_9518_rest,std::ignore) = _1dc61a175_cut_path(_8220_path.slice(2LL));
	jule::Str _9613_p2 = jule::Str();;
	jule::Bool _9713_ok = false;;
	std::tie(_9613_p2,_9518_rest,_9713_ok) = _1dc61a175_cut_path(_9518_rest);
	if ((!(_9713_ok))) {
		return static_cast<jule::I32>(_8220_path.len());
	};
	if (((_9510_p1 != jule::Str(".", 1)) && (_9510_p1 != jule::Str("?", 1)))) {
		return static_cast<jule::I32>(((_8220_path.len() - _9518_rest.len()) - 1LL));
	};
	if (((((_9613_p2.len() == 3LL) && (_1dc61c540_to_upper(_9613_p2[0LL]) == 'U')) && (_1dc61c540_to_upper(_9613_p2[1LL]) == 'N')) && (_1dc61c540_to_upper(_9613_p2[2LL]) == 'C'))) {
		std::tie(std::ignore,_9518_rest,std::ignore) = _1dc61a175_cut_path(_9518_rest);
		std::tie(std::ignore,_9518_rest,_9713_ok) = _1dc61a175_cut_path(_9518_rest);
		if ((!(_9713_ok))) {
			return static_cast<jule::I32>(_8220_path.len());
		};
	};
	return static_cast<jule::I32>(((_8220_path.len() - _9518_rest.len()) - 1LL));
}



inline std::tuple<jule::Str,jule::Str,jule::Bool> _1dc61a175_cut_path(jule::Str _11913_path) {
	jule::Str _11926_before = jule::Str();
	jule::Str _11939_after = jule::Str();
	jule::Bool _11951_found = jule::Bool();
	{
		auto &expr = _11913_path;
		auto it = expr.begin();
		_iter_begin_1ab53d481:;
		if (it != expr.end()) {
			jule::I32 _1209_i = it - expr.begin();
			{
				if (_1dc61c40d_is_slash(_11913_path[_1209_i])) {
					_11926_before = _11913_path.slice(0LL,_1209_i);
					_11939_after = _11913_path.slice((_1209_i + 1LL));
					_11951_found = true;
					return std::make_tuple(_11926_before,_11939_after,_11951_found);
				};
			}
			_iter_next_1ab53d481:;
			++it;
			_1209_i++;
			goto _iter_begin_1ab53d481;
		}
		_iter_end_1ab53d481:;
	};
	_11926_before = _11913_path;
	_11939_after = jule::Str();
	_11951_found = false;
	return std::make_tuple(_11926_before,_11939_after,_11951_found);
}



inline std::tuple<jule::Str,jule::Bool> _1dc61a41c_full_path(jule::Str _12814_name) {
	jule::Str _12827_path = jule::Str();
	jule::Bool _12838_ok = jule::Bool();
	jule::Slice<jule::U16> _1299_utf16_name = _1dc48cc73_utf16_from_str(_12814_name);;
	jule::U16* _1309_p = (&(_1299_utf16_name[0LL]));;
	jule::U32 _13113_n = 100LLU;;
	for (;;) {
		{
			jule::Slice<jule::U16> _13317_buff = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_13113_n));;
			_13113_n=static_cast<jule::U32>(_1dc4a4b25_get_full_path_name(_1309_p,static_cast<jule::U32>(static_cast<jule::U32>(_13317_buff.len())),(&(_13317_buff[0LL])),nullptr));
			if ((_13113_n == 0LLU)) {
				_12827_path = jule::Str();
				_12838_ok = false;
				return std::make_tuple(_12827_path,_12838_ok);
			};
			if ((_13113_n <= static_cast<jule::U32>(_13317_buff.len()))) {
				_12827_path = _1dc495c15_utf16_to_str(_13317_buff.slice(0LL,static_cast<jule::I32>(_13113_n)));
				_12838_ok = true;
				return std::make_tuple(_12827_path,_12838_ok);
			};
		}
	_iter_next_1ab540b7b:;
	}
	_iter_end_1ab540b7b:;;
	_12827_path = jule::Str();
	_12838_ok = false;
	return std::make_tuple(_12827_path,_12838_ok);
}



inline std::tuple<jule::Str,jule::Bool> _1dc61a74c___abs(jule::Str _14514_path) {
	jule::Bool _14532_ok = jule::Bool();
	if (_14514_path.empty()) {
		_14514_path=jule::Str(".", 1);
	};
	std::tie(_14514_path,_14532_ok) = _1dc61a41c_full_path(_14514_path);
	if ((!(_14532_ok))) {
		_14532_ok = false;
		return std::make_tuple(jule::Str(),_14532_ok);
	};
	_14532_ok = true;
	return std::make_tuple(_1dc683122_clean(_14514_path),_14532_ok);
}



inline jule::Str _1dc61a9e4___join(jule::Slice<jule::Str> _15915_elem) {
	jule::Str _16013_s = jule::Str();;
	jule::U8 _16113_last_char = 0LLU;;
	{
		auto &expr = _15915_elem;
		auto it = expr.begin();
		_iter_begin_1ab5463ce:;
		if (it != expr.end()) {
			jule::Str _16217_e = *it;
			{
				{
					
					if ((_16013_s.len() == 0LL)) {
						_case_begin_1ab54727b:;
					}
					else if (_1dc61c40d_is_slash(_16113_last_char)) {
						_case_begin_1ab5470a0:;
						{
							while (((_16217_e.len() > 0LL) && _1dc61c40d_is_slash(_16217_e[0LL]))) {
								{
									(_16217_e).mut_slice(1LL);;
								}
							_iter_next_1ab547a73:;
							}
							_iter_end_1ab547a73:;;
						}
					}
					else if ((_16113_last_char == ':')) {
						_case_begin_1ab546c70:;
					}
					else {
						_case_begin_1ab546c09:;
						{
							_16013_s+=jule::Str("\\", 1);
							_16113_last_char='\\';
						}
					}
					_match_end_1ab546b3d:;
				};
				if ((_16217_e.len() > 0LL)) {
					_16013_s+=_16217_e;
					_16113_last_char=_16217_e[(_16217_e.len() - 1LL)];
				};
			}
			_iter_next_1ab5463ce:;
			++it;
			goto _iter_begin_1ab5463ce;
		}
		_iter_end_1ab5463ce:;
	};
	if ((_16013_s.len() == 0LL)) {
		return jule::Str();
	};
	return _1dc683122_clean(_16013_s);
}



inline jule::Str _1dc683122_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;;
	jule::I32 _1109_vol_len = _1dc619dcd_volume_name_len(_10818_path);;
	(_10818_path).mut_slice(_1109_vol_len);;
	if (_10818_path.empty()) {
		if ((((_1109_vol_len > 1LL) && _1dc61c111_is_path_sep(_1099_original_path[0LL])) && _1dc61c111_is_path_sep(_1099_original_path[1LL]))) {
			return _1dc689865_from_slash(_1099_original_path);
		};
		return (_1099_original_path + jule::Str(".", 1));
	};
	jule::Bool _1199_rooted = _1dc61c111_is_path_sep(_10818_path[0LL]);;
	jule::I32 _1269_n = _10818_path.len();;
	_1dc67b58d_LazyBuff _12713_out = _1dc67b58d_LazyBuff{._field_path=_10818_path, ._field_vol_and_path=_1099_original_path, ._field_vol_len=_1109_vol_len};;
	jule::I32 _13214_r = 0LL;;
	jule::I32 _13221_dotdot = 0LL;;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1dc6820ee_append(&_12713_out, 92LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1dc61c111_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1ab553980:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1dc61c111_is_path_sep(_10818_path[(_13214_r + 1LL)])))) {
					_case_begin_1ab5544a8:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1dc61c111_is_path_sep(_10818_path[(_13214_r + 2LL)])))) {
					_case_begin_1ab55451e:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1ab557621:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1dc61c111_is_path_sep(static_cast<jule::U8>(_1dc67bea6_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1ab557e7e:;
									}
									_iter_end_1ab557e7e:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1ab557698:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1dc6820ee_append(&_12713_out, 92LLU);
									};
									_1dc6820ee_append(&_12713_out, '.');
									_1dc6820ee_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1ab557588:;
						};
					}
				}
				else {
					_case_begin_1ab54e7e4:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1dc6820ee_append(&_12713_out, 92LLU);
						};
						if ((((true && (_12713_out._field_w == 0LL)) && (_12713_out._field_vol_len == 0LL)) && (_13214_r != 0LL))) {
							jule::I32 _17525_i = _13214_r;;
							for (; ((_17525_i < _1269_n) && (!(_1dc61c111_is_path_sep(_10818_path[_17525_i])))); (_17525_i)++) {
								{
									if ((_10818_path[_17525_i] == ':')) {
										_1dc6820ee_append(&_12713_out, '.');
										_1dc6820ee_append(&_12713_out, 92LLU);
										goto _iter_end_1ab55131d;
									};
								}
							_iter_next_1ab55131d:;
							}
							_iter_end_1ab55131d:;;
						};
						for (; ((_13214_r < _1269_n) && (!(_1dc61c111_is_path_sep(_10818_path[_13214_r])))); (_13214_r)++) {
							{
								_1dc6820ee_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1ab550e88:;
						}
						_iter_end_1ab550e88:;;
					}
				}
				_match_end_1ab54e76c:;
			};
		}
	_iter_next_1ab54dcdd:;
	}
	_iter_end_1ab54dcdd:;;
	if ((_12713_out._field_w == 0LL)) {
		_1dc6820ee_append(&_12713_out, '.');
	};
	return _1dc689865_from_slash(_1dc682a8e_string(&_12713_out));
}



inline jule::Str _1dc689865_from_slash(jule::Str _21119_path) {
	if ((92LL == '/')) {
		return _21119_path;
	};
	return _1dd5ea86e_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(92LL),-1LL);
}



inline jule::Str _1dc68e46e_join(jule::Slice<jule::Str> _22513_elem) {
	return _1dc61a9e4___join(_22513_elem);
}



inline jule::Str _1dc692dac_ext(jule::Str _23012_path) {
	jule::I32 _23113_i = (_23012_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1dc61c111_is_path_sep(_23012_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_23012_path[_23113_i] == '.')) {
				return _23012_path.slice(_23113_i);
			};
		}
	_iter_next_1ab5629c2:;
	}
	_iter_end_1ab5629c2:;;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1dc6abaeb_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok;;
	std::tie(_24610_abs_path,_24620_ok) = _1dc61a74c___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1dc6ac6bd_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	};
	while (((_25417_path.len() > 0LL) && _1dc61c111_is_path_sep(_25417_path[(_25417_path.len() - 1LL)]))) {
		{
			(_25417_path).mut_slice(0LL,(_25417_path.len() - 1LL));;
		}
	_iter_next_1ab565167:;
	}
	_iter_end_1ab565167:;;
	(_25417_path).mut_slice(_1dc6b0418_volume_name(_25417_path).len());;
	jule::I32 _26513_i = (_25417_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1dc61c111_is_path_sep(_25417_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1ab56690a:;
	}
	_iter_end_1ab56690a:;;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(92LL);
	};
	return _25417_path;
}



inline jule::Str _1dc6ae24c_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1dc6b0418_volume_name(_28512_path);;
	jule::I32 _28713_i = (_28512_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1dc61c111_is_path_sep(_28512_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1ab567de5:;
	}
	_iter_end_1ab567de5:;;
	jule::Str _2919_dir = _1dc683122_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;
	};
	return (_2869_vol + _2919_dir);
}



inline jule::Str _1dc6b0418_volume_name(jule::Str _30320_path) {
	return _1dc689865_from_slash(_30320_path.slice(0LL,_1dc619dcd_volume_name_len(_30320_path)));
}



inline jule::I32 _1db787bd9_get_last_fs_error(void) {
	jule::I32 _729_err = _1db82de17_get_last_errno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab57b920:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab57b3c0:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ab57b436:;
			{
				return static_cast<jule::I32>(2LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ab57b49c:;
			{
				return static_cast<jule::I32>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab57b513:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab57bb40:;
			{
				return static_cast<jule::I32>(5LL);
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1ab57bba6:;
			{
				return static_cast<jule::I32>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ab57bc1c:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ab57bc83:;
			{
				return static_cast<jule::I32>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ab57bce9:;
			{
				return static_cast<jule::I32>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ab57bd60:;
			{
				return static_cast<jule::I32>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ab57bdc6:;
			{
				return static_cast<jule::I32>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab57be3c:;
			{
				return static_cast<jule::I32>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ab57bea3:;
			{
				return static_cast<jule::I32>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ab57c019:;
			{
				return static_cast<jule::I32>(14LL);
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1ab57c080:;
			{
				return static_cast<jule::I32>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ab57c0e6:;
			{
				return static_cast<jule::I32>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ab57c15c:;
			{
				return static_cast<jule::I32>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ab57c1c3:;
			{
				return static_cast<jule::I32>(18LL);
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ab57c239:;
			{
				return static_cast<jule::I32>(19LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ab57c2b1:;
			{
				return static_cast<jule::I32>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ab57c338:;
			{
				return static_cast<jule::I32>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab57c3b0:;
			{
				return static_cast<jule::I32>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ab57c437:;
			{
				return static_cast<jule::I32>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ab57c4ae:;
			{
				return static_cast<jule::I32>(24LL);
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1ab57c536:;
			{
				return static_cast<jule::I32>(25LL);
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1ab57c5ad:;
			{
				return static_cast<jule::I32>(26LL);
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1ab57c635:;
			{
				return static_cast<jule::I32>(27LL);
			}
		}
		else {
			_case_begin_1ab57ae08:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		_match_end_1ab57b1a0:;
	};
}



inline jule::Bool _1dc58e3b3_is_console_handle(jule::Uintptr _11622_handle) {
	return (((_11622_handle == _1db8456d1_STDIN) || (_11622_handle == _1dc46de63_STDOUT)) || (_11622_handle == _1dc4a1e1e_STDERR));
}



inline jule::I32 _1dd69b326_get_last_process_error(void) {
	jule::I32 _429_err = _1db82de17_get_last_errno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab5aba82:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ab5ab521:;
			{
				return static_cast<jule::I32>(1LL);
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ab5ab587:;
			{
				return static_cast<jule::I32>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab5ab5ed:;
			{
				return static_cast<jule::I32>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab5ab664:;
			{
				return static_cast<jule::I32>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab5ab7eb:;
			{
				return static_cast<jule::I32>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ab5ab862:;
			{
				return static_cast<jule::I32>(6LL);
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ab5ab8c8:;
			{
				return static_cast<jule::I32>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ab5ab93e:;
			{
				return static_cast<jule::I32>(9LL);
			}
		}
		else if (_match_expr == 121LL) {
			_case_begin_1ab5ab9a5:;
			{
				return static_cast<jule::I32>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ab5abca2:;
			{
				return static_cast<jule::I32>(11LL);
			}
		}
		else {
			_case_begin_1ab5ab06a:;
			{
				return static_cast<jule::I32>(0LL);
			}
		}
		_match_end_1ab5ab323:;
	};
}



inline jule::Slice<wchar_t*> _1dd6ab215_ustr_slice_to_wcstr_slice(jule::Slice<jule::Slice<jule::U16>> _1730_us) {
	jule::Slice<wchar_t*> _1813_wcs = jule::Slice<wchar_t*>::alloc(0LL,(_1730_us.len() + 1LL));;
	{
		auto &expr = _1730_us;
		auto it = expr.begin();
		_iter_begin_1ab5b453a:;
		if (it != expr.end()) {
			jule::I32 _199_i = it - expr.begin();
			{
				_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(((wchar_t*)((&(_1730_us[_199_i][0LL])))));;
			}
			_iter_next_1ab5b453a:;
			++it;
			_199_i++;
			goto _iter_begin_1ab5b453a;
		}
		_iter_end_1ab5b453a:;
	};
	_1813_wcs = jule::alloc_for_append(_1813_wcs,1);_1813_wcs.__push(nullptr);;
	return _1813_wcs;
}



inline jule::Slice<jule::Slice<jule::U16>> _1dd6ab4e0_str_slice_to_ustr_slice(jule::Slice<jule::Str> _2628_s) {
	jule::Slice<jule::Slice<jule::U16>> _2713_us = jule::Slice<jule::Slice<jule::U16>>::alloc(0LL,_2628_s.len());;
	{
		auto &expr = _2628_s;
		auto it = expr.begin();
		_iter_begin_1ab5b5eba:;
		if (it != expr.end()) {
			jule::Str &_2812_p = *it;
			{
				_2713_us = jule::alloc_for_append(_2713_us,1);_2713_us.__push(_1dc48cc73_utf16_from_str(_2812_p));;
			}
			_iter_next_1ab5b5eba:;
			++it;
			goto _iter_begin_1ab5b5eba;
		}
		_iter_end_1ab5b5eba:;
	};
	return _2713_us;
}



inline jule::I32 _1dd6ab842_execvp(jule::Str _3411_file, jule::Slice<jule::Str> _3422_argv) {
	jule::Slice<jule::U16> _359_utf16_file = _1dc48cc73_utf16_from_str(_3411_file);;
	jule::Slice<jule::Slice<jule::U16>> _369_ucargv = _1dd6ab4e0_str_slice_to_ustr_slice(_3422_argv);;
	jule::Slice<wchar_t*> _379_cargv = _1dd6ab215_ustr_slice_to_wcstr_slice(_369_ucargv);;
	return static_cast<jule::I32>(_wspawnvp(P_NOWAIT,((wchar_t*)((&(_359_utf16_file[0LL])))),(&(_379_cargv[0LL]))));
}



inline jule::I32 _1dd6abc2c_execve(jule::Str _4111_file, jule::Slice<jule::Str> _4122_argv, jule::Slice<jule::Str> _4135_env) {
	jule::Slice<jule::Slice<jule::U16>> _429_ucargv = _1dd6ab4e0_str_slice_to_ustr_slice(_4122_argv);;
	jule::Slice<wchar_t*> _439_cargv = _1dd6ab215_ustr_slice_to_wcstr_slice(_429_ucargv);;
	jule::Slice<jule::Slice<jule::U16>> _449_ucenv = _1dd6ab4e0_str_slice_to_ustr_slice(_4135_env);;
	jule::Slice<wchar_t*> _459_cenv = _1dd6ab215_ustr_slice_to_wcstr_slice(_449_ucenv);;
	jule::Slice<jule::U16> _469_utf16_file = _1dc48cc73_utf16_from_str(_4111_file);;
	return static_cast<jule::I32>(_wspawnvpe(P_NOWAIT,((wchar_t*)((&(_469_utf16_file[0LL])))),(&(_439_cargv[0LL])),(&(_459_cenv[0LL]))));
}



inline void _1dd6ac953_exit(jule::I32 _1213_code) {
	_1dc4a8e7b_exit(_1213_code);
}



inline jule::Str _1dd6acb51_executable(void) {
	return jule::executable();
}



inline jule::Bool _1dd64e098_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>'));
}



inline jule::Bool _1dd64e1db_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1dd64cb68_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1ab5e7480:;
		if (it != expr.end()) {
			jule::Str &_3212_valid_ext = *it;
			{
				if ((_3128_ext == _3212_valid_ext)) {
					return true;
				};
			}
			_iter_next_1ab5e7480:;
			++it;
			goto _iter_begin_1ab5e7480;
		}
		_iter_end_1ab5e7480:;
	};
	return false;
}



inline jule::Bool _1dd64e483_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	};
	{
		auto &expr = _1dd64dd01_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1ab5e8e87:;
		if (it != expr.end()) {
			jule::Str &_4712_e = *it;
			{
				if ((_4225_ext == _4712_e)) {
					return true;
				};
			}
			_iter_next_1ab5e8e87:;
			++it;
			goto _iter_begin_1ab5e8e87;
		}
		_iter_end_1ab5e8e87:;
	};
	{
		auto &expr = _1dd64deaa_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1ab5ea928:;
		if (it != expr.end()) {
			jule::Str &_5312_e = *it;
			{
				if ((_4225_ext == _5312_e)) {
					return true;
				};
			}
			_iter_next_1ab5ea928:;
			++it;
			goto _iter_begin_1ab5ea928;
		}
		_iter_end_1ab5ea928:;
	};
	return false;
}



inline jule::Str _1dd65ae40_logf(jule::Str _29213_fmt, jule::Slice<jule::Any> _29226_args) {
	return _1dd65b858_apply_fmt(_29213_fmt,jule::Any(_29226_args));
}



inline jule::Str _1dd65b22b_arg_to_str(jule::Any _29615_arg) {
	{
		auto &_match_expr{ _29615_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ab5ebbc1:;
			{
				return _29615_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1ab5ebad3:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1ab5ebb49:;
			{
				return static_cast<jule::Str>(_29615_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1ab5eab37:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1ab5eaad2:;
	};
}



inline jule::I32 _1dd65b4c3_find_next_fmt(jule::Str _30918_fmt) {
	{
		auto &expr = _30918_fmt;
		auto it = expr.begin();
		_iter_begin_1ab5ec287:;
		if (it != expr.end()) {
			jule::I32 _3109_i = it - expr.begin();
			jule::U8 &_31012_b = *it;
			{
				if ((_31012_b == '@')) {
					return _3109_i;
				};
			}
			_iter_next_1ab5ec287:;
			++it;
			_3109_i++;
			goto _iter_begin_1ab5ec287;
		}
		_iter_end_1ab5ec287:;
	};
	return -1LL;
}



inline jule::Str _1dd65b858_apply_fmt(jule::Str _31818_fmt, jule::Slice<jule::Any> _31828_args) {
	jule::Str _31913_s = jule::Str();;
	{
		auto &expr = _31828_args;
		auto it = expr.begin();
		_iter_begin_1ab5ee18a:;
		if (it != expr.end()) {
			jule::Any &_32112_arg = *it;
			{
				jule::I32 _32213_i = _1dd65b4c3_find_next_fmt(_31818_fmt);;
				if ((_32213_i == -1LL)) {
					goto _iter_end_1ab5ee18a;
				};
				_31913_s+=_31818_fmt.slice(0LL,_32213_i);
				_31913_s+=_1dd65b22b_arg_to_str(jule::Any(_32112_arg));
				(_31818_fmt).mut_slice((_32213_i + 1LL));;
			}
			_iter_next_1ab5ee18a:;
			++it;
			goto _iter_begin_1ab5ee18a;
		}
		_iter_end_1ab5ee18a:;
	};
	_31913_s+=_31818_fmt;
	return _31913_s;
}



inline jule::Bool _1dd65c86a_is_top_directive(jule::Str _2825_directive) {
	return ((_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5)));
}



inline jule::Bool _1dd65e2c8_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1dd65e5b4_is_darwin(jule::Str _5418_os) {
	return (_5418_os == jule::Str("darwin", 6));
}



inline jule::Bool _1dd65e85b_is_linux(jule::Str _5717_os) {
	return (_5717_os == jule::Str("linux", 5));
}



inline jule::Bool _1dd65eb47_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _1dd65edde_is_amd64(jule::Str _6317_arch) {
	return (_6317_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1dd660186_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1dd66042d_is_unix(jule::Str _6916_os) {
	return (_1dd65e5b4_is_darwin(_6916_os) || _1dd65e85b_is_linux(_6916_os));
}



inline jule::Bool _1dd66075d_is_32bit(jule::Str _7217_arch) {
	return _1dd65eb47_is_i386(_7217_arch);
}



inline jule::Bool _1dd660a05_is_64bit(jule::Str _7517_arch) {
	return (_1dd65edde_is_amd64(_7517_arch) || _1dd660186_is_arm64(_7517_arch));
}



inline void _1dd699e5c_init(void) {
	jule::Str _2513_path = _1dd6acb51_executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	jule::Str _309_pwd = ({
		auto except = _1dc644d09_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;;
		} jule::Str();});
	});;
	jule::Str _359_path_exec = _1dc6ae24c_dir(_2513_path);;
	_2513_path=_1dc68e46e_join(jule::Slice<jule::Str>::make({_359_path_exec,jule::Str("..", 2)}));
	{
		_1dd67eddc_PATH_WD=_309_pwd;
		_1dd66d804_PATH_EXEC=_359_path_exec;
		_1dd66e45e_PATH_STDLIB=_1dc68e46e_join(jule::Slice<jule::Str>::make({_2513_path,jule::Str("std", 3)}));
		_1dd69b029_PATH_API=_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd66d804_PATH_EXEC,jule::Str("..", 2)}));
		_1dd69b029_PATH_API=_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd69b029_PATH_API,jule::Str("api", 3)}));
		_1dd69b029_PATH_API=_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd69b029_PATH_API,jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1dd99492c_is_unary_op(jule::Str _31320_kind) {
	{
		auto &expr = _1dd8e0d84_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1ab64608e:;
		if (it != expr.end()) {
			jule::Str &_31412_op = *it;
			{
				if ((_31320_kind == _31412_op)) {
					return true;
				};
			}
			_iter_next_1ab64608e:;
			++it;
			goto _iter_begin_1ab64608e;
		}
		_iter_end_1ab64608e:;
	};
	return false;
}



inline jule::Bool _1dd994c18_is_bin_op(jule::Str _32418_kind) {
	{
		auto &expr = _1dd8e10d7_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1ab646db4:;
		if (it != expr.end()) {
			jule::Str &_32512_op = *it;
			{
				if ((_32418_kind == _32512_op)) {
					return true;
				};
			}
			_iter_next_1ab646db4:;
			++it;
			goto _iter_begin_1ab646db4;
		}
		_iter_end_1ab646db4:;
	};
	return false;
}



inline jule::Bool _1dd99529b_is_str(jule::Str _34615_k) {
	return ((!(_34615_k.empty())) && ((_34615_k[0LL] == '\"') || _1dd995543_is_raw_str(_34615_k)));
}



inline jule::Bool _1dd995543_is_raw_str(jule::Str _34919_k) {
	return ((!(_34919_k.empty())) && (_34919_k[0LL] == '`'));
}



inline jule::Bool _1dd9957da_is_rune(jule::Str _35316_k) {
	return ((!(_35316_k.empty())) && (_35316_k[0LL] == '\''));
}



inline jule::Bool _1dd995db2_is_bool(jule::Str _35916_k) {
	return ((_35916_k == jule::Str("true", 4)) || (_35916_k == jule::Str("false", 5)));
}



inline jule::Bool _1dd996159_is_float(jule::Str _36217_k) {
	if (_1dd588048_has_prefix(_36217_k,jule::Str("0x", 2))) {
		return _1dd56aeb5_contains_any(_36217_k,jule::Str(".pP", 3));
	};
	return _1dd56aeb5_contains_any(_36217_k,jule::Str(".eE", 3));
}



inline jule::Bool _1dd996401_is_num(jule::Str _37015_k) {
	if (_37015_k.empty()) {
		return false;
	};
	jule::U8 _3759_b = _37015_k[0LL];;
	return ((_3759_b == '.') || (('0' <= _3759_b) && (_3759_b <= '9')));
}



inline jule::Bool _1dd996940_is_ignore_ident(jule::Str _38524_ident) {
	return (_38524_ident == jule::Str("_", 1));
}



inline jule::Bool _1dd996bd7_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1dd997226_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1dd8e0bca_SPACES;
		auto it = expr.begin();
		_iter_begin_1ab650dce:;
		if (it != expr.end()) {
			jule::I32 &_40312_cr = *it;
			{
				if ((_40217_r == _40312_cr)) {
					return true;
				};
			}
			_iter_next_1ab650dce:;
			++it;
			goto _iter_begin_1ab650dce;
		}
		_iter_end_1ab650dce:;
	};
	return false;
}



inline jule::Bool _1dd9975de_is_letter(jule::I32 _41318_r) {
	return _1dd5911b6_is_letter(_41318_r);
}



inline jule::Bool _1dd997b2d_is_decimal(jule::U8 _43519_b) {
	return (('0' <= _43519_b) && (_43519_b <= '9'));
}



inline jule::Bool _1dd997dc5_is_binary(jule::U8 _43818_b) {
	return ((_43818_b == '0') || (_43818_b == '1'));
}



inline jule::Bool _1dd99816c_is_octal(jule::U8 _44117_b) {
	return (('0' <= _44117_b) && (_44117_b <= '7'));
}



inline jule::Bool _1dd998414_is_hex(jule::U8 _44415_b) {
	{
		
		if ((('0' <= _44415_b) && (_44415_b <= '9'))) {
			_case_begin_1ab655422:;
			{
				return true;
			}
		}
		else if ((('a' <= _44415_b) && (_44415_b <= 'f'))) {
			_case_begin_1ab6554ee:;
			{
				return true;
			}
		}
		else if ((('A' <= _44415_b) && (_44415_b <= 'F'))) {
			_case_begin_1ab655565:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab654cd4:;
			{
				return false;
			}
		}
		_match_end_1ab654553:;
	};
}



inline jule::Bool _1dd9986ab_is_assign(jule::U32 _45918_id) {
	return (((((((_45918_id == static_cast<jule::U32>(2LLU)) || (_45918_id == static_cast<jule::U32>(31LLU))) || (_45918_id == static_cast<jule::U32>(34LLU))) || (_45918_id == static_cast<jule::U32>(20LLU))) || (_45918_id == static_cast<jule::U32>(28LLU))) || (_45918_id == static_cast<jule::U32>(3LLU))) || (_45918_id == static_cast<jule::U32>(7LLU)));
}



inline jule::Bool _1dd998953_is_postfix_op(jule::Str _47022_kind) {
	{
		auto &expr = _1dd98d7d3_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1ab656d4c:;
		if (it != expr.end()) {
			jule::Str &_47112_op = *it;
			{
				if ((_47022_kind == _47112_op)) {
					return true;
				};
			}
			_iter_next_1ab656d4c:;
			++it;
			goto _iter_begin_1ab656d4c;
		}
		_iter_end_1ab656d4c:;
	};
	return false;
}



inline jule::Bool _1dd998bea_is_assign_op(jule::Str _48121_kind) {
	if (_1dd998953_is_postfix_op(_48121_kind)) {
		return true;
	};
	{
		auto &expr = _1dd98da36_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1ab6599a9:;
		if (it != expr.end()) {
			jule::Str &_48612_op = *it;
			{
				if ((_48121_kind == _48612_op)) {
					return true;
				};
			}
			_iter_next_1ab6599a9:;
			++it;
			goto _iter_begin_1ab6599a9;
		}
		_iter_end_1ab6599a9:;
	};
	return false;
}



inline jule::Ptr<_1dd9995ad_File> _1dd99aadc_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1dd9995ad_File>(_1dd9995ad_File{._field_path=_6321_path, });
}



inline _1dd65aa00_Log _1dd99c2a3_make_err(jule::I32 _11113_row, jule::I32 _11123_col, jule::Ptr<_1dd9995ad_File>& _11134_f, jule::Str _11144_fmt, jule::Slice<jule::Any> _11157_args) {
	return _1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_row=_11113_row, ._field_column=_11123_col, ._field_path=_11134_f.get()._field_path, ._field_text=_1dd65ae40_logf(_11144_fmt,jule::Any(_11157_args)), };
}



inline jule::Bool _1dd99c638_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes, jule::Str _12137_prefix) {
	if ((_12122_bytes.len() < _12137_prefix.len())) {
		return false;
	};
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1ab6642dd:;
		if (it != expr.end()) {
			jule::I32 _1259_i = it - expr.begin();
			{
				if ((_12122_bytes[_1259_i] != _12137_prefix[_1259_i])) {
					return false;
				};
			}
			_iter_next_1ab6642dd:;
			++it;
			_1259_i++;
			goto _iter_begin_1ab6642dd;
		}
		_iter_end_1ab6642dd:;
	};
	return true;
}



inline jule::Str _1dd99c979_float_fmt_e(jule::Slice<jule::U8>& _13317_txt, jule::I32 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if ((_13334_i >= _13317_txt.len())) {
		return _13344_lit;
	};
	jule::U8 _13913_b = _13317_txt[_13334_i];;
	if ((_13913_b == '_')) {
		return _13344_lit;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13334_i)++;
		if ((_13334_i >= _13317_txt.len())) {
			return _13344_lit;
		};
		if ((_13317_txt[_13334_i] == '_')) {
			return _13344_lit;
		};
	};
	jule::I32 _1539_first = _13334_i;;
	for (; (_13334_i < _13317_txt.len()); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if (((_13913_b != '_') && (!(_1dd997b2d_is_decimal(_13913_b))))) {
				goto _iter_end_1ab667d19;
			};
		}
	_iter_next_1ab667d19:;
	}
	_iter_end_1ab667d19:;;
	if ((_13334_i == _1539_first)) {
		_13344_lit = jule::Str();
		return _13344_lit;
	};
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1dd99cd0e_float_fmt_p(jule::Slice<jule::U8>& _16717_txt, jule::I32 _16730_i) {
	return _1dd99c979_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1dd99d150_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt, jule::I32 _17138_i) {
	if ((_17121_txt[_17138_i] != '.')) {
		return jule::Str();
	};
	(_17138_i)++;
	_julec_label_loop:;
	for (; (_17138_i < _17121_txt.len()); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];;
			{
				
				if ((_17913_b == '_') || _1dd997b2d_is_decimal(_17913_b)) {
					_case_begin_1ab66aee8:;
					{
						goto _iter_next_1ab66a0c4;
					}
				}
				else if (_1dd99e87c_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1ab66b070:;
					{
						return _1dd99cd0e_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1ab66ae4e:;
					{
						goto _iter_end_1ab66a0c4;
					}
				}
				_match_end_1ab66adc7:;
			};
		}
	_iter_next_1ab66a0c4:;
	}
	_iter_end_1ab66a0c4:;;
	return jule::Str();
}



inline jule::Str _1dd99d491_float_fmt_dotfp(jule::Slice<jule::U8>& _19221_txt, jule::I32 _19238_i) {
	_19238_i+=2LL;
	return _1dd99c979_float_fmt_e(_19221_txt,_19238_i);
}



inline jule::Str _1dd99d7d2_float_fmt_dotp(jule::Slice<jule::U8>& _19720_txt, jule::I32 _19737_i) {
	(_19737_i)++;
	return _1dd99c979_float_fmt_e(_19720_txt,_19737_i);
}



inline jule::Str _1dd99dbab_float_num(jule::Slice<jule::U8>& _20215_txt, jule::I32 _20232_i) {
	jule::Str _20242_lit = jule::Str();
	(_20232_i)++;
	if ((_20232_i >= _20215_txt.len())) {
		_20242_lit = static_cast<jule::Str>(_20215_txt);
		return _20242_lit;
	};
	if ((_20215_txt[_20232_i] == '_')) {
		(_20232_i)--;
		_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
		return _20242_lit;
	};
	for (; (_20232_i < _20215_txt.len()); (_20232_i)++) {
		{
			jule::U8 _21213_b = _20215_txt[_20232_i];;
			if (((_20232_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				_20242_lit = _1dd99c979_float_fmt_e(_20215_txt,_20232_i);
				return _20242_lit;
			};
			if (((_21213_b != '_') && (!(_1dd997b2d_is_decimal(_21213_b))))) {
				goto _iter_end_1ab66e42a;
			};
		}
	_iter_next_1ab66e42a:;
	}
	_iter_end_1ab66e42a:;;
	if ((_20232_i == 1LL)) {
		return _20242_lit;
	};
	_20242_lit = static_cast<jule::Str>(_20215_txt.slice(0LL,_20232_i));
	return _20242_lit;
}



inline jule::Str _1dd99de53_common_num(jule::Slice<jule::U8>& _22716_txt) {
	jule::Str _22731_lit = jule::Str();
	jule::I32 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22716_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22716_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1ab673110:;
					{
						_22731_lit = _1dd99dbab_float_num(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1ab673187:;
					{
						goto _iter_next_1ab67254e;
					}
				}
				else if (_1dd99e53b_is_float_fmt_e(_23113_b,_22813_i)) {
					_case_begin_1ab67320e:;
					{
						_22731_lit = _1dd99c979_float_fmt_e(_22716_txt,_22813_i);
						return _22731_lit;
					}
				}
				else if ((!(_1dd997b2d_is_decimal(_23113_b)))) {
					_case_begin_1ab673286:;
					{
						goto _iter_end_1ab67254e;
					}
				}
				_match_end_1ab673022:;
			};
		}
	_iter_next_1ab67254e:;
	}
	_iter_end_1ab67254e:;;
	if ((_22813_i == 0LL)) {
		return _22731_lit;
	};
	_22731_lit = static_cast<jule::Str>(_22716_txt.slice(0LL,_22813_i));
	return _22731_lit;
}



inline jule::Str _1dd99e1ea_binary_num(jule::Slice<jule::U8>& _25016_txt) {
	jule::Str _25031_lit = jule::Str();
	if ((!(_1dd99c638_bytes_has_prefix(_25016_txt,jule::Str("0b", 2))))) {
		_25031_lit = jule::Str();
		return _25031_lit;
	};
	if ((_25016_txt.len() < 2LL)) {
		return _25031_lit;
	};
	;
	jule::I32 _25913_i = 2LL;;
	for (; (_25913_i < _25016_txt.len()); (_25913_i)++) {
		{
			if (((_25016_txt[_25913_i] != '_') && (!(_1dd997dc5_is_binary(_25016_txt[_25913_i]))))) {
				goto _iter_end_1ab6769d7;
			};
		}
	_iter_next_1ab6769d7:;
	}
	_iter_end_1ab6769d7:;;
	if ((_25913_i == 2LL)) {
		return _25031_lit;
	};
	_25031_lit = static_cast<jule::Str>(_25016_txt.slice(0LL,_25913_i));
	return _25031_lit;
}



inline jule::Bool _1dd99e53b_is_float_fmt_e(jule::U8 _27219_b, jule::I32 _27228_i) {
	return ((_27228_i > 0LL) && ((_27219_b == 'e') || (_27219_b == 'E')));
}



inline jule::Bool _1dd99e87c_is_float_fmt_p(jule::U8 _27619_b, jule::I32 _27628_i) {
	return ((_27628_i > 0LL) && ((_27619_b == 'p') || (_27619_b == 'P')));
}



inline jule::Bool _1dd99ebbd_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28024_txt, jule::I32 _28041_i) {
	if ((_28024_txt[_28041_i] != '.')) {
		return false;
	};
	(_28041_i)++;
	_julec_label_loop:;
	for (; (_28041_i < _28024_txt.len()); (_28041_i)++) {
		{
			jule::U8 _28713_b = _28024_txt[_28041_i];;
			{
				
				if ((_28713_b == '_') || _1dd997b2d_is_decimal(_28713_b)) {
					_case_begin_1ab67b25b:;
					{
						goto _iter_next_1ab67a28d;
					}
				}
				else if (_1dd99e87c_is_float_fmt_p(_28713_b,_28041_i)) {
					_case_begin_1ab67b2d3:;
					{
						return true;
					}
				}
				else {
					_case_begin_1ab67b1b2:;
					{
						goto _iter_end_1ab67a28d;
					}
				}
				_match_end_1ab67b13a:;
			};
		}
	_iter_next_1ab67a28d:;
	}
	_iter_end_1ab67a28d:;;
	return false;
}



inline jule::Bool _1dd9a000e_is_float_fmt_dotp(jule::Slice<jule::U8>& _30123_txt, jule::I32 _30136_i) {
	{
		
		if ((_30123_txt.len() < 3LL)) {
			_case_begin_1ab67cee9:;
			{
				goto _case_begin_1ab67d0c6;
			}
		}
		else if ((_30123_txt[_30136_i] != '.')) {
			_case_begin_1ab67d0c6:;
			{
				goto _case_begin_1ab67d13c;
			}
		}
		else if (((_30123_txt[(_30136_i + 1LL)] != 'p') && (_30123_txt[(_30136_i + 1LL)] != 'P'))) {
			_case_begin_1ab67d13c:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ab67c8ab:;
			{
				return true;
			}
		}
		_match_end_1ab67c7e0:;
	};
}



inline jule::Bool _1dd9a0350_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31424_txt, jule::I32 _31437_i) {
	{
		
		if ((_31424_txt.len() < 4LL)) {
			_case_begin_1ab6801c7:;
			{
				goto _case_begin_1ab680293;
			}
		}
		else if ((_31424_txt[_31437_i] != '.')) {
			_case_begin_1ab680293:;
			{
				goto _case_begin_1ab680309;
			}
		}
		else if (((_31424_txt[(_31437_i + 1LL)] != 'f') && (_31424_txt[(_31437_i + 1LL)] != 'F'))) {
			_case_begin_1ab680309:;
			{
				goto _case_begin_1ab68000c;
			}
		}
		else if (((_31424_txt[(_31437_i + 2LL)] != 'p') && (_31424_txt[(_31437_i + 1LL)] != 'P'))) {
			_case_begin_1ab68000c:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ab67e67c:;
			{
				return true;
			}
		}
		_match_end_1ab67e5b1:;
	};
}



inline jule::Str _1dd9a0718_octal_num(jule::Slice<jule::U8>& _32915_txt) {
	jule::Str _32930_lit = jule::Str();
	if ((_32915_txt[0LL] != '0')) {
		_32930_lit = jule::Str();
		return _32930_lit;
	};
	if ((_32915_txt.len() < 2LL)) {
		return _32930_lit;
	};
	jule::I32 _33713_octal_start = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32915_txt[1LL] == 'o')) {
		if ((_32915_txt.len() < 3LL)) {
			return _32930_lit;
		};
		(_33713_octal_start)++;
		_33913_o=true;
	};
	jule::I32 _34813_i = _33713_octal_start;;
	for (; (_34813_i < _32915_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32915_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					_32930_lit = jule::Str();
					return _32930_lit;
				};
				_32930_lit = _1dd99dbab_float_num(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (_1dd99e53b_is_float_fmt_e(_35013_b,_34813_i)) {
				_32930_lit = _1dd99c979_float_fmt_e(_32915_txt,_34813_i);
				return _32930_lit;
			};
			if (((_35013_b != '_') && (!(_1dd99816c_is_octal(_35013_b))))) {
				goto _iter_end_1ab6846a4;
			};
		}
	_iter_next_1ab6846a4:;
	}
	_iter_end_1ab6846a4:;;
	if ((_34813_i == _33713_octal_start)) {
		return _32930_lit;
	};
	_32930_lit = static_cast<jule::Str>(_32915_txt.slice(0LL,_34813_i));
	return _32930_lit;
}



inline jule::Str _1dd9a09b0_hex_num(jule::Slice<jule::U8>& _37113_txt) {
	jule::Str _37128_lit = jule::Str();
	if ((_37113_txt.len() < 3LL)) {
		return _37128_lit;
	};
	if (((_37113_txt[0LL] != '0') || ((_37113_txt[1LL] != 'x') && (_37113_txt[1LL] != 'X')))) {
		return _37128_lit;
	};
	;
	jule::I32 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37113_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37113_txt[_38013_i];;
			{
				
				if (_1dd9a000e_is_float_fmt_dotp(_37113_txt,_38013_i)) {
					_case_begin_1ab68a4ac:;
					{
						_37128_lit = _1dd99d7d2_float_fmt_dotp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1dd9a0350_is_float_fmt_dotfp(_37113_txt,_38013_i)) {
					_case_begin_1ab68a534:;
					{
						_37128_lit = _1dd99d491_float_fmt_dotfp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1dd99e87c_is_float_fmt_p(_38313_b,_38013_i)) {
					_case_begin_1ab68a5ab:;
					{
						_37128_lit = _1dd99cd0e_float_fmt_p(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (_1dd99ebbd_is_float_fmt_dotnp(_37113_txt,_38013_i)) {
					_case_begin_1ab68a633:;
					{
						_37128_lit = _1dd99d150_float_fmt_dotnp(_37113_txt,_38013_i);
						return _37128_lit;
					}
				}
				else if (((_38313_b != '_') && (!(_1dd998414_is_hex(_38313_b))))) {
					_case_begin_1ab68a6aa:;
					{
						goto _iter_end_1ab68992e;
					}
				}
				_match_end_1ab68a3ad:;
			};
		}
	_iter_next_1ab68992e:;
	}
	_iter_end_1ab68992e:;;
	if ((_38013_i == 2LL)) {
		return _37128_lit;
	};
	_37128_lit = static_cast<jule::Str>(_37113_txt.slice(0LL,_38013_i));
	return _37128_lit;
}



inline jule::Str _1dd9a0d01_hex_escape(jule::Slice<jule::U8>& _40416_txt, jule::I32 _40429_n) {
	jule::Str _40439_seq = jule::Str();
	if ((_40416_txt.len() < _40429_n)) {
		return _40439_seq;
	};
	;
	jule::I32 _41013_i = 2LL;;
	for (; (_41013_i < _40429_n); (_41013_i)++) {
		{
			if ((!(_1dd998414_is_hex(_40416_txt[_41013_i])))) {
				return _40439_seq;
			};
		}
	_iter_next_1ab68d339:;
	}
	_iter_end_1ab68d339:;;
	_40439_seq=static_cast<jule::Str>(_40416_txt.slice(0LL,_40429_n));
	return _40439_seq;
}



inline jule::Str _1dd9a10ba_big_unicode_point_escape(jule::Slice<jule::U8>& _42230_txt) {
	return _1dd9a0d01_hex_escape(_42230_txt,10LL);
}



inline jule::Str _1dd9a1395_little_unicode_point_escape(jule::Slice<jule::U8>& _42733_txt) {
	return _1dd9a0d01_hex_escape(_42733_txt,6LL);
}



inline jule::Str _1dd9a164d_hex_byte_escape(jule::Slice<jule::U8>& _43221_txt) {
	return _1dd9a0d01_hex_escape(_43221_txt,4LL);
}



inline jule::Str _1dd9a18e5_byte_escape(jule::Slice<jule::U8>& _43717_txt) {
	jule::Str _43732_seq = jule::Str();
	if ((_43717_txt.len() < 4LL)) {
		return _43732_seq;
	};
	if ((((!(_1dd99816c_is_octal(_43717_txt[1LL]))) || (!(_1dd99816c_is_octal(_43717_txt[2LL])))) || (!(_1dd99816c_is_octal(_43717_txt[3LL]))))) {
		return _43732_seq;
	};
	_43732_seq = static_cast<jule::Str>(_43717_txt.slice(0LL,4LL));
	return _43732_seq;
}



inline jule::Slice<_1dd65aa00_Log> _1dd9a63de_lex(jule::Ptr<_1dd9995ad_File> _83216_f, jule::I32 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	};
	_1dd9a20cc_Lex _83713_lex = _1dd9a20cc_Lex{._field_mode=_83226_mode, ._field_file=_83216_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1dd9a4b6d_new_line(&_83713_lex);
	_1dd9a2b6b_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	};
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::I32 _1e0ba9546_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I32>((64LL - _1e0bb162a_len64(_6124_x)));
}



inline jule::I32 _1e0baa305_trailing_zeros(jule::U32 _8323_x) {
	;
	return static_cast<jule::I32>(_1e0baae1b_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I32 _1e0baab74_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1e0ba9ab8_DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10525_x & (-(_10525_x))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I32 _1e0baae1b_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1e0baa0a2_DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11425_x & (-(_11425_x))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I32 _1e0bb1383_len32(jule::U32 _35218_x) {
	jule::I32 _35228_n = jule::I32();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	};
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	};
	_35228_n = static_cast<jule::I32>((_35228_n + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35218_x)])));
	return _35228_n;
}



inline jule::I32 _1e0bb162a_len64(jule::U64 _36618_x) {
	jule::I32 _36628_n = jule::I32();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	};
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	};
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	};
	_36628_n = static_cast<jule::I32>((_36628_n + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1e0bb22da_add64(jule::U64 _41514_x, jule::U64 _41522_y, jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(((_41514_x + _41522_y) + _41530_carry));
	_41554_carryout=static_cast<jule::U64>((((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1e0bb396d_mul64(jule::U64 _49914_x, jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	;
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	_49941_lo=static_cast<jule::U64>((_49914_x * _49922_y));
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1e0acb996_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1e0acbc82_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1e0acc029_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1e0acc315_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I32> _1e0ace67a_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I32 _4739_exp = jule::I32();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1ab80d311:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1e0b2aaa0_is_inf(_4718_f,0LL) || _1e0b2c5b8_is_nan(_4718_f)) {
			_case_begin_1ab80d388:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1ab80d212:;
	};
	std::tie(_4718_f,_4739_exp) = _1e0b42e6e_normalize(_4718_f);
	jule::U64 _5613_x = _1e0acc029_f64_bits(_4718_f);;
	_4739_exp+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1e0acc315_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1e0b7a803_nan(void) {
	return static_cast<jule::F64>(_1e0acc315_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1e0b2c5b8_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _1e0b3cd8c_inf(jule::I32 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1e0acc315_f64_from_bits(9218868437227405312LLU));
	};
	return static_cast<jule::F64>(_1e0acc315_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1e0b2aaa0_is_inf(jule::F64 _7215_f, jule::I32 _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline std::tuple<jule::F64,jule::I32> _1e0b42e6e_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I32 _8232_exp = jule::I32();
	;
	if ((_1e0bb82e1_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	};
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1e0bb7bc5_log(jule::F64 _11112_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e0b2c5b8_is_nan(_11112_x) || _1e0b2aaa0_is_inf(_11112_x,1LL)) {
			_case_begin_1ab856ab8:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1ab856b40:;
			{
				return static_cast<jule::F64>(_1e0b7a803_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1ab856bb7:;
			{
				return static_cast<jule::F64>(_1e0b3cd8c_inf(-1LL));
			}
		}
		_match_end_1ab8569db:;
	};
	jule::F64 _13314_f1;;
	jule::I32 _13322_ki;;
	std::tie(_13314_f1,_13322_ki) = _1e0ace67a_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));
}



inline jule::F64 _1e0bb82e1_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1e0acc315_f64_from_bits(static_cast<jule::U64>((_1e0acc029_f64_bits(_4312_x) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1e0bba8a9_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	;
	jule::F64 _469_abs_f = _1e0bb82e1_abs(_4413_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_abs_f)) {
			{
				(_4713_i)--;
			}
		_iter_next_1ab8bee72:;
		}
		_iter_end_1ab8bee72:;;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>((_4413_f - _4713_i));
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1e0bbad3d_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;;
	jule::I32 _4516_exp;;
	std::tie(_4510_frac,_4516_exp) = _1e0ace67a_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	};
	return static_cast<jule::F64>(((_1e0bb7bc5_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));
}



inline jule::Str _1e060281e_fmt_float(jule::F64 _7818_f, jule::U8 _7826_fmt, jule::I32 _7837_prec, jule::I32 _7848_bit_size) {
	return static_cast<jule::Str>(_1e0626777_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,_1e083c817_max(static_cast<jule::I32>((_7837_prec + 4LL)),24LL)),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1e0626777_generic_ftoa(jule::Slice<jule::U8> _8221_dst, jule::F64 _8234_val, jule::U8 _8244_fmt, jule::I32 _8259_prec, jule::I32 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e05cd5db_FloatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac6bc862:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1e0acb996_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1e05cd5db_FloatInfo>)((&(_1e05d2b62_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac6bc631:;
			{
				_8313_bits=static_cast<jule::U64>(_1e0acc029_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1e05cd5db_FloatInfo>)((&(_1e05dc650_F64_INFO))));
			}
		}
		else {
			_case_begin_1ac6bc301:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1ac6bc224:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1ac6c1129:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1ac6c315e:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1ac6c335c:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1ac6c212a:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));
						}
					}
					_match_end_1ac6c205e:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1ac6c1723:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1ac6bc279:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1ac6c0d1b:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8244_fmt == 'b')) {
		return _1e0795000_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	if (((_8244_fmt == 'x') || (_8244_fmt == 'X'))) {
		return _1e0796cb0_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	;
	_1e09aeb76_DecimalSlice _13213_digs = _1e09aeb76_DecimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1e0be4a04_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac6c7817:;
				{
					_8259_prec=static_cast<jule::I32>(_1e083c817_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac6c787d:;
				{
					_8259_prec=static_cast<jule::I32>(_1e083c817_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac6c7938:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1ac6c7680:;
		};
	} else if ((_8244_fmt != 'f')) {
		jule::I32 _15217_digits = _8259_prec;;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac6c9bc1:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac6c9c37:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					};
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1ac6c9660:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1ac6c95e9:;
		};
		if (((_8270_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e083d43e_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1e0be4790_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e06a1428_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	};
	return _1e06a3848_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1e06a1428_big_ftoa(jule::Slice<jule::U8> _18217_dst, jule::I32 _18234_prec, jule::U8 _18245_fmt, jule::Bool _18256_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1e05cd5db_FloatInfo& _18327_flt) {
	_1e0be5ad2_Decimal _18413_d = _1e0be5ad2_Decimal{};;
	_1e0be5cbe_assign(&_18413_d, _1835_mant);
	_1e0be5e01_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>(_18327_flt._field_mantbits))));
	_1e09aeb76_DecimalSlice _18713_digs = _1e09aeb76_DecimalSlice{};;
	jule::Bool _1889_shortest = (_18234_prec < 0LL);;
	if (_1889_shortest) {
		_1e06c4ade_round_shortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1e09aeb76_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac6d1d1b:;
				{
					_18234_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac6d2c0c:;
				{
					_18234_prec=static_cast<jule::I32>(_1e083c817_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac6d2c73:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1ac6d2aa8:;
		};
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1ac6d1a96:;
				{
					_1e0be6297_round(&_18413_d, static_cast<jule::I32>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1ac6d1b0c:;
				{
					_1e0be6297_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18234_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1ac6d1b73:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					};
					_1e0be6297_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1ac6d4604:;
		};
		_18713_digs=_1e09aeb76_DecimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e06a3848_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1e06a3848_fmt_digits(jule::Slice<jule::U8> _21919_dst, jule::Bool _21932_shortest, jule::Bool _21948_neg, _1e09aeb76_DecimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1ac6d7d77:;
			{
				return _1e076b933_fmt_e(_21919_dst,_21948_neg,_2205_digs,_22029_prec,_22040_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ac6d7ddd:;
			{
				return _1e07602ea_fmt_f(_21919_dst,_21948_neg,_2205_digs,_22029_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1ac6d7e54:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21932_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e076b933_fmt_e(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I32>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e07602ea_fmt_f(_21919_dst,_21948_neg,_2205_digs,static_cast<jule::I32>(_1e083c817_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)),0LL)));
			}
		}
		_match_end_1ac6d7d22:;
	};
	return jule::append(_21919_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));
}



inline void _1e06c4ade_round_shortest(_1e0be5ad2_Decimal& _25724_d, jule::U64 _25736_mant, jule::I32 _25747_exp, _1e05cd5db_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = (_25758_flt._field_bias + 1LL);;
	if (((_25747_exp > _2789_minexp) && ((332LL * (_25724_d._field_dp - _25724_d._field_nd)) >= (100LL * (_25747_exp - static_cast<jule::I32>(_25758_flt._field_mantbits)))))) {
		return;;
	};
	_1e0be5ad2_Decimal _28713_upper = _1e0be5ad2_Decimal{};;
	_1e0be5cbe_assign(&_28713_upper, static_cast<jule::U64>(((_25736_mant << 1LLU) + 1LLU)));
	_1e0be5e01_shift(&_28713_upper, static_cast<jule::I32>(((_25747_exp - static_cast<jule::I32>(_25758_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25736_mant > (1LLU << _25758_flt._field_mantbits)) || (_25747_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25736_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25747_exp - 1LL));
	};
	_1e0be5ad2_Decimal _30613_lower = _1e0be5ad2_Decimal{};;
	_1e0be5cbe_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e0be5e01_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>(_25758_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp);;
			if ((_33513_mi >= _25724_d._field_nd)) {
				goto _iter_end_1ac6e1c93;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1ac700730:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1ac7007a7:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1ac70082e:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1ac700664:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1ac703777:;
					{
						_1e0be6297_round(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1ac7037ee:;
					{
						_1e0be6033_round_down(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1ac703876:;
					{
						_1e0be6165_round_up(&_25724_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1ac7008ea:;
			};
		}
	_iter_next_1ac6e1c93:;
	}
	_iter_end_1ac6e1c93:;;
}



inline jule::Slice<jule::U8> _1e076b933_fmt_e(jule::Slice<jule::U8> _39614_dst, jule::Bool _39627_neg, _1e09aeb76_DecimalSlice _39638_d, jule::I32 _39655_prec, jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');;
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _1e07c97e8_min(_39638_d._field_nd,static_cast<jule::I32>((_39655_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39655_prec); (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');;
			}
		_iter_next_1ac708c11:;
		}
		_iter_end_1ac708c11:;;
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);;
	jule::I32 _42513_exp = (_39638_d._field_dp - 1LL);;
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1ac70a4a4:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1ac70a51a:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ac70abad:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ac70aae2:;
	};
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1e07602ea_fmt_f(jule::Slice<jule::U8> _45114_dst, jule::Bool _45127_neg, _1e09aeb76_DecimalSlice _45138_d, jule::I32 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');;
	};
	if ((_45138_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1e07c97e8_min(_45138_d._field_nd,_45138_d._field_dp);;
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45138_d._field_dp); (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
			}
		_iter_next_1ac710630:;
		}
		_iter_end_1ac710630:;;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');;
	};
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');;
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45155_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45138_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd))) {
					_47221_ch=_45138_d._field_d[_47317_j];
				};
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);;
			}
		_iter_next_1ac711774:;
		}
		_iter_end_1ac711774:;;
	};
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1e0795000_fmt_b(jule::Slice<jule::U8> _48414_dst, jule::Bool _48427_neg, jule::U64 _48438_mant, jule::I32 _48453_exp, _1e05cd5db_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');;
	};
	std::tie(_48414_dst,std::ignore) = _1e0be752e_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');;
	_48453_exp-=static_cast<jule::I32>(_48464_flt._field_mantbits);
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');;
	};
	std::tie(_48414_dst,std::ignore) = _1e0be752e_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1e0796cb0_fmt_x(jule::Slice<jule::U8> _50614_dst, jule::I32 _50627_prec, jule::U8 _50638_fmt, jule::Bool _50649_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1e05cd5db_FloatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1ac7171b4:;
	}
	_iter_end_1ac7171b4:;;
	if (((_50627_prec >= 0LL) && (_50627_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50627_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50638_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');;
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50627_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac71cc9c:;
		}
		_iter_end_1ac71cc9c:;;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');;
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50627_prec); (_55817_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1ac71c86d:;
		}
		_iter_end_1ac71c86d:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50638_fmt == _1e08318d8_lower(_50638_fmt))) {
		_56613_ch='p';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1ac723d91:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1ac721a5e:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1ac7219e8:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50614_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1ac720b3a:;
	};
	return _50614_dst;
}



inline jule::I32 _1e07c97e8_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;
	};
	return _59116_b;
}



inline jule::I32 _1e083c817_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;
	};
	return _59816_b;
}



inline jule::U8 _1e08318d8_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | ('x' - 'X')));
}



inline std::tuple<jule::U64,jule::I32> _1e085619e___parse_uint(jule::Str _5121_s, jule::I32 _5133_base, jule::I32 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
	};
	{
		
		if (((2LL <= _5133_base) && (_5133_base <= 36LL))) {
			_case_begin_1ac7288bd:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1ac72878b:;
			{
				_5133_base=10LL;
				if ((_5121_s[0LL] == '0')) {
					{
						
						if (((_5121_s.len() >= 3LL) && (_1e08318d8_lower(_5121_s[1LL]) == 'b'))) {
							_case_begin_1ac72a392:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e08318d8_lower(_5121_s[1LL]) == 'o'))) {
							_case_begin_1ac72a408:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else if (((_5121_s.len() >= 3LL) && (_1e08318d8_lower(_5121_s[1LL]) == 'x'))) {
							_case_begin_1ac72a062:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1ac729eeb:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);;
							}
						}
						_match_end_1ac729e30:;
					};
				};
			}
		}
		else {
			_case_begin_1ac7279cc:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I32>(3LL));
			}
		}
		_match_end_1ac727c41:;
	};
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if (((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL))) {
		return std::make_tuple(0LLU,static_cast<jule::I32>(4LL));
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1ac730177:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ac72ed69:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1ac72e75e:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5133_base)) + 1LLU));
			}
		}
		_match_end_1ac72eab1:;
	};
	jule::U64 _10013_max_val = 0LLU;;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac730ba0:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac7310bd:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1ac730551:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1ac732124:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1ac733334:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e08318d8_lower(_10912_c)) && (_1e08318d8_lower(_10912_c) <= 'z'))) {
						_case_begin_1ac733202:;
						{
							_11017_d=static_cast<jule::U8>(((_1e08318d8_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1ac733268:;
						{
							goto _iter_next_1ac732124;
						}
					}
					else {
						_case_begin_1ac732c6d:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
						}
					}
					_match_end_1ac732be6:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5133_base))) {
					return std::make_tuple(0LLU,static_cast<jule::I32>(2LL));
				};
				if ((_10813_n >= _9013_cutoff)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I32>(1LL));
				};
				_10813_n*=static_cast<jule::U64>(_5133_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I32>(1LL));
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1ac732124:;
			++it;
			goto _iter_begin_1ac732124;
		}
		_iter_end_1ac732124:;
	};
	return std::make_tuple(_10813_n,static_cast<jule::I32>(0LL));
}



inline jule::Exceptional<jule::U64> _1e08d7d46_parse_uint(jule::Str _14623_s, jule::I32 _14635_base, jule::I32 _14650_bit_size) {
	jule::U64 _14710_un;;
	jule::I32 _14714_err;;
	std::tie(_14710_un,_14714_err) = _1e085619e___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(_14714_err);
	};
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1e09b1628_parse_int(jule::Str _17222_s, jule::I32 _17230_base, jule::I32 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(2LL));
	};
	jule::Bool _17813_neg = false;;
	if ((_17222_s[0LL] == '+')) {
		(_17222_s).mut_slice(1LL);;
	} else if ((_17222_s[0LL] == '-')) {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un;;
	jule::I32 _18718_err;;
	std::tie(_18714_un,_18718_err) = _1e085619e___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	};
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17245_bit_size - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(1LL));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I32>(1LL));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1e097c11b_eisel_lemire64(jule::U64 _4123_man, jule::I32 _4133_exp10, jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1e0acc315_f64_from_bits(9223372036854775808LLU));
		};
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::I32 _579_clz = _1e0ba9546_leading_zeros64(_4123_man);;
	_4123_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_x_hi;;
	jule::U64 _6324_x_lo;;
	std::tie(_6314_x_hi,_6324_x_lo) = _1e0bb396d_mul64(_4123_man,_1e063d54c_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if ((((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi;;
		jule::U64 _6720_y_lo;;
		std::tie(_6714_y_hi,_6720_y_lo) = _1e0bb396d_mul64(_4123_man,_1e063d54c_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		};
		if (((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		};
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	};
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);;
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LLU));;
	_6013_ret_exp2-=(1LLU ^ _799_msb);
	if ((((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LLU);
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	};
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	};
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LLU) | (_8013_ret_mantissa & 4503599627370495LLU));;
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	};
	_4158_f = static_cast<jule::F64>(_1e0acc315_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e0a016e0_eisel_lemire32(jule::U64 _11023_man, jule::I32 _11033_exp10, jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1e0acbc82_f32_from_bits(2147483648LLU));
		};
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::I32 _1329_clz = _1e0ba9546_leading_zeros64(_11023_man);;
	_11023_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_ret_exp2 = (static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi;;
	jule::U64 _13824_x_lo;;
	std::tie(_13814_x_hi,_13824_x_lo) = _1e0bb396d_mul64(_11023_man,_1e063d54c_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi;;
		jule::U64 _14220_y_lo;;
		std::tie(_14214_y_hi,_14220_y_lo) = _1e0bb396d_mul64(_11023_man,_1e063d54c_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		};
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_ret_exp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LLU);
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	};
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	};
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LLU) | (_15513_ret_mantissa & 8388607LLU));;
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	};
	_11058_f = static_cast<jule::F32>(_1e0acbc82_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I32 _1e097d02e_common_prefix_len_ignore_case(jule::Str _4534_s, jule::Str _4542_prefix) {
	jule::I32 _4613_n = _4542_prefix.len();;
	if ((_4613_n > _4534_s.len())) {
		_4613_n=static_cast<jule::I32>(_4534_s.len());
	};
	jule::I32 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=('a' - 'A');
			};
			if ((_5217_c != _4542_prefix[_5013_i])) {
				return _5013_i;
			};
		}
	_iter_next_1ac7585bd:;
	}
	_iter_end_1ac7585bd:;;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I32,jule::Bool> _1e0796650_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I32 _6834_n = jule::I32();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	};
	jule::I32 _7213_sign = 1LL;;
	jule::I32 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1ac75d529:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1ac75d590;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1ac75d590:;
			{
				jule::I32 _8317_case_n = _1e097d02e_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
					_8317_case_n=3LL;
				};
				if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
					_6826_f = static_cast<jule::F64>(_1e0b3cd8c_inf(_7213_sign));
					_6834_n = static_cast<jule::I32>((_7313_nsign + _6834_n));
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1ac75d606:;
			{
				if ((_1e097d02e_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1e0b7a803_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				};
			}
		}
		_match_end_1ac75d4c4:;
	};
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I32,jule::Bool,jule::Bool,jule::Bool,jule::I32,jule::Bool> _1e089001d_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I32 _10340_exp = jule::I32();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10361_trunc = jule::Bool();
	jule::Bool _10374_hex = jule::Bool();
	jule::I32 _10385_i = jule::I32();
	jule::Bool _10393_ok = jule::Bool();
	if ((_10385_i >= _10315_s.len())) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	{
		
		if ((_10315_s[_10385_i] == '+')) {
			_case_begin_1ac7643ed:;
			{
				(_10385_i)++;
			}
		}
		else if ((_10315_s[_10385_i] == '-')) {
			_case_begin_1ac76462e:;
			{
				_10350_neg=true;
				(_10385_i)++;
			}
		}
		_match_end_1ac76409b:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I32 _11813_max_mant_digits = 19LL;;
	jule::U8 _11913_exp_char = 'e';;
	if (((((_10385_i + 2LL) < _10315_s.len()) && (_10315_s[_10385_i] == '0')) && (_1e08318d8_lower(_10315_s[(_10385_i + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_max_mant_digits=16LL;
		_10385_i+=2LL;
		_11913_exp_char='p';
		_10374_hex=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I32 _12913_nd = 0LL;;
	jule::I32 _13013_nd_mant = 0LL;;
	jule::I32 _13113_dp = 0LL;;
	for (; (_10385_i < _10315_s.len()); (_10385_i)++) {
		{
			jule::U8 _13313_c = _10315_s[_10385_i];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1ac76a1d4:;
					{
						goto _iter_next_1ac769634;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1ac76a25b:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1ac769634;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1ac76a2d3:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1ac769634;
						};
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=_11713_base;
							_10325_mantissa+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_nd_mant)++;
						} else if ((_13313_c != '0')) {
							_10361_trunc=true;
						};
						goto _iter_next_1ac769634;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e08318d8_lower(_13313_c))) && (_1e08318d8_lower(_13313_c) <= 'f'))) {
					_case_begin_1ac76a35a:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_nd_mant < _11813_max_mant_digits)) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(((_1e08318d8_lower(_13313_c) - 'a') + 10LLU));
							(_13013_nd_mant)++;
						} else {
							_10361_trunc=true;
						};
						goto _iter_next_1ac769634;
					}
				}
				_match_end_1ac76a0e6:;
			};
			goto _iter_end_1ac769634;
		}
	_iter_next_1ac769634:;
	}
	_iter_end_1ac769634:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_nd_mant*=4LL;
	};
	if (((_10385_i < _10315_s.len()) && (_1e08318d8_lower(_10315_s[_10385_i]) == _11913_exp_char))) {
		(_10385_i)++;
		if ((_10385_i >= _10315_s.len())) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I32 _19617_esign = 1LL;;
		if ((_10315_s[_10385_i] == '+')) {
			(_10385_i)++;
		} else if ((_10315_s[_10385_i] == '-')) {
			(_10385_i)++;
			_19617_esign=-1LL;
		};
		if ((((_10385_i >= _10315_s.len()) || (_10315_s[_10385_i] < '0')) || (_10315_s[_10385_i] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
		};
		jule::I32 _20617_e = 0LL;;
		for (; ((_10385_i < _10315_s.len()) && ((('0' <= _10315_s[_10385_i]) && (_10315_s[_10385_i] <= '9')) || (_10315_s[_10385_i] == '_'))); (_10385_i)++) {
			{
				if ((_10315_s[_10385_i] == '_')) {
					goto _iter_next_1ac774892;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I32>((((_20617_e * 10LL) + static_cast<jule::I32>(_10315_s[_10385_i])) - '0'));
				};
			}
		_iter_next_1ac774892:;
		}
		_iter_end_1ac774892:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
	};
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I32>((_13113_dp - _13013_nd_mant));
	};
	_10393_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10361_trunc,_10374_hex,_10385_i,_10393_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1e05ca022_atof64exact(jule::U64 _48116_mantissa, jule::I32 _48135_exp, jule::Bool _48145_neg) {
	jule::F64 _48158_f = jule::F64();
	jule::Bool _48166_ok = jule::Bool();
	if (((_48116_mantissa >> _1e05dc650_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48158_f,_48166_ok);
	};
	_48158_f=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		_48158_f=static_cast<jule::F64>((-(_48158_f)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1ac77e902:;
			{
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1ac77e968:;
			{
				if ((_48135_exp > 22LL)) {
					_48158_f*=_1e06a0614_F64_POW10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((_48158_f > 1000000000000000LL) || (_48158_f < -1000000000000000LL))) {
					return std::make_tuple(_48158_f,_48166_ok);
				};
				_48158_f = static_cast<jule::F64>((_48158_f * _1e06a0614_F64_POW10[_48135_exp]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1ac77e9ce:;
			{
				_48158_f = static_cast<jule::F64>(jule::div(_48158_f,_1e06a0614_F64_POW10[(-(_48135_exp))]));
				_48166_ok = true;
				return std::make_tuple(_48158_f,_48166_ok);
			}
		}
		_match_end_1ac77e7ae:;
	};
	return std::make_tuple(_48158_f,_48166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1e05ca154_atof32exact(jule::U64 _51516_mantissa, jule::I32 _51535_exp, jule::Bool _51549_neg) {
	jule::F32 _51562_f = jule::F32();
	jule::Bool _51570_ok = jule::Bool();
	if (((_51516_mantissa >> _1e05d2b62_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51562_f,_51570_ok);
	};
	_51562_f=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		_51562_f=static_cast<jule::F32>((-(_51562_f)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1ac7846e8:;
			{
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1ac78475e:;
			{
				if ((_51535_exp > 10LL)) {
					_51562_f*=_1e06adb83_F32_POW10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((_51562_f > 10000000LL) || (_51562_f < -10000000LL))) {
					return std::make_tuple(_51562_f,_51570_ok);
				};
				_51562_f = static_cast<jule::F32>((_51562_f * _1e06adb83_F32_POW10[_51535_exp]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1ac7847c5:;
			{
				_51562_f = static_cast<jule::F32>(jule::div(_51562_f,_1e06adb83_F32_POW10[(-(_51535_exp))]));
				_51570_ok = true;
				return std::make_tuple(_51562_f,_51570_ok);
			}
		}
		_match_end_1ac7845a5:;
	};
	return std::make_tuple(_51562_f,_51570_ok);
}



inline std::tuple<jule::F64,jule::I32> _1e05ca286_atof_hex(jule::Str _55113_s, _1e05cd5db_FloatInfo& _55122_flt, jule::U64 _55142_mantissa, jule::I32 _55161_exp, jule::Bool _55171_neg, jule::Bool _55182_trunc) {
	jule::I32 _5529_max_exp = ((static_cast<jule::I32>((1LL << _55122_flt._field_expbits)) + _55122_flt._field_bias) - 2LL);;
	jule::I32 _5539_min_exp = (_55122_flt._field_bias + 1LL);;
	_55161_exp+=static_cast<jule::I32>(_55122_flt._field_mantbits);
	while (((_55142_mantissa != 0LLU) && ((_55142_mantissa >> (_55122_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55142_mantissa<<=1LLU;
			(_55161_exp)--;
		}
	_iter_next_1ac789d6e:;
	}
	_iter_end_1ac789d6e:;;
	if (_55182_trunc) {
		_55142_mantissa|=1LLU;
	};
	while (((_55142_mantissa >> ((1LLU + _55122_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1ac78b2e3:;
	}
	_iter_end_1ac78b2e3:;;
	while (((_55142_mantissa > 1LLU) && (_55161_exp < (_5539_min_exp - 2LL)))) {
		{
			_55142_mantissa=static_cast<jule::U64>(((_55142_mantissa >> 1LLU) | (_55142_mantissa & 1LLU)));
			(_55161_exp)++;
		}
	_iter_next_1ac78bdc6:;
	}
	_iter_end_1ac78bdc6:;;
	jule::U64 _58313_round = (_55142_mantissa & 3LLU);;
	_55142_mantissa>>=2LLU;
	_58313_round|=(_55142_mantissa & 1LLU);
	_55161_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55142_mantissa)++;
		if ((_55142_mantissa == (1LLU << (1LLU + _55122_flt._field_mantbits)))) {
			_55142_mantissa>>=1LLU;
			(_55161_exp)++;
		};
	};
	if (((_55142_mantissa >> _55122_flt._field_mantbits) == 0LLU)) {
		_55161_exp=_55122_flt._field_bias;
	};
	jule::I32 _59813_err = static_cast<jule::I32>(0LL);;
	if ((_55161_exp > _5529_max_exp)) {
		_55142_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55122_flt._field_mantbits)));
		_55161_exp=static_cast<jule::I32>((_5529_max_exp + 1LL));
		_59813_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _60513_bits = (_55142_mantissa & ((1LLU << _55122_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55161_exp - _55122_flt._field_bias) & static_cast<jule::I32>(((1LL << _55122_flt._field_expbits) - 1LL)))) << _55122_flt._field_mantbits);
	if (_55171_neg) {
		_60513_bits|=((1LLU << _55122_flt._field_mantbits) << _55122_flt._field_expbits);
	};
	if ((_55122_flt == _1e05d2b62_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1e0acbc82_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits))))),_59813_err);
	};
	return std::make_tuple(static_cast<jule::F64>(_1e0acc315_f64_from_bits(_60513_bits)),_59813_err);
}



inline std::tuple<jule::F32,jule::I32,jule::I32> _1e076c24c_atof32(jule::Str _61611_s) {
	jule::F32 _61621_f = jule::F32();
	jule::I32 _61629_n = jule::I32();
	jule::I32 _61637_err = 0LL;
	{
		jule::F64 _61814_val;;
		jule::I32 _61819__n;;
		jule::Bool _61823_ok;;
		std::tie(_61814_val,_61819__n,_61823_ok) = _1e0796650_special(_61611_s);
		if (_61823_ok) {
			_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			_61629_n = _61819__n;
			_61637_err = static_cast<jule::I32>(0LL);
			return std::make_tuple(_61621_f,_61629_n,_61637_err);
		};
	};
	jule::U64 _62410_mantissa;;
	jule::I32 _62420_exp;;
	jule::Bool _62425_neg;;
	jule::Bool _62430_trunc;;
	jule::Bool _62437_hex;;
	jule::I32 _62442__n;;
	jule::Bool _62450_ok;;
	std::tie(_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc,_62437_hex,_62442__n,_62450_ok) = _1e089001d_read_float(_61611_s);
	_61629_n=_62442__n;
	if ((!(_62450_ok))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		std::tie(_63117_ff,_61637_err) = _1e05ca286_atof_hex(_61611_s.slice(0LL,_61629_n),_1e05d2b62_F32_INFO,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
		_61621_f = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	{
		if ((!(_62430_trunc))) {
			std::tie(_61621_f,_62450_ok) = _1e05ca154_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
			if (_62450_ok) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
		std::tie(_61621_f,_62450_ok) = _1e0a016e0_eisel_lemire32(_62410_mantissa,_62420_exp,_62425_neg);
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
			jule::F32 _65321_f_up = 0LL;;
			std::tie(_65321_f_up,_62450_ok) = _1e0a016e0_eisel_lemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
			if ((_62450_ok && (_61621_f == _65321_f_up))) {
				_61637_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_61621_f,_61629_n,_61637_err);
			};
		};
	};
	_1e0be5ad2_Decimal _66213_d = _1e0be5ad2_Decimal{};;
	if ((!(_1e09ed5dd_set(&_66213_d, _61611_s.slice(0LL,_61629_n))))) {
		_61621_f = 0LL;
		_61637_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_61621_f,_61629_n,_61637_err);
	};
	jule::U64 _66610_b;;
	jule::Bool _66613_ovf;;
	std::tie(_66610_b,_66613_ovf) = _1e0792ea9_float_bits(&_66213_d, _1e05d2b62_F32_INFO);
	_61621_f=static_cast<jule::F32>(_1e0acbc82_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		_61637_err=static_cast<jule::I32>(1LL);
	};
	return std::make_tuple(_61621_f,_61629_n,_61637_err);
}



inline std::tuple<jule::F64,jule::I32,jule::I32> _1e076c37e_atof64(jule::Str _67411_s) {
	jule::F64 _67421_f = jule::F64();
	jule::I32 _67429_n = jule::I32();
	jule::I32 _67437_err = 0LL;
	{
		jule::F64 _67614_val;;
		jule::I32 _67619__n;;
		jule::Bool _67623_ok;;
		std::tie(_67614_val,_67619__n,_67623_ok) = _1e0796650_special(_67411_s);
		if (_67623_ok) {
			_67421_f = _67614_val;
			_67429_n = _67619__n;
			_67437_err = static_cast<jule::I32>(0LL);
			return std::make_tuple(_67421_f,_67429_n,_67437_err);
		};
	};
	jule::U64 _68210_mantissa;;
	jule::I32 _68220_exp;;
	jule::Bool _68225_neg;;
	jule::Bool _68230_trunc;;
	jule::Bool _68237_hex;;
	jule::I32 _68242__n;;
	jule::Bool _68250_ok;;
	std::tie(_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc,_68237_hex,_68242__n,_68250_ok) = _1e089001d_read_float(_67411_s);
	_67429_n=_68242__n;
	if ((!(_68250_ok))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	if (_68237_hex) {
		std::tie(_67421_f,_67437_err) = _1e05ca286_atof_hex(_67411_s.slice(0LL,_67429_n),_1e05dc650_F64_INFO,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	{
		if ((!(_68230_trunc))) {
			std::tie(_67421_f,_68250_ok) = _1e05ca022_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
			if (_68250_ok) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
		std::tie(_67421_f,_68250_ok) = _1e097c11b_eisel_lemire64(_68210_mantissa,_68220_exp,_68225_neg);
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
			jule::F64 _71021_f_up = 0LL;;
			std::tie(_71021_f_up,_68250_ok) = _1e097c11b_eisel_lemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
			if ((_68250_ok && (_67421_f == _71021_f_up))) {
				_67437_err = static_cast<jule::I32>(0LL);
				return std::make_tuple(_67421_f,_67429_n,_67437_err);
			};
		};
	};
	_1e0be5ad2_Decimal _71913_d = _1e0be5ad2_Decimal{};;
	if ((!(_1e09ed5dd_set(&_71913_d, _67411_s.slice(0LL,_67429_n))))) {
		_67421_f = 0LL;
		_67437_err = static_cast<jule::I32>(2LL);
		return std::make_tuple(_67421_f,_67429_n,_67437_err);
	};
	jule::U64 _72310_b;;
	jule::Bool _72313_ovf;;
	std::tie(_72310_b,_72313_ovf) = _1e0792ea9_float_bits(&_71913_d, _1e05dc650_F64_INFO);
	_67421_f=static_cast<jule::F64>(_1e0acc315_f64_from_bits(_72310_b));
	if (_72313_ovf) {
		_67437_err=static_cast<jule::I32>(1LL);
	};
	return std::make_tuple(_67421_f,_67429_n,_67437_err);
}



inline std::tuple<jule::F64,jule::I32,jule::I32> _1e076c4b1_parse_float_prefix(jule::Str _73123_s, jule::I32 _73131_bit_size) {
	if ((_73131_bit_size == 32LL)) {
		jule::F32 _73314_f;;
		jule::I32 _73317_n;;
		jule::I32 _73320_err;;
		std::tie(_73314_f,_73317_n,_73320_err) = _1e076c24c_atof32(_73123_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73314_f)),_73317_n,_73320_err);
	};
	jule::F64 _73710_f;;
	jule::I32 _73713_n;;
	jule::I32 _73716_err;;
	std::tie(_73710_f,_73713_n,_73716_err) = _1e076c37e_atof64(_73123_s);
	return std::make_tuple(_73710_f,_73713_n,_73716_err);
}



inline jule::Exceptional<jule::F64> _1e083d131_parse_float(jule::Str _76520_s, jule::I32 _76528_bit_size) {
	jule::F64 _76610_f;;
	jule::I32 _76613_n;;
	jule::I32 _76616_err;;
	std::tie(_76610_f,_76613_n,_76616_err) = _1e076c4b1_parse_float_prefix(_76520_s,_76528_bit_size);
	if (((_76613_n != _76520_s.len()) && ((_76616_err == static_cast<jule::I32>(0LL)) || (_76616_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I32>(2LL));
	};
	if ((_76616_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(_76616_err);
	};
	return jule::Exceptional<jule::F64>(jule::Any(),_76610_f);
}



inline void _1e083d43e_ryu_ftoa_fixed32(_1e09aeb76_DecimalSlice& _4926_d, jule::U32 _4947_mant, jule::I32 _4958_exp, jule::I32 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I32 _6213_e2 = _4958_exp;;
	jule::I32 _639_b = _1e0bb1383_len32(_4947_mant);;
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_1e0be4b36_mul_by_log2_log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di;;
	jule::I32 _8118_dexp2;;
	jule::Bool _8129_d0;;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1e0be5241_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e0be54a5_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>((_8114_di >> _949_extra)),static_cast<jule::U32>((_8114_di & _959_extra_mask)));
	jule::Bool _9913_round_up = false;;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e0be48c2_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1e0be4790_ryu_ftoa_fixed64(_1e09aeb76_DecimalSlice& _12126_d, jule::U64 _12147_mant, jule::I32 _12158_exp, jule::I32 _12168_prec) {
	if ((_12168_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12147_mant == 0LLU)) {
		std::tie(_12126_d._field_nd,_12126_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	jule::I32 _13113_e2 = _12158_exp;;
	jule::I32 _1329_b = _1e0bb162a_len64(_12147_mant);;
	if ((_1329_b < 55LL)) {
		_12147_mant=static_cast<jule::U64>((_12147_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_1e0be4b36_mul_by_log2_log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12168_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di;;
	jule::I32 _15318_dexp2;;
	jule::Bool _15329_d0;;
	std::tie(_15314_di,_15318_dexp2,_15329_d0) = _1e0be5373_mult128bit_pow10(_12147_mant,_13113_e2,_1469_q);
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e0be54a5_divisible_by_pow5(_12147_mant,static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extra_mask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	std::tie(_15314_di,_16913_dfrac) = std::make_tuple(static_cast<jule::U64>((_15314_di >> _1669_extra)),static_cast<jule::U64>((_15314_di & _1679_extra_mask)));
	jule::Bool _17113_round_up = false;;
	if (_15113_exact) {
		_17113_round_up=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_round_up=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e0be48c2_format_decimal(_12126_d,_15314_di,(!(_15329_d0)),_17113_round_up,_12168_prec);
	_12126_d._field_dp-=_1469_q;
}



inline void _1e0be48c2_format_decimal(_1e09aeb76_DecimalSlice& _20024_d, jule::U64 _20045_m, jule::Bool _20057_trunc, jule::Bool _20074_round_up, jule::I32 _20090_prec) {
	jule::U64 _2019_max = _1e06d16ab_U64_POW10[_20090_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20045_m >= _2019_max)) {
		{
			jule::U64 _20414_a = (_20045_m / 10LLU);;
			jule::U64 _20417_b = (_20045_m % 10LL);;
			std::tie(_20414_a,_20417_b) = std::make_tuple((_20045_m / 10LLU),(_20045_m % 10LL));
			_20045_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20074_round_up=true;
			} else if ((_20417_b < 5LLU)) {
				_20074_round_up=false;
			} else {
				_20074_round_up=(_20057_trunc || ((_20045_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20057_trunc=true;
			};
		}
	_iter_next_1ac7c3748:;
	}
	_iter_end_1ac7c3748:;;
	if (_20074_round_up) {
		(_20045_m)++;
	};
	if ((_20045_m >= _2019_max)) {
		_20045_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20090_prec);;
	_20024_d._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20090_prec));
	jule::U64 _23113_v = _20045_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL))));
			} else {
				std::tie(_23317_v1,_23417_v2) = std::make_tuple(static_cast<jule::U64>((_23113_v / 100LLU)),static_cast<jule::U64>((_23113_v % 100LL)));
			};
			_22913_n-=2LLU;
			_20024_d._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			_20024_d._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1ac7c4e64:;
	}
	_iter_end_1ac7c4e64:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20024_d._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while ((_20024_d._field_d[(_20024_d._field_nd - 1LL)] == '0')) {
		{
			(_20024_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1ac7cc28a:;
	}
	_iter_end_1ac7cc28a:;;
	_20024_d._field_dp=static_cast<jule::I32>((_20024_d._field_nd + _20213_trimmed));
}



inline void _1e0be4a04_ryu_ftoa_shortest(_1e09aeb76_DecimalSlice& _26127_d, jule::U64 _26148_mant, jule::I32 _26159_exp, _1e05cd5db_FloatInfo& _26170_flt) {
	if ((_26148_mant == 0LLU)) {
		std::tie(_26127_d._field_nd,_26127_d._field_dp) = std::make_tuple(0LL,0LL);
		return;;
	};
	if (((_26159_exp <= 0LL) && (_1e0baae1b_trailing_zeros64(_26148_mant) >= (-(_26159_exp))))) {
		_26148_mant>>=static_cast<jule::U32>((-(_26159_exp)));
		_1e0be4ecc_ryu_digits(_26127_d,_26148_mant,_26148_mant,_26148_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml;;
	jule::U64 _27314_mc;;
	jule::U64 _27318_mu;;
	jule::I32 _27326_e2;;
	std::tie(_27310_ml,_27314_mc,_27318_mu,_27326_e2) = _1e0be4d9a_compute_bounds(_26148_mant,_26159_exp,_26170_flt);
	if ((_27326_e2 == 0LL)) {
		_1e0be4ecc_ryu_digits(_26127_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I32 _2799_q = (_1e0be4b36_mul_by_log2_log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26170_flt == _1e05d2b62_F32_INFO)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		std::tie(_29017_dl32,std::ignore,_28613_dl0) = _1e0be5241_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
		std::tie(_29117_dc32,std::ignore,_28713_dc0) = _1e0be5241_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
		std::tie(_29217_du32,_27326_e2,_28813_du0) = _1e0be5241_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
		std::tie(_28313_dl,_28413_dc,_28513_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32)));
	} else {
		std::tie(_28313_dl,std::ignore,_28613_dl0) = _1e0be5373_mult128bit_pow10(_27310_ml,_27326_e2,_2799_q);
		std::tie(_28413_dc,std::ignore,_28713_dc0) = _1e0be5373_mult128bit_pow10(_27314_mc,_27326_e2,_2799_q);
		std::tie(_28513_du,_27326_e2,_28813_du0) = _1e0be5373_mult128bit_pow10(_27318_mu,_27326_e2,_2799_q);
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		std::tie(_28613_dl0,_28713_dc0,_28813_du0) = std::make_tuple(false,false,false);
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e0be54a5_divisible_by_pow5(_27310_ml,static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e0be54a5_divisible_by_pow5(_27314_mc,static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e0be54a5_divisible_by_pow5(_27318_mu,static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extra_mask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	std::tie(_28313_dl,_32813_fracl) = std::make_tuple(static_cast<jule::U64>((_28313_dl >> _3259_extra)),static_cast<jule::U64>((_28313_dl & _3269_extra_mask)));
	jule::U64 _33013_fracc = 0LLU;;
	std::tie(_28413_dc,_33013_fracc) = std::make_tuple(static_cast<jule::U64>((_28413_dc >> _3259_extra)),static_cast<jule::U64>((_28413_dc & _3269_extra_mask)));
	jule::U64 _33213_fracu = 0LLU;;
	std::tie(_28513_du,_33213_fracu) = std::make_tuple(static_cast<jule::U64>((_28513_du >> _3259_extra)),static_cast<jule::U64>((_28513_du & _3269_extra_mask)));
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26148_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26148_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e0be4ecc_ryu_digits(_26127_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26127_d._field_dp-=_2799_q;
}



inline jule::I32 _1e0be4b36_mul_by_log2_log10(jule::I32 _37722_x) {
	return static_cast<jule::I32>(((_37722_x * 78913LL) >> 18LL));
}



inline jule::I32 _1e0be4c68_mul_by_log10_log2(jule::I32 _38722_x) {
	return static_cast<jule::I32>(((_38722_x * 108853LL) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I32> _1e0be4d9a_compute_bounds(jule::U64 _39519_mant, jule::I32 _39530_exp, _1e05cd5db_FloatInfo& _3966_flt) {
	jule::U64 _39624_lower = jule::U64();
	jule::U64 _39636_central = jule::U64();
	jule::U64 _39650_upper = jule::U64();
	jule::I32 _39662_e2 = jule::I32();
	if (((_39519_mant != (1LLU << _3966_flt._field_mantbits)) || (_39530_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I32>(_3966_flt._field_mantbits))))) {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((2LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((2LLU * _39519_mant)),static_cast<jule::U64>(((2LLU * _39519_mant) + 1LLU)));
		_39662_e2=static_cast<jule::I32>((_39530_exp - 1LL));
	} else {
		std::tie(_39624_lower,_39636_central,_39650_upper) = std::make_tuple(static_cast<jule::U64>(((4LLU * _39519_mant) - 1LLU)),static_cast<jule::U64>((4LLU * _39519_mant)),static_cast<jule::U64>(((4LLU * _39519_mant) + 2LLU)));
		_39662_e2=static_cast<jule::I32>((_39530_exp - 2LL));
	};
	return std::make_tuple(_39624_lower,_39636_central,_39650_upper,_39662_e2);
}



inline void _1e0be4ecc_ryu_digits(_1e09aeb76_DecimalSlice& _40920_d, jule::U64 _40937_lower, jule::U64 _40949_central, jule::U64 _40963_upper, jule::Bool _40979_c0, jule::Bool _40993_cup) {
	jule::U32 _41014_lhi;;
	jule::U32 _41019_llo;;
	std::tie(_41014_lhi,_41019_llo) = _1e0be55d7_divmod1e9(_40937_lower);
	jule::U32 _41110_chi;;
	jule::U32 _41115_clo;;
	std::tie(_41110_chi,_41115_clo) = _1e0be55d7_divmod1e9(_40949_central);
	jule::U32 _41210_uhi;;
	jule::U32 _41215_ulo;;
	std::tie(_41210_uhi,_41215_ulo) = _1e0be55d7_divmod1e9(_40963_upper);
	if ((_41210_uhi == 0LLU)) {
		_1e0be510e_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40979_c0=(_40979_c0 && (_41115_clo == 0LLU));
		_40993_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40993_cup));
		_1e0be510e_ryu_digits32(_40920_d,_41014_lhi,_41110_chi,_41210_uhi,_40979_c0,_40993_cup,8LL);
		_40920_d._field_dp+=9LL;
	} else {
		_40920_d._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = (_42917_v / 10LLU);;
				jule::U32 _43122_v2 = (_42917_v % 10LL);;
				std::tie(_43118_v1,_43122_v2) = std::make_tuple((_42917_v / 10LLU),(_42917_v % 10LL));
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40920_d._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1ac7ecee2:;
		}
		_iter_end_1ac7ecee2:;;
		_40920_d._field_d=_40920_d._field_d.slice(static_cast<jule::I32>(_42817_n));
		_40920_d._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_1e0be510e_ryu_digits32(_40920_d,_41019_llo,_41115_clo,_41215_ulo,_40979_c0,_40993_cup,static_cast<jule::I32>((_40920_d._field_nd + 8LL)));
	};
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[(_40920_d._field_nd - 1LL)] == '0'))) {
		{
			(_40920_d._field_nd)--;
		}
	_iter_next_1ac8002be:;
	}
	_iter_end_1ac8002be:;;
	while (((_40920_d._field_nd > 0LL) && (_40920_d._field_d[0LL] == '0'))) {
		{
			(_40920_d._field_nd)--;
			(_40920_d._field_dp)--;
			_40920_d._field_d=_40920_d._field_d.slice(1LL);
		}
	_iter_next_1ac7eb056:;
	}
	_iter_end_1ac7eb056:;;
}



inline void _1e0be510e_ryu_digits32(_1e09aeb76_DecimalSlice& _45422_d, jule::U32 _45443_lower, jule::U32 _45459_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45422_d._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_c_next_digit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45443_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = (_45459_central / 10LLU);;
			jule::U32 _47125_cdigit = (_45459_central % 10LL);;
			std::tie(_47118_c,_47125_cdigit) = std::make_tuple((_45459_central / 10LLU),(_45459_central % 10LL));
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1ac8049bb;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_c_next_digit == 0LL));
			_46313_c_next_digit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			std::tie(_45443_lower,_45459_central,_4559_upper) = std::make_tuple(_47013_l,_47118_c,_47213_u);
		}
	_iter_next_1ac8049bb:;
	}
	_iter_end_1ac8049bb:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_c_next_digit > 5LL) || ((_46313_c_next_digit == 5LL) && (!(_45525_c0)))) || (((_46313_c_next_digit == 5LL) && _45525_c0) && ((_45459_central & 1LLU) == 1LLU)));
	};
	if (((_45459_central < _4559_upper) && _45539_cup)) {
		(_45459_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45459_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > _45422_d._field_nd)) {
		{
			jule::U32 _51214_v1 = (_50913_v / 100LLU);;
			jule::U32 _51218_v2 = (_50913_v % 100LL);;
			std::tie(_51214_v1,_51218_v2) = std::make_tuple((_50913_v / 100LLU),(_50913_v % 100LL));
			_45422_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			_45422_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1ac80966e:;
	}
	_iter_end_1ac80966e:;;
	if ((_51013_n == _45422_d._field_nd)) {
		_45422_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45422_d._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	_45422_d._field_dp=static_cast<jule::I32>((_45422_d._field_nd + _46013_trimmed));
}



inline std::tuple<jule::U32,jule::I32,jule::Bool> _1e0be5241_mult64bit_pow10(jule::U32 _53420_m, jule::I32 _53432_e2, jule::I32 _53441_q) {
	jule::U32 _53451_resM = jule::U32();
	jule::I32 _53462_resE = jule::I32();
	jule::Bool _53473_exact = jule::Bool();
	if ((_53441_q == 0LL)) {
		_53451_resM = static_cast<jule::U32>((_53420_m << 6LLU));
		_53462_resE = static_cast<jule::I32>((_53432_e2 - 6LL));
		_53473_exact = true;
		return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
	};
	if (((_53441_q < -348LL) || (347LL < _53441_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e063d54c_DETAILED_POWS_OF_TEN[(_53441_q - -348LL)][1LL];;
	if ((_53441_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi;;
	jule::U64 _54814_lo;;
	std::tie(_54810_hi,_54814_lo) = _1e0bb396d_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53420_m)),_54313_pow);
	_53432_e2+=((_1e0be4c68_mul_by_log10_log2(_53441_q) - 63LL) + 57LL);
	_53451_resM = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	_53462_resE = _53432_e2;
	_53473_exact = ((_54814_lo << 7LLU) == 0LLU);
	return std::make_tuple(_53451_resM,_53462_resE,_53473_exact);
}



inline std::tuple<jule::U64,jule::I32,jule::Bool> _1e0be5373_mult128bit_pow10(jule::U64 _56221_m, jule::I32 _56233_e2, jule::I32 _56242_q) {
	jule::U64 _56252_resM = jule::U64();
	jule::I32 _56263_resE = jule::I32();
	jule::Bool _56274_exact = jule::Bool();
	if ((_56242_q == 0LL)) {
		_56252_resM = static_cast<jule::U64>((_56221_m << 8LLU));
		_56263_resE = static_cast<jule::I32>((_56233_e2 - 8LL));
		_56274_exact = true;
		return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
	};
	if (((_56242_q < -348LL) || (347LL < _56242_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e063d54c_DETAILED_POWS_OF_TEN[(_56242_q - -348LL)];;
	if ((_56242_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56233_e2+=((_1e0be4c68_mul_by_log10_log2(_56242_q) - 127LL) + 119LL);
	jule::U64 _57910_l1;;
	jule::U64 _57914_l0;;
	std::tie(_57910_l1,_57914_l0) = _1e0bb396d_mul64(_56221_m,_57113_pow[0LL]);
	jule::U64 _58014_h1;;
	jule::U64 _58018_h0;;
	std::tie(_58014_h1,_58018_h0) = _1e0bb396d_mul64(_56221_m,_57113_pow[1LL]);
	jule::U64 _58110_mid;;
	jule::U64 _58115_carry;;
	std::tie(_58110_mid,_58115_carry) = _1e0bb22da_add64(_57910_l1,_58018_h0,0LLU);
	_58014_h1+=_58115_carry;
	_56252_resM = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	_56263_resE = _56233_e2;
	_56274_exact = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return std::make_tuple(_56252_resM,_56263_resE,_56274_exact);
}



inline jule::Bool _1e0be54a5_divisible_by_pow5(jule::U64 _58626_m, jule::I32 _58634_k) {
	if ((_58626_m == 0LLU)) {
		return true;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58634_k); (_59013_i)++) {
		{
			if (((_58626_m % 5LL) != 0LLU)) {
				return false;
			};
			_58626_m/=5LLU;
		}
	_iter_next_1ac816abb:;
	}
	_iter_end_1ac816abb:;;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1e0be55d7_divmod1e9(jule::U64 _60214_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL))));
	};
}



inline void _1e0be663d_trim(_1e0be5ad2_Decimal& _33314_a) {
	while (((_33314_a._field_nd > 0LL) && (_33314_a._field_d[(_33314_a._field_nd - 1LL)] == '0'))) {
		{
			(_33314_a._field_nd)--;
		}
	_iter_next_1ac81ce68:;
	}
	_iter_end_1ac81ce68:;;
	if ((_33314_a._field_nd == 0LL)) {
		_33314_a._field_dp=0LL;
	};
}



inline void _1e0be6770_right_shift(_1e0be5ad2_Decimal& _34321_a, jule::U32 _34333_k) {
	jule::I32 _34413_r = 0LL;;
	jule::I32 _34513_w = 0LL;;
	jule::U32 _34813_n = 0LLU;;
	for (; ((_34813_n >> _34333_k) == 0LLU); (_34413_r)++) {
		{
			if ((_34413_r >= _34321_a._field_nd)) {
				if ((_34813_n == 0LLU)) {
					_34321_a._field_nd=0LL;
					return;;
				};
				while (((_34813_n >> _34333_k) == 0LLU)) {
					{
						_34813_n=static_cast<jule::U32>((_34813_n * 10LLU));
						(_34413_r)++;
					}
				_iter_next_1ac821565:;
				}
				_iter_end_1ac821565:;;
				goto _iter_end_1ac81e4ca;
			};
			jule::U32 _36213_c = static_cast<jule::U32>(_34321_a._field_d[_34413_r]);;
			_34813_n=static_cast<jule::U32>((((_34813_n * 10LLU) + _36213_c) - '0'));
		}
	_iter_next_1ac81e4ca:;
	}
	_iter_end_1ac81e4ca:;;
	_34321_a._field_dp-=(_34413_r - 1LL);
	jule::U32 _3679_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _34333_k)) - 1LLU));;
	for (; (_34413_r < _34321_a._field_nd); (_34413_r)++) {
		{
			jule::U32 _37113_c = static_cast<jule::U32>(_34321_a._field_d[_34413_r]);;
			jule::U32 _37213_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_37213_dig + '0')));
			(_34513_w)++;
			_34813_n=static_cast<jule::U32>((((_34813_n * 10LLU) + _37113_c) - '0'));
		}
	_iter_next_1ac823523:;
	}
	_iter_end_1ac823523:;;
	while ((_34813_n > 0LLU)) {
		{
			jule::U32 _38113_dig = (_34813_n >> _34333_k);;
			_34813_n&=_3679_mask;
			if ((_34513_w < 800LL)) {
				_34321_a._field_d[_34513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38113_dig + '0')));
				(_34513_w)++;
			} else if ((_38113_dig > 0LLU)) {
				_34321_a._field_trunc=true;
			};
			_34813_n=static_cast<jule::U32>((_34813_n * 10LLU));
		}
	_iter_next_1ac8241d3:;
	}
	_iter_end_1ac8241d3:;;
	_34321_a._field_nd=_34513_w;
	_1e0be663d_trim(_34321_a);
}



inline jule::Bool _1e0be68a2_prefix_is_less_than(jule::Array<jule::U8,800> _39724_b, jule::I32 _39738_end, jule::Str _39748_s) {
	jule::I32 _39813_i = 0LL;;
	for (; (_39813_i < _39748_s.len()); (_39813_i)++) {
		{
			if ((_39813_i >= _39738_end)) {
				return true;
			};
			if ((_39724_b[_39813_i] != _39748_s[_39813_i])) {
				return (_39724_b[_39813_i] < _39748_s[_39813_i]);
			};
		}
	_iter_next_1ac827c97:;
	}
	_iter_end_1ac827c97:;;
	return false;
}



inline void _1e0be69d4_left_shift(_1e0be5ad2_Decimal& _41120_a, jule::U32 _41132_k) {
	jule::I32 _41213_delta = _1e079475d_LEFTCHEATS[static_cast<jule::I32>(_41132_k)]._field_delta;;
	if (_1e0be68a2_prefix_is_less_than(_41120_a._field_d,_41120_a._field_nd,_1e079475d_LEFTCHEATS[static_cast<jule::I32>(_41132_k)]._field_cutoff)) {
		(_41213_delta)--;
	};
	jule::I32 _41713_r = _41120_a._field_nd;;
	jule::I32 _41813_w = (_41120_a._field_nd + _41213_delta);;
	jule::U32 _42113_n = 0LLU;;
	(_41713_r)--;
	for (; (_41713_r >= 0LL); (_41713_r)--) {
		{
			_42113_n+=((static_cast<jule::U32>(_41120_a._field_d[_41713_r]) - '0') << _41132_k);
			jule::U32 _42513_quo = (_42113_n / 10LLU);;
			jule::U32 _42613_rem = (_42113_n - (10LLU * _42513_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_42613_rem + '0')));
			} else if ((_42613_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_42513_quo;
		}
	_iter_next_1ac82b54d:;
	}
	_iter_end_1ac82b54d:;;
	while ((_42113_n > 0LLU)) {
		{
			jule::U32 _43813_quo = (_42113_n / 10LLU);;
			jule::U32 _43913_rem = (_42113_n - (10LLU * _43813_quo));;
			(_41813_w)--;
			if ((_41813_w < 800LL)) {
				_41120_a._field_d[_41813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_43913_rem + '0')));
			} else if ((_43913_rem != 0LLU)) {
				_41120_a._field_trunc=true;
			};
			_42113_n=_43813_quo;
		}
	_iter_next_1ac82b7c3:;
	}
	_iter_end_1ac82b7c3:;;
	_41120_a._field_nd+=_41213_delta;
	if ((_41120_a._field_nd >= 800LL)) {
		_41120_a._field_nd=800LL;
	};
	_41120_a._field_dp+=_41213_delta;
	_1e0be663d_trim(_41120_a);
}



inline jule::Bool _1e0be6b16_should_round_up(_1e0be5ad2_Decimal& _45821_a, jule::I32 _45833_nd) {
	if (((_45833_nd < 0LL) || (_45833_nd >= _45821_a._field_nd))) {
		return false;
	};
	if (((_45821_a._field_d[_45833_nd] == '5') && ((_45833_nd + 1LL) == _45821_a._field_nd))) {
		if (_45821_a._field_trunc) {
			return true;
		};
		return ((_45833_nd > 0LL) && (((_45821_a._field_d[(_45833_nd - 1LL)] - '0') & 1LL) != 0LLU));
	};
	return (_45821_a._field_d[_45833_nd] >= '5');
}



inline jule::Str _1e0be6e24_fmt_uint(jule::U64 _6017_i, jule::I32 _6025_base) {
	if (((true && (_6017_i < 100LLU)) && (_6025_base == 10LL))) {
		return _1e0be72ba_small(static_cast<jule::I32>(static_cast<jule::I32>(_6017_i)));
	};
	jule::Str _6413_s;;
	std::tie(std::ignore,_6413_s) = _1e0be752e_fmt_bits(nullptr,_6017_i,_6025_base,false,false);
	return _6413_s;
}



inline jule::Str _1e0be7056_fmt_int(jule::I64 _7116_i, jule::I32 _7124_base) {
	if ((((true && (0LL <= _7116_i)) && (_7116_i < 100LL)) && (_7124_base == 10LL))) {
		return _1e0be72ba_small(static_cast<jule::I32>(static_cast<jule::I32>(_7116_i)));
	};
	jule::Str _7513_s;;
	std::tie(std::ignore,_7513_s) = _1e0be752e_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7116_i)),_7124_base,(_7116_i < 0LL),false);
	return _7513_s;
}



inline jule::Str _1e0be7188_itoa(jule::I32 _8013_i) {
	return _1e0be7056_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8013_i)),10LL);
}



inline jule::Str _1e0be72ba_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));
}



inline jule::Bool _1e0be73ec_is_power_of_two(jule::I32 _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1e0be752e_fmt_bits(jule::Slice<jule::U8> _10117_dst, jule::U64 _10134_u, jule::I32 _10142_base, jule::Bool _10153_neg, jule::Bool _10164_append_) {
	jule::Slice<jule::U8> _10181_d = jule::Slice<jule::U8>();
	jule::Str _10192_s = jule::Str();
	if (((_10142_base < 2LL) || (_10142_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10153_neg) {
		_10134_u=static_cast<jule::U64>((-(_10134_u)));
	};
	if ((_10142_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10134_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_1ac872cc0:;
		}
		_iter_end_1ac872cc0:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_1e0be73ec_is_power_of_two(_10142_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1e0baa305_trailing_zeros(static_cast<jule::U32>(static_cast<jule::U32>(_10142_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10142_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10142_base) - 1LLU);;
		while ((_10134_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10134_u) & _17613_m))]);
				_10134_u>>=_17413_shift;
			}
		_iter_next_1ac87a46a:;
		}
		_iter_end_1ac87a46a:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10142_base);;
		while ((_10134_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10134_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10134_u - (_19317_q * _18713_b))))]);
				_10134_u=_19317_q;
			}
		_iter_next_1ac87c769:;
		}
		_iter_end_1ac87c769:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10134_u))]);
	};
	if (_10153_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10164_append_) {
		_10181_d=jule::append(_10117_dst,_10713_a.slice(_10813_i));
		return std::make_tuple(_10181_d,_10192_s);
	};
	_10192_s=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return std::make_tuple(_10181_d,_10192_s);
}



inline void _1e0d5710b_lshift_unsig(_1e0d4da1a_Const& _58722_c, _1e0d4da1a_Const& _58733_x) {
	jule::U64 _5889_l = _1e0d5115a_as_u64(&_58722_c);;
	jule::U64 _5899_r = _1e0d5115a_as_u64(&_58733_x);;
	_1e0d518b9_set_u64(&_58722_c, static_cast<jule::U64>((_5889_l << _5899_r)));
}



inline void _1e0d57408_rshift_unsig(_1e0d4da1a_Const& _59322_c, _1e0d4da1a_Const& _59333_x) {
	jule::U64 _5949_l = _1e0d5115a_as_u64(&_59322_c);;
	jule::U64 _5959_r = _1e0d5115a_as_u64(&_59333_x);;
	_1e0d518b9_set_u64(&_59322_c, static_cast<jule::U64>((_5949_l >> _5959_r)));
}



inline jule::Str _1e0ddda88_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac906150:;
			{
				return _1e0ddd1c5_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac9061b6:;
			{
				return _1e0ddd3b2_SYS_UINT;
			}
		}
		else {
			_case_begin_1ac9060d9:;
			{
				return _4521_kind;
			}
		}
		_match_end_1ac90105c:;
	};
}



inline jule::I32 _1e0dddd30_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac9071d9:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac906edb:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac907052:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac9070b8:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1ac906d65:;
			{
				return _1e0ddd01b_BIT_SIZE;
			}
		}
		else {
			_case_begin_1ac901205:;
			{
				return -1LL;
			}
		}
		_match_end_1ac901326:;
	};
}



inline jule::Str _1e0dde11b_int_from_bits(jule::I32 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ac909186:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ac9072c7:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ac90733d:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac9073a4:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1ac90895a:;
			{
				return jule::Str();
			}
		}
		_match_end_1ac908a37:;
	};
}



inline jule::Str _1e0dde3b3_uint_from_bits(jule::I32 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1ac90a5d8:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1ac909274:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ac9092da:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac909351:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1ac909e12:;
			{
				return jule::Str();
			}
		}
		_match_end_1ac909d79:;
	};
}



inline jule::Str _1e0dde65a_float_from_bits(jule::I32 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1ac90ba18:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1ac90a6c6:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1ac90ae9b:;
			{
				return jule::Str();
			}
		}
		_match_end_1ac90b2cb:;
	};
}



inline jule::Bool _1e0de01b6_check_bit_float(jule::Str _15024_val, jule::I32 _15034_bit) {
	({
		auto except = _1e083d131_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I32 _1e0de045d_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1ac911ca4:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ac9119eb:;
			{
				return 64LL;
			}
		}
		_match_end_1ac911930:;
	};
}



inline jule::I32 _1e0de0705_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if (((-128LL <= _17623_x) && (_17623_x <= 127LL))) {
			_case_begin_1ac912b2e:;
			{
				return 8LL;
			}
		}
		else if (((-32768LL <= _17623_x) && (_17623_x <= 32767LL))) {
			_case_begin_1ac912b95:;
			{
				return 16LL;
			}
		}
		else if (((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL))) {
			_case_begin_1ac912c50:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ac9128ed:;
			{
				return 64LL;
			}
		}
		_match_end_1ac912689:;
	};
}



inline jule::I32 _1e0de099c_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1ac914977:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1ac9149dd:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1ac914a98:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1ac9147ac:;
			{
				return 64LL;
			}
		}
		_match_end_1ac914713:;
	};
}



inline void _1e0de0b12_update_target(void) {
	{
		{
			auto &_match_expr{ _1dd67de96_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1ac914b20:;
				{
					_1e0ddd01b_BIT_SIZE=64LL;
					_1e0ddd1c5_SYS_INT=jule::Str("i64", 3);
					_1e0ddd3b2_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1ac915b87:;
				{
					_1e0ddd01b_BIT_SIZE=32LL;
					_1e0ddd1c5_SYS_INT=jule::Str("i32", 3);
					_1e0ddd3b2_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1ac915b32:;
		};
	};
}



inline void _1e0de0c77_init(void) {
	_1e0de0b12_update_target();
}



inline jule::F64 _1e0de41cb_min(jule::Str _6116_k) {
	_6116_k=_1e0ddda88_real_kind_of(_6116_k);
	{
		auto &_match_expr{ _6116_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac9187b1:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac9185c4:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac91863a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac91844d:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac9184b4:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac91852a:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1ac916182:;
			{
				return 0LL;
			}
		}
		_match_end_1ac916094:;
	};
}



inline jule::F64 _1e0de44b7_max(jule::Str _8316_k) {
	_8316_k=_1e0ddda88_real_kind_of(_8316_k);
	{
		auto &_match_expr{ _8316_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac91a3c8:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac91a43e:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac91a252:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac91a2b8:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac91a32e:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac919d9a:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac919e11:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac919e77:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac919edd:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac91a64d:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1ac918261:;
			{
				return 0LL;
			}
		}
		_match_end_1ac918849:;
	};
}



inline jule::Bool _1e0de494b_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1e0de4c37_is_i16_compatible(jule::Str _1130_k) {
	return ((_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e0de4ece_is_i32_compatible(jule::Str _1730_k) {
	return ((((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2)));
}



inline jule::Bool _1e0de52ba_is_i64_compatible(jule::Str _2530_k) {
	return ((((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3)));
}



inline jule::Bool _1e0de5562_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1e0de5809_is_u16_compatible(jule::Str _3830_k) {
	return ((_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e0de5aa1_is_u32_compatible(jule::Str _4330_k) {
	return (((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e0de5dd1_is_u64_compatible(jule::Str _5030_k) {
	return ((((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3)));
}



inline jule::Bool _1e0de6178_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1e0de6420_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1e0de6761_types_are_compatible(jule::Str _7033_k1, jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac923b1d:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac923b84:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac923c3e:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac923ca5:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ac9236de:;
			{
				return _1e0de494b_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac923755:;
			{
				return _1e0de4c37_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac9237bb:;
			{
				return _1e0de4ece_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac923832:;
			{
				return _1e0de52ba_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ac923d4e:;
			{
				return _1e0de5562_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac923db5:;
			{
				return _1e0de5809_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac923e2b:;
			{
				return _1e0de5aa1_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac923ea3:;
			{
				return _1e0de5dd1_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac92402a:;
			{
				return _1e0de6178_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac9240a2:;
			{
				return _1e0de6420_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1ac924129:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1ac9241a1:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1ac922b50:;
			{
				return false;
			}
		}
		_match_end_1ac923546:;
	};
}



inline jule::Bool _1e0de6a08_is_i16_greater(jule::Str _11027_k) {
	return (_11027_k == jule::Str("i8", 2));
}



inline jule::Bool _1e0de6ca0_is_i32_greater(jule::Str _11527_k) {
	return ((_11527_k == jule::Str("i8", 2)) || (_11527_k == jule::Str("i16", 3)));
}



inline jule::Bool _1e0de7047_is_i64_greater(jule::Str _12027_k) {
	return (((_12027_k == jule::Str("i8", 2)) || (_12027_k == jule::Str("i16", 3))) || (_12027_k == jule::Str("i32", 3)));
}



inline jule::Bool _1e0de72de_is_u16_greater(jule::Str _12727_k) {
	return (_12727_k == jule::Str("u8", 2));
}



inline jule::Bool _1e0de76a7_is_u32_greater(jule::Str _13227_k) {
	return ((_13227_k == jule::Str("u8", 2)) || (_13227_k == jule::Str("u16", 3)));
}



inline jule::Bool _1e0de794e_is_u64_greater(jule::Str _13827_k) {
	return (((_13827_k == jule::Str("u8", 2)) || (_13827_k == jule::Str("u16", 3))) || (_13827_k == jule::Str("u32", 3)));
}



inline jule::Bool _1e0de7be6_is_f32_greater(jule::Str _14523_k) {
	return (_14523_k != jule::Str("f64", 3));
}



inline jule::Bool _1e0de7e8d_is_f64_greater(jule::Str _15023_k) {
	return true;
}



inline jule::Bool _1e0de82ce_is_greater(jule::Str _15523_k1, jule::Str _15532_k2) {
	{
		auto &_match_expr{ _15523_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ac92ca8e:;
			{
				return _1e0de9423_is_sig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ac92cb05:;
			{
				return _1e0de970e_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1ac92c808:;
			{
				return _1e0de970e_is_unsig_int(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ac92c86e:;
			{
				return _1e0de6a08_is_i16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ac92c8d5:;
			{
				return _1e0de6ca0_is_i32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ac92c583:;
			{
				return _1e0de7047_is_i64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ac92c5e9:;
			{
				return _1e0de72de_is_u16_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ac92c671:;
			{
				return _1e0de76a7_is_u32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ac92c6e8:;
			{
				return _1e0de794e_is_u64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ac92cbb0:;
			{
				return _1e0de7be6_is_f32_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ac92cc37:;
			{
				return _1e0de7e8d_is_f64_greater(_15532_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1ac92ccae:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ac92c1cb:;
			{
				return false;
			}
		}
		_match_end_1ac9290da:;
	};
}



inline jule::Bool _1e0de9423_is_sig_int(jule::Str _2723_k) {
	return (((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3)));
}



inline jule::Bool _1e0de970e_is_unsig_int(jule::Str _3625_k) {
	return ((((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7)));
}



inline jule::Bool _1e0de99a6_is_int(jule::Str _4615_k) {
	return (_1e0de9423_is_sig_int(_4615_k) || _1e0de970e_is_unsig_int(_4615_k));
}



inline jule::Bool _1e0de9c92_is_float(jule::Str _5117_k) {
	return ((_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3)));
}



inline jule::Bool _1e0dea039_is_num(jule::Str _5615_k) {
	return (_1e0de99a6_is_int(_5615_k) || _1e0de9c92_is_float(_5615_k));
}



inline jule::Bool _1e0e66061_is_ascii(jule::I32 _1017_r) {
	;
	return (_1017_r <= 127LL);
}



inline jule::I32 _1e0e67a35_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1e0e68508_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1dc58b800_decode_rune(_1816_bytes);
	};
	return _2313_r;
}



inline jule::Str _1e0e67b67_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1e0e67e20_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,_4215_bytes.len());;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4215_bytes.len())) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1e0e68849_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;;
				jule::I32 _5421_size;;
				std::tie(_5418_r,_5421_size) = _1dc58b800_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1dc58cadc_append_rune(_4713_s,_5418_r);
			};
		}
	_iter_next_1ac93b3d8:;
	}
	_iter_end_1ac93b3d8:;;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1e0e681b7_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if (((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\'))) {
		return std::make_tuple(_6241_seq,_6252_ok);
	};
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ac93e9b3:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ac940552:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ac9405b8:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ac94062e:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ac940695:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ac94070b:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ac940783:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ac94080a:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ac940882:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ac940909:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1ac940431:;
	};
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1e0e68508_rune_from_esq_seq(jule::Slice<jule::U8> _9422_bytes, jule::I32& _9442_i) {
	jule::U8 _9510_b;;
	jule::Bool _9513_ok;;
	std::tie(_9510_b,_9513_ok) = _1e0e681b7_try_btoa_common_esq(_9422_bytes.slice(_9442_i));
	(_9442_i)++;
	if (_9513_ok) {
		(_9442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9510_b));
	};
	{
		auto &_match_expr{ _9422_bytes[_9442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1ac945e70:;
			{
				;
				jule::I32 _10513_r = static_cast<jule::I32>(({
					auto except = _1e08d7d46_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:105:22"));
					(except.result);
				}));;
				_9442_i+=5LL;
				return _10513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ac945b40:;
			{
				;
				jule::I32 _11013_r = static_cast<jule::I32>(({
					auto except = _1e08d7d46_parse_uint(static_cast<jule::Str>(_9422_bytes.slice((_9442_i + 1LL),(_9442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:110:22"));
					(except.result);
				}));;
				_9442_i+=9LL;
				return _11013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ac945ba6:;
			{
				;
				jule::Slice<jule::U8> _11513_seq = _9422_bytes.slice((_9442_i + 1LL),(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e08d7d46_parse_uint(static_cast<jule::Str>(_11513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:117:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1ac944c0a:;
			{
				;
				jule::Slice<jule::U8> _12013_seq = _9422_bytes.slice(_9442_i,(_9442_i + 3LL));;
				_9442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e08d7d46_parse_uint(static_cast<jule::Str>(_12013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:122:18"));
					(except.result);
				})));
			}
		}
		_match_end_1ac944578:;
	};
}



inline jule::Slice<jule::U8> _1e0e68849_str_esq_seq(jule::Slice<jule::U8> _12616_bytes, jule::I32& _12636_i) {
	jule::I32 _1279_r = _1e0e68508_rune_from_esq_seq(_12616_bytes,_12636_i);;
	if ((_1279_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1279_r))});
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1279_r));
}



inline jule::I32 _1ed8066e6_find_format_prefix(jule::Slice<jule::U8>& _924_bytes, jule::I32& _940_start) {
	jule::I32 _1013_i = _940_start;;
	while ((_1013_i < _924_bytes.len())) {
		{
			jule::I32 _1214_r;;
			jule::I32 _1217_size;;
			std::tie(_1214_r,_1217_size) = _1dc58b800_decode_rune(_924_bytes.slice(_1013_i));
			if ((_1214_r == '{')) {
				return _1013_i;
			};
			_1013_i+=_1217_size;
		}
	_iter_next_1ac97d958:;
	}
	_iter_end_1ac97d958:;;
	return -1LL;
}



inline jule::Slice<jule::U8> _1ed810854_get_format_range(jule::I32& _2630_i, jule::Slice<jule::U8>& _2643_bytes) {
	jule::I32 _279_start = _2630_i;;
	jule::I32 _2813_braces = 0LL;;
	while ((_2630_i < _2643_bytes.len())) {
		{
			jule::I32 _3014_r;;
			jule::I32 _3017_size;;
			std::tie(_3014_r,_3017_size) = _1dc58b800_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1ac981e56:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ac982011:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						};
					}
				}
				_match_end_1ac981e01:;
			};
		}
	_iter_next_1ac9810a9:;
	}
	_iter_end_1ac9810a9:;;
	return nullptr;
}



inline jule::Slice<jule::U8> _1ed826b45_fmt_by_default(jule::Any& _4520_arg) {
	if ((_4520_arg == nullptr)) {
		return jule::Slice<jule::U8>::make({'<','n','i','l','>'});
	};
	{
		auto &_match_expr{ _4520_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1ac983dd1:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e060281e_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4520_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1ac983a29:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e060281e_fmt_float(static_cast<jule::F64>(_4520_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1ac983144:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be7056_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1ac98371b:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be7056_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1ac983782:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be7056_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1ac983809:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be7056_fmt_int(static_cast<jule::I64>(_4520_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1ac983870:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be6e24_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1ac98110e:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be6e24_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1ac981175:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be6e24_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1ac9811db:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1e0be6e24_fmt_uint(static_cast<jule::U64>(_4520_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1ac981252:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4520_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1ac983e69:;
			{
				if (_4520_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>::make({'t','r','u','e'});
				};
				return jule::Slice<jule::U8>::make({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1ac98220e:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4520_arg));
			}
		}
		_match_end_1ac9835ea:;
	};
}



inline jule::Slice<jule::U8> _1ed82a3b8_apply_fmt_by_default(jule::I32& _8330_j, jule::Slice<jule::Any>& _8339_args) {
	jule::Any _849_arg = _8339_args[_8330_j];;
	(_8330_j)++;
	return _1ed826b45_fmt_by_default(_849_arg);
}



inline jule::Slice<jule::U8> _1ed8130b5_apply_fmt(jule::Slice<jule::U8>& _9119_fmt, jule::I32& _9137_j, jule::Slice<jule::Any>& _9146_args) {
	if ((_9119_fmt.len() == 2LL)) {
		return _1ed82a3b8_apply_fmt_by_default(_9137_j,_9146_args);
	};
	if (((_9119_fmt.len() == 4LL) && (_9119_fmt == jule::Slice<jule::U8>::make({'{','{','}','}'})))) {
		return jule::Slice<jule::U8>::make({'{','}'});
	};
	return _9119_fmt;
}



inline jule::Slice<jule::U8> _1ed8075b5_format_bytes(jule::Str _10517_fmt, jule::Slice<jule::Any> _10527_args) {
	jule::Slice<jule::U8> _10613_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_10517_fmt);;
	if ((_10527_args.len() == 0LL)) {
		return _10613_fmt_bytes;
	};
	jule::Slice<jule::U8> _11213_bytes = jule::Slice<jule::U8>::alloc(0LL,_10517_fmt.len());;
	jule::I32 _11413_j = 0LL;;
	jule::I32 _11513_last = 0LL;;
	jule::I32 _11613_i = _1ed8066e6_find_format_prefix(_10613_fmt_bytes,_11513_last);;
	for (; (_11613_i != -1LL); _11613_i=static_cast<jule::I32>(_1ed8066e6_find_format_prefix(_10613_fmt_bytes,_11613_i))) {
		{
			_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last,_11613_i));
			jule::Slice<jule::U8> _11917_format = _1ed810854_get_format_range(_11613_i,_10613_fmt_bytes);;
			if ((_11917_format == nullptr)) {
				goto _iter_next_1ac990629;
			};
			_11213_bytes=jule::append(_11213_bytes,_1ed8130b5_apply_fmt(_11917_format,_11413_j,_10527_args));
			if ((_11413_j >= _10527_args.len())) {
				_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11613_i));
				_11513_last=static_cast<jule::I32>(_10613_fmt_bytes.len());
				goto _iter_end_1ac990629;
			};
			_11513_last=_11613_i;
		}
	_iter_next_1ac990629:;
	}
	_iter_end_1ac990629:;;
	if ((_11513_last < _10613_fmt_bytes.len())) {
		_11213_bytes=jule::append(_11213_bytes,_10613_fmt_bytes.slice(_11513_last));
	};
	return _11213_bytes;
}



inline jule::Str _1ed80e028_format(jule::Str _16515_fmt, jule::Slice<jule::Any> _16525_args) {
	return static_cast<jule::Str>(_1ed8075b5_format_bytes(_16515_fmt,jule::Any(_16525_args)));
}



inline jule::Bool _1e01472ed_parameter_uses_generics(jule::Ptr<_1e0144394_Param>& _39329_p, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>& _39341_generics) {
	if (_1e01184ab_is_self(_39329_p.ptr())) {
		return false;
	};
	return _1ed793243_kind_uses_generics(_39329_p.get()._field_kind.get()._field_decl.get()._field_kind,_39341_generics);
}



inline jule::Ptr<_1ed780cd0_TypeSymbol> _1e01497d9_build_type(jule::Ptr<_1e01253db_TypeDecl> _9419_t) {
	if ((_9419_t == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_decl=_9419_t, });
}



inline jule::Ptr<_1e0e7e024_Value> _1e0149ac5_build_expr(jule::Ptr<_1e0128b3c_Expr> _10319_expr) {
	if ((_10319_expr == nullptr)) {
		return nullptr;
	};
	return jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_expr=_10319_expr, });
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0149d6c_build_type_alias(jule::Ptr<_1e0139653_TypeAliasDecl> _11225_decl) {
	return jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_scope=_11225_decl.get()._field_scope, ._field_public=_11225_decl.get()._field_public, ._field_cpp_linked=_11225_decl.get()._field_cpp_linked, ._field_token=_11225_decl.get()._field_token, ._field_ident=_11225_decl.get()._field_ident, ._field_kind=_1e01497d9_build_type(_11225_decl.get()._field_kind), });
}



inline jule::Ptr<_1e010cc53_Field> _1e014a158_build_field(jule::Ptr<_1e013d1b2_FieldDecl> _12320_decl) {
	return jule::new_ptr<_1e010cc53_Field>(_1e010cc53_Field{._field_token=_12320_decl.get()._field_token, ._field_public=_12320_decl.get()._field_public, ._field_mutable=_12320_decl.get()._field_mutable, ._field_ident=_12320_decl.get()._field_ident, ._field_kind=_1e01497d9_build_type(_12320_decl.get()._field_kind), ._field_default=_12320_decl.get()._field_default});
}



inline jule::Slice<jule::Ptr<_1e010cc53_Field>> _1e014a400_build_fields(jule::Slice<jule::Ptr<_1e013d1b2_FieldDecl>>& _13422_decls) {
	jule::Slice<jule::Ptr<_1e010cc53_Field>> _13513_fields = jule::Slice<jule::Ptr<_1e010cc53_Field>>::alloc(0LL,_13422_decls.len());;
	{
		auto &expr = _13422_decls;
		auto it = expr.begin();
		_iter_begin_1ab310a39:;
		if (it != expr.end()) {
			jule::Ptr<_1e013d1b2_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1e014a158_build_field(_13617_decl));;
			}
			_iter_next_1ab310a39:;
			++it;
			goto _iter_begin_1ab310a39;
		}
		_iter_end_1ab310a39:;
	};
	return _13513_fields;
}



inline jule::Ptr<_1e010261b_Struct> _1e014a697_build_struct(jule::Ptr<_1e013da20_StructDecl> _14221_decl) {
	return jule::new_ptr<_1e010261b_Struct>(_1e010261b_Struct{._field_token=_14221_decl.get()._field_token, ._field_ident=_14221_decl.get()._field_ident, ._field_fields=_1e014a400_build_fields(_14221_decl.get()._field_fields), ._field_public=_14221_decl.get()._field_public, ._field_cpp_linked=_14221_decl.get()._field_cpp_linked, ._field_directives=_14221_decl.get()._field_directives, ._field_generics=_14221_decl.get()._field_generics, });
}



inline jule::Ptr<_1e0144394_Param> _1e014a93e_build_param(jule::Ptr<_1e0133ad1_ParamDecl> _15420_decl) {
	return jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_token=_15420_decl.get()._field_token, ._field_mutable=_15420_decl.get()._field_mutable, ._field_variadic=_15420_decl.get()._field_variadic, ._field_reference=_15420_decl.get()._field_reference, ._field_kind=_1e01497d9_build_type(_15420_decl.get()._field_kind), ._field_ident=_15420_decl.get()._field_ident});
}



inline jule::Slice<jule::Ptr<_1e0144394_Param>> _1e014ac6e_build_params(jule::Slice<jule::Ptr<_1e0133ad1_ParamDecl>>& _16522_decls) {
	jule::Slice<jule::Ptr<_1e0144394_Param>> _16613_params = jule::Slice<jule::Ptr<_1e0144394_Param>>::alloc(0LL,_16522_decls.len());;
	{
		auto &expr = _16522_decls;
		auto it = expr.begin();
		_iter_begin_1ab3138c7:;
		if (it != expr.end()) {
			jule::Ptr<_1e0133ad1_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1e014a93e_build_param(_16717_decl));;
			}
			_iter_next_1ab3138c7:;
			++it;
			goto _iter_begin_1ab3138c7;
		}
		_iter_end_1ab3138c7:;
	};
	return _16613_params;
}



inline jule::Ptr<_1e01441a7_RetType> _1e014b016_build_ret_type(jule::Ptr<_1e01284aa_RetTypeDecl> _17323_decl) {
	if (((_17323_decl.get()._field_idents == nullptr) && (_17323_decl.get()._field_kind == nullptr))) {
		return nullptr;
	};
	return jule::new_ptr<_1e01441a7_RetType>(_1e01441a7_RetType{._field_kind=_1e01497d9_build_type(_17323_decl.get()._field_kind), ._field_idents=_17323_decl.get()._field_idents});
}



inline jule::Ptr<_1e0144581_Fn> _1e014b2ad_build_fn(jule::Ptr<_1e0134e01_FnDecl> _18317_decl) {
	return jule::new_ptr<_1e0144581_Fn>(_1e0144581_Fn{._field_token=_18317_decl.get()._field_token, ._field_global=_18317_decl.get()._field_global, ._field_unsafety=_18317_decl.get()._field_unsafety, ._field_public=_18317_decl.get()._field_public, ._field_cpp_linked=_18317_decl.get()._field_cpp_linked, ._field_statically=_18317_decl.get()._field_statically, ._field_exceptional=_18317_decl.get()._field_exceptional, ._field_ident=_18317_decl.get()._field_ident, ._field_directives=_18317_decl.get()._field_directives, ._field_scope=_18317_decl.get()._field_scope, ._field_generics=_18317_decl.get()._field_generics, ._field_result=_1e014b016_build_ret_type(_18317_decl.get()._field_result), ._field_params=_1e014ac6e_build_params(_18317_decl.get()._field_params), });
}



inline jule::Slice<jule::Ptr<_1e0144581_Fn>> _1e014b555_build_methods(jule::Slice<jule::Ptr<_1e0134e01_FnDecl>>& _20123_decls) {
	jule::Slice<jule::Ptr<_1e0144581_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1e0144581_Fn>>::alloc(0LL,_20123_decls.len());;
	{
		auto &expr = _20123_decls;
		auto it = expr.begin();
		_iter_begin_1ab3173c0:;
		if (it != expr.end()) {
			jule::Ptr<_1e0134e01_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1e014b2ad_build_fn(_20317_decl));;
			}
			_iter_next_1ab3173c0:;
			++it;
			goto _iter_begin_1ab3173c0;
		}
		_iter_end_1ab3173c0:;
	};
	return _20213_methods;
}



inline jule::Ptr<_1e0567d06_Trait> _1e014b7ec_build_trait(jule::Ptr<_1e013dc1d_TraitDecl> _20920_decl) {
	return jule::new_ptr<_1e0567d06_Trait>(_1e0567d06_Trait{._field_token=_20920_decl.get()._field_token, ._field_ident=_20920_decl.get()._field_ident, ._field_public=_20920_decl.get()._field_public, ._field_methods=_1e014b555_build_methods(_20920_decl.get()._field_methods), });
}



inline jule::Ptr<_1e04ed4c8_EnumItem> _1e014ba94_build_enum_item(jule::Ptr<_1e013aeb2_EnumItemDecl> _21824_decl) {
	return jule::new_ptr<_1e04ed4c8_EnumItem>(_1e04ed4c8_EnumItem{._field_token=_21824_decl.get()._field_token, ._field_ident=_21824_decl.get()._field_ident, ._field_value=_1e0149ac5_build_expr(_21824_decl.get()._field_expr)});
}



inline jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>> _1e014bd3b_build_enum_items(jule::Slice<jule::Ptr<_1e013aeb2_EnumItemDecl>>& _22626_decls) {
	jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1e04ed4c8_EnumItem>>::alloc(0LL,_22626_decls.len());;
	{
		auto &expr = _22626_decls;
		auto it = expr.begin();
		_iter_begin_1ab319a21:;
		if (it != expr.end()) {
			jule::Ptr<_1e013aeb2_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1e014ba94_build_enum_item(_22817_decl));;
			}
			_iter_next_1ab319a21:;
			++it;
			goto _iter_begin_1ab319a21;
		}
		_iter_end_1ab319a21:;
	};
	return _22713_items;
}



inline jule::Ptr<_1e057b8b9_Enum> _1e014c0d3_build_enum(jule::Ptr<_1e013bb0b_EnumDecl> _23419_decl) {
	return jule::new_ptr<_1e057b8b9_Enum>(_1e057b8b9_Enum{._field_token=_23419_decl.get()._field_token, ._field_public=_23419_decl.get()._field_public, ._field_ident=_23419_decl.get()._field_ident, ._field_kind=_1e01497d9_build_type(_23419_decl.get()._field_kind), ._field_items=_1e014bd3b_build_enum_items(_23419_decl.get()._field_items)});
}



inline jule::Ptr<_1e05b1316_TypeEnumItem> _1e014c49b_build_type_enum_item(jule::Ptr<_1e013c3d1_TypeEnumItemDecl> _24429_decl) {
	return jule::new_ptr<_1e05b1316_TypeEnumItem>(_1e05b1316_TypeEnumItem{._field_token=_24429_decl.get()._field_token, ._field_ident=_24429_decl.get()._field_ident, ._field_kind=_1e01497d9_build_type(_24429_decl.get()._field_kind)});
}



inline jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>> _1e014c743_build_type_enum_items(jule::Slice<jule::Ptr<_1e013c3d1_TypeEnumItemDecl>>& _25231_decls) {
	jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1e05b1316_TypeEnumItem>>::alloc(0LL,_25231_decls.len());;
	{
		auto &expr = _25231_decls;
		auto it = expr.begin();
		_iter_begin_1ab31c2b5:;
		if (it != expr.end()) {
			jule::Ptr<_1e013c3d1_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1e014c49b_build_type_enum_item(_25417_decl));;
			}
			_iter_next_1ab31c2b5:;
			++it;
			goto _iter_begin_1ab31c2b5;
		}
		_iter_end_1ab31c2b5:;
	};
	return _25313_items;
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e014c9da_build_type_enum(jule::Ptr<_1e013c9db_TypeEnumDecl> _26024_decl) {
	return jule::new_ptr<_1e04c643a_TypeEnum>(_1e04c643a_TypeEnum{._field_token=_26024_decl.get()._field_token, ._field_public=_26024_decl.get()._field_public, ._field_ident=_26024_decl.get()._field_ident, ._field_items=_1e014c743_build_type_enum_items(_26024_decl.get()._field_items)});
}



inline jule::Ptr<_1e0e366e6_Var> _1e014cc82_build_var(jule::Ptr<_1e0135dd0_VarDecl> _26918_decl) {
	return jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_token=_26918_decl.get()._field_token, ._field_ident=_26918_decl.get()._field_ident, ._field_cpp_linked=_26918_decl.get()._field_cpp_linked, ._field_constant=_26918_decl.get()._field_constant, ._field_mutable=_26918_decl.get()._field_mutable, ._field_public=_26918_decl.get()._field_public, ._field_statically=_26918_decl.get()._field_statically, ._field_reference=_26918_decl.get()._field_reference, ._field_kind=_1e01497d9_build_type(_26918_decl.get()._field_kind), ._field_value=_1e0149ac5_build_expr(_26918_decl.get()._field_expr), ._field_refers=static__1e01483a9_new(), ._field_directives=_26918_decl.get()._field_directives, });
}



inline jule::Slice<jule::Ptr<_1e0e366e6_Var>> _1e014d029_build_vars(jule::Slice<jule::Ptr<_1e0135dd0_VarDecl>> _28619_decls) {
	jule::Slice<jule::Ptr<_1e0e366e6_Var>> _28713_vars = jule::Slice<jule::Ptr<_1e0e366e6_Var>>::alloc(0LL,_28619_decls.len());;
	{
		auto &expr = _28619_decls;
		auto it = expr.begin();
		_iter_begin_1ab320681:;
		if (it != expr.end()) {
			jule::Ptr<_1e0135dd0_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1e014cc82_build_var(_28817_decl));;
			}
			_iter_next_1ab320681:;
			++it;
			goto _iter_begin_1ab320681;
		}
		_iter_end_1ab320681:;
	};
	return _28713_vars;
}



inline jule::Ptr<_1e0159a3b_Impl> _1e014d2c1_build_impl(jule::Ptr<_1e013e2b2_Impl> _29419_decl) {
	return jule::new_ptr<_1e0159a3b_Impl>(_1e0159a3b_Impl{._field_base=_29419_decl.get()._field_base, ._field_dest=_29419_decl.get()._field_dest, ._field_methods=_1e014b555_build_methods(_29419_decl.get()._field_methods), ._field_statics=_1e014d029_build_vars(_29419_decl.get()._field_statics)});
}



inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0d6e992_new_scope_checker_base(jule::Ptr<_1e0e1b3bd_Sema>& _3932_s, jule::Ptr<_1e01457c4_FnIns> _3946_owner) {
	return jule::new_ptr<_1e0debe4d_ScopeChecker>(_1e0debe4d_ScopeChecker{._field_s=_3932_s, ._field_owner=_3946_owner, ._field_table=jule::new_ptr<_1e0e77eeb_SymbolTable>(), });
}



inline jule::Ptr<_1e0debe4d_ScopeChecker> _1e0d761c4_new_scope_checker(jule::Ptr<_1e0e1b3bd_Sema>& _4727_s, jule::Ptr<_1e01457c4_FnIns> _4741_owner) {
	jule::Ptr<_1e0debe4d_ScopeChecker> _4813_base = _1e0d6e992_new_scope_checker_base(_4727_s,_4741_owner);;
	_4813_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1e0deba74_ScopeLabel>>>(nullptr);
	_4813_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1e0debc61_ScopeGoto>>>(nullptr);
	return _4813_base;
}



inline jule::Ptr<_1e0deba74_ScopeLabel> _1e0db49e8_find_label_parent(jule::Str _5722_ident, jule::Ptr<_1e0debe4d_ScopeChecker> _5738_scope) {
	jule::Ptr<_1e0deba74_ScopeLabel> _5813_label = _1e0deed96_find_label_scope(_5738_scope, _5722_ident);;
	while ((_5813_label == nullptr)) {
		{
			if (((_5738_scope.get()._field_parent == nullptr) || (_5738_scope.get()._field_owner != nullptr))) {
				return nullptr;
			};
			_5738_scope=_5738_scope.get()._field_parent;
			_5813_label=_1e0deed96_find_label_scope(_5738_scope, _5722_ident);
		}
	_iter_next_1ab381ca8:;
	}
	_iter_end_1ab381ca8:;;
	return _5813_label;
}



inline jule::Bool _1e0db7215_model_is_goto_scope(jule::Any& _7125_model, jule::Ptr<_1e0dd6322_Scope>& _7138_sc) {
	{
		auto &_match_expr{ _7125_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
			_case_begin_1ab3836c2:;
			{
				jule::Ptr<_1e013ee50_FnCallExprModel> _7413_fcem = _7125_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>();;
				if ((_7413_fcem.get()._field_except == _7138_sc)) {
					return true;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1ab383749:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _7913_d = _7125_model.operator jule::Ptr<_1e0e7ce9b_Data>();;
				return _1e0db7215_model_is_goto_scope(_7913_d.get()._field_model,_7138_sc);
			}
		}
		_match_end_1ab38366c:;
	};
	return false;
}



inline jule::Bool _1e0db7996_stmt_is_goto_scope(jule::Any& _8524_stmt, jule::Ptr<_1e0dd6322_Scope>& _8536_sc) {
	{
		auto &_match_expr{ _8524_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1e0dd6322_Scope>>()) {
			_case_begin_1ab385c13:;
			{
				return (_8524_stmt.operator jule::Ptr<_1e0dd6322_Scope>() == _8536_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d985ae_InfIter>>()) {
			_case_begin_1ab3845b3:;
			{
				return (_8524_stmt.operator jule::Ptr<_1e0d985ae_InfIter>().get()._field_scope == _8536_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0dc6664_RangeIter>>()) {
			_case_begin_1ab38597c:;
			{
				jule::Ptr<_1e0dc6664_RangeIter> _9213_it = _8524_stmt.operator jule::Ptr<_1e0dc6664_RangeIter>();;
				return ((_9213_it.get()._field_scope == _8536_sc) || _1e0db7215_model_is_goto_scope(_9213_it.get()._field_expr.get()._field_model,_8536_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d9879b_WhileIter>>()) {
			_case_begin_1ab3859e3:;
			{
				jule::Ptr<_1e0d9879b_WhileIter> _9513_it = _8524_stmt.operator jule::Ptr<_1e0d9879b_WhileIter>();;
				return (((_9513_it.get()._field_scope == _8536_sc) || _1e0db7215_model_is_goto_scope(_9513_it.get()._field_expr,_8536_sc)) || _1e0db7215_model_is_goto_scope(_9513_it.get()._field_next,_8536_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0deb090_Match>>()) {
			_case_begin_1ab385a59:;
			{
				jule::Ptr<_1e0deb090_Match> _10013_m = _8524_stmt.operator jule::Ptr<_1e0deb090_Match>();;
				{
					auto &expr = _10013_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1ab389662:;
					if (it != expr.end()) {
						jule::Ptr<_1e0deb4ad_Case> &_10116_c = *it;
						{
							if ((_10116_c.get()._field_scope == _8536_sc)) {
								return true;
							};
							{
								auto &expr = _10116_c.get()._field_exprs;
								auto it = expr.begin();
								_iter_begin_1ab389dd2:;
								if (it != expr.end()) {
									jule::Ptr<_1e0e7ce9b_Data> &_10520_expr = *it;
									{
										if (_1e0db7215_model_is_goto_scope(_10520_expr.get()._field_model,_8536_sc)) {
											return true;
										};
									}
									_iter_next_1ab389dd2:;
									++it;
									goto _iter_begin_1ab389dd2;
								}
								_iter_end_1ab389dd2:;
							};
						}
						_iter_next_1ab389662:;
						++it;
						goto _iter_begin_1ab389662;
					}
					_iter_end_1ab389662:;
				};
				return ((_10013_m.get()._field_default != nullptr) && (_10013_m.get()._field_default.get()._field_scope == _8536_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0d879aa_Conditional>>()) {
			_case_begin_1ab385ad1:;
			{
				jule::Ptr<_1e0d879aa_Conditional> _11313_c = _8524_stmt.operator jule::Ptr<_1e0d879aa_Conditional>();;
				{
					auto &expr = _11313_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1ab38b9c7:;
					if (it != expr.end()) {
						jule::Ptr<_1e0ddcc41_If> &_11416_elif = *it;
						{
							if (((_11416_elif.get()._field_scope == _8536_sc) || _1e0db7215_model_is_goto_scope(_11416_elif.get()._field_expr,_8536_sc))) {
								return true;
							};
						}
						_iter_next_1ab38b9c7:;
						++it;
						goto _iter_begin_1ab38b9c7;
					}
					_iter_end_1ab38b9c7:;
				};
				return ((_11313_c.get()._field_default != nullptr) && (_11313_c.get()._field_default.get()._field_scope == _8536_sc));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1ab38573a:;
			{
				jule::Ptr<_1e0e7ce9b_Data> _12113_d = _8524_stmt.operator jule::Ptr<_1e0e7ce9b_Data>();;
				return _1e0db7215_model_is_goto_scope(_12113_d.get()._field_model,_8536_sc);
			}
		}
		else {
			_case_begin_1ab384edc:;
			{
				return false;
			}
		}
		_match_end_1ab383a68:;
	};
}



inline jule::I32 _1e0db85ce_count_match_type(jule::Ptr<_1e0deb090_Match>& _12822_m, jule::Ptr<_1ed77bbbb_TypeKind>& _12834_t) {
	jule::I32 _12913_n = 0LL;;
	jule::Str _1309_kind = _1ed77c073_to_str(_12834_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _12822_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1ab38e69a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0deb4ad_Case> &_13212_c = *it;
			{
				if ((_13212_c == nullptr)) {
					goto _iter_next_1ab38e69a;
				};
				{
					auto &expr = _13212_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1ab39039e:;
					if (it != expr.end()) {
						jule::Ptr<_1e0e7ce9b_Data> &_13716_expr = *it;
						{
							if ((_13716_expr == nullptr)) {
								goto _iter_end_1ab38e69a;
							};
							if ((_1309_kind == _1ed77c073_to_str(_13716_expr.get()._field_model.operator jule::Ptr<_1ed77bbbb_TypeKind>().ptr()))) {
								(_12913_n)++;
							};
						}
						_iter_next_1ab39039e:;
						++it;
						goto _iter_begin_1ab39039e;
					}
					_iter_end_1ab39039e:;
				};
			}
			_iter_next_1ab38e69a:;
			++it;
			goto _iter_begin_1ab38e69a;
		}
		_iter_end_1ab38e69a:;
	};
	return _12913_n;
}



inline jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _1e0dba9ee_get_datas_from_tuple_data(jule::Ptr<_1e0e7ce9b_Data>& _15235_d) {
	if ((_1ed780928_tup(_15235_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _15235_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1e0141b77_TupleExprModel>>()) {
				_case_begin_1ab393836:;
				{
					return _15235_d.get()._field_model.operator jule::Ptr<_1e0141b77_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1ab391999:;
				{
					jule::Ptr<_1ed786104_Tuple> _15821_t = _1ed780928_tup(_15235_d.get()._field_kind.ptr());;
					jule::Slice<jule::Ptr<_1e0e7ce9b_Data>> _15921_r = jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>::alloc(0LL,_15821_t.get()._field_types.len());;
					{
						auto &expr = _15821_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1ab392637:;
						if (it != expr.end()) {
							jule::Ptr<_1ed77bbbb_TypeKind> _16025_kind = *it;
							{
								_15921_r = jule::alloc_for_append(_15921_r,1);_15921_r.__push(jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=_16025_kind, ._field_mutable=true, }));;
							}
							_iter_next_1ab392637:;
							++it;
							goto _iter_begin_1ab392637;
						}
						_iter_end_1ab392637:;
					};
					return _15921_r;
				}
			}
			_match_end_1ab391944:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1e0e7ce9b_Data>>::make({_15235_d});
	};
}



inline jule::Slice<jule::Any> _1e0dbb280_get_expr_models(jule::Any& _17325_m) {
	{
		auto &_match_expr{ _17325_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e0129423_TupleExpr>>()) {
			_case_begin_1ab39477c:;
			{
				jule::Ptr<_1e0129423_TupleExpr> _17617_tup = _17325_m.operator jule::Ptr<_1e0129423_TupleExpr>();;
				jule::Slice<jule::Any> _17717_models = jule::Slice<jule::Any>::alloc(0LL,_17617_tup.get()._field_expr.len());;
				{
					auto &expr = _17617_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1ab3951ea:;
					if (it != expr.end()) {
						jule::Ptr<_1e0128b3c_Expr> _17821_expr = *it;
						{
							_17717_models = jule::alloc_for_append(_17717_models,1);_17717_models.__push(jule::Any(_17821_expr.get()._field_kind));;
						}
						_iter_next_1ab3951ea:;
						++it;
						goto _iter_begin_1ab3951ea;
					}
					_iter_end_1ab3951ea:;
				};
				return _17717_models;
			}
		}
		else {
			_case_begin_1ab390635:;
			{
				return jule::Slice<jule::Any>::make({jule::Any(_17325_m)});
			}
		}
		_match_end_1ab394172:;
	};
}



inline jule::Bool _1e0dbba22_check_mut(jule::Ptr<_1e0e1b3bd_Sema>& _18719_s, jule::Ptr<_1e0e7ce9b_Data>& _18730_left, jule::Ptr<_1e0e7ce9b_Data> _18747_right, jule::Ptr<_1dd9941e0_Token> _18761_op) {
	jule::Bool _18775_ok = jule::Bool();
	{
		
		if ((!(_18730_left.get()._field_mutable))) {
			_case_begin_1ab396dcd:;
			{
				_1e0e1e107_push_err(_18719_s.ptr(), _18761_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_18775_ok = false;
				return _18775_ok;
			}
		}
		else if ((((_18747_right != nullptr) && (!(_18747_right.get()._field_mutable))) && _1ed77d074_mutable(_18747_right.get()._field_kind.ptr()))) {
			_case_begin_1ab396e99:;
			{
				if (((_18761_op.get()._field_kind != jule::Str("=", 1)) && (_1ed7801db_strct(_18747_right.get()._field_kind.ptr()) != nullptr))) {
					_18775_ok = true;
					return _18775_ok;
				};
				_1e0e1e107_push_err(_18719_s.ptr(), _18761_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_18747_right.get()._field_kind.ptr()))}));
				_18775_ok = false;
				return _18775_ok;
			}
		}
		else {
			_case_begin_1ab395d44:;
			{
				_18775_ok = true;
				return _18775_ok;
			}
		}
		_match_end_1ab395c89:;
	};
}



inline jule::Bool _1e0dc3aa1_check_assign(jule::Ptr<_1e0e1b3bd_Sema>& _20622_s, jule::Ptr<_1e0e7ce9b_Data>& _20637_left, jule::Ptr<_1e0e7ce9b_Data> _20654_right, jule::Ptr<_1dd9941e0_Token> _20668_op) {
	jule::Bool _20682_ok = jule::Bool();
	jule::Ptr<_1e01457c4_FnIns> _2079_f = _1ed77ee77_fnc(_20637_left.get()._field_kind.ptr());;
	if ((((_2079_f != nullptr) && (_2079_f.get()._field_decl != nullptr)) && _2079_f.get()._field_decl.get()._field_global)) {
		_1e0e1e107_push_err(_20622_s.ptr(), _20668_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_20682_ok = false;
		return _20682_ok;
	};
	{
		
		if (_1e0e7d85e_is_const(_20637_left.ptr())) {
			_case_begin_1ab39c0e2:;
			{
				_1e0e1e107_push_err(_20622_s.ptr(), _20668_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1e0e1e426_push_suggestion(_20622_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_20682_ok = false;
				return _20682_ok;
			}
		}
		else if ((!(_20637_left.get()._field_lvalue))) {
			_case_begin_1ab39c19c:;
			{
				_1e0e1e107_push_err(_20622_s.ptr(), _20668_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_20682_ok = false;
				return _20682_ok;
			}
		}
		else if ((!(_1e0dbba22_check_mut(_20622_s,_20637_left,_20654_right,_20668_op)))) {
			_case_begin_1ab39c213:;
			{
				_20682_ok = false;
				return _20682_ok;
			}
		}
		else {
			_case_begin_1ab39b993:;
			{
				_20682_ok = true;
				return _20682_ok;
			}
		}
		_match_end_1ab39b8a5:;
	};
}



inline jule::Bool _1e0dc42dd_is_valid_ast_st_for_next_st(jule::Any& _22837_n) {
	{
		auto &_match_expr{ _22837_n };
		
		if (_match_expr.type_is<jule::Ptr<_1e0132d00_AssignSt>>()) {
			_case_begin_1ab39e897:;
			{
				return (!(_22837_n.operator jule::Ptr<_1e0132d00_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012cb0d_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1e0128b3c_Expr>>()) {
			_case_begin_1ab39e90d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab39e237:;
			{
				return false;
			}
		}
		_match_end_1ab39c389:;
	};
}



inline jule::Bool _1e0dc4e26_is_valid_st_for_next_st(jule::Any& _24029_st) {
	{
		auto &_match_expr{ _24029_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1e0dea9c9_Postfix>>() || _match_expr.type_is<jule::Ptr<_1e0deabb6_Assign>>() || _match_expr.type_is<jule::Ptr<_1e0deada3_MultiAssign>>()) {
			_case_begin_1ab3a0ab8:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1ab3a0b2e:;
			{
				{
					auto &_match_expr{ _24029_st.operator jule::Ptr<_1e0e7ce9b_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e013ee50_FnCallExprModel>>()) {
						_case_begin_1ab3a139e:;
						{
							return true;
						}
					}
					else {
						_case_begin_1ab3a1998:;
						{
							return false;
						}
					}
					_match_end_1ab3a1943:;
				};
			}
		}
		else {
			_case_begin_1ab3a03e2:;
			{
				return false;
			}
		}
		_match_end_1ab3a0315:;
	};
}



inline jule::Bool _1e0dc5dd3_st_is_def(jule::Any& _25915_st) {
	{
		auto &_match_expr{ _25915_st };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1ab3a2669:;
			{
				return true;
			}
		}
		else {
			_case_begin_1ab3a236c:;
			{
				return false;
			}
		}
		_match_end_1ab3a2317:;
	};
}



inline jule::Ptr<_1e0e366e6_Var> _1e0e10d85_find_var_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _4629_files, jule::Str _4652_ident, jule::Bool _4664_cpp_linked) {
	{
		auto &expr = _4629_files;
		auto it = expr.begin();
		_iter_begin_1acc35aab:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1e0e366e6_Var> _4817_v = _1e0e78bcd_find_var(_4717_f.ptr(), _4652_ident,_4664_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;
				};
			}
			_iter_next_1acc35aab:;
			++it;
			goto _iter_begin_1acc35aab;
		}
		_iter_end_1acc35aab:;
	};
	return nullptr;
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1e0e112d6_find_type_alias_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _5836_files, jule::Str _5859_ident, jule::Bool _5871_cpp_linked) {
	{
		auto &expr = _5836_files;
		auto it = expr.begin();
		_iter_begin_1acc37085:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ed77ae84_TypeAlias> _6017_ta = _1e0e79085_find_type_alias(_5917_f.ptr(), _5859_ident,_5871_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;
				};
			}
			_iter_next_1acc37085:;
			++it;
			goto _iter_begin_1acc37085;
		}
		_iter_end_1acc37085:;
	};
	return nullptr;
}



inline jule::Ptr<_1e010261b_Struct> _1e0e116d2_find_struct_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _7032_files, jule::Str _7055_ident, jule::Bool _7067_cpp_linked) {
	{
		auto &expr = _7032_files;
		auto it = expr.begin();
		_iter_begin_1acc3855e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1e010261b_Struct> _7217_s = _1e0e7943c_find_struct(_7117_f.ptr(), _7055_ident,_7067_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;
				};
			}
			_iter_next_1acc3855e:;
			++it;
			goto _iter_begin_1acc3855e;
		}
		_iter_end_1acc3855e:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0144581_Fn> _1e0e11b11_find_fn_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _8228_files, jule::Str _8251_ident, jule::Bool _8263_cpp_linked) {
	{
		auto &expr = _8228_files;
		auto it = expr.begin();
		_iter_begin_1acc39a38:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1e0144581_Fn> _8417_f = _1e0e797e4_find_fn(_8317_file.ptr(), _8251_ident,_8263_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;
				};
			}
			_iter_next_1acc39a38:;
			++it;
			goto _iter_begin_1acc39a38;
		}
		_iter_end_1acc39a38:;
	};
	return nullptr;
}



inline jule::Ptr<_1e0567d06_Trait> _1e0e11e52_find_trait_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _9431_files, jule::Str _9454_ident) {
	{
		auto &expr = _9431_files;
		auto it = expr.begin();
		_iter_begin_1acc3a0ee:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1e0567d06_Trait> _9617_t = _1e0e79b02_find_trait(_9517_f.ptr(), _9454_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;
				};
			}
			_iter_next_1acc3a0ee:;
			++it;
			goto _iter_begin_1acc3a0ee;
		}
		_iter_end_1acc3a0ee:;
	};
	return nullptr;
}



inline jule::Ptr<_1e057b8b9_Enum> _1e0e12293_find_enum_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _10630_files, jule::Str _10653_ident) {
	{
		auto &expr = _10630_files;
		auto it = expr.begin();
		_iter_begin_1acc3b0cd:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1e057b8b9_Enum> _10817_e = _1e0e79e10_find_enum(_10717_f.ptr(), _10653_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;
				};
			}
			_iter_next_1acc3b0cd:;
			++it;
			goto _iter_begin_1acc3b0cd;
		}
		_iter_end_1acc3b0cd:;
	};
	return nullptr;
}



inline jule::Ptr<_1e04c643a_TypeEnum> _1e0e12606_find_type_enum_in_package(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _11835_files, jule::Str _11858_ident) {
	{
		auto &expr = _11835_files;
		auto it = expr.begin();
		_iter_begin_1acc3c5c9:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1e04c643a_TypeEnum> _12017_e = _1e0e7a21d_find_type_enum(_11917_f.ptr(), _11858_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;
				};
			}
			_iter_next_1acc3c5c9:;
			++it;
			goto _iter_begin_1acc3c5c9;
		}
		_iter_end_1acc3c5c9:;
	};
	return nullptr;
}



inline jule::Bool _1e0e1882c_is_std_package(jule::Str _35019_f, jule::Str _35027_p) {
	return _1dd588048_has_prefix(_35019_f,_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd66e45e_PATH_STDLIB,_35027_p})));
}



inline jule::Bool _1e0e19586_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e366e6_Var>>()) {
			_case_begin_1acc50cb3:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1acc50d29:;
			{
				jule::Ptr<_1e01411d7_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>();;
				return _1e0e19586_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>>()) {
			_case_begin_1acc50ab5:;
			{
				jule::Ptr<_1e0140cb9_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1e0140cb9_TraitSubIdentExprModel>();;
				return _1e0e19586_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e0111cac_UnaryExprModel>>()) {
			_case_begin_1acc50b2b:;
			{
				jule::Ptr<_1e0111cac_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1e0111cac_UnaryExprModel>();;
				if ((_2317_unary.get()._field_op.get()._field_kind != jule::Str("*", 1))) {
					return false;
				};
				if ((_1ed77e262_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				};
				if ((_1ed77deed_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				};
				return _1e0e19586_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1acc50752:;
			{
				return false;
			}
		}
		_match_end_1acc50323:;
	};
}



inline _1dd65aa00_Log _1e0e19a2b_compiler_err(jule::Ptr<_1dd9941e0_Token>& _4118_token, jule::Bool _4133_line, jule::Str _4145_fmt, jule::Slice<jule::Any> _4158_args) {
	_1dd65aa00_Log _4213_log = _1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_row=_4118_token.get()._field_row, ._field_column=_4118_token.get()._field_column, ._field_path=_4118_token.get()._field_file.get()._field_path, ._field_text=_1dd65ae40_logf(_4145_fmt,jule::Any(_4158_args)), };;
	if (_4133_line) {
		_4213_log._field_line=_1dd99a78a_get_row(_4118_token.get()._field_file.ptr(), _4118_token.get()._field_row);
	};
	return _4213_log;
}



inline jule::Bool _1e0e19d6c_imp_is_lookupable(jule::Ptr<_1e0e13272_ImportInfo>& _5523_i, jule::Str _5539_ident) {
	if (_5523_i.get()._field_cpp_linked) {
		return false;
	};
	if ((!(_5523_i.get()._field_import_all))) {
		if ((_5523_i.get()._field_selected.len() > 0LL)) {
			return _1e0e15bc0_exist_ident(_5523_i.ptr(), _5539_ident);
		};
	};
	return _5523_i.get()._field_import_all;
}



inline void _1e0e1a169_append_ret_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _6825_dest, jule::Ptr<_1e01457c4_FnIns>& _6844_f) {
	if ((_1e0105894_is_void(_6844_f.get()._field_decl.ptr()) || (_6844_f.get()._field_result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ed77bbbb_TypeKind>> _7313_types = _1e01462db_types(_6844_f.ptr());;
	{
		auto &expr = _6844_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1acc59173:;
		if (it != expr.end()) {
			jule::I32 _7410_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _7417_ident = *it;
			{
				if ((_1dd996940_is_ignore_ident(_7417_ident.get()._field_kind) || _1dd996bd7_is_anon_ident(_7417_ident.get()._field_kind))) {
					goto _iter_next_1acc59173;
				};
				_6825_dest = jule::alloc_for_append(_6825_dest,1);_6825_dest.__push(jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_scope=_6844_f.get()._field_scope, ._field_token=_7417_ident, ._field_ident=_7417_ident.get()._field_kind, ._field_mutable=true, ._field_used=true, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_7313_types[_7410_i]}), ._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_data=jule::new_ptr<_1e0e7ce9b_Data>()}), }));;
			}
			_iter_next_1acc59173:;
			++it;
			_7410_i++;
			goto _iter_begin_1acc59173;
		}
		_iter_end_1acc59173:;
	};
}



inline void _1e0e1a422_append_param_vars(jule::Slice<jule::Ptr<_1e0e366e6_Var>>& _9427_dest, jule::Ptr<_1e01457c4_FnIns>& _9446_f) {
	if ((_9446_f.get()._field_params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9446_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1acc5a66e:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144938_ParamIns> _9917_p = *it;
			{
				if ((_1dd996940_is_ignore_ident(_9917_p.get()._field_decl.get()._field_ident) || _1dd996bd7_is_anon_ident(_9917_p.get()._field_decl.get()._field_ident))) {
					goto _iter_next_1acc5a66e;
				};
				jule::Ptr<_1e0e366e6_Var> _10417_v = jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_scope=_9446_f.get()._field_scope, ._field_token=_9917_p.get()._field_decl.get()._field_token, ._field_ident=_9917_p.get()._field_decl.get()._field_ident, ._field_mutable=_9917_p.get()._field_decl.get()._field_mutable, ._field_used=true, ._field_reference=_9917_p.get()._field_decl.get()._field_reference, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(), ._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_data=jule::new_ptr<_1e0e7ce9b_Data>()}), });;
				{
					
					if (_1e01184ab_is_self(_9917_p.get()._field_decl.ptr())) {
						_case_begin_1acc5e277:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1ed77b78c_Kind>(_9446_f.get()._field_owner, 0)});
							_10417_v.get()._field_reference=(!(_1e01202c6_is_ref(_9917_p.get()._field_decl.ptr())));
							if (_1e01202c6_is_ref(_9917_p.get()._field_decl.ptr())) {
								_10417_v.get()._field_ident=_10417_v.get()._field_ident.slice(1LL);
								_10417_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed784ba2_Sptr>(_1ed784ba2_Sptr{._field_elem=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_cpp_ident=_10417_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident, ._field_kind=_10417_v.get()._field_kind.get()._field_kind.get()._field_kind})}), 7);
							};
						}
					}
					else if (_9917_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1acc5de7a:;
						{
							_10417_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_variadic=false, ._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed78560e_Slc>(_1ed78560e_Slc{._field_elem=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_cpp_ident=_9917_p.get()._field_kind.get()._field_cpp_ident, ._field_kind=_9917_p.get()._field_kind.get()._field_kind})}), 8)});
						}
					}
					else {
						_case_begin_1acc5de14:;
						{
							_10417_v.get()._field_kind.get()._field_kind=_9917_p.get()._field_kind;
						}
					}
					_match_end_1acc5dd04:;
				};
				_9427_dest = jule::alloc_for_append(_9427_dest,1);_9427_dest.__push(_10417_v);;
			}
			_iter_next_1acc5a66e:;
			++it;
			goto _iter_begin_1acc5a66e;
		}
		_iter_end_1acc5a66e:;
	};
}



inline void _1e0e1a6ec_append_generic_type_aliases(jule::Slice<jule::Ptr<_1ed77ae84_TypeAlias>>& _15437_dest, jule::Ptr<_1e01457c4_FnIns>& _15462_f) {
	jule::I32 _15513_size = _15462_f.get()._field_generics.len();;
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		_15513_size+=_15462_f.get()._field_decl.get()._field_owner.get()._field_generics.len();
	};
	if ((_15513_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15462_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1acc6437b:;
		if (it != expr.end()) {
			jule::I32 _16410_i = it - expr.begin();
			jule::Ptr<_1ed77bbbb_TypeKind> _16417_g = *it;
			{
				jule::Ptr<_1e013165b_GenericDecl> _16517_decl = _15462_f.get()._field_decl.get()._field_generics[_16410_i];;
				_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_16517_decl.get()._field_token, ._field_ident=_16517_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_16417_g}), }));;
			}
			_iter_next_1acc6437b:;
			++it;
			_16410_i++;
			goto _iter_begin_1acc6437b;
		}
		_iter_end_1acc6437b:;
	};
	if ((_15462_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1e010a05d_StructIns> _17917_owner = _15462_f.get()._field_owner;;
		{
			auto &expr = _17917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1acc6668b:;
			if (it != expr.end()) {
				jule::I32 _18014_i = it - expr.begin();
				jule::Ptr<_1ed77bbbb_TypeKind> _18021_g = *it;
				{
					jule::Ptr<_1e013165b_GenericDecl> _18121_decl = _17917_owner.get()._field_decl.get()._field_generics[_18014_i];;
					_15437_dest = jule::alloc_for_append(_15437_dest,1);_15437_dest.__push(jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_scope=_15462_f.get()._field_decl.get()._field_scope, ._field_used=true, ._field_generic=true, ._field_token=_18121_decl.get()._field_token, ._field_ident=_18121_decl.get()._field_ident, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=_18021_g}), }));;
				}
				_iter_next_1acc6668b:;
				++it;
				_18014_i++;
				goto _iter_begin_1acc6668b;
			}
			_iter_end_1acc6668b:;
		};
	};
}



inline jule::Ptr<_1e0e77eeb_SymbolTable> _1e0e1aa4e_find_file(jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>& _19619_files, jule::Ptr<_1dd9995ad_File>& _19643_handler) {
	{
		auto &expr = _19619_files;
		auto it = expr.begin();
		_iter_begin_1acc68737:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_file == _19643_handler)) {
					return _19717_fl;
				};
			}
			_iter_next_1acc68737:;
			++it;
			goto _iter_begin_1acc68737;
		}
		_iter_end_1acc68737:;
	};
	return nullptr;
}



inline void _1e0e1ae39_push_suggestion(_1dd65aa00_Log* _20531_log, jule::Str _20542_fmt, jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1dd65ae40_logf(_20542_fmt,jule::Any(_20555_args));
}



inline jule::Bool _1e0e67826_trait_has_reference_receiver(jule::Ptr<_1e0567d06_Trait>& _2634_t) {
	{
		auto &expr = _2634_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1ad0c1892:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_statically) {
					goto _iter_next_1ad0c1892;
				};
				jule::Ptr<_1e0144394_Param> _3313_p = _2712_f.get()._field_params[0LL];;
				if ((_1e01202c6_is_ref(_3313_p.ptr()) && _1e01184ab_is_self(_3313_p.ptr()))) {
					return true;
				};
			}
			_iter_next_1ad0c1892:;
			++it;
			goto _iter_begin_1ad0c1892;
		}
		_iter_end_1ad0c1892:;
	};
	return false;
}



inline jule::Bool _1e0e4ed2a_float_assignable(jule::Str _4121_kind, jule::Ptr<_1e0e7ce9b_Data>& _4133_d) {
	jule::Str _429_value = _1e060281e_fmt_float(static_cast<jule::F64>(_1e0d513be_as_f64(_4133_d.get()._field_constant.ptr())),'g',-1LL,64LL);;
	return _1e0de01b6_check_bit_float(_429_value,static_cast<jule::I32>(_1e0dddd30_bitsize_of(_4121_kind)));
}



inline jule::Bool _1e0e68a9c_sig_assignable(jule::Str _4619_kind, jule::Ptr<_1e0e7ce9b_Data>& _4631_d) {
	jule::F64 _479_min = _1e0de41cb_min(_4619_kind);;
	jule::F64 _489_max = _1e0de44b7_max(_4619_kind);;
	{
		
		if (_1e0d5302a_is_f64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ad0c5456:;
			{
				jule::F64 _5113_x = _1e0d50b82_read_f64(_4631_d.get()._field_constant.ptr());;
				jule::F64 _5214_i;;
				jule::F64 _5217_frac;;
				std::tie(_5214_i,_5217_frac) = _1e0bba8a9_modf(_5113_x);
				if ((_5217_frac != 0LL)) {
					return false;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));
			}
		}
		else if (_1e0d527dd_is_u64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ad0c54cd:;
			{
				jule::F64 _5813_x = _1e0d513be_as_f64(_4631_d.get()._field_constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;
				};
			}
		}
		else if (_1e0d52579_is_i64(_4631_d.get()._field_constant.ptr())) {
			_case_begin_1ad0c5555:;
			{
				jule::F64 _6313_x = _1e0d513be_as_f64(_4631_d.get()._field_constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));
			}
		}
		_match_end_1ad0c5335:;
	};
	return false;
}



inline jule::Bool _1e0e68bce_unsig_assignable(jule::Str _6921_kind, jule::Ptr<_1e0e7ce9b_Data>& _6933_d) {
	jule::F64 _709_max = _1e0de44b7_max(_6921_kind);;
	if ((_6933_d.get()._field_is_rune && (_6921_kind == jule::Str("u8", 2)))) {
		return _1e0e66061_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1e0d501d1_read_i64(_6933_d.get()._field_constant.ptr()))));
	};
	{
		
		if (_1e0d5302a_is_f64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ad0ca46c:;
			{
				jule::F64 _7713_x = _1e0d50b82_read_f64(_6933_d.get()._field_constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;
				};
				jule::F64 _8114_i;;
				jule::F64 _8117_frac;;
				std::tie(_8114_i,_8117_frac) = _1e0bba8a9_modf(_7713_x);
				if ((_8117_frac != 0LL)) {
					return false;
				};
				return (_8114_i <= _709_max);
			}
		}
		else if (_1e0d527dd_is_u64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ad0ca4d3:;
			{
				jule::F64 _8713_x = _1e0d513be_as_f64(_6933_d.get()._field_constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;
				};
			}
		}
		else if (_1e0d52579_is_i64(_6933_d.get()._field_constant.ptr())) {
			_case_begin_1ad0ca549:;
			{
				jule::F64 _9213_x = _1e0d513be_as_f64(_6933_d.get()._field_constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));
			}
		}
		_match_end_1ad0c98cd:;
	};
	return false;
}



inline jule::Bool _1e0e68d11_int_assignable(jule::Str _9819_kind, jule::Ptr<_1e0e7ce9b_Data>& _9831_d) {
	{
		
		if (_1e0de9423_is_sig_int(_9819_kind)) {
			_case_begin_1ad0cea7b:;
			{
				return _1e0e68a9c_sig_assignable(_9819_kind,_9831_d);
			}
		}
		else if (_1e0de970e_is_unsig_int(_9819_kind)) {
			_case_begin_1ad0ceb69:;
			{
				return _1e0e68bce_unsig_assignable(_9819_kind,_9831_d);
			}
		}
		else {
			_case_begin_1ad0cab32:;
			{
				return false;
			}
		}
		_match_end_1ad0caa66:;
	};
}



inline jule::Ptr<_1e0124e35_Directive> _1ed776754_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _420024_directives, jule::Str _420055_d) {
	{
		auto &expr = _420024_directives;
		auto it = expr.begin();
		_iter_begin_1ad1bba7a:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _420117_dr = *it;
			{
				if ((_420117_dr.get()._field_tag.get()._field_kind == _420055_d)) {
					return _420117_dr;
				};
			}
			_iter_next_1ad1bba7a:;
			++it;
			goto _iter_begin_1ad1bba7a;
		}
		_iter_end_1ad1bba7a:;
	};
	return nullptr;
}



inline jule::Any _1ed776ad9_find_builtins_import(jule::Str _420925_ident, jule::Ptr<_1e0e13272_ImportInfo> _420937_imp) {
	return jule::Any(_1ed81cbe6_find_package_builtin_def(_420937_imp.get()._field_link_path,_420925_ident));
}



inline void _1ed776ce8_fit_bitsize(jule::Ptr<_1e0e7ce9b_Data>& _421621_d) {
	jule::Ptr<_1ed781693_Prim> _421713_prim = _1ed77dc89_prim(_421621_d.get()._field_kind.ptr());;
	jule::I32 _42189_z = _1e0dddd30_bitsize_of(_1ed781a06_to_str(_421713_prim.ptr()));;
	if ((_42189_z == 64LL)) {
		return;;
	};
	jule::I32 _422313_k = 0LL;;
	{
		
		if (_1e0d52579_is_i64(_421621_d.get()._field_constant.ptr())) {
			_case_begin_1ad1be95c:;
			{
				_422313_k=static_cast<jule::I32>(_1e0de0705_bitsize_of_int(static_cast<jule::I64>(_1e0d501d1_read_i64(_421621_d.get()._field_constant.ptr()))));
				if ((_422313_k > _42189_z)) {
					_421713_prim.get()._field_kind=_1e0dde11b_int_from_bits(_422313_k);
				};
			}
		}
		else if (_1e0d527dd_is_u64(_421621_d.get()._field_constant.ptr())) {
			_case_begin_1ad1be9d4:;
			{
				_422313_k=static_cast<jule::I32>(_1e0de099c_bitsize_of_uint(static_cast<jule::U64>(_1e0d50445_read_u64(_421621_d.get()._field_constant.ptr()))));
				if ((_422313_k > _42189_z)) {
					_421713_prim.get()._field_kind=_1e0dde3b3_uint_from_bits(_422313_k);
				};
			}
		}
		else if (_1e0d5302a_is_f64(_421621_d.get()._field_constant.ptr())) {
			_case_begin_1ad1bea5b:;
			{
				_422313_k=static_cast<jule::I32>(_1e0de045d_bitsize_of_float(static_cast<jule::F64>(_1e0d50b82_read_f64(_421621_d.get()._field_constant.ptr()))));
				if ((_422313_k > _42189_z)) {
					_421713_prim.get()._field_kind=_1e0dde65a_float_from_bits(_422313_k);
				};
			}
		}
		_match_end_1ad1be880:;
	};
}



inline void _1ed7770e5_make_struct_lit_alloc(jule::Ptr<_1e0e7ce9b_Data>& _424331_d, jule::Ptr<_1e0116982_StructLitExprModel>& _424346_lit) {
	_424331_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed784ba2_Sptr>(_1ed784ba2_Sptr{._field_elem=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_424346_lit.get()._field_strct, 0)})}), 7)});
	_424331_d.get()._field_model=jule::Any(jule::new_ptr<_1e013ea76_AllocStructLitExprModel>(_1e013ea76_AllocStructLitExprModel{._field_lit=_424346_lit}));
}



inline jule::Ptr<_1e0e366e6_Var> _1ed777436_build_error_var(jule::Ptr<_1e0dd6322_Scope>& _425425_s, jule::Ptr<_1e012cb0d_FnCallExpr>& _425441_fc) {
	return jule::new_ptr<_1e0e366e6_Var>(_1e0e366e6_Var{._field_scope=_425425_s, ._field_token=_425441_fc.get()._field_token, ._field_ident=jule::Str("error", 5), ._field_mutable=true, ._field_used=true, ._field_reference=false, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("any", 3)), 6)})}), ._field_value=jule::new_ptr<_1e0e7e024_Value>(_1e0e7e024_Value{._field_data=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{})}), });
}



inline jule::Any _1ed777777_find_builtins_sema(jule::Str _427323_ident, jule::Ptr<_1e0e1b3bd_Sema> _427339_s) {
	{
		auto &expr = _427339_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1ad1c58b9:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _427417_imp = *it;
			{
				if ((_427417_imp.get()._field_import_all || _1e0e15bc0_exist_ident(_427417_imp.ptr(), _427323_ident))) {
					jule::Any _427621_def = _1ed776ad9_find_builtins_import(_427323_ident,_427417_imp);;
					if ((_427621_def != nullptr)) {
						return jule::Any(_427621_def);
					};
				};
			}
			_iter_next_1ad1c58b9:;
			++it;
			goto _iter_begin_1ad1c58b9;
		}
		_iter_end_1ad1c58b9:;
	};
	jule::Str _428413_ppath = _1dd999ea4_dir(_427339_s.get()._field_file.get()._field_file.ptr());;
	if (_1dd588048_has_prefix(_428413_ppath,_1dd66e45e_PATH_STDLIB)) {
		(_428413_ppath).mut_slice(_1dd66e45e_PATH_STDLIB.len());;
		_428413_ppath=(jule::Str("std", 3) + _1dd5ea86e_replace(_428413_ppath,static_cast<jule::Str>(92LL),jule::Str("::", 2),-1LL));
		return jule::Any(_1ed81cbe6_find_package_builtin_def(_428413_ppath,_427323_ident));
	};
	return nullptr;
}



inline jule::Bool _1ed777a1e_is_ok_for_shifting(jule::Ptr<_1e0e7ce9b_Data>& _429828_d) {
	if (_1e0e7d85e_is_const(_429828_d.ptr())) {
		{
			
			if (_1e0d52579_is_i64(_429828_d.get()._field_constant.ptr())) {
				_case_begin_1ad1c9659:;
				{
					return (_1e0d501d1_read_i64(_429828_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1e0d527dd_is_u64(_429828_d.get()._field_constant.ptr())) {
				_case_begin_1ad1c9736:;
				{
					return true;
				}
			}
			else if (_1e0d5302a_is_f64(_429828_d.get()._field_constant.ptr())) {
				_case_begin_1ad1c979c:;
				{
					return (_1e0d50b82_read_f64(_429828_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1ad1c901b:;
				{
					return false;
				}
			}
			_match_end_1ad1c8e50:;
		};
	};
	jule::Ptr<_1ed781693_Prim> _43119_prim = _1ed77dc89_prim(_429828_d.get()._field_kind.ptr());;
	return ((_43119_prim != nullptr) && _1e0de99a6_is_int(_1ed781a06_to_str(_43119_prim.ptr())));
}



inline jule::Bool _1ed777d4e_is_instanced_struct(jule::Ptr<_1e010a05d_StructIns> _431524_s) {
	return (_431524_s.get()._field_decl.get()._field_generics.len() == _431524_s.get()._field_generics.len());
}



inline jule::Bool _1ed778129_is_ptr_arithmetic_compatible_int(jule::Ptr<_1e0e7ce9b_Data>& _431942_d) {
	if (_1e0e7d85e_is_const(_431942_d.ptr())) {
		return _1e0e68d11_int_assignable(jule::Str("int", 3),_431942_d);
	};
	_1e0e68e43_TypeCompatibilityChecker _432313_tcc = _1e0e68e43_TypeCompatibilityChecker{._field_dest=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)}), ._field_src=_431942_d.get()._field_kind, };;
	return _1e0e69e99_check(&_432313_tcc);
}



inline void _1ed7783d2_apply_cast_kind_model(jule::Ptr<_1e0e7ce9b_Data>& _433231_d, jule::Ptr<_1ed77bbbb_TypeKind>& _433246_t) {
	_433231_d.get()._field_model=jule::Any(jule::new_ptr<_1e013ec63_CastingExprModel>(_1e013ec63_CastingExprModel{._field_expr=jule::Any(_433231_d.get()._field_model), ._field_kind=_433246_t, ._field_expr_kind=_433231_d.get()._field_kind}));
}



inline void _1ed77868a_apply_cast_kind(jule::Ptr<_1e0e7ce9b_Data>& _434025_d, jule::Ptr<_1ed77bbbb_TypeKind>& _434040_t) {
	_1ed7783d2_apply_cast_kind_model(_434025_d,_434040_t);
	_434025_d.get()._field_kind=_434040_t;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed778888_build_void_data(void) {
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("void", 4)), 6)}), ._field_mutable=false, ._field_lvalue=false, ._field_decl=false, });
}



inline jule::Str _1ed778b52_check_data_for_integer_indexing(jule::Ptr<_1e0e7ce9b_Data>& _435641_d) {
	jule::Str _435653_err_fmt = jule::Str();
	if ((_435641_d == nullptr)) {
		_435653_err_fmt = jule::Str();
		return _435653_err_fmt;
	};
	{
		
		if ((_1ed77dc89_prim(_435641_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1ad1d0880:;
			{
				_435653_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435653_err_fmt;
			}
		}
		else if ((!(_1e0de99a6_is_int(_1ed781a06_to_str(_1ed77dc89_prim(_435641_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1ad1d08e6:;
			{
				_435653_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435653_err_fmt;
			}
		}
		else if (_1e0e7d85e_is_const(_435641_d.ptr())) {
			_case_begin_1ad1d095c:;
			{
				if ((_1e0d513be_as_f64(_435641_d.get()._field_constant.ptr()) < 0LL)) {
					_435653_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _435653_err_fmt;
				};
			}
		}
		else if ((_1ed77dc89_prim(_435641_d.get()._field_kind.ptr()) == nullptr) || _1e0e7d85e_is_const(_435641_d.ptr()) || (_1e0ddda88_real_kind_of(_1ed781a06_to_str(_1ed77dc89_prim(_435641_d.get()._field_kind.ptr()).ptr())) != _1e0ddda88_real_kind_of(jule::Str("int", 3)))) {
			_case_begin_1ad1d09c3:;
			{
				jule::Ptr<_1ed77bbbb_TypeKind> _437317_t = jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)});;
				_1ed77868a_apply_cast_kind(_435641_d,_437317_t);
			}
		}
		_match_end_1ad1d0dad:;
	};
	_435653_err_fmt = jule::Str();
	return _435653_err_fmt;
}



inline void _1ed778e3d_apply_cast_model_by_enum(jule::Ptr<_1e0e7ce9b_Data>& _438234_d, jule::Ptr<_1e057b8b9_Enum> _438248_e) {
	if ((_438248_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ed781693_Prim> _43869_p = _1ed77dc89_prim(_438248_e.get()._field_kind.get()._field_kind.ptr());;
	if (_1ed784652_is_str(_43869_p.ptr())) {
		return;;
	};
	_1ed7783d2_apply_cast_kind_model(_438234_d,_438248_e.get()._field_kind.get()._field_kind);
}



inline void _1ed779207_cast_const_by_type(jule::Str& _439324_t, jule::Ptr<_1e0e7ce9b_Data>& _439337_d) {
	{
		
		if (_1e0de9423_is_sig_int(_439324_t)) {
			_case_begin_1ad1d69eb:;
			{
				{
					auto _match_expr{ _1e0dddd30_bitsize_of(_1e0ddda88_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ad1d77bb:;
						{
							_1e0d51644_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1e0d50de6_as_i64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ad1d7832:;
						{
							_1e0d51644_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e0d50de6_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ad1d7898:;
						{
							_1e0d51644_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e0d50de6_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ad1d790e:;
						{
							_1e0d51644_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e0d50de6_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ad1d73d1:;
				};
			}
		}
		else if (_1e0de970e_is_unsig_int(_439324_t)) {
			_case_begin_1ad1d6a73:;
			{
				{
					auto _match_expr{ _1e0dddd30_bitsize_of(_1e0ddda88_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ad1db094:;
						{
							_1e0d518b9_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1e0d5115a_as_u64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ad1db10a:;
						{
							_1e0d518b9_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e0d5115a_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ad1db171:;
						{
							_1e0d518b9_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e0d5115a_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ad1db1d7:;
						{
							_1e0d518b9_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e0d5115a_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ad1db03e:;
				};
			}
		}
		else if (_1e0de9c92_is_float(_439324_t)) {
			_case_begin_1ad1d6aea:;
			{
				{
					auto _match_expr{ _1e0dddd30_bitsize_of(_1e0ddda88_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ad1de88e:;
						{
							_1e0d52139_set_f64(_439337_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1e0d513be_as_f64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ad1de905:;
						{
							_1e0d52139_set_f64(_439337_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e0d513be_as_f64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ad1de839:;
				};
			}
		}
		_match_end_1ad1d68ca:;
	};
}



inline void _1ed779603_update_model_to_generic_ins(jule::Ptr<_1e013ee50_FnCallExprModel>& _442737_m, jule::Ptr<_1e01457c4_FnIns>& _442763_f) {
	{
		auto &_match_expr{ _442737_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e01457c4_FnIns>>()) {
			_case_begin_1ad1ded78:;
			{
				_442737_m.get()._field_expr=jule::Any(_442763_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01411d7_StructSubIdentExprModel>>()) {
			_case_begin_1ad1dedde:;
			{
				_442737_m.get()._field_expr.operator jule::Ptr<_1e01411d7_StructSubIdentExprModel>().get()._field_method=_442763_f;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e01413c4_StructStaticIdentExprModel>>()) {
			_case_begin_1ad1dee66:;
			{
				_442737_m.get()._field_expr.operator jule::Ptr<_1e01413c4_StructStaticIdentExprModel>().get()._field_method=_442763_f;
			}
		}
		_match_end_1ad1e095b:;
	};
}



inline jule::Bool _1ed779977_push_sub_ident_from_expr(jule::Any _443833_expr, jule::Ptr<_1e01260ac_SubIdentTypeDecl>& _443854_t) {
	{
		auto &_match_expr{ _443833_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e012a7dc_IdentExpr>>()) {
			_case_begin_1ad1e33dc:;
			{
				jule::Ptr<_1e012a7dc_IdentExpr> _444117_e = _443833_expr.operator jule::Ptr<_1e012a7dc_IdentExpr>();;
				_443854_t.get()._field_idents = jule::alloc_for_append(_443854_t.get()._field_idents,1);_443854_t.get()._field_idents.__push(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_444117_e.get()._field_token, ._field_ident=_444117_e.get()._field_ident, }));;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e012c080_SubIdentExpr>>()) {
			_case_begin_1ad1e3453:;
			{
				jule::Ptr<_1e012c080_SubIdentExpr> _444717_e = _443833_expr.operator jule::Ptr<_1e012c080_SubIdentExpr>();;
				if ((!(_1ed779977_push_sub_ident_from_expr(jule::Any(_444717_e.get()._field_expr.get()._field_kind),_443854_t)))) {
					return false;
				};
				_443854_t.get()._field_idents = jule::alloc_for_append(_443854_t.get()._field_idents,1);_443854_t.get()._field_idents.__push(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_444717_e.get()._field_ident, ._field_ident=_444717_e.get()._field_ident.get()._field_kind, }));;
			}
		}
		else {
			_case_begin_1ad1e2d04:;
			{
				return false;
			}
		}
		_match_end_1ad1e18c4:;
	};
	return true;
}



inline jule::Bool _1ed793243_kind_uses_generics(jule::Any& _153724_k, jule::Slice<jule::Ptr<_1e013165b_GenericDecl>>& _153742_generics) {
	{
		auto &expr = _153742_generics;
		auto it = expr.begin();
		_iter_begin_1ad56e191:;
		if (it != expr.end()) {
			jule::Ptr<_1e013165b_GenericDecl> &_153812_g = *it;
			{
				if (static__1ed792d47_exist(_153812_g.get()._field_ident,_153724_k)) {
					return true;
				};
			}
			_iter_next_1ad56e191:;
			++it;
			goto _iter_begin_1ad56e191;
		}
		_iter_end_1ad56e191:;
	};
	return false;
}



inline jule::Bool _1ed7935c8_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _154723_directives, jule::Str _154754_tag) {
	{
		auto &expr = _154723_directives;
		auto it = expr.begin();
		_iter_begin_1ad56e713:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _154817_dr = *it;
			{
				if ((_154817_dr.get()._field_tag.get()._field_kind == _154754_tag)) {
					return true;
				};
			}
			_iter_next_1ad56e713:;
			++it;
			goto _iter_begin_1ad56e713;
		}
		_iter_end_1ad56e713:;
	};
	return false;
}



inline jule::Bool _1ed793870_can_get_ptr(jule::Ptr<_1e0e7ce9b_Data>& _155621_d) {
	if (((!(_155621_d.get()._field_lvalue)) || _1e0e7d85e_is_const(_155621_d.ptr()))) {
		return false;
	};
	{
		
		if (((_1ed77ee77_fnc(_155621_d.get()._field_kind.ptr()) != nullptr) || (_1ed77e4c6_enm(_155621_d.get()._field_kind.ptr()) != nullptr))) {
			_case_begin_1ad571b22:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ad57155b:;
			{
				return true;
			}
		}
		_match_end_1ad570659:;
	};
}



inline jule::Bool _1ed793b5b_is_valid_for_sptr_type(jule::Ptr<_1ed77bbbb_TypeKind>& _157032_t) {
	jule::Ptr<_1e010a05d_StructIns> _157113_s = _1ed7801db_strct(_157032_t.ptr());;
	if ((((_157113_s != nullptr) && (_157113_s.get()._field_decl != nullptr)) && _157113_s.get()._field_decl.get()._field_cpp_linked)) {
		return false;
	};
	return true;
}



inline jule::Bool _1ed793e03_is_valid_for_ref(jule::Ptr<_1ed77bbbb_TypeKind>& _157926_t) {
	return (_1ed77ee77_fnc(_157926_t.ptr()) == nullptr);
}



inline jule::Bool _1ed7941bc_is_builtin_str_convertable(jule::Ptr<_1ed77bbbb_TypeKind>& _158236_t) {
	return (((!(_1ed77cd10_void(_158236_t.ptr()))) && (_1ed77ee77_fnc(_158236_t.ptr()) == nullptr)) && (_1ed780928_tup(_158236_t.ptr()) == nullptr));
}



inline jule::Str _1ed794497_build_link_path_by_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _158631_tokens) {
	jule::Str _158713_s = _158631_tokens[0LL].get()._field_kind;;
	{
		auto expr = _158631_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ad5756b4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> &_158812_token = *it;
			{
				_158713_s+=jule::Str("::", 2);
				_158713_s+=_158812_token.get()._field_kind;
			}
			_iter_next_1ad5756b4:;
			++it;
			goto _iter_begin_1ad5756b4;
		}
		_iter_end_1ad5756b4:;
	};
	return _158713_s;
}



inline jule::Ptr<_1ed781693_Prim> _1ed7947d8_build_prim_type(jule::Str _159520_kind) {
	return jule::new_ptr<_1ed781693_Prim>(_1ed781693_Prim{._field_kind=_159520_kind});
}



inline jule::Ptr<_1e010261b_Struct> _1ed794a80_get_struct_from_kind(jule::Ptr<_1ed77bbbb_TypeKind> _160129_k) {
	{
		
		if ((_160129_k == nullptr)) {
			_case_begin_1ad576ece:;
			{
				return nullptr;
			}
		}
		else if ((_1ed7801db_strct(_160129_k.ptr()) != nullptr)) {
			_case_begin_1ad577045:;
			{
				return _1ed7801db_strct(_160129_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1ed77deed_sptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1ad576c6a:;
			{
				return _1ed794a80_get_struct_from_kind(_1ed77deed_sptr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ed77ec13_slc(_160129_k.ptr()) != nullptr)) {
			_case_begin_1ad576cd1:;
			{
				return _1ed794a80_get_struct_from_kind(_1ed77ec13_slc(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ed77e99e_arr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1ad576d47:;
			{
				return _1ed794a80_get_struct_from_kind(_1ed77e99e_arr(_160129_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1ed77e262_ptr(_160129_k.ptr()) != nullptr)) {
			_case_begin_1ad576880:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1ad575dac:;
			{
				return nullptr;
			}
		}
		_match_end_1ad575ce1:;
	};
}



inline jule::Bool _1ed794d27_is_prim(jule::Str _162412_kind) {
	return ((((((((((((((((_162412_kind == jule::Str("i8", 2)) || (_162412_kind == jule::Str("i16", 3))) || (_162412_kind == jule::Str("i32", 3))) || (_162412_kind == jule::Str("i64", 3))) || (_162412_kind == jule::Str("u8", 2))) || (_162412_kind == jule::Str("u16", 3))) || (_162412_kind == jule::Str("u32", 3))) || (_162412_kind == jule::Str("u64", 3))) || (_162412_kind == jule::Str("f32", 3))) || (_162412_kind == jule::Str("f64", 3))) || (_162412_kind == jule::Str("int", 3))) || (_162412_kind == jule::Str("uint", 4))) || (_162412_kind == jule::Str("uintptr", 7))) || (_162412_kind == jule::Str("bool", 4))) || (_162412_kind == jule::Str("str", 3))) || (_162412_kind == jule::Str("any", 3)));
}



inline void _1ed7950d0_apply_implicit_cast(jule::Ptr<_1ed77bbbb_TypeKind>& _164329_dest, jule::Ptr<_1e0e7ce9b_Data>& _164351_d) {
	if (_1ed77ca9b_is_nil(_164351_d.get()._field_kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ed781693_Prim> _16489_dest_prim = _1ed77dc89_prim(_164329_dest.ptr());;
	jule::Ptr<_1ed781693_Prim> _16499_prim = _1ed77dc89_prim(_164351_d.get()._field_kind.ptr());;
	if ((_16489_dest_prim != nullptr)) {
		if (_1ed7848b6_is_any(_16489_dest_prim.ptr())) {
			_1ed77868a_apply_cast_kind(_164351_d,_164329_dest);
			return;;
		};
		if (((((((!(_1ed77c837_cpp_linked(_164351_d.get()._field_kind.ptr()))) && (!(_164351_d.get()._field_kind.get()._field_variadic))) && (!(_164351_d.get()._field_lvalue))) && (!(_1e0e7d85e_is_const(_164351_d.ptr())))) && (_16499_prim != nullptr)) && _1e0dea039_is_num(_16499_prim.get()._field_kind))) {
			_1ed77868a_apply_cast_kind(_164351_d,_164329_dest);
		};
		return;;
	};
	if (((_1ed780450_trt(_164329_dest.ptr()) != nullptr) && (_1ed780450_trt(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1ed7783d2_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
	if (((_1ed77e73a_tenm(_164329_dest.ptr()) != nullptr) && (_1ed77e73a_tenm(_164351_d.get()._field_kind.ptr()) == nullptr))) {
		_1ed7783d2_apply_cast_kind_model(_164351_d,_164329_dest);
		return;;
	};
}



inline std::tuple<jule::Ptr<_1e0e77eeb_SymbolTable>,jule::Slice<_1dd65aa00_Log>> _1ed79804a_build_symbols(jule::Ptr<_1e00e2760_Ast>& _1523_ast, jule::Trait<_1e0e10a00_Importer>& _1539_importer, jule::Ptr<_1e014d821_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1e014d821_SymbolBuilder> _1613_sb = jule::new_ptr<_1e014d821_SymbolBuilder>(_1e014d821_SymbolBuilder{._field_owner=_1563_owner, ._field_importer=_1539_importer, ._field_ast=_1523_ast, });;
	_1e015397a_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	};
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1e0e16253_Package>,jule::Slice<_1dd65aa00_Log>> _1ed798479___analyze_package(jule::Slice<jule::Ptr<_1e00e2760_Ast>>& _2927_files, jule::Trait<_1e0e10a00_Importer>& _2947_importer, jule::I32& _2968_flags) {
	jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1e0e77eeb_SymbolTable>>::alloc(0LL,_2927_files.len());;
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1ad677156:;
		if (it != expr.end()) {
			jule::Ptr<_1e00e2760_Ast> _3217_f = *it;
			{
				jule::Ptr<_1e0e77eeb_SymbolTable> _3318_table;;
				jule::Slice<_1dd65aa00_Log> _3329_errors;;
				std::tie(_3318_table,_3329_errors) = _1ed79804a_build_symbols(_3217_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				};
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);;
			}
			_iter_next_1ad677156:;
			++it;
			goto _iter_begin_1ad677156;
		}
		_iter_end_1ad677156:;
	};
	jule::Ptr<_1e0e1b3bd_Sema> _4013_sema = jule::new_ptr<_1e0e1b3bd_Sema>(_1e0e1b3bd_Sema{._field_flags=_2968_flags});;
	_1e0e33715_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	};
	jule::Ptr<_1e0e16253_Package> _4813_pkg = jule::new_ptr<_1e0e16253_Package>(_1e0e16253_Package{._field_files=_4013_sema.get()._field_files});;
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1e0e16253_Package>,jule::Slice<_1dd65aa00_Log>> _1ed798864_analyze_package(jule::Slice<jule::Ptr<_1e00e2760_Ast>> _7228_files, jule::Trait<_1e0e10a00_Importer> _7247_importer, jule::I32 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Ptr<_1e0e16253_Package> _7714_package;;
	jule::Slice<_1dd65aa00_Log> _7727_logs;;
	std::tie(_7714_package,_7727_logs) = _1ed798479___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1e01457c4_FnIns> _1ed7a2593_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ad67ea43:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _2420_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed806dde_builtin_caller_out), });;
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ad67eaa9:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _2720_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed807021_builtin_caller_outln), });;
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ad67e7ce:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _3020_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed807153_builtin_caller_new), });;
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ad67e845:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _3320_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed8373d6_builtin_caller_panic), });;
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ad67e8ab:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _3620_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed837518_builtin_caller_make), });;
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ad67e57b:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _3920_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed83764a_builtin_caller_append), });;
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ad67e5e2:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _4220_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed8379e1_builtin_caller_copy), });;
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ad67e669:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _4520_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed837b23_builtin_caller_clone), });;
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ad67e6e1:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _4820_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed837c55_builtin_caller_assert), });;
				return _4820_f;
			}
		}
		else {
			_case_begin_1ad67e2a1:;
			{
				return nullptr;
			}
		}
		_match_end_1ad67e0d6:;
	};
}



inline jule::Ptr<_1ed77ae84_TypeAlias> _1ed7a4771_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ad685120:;
			{
				static jule::Ptr<_1ed77ae84_TypeAlias> _5820_t = jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("u8", 2)), 6)})}), });;
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ad67ee94:;
			{
				static jule::Ptr<_1ed77ae84_TypeAlias> _6820_t = jule::new_ptr<_1ed77ae84_TypeAlias>(_1ed77ae84_TypeAlias{._field_public=true, ._field_kind=jule::new_ptr<_1ed780cd0_TypeSymbol>(_1ed780cd0_TypeSymbol{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("i32", 3)), 6)})}), });;
				return _6820_t;
			}
		}
		else {
			_case_begin_1ad67ecc9:;
			{
				return nullptr;
			}
		}
		_match_end_1ad684be1:;
	};
}



inline jule::Ptr<_1e0567d06_Trait> _1ed7bd35b_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1ed7d1490_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1e01457c4_FnIns> _8713_f = _1ed7a2593_find_builtin_fn(_8621_ident);;
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	};
	jule::Ptr<_1ed77ae84_TypeAlias> _9213_ta = _1ed7a4771_find_builtin_type_alias(_8621_ident);;
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	};
	jule::Ptr<_1e0567d06_Trait> _9713_t = _1ed7bd35b_find_builtin_trait(_8621_ident);;
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	};
	return nullptr;
}



inline jule::Any _1ed7a1042_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ad6894a9:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _10820_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed838abe_builtin_caller_std_debug_out), });;
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ad689564:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _11120_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed838edc_builtin_caller_std_debug_outln), });;
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1ad6888a4:;
			{
				return nullptr;
			}
		}
		_match_end_1ad687c5a:;
	};
}



inline jule::Any _1ed7a86ba_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1ad68ac6e:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _12120_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed837d87_builtin_caller_std_mem_size_of), });;
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1ad68ab70:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _12420_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed837eb9_builtin_caller_std_mem_align_of), });;
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1ad68abd6:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _12720_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed8380eb_builtin_caller_std_mem_free), });;
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1ad68a1be:;
			{
				return nullptr;
			}
		}
		_match_end_1ad68a169:;
	};
}



inline jule::Any _1ed7da8ea_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1ad68ce5d:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _13720_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed838294_builtin_caller_std_jule_integrated_to_str), });;
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1ad68cd5e:;
			{
				static jule::Ptr<_1e01457c4_FnIns> _14020_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed8386b2_builtin_caller_std_jule_integrated_emit), });;
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1ad68c3ad:;
			{
				return nullptr;
			}
		}
		_match_end_1ad68c358:;
	};
}



inline jule::Any _1ed81cbe6_find_package_builtin_def(jule::Str _14729_link_path, jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ad68e965:;
			{
				return jule::Any(_1ed7a1042_find_builtin_def_std_debug(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ad68ea0e:;
			{
				return jule::Any(_1ed7a86ba_find_builtin_def_std_mem(_14745_ident));
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ad68ea75:;
			{
				return jule::Any(_1ed7da8ea_find_builtin_def_std_jule_integrated(_14745_ident));
			}
		}
		else {
			_case_begin_1ad68dba6:;
			{
				return nullptr;
			}
		}
		_match_end_1ad68db51:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed806174_builtin_caller_common_plain(jule::Ptr<_1e0e7ea19_Eval>& _16037_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _16052_fc, jule::Ptr<_1e0e7ce9b_Data>& _16074_d) {
	jule::Ptr<_1e01457c4_FnIns> _16113_f = _1ed77ee77_fnc(_16074_d.get()._field_kind.ptr());;
	_1e0e6eae7_FnCallArgChecker _16313_fcac = _1e0e6eae7_FnCallArgChecker{._field_e=_16037_e, ._field_args=_16052_fc.get()._field_args, ._field_error_token=_16052_fc.get()._field_token, ._field_f=_16113_f, ._field_dynamic_annotation=false, };;
	if ((!(_1e0e71eb2_check(&_16313_fcac)))) {
		return nullptr;
	};
	jule::Ptr<_1e013ee50_FnCallExprModel> _17413_model = jule::new_ptr<_1e013ee50_FnCallExprModel>(_1e013ee50_FnCallExprModel{._field_token=_16052_fc.get()._field_token, ._field_func=_16113_f, ._field_expr=jule::Any(_16074_d.get()._field_model), ._field_args=_16313_fcac._field_arg_models, });;
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1ed778888_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=_16113_f.get()._field_result, });
	};
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed7bcaca_builtin_caller_common(jule::Ptr<_1e0e7ea19_Eval>& _19331_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _19346_fc, jule::Ptr<_1e0e7ce9b_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	return _1ed806174_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed7bcc0c_builtin_caller_common_mut(jule::Ptr<_1e0e7ea19_Eval>& _20135_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _20150_fc, jule::Ptr<_1e0e7ce9b_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1e0e7eee2_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1ed7bcaca_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed806cac_builtin_caller_error(jule::Ptr<_1e0e7ea19_Eval>& _20830_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	};
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _21913_expr = _1e0e99cdc_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);;
	if ((_21913_expr == nullptr)) {
		return nullptr;
	};
	if (_1e0e7d386_is_nil(_21913_expr.ptr())) {
		_1e0e7eee2_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _22813_d = _1ed778888_build_void_data();;
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1e01430a7_BuiltinErrorCallExprModel>(_1e01430a7_BuiltinErrorCallExprModel{._field_err=jule::Any(_21913_expr.get()._field_model)}));
	return _22813_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed806dde_builtin_caller_out(jule::Ptr<_1e0e7ea19_Eval>& _23628_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _23643_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	};
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _24813_expr = _1e0e99cdc_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);;
	if ((_24813_expr == nullptr)) {
		return nullptr;
	};
	if ((!(_1ed7941bc_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1e0e7eee2_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _25813_d = _1ed778888_build_void_data();;
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1e0141d64_BuiltinOutCallExprModel>(_1e0141d64_BuiltinOutCallExprModel{._field_expr=jule::Any(_24813_expr.get()._field_model), }));
	return _25813_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed807021_builtin_caller_outln(jule::Ptr<_1e0e7ea19_Eval>& _26330_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _26345_fc, jule::Ptr<_1e0e7ce9b_Data>& _26367_d) {
	_26367_d=_1ed806dde_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	};
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1e0142051_BuiltinOutlnCallExprModel>(_1e0142051_BuiltinOutlnCallExprModel{._field_expr=jule::Any(_26367_d.get()._field_model.operator jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>().get()._field_expr), }));
	return _26367_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed807153_builtin_caller_new(jule::Ptr<_1e0e7ea19_Eval>& _27528_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _27543_fc, jule::Ptr<_1e0e7ce9b_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	};
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1e0e7eee2_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _28713_t = _1e0e996c1_eval_expr_kind(_27528_e, jule::Any(_27543_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_28713_t == nullptr)) {
		return nullptr;
	};
	if ((!(_28713_t.get()._field_decl))) {
		_1e0e7eee2_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	};
	if ((!(_1ed793b5b_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1e010a05d_StructIns> _29817_s = _1ed7801db_strct(_28713_t.get()._field_kind.ptr());;
		if ((((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked)) {
			_1e0e7eee2_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;
	};
	_27565_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1ed784ba2_Sptr>(_1ed784ba2_Sptr{._field_elem=_28713_t.get()._field_kind}), 7)});
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1ed77bbbb_TypeKind> _31217_old = _27528_e.get()._field_prefix;;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1e0e7ce9b_Data> _31517_init = _1e0e99cdc_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);;
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			jule::Ptr<_1dd9941e0_Token> _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;;
			;
			_1e0e2620d_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1e0e24409_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1e014242a_BuiltinNewCallExprModel>(_1e014242a_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, ._field_init=jule::Any(_31517_init.get()._field_model)}));
		};
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1e014242a_BuiltinNewCallExprModel>(_1e014242a_BuiltinNewCallExprModel{._field_kind=_28713_t.get()._field_kind, }));
	};
	return _27565_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed8373d6_builtin_caller_panic(jule::Ptr<_1e0e7ea19_Eval>& _34030_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _34045_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	};
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _35213_expr = _1e0e99cdc_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;
	};
	if (((_1ed77dc89_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1ed784652_is_str(_1ed77dc89_prim(_35213_expr.get()._field_kind.ptr()).ptr()))))) {
		_1e0e7eee2_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _36113_d = _1ed778888_build_void_data();;
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1e0142617_BuiltinPanicCallExprModel>(_1e0142617_BuiltinPanicCallExprModel{._field_token=_34045_fc.get()._field_token, ._field_expr=jule::Any(_35213_expr.get()._field_model)}));
	return _36113_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed837518_builtin_caller_make(jule::Ptr<_1e0e7ea19_Eval>& _36929_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _36944_fc, jule::Ptr<_1e0e7ce9b_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		};
		_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _38213_t = _1e0e996c1_eval_expr_kind(_36929_e, jule::Any(_36944_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_38213_t == nullptr)) {
		return nullptr;
	};
	{
		
		if ((!(_38213_t.get()._field_decl))) {
			_case_begin_1ad6b9ce2:;
			{
				goto _match_end_1ad6ba0ab;
			}
		}
		else if ((_1ed77ec13_slc(_38213_t.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad6b9d58:;
			{
				if ((_36944_fc.get()._field_args.len() > 3LL)) {
					_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		else if (((_1ed77dc89_prim(_38213_t.get()._field_kind.ptr()) != nullptr) && _1ed784652_is_str(_1ed77dc89_prim(_38213_t.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ad6b9dbe:;
			{
				if ((_36944_fc.get()._field_args.len() > 2LL)) {
					_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				};
				goto _julec_label_cont;
			}
		}
		_match_end_1ad6ba0ab:;
	};
	_1e0e7eee2_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	return nullptr;
	_julec_label_cont:;
	_36966_d.get()._field_kind=_38213_t.get()._field_kind;
	jule::Ptr<_1e0e7ce9b_Data> _40613_len = _1e0e99cdc_eval_expr(_1e0e23b01_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);;
	if ((_40613_len == nullptr)) {
		return nullptr;
	};
	_1e0e885a0_check_integer_indexing_by_data(_36929_e.ptr(), _40613_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	jule::Ptr<_1e01429e1_BuiltinMakeCallExprModel> _41313_model = jule::new_ptr<_1e01429e1_BuiltinMakeCallExprModel>(_1e01429e1_BuiltinMakeCallExprModel{._field_kind=_38213_t.get()._field_kind, ._field_len=jule::Any(_40613_len.get()._field_model), });;
	_36966_d.get()._field_model=jule::Any(_41313_model);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1e0e7ce9b_Data> _41917_cap = _1e0e99cdc_eval_expr(_1e0e23b01_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38213_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);;
		if ((_41917_cap == nullptr)) {
			return _36966_d;
		};
		_1e0e885a0_check_integer_indexing_by_data(_36929_e.ptr(), _41917_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_41313_model.get()._field_cap=jule::Any(_41917_cap.get()._field_model);
	};
	return _36966_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed83764a_builtin_caller_append(jule::Ptr<_1e0e7ea19_Eval>& _42931_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _42946_fc, jule::Ptr<_1e0e7ce9b_Data>& _42968_d) {
	if ((_42946_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_42946_fc.get()._field_args.len() < 2LL)) {
		if ((_42946_fc.get()._field_args.len() == 1LL)) {
			_1e0e7eee2_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e0e7eee2_push_err(_42931_e.ptr(), _42946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _44213_t = _1e0e99cdc_eval_expr(_42931_e, _42946_fc.get()._field_args[0LL]);;
	if ((_44213_t == nullptr)) {
		return nullptr;
	};
	if ((_1ed77ec13_slc(_44213_t.get()._field_kind.ptr()) == nullptr)) {
		_1e0e7eee2_push_err(_42931_e.ptr(), _42946_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e01457c4_FnIns> _45213_f = jule::new_ptr<_1e01457c4_FnIns>(_1e01457c4_FnIns{._field_params=jule::Slice<jule::Ptr<_1e0144938_ParamIns>>::make({jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_mutable=true, }), ._field_kind=_44213_t.get()._field_kind}),jule::new_ptr<_1e0144938_ParamIns>(_1e0144938_ParamIns{._field_decl=jule::new_ptr<_1e0144394_Param>(_1e0144394_Param{._field_mutable=true, ._field_variadic=true, }), ._field_kind=_1ed77ec13_slc(_44213_t.get()._field_kind.ptr()).get()._field_elem})}), ._field_result=_44213_t.get()._field_kind, ._field_caller=jule::Fn<jule::Ptr<_1e0e7ce9b_Data>(jule::Ptr<_1e0e7ea19_Eval>&,jule::Ptr<_1e012cb0d_FnCallExpr>&,jule::Ptr<_1e0e7ce9b_Data>&)>(_1ed806174_builtin_caller_common_plain), });;
	_42968_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_45213_f, 1)});
	_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1e014179d_CommonIdentExprModel>(_1e014179d_CommonIdentExprModel{._field_ident=jule::Str("append", 6)}));
	_42968_d=_1ed806174_builtin_caller_common_plain(_42931_e,_42946_fc,_42968_d);
	if ((_42968_d != nullptr)) {
		jule::Ptr<_1e013ee50_FnCallExprModel> _48017_model = _42968_d.get()._field_model.operator jule::Ptr<_1e013ee50_FnCallExprModel>();;
		_42968_d.get()._field_model=jule::Any(jule::new_ptr<_1e0142bcd_BuiltinAppendCallExprModel>(_1e0142bcd_BuiltinAppendCallExprModel{._field_dest=jule::Any(_48017_model.get()._field_args[0LL]), ._field_elements=jule::Any(_48017_model.get()._field_args[1LL])}));
	};
	return _42968_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed83777c_caller_copy_slice(jule::Ptr<_1e0e7ce9b_Data>& _48927_dest, jule::Ptr<_1e0e7ea19_Eval>& _48945_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _48960_fc, jule::Ptr<_1e0e7ce9b_Data>& _48982_d) {
	if ((!(_48927_dest.get()._field_mutable))) {
		_1e0e7eee2_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _49413_src = _1e0e99cdc_eval_expr(_48945_e, _48960_fc.get()._field_args[1LL]);;
	if ((_49413_src == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1ed78560e_Slc> _49813_slc = _1ed77ec13_slc(_49413_src.get()._field_kind.ptr());;
	if ((_49813_slc != nullptr)) {
		if (((!(_49413_src.get()._field_mutable)) && _1ed77d074_mutable(_49813_slc.get()._field_elem.ptr()))) {
			_1e0e7eee2_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1ed77c381_equals(_48927_dest.get()._field_kind, _49413_src.get()._field_kind)))) {
			_1e0e7eee2_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	} else {
		jule::Ptr<_1ed781693_Prim> _50813_dest_prim = _1ed77dc89_prim(_1ed77ec13_slc(_48927_dest.get()._field_kind.ptr()).get()._field_elem.ptr());;
		jule::Ptr<_1ed781693_Prim> _50913_prim = _1ed77dc89_prim(_49413_src.get()._field_kind.ptr());;
		if (((((_50813_dest_prim == nullptr) || (_50913_prim == nullptr)) || (!(_1ed784652_is_str(_50913_prim.ptr())))) || (!(_1ed782c27_is_u8(_50813_dest_prim.ptr()))))) {
			_1e0e7eee2_push_err(_48945_e.ptr(), _48960_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_48927_dest.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_49413_src.get()._field_kind.ptr()))}));
		};
	};
	_48982_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)});
	_48982_d.get()._field_model=jule::Any(jule::new_ptr<_1e0142dba_BuiltinCopyCallExprModel>(_1e0142dba_BuiltinCopyCallExprModel{._field_dest=_48927_dest, ._field_src=_49413_src}));
	return _48982_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed8378ae_caller_copy_str(jule::Ptr<_1e0e7ce9b_Data>& _52325_dest, jule::Ptr<_1e0e7ea19_Eval>& _52343_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _52358_fc, jule::Ptr<_1e0e7ce9b_Data>& _52380_d) {
	if ((!(_52325_dest.get()._field_mutable))) {
		_1e0e7eee2_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _52813_src = _1e0e99cdc_eval_expr(_52343_e, _52358_fc.get()._field_args[1LL]);;
	if ((_52813_src == nullptr)) {
		return nullptr;
	};
	{
		
		if ((_1ed77dc89_prim(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad6d963b:;
			{
				if (_1ed784652_is_str(_1ed77dc89_prim(_52813_src.get()._field_kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1ed77ec13_slc(_52813_src.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad6d96a2:;
			{
				jule::Ptr<_1ed78560e_Slc> _53817_slc = _1ed77ec13_slc(_52813_src.get()._field_kind.ptr());;
				if (((_1ed77dc89_prim(_53817_slc.get()._field_elem.ptr()) != nullptr) && _1ed782c27_is_u8(_1ed77dc89_prim(_53817_slc.get()._field_elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ad6d99c1:;
	};
	_1e0e7eee2_push_err(_52343_e.ptr(), _52358_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_52325_dest.get()._field_kind.ptr())),jule::Any(_1ed77c073_to_str(_52813_src.get()._field_kind.ptr()))}));
	_julec_label_end:;
	_52380_d.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("int", 3)), 6)});
	_52380_d.get()._field_model=jule::Any(jule::new_ptr<_1e0142dba_BuiltinCopyCallExprModel>(_1e0142dba_BuiltinCopyCallExprModel{._field_dest=_52325_dest, ._field_src=_52813_src}));
	return _52380_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed8379e1_builtin_caller_copy(jule::Ptr<_1e0e7ea19_Eval>& _55329_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _55344_fc, jule::Ptr<_1e0e7ce9b_Data>& _55366_d) {
	if ((_55344_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_55344_fc.get()._field_args.len() < 2LL)) {
		if ((_55344_fc.get()._field_args.len() == 1LL)) {
			_1e0e7eee2_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		};
		_1e0e7eee2_push_err(_55329_e.ptr(), _55344_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	};
	if ((_55344_fc.get()._field_args.len() > 2LL)) {
		_1e0e7eee2_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _56913_dest = _1e0e99cdc_eval_expr(_55329_e, _55344_fc.get()._field_args[0LL]);;
	{
		
		if ((_56913_dest == nullptr)) {
			_case_begin_1ad6e5d62:;
			{
				return nullptr;
			}
		}
		else if ((_1ed77ec13_slc(_56913_dest.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ad6e5c63:;
			{
				return _1ed83777c_caller_copy_slice(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else if (((_1ed77dc89_prim(_56913_dest.get()._field_kind.ptr()) != nullptr) && _1ed784652_is_str(_1ed77dc89_prim(_56913_dest.get()._field_kind.ptr()).ptr()))) {
			_case_begin_1ad6e5cc9:;
			{
				return _1ed8378ae_caller_copy_str(_56913_dest,_55329_e,_55344_fc,_55366_d);
			}
		}
		else {
			_case_begin_1ad6e4d3e:;
			{
				_1e0e7eee2_push_err(_55329_e.ptr(), _55344_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1ad6e4cb7:;
	};
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed837b23_builtin_caller_clone(jule::Ptr<_1e0e7ea19_Eval>& _58330_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _58345_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_58345_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_58345_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_58345_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _59613_d = _1e0e996c1_eval_expr_kind(_58330_e, jule::Any(_58345_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_59613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ed77d7b1_supports_cloning(_59613_d.get()._field_kind.ptr())))) {
		{
			
			if ((_1ed77ec13_slc(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1ed7806b4_map(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1ed77e99e_arr(_59613_d.get()._field_kind.ptr()) != nullptr) || (_1ed77deed_sptr(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ad6ec50b:;
				{
					{
						_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_59613_d.get()._field_kind.ptr()))}));
					};
				}
			}
			else if ((_1ed7801db_strct(_59613_d.get()._field_kind.ptr()) != nullptr)) {
				_case_begin_1ad6ebd8a:;
				{
					{
						_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			else {
				_case_begin_1ad6ebd24:;
				{
					{
						_1e0e7eee2_push_err(_58330_e.ptr(), _58345_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1ed77c073_to_str(_59613_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					};
				}
			}
			_match_end_1ad6ebc58:;
		};
	};
	_59613_d.get()._field_mutable=true;
	_59613_d.get()._field_model=jule::Any(jule::new_ptr<_1e014223d_BuiltinCloneCallExprModel>(_1e014223d_BuiltinCloneCallExprModel{._field_expr=jule::Any(_59613_d.get()._field_model)}));
	return _59613_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed837c55_builtin_caller_assert(jule::Ptr<_1e0e7ea19_Eval>& _62931_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _62946_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_62946_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_62946_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_62946_fc.get()._field_args.len() > 2LL)) {
		_1e0e7eee2_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _64113_expr = _1e0e99cdc_eval_expr(_62931_e, _62946_fc.get()._field_args[0LL]);;
	if ((_64113_expr == nullptr)) {
		return nullptr;
	};
	if (((_1ed77dc89_prim(_64113_expr.get()._field_kind.ptr()) == nullptr) || (!(_1ed7843dd_is_bool(_1ed77dc89_prim(_64113_expr.get()._field_kind.ptr()).ptr()))))) {
		_1e0e7eee2_push_err(_62931_e.ptr(), _62946_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0142804_BuiltinAssertCallExprModel> _65013_model = jule::new_ptr<_1e0142804_BuiltinAssertCallExprModel>(_1e0142804_BuiltinAssertCallExprModel{._field_token=_62946_fc.get()._field_token, ._field_expr=jule::Any(_64113_expr.get()._field_model), ._field_log=jule::Str("assertion failed", 16)});;
	if ((_62946_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1e0e7ce9b_Data> _65817_log = _1e0e99cdc_eval_expr(_62931_e, _62946_fc.get()._field_args[1LL]);;
		if ((_65817_log == nullptr)) {
			return nullptr;
		};
		if ((((!(_1e0e7d85e_is_const(_65817_log.ptr()))) || (_1ed77dc89_prim(_65817_log.get()._field_kind.ptr()) == nullptr)) || (!(_1ed784652_is_str(_1ed77dc89_prim(_65817_log.get()._field_kind.ptr()).ptr()))))) {
			_1e0e7eee2_push_err(_62931_e.ptr(), _62946_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9)),jule::Any(_1ed77c073_to_str(_65817_log.get()._field_kind.ptr()))}));
			return nullptr;
		};
		_65013_model.get()._field_log=_1e0d5091d_read_str(_65817_log.get()._field_constant.ptr());
	};
	jule::Ptr<_1e0e7ce9b_Data> _67113_d = _1ed778888_build_void_data();;
	_67113_d.get()._field_model=jule::Any(_65013_model);
	return _67113_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed837d87_builtin_caller_std_mem_size_of(jule::Ptr<_1e0e7ea19_Eval>& _67640_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _67655_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_67655_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _68013_result = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_67655_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_67640_e.ptr(), _67655_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _68013_result;
	};
	if ((_67655_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_67640_e.ptr(), _67655_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _69213_d = _1e0e996c1_eval_expr_kind(_67640_e, jule::Any(_67655_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_69213_d == nullptr)) {
		return _68013_result;
	};
	_68013_result.get()._field_model=jule::Any(jule::new_ptr<_1e0140ea6_SizeofExprModel>(_1e0140ea6_SizeofExprModel{._field_expr=jule::Any(_69213_d.get()._field_model)}));
	return _68013_result;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed837eb9_builtin_caller_std_mem_align_of(jule::Ptr<_1e0e7ea19_Eval>& _70141_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _70156_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_70156_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _70513_result = jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("uint", 4)), 6)}), });;
	if ((_70156_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_70141_e.ptr(), _70156_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9))}));
		return _70513_result;
	};
	if ((_70156_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_70141_e.ptr(), _70156_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _71713_d = _1e0e996c1_eval_expr_kind(_70141_e, jule::Any(_70156_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_71713_d == nullptr)) {
		return _70513_result;
	};
	_70513_result.get()._field_model=jule::Any(jule::new_ptr<_1e0143717_AlignofExprModel>(_1e0143717_AlignofExprModel{._field_expr=jule::Any(_71713_d.get()._field_model)}));
	return _70513_result;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed8380eb_builtin_caller_std_mem_free(jule::Ptr<_1e0e7ea19_Eval>& _72637_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _72652_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_72652_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_72652_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_72637_e.ptr(), _72652_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	};
	if ((_72652_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _73913_d = _1e0e996c1_eval_expr_kind(_72637_e, jule::Any(_72652_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_73913_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ed77d54c_performs_rc(_73913_d.get()._field_kind.ptr())))) {
		_1e0e7eee2_push_err(_72637_e.ptr(), _72652_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _74813_result = _1ed778888_build_void_data();;
	_74813_result.get()._field_model=jule::Any(jule::new_ptr<_1e0143eba_FreeExprModel>(_1e0143eba_FreeExprModel{._field_expr=jule::Any(_73913_d.get()._field_model)}));
	return _74813_result;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed838294_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1e0e7ea19_Eval>& _75351_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _75366_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((_75366_fc.get()._field_generics.len() > 0LL)) {
		_1e0e7eee2_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	};
	if ((_75366_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_75351_e.ptr(), _75366_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	};
	if ((_75366_fc.get()._field_args.len() > 1LL)) {
		_1e0e7eee2_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1e0e7ce9b_Data> _76613_d = _1e0e996c1_eval_expr_kind(_75351_e, jule::Any(_75366_fc.get()._field_args[0LL].get()._field_kind));;
	if ((_76613_d == nullptr)) {
		return nullptr;
	};
	if ((!(_1ed7941bc_is_builtin_str_convertable(_76613_d.get()._field_kind)))) {
		_1e0e7eee2_push_err(_75351_e.ptr(), _75366_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	};
	return jule::new_ptr<_1e0e7ce9b_Data>(_1e0e7ce9b_Data{._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(_1ed7947d8_build_prim_type(jule::Str("str", 3)), 6)}), ._field_model=jule::Any(jule::new_ptr<_1e0143ae1_IntegratedToStrExprModel>(_1e0143ae1_IntegratedToStrExprModel{._field_expr=jule::Any(_76613_d.get()._field_model)})), });
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed8386b2_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1e0e7ea19_Eval>& _78449_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _78464_fc, jule::Ptr<_1e0e7ce9b_Data>& ) {
	if ((!(_1e0e8092c_is_unsafe(_78449_e.ptr())))) {
		_1e0e7eee2_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_78464_fc.get()._field_args.len() < 1LL)) {
		_1e0e7eee2_push_err(_78449_e.ptr(), _78464_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _79413_d = _1e0e99cdc_eval_expr(_78449_e, _78464_fc.get()._field_args[0LL]);;
	if ((_79413_d == nullptr)) {
		return nullptr;
	};
	if (((_1ed77dc89_prim(_79413_d.get()._field_kind.ptr()) == nullptr) || (!(_1ed784652_is_str(_1ed77dc89_prim(_79413_d.get()._field_kind.ptr()).ptr()))))) {
		_1e0e7eee2_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3)),jule::Any(_1ed77c073_to_str(_79413_d.get()._field_kind.ptr()))}));
		return nullptr;
	};
	if (((!(_1e0e7d85e_is_const(_79413_d.ptr()))) || (!(_1e0d52cb6_is_str(_79413_d.get()._field_constant.ptr()))))) {
		_1e0e7eee2_push_err(_78449_e.ptr(), _78464_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	};
	jule::Ptr<_1e0e7ce9b_Data> _80913_r = _1ed778888_build_void_data();;
	if ((_78464_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1e0e2049e_check_generic_quantity(_78449_e.get()._field_s.ptr(), 1LL,static_cast<jule::I32>(_78464_fc.get()._field_generics.len()),_78464_fc.get()._field_token)))) {
			return nullptr;
		};
		jule::Ptr<_1ed780cd0_TypeSymbol> _81517_k = _1e01497d9_build_type(_78464_fc.get()._field_generics[0LL]);;
		if ((!(_1e0e22748_check_type(_78449_e.get()._field_s, _81517_k,_78449_e.get()._field_lookup)))) {
			return nullptr;
		};
		_80913_r.get()._field_kind=_81517_k.get()._field_kind;
	};
	jule::Ptr<_1e0143ccd_BackendEmitExprModel> _82213_model = jule::new_ptr<_1e0143ccd_BackendEmitExprModel>(_1e0143ccd_BackendEmitExprModel{._field_code=_1e0d5091d_read_str(_79413_d.get()._field_constant.ptr()), });;
	if ((_78464_fc.get()._field_args.len() > 1LL)) {
		_82213_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,(_78464_fc.get()._field_args.len() - 1LL));
		{
			auto expr = _78464_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ad731e8b:;
			if (it != expr.end()) {
				jule::Ptr<_1e0128b3c_Expr> _82821_arg = *it;
				{
					jule::Ptr<_1e0e7ce9b_Data> _82921_argd = _1e0e996c1_eval_expr_kind(_78449_e, jule::Any(_82821_arg.get()._field_kind));;
					if ((_82921_argd == nullptr)) {
						return nullptr;
					};
					_82213_model.get()._field_exprs = jule::alloc_for_append(_82213_model.get()._field_exprs,1);_82213_model.get()._field_exprs.__push(jule::Any(_82921_argd.get()._field_model));;
				}
				_iter_next_1ad731e8b:;
				++it;
				goto _iter_begin_1ad731e8b;
			}
			_iter_end_1ad731e8b:;
		};
	};
	_80913_r.get()._field_model=jule::Any(_82213_model);
	return _80913_r;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed838abe_builtin_caller_std_debug_out(jule::Ptr<_1e0e7ea19_Eval>& _84138_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _84153_fc, jule::Ptr<_1e0e7ce9b_Data>& _84175_d) {
	_84175_d=_1ed806dde_builtin_caller_out(_84138_e,_84153_fc,_84175_d);
	if ((_84175_d == nullptr)) {
		return nullptr;
	};
	_84175_d.get()._field_model.operator jule::Ptr<_1e0141d64_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _84175_d;
}



inline jule::Ptr<_1e0e7ce9b_Data> _1ed838edc_builtin_caller_std_debug_outln(jule::Ptr<_1e0e7ea19_Eval>& _85140_e, jule::Ptr<_1e012cb0d_FnCallExpr>& _85155_fc, jule::Ptr<_1e0e7ce9b_Data>& _85177_d) {
	_85177_d=_1ed807021_builtin_caller_outln(_85140_e,_85155_fc,_85177_d);
	if ((_85177_d == nullptr)) {
		return nullptr;
	};
	_85177_d.get()._field_model.operator jule::Ptr<_1e0142051_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _85177_d;
}



inline jule::Bool _1ed93b980_find_module_file(jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1ad737c0b:;
		if (it != expr.end()) {
			jule::Ptr<_1db7a7dc4_DirEntry> &_1312_d = *it;
			{
				if (((!(_1db6ea267_is_dir(_1312_d.get()._field_stat.ptr()))) && (_1312_d.get()._field_name == jule::Str("jule.mod", 8)))) {
					return true;
				};
			}
			_iter_next_1ad737c0b:;
			++it;
			goto _iter_begin_1ad737c0b;
		}
		_iter_end_1ad737c0b:;
	};
	return false;
}



inline jule::Str _1ed93bab2_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>> _2617_dirents = ({
				auto except = static__1dc5a1925_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ad737315;
				} jule::Slice<jule::Ptr<_1db7a7dc4_DirEntry>>();});
			});;
			jule::Bool _3013_exist = _1ed93b980_find_module_file(_2617_dirents);;
			if (_3013_exist) {
				return _2434_path;
			};
			jule::I32 _3513_n = _2434_path.len();;
			_2434_path=_1dc6ae24c_dir(_2434_path);
			if ((_2434_path.len() == _3513_n)) {
				goto _iter_end_1ad737315;
			};
		}
	_iter_next_1ad737315:;
	}
	_iter_end_1ad737315:;;
	return jule::Str();
}



inline jule::Slice<_1dd65aa00_Log> _1ed93bd37_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1db7bd747_read(_1dc68e46e_join(jule::Slice<jule::Str>::make({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1dd65aa00_Log>::make({_1dd65aa00_Log{._field_kind=static_cast<jule::I32>(0LL), ._field_text=jule::Str("module file could not checked because of a problem", 50), }});
		} jule::Slice<jule::U8>();});
	});;
	jule::Str _549_s = _1dd5eb661_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1dd65aa00_Log>::make({_1dd65aa00_Log{._field_kind=static_cast<jule::I32>(0LL), ._field_text=jule::Str("module file has syntax error(s)", 31), }});
	};
	return nullptr;
}



inline jule::Ptr<_1aa442b8e_FileInfo> _1aa48e4e3_parse_file(jule::Ptr<_1dd9995ad_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	};
	jule::Ptr<_1aa442b8e_FileInfo> _2813_finf = jule::new_ptr<_1aa442b8e_FileInfo>(_1aa442b8e_FileInfo{});;
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1aa48ea76_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	};
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1e00e2760_Ast>,jule::Slice<_1dd65aa00_Log>> _1aa48ea76_parse_fileset(jule::Ptr<_1dd9995ad_File> _6022_f) {
	jule::Ptr<_1aa4acd08_Parser> _6113_p = jule::new_ptr<_1aa4acd08_Parser>(_1aa4acd08_Parser{});;
	_1aa4bcbd6_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1e013340a_ScopeTree> _1aa49046c_new_scope(void) {
	return jule::new_ptr<_1e013340a_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1aa49078b_is_st(jule::Ptr<_1dd9941e0_Token> _4710_current, jule::Ptr<_1dd9941e0_Token> _4727_prev) {
	jule::Bool _4743_ok = jule::Bool();
	jule::Bool _4753_terminated = jule::Bool();
	_4743_ok=((_4710_current.get()._field_id == static_cast<jule::U32>(5LLU)) || (_4727_prev.get()._field_row < _4710_current.get()._field_row));
	_4753_terminated=(_4710_current.get()._field_id == static_cast<jule::U32>(5LLU));
	return std::make_tuple(_4743_ok,_4753_terminated);
}



inline jule::Bool _1aa490aee_prev_is_incomplete_expr(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _5329_tokens, jule::I32& _5348_i) {
	if (((_5348_i > 1LL) && (_5329_tokens[(_5348_i - 2LL)].get()._field_id == static_cast<jule::U32>(23LLU)))) {
		return false;
	};
	{
		jule::Ptr<_1dd9941e0_Token> _5913_prev = _5329_tokens[(_5348_i - 1LL)];;
		return ((_5913_prev.get()._field_id == static_cast<jule::U32>(20LLU)) || (((_5913_prev.get()._field_id == static_cast<jule::U32>(7LLU)) && _1dd994c18_is_bin_op(_5913_prev.get()._field_kind)) && (_5913_prev.get()._field_row < _5329_tokens[_5348_i].get()._field_row)));
	};
}



inline std::tuple<jule::I32,jule::Bool> _1aa490e95_next_st_pos(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _6817_tokens, jule::I32 _6835_start) {
	jule::I32 _6913_brace_n = 0LL;;
	jule::I32 _7013_i = _6835_start;;
	for (; (_7013_i < _6817_tokens.len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1dd9941e0_Token> _7413_tok = _6817_tokens[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_id };
				
				if (_match_expr == static_cast<jule::U32>(3LLU)) {
					_case_begin_1ad7b3c32:;
					{
						{
							auto &_match_expr{ _7413_tok.get()._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ad7b5bce:;
								{
									if (((_6913_brace_n == 0LL) && (_7013_i > _6835_start))) {
										if ((!(_1aa490aee_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1aa49078b_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1ad7b4507:;
								{
									(_6913_brace_n)--;
									if (((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len()))) {
										std::tie(_7217_ok,_7317_terminated) = _1aa49078b_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1ad7b46c2:;
						};
						goto _iter_next_1ad7b279c;
					}
				}
				_match_end_1ad7b3dca:;
			};
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1ad7b279c;
			};
			if ((_7013_i > _6835_start)) {
				if (_1aa490aee_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1ad7b279c;
				};
				std::tie(_7217_ok,_7317_terminated) = _1aa49078b_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1aa49078b_is_st(_7413_tok,_7413_tok);
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1ad7b279c;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1ad7b279c:;
	}
	_iter_end_1ad7b279c:;;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Bool> _1aa4912d6_skip_st(jule::I32& _13017_i, jule::Slice<jule::Ptr<_1dd9941e0_Token>> _13029_tokens) {
	jule::I32 _1319_start = _13017_i;;
	jule::Bool _13213_terminated = false;;
	std::tie(_13017_i,_13213_terminated) = _1aa490e95_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);;
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1aa4912d6_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		};
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	};
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _1aa491979_split_stmts(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1aa4915d3_Stmt>> _15313_stmts = nullptr;;
	jule::I32 _15413_pos = 0LL;;
	while ((_15413_pos < _15221_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_1dd9941e0_Token>> _15618_stmt;;
			jule::Bool _15624_terminated;;
			std::tie(_15618_stmt,_15624_terminated) = _1aa4912d6_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1aa4915d3_Stmt>(_1aa4915d3_Stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated}));;
		}
	_iter_next_1ad7bc71e:;
	}
	_iter_end_1ad7bc71e:;;
	return _15313_stmts;
}



inline jule::Ptr<_1aa49d4d0_CallData> _1aa49d843_get_call_data(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _4423_tokens) {
	jule::Ptr<_1aa49d4d0_CallData> _4513_data = jule::new_ptr<_1aa49d4d0_CallData>();;
	std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_args_tokens) = _1aa4ab6b9_range_last(_4423_tokens);
	if ((_4513_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4513_data;
	};
	jule::Ptr<_1dd9941e0_Token> _529_token = _4513_data.get()._field_expr_tokens[(_4513_data.get()._field_expr_tokens.len() - 1LL)];;
	if (((_529_token.get()._field_id == static_cast<jule::U32>(3LLU)) && (_529_token.get()._field_kind == jule::Str("]", 1)))) {
		std::tie(_4513_data.get()._field_expr_tokens,_4513_data.get()._field_generics_tokens) = _1aa4ab6b9_range_last(_4513_data.get()._field_expr_tokens);
	};
	return _4513_data;
}



inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa49db2e_get_block_expr(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _6024_tokens) {
	jule::I32 _6113_brace_n = 0LL;;
	jule::I32 _6213_skip_to_next_brace_close = 0LL;;
	{
		auto &expr = _6024_tokens;
		auto it = expr.begin();
		_iter_begin_1ad885ed0:;
		if (it != expr.end()) {
			jule::I32 _639_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _6312_tok = *it;
			{
				{
					auto &_match_expr{ _6312_tok.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(16LLU) || _match_expr == static_cast<jule::U32>(17LLU) || _match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1ad886b4b:;
						{
							(_6213_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ad886bd4:;
						{
							{
								auto &_match_expr{ _6312_tok.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ad887e6b:;
									{
										if (((_6113_brace_n > 0LL) || (_6213_skip_to_next_brace_close > 0LL))) {
											if ((_6213_skip_to_next_brace_close > 0LL)) {
												(_6213_skip_to_next_brace_close)--;
											};
											(_6113_brace_n)++;
											goto _match_end_1ad887a70;
										};
										return _6024_tokens.slice(0LL,_639_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ad888125:;
									{
										(_6113_brace_n)++;
									}
								}
								else {
									_case_begin_1ad88771d:;
									{
										(_6113_brace_n)--;
									}
								}
								_match_end_1ad887a70:;
							};
						}
					}
					_match_end_1ad886a91:;
				};
			}
			_iter_next_1ad885ed0:;
			++it;
			_639_i++;
			goto _iter_begin_1ad885ed0;
		}
		_iter_end_1ad885ed0:;
	};
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa49ddc6_split_colon(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _9121_tokens) {
	jule::I32 _9213_range_n = 0LL;;
	{
		auto &expr = _9121_tokens;
		auto it = expr.begin();
		_iter_begin_1ad8883de:;
		if (it != expr.end()) {
			jule::I32 _939_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _9312_token = *it;
			{
				{
					auto &_match_expr{ _9312_token.get()._field_id };
					
					if (_match_expr == static_cast<jule::U32>(3LLU)) {
						_case_begin_1ad889da2:;
						{
							{
								auto &_match_expr{ _9312_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ad88aad9:;
									{
										(_9213_range_n)++;
										goto _iter_next_1ad8883de;
									}
								}
								else {
									_case_begin_1ad88a556:;
									{
										(_9213_range_n)--;
									}
								}
								_match_end_1ad88a721:;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(11LLU)) {
						_case_begin_1ad889e3a:;
						{
							if ((_9213_range_n < 1LL)) {
								jule::Slice<jule::Ptr<_1dd9941e0_Token>> _10725_l = _9121_tokens.slice(0LL,_939_i);;
								jule::Slice<jule::Ptr<_1dd9941e0_Token>> _10825_r = _9121_tokens.slice((_939_i + 1LL));;
								return std::make_tuple(_10725_l,_10825_r);
							};
						}
					}
					_match_end_1ad889ce7:;
				};
			}
			_iter_next_1ad8883de:;
			++it;
			_939_i++;
			goto _iter_begin_1ad8883de;
		}
		_iter_end_1ad8883de:;
	};
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I32 _1aa49e1b2_find_lowest_prec_op(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _11825_tokens) {
	jule::U8 _12313_prec = 255LLU;;
	jule::I32 _12413_prec_pos = -1LL;;
	jule::I32 _12613_brace_n = 0LL;;
	jule::Bool _12713_skip_to_next_brace_open = false;;
	{
		auto &expr = _11825_tokens;
		auto it = expr.begin();
		_iter_begin_1ad88d1d5:;
		if (it != expr.end()) {
			jule::I32 _1289_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> &_12812_token = *it;
			{
				{
					
					if ((_12812_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
						_case_begin_1ad88ddc8:;
						{
							{
								auto &_match_expr{ _12812_token.get()._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ad8900c7:;
									{
										_12713_skip_to_next_brace_open=false;
										goto _case_begin_1ad89025e;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ad89025e:;
									{
										(_12613_brace_n)++;
									}
								}
								else {
									_case_begin_1ad88ea44:;
									{
										(_12613_brace_n)--;
									}
								}
								_match_end_1ad88ec0e:;
							};
							goto _iter_next_1ad88d1d5;
						}
					}
					else if (_12713_skip_to_next_brace_open) {
						_case_begin_1ad88de50:;
						{
							goto _iter_next_1ad88d1d5;
						}
					}
					else if ((_12812_token.get()._field_id == static_cast<jule::U32>(16LLU))) {
						_case_begin_1ad88dec7:;
						{
							_12713_skip_to_next_brace_open=true;
							goto _iter_next_1ad88d1d5;
						}
					}
					else if ((_1289_i == 0LL)) {
						_case_begin_1ad88e04e:;
						{
							goto _iter_next_1ad88d1d5;
						}
					}
					else if ((_12812_token.get()._field_id != static_cast<jule::U32>(7LLU))) {
						_case_begin_1ad88e0c6:;
						{
							goto _iter_next_1ad88d1d5;
						}
					}
					else if ((_12613_brace_n > 0LL)) {
						_case_begin_1ad88e14d:;
						{
							goto _iter_next_1ad88d1d5;
						}
					}
					_match_end_1ad88dc74:;
				};
				jule::Ptr<_1dd9941e0_Token> _15513_left = _11825_tokens[(_1289_i - 1LL)];;
				if (((_15513_left.get()._field_id == static_cast<jule::U32>(7LLU)) || (_15513_left.get()._field_id == static_cast<jule::U32>(11LLU)))) {
					goto _iter_next_1ad88d1d5;
				};
				if ((((_1289_i > 1LL) && (_15513_left.get()._field_id == static_cast<jule::U32>(3LLU))) && (_15513_left.get()._field_kind == jule::Str("]", 1)))) {
					jule::Ptr<_1dd9941e0_Token> _16317_lleft = _11825_tokens[(_1289_i - 2LL)];;
					if (((_16317_lleft.get()._field_id == static_cast<jule::U32>(3LLU)) && (_16317_lleft.get()._field_kind == jule::Str("[", 1)))) {
						if (((_12812_token.get()._field_kind == jule::Str("&", 1)) || (_12812_token.get()._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_1ad88d1d5;
						};
					};
				};
				jule::U8 _17213_p = _1dd9945ca_prec(_12812_token.ptr());;
				if (((_17213_p != 0LLU) && (_17213_p <= _12313_prec))) {
					_12313_prec=_17213_p;
					_12413_prec_pos=_1289_i;
				};
			}
			_iter_next_1ad88d1d5:;
			++it;
			_1289_i++;
			goto _iter_begin_1ad88d1d5;
		}
		_iter_end_1ad88d1d5:;
	};
	return _12413_prec_pos;
}



inline jule::Ptr<_1e012a7dc_IdentExpr> _1aa49e459_build_ident_expr(jule::Ptr<_1dd9941e0_Token>& _18226_token) {
	return jule::new_ptr<_1e012a7dc_IdentExpr>(_1e012a7dc_IdentExpr{._field_token=_18226_token, ._field_ident=_18226_token.get()._field_kind, ._field_cpp_linked=false});
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::I32> _1aa49e701_get_range_expr_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _19031_tokens) {
	jule::I32 _19113_range_n = 0LL;;
	jule::I32 _19213_i = (_19031_tokens.len() - 1LL);;
	for (; (_19213_i >= 0LL); (_19213_i)--) {
		{
			jule::Ptr<_1dd9941e0_Token> _19413_tok = _19031_tokens[_19213_i];;
			if ((_19413_tok.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _19413_tok.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ad8980be:;
						{
							(_19113_range_n)++;
						}
					}
					else {
						_case_begin_1ad897a08:;
						{
							(_19113_range_n)--;
						}
					}
					_match_end_1ad897bc3:;
				};
			};
			if ((_19113_range_n == 0LL)) {
				return std::make_tuple(_19031_tokens.slice(0LL,_19213_i),_19113_range_n);
			};
		}
	_iter_next_1ad896133:;
	}
	_iter_end_1ad896133:;;
	return std::make_tuple(nullptr,_19113_range_n);
}



inline jule::Bool _1aa4aa08b_check_assign_tokens(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _1625_tokens) {
	if (((_1625_tokens.len() == 0LL) || (!(_1dd9986ab_is_assign(_1625_tokens[0LL].get()._field_id))))) {
		return false;
	};
	jule::I32 _2013_brace_n = 0LL;;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1ada26d1e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ada27ea7:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1ada278be:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1ada27aab:;
					};
				};
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1ada26d1e;
				} else if (((_2112_t.get()._field_id == static_cast<jule::U32>(7LLU)) && _1dd998bea_is_assign_op(_2112_t.get()._field_kind))) {
					return true;
				};
			}
			_iter_next_1ada26d1e:;
			++it;
			goto _iter_begin_1ada26d1e;
		}
		_iter_end_1ada26d1e:;
	};
	return false;
}



inline _1dd65aa00_Log _1aa4aae7c_make_err(jule::I32 _5113_row, jule::I32 _5123_col, jule::Ptr<_1dd9995ad_File>& _5134_f, jule::Str _5144_fmt, jule::Slice<jule::Any> _5157_args) {
	return _1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_row=_5113_row, ._field_column=_5123_col, ._field_path=_5134_f.get()._field_path, ._field_text=_1dd65ae40_logf(_5144_fmt,jule::Any(_5157_args)), };
}



inline jule::Slice<jule::Ptr<_1dd9941e0_Token>> _1aa4ab422_range(jule::I32& _7015_i, jule::Str _7023_open, jule::Str _7040_close, jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _7063_tokens) {
	if ((_7015_i >= _7063_tokens.len())) {
		return nullptr;
	};
	jule::Ptr<_1dd9941e0_Token> _759_tok = _7063_tokens[_7015_i];;
	if (((_759_tok.get()._field_id != static_cast<jule::U32>(3LLU)) || (_759_tok.get()._field_kind != _7023_open))) {
		return nullptr;
	};
	(_7015_i)++;
	jule::I32 _8113_range_n = 1LL;;
	jule::I32 _829_start = _7015_i;;
	for (; ((_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len())); (_7015_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _8413_token = _7063_tokens[_7015_i];;
			if ((_8413_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _8413_token.get()._field_kind };
					
					if (_match_expr == _7023_open) {
						_case_begin_1ada2d7c6:;
						{
							(_8113_range_n)++;
						}
					}
					else if (_match_expr == _7040_close) {
						_case_begin_1ada2d85e:;
						{
							(_8113_range_n)--;
						}
					}
					_match_end_1ada2d71b:;
				};
			};
		}
	_iter_next_1ada2a949:;
	}
	_iter_end_1ada2a949:;;
	return _7063_tokens.slice(_829_start,(_7015_i - 1LL));
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _1aa4ab6b9_range_last(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _10520_tokens) {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _10540_cutted = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _10558_cut = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	if ((_10520_tokens.len() == 0LL)) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	} else if ((_10520_tokens[(_10520_tokens.len() - 1LL)].get()._field_id != static_cast<jule::U32>(3LLU))) {
		_10540_cutted = _10520_tokens;
		_10558_cut = nullptr;
		return std::make_tuple(_10540_cutted,_10558_cut);
	};
	jule::I32 _11213_brace_n = 0LL;;
	jule::I32 _11313_i = (_10520_tokens.len() - 1LL);;
	for (; (_11313_i >= 0LL); (_11313_i)--) {
		{
			jule::Ptr<_1dd9941e0_Token> _11513_token = _10520_tokens[_11313_i];;
			if ((_11513_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _11513_token.get()._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ada32830:;
						{
							(_11213_brace_n)++;
							goto _iter_next_1ada2d92a;
						}
					}
					else {
						_case_begin_1ada32269:;
						{
							(_11213_brace_n)--;
						}
					}
					_match_end_1ada32434:;
				};
			};
			if ((_11213_brace_n == 0LL)) {
				_10540_cutted = _10520_tokens.slice(0LL,_11313_i);
				_10558_cut = _10520_tokens.slice(_11313_i);
				return std::make_tuple(_10540_cutted,_10558_cut);
			};
		}
	_iter_next_1ada2d92a:;
	}
	_iter_end_1ada2d92a:;;
	_10540_cutted = _10520_tokens;
	_10558_cut = nullptr;
	return std::make_tuple(_10540_cutted,_10558_cut);
}



inline std::tuple<jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>>,jule::Slice<_1dd65aa00_Log>> _1aa4abae8_parts(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _14215_tokens, jule::U32 _14233_id, jule::Bool _14246_expr_must) {
	if ((_14215_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	};
	jule::Slice<jule::Slice<jule::Ptr<_1dd9941e0_Token>>> _14713_parts = nullptr;;
	jule::Slice<_1dd65aa00_Log> _14813_errors = nullptr;;
	jule::I32 _15013_range_n = 0LL;;
	jule::I32 _15113_last = 0LL;;
	{
		auto &expr = _14215_tokens;
		auto it = expr.begin();
		_iter_begin_1ada35756:;
		if (it != expr.end()) {
			jule::I32 _1529_i = it - expr.begin();
			jule::Ptr<_1dd9941e0_Token> _15212_token = *it;
			{
				if ((_15212_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
					{
						auto &_match_expr{ _15212_token.get()._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ada36c52:;
							{
								(_15013_range_n)++;
								goto _iter_next_1ada35756;
							}
						}
						else {
							_case_begin_1ada36669:;
							{
								(_15013_range_n)--;
							}
						}
						_match_end_1ada36856:;
					};
				};
				if ((_15013_range_n > 0LL)) {
					goto _iter_next_1ada35756;
				};
				if ((_15212_token.get()._field_id == _14233_id)) {
					if ((_14246_expr_must && ((_1529_i - _15113_last) <= 0LL))) {
						_1dd65aa00_Log _17121_err = _1aa4aae7c_make_err(_15212_token.get()._field_row,_15212_token.get()._field_column,_15212_token.get()._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_14813_errors = jule::alloc_for_append(_14813_errors,1);_14813_errors.__push(_17121_err);;
					};
					_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last,_1529_i));;
					_15113_last=static_cast<jule::I32>((_1529_i + 1LL));
				};
			}
			_iter_next_1ada35756:;
			++it;
			_1529_i++;
			goto _iter_begin_1ada35756;
		}
		_iter_end_1ada35756:;
	};
	if ((_15113_last < _14215_tokens.len())) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(_14215_tokens.slice(_15113_last));;
	} else if ((!(_14246_expr_must))) {
		_14713_parts = jule::alloc_for_append(_14713_parts,1);_14713_parts.__push(jule::Slice<jule::Ptr<_1dd9941e0_Token>>());;
	};
	return std::make_tuple(_14713_parts,_14813_errors);
}



inline jule::Str _1aa4abdb2_get_close_kind_of_brace(jule::Str _18828_left) {
	{
		auto &_match_expr{ _18828_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ada3a706:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ada39c66:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ada39ccc:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1ada3987b:;
			{
				return jule::Str();
			}
		}
		_match_end_1ada39826:;
	};
}



inline _1dd65aa00_Log _1aa4ac2ad_compiler_err(jule::Ptr<_1dd9941e0_Token>& _20118_token, jule::Str& _20134_fmt, jule::Slice<jule::Any> _20147_args) {
	return _1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_row=_20118_token.get()._field_row, ._field_column=_20118_token.get()._field_column, ._field_path=_20118_token.get()._field_file.get()._field_path, ._field_text=_1dd65ae40_logf(_20134_fmt,jule::Any(_20147_args)), ._field_line=_1dd99a78a_get_row(_20118_token.get()._field_file.ptr(), _20118_token.get()._field_row), };
}



inline void _1aa4ac610_push_suggestion(_1dd65aa00_Log* _21231_log, jule::Str _21242_fmt, jule::Slice<jule::Any> _21255_args) {
	_21231_log->_field_suggestion=_1dd65ae40_logf(_21242_fmt,jule::Any(_21255_args));
}



inline jule::Str _1aa4ac940_tokstoa(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _21613_tokens) {
	jule::Str _21713_s = jule::Str();;
	{
		auto &expr = _21613_tokens;
		auto it = expr.begin();
		_iter_begin_1ada3d61b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> &_21812_token = *it;
			{
				_21713_s+=_21812_token.get()._field_kind;
			}
			_iter_next_1ada3d61b:;
			++it;
			goto _iter_begin_1ada3d61b;
		}
		_iter_end_1ada3d61b:;
	};
	return _21713_s;
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bd5ee_build_void_type(void) {
	return jule::new_ptr<_1e01253db_TypeDecl>();
}



inline jule::Ptr<_1e01253db_TypeDecl> _1aa4bd874_build_prim_type(jule::Ptr<_1dd9941e0_Token> _2324_t) {
	return jule::new_ptr<_1e01253db_TypeDecl>(_1e01253db_TypeDecl{._field_token=_2324_t, ._field_kind=jule::Any(jule::new_ptr<_1e012596e_IdentTypeDecl>(_1e012596e_IdentTypeDecl{._field_token=_2324_t, ._field_ident=_2324_t.get()._field_kind, }))});
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd9941e0_Token>>,jule::I32> _1aa4bdbb5_split_map_range(jule::Slice<jule::Ptr<_1dd9941e0_Token>>& _3625_tokens, jule::I32& _3648_i) {
	jule::Slice<jule::Ptr<_1dd9941e0_Token>> _3658_range_tokens = jule::Slice<jule::Ptr<_1dd9941e0_Token>>();
	jule::I32 _3682_colon = jule::I32();
	_3682_colon=-1LL;
	jule::I32 _3813_range_n = 0LL;;
	jule::I32 _399_start = _3648_i;;
	for (; (_3648_i < _3625_tokens.len()); (_3648_i)++) {
		{
			jule::Ptr<_1dd9941e0_Token> _4113_token = _3625_tokens[_3648_i];;
			if ((_4113_token.get()._field_id == static_cast<jule::U32>(3LLU))) {
				{
					auto &_match_expr{ _4113_token.get()._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1adba87db:;
						{
							(_3813_range_n)++;
							goto _iter_next_1adba6c6d;
						}
					}
					else {
						_case_begin_1adba8225:;
						{
							(_3813_range_n)--;
						}
					}
					_match_end_1adba83e0:;
				};
			};
			if ((_3813_range_n == 0LL)) {
				if (((_399_start + 1LL) > _3648_i)) {
					return std::make_tuple(_3658_range_tokens,_3682_colon);
				};
				_3658_range_tokens=_3625_tokens.slice((_399_start + 1LL),_3648_i);
				goto _iter_end_1adba6c6d;
			} else if ((_3813_range_n != 1LL)) {
				goto _iter_next_1adba6c6d;
			};
			if (((_3682_colon == -1LL) && (_4113_token.get()._field_id == static_cast<jule::U32>(11LLU)))) {
				_3682_colon=static_cast<jule::I32>(((_3648_i - _399_start) - 1LL));
			};
		}
	_iter_next_1adba6c6d:;
	}
	_iter_end_1adba6c6d:;;
	return std::make_tuple(_3658_range_tokens,_3682_colon);
}



inline std::tuple<jule::Bool,jule::Bool> _1ed90ec50_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1adc09d26:;
			{
				_925_ok=_1dd65e2c8_is_windows(_1dd69aa0c_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1adc09d8c:;
			{
				_925_ok=_1dd65e5b4_is_darwin(_1dd69aa0c_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1adc09e03:;
			{
				_925_ok=_1dd65e85b_is_linux(_1dd69aa0c_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1adc09e69:;
			{
				_925_ok=_1dd66042d_is_unix(_1dd69aa0c_OS);
			}
		}
		else {
			_case_begin_1adc0960b:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1adc09b39:;
	};
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1ed90ed93_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1adc0c4cc:;
			{
				_3027_ok=_1dd65eb47_is_i386(_1dd67de96_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1adc0c543:;
			{
				_3027_ok=_1dd65edde_is_amd64(_1dd67de96_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1adc0c5a9:;
			{
				_3027_ok=_1dd660186_is_arm64(_1dd67de96_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1adc0c620:;
			{
				_3027_ok=_1dd660a05_is_64bit(_1dd67de96_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1adc0c686:;
			{
				_3027_ok=_1dd66075d_is_32bit(_1dd67de96_ARCH);
			}
		}
		else {
			_case_begin_1adc0c158:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1adc0bcd4:;
	};
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1ed92941d_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1dc6ac6bd_base(_5432_p);
	jule::I32 _569_n = _5432_p.len();;
	(_5432_p).mut_slice(0LL,(_569_n - _1dc692dac_ext(_5432_p).len()));;
	jule::Str _6213_a1 = jule::Str();;
	jule::Str _6513_a2 = jule::Str();;
	jule::I32 _6813_i = _1dd30e4d9_find_last_byte(_5432_p,'_');;
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;;
		jule::Bool _7126_exist;;
		std::tie(_7118_ok,_7126_exist) = _1ed90ec50_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		};
		std::tie(_7118_ok,_7126_exist) = _1ed90ed93_check_arch(_5432_p);
		return ((!(_7126_exist)) || _7118_ok);
	};
	if (((_6813_i + 1LL) >= _569_n)) {
		return true;
	};
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);;
	_6813_i=static_cast<jule::I32>(_1dd30e4d9_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	};
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;;
		jule::Bool _9226_exist;;
		std::tie(_9218_ok,_9226_exist) = _1ed90ec50_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		};
		std::tie(_9218_ok,_9226_exist) = _1ed90ed93_check_arch(_6213_a1);
		return ((!(_9226_exist)) || _9218_ok);
	};
	jule::Bool _10014_ok;;
	jule::Bool _10022_exist;;
	std::tie(_10014_ok,_10022_exist) = _1ed90ed93_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		};
		std::tie(_10014_ok,_10022_exist) = _1ed90ec50_check_os(_6513_a2);
		return ((!(_10022_exist)) || _10014_ok);
	};
	std::tie(_10014_ok,_10022_exist) = _1ed90ec50_check_os(_6213_a1);
	return ((!(_10022_exist)) || _10014_ok);
}



inline void _1ed92a61c_set_os_vars(jule::Slice<jule::Str>& _3621_vars) {
	_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(_1dd69aa0c_OS);;
	if (_1dd66042d_is_unix(_1dd69aa0c_OS)) {
		_3621_vars = jule::alloc_for_append(_3621_vars,1);_3621_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1ed92a870_set_arch_vars(jule::Slice<jule::Str>& _4423_vars) {
	_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(_1dd67de96_ARCH);;
	if (_1dd660a05_is_64bit(_1dd67de96_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x64", 3));;
	};
	if (_1dd66075d_is_32bit(_1dd67de96_ARCH)) {
		_4423_vars = jule::alloc_for_append(_4423_vars,1);_4423_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1ed92ab28_init_vars(jule::Slice<jule::Str>& _5519_vars, _1ed92a30e_CompileInfo& _5533_info) {
	_1ed92a61c_set_os_vars(_5519_vars);
	_1ed92a870_set_arch_vars(_5519_vars);
	if (_5533_info._field_prod) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("production", 10));;
	};
	if (_5533_info._field_test) {
		_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5533_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1adc18906:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1adc196d7:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1adc19682:;
	};
	{
		auto &_match_expr{ _5533_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1adc19561:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1adc1a320:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1adc1a386:;
			{
				_5519_vars = jule::alloc_for_append(_5519_vars,1);_5519_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1adc1a82b:;
	};
}



inline jule::Slice<jule::U8> _1c2c7d12c_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1db7bd747_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1dd6ac953_exit(1LL);
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1dd65aa00_Log _1c2c8c4e3_flat_compiler_err(jule::Str _4122_text) {
	return _1dd65aa00_Log{._field_kind=static_cast<jule::I32>(1LL), ._field_text=_4122_text, };
}



inline void _1a9447920_push_passes(jule::Ptr<_1e0e16253_Package>& _11221_p, jule::Slice<jule::Str>& _11245_passes) {
	{
		auto &expr = _11221_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1adc4b3ea:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _11317_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11317_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1adc4bd13:;
					if (it != expr.end()) {
						_1e0149487_Pass _11516_pass = *it;
						{
							if (_11516_pass._field_text.empty()) {
								goto _iter_next_1adc4bd13;
							};
							{
								auto &expr = _11245_passes;
								auto it = expr.begin();
								_iter_begin_1adc4cbc1:;
								if (it != expr.end()) {
									jule::Str _11920_cpass = *it;
									{
										if ((_11920_cpass == _11516_pass._field_text)) {
											goto _iter_next_1adc4bd13;
										};
									}
									_iter_next_1adc4cbc1:;
									++it;
									goto _iter_begin_1adc4cbc1;
								}
								_iter_end_1adc4cbc1:;
							};
							_11245_passes = jule::alloc_for_append(_11245_passes,1);_11245_passes.__push(_11516_pass._field_text);;
						}
						_iter_next_1adc4bd13:;
						++it;
						goto _iter_begin_1adc4bd13;
					}
					_iter_end_1adc4bd13:;
				};
			}
			_iter_next_1adc4b3ea:;
			++it;
			goto _iter_begin_1adc4b3ea;
		}
		_iter_end_1adc4b3ea:;
	};
}



inline jule::Slice<jule::Str> _1a9448d1c_get_all_unique_passes(jule::Ptr<_1e0e16253_Package>& _12931_pkg, jule::Slice<jule::Ptr<_1e0e13272_ImportInfo>> _12956_uses) {
	jule::Slice<jule::Str> _13013_passes = nullptr;;
	_1a9447920_push_passes(_12931_pkg,_13013_passes);
	{
		auto &expr = _12956_uses;
		auto it = expr.begin();
		_iter_begin_1adc4e365:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> _13317_u = *it;
			{
				if ((!(_13317_u.get()._field_cpp_linked))) {
					_1a9447920_push_passes(_13317_u.get()._field_package,_13013_passes);
				};
			}
			_iter_next_1adc4e365:;
			++it;
			goto _iter_begin_1adc4e365;
		}
		_iter_end_1adc4e365:;
	};
	return _13013_passes;
}



inline _1ed92a30e_CompileInfo _1a9472ab0_build_compile_info(void) {
	_1ed92a30e_CompileInfo _14313_info = _1ed92a30e_CompileInfo{._field_prod=_1db66070a_PRODUCTION, ._field_test=_1db65ee68_TEST, };;
	{
		auto &_match_expr{ _1db65e5d8_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1adc50553:;
			{
				_14313_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1adc505b9:;
			{
				_14313_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1adc50443:;
	};
	{
		auto &_match_expr{ _1db65e94b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1adc51147:;
			{
				_14313_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1adc511ad:;
			{
				_14313_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1adc509c6:;
			{
				_14313_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1adc5106a:;
	};
	return _14313_info;
}



inline void _1aa5c84a6_eliminate_defines(jule::Ptr<_1c2c92949_IR>& _28531_ir) {
	jule::Ptr<_1aa595121_ObjectDeadCode> _28613_ocd = static__1aa59551c_new(_28531_ir);;
	_1aa5c81dc_elimanate(_28613_ocd);
}



inline jule::Ptr<_1e0124e35_Directive> _1aa5c883b_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _29124_directives, jule::Str _29155_tag) {
	{
		auto &expr = _29124_directives;
		auto it = expr.begin();
		_iter_begin_1adc8d66d:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_tag.get()._field_kind == _29155_tag)) {
					return _29217_dr;
				};
			}
			_iter_next_1adc8d66d:;
			++it;
			goto _iter_begin_1adc8d66d;
		}
		_iter_end_1adc8d66d:;
	};
	return nullptr;
}



inline jule::Bool _1aa5c8b7c_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _30119_directives, jule::Str _30150_tag) {
	return (_1aa5c883b_find_directive(_30119_directives,_30150_tag) != nullptr);
}



inline void _1aa5cc444_eliminate_dead_code_of_scope(jule::Ptr<_1e0dd6322_Scope> _22637_s) {
	jule::Slice<jule::Ptr<_1e0dea600_Label>> _2279_labels = jule::Slice<jule::Ptr<_1e0dea600_Label>>::alloc(0LL,16LL);;
	jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>> _2289_gotos = jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>>::alloc(0LL,16LL);;
	jule::Ptr<_1aa5c9809_ScopeDeadCode> _22913_sdc = jule::new_ptr<_1aa5c9809_ScopeDeadCode>(_1aa5c9809_ScopeDeadCode{._field_s=_22637_s, ._field_stmts=(&(_22637_s.get()._field_stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1e0dea600_Label>>>)((&(_2279_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1e0dea7dc_GotoSt>>>)((&(_2289_gotos))))});;
	{
		_1aa5cc158_optimize_stmts(_22913_sdc);
	};
}



inline void _1aa5cc6ca_eliminate_scope_functions(jule::Slice<jule::Ptr<_1e0144581_Fn>>& _23935_funcs) {
	{
		auto &expr = _23935_funcs;
		auto it = expr.begin();
		_iter_begin_1bb5a3096:;
		if (it != expr.end()) {
			jule::Ptr<_1e0144581_Fn> _24017_func = *it;
			{
				{
					auto &expr = _24017_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1bb5a37b1:;
					if (it != expr.end()) {
						jule::Ptr<_1e01457c4_FnIns> _24121_ins = *it;
						{
							_1aa5cc444_eliminate_dead_code_of_scope(_24121_ins.get()._field_scope);
						}
						_iter_next_1bb5a37b1:;
						++it;
						goto _iter_begin_1bb5a37b1;
					}
					_iter_end_1bb5a37b1:;
				};
			}
			_iter_next_1bb5a3096:;
			++it;
			goto _iter_begin_1bb5a3096;
		}
		_iter_end_1bb5a3096:;
	};
}



inline void _1aa5cc92d_eliminate_functions_scope_package(jule::Ptr<_1e0e16253_Package>& _24743_pkg) {
	{
		auto &expr = _24743_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bb5a33e8:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _24817_f = *it;
			{
				_1aa5cc6ca_eliminate_scope_functions(_24817_f.get()._field_funcs);
			}
			_iter_next_1bb5a33e8:;
			++it;
			goto _iter_begin_1bb5a33e8;
		}
		_iter_end_1bb5a33e8:;
	};
}



inline void _1aa5ccba3_eliminate_scope_package(jule::Ptr<_1e0e16253_Package>& _25333_pkg) {
	_1aa5cc92d_eliminate_functions_scope_package(_25333_pkg);
}



inline void _1aa5ccdc3_eliminate_scopes(jule::Ptr<_1c2c92949_IR>& _25830_ir) {
	jule::I32 _25913_i = (_25830_ir.get()._field_used.len() - 1LL);;
	for (; (_25913_i >= 0LL); (_25913_i)--) {
		{
			jule::Ptr<_1e0e13272_ImportInfo> _26117_u = _25830_ir.get()._field_used[_25913_i];;
			if ((!(_26117_u.get()._field_cpp_linked))) {
				_1aa5ccba3_eliminate_scope_package(_26117_u.get()._field_package);
			};
		}
	_iter_next_1bb5a4e88:;
	}
	_iter_end_1bb5a4e88:;;
	_1aa5ccba3_eliminate_scope_package(_25830_ir.get()._field_main);
}



inline jule::Bool _1ed8402bd_is_std_package(jule::Str _39919_f, jule::Str _39927_p) {
	return _1dd588048_has_prefix(_39919_f,_1dc68e46e_join(jule::Slice<jule::Str>::make({_1dd66e45e_PATH_STDLIB,_39927_p})));
}



inline jule::Bool _1ed8405dc_is_constant_valid_conditional_case(jule::Ptr<_1e0ddcc41_If>& _40340_i) {
	{
		auto &_match_expr{ _40340_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1bb623d09:;
			{
				jule::Ptr<_1e0d4da1a_Const> _40613_c = _40340_i.get()._field_expr.operator jule::Ptr<_1e0d4da1a_Const>();;
				return (_1e0d52a52_is_bool(_40613_c.ptr()) && _1e0d506a9_read_bool(_40613_c.ptr()));
			}
		}
		_match_end_1bb624414:;
	};
	return false;
}



inline jule::Bool _1ed840884_is_unreachable_expr(jule::Any& _41225_expr) {
	{
		auto &_match_expr{ _41225_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1bb62537c:;
			{
				jule::Ptr<_1e0d4da1a_Const> _41513_c = _41225_expr.operator jule::Ptr<_1e0d4da1a_Const>();;
				return (_1e0d52a52_is_bool(_41513_c.ptr()) && (!(_1e0d506a9_read_bool(_41513_c.ptr()))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1e011cdb7_BinopExprModel>>()) {
			_case_begin_1bb624854:;
			{
				jule::Ptr<_1e011cdb7_BinopExprModel> _41813_m = _41225_expr.operator jule::Ptr<_1e011cdb7_BinopExprModel>();;
				if ((_41813_m.get()._field_op.get()._field_kind == jule::Str("&&", 2))) {
					return (_1ed840884_is_unreachable_expr(_41813_m.get()._field_left.get()._field_model) || _1ed840884_is_unreachable_expr(_41813_m.get()._field_right.get()._field_model));
				};
			}
		}
		_match_end_1bb62525b:;
	};
	return false;
}



inline jule::Bool _1ed840b92_is_constant_valid_match_case(jule::Ptr<_1e0deb4ad_Case>& _42634_case) {
	{
		auto &expr = _42634_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1bb625b74:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e7ce9b_Data> &_42712_expr = *it;
			{
				if (((_1e0e7d85e_is_const(_42712_expr.ptr()) && _1e0d52a52_is_bool(_42712_expr.get()._field_constant.ptr())) && _1e0d506a9_read_bool(_42712_expr.get()._field_constant.ptr()))) {
					return true;
				};
			}
			_iter_next_1bb625b74:;
			++it;
			goto _iter_begin_1bb625b74;
		}
		_iter_end_1bb625b74:;
	};
	return false;
}



inline jule::Bool _1ed840e6c_is_unreachable_conditional_case(jule::Ptr<_1e0ddcc41_If>& _43537_i) {
	return _1ed840884_is_unreachable_expr(_43537_i.get()._field_expr);
}



inline jule::Bool _1ed841247_is_unreachable_match_case(jule::Ptr<_1e0deb4ad_Case>& _43931_case) {
	{
		auto &expr = _43931_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1bb629727:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e7ce9b_Data> &_44012_expr = *it;
			{
				if ((!(_1ed840884_is_unreachable_expr(_44012_expr.get()._field_model)))) {
					return false;
				};
			}
			_iter_next_1bb629727:;
			++it;
			goto _iter_begin_1bb629727;
		}
		_iter_end_1bb629727:;
	};
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1ed8483c5_check_for_bit_shift_opt(jule::Ptr<_1e0116dc2_OperandExprModel>& _43329_l, jule::Ptr<_1e0116dc2_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if (((!(_1e0de99a6_is_int(_1ed77c073_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_1e0de99a6_is_int(_1ed77c073_to_str(_43352_r.get()._field_kind.ptr())))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0d4da1a_Const>>()) {
			_case_begin_1ad794c79:;
			{
				goto _match_end_1ad898a09;
			}
		}
		else {
			_case_begin_1ad765442:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_1ad898a09:;
	};
	_43386_x=static_cast<jule::U64>(_1e0d5115a_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_1e0d4da1a_Const>().ptr()));
	if (((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	jule::F64 _4479_j = _1e0bbad3d_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));;
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);;
	if ((static_cast<jule::F64>(_4489_z) != _4479_j)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	};
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline void _1ed84a031_push_opt_level(jule::I32 _3223_level) {
	_1ed848ace_COPY=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed848d76_DEADCODE=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed8490c9_APPEND=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed849371_MATH=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed8495c4_ACCESS=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed849827_INLINE=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed849a7a_PTR=(_3223_level >= static_cast<jule::I32>(1LL));
	_1ed849d66_COND=(_3223_level >= static_cast<jule::I32>(1LL));
}



inline void _1aa5580d4_detect_enabled(void) {
	_1aa4d0710_expr_enabled=(((_1ed849a7a_PTR || _1ed849371_MATH) || _1ed8495c4_ACCESS) || _1ed849d66_COND);
	_1aa4d0d92_scope_enabled=((_1ed849d66_COND || _1ed8490c9_APPEND) || _1ed848ace_COPY);
}



inline void _1aa5ec288_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1dd6ac953_exit(1LL);
}



inline jule::U64 _1aac12eb9_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1aac1330a_unix_year_to_seconds(jule::U64 _26225_y, jule::Bool& _26243_leap) {
	if (((_26225_y - 2LLU) <= 136LLU)) {
		jule::U64 _26417_leaps = ((_26225_y - 68LLU) >> 2LLU);;
		_26243_leap=(((_26225_y - 68LLU) & 3LLU) == 0LLU);
		if (_26243_leap) {
			(_26417_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_26225_y - 70LLU)) + (86400LLU * _26417_leaps)));
	};
	jule::U64 _27213_leaps = 0LLU;;
	jule::U64 _27313_centuries = 0LLU;;
	jule::U64 _27413_cycles = ((_26225_y - 100LLU) / 400LLU);;
	jule::U64 _27513_rem = ((_26225_y - 100LLU) % 400LL);;
	if ((_27513_rem < 0LLU)) {
		(_27413_cycles)--;
		_27513_rem+=400LLU;
	};
	if ((_27513_rem == 0LLU)) {
		_26243_leap=true;
		_27313_centuries=0LLU;
		_27213_leaps=0LLU;
	} else {
		if ((_27513_rem >= 200LLU)) {
			if ((_27513_rem >= 300LLU)) {
				_27313_centuries=3LLU;
				_27513_rem-=300LLU;
			} else {
				_27313_centuries=2LLU;
				_27513_rem-=200LLU;
			};
		} else {
			if ((_27513_rem >= 100LLU)) {
				_27313_centuries=1LLU;
				_27513_rem-=100LLU;
			} else {
				_27313_centuries=0LLU;
			};
		};
		if ((_27513_rem == 0LLU)) {
			_26243_leap=false;
			_27213_leaps=0LLU;
		} else {
			_27213_leaps=static_cast<jule::U64>((_27513_rem >> 2LLU));
			_27513_rem%=4LL;
			_26243_leap=(_27513_rem == 0LLU);
		};
	};
	_27213_leaps+=((97LLU * _27413_cycles) + (24LLU * _27313_centuries));
	if (_26243_leap) {
		(_27213_leaps)++;
	};
	return static_cast<jule::U64>((((((_26225_y - 100LLU) * 31536000LLU) + (_27213_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));
}



inline jule::U64 _1aac13690_unix_month_to_seconds(jule::U64 _31926_m, jule::Bool _31939_leap) {
	jule::U64 _32113_t = 0LLU;;
	{
		auto &_match_expr{ _31926_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1ad922049:;
			{
				_32113_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ad9224ab:;
			{
				_32113_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad922522:;
			{
				_32113_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ad922588:;
			{
				_32113_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ad9225ee:;
			{
				_32113_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ad922665:;
			{
				_32113_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ad9226cb:;
			{
				_32113_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ad922753:;
			{
				_32113_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ad9227ca:;
			{
				_32113_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1ad922852:;
			{
				_32113_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ad9228c9:;
			{
				_32113_t=28857600LLU;
			}
		}
		_match_end_1ad92229c:;
	};
	if ((_31939_leap && (_31926_m >= 2LLU))) {
		_32113_t+=86400LLU;
	};
	return _32113_t;
}



inline jule::Bool _1aab8a8e2_is_copy_optimizable(jule::Ptr<_1e0e7ce9b_Data>& _73325_expr) {
	if ((!(_73325_expr.get()._field_lvalue))) {
		return false;
	};
	{
		auto &_match_expr{ _73325_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1e0140acc_SlicingExprModel>>()) {
			_case_begin_1ad996079:;
			{
				return false;
			}
		}
		_match_end_1ad996024:;
	};
	return true;
}



inline jule::Bool _1aab8ac99_is_iter_copy_optimizable(jule::Ptr<_1e0e7ce9b_Data>& _74430_expr, jule::Ptr<_1e0e366e6_Var>& _74444_v) {
	if (((!(_74430_expr.get()._field_lvalue)) && (!(_1ed77d074_mutable(_74430_expr.get()._field_kind.ptr()))))) {
		return true;
	};
	return ((!(_74444_v.get()._field_mutable)) && (!(_74430_expr.get()._field_mutable)));
}



inline jule::Str _1aab98a98_decompose_common_esq(jule::U8 _114425_b) {
	{
		auto &_match_expr{ _114425_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bb748cdb:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bb748d52:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bb748db8:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bb748e2e:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bb749072:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bb7490d8:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bb74914e:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bb7491b5:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bb74922b:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bb749429:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1bb748a22:;
			{
				return jule::Str();
			}
		}
		_match_end_1bb7471e6:;
	};
}



inline jule::Str _1aab98d84_sbtoa(jule::U8 _117110_b) {
	if ((_117110_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	};
	if ((_117110_b < 128LLU)) {
		jule::Str _117613_seq = _1aab98a98_decompose_common_esq(_117110_b);;
		if ((!(_117613_seq.empty()))) {
			return _117613_seq;
		};
		if (((32LL <= _117110_b) && (_117110_b <= 126LLU))) {
			return static_cast<jule::Str>(_117110_b);
		};
	};
	jule::Str _11849_seq = _1e0be6e24_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_117110_b)),8LL);;
	if ((_11849_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _11849_seq);
	};
	return (jule::Str("\\", 1) + _11849_seq);
}



inline jule::Str _1aab9912b_cstr_bytes(jule::Slice<jule::U8> _119115_bytes) {
	jule::Str _119213_lit = jule::Str();;
	{
		auto &expr = _119115_bytes;
		auto it = expr.begin();
		_iter_begin_1bb74e9c3:;
		if (it != expr.end()) {
			jule::U8 &_119312_b = *it;
			{
				_119213_lit+=_1aab98d84_sbtoa(_119312_b);
			}
			_iter_next_1bb74e9c3:;
			++it;
			goto _iter_begin_1bb74e9c3;
		}
		_iter_end_1bb74e9c3:;
	};
	return _119213_lit;
}



inline jule::Str _1aab99417_cstr_lit(jule::Slice<jule::U8> _119913_bytes) {
	return ((jule::Str("\"", 1) + _1aab9912b_cstr_bytes(_119913_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1aab99758_ftoa(jule::F64 _12039_f, jule::I32 _120317_bitsize) {
	if ((_120317_bitsize != 32LL)) {
		if ((_12039_f == static_cast<jule::F64>(static_cast<jule::I64>(_12039_f)))) {
			return _1aab99a00_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12039_f)));
		};
		if ((_12039_f == static_cast<jule::F64>(static_cast<jule::U64>(_12039_f)))) {
			return _1aab99c97_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12039_f)));
		};
	};
	jule::Str _121213_m = _1e060281e_fmt_float(_12039_f,'f',-1LL,_120317_bitsize);;
	if ((!(_1dd30ed58_contains(_121213_m,jule::Str(".", 1))))) {
		_121213_m+=jule::Str(".0", 2);
	};
	return _121213_m;
}



inline jule::Str _1aab99a00_itoa(jule::I64 _12199_x) {
	{
		
		if ((_12199_x == jule::MAX_I64)) {
			_case_begin_1bb753851:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12199_x == jule::MIN_I64)) {
			_case_begin_1bb75391c:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1bb753741:;
	};
	jule::Str _12279_fmt = _1e0be7056_fmt_int(_12199_x,10LL);;
	if (_1dd660a05_is_64bit(jule::Str("i386", 4))) {
		return (_12279_fmt + jule::Str("LL", 2));
	};
	return (_12279_fmt + jule::Str("L", 1));
}



inline jule::Str _1aab99c97_utoa(jule::U64 _12349_x) {
	{
		
		if ((_12349_x == jule::MAX_U64)) {
			_case_begin_1bb755688:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1bb7555bc:;
	};
	jule::Str _12409_fmt = _1e0be6e24_fmt_uint(_12349_x,10LL);;
	if (_1dd660a05_is_64bit(jule::Str("i386", 4))) {
		return (_12409_fmt + jule::Str("LLU", 3));
	};
	return (_12409_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1aab9a0c7_is_forwarded(jule::Ptr<_1e0dd6322_Scope>& _124718_s) {
	jule::Any _12489_last = _124718_s.get()._field_stmts[(_124718_s.get()._field_stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _12489_last };
		
		if (_match_expr.type_is<jule::Ptr<_1e0e7ce9b_Data>>()) {
			_case_begin_1bb757e2c:;
			{
				{
					auto &_match_expr{ _12489_last.operator jule::Ptr<_1e0e7ce9b_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1e01430a7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1bb758081:;
						{
							return true;
						}
					}
					else {
						_case_begin_1bb758438:;
						{
							return false;
						}
					}
					_match_end_1bb7583d3:;
				};
			}
		}
		else {
			_case_begin_1bb7577de:;
			{
				return true;
			}
		}
		_match_end_1bb757789:;
	};
}



inline jule::Bool _1aab9a391_is_builtin_call_has_debuginf(jule::Ptr<_1e013ee50_FnCallExprModel>& _126234_m) {
	if ((!(_1e0146550_is_builtin(_126234_m.get()._field_func.ptr())))) {
		return false;
	};
	{
		auto &_match_expr{ _126234_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1e014198a_CommonSubIdentExprModel>>()) {
			_case_begin_1bb75978b:;
			{
				jule::Ptr<_1e014198a_CommonSubIdentExprModel> _126813_csie = _126234_m.get()._field_expr.operator jule::Ptr<_1e014198a_CommonSubIdentExprModel>();;
				return (_126813_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1bb757a20:;
			{
				return false;
			}
		}
		_match_end_1bb7591c5:;
	};
}



inline void _1aac17d26_iter_files(jule::Ptr<_1e0e16253_Package>& _100120_pkg, jule::Fn<void(jule::Ptr<_1e0e77eeb_SymbolTable>&)> _100135_f) {
	{
		auto &expr = _100120_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1bb8ad626:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e77eeb_SymbolTable> _100217_file = *it;
			{
				_100135_f(_100217_file);
			}
			_iter_next_1bb8ad626:;
			++it;
			goto _iter_begin_1bb8ad626;
		}
		_iter_end_1bb8ad626:;
	};
}



inline void _1aac18079_prepare_structure(jule::Ptr<_1e010261b_Struct>& _100727_s) {
	{
		auto &expr = _100727_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1bb8adb32:;
		if (it != expr.end()) {
			jule::Ptr<_1e010a05d_StructIns> _100817_ins = *it;
			{
				{
					auto &expr = _100817_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1bb8ae9e0:;
					if (it != expr.end()) {
						jule::Ptr<_1e0144581_Fn> _100921_m = *it;
						{
							if (_100921_m.get()._field_statically) {
								goto _iter_next_1bb8ae9e0;
							};
							{
								auto &expr = _100921_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1bb8b0183:;
								if (it != expr.end()) {
									jule::Ptr<_1e01457c4_FnIns> _101325_mins = *it;
									{
										jule::Ptr<_1e0144938_ParamIns> _101425_p = _101325_mins.get()._field_params[0LL];;
										if ((!(_1e01202c6_is_ref(_101425_p.get()._field_decl.ptr())))) {
											_101425_p.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1aac1dd93_CustomType>(_1aac1dd93_CustomType{._field_kind=static__1aac20746_as_ptr(static__1aac23c44_kind(_101425_p.get()._field_kind))}), 13)});
										} else {
											_101425_p.get()._field_kind=jule::new_ptr<_1ed77bbbb_TypeKind>(_1ed77bbbb_TypeKind{._field_kind=jule::Trait<_1ed77b78c_Kind>(jule::new_ptr<_1aac1dd93_CustomType>(_1aac1dd93_CustomType{._field_kind=static__1aac23c44_kind(_101425_p.get()._field_kind)}), 13)});
										};
									}
									_iter_next_1bb8b0183:;
									++it;
									goto _iter_begin_1bb8b0183;
								}
								_iter_end_1bb8b0183:;
							};
						}
						_iter_next_1bb8ae9e0:;
						++it;
						goto _iter_begin_1bb8ae9e0;
					}
					_iter_end_1bb8ae9e0:;
				};
			}
			_iter_next_1bb8adb32:;
			++it;
			goto _iter_begin_1bb8adb32;
		}
		_iter_end_1bb8adb32:;
	};
}



inline jule::Str _1aac18321_concat_all_parts(jule::Slice<jule::Ptr<_1dd9941e0_Token>> _103421_parts) {
	jule::Str _103513_s = jule::Str();;
	{
		auto &expr = _103421_parts;
		auto it = expr.begin();
		_iter_begin_1bb8b09d0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9941e0_Token> &_103612_p = *it;
			{
				_103513_s+=_103612_p.get()._field_kind;
			}
			_iter_next_1bb8b09d0:;
			++it;
			goto _iter_begin_1bb8b09d0;
		}
		_iter_end_1bb8b09d0:;
	};
	return _103513_s;
}



inline jule::Ptr<_1e0124e35_Directive> _1aac25cce_find_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _32924_directives, jule::Str _32955_tag) {
	{
		auto &expr = _32924_directives;
		auto it = expr.begin();
		_iter_begin_1bb989988:;
		if (it != expr.end()) {
			jule::Ptr<_1e0124e35_Directive> _33017_dr = *it;
			{
				if ((_33017_dr.get()._field_tag.get()._field_kind == _32955_tag)) {
					return _33017_dr;
				};
			}
			_iter_next_1bb989988:;
			++it;
			goto _iter_begin_1bb989988;
		}
		_iter_end_1bb989988:;
	};
	return nullptr;
}



inline jule::Bool _1aac26164_has_directive(jule::Slice<jule::Ptr<_1e0124e35_Directive>>& _33919_directives, jule::Str _33950_tag) {
	return (_1aac25cce_find_directive(_33919_directives,_33950_tag) != nullptr);
}



inline void _1dd62759e_print_error_message(jule::Str _3024_msg) {
	jule::outln(_3024_msg);
}



inline void _1dd639c54_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I32 _4113_max = _1dd6458b9_HELP_MAP[0LL][0LL].len();;
	{
		auto &expr = _1dd6458b9_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1bba12a55:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I32 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1bba12a55:;
			++it;
			goto _iter_begin_1bba12a55;
		}
		_iter_end_1bba12a55:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _1dd6458b9_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1bba1434d:;
		if (it != expr.end()) {
			jule::I32 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_1dd569b73_repeat(jule::Str(" ", 1),static_cast<jule::I32>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1bba1434d:;
			++it;
			_519_i++;
			goto _iter_begin_1bba1434d;
		}
		_iter_end_1bba1434d:;
	};
	jule::outln(_4913_s);
}



inline void _1dd63b371_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.11 @master", 18));
}



inline void _1dd63bb13_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1dd65dc9a_DISTOS;
		auto it = expr.begin();
		_iter_begin_1bba1762b:;
		if (it != expr.end()) {
			jule::Str &_7412_os = *it;
			{
				jule::out(_7412_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1bba1762b:;
			++it;
			goto _iter_begin_1bba1762b;
		}
		_iter_end_1bba1762b:;
	};
	jule::outln(jule::Str());
}



inline void _1dd63c3a5_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1dd65e075_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1bba17d68:;
		if (it != expr.end()) {
			jule::Str &_8412_arch = *it;
			{
				jule::out(_8412_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1bba17d68:;
			++it;
			goto _iter_begin_1bba17d68;
		}
		_iter_end_1bba17d68:;
	};
	jule::outln(jule::Str());
}



inline void _1dd63cb47_tool(jule::Slice<jule::Str>& _9210_args) {
	if ((_9210_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9210_args.len() > 3LL)) {
		_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _9210_args[3LL]));
		return;;
	};
	jule::Str _1039_cmd = _9210_args[2LL];;
	{
		auto &_match_expr{ _1039_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1bba1ab90:;
			{
				_1dd63bb13_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1bba1a8d7:;
			{
				_1dd63c3a5_tool_distarch();
			}
		}
		else {
			_case_begin_1bba1a178:;
			{
				_1dd62759e_print_error_message((jule::Str("undefined command: ", 19) + _1039_cmd));
			}
		}
		_match_end_1bba1a6a6:;
	};
}



inline void _1dd63d3d9_julenv(jule::Slice<jule::Str>& _11512_args) {
	if ((_11512_args.len() > 2LL)) {
		_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _11512_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.11 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: windows", 25));
	jule::outln((jule::Str("default compiler: ", 18) + _1db65e5d8_COMPILER));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1db65e94b_CPP_STD));
}



inline void _1dd64d174_mod(jule::Slice<jule::Str>& _1289_args) {
	if ((_1289_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1289_args.len() > 3LL)) {
		_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1289_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1bba2006d:;
			{
				({
					auto except = static__1db7c00d9_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1dd62759e_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1bba1e8b9:;
			{
				_1dd62759e_print_error_message((jule::Str("invalid command: ", 17) + _1289_args[2LL]));
			}
		}
		_match_end_1bba1eb94:;
	};
}



inline jule::Bool _1dd624a1e_process_command(jule::Slice<jule::Str>& _15121_args) {
	{
		auto &_match_expr{ _15121_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1bba21e2c:;
			{
				_1dd639c54_help(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1bba217cd:;
			{
				_1dd63b371_version(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1bba21844:;
			{
				_1dd63cb47_tool(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1bba21ed7:;
			{
				_1dd63d3d9_julenv(_15121_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1bba2204d:;
			{
				_1dd64d174_mod(_15121_args);
			}
		}
		else {
			_case_begin_1bba20a0d:;
			{
				return false;
			}
		}
		_match_end_1bba21338:;
	};
	return true;
}



inline void _1dd639160_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18713_args = _1dc6448b9_args();;
	if ((_18713_args.len() < 2LL)) {
		_1dd639160_show_info();
		return;;
	};
	if (_1dd624a1e_process_command(_18713_args)) {
		return;;
	};
	_1aac5b5c8_compile_command(_18713_args);
}



inline void _1dd62aedc_enable_vtp(void) {
	jule::Uintptr _199_h_out = _1dc4a20c8_get_std_handle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_199_h_out == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _2413_dw_mode = 0LL;;
	if ((!(_1dc4a4e66_get_console_mode(_199_h_out,_2413_dw_mode)))) {
		return;;
	};
	_2413_dw_mode|=4LL;
	_1dc4a52a7_set_console_mode(_199_h_out,_2413_dw_mode);
}



inline void _1dd645bd8_init(void) {
	_1dd62aedc_enable_vtp();
}



inline void _1aa6746ea_init(void) {
	_1db65e5d8_COMPILER=jule::Str("clang", 5);
}



inline jule::Ptr<_1dc4b2c32_File> _1aac26d02_open_output(jule::Str& _4817_path) {
	jule::Str _499_dir = _1dc6ae24c_dir(_4817_path);;
	({
		auto except = static__1dc611468_of(_499_dir);
		if (!except.ok()) {
			({
				auto except = static__1dc5b5384_create(_499_dir);
				if (!except.ok()) {
					_1aa5ec288_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1db7ba090_create(_4817_path);
		(except.ok()) ? (except.result) : ({
			_1aa5ec288_throw(jule::Str("a problem occurs when code generation", 37));
			nullptr;
		});
	});
}



inline void _1aac2e4ad_clear_objects(void) {
	({
		auto except = static__1dc550572_remove(_1aac2c269_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1dc5dc521_remove(_1aac36031_OUT_DIR);
}



inline void _1aac3d4de_compile_ir(jule::Str _7715_compiler, jule::Str _7730_compiler_cmd) {
	jule::Ptr<_1dd69baa7_Cmd> _7813_cmd = static__1dd69bed6_new(_7715_compiler);;
	_7813_cmd.get()._field_args=jule::Slice<jule::Str>::make({_7715_compiler});
	_7813_cmd.get()._field_args=jule::append(_7813_cmd.get()._field_args,_1dd30ec26_split(_7730_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I32 _819_status = ({
		auto except = _1dd69c24a_spawn(_7813_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(12LL)) == _match_expr) {
					_case_begin_1bba2b970:;
					{
						static__1aa5ea011_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(3LL)) == _match_expr) {
					_case_begin_1bba2b750:;
					{
						static__1aa5ea011_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(9LL)) == _match_expr) {
					_case_begin_1bba2b7b6:;
					{
						static__1aa5ea011_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL)) == _match_expr) {
					_case_begin_1bba2b82c:;
					{
						static__1aa5ea011_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1bba2b497:;
					{
						static__1aa5ea011_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1bba2b530:;
			};
			_1aa5ec288_throw(jule::Str());
			0LL;
		});
	});;
	if ((_819_status != 0LL)) {
		jule::Str _9813_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1db65e5d8_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1aa5ea011_print(jule::Str("\033[31m", 5),_9813_error_message);
		_1aa5ec288_throw(jule::Str());
	};
	_1aac2e4ad_clear_objects();
}



inline jule::Bool _1aac2a9c6_is_cpp_source_file(jule::Str _10923_path) {
	jule::I32 _1109_offset = _1dd30e4d9_find_last_byte(_10923_path,'.');;
	if ((_1109_offset == -1LL)) {
		return false;
	};
	return _1dd64e483_is_valid_cpp_ext(_10923_path.slice(_1109_offset));
}



inline void _1aac35849_push_comp_cmd_clang(jule::Str& _11729_cmd) {
	_11729_cmd+=jule::Str("-Wno-everything ", 16);
	_11729_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1db65e94b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bba3129e:;
			{
				_11729_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bba3205d:;
			{
				_11729_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bba320c4:;
			{
				_11729_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bba31e5e:;
	};
	_11729_cmd+=jule::Str(" ", 1);
	if (_1db66070a_PRODUCTION) {
		_11729_cmd+=jule::Str("-O3 ", 4);
		_11729_cmd+=jule::Str("-flto ", 6);
		_11729_cmd+=jule::Str("-DNDEBUG ", 9);
		_11729_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11729_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1aac28496_push_comp_cmd_gcc(jule::Str& _14327_cmd) {
	_14327_cmd+=jule::Str("-w ", 3);
	_14327_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1db65e94b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1bba34538:;
			{
				_14327_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1bba3459e:;
			{
				_14327_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bba34615:;
			{
				_14327_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1bba34439:;
	};
	_14327_cmd+=jule::Str(" ", 1);
	if (_1db66070a_PRODUCTION) {
		_14327_cmd+=jule::Str("-O3 ", 4);
		_14327_cmd+=jule::Str("-DNDEBUG ", 9);
		_14327_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14327_cmd+=jule::Str("-O0 ", 4);
	};
}



inline std::tuple<jule::Str,jule::Str> _1aa80c8a5_gen_compile_cmd(jule::Str _16920_source_path, jule::Ptr<_1c2c92949_IR>& _16939_ir) {
	jule::Str &_17010_compiler = _1db65e792_COMPILER_PATH;;
	jule::Str _17113_cmd = jule::Str();;
	{
		auto &_match_expr{ _1db65e5d8_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bba3697a:;
			{
				_1aac28496_push_comp_cmd_gcc(_17113_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bba36d65:;
			{
				_1aac35849_push_comp_cmd_clang(_17113_cmd);
			}
		}
		_match_end_1bba36bbc:;
	};
	{
		auto &expr = _16939_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1bba37959:;
		if (it != expr.end()) {
			jule::Str &_18112_pass = *it;
			{
				_17113_cmd+=_18112_pass;
				_17113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1bba37959:;
			++it;
			goto _iter_begin_1bba37959;
		}
		_iter_end_1bba37959:;
	};
	{
		auto &expr = _16939_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1bba386a2:;
		if (it != expr.end()) {
			jule::Ptr<_1e0e13272_ImportInfo> &_18712_u = *it;
			{
				if ((_18712_u.get()._field_cpp_linked && _1aac2a9c6_is_cpp_source_file(_18712_u.get()._field_path))) {
					_17113_cmd+=_18712_u.get()._field_path;
					_17113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1bba386a2:;
			++it;
			goto _iter_begin_1bba386a2;
		}
		_iter_end_1bba386a2:;
	};
	if ((!(_1aac4a177_OUT.empty()))) {
		_17113_cmd+=jule::Str("-o ", 3);
		_17113_cmd+=_1aac4a177_OUT;
		_17113_cmd+=jule::Str(" ", 1);
	};
	_17113_cmd+=_16920_source_path;
	return std::make_tuple(_17010_compiler,_17113_cmd);
}



inline jule::Str _1aac2c269_get_compile_path(void) {
	return _1dc68e46e_join(jule::Slice<jule::Str>::make({_1aac36031_OUT_DIR,_1aac3e8a8_OUT_NAME}));
}



inline void _1aaac2d68_apply_target_independent_optimizations(jule::Ptr<_1c2c92949_IR>& _21448_ir) {
	jule::Ptr<_1aa56cc31_Optimizer> _21613_opt = static__1aa4eb5a5_new(_21448_ir);;
	_1aa4ee685_optimize(_21613_opt.ptr());
}



inline void _1aa9a4552_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1db65e5d8_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1bba3aebd:;
			{
				_1aa5ec288_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1bba3abc1:;
			{
				if (_1db65e792_COMPILER_PATH.empty()) {
					_1db65e792_COMPILER_PATH=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1bba3ac37:;
			{
				if (_1db65e792_COMPILER_PATH.empty()) {
					_1db65e792_COMPILER_PATH=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1bba3a4a6:;
			{
				_1aa5ec288_throw((jule::Str("invalid option value for --compiler: ", 37) + _1db65e5d8_COMPILER));
			}
		}
		_match_end_1bba3ab5a:;
	};
}



inline void _1aaa47e53_check_target_arch(jule::Str _23722_arch) {
	{
		auto &expr = _1dd65e075_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1bba3c1ab:;
		if (it != expr.end()) {
			jule::Str &_23812_distarch = *it;
			{
				if ((_23722_arch == _23812_distarch)) {
					return;;
				};
			}
			_iter_next_1bba3c1ab:;
			++it;
			goto _iter_begin_1bba3c1ab;
		}
		_iter_end_1bba3c1ab:;
	};
	_1aa5ec288_throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _23722_arch));
}



inline void _1aab4e6db_check_target_os(jule::Str _24620_os) {
	{
		auto &expr = _1dd65dc9a_DISTOS;
		auto it = expr.begin();
		_iter_begin_1bba3d90a:;
		if (it != expr.end()) {
			jule::Str &_24712_distos = *it;
			{
				if ((_24620_os == _24712_distos)) {
					return;;
				};
			}
			_iter_next_1bba3d90a:;
			++it;
			goto _iter_begin_1bba3d90a;
		}
		_iter_end_1bba3d90a:;
	};
	_1aa5ec288_throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _24620_os));
}



inline void _1aac5ab5a_check_target_flag(jule::Str& _25523_target) {
	if (_25523_target.empty()) {
		_1aa5ec288_throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2609_parts = _1dd30ec26_split(_25523_target,jule::Str("-", 1),-1LL);;
	if ((_2609_parts.len() != 2LL)) {
		_1aa5ec288_throw((jule::Str("--target: undefined platform target format: ", 44) + _25523_target));
	};
	jule::Str _26510_os = _2609_parts[0LL];;
	jule::Str _26514_arch = _2609_parts[1LL];;
	std::tie(_26510_os,_26514_arch) = std::make_tuple(_2609_parts[0LL],_2609_parts[1LL]);
	if ((_26510_os != jule::Str("native", 6))) {
		_1aab4e6db_check_target_os(_26510_os);
		_1dd69aa0c_OS=_26510_os;
	};
	if ((_26514_arch != jule::Str("native", 6))) {
		_1aaa47e53_check_target_arch(_26514_arch);
		_1dd67de96_ARCH=_26514_arch;
	};
	_1e0de0b12_update_target();
}



inline void _1aac5ac8c_check_opt_flag(jule::Str& _27820_opt) {
	if (_27820_opt.empty()) {
		_1aa5ec288_throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _27820_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1bba43db6:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1bba43b52:;
			{
				_1ed84a031_push_opt_level(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1bba43514:;
			{
				_1aa5ec288_throw((jule::Str("--opt: invalid optimization level: ", 35) + _27820_opt));
			}
		}
		_match_end_1bba43aca:;
	};
}



inline void _1aac5b100_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1db65e94b_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1bba44ed8:;
			{
				goto _match_end_1bba445e2;
			}
		}
		else {
			_case_begin_1bba43bb8:;
			{
				_1aa5ec288_throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _1db65e94b_CPP_STD));
			}
		}
		_match_end_1bba445e2:;
	};
}



inline jule::Slice<jule::Str> _1aac5b232_check_flags(jule::Slice<jule::Str>& _30317_args) {
	jule::Str _30413_opt = jule::Str("L0", 2);;
	jule::Str _30513_target = jule::Str("native-native", 13);;
	jule::Ptr<_1aac56d43_FlagSet> _30713_fs = static__1aac5712e_new();;
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30413_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_30513_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1aac4a177_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1db65eb05_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1db65ecae_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1db65e5d8_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1db65e792_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1db66070a_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1db6601bb_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1db6604a7_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1bba46bbb_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1db65e94b_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed848ace_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed848d76_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed8490c9_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed849371_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed8495c4_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed849827_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed849a7a_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1bba50cb3_add_var(_30713_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ed849d66_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _32913_content = ({
		auto except = _1aac57e76_parse(_30713_fs.ptr(), _30317_args);
		(except.ok()) ? (except.result) : ({
			_1aa5ec288_throw(except.error.operator jule::Str());
			nullptr;
		});
	});;
	_1aa9a4552_check_compiler_flag();
	_1aac5b100_check_cpp_std_flag();
	_1aac5ab5a_check_target_flag(_30513_target);
	_1aac5ac8c_check_opt_flag(_30413_opt);
	return _32913_content;
}



inline void _1aac5b364_setup_sema_flags(jule::I32& _34226_flags) {
	if (_1db65eb05_SHADOWING) {
		_34226_flags|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1c2c92949_IR> _1aac5b496_build_ir(jule::Slice<jule::Str>& _34814_args) {
	jule::Slice<jule::Str> _3499_content = _1aac5b232_check_flags(_34814_args);;
	jule::I32 _35113_sema_flags = static_cast<jule::I32>(0LL);;
	_1aac5b364_setup_sema_flags(_35113_sema_flags);
	if ((_3499_content.len() == 0LL)) {
		_1aa5ec288_throw(_1dd65ae40_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3499_content.len() > 1LL)) {
		_1aa5ec288_throw((jule::Str("undefined content: ", 19) + _3499_content[1LL]));
	};
	jule::Str _35914_path;;
	jule::Bool _35920_ok;;
	std::tie(_35914_path,_35920_ok) = _1dc6abaeb_abs(_3499_content[0LL]);
	if ((!(_35920_ok))) {
		_1aa5ec288_throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1dc4b30ea_Status> _3659_inf = ({
		auto except = static__1dc611468_of(_1dd66e45e_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1aa5ec288_throw(_1dd65ae40_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
		} jule::Ptr<_1dc4b30ea_Status>();});
	});;
	if ((!(_1db6ea267_is_dir(_3659_inf.ptr())))) {
		_1aa5ec288_throw(_1dd65ae40_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c2c92949_IR> _37314_ir;;
	jule::Slice<_1dd65aa00_Log> _37318_logs;;
	std::tie(_37314_ir,_37318_logs) = static__1c2d5470e_build(_35914_path,_35113_sema_flags);
	if (((_37314_ir == nullptr) && (_37318_logs == nullptr))) {
		_1aa5ec288_throw(_1dd65ae40_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_35914_path)})));
	};
	if ((_37318_logs != nullptr)) {
		static__1aa5eb8c5_print_logs(_37318_logs);
		_1aa5ec288_throw(jule::Str());
	};
	return _37314_ir;
}



inline void _1aac5b5c8_compile_command(jule::Slice<jule::Str>& _38825_args) {
	_38825_args=_38825_args.slice(1LL);
	if ((_38825_args[0LL] == jule::Str("test", 4))) {
		_1db65ee68_TEST=true;
		_38825_args=_38825_args.slice(1LL);
	};
	jule::Ptr<_1c2c92949_IR> _39413_ir = _1aac5b496_build_ir(_38825_args);;
	;
	if ((!(_1db65ee68_TEST))) {
		jule::Ptr<_1e0144581_Fn> _39917_main = _1e0e17a07_find_fn(_39413_ir.get()._field_main.ptr(), jule::Str("main", 4),false);;
		if ((_39917_main == nullptr)) {
			_1aa5ec288_throw(_1dd65ae40_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1aaac2d68_apply_target_independent_optimizations(_39413_ir);
	_1a9445599_order(_39413_ir.ptr());
	jule::Str _41010_compiler;;
	jule::Str _41020_compiler_cmd;;
	std::tie(_41010_compiler,_41020_compiler_cmd) = _1aa80c8a5_gen_compile_cmd(_1aac2c269_get_compile_path(),_39413_ir);
	jule::Ptr<_1aabca998_ObjectCoder> _41213_oc = static__1aabd48a3_new(_39413_ir,_1aabd6e7c_SerializationInfo{._field_compiler=_41010_compiler, ._field_compiler_command=_41020_compiler_cmd});;
	if (_1db65ee68_TEST) {
		jule::Ptr<_1aab9be31_TestCoder> _41717_tc = static__1aab9c3a4_new(_41213_oc);;
		_1aab9d5d6_serialize(_41717_tc);
	} else {
		_1aac179b3_serialize(_41213_oc);
	};
	jule::Str _4239_path = _1aac2c269_get_compile_path();;
	jule::Ptr<_1dc4b2c32_File> _42413_file = _1aac26d02_open_output(_4239_path);;
	({
		auto except = _1dc51be67_write(_42413_file.ptr(), static_cast<jule::Slice<jule::U8>>(_41213_oc.get()._field_obj));
		if (!except.ok()) {
			_1aa5ec288_throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1db7d2b57_close(_42413_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:428:5"));
	});
	if ((!(_1db65ecae_TRANSPILATION))) {
		_1aac3d4de_compile_ir(_41010_compiler,_41020_compiler_cmd);
	};
}



void __jule_call_initializers(void) {
	_1dd699e5c_init();
	_1e0de0c77_init();
	_1dd645bd8_init();
	_1aa6746ea_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}