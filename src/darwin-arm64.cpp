// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 18/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1dda12cb9_Importer{};
struct _1ddab4e9d_Kind{};
struct _1ddad134e_Lookup{};
struct _1c572e45a_CommonFlag{};
struct _2229ba7ba_Range16;
struct _2229bac3d_Range32;
struct _2229bb1b1_RangeTable;
struct _222a7c2b6_acceptRange;
struct _221ade318_lazyBuff;
struct _220d12cac_DirEntry;
struct _220d5adc1_Directory;
struct _220c4c3de_File;
struct _221a21459_Status;
struct _222b83c80_Cmd;
struct _222b38ae2_Log;
struct _222e62217_Token;
struct _222e675a2_File;
struct _222e69609_kindPair;
struct _222e7016a_lex;
struct _209084bc2_Ast;
struct _2090859b4_Node;
struct _209085db0_Directive;
struct _2090b9157_TypeDecl;
struct _2090b971d_IdentTypeDecl;
struct _2090b9d6c_SubIdentTypeDecl;
struct _2090ba224_NamespaceTypeDecl;
struct _2090ba510_SptrTypeDecl;
struct _2090ba90b_SlcTypeDecl;
struct _2090babe7_TupleTypeDecl;
struct _2090baed3_PtrTypeDecl;
struct _2090bb665_ArrTypeDecl;
struct _2090bbdb3_MapTypeDecl;
struct _2090bc26a_RetTypeDecl;
struct _2090bd678_Expr;
struct _2090bd964_RangeExpr;
struct _2090be019_UseExpr;
struct _2090be305_TupleExpr;
struct _2090be6ac_LitExpr;
struct _2090bedb6_UnsafeExpr;
struct _2090c0339_IdentExpr;
struct _2090c0a43_UnaryExpr;
struct _2090c0dea_VariadicExpr;
struct _2090c12a2_CastExpr;
struct _2090c1659_NsSelectionExpr;
struct _2090c1acc_SubIdentExpr;
struct _2090c2050_BinopExpr;
struct _2090c265a_FnCallExpr;
struct _2090c30d9_FieldExprPair;
struct _2090c3837_StructLit;
struct _2090c3caa_BraceLit;
struct _2090c4580_KeyValPair;
struct _2090c4c67_SliceExpr;
struct _2090c55d6_IndexingExpr;
struct _2090c5be1_SlicingExpr;
struct _2090c5ecc_Constraint;
struct _2090c6450_GenericDecl;
struct _2090c6807_LabelSt;
struct _2090c6bae_GotoSt;
struct _2090c6e9a_FallSt;
struct _2090c75a5_AssignLeft;
struct _2090c7ae4_AssignSt;
struct _2090c89d5_Stmt;
struct _2090c90e0_ScopeTree;
struct _2090c97b6_ParamDecl;
struct _2090caad6_FnDecl;
struct _2090cbab5_VarDecl;
struct _2090cbe6c_RetSt;
struct _2090cc5cc_Iter;
struct _2090ccda2_WhileKind;
struct _2090cd743_RangeKind;
struct _2090cdaea_BreakSt;
struct _2090cdea2_ContSt;
struct _2090ce425_If;
struct _2090ce7cc_Else;
struct _2090cec50_Conditional;
struct _2090d0426_TypeAliasDecl;
struct _2090d0899_Case;
struct _2090d1070_MatchCase;
struct _2090d1812_UseDecl;
struct _2090d1c85_EnumItemDecl;
struct _2090d27ad_EnumDecl;
struct _2090d32b4_TypeEnumItemDecl;
struct _2090d38be_TypeEnumDecl;
struct _2090d3abc_FieldDecl;
struct _2090d4370_StructDecl;
struct _2090d497a_TraitDecl;
struct _2090d5085_Impl;
struct _217444606_floatInfo;
struct _1dd9903b7_decimalSlice;
struct _1dd99902a_leftCheat;
struct _1dd9999ed_decimal;
struct _1dd9ad050_Const;
struct _2090a98a6_Field;
struct _2090b1eeb_Operators;
struct _2090d5849_Struct;
struct _2090d5a36_FieldIns;
struct _1dd9b8d6e_OperandExprModel;
struct _1dd9b9336_BinopExprModel;
struct _1dd9b96dd_UnaryExprModel;
struct _1dd9b9ad9_StructArgExprModel;
struct _1dd9b9e91_StructLitExprModel;
struct _1dd9ba29e_AllocStructLitExprModel;
struct _1dd9ba7ee_CastingExprModel;
struct _1dd9bb1a1_FnCallExprModel;
struct _1dd9bb558_SliceExprModel;
struct _1dd9bb9cb_IndexingExprModel;
struct _1dd9bbd83_AnonFnExprModel;
struct _1dd9bc23a_KeyValPairExprModel;
struct _1dd9bc6ad_MapExprModel;
struct _1dd9bcbec_SlicingExprModel;
struct _1dd9bd23b_TraitSubIdentExprModel;
struct _1dd9bdadd_StructSubIdentExprModel;
struct _1dd9bde84_StructStaticIdentExprModel;
struct _1dd9be34c_ArrayExprModel;
struct _1dd9be638_CommonIdentExprModel;
struct _1dd9beb99_CommonSubIdentExprModel;
struct _1dd9bee96_TupleExprModel;
struct _1dd9c0370_BuiltinOutCallExprModel;
struct _1dd9c075a_BuiltinOutlnCallExprModel;
struct _1dd9c0a79_BuiltinCloneCallExprModel;
struct _1dd9c0e64_BuiltinNewCallExprModel;
struct _1dd9c134e_BuiltinPanicCallExprModel;
struct _1dd9c1805_BuiltinAssertCallExprModel;
struct _1dd9c1cab_BuiltinMakeCallExprModel;
struct _1dd9c2196_BuiltinAppendCallExprModel;
struct _1dd9c24b5_BuiltinLenCallExprModel;
struct _1dd9c27d4_BuiltinCapCallExprModel;
struct _1dd9c2e88_BuiltinDeleteCallExprModel;
struct _1dd9c32eb_BuiltinCopyCallExprModel;
struct _1dd9c36d6_BuiltinErrorCallExprModel;
struct _1dd9c39d3_SizeofExprModel;
struct _1dd9c3cbe_AlignofExprModel;
struct _1dd9c40aa_RuneExprModel;
struct _1dd9c43b8_IntegratedToStrExprModel;
struct _1dd9c4781_BackendEmitExprModel;
struct _1dd9c4a6c_FreeExprModel;
struct _1dd9c560b_RetType;
struct _1dd9c5cd2_Param;
struct _1dd9c761e_Fn;
struct _1dd9c9401_ParamIns;
struct _1dd9ca2c0_FnIns;
struct _1dd9cd23a_ReferenceStack;
struct _1dd9ce59e_Pass;
struct _1dd9d3a48_symbolBuilder;
struct _1dd9d9521_Trait;
struct _1dd9dab71_EnumItem;
struct _1dd9db666_Enum;
struct _1dd9dc69a_TypeEnumItem;
struct _1dd9dcc61_TypeEnum;
struct _1dd9e0291_constraintChecker;
struct _1dd9e21c7_Impl;
struct _1dd9e7232_Scope;
struct _1dd9e762d_If;
struct _1dd9e7919_Else;
struct _1dd9e7c8d_Conditional;
struct _1dd9e8079_InfIter;
struct _1dd9e84ec_WhileIter;
struct _1dd9e8dd2_RangeIter;
struct _1dd9e92cd_ContSt;
struct _1dd9e9685_BreakSt;
struct _1dd9e9971_Label;
struct _1dd9e9c5c_GotoSt;
struct _1dd9ea114_Postfix;
struct _1dd9ea587_Assign;
struct _1dd9ea93e_MultiAssign;
struct _1dd9eae7d_Match;
struct _1dd9eb9c8_Case;
struct _1dd9ec07d_FallSt;
struct _1dd9ec402_RetSt;
struct _1dd9eca0c_scopeLabel;
struct _1dd9ece80_scopeGoto;
struct _1dd9edc94_scopeChecker;
struct _1dda0e8a9_directiveChecker;
struct _1dda15937_ImportInfo;
struct _1dda18891_Package;
struct _1dda1da83_Sema;
struct _1dda3dbe6_missingRetChecker;
struct _1dda408a7_IterRelation;
struct _1dda418db_Var;
struct _1dda42689_FuncPattern;
struct _1dda73214_typeCompatibilityChecker;
struct _1dda74d3c_assignTypeChecker;
struct _1dda76822_dynamicTypeAnnotation;
struct _1dda7b1d9_fnCallArgChecker;
struct _1dda7dae3_structLitChecker;
struct _1dda806c7_rangeChecker;
struct _1dda82762_retTypeChecker;
struct _1dda84621_SymbolTable;
struct _1dda8944a_Data;
struct _1dda8a4c3_Value;
struct _1dda8aeb8_Eval;
struct _1ddaa6d5d_unaryEval;
struct _1ddaa8aeb_binaryEval;
struct _1ddab3ba0_InsGeneric;
struct _1ddab46d9_TypeAlias;
struct _1ddab53cc_TypeKind;
struct _1ddab97aa_TypeSymbol;
struct _1ddaba129_Prim;
struct _1ddabd8ad_Sptr;
struct _1ddabe31a_Slc;
struct _1ddabed98_Tuple;
struct _1ddac08c1_Map;
struct _1ddac14b5_Arr;
struct _1ddac1e22_Ptr;
struct _1ddac2d68_referencer;
struct _1ddac3c48_typeChecker;
struct _1ddacb459_identTypeLookup;
struct _1de3b0c60_FileInfo;
struct _1de40bcde_stmt;
struct _1de40c619_scopeParser;
struct _1de418b31_exprBuilder;
struct _1de425434_assignInfo;
struct _1de428c62_parser;
struct _1de439976_typeBuilder;
struct _1ddc6426d_CompileInfo;
struct _1ddc655c1_directiveEval;
struct _1de331450_JuleImporter;
struct _1ddc7c000_OrderedDefines;
struct _1ddd53db8_defineOrderer;
struct _2173a1c06_liveTable;
struct _1de50390d_scopeDeadCode;
struct _1de507868_exprDeadCode;
struct _1ddb7989d_UnsafeBinopExprModel;
struct _1ddb79bbc_UnsafeIndexingExprModel;
struct _1ddb7a085_PushToSliceExprModel;
struct _1ddb7a64b_MutSlicingExprModel;
struct _1ddb7a9e2_StrInsertBeginExprModel;
struct _1ddb7bb9c_scopeOptimizer;
struct _1ddb870c5_exprOptimizer;
struct _21736d94d_Optimizer;
struct _1de526733_AnsiEscape;
struct _1de527c51_Logger;
struct _1c56ca9bc_AbsTime;
struct _1c56cb160_Time;
struct _1c5626462_scopeCoder;
struct _1c562e107_exprCoder;
struct _1c563d26a_deriveCoder;
struct _1c563eb40_TestCoder;
struct _1c5642291_identCoder;
struct _1c5674a32_SerializationInfo;
struct _1c564a046_traitHash;
struct _1c56d89ca_customType;
struct _1c56d947b_typeCoder;
struct _1c56e1c69_resultCoder;
struct _1d4d16b43_Flag;
struct _1d4d1a87d_Flag;
struct _1d4d1e19a_Flag;
struct _1d4d22a0b_Flag;
struct _1d4d26328_Flag;
struct _1c5730dc9_FlagSet;
struct _2090d5c23_StructIns;
struct _2173a20be_ObjectDeadCode;
struct _1c56d2e7a_ObjectCoder;
struct _1dded98cd_IR;
struct _1c57335a2_argParser;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dda8944a_Data__jule_tuple_x_1dda8944a_Data {
	jule::Ptr<_1dda8944a_Data> __jule_result_arg0;
	jule::Ptr<_1dda8944a_Data> __jule_result_arg1;
};
struct __jule_tuple_x_2090d0899_Case__jule_tuple_bool {
	jule::Ptr<_2090d0899_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2090d0899_Case__jule_tuple_x_2090ce7cc_Else {
	jule::Slice<jule::Ptr<_2090d0899_Case>> __jule_result_arg0;
	jule::Ptr<_2090ce7cc_Else> __jule_result_arg1;
};
struct __jule_tuple__2090c87a4_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool {
	jule::Ptr<_2090c7ae4_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool {
	jule::Ptr<_2090b9157_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_2090bc26a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log {
	jule::Slice<jule::Ptr<_209084bc2_Ast>> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_222b38ae2_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1dded98cd_IR__jule_tuple_s_222b38ae2_Log {
	jule::Ptr<_1dded98cd_IR> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__2096d690b_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__2096d690b_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__2096d690b_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log {
	jule::Ptr<_1dda84621_SymbolTable> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log {
	jule::Ptr<_1dda18891_Package> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_x_209084bc2_Ast__jule_tuple_s_222b38ae2_Log {
	jule::Ptr<_209084bc2_Ast> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_222e62217_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_222e62217_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token {
	jule::Slice<jule::Ptr<_222e62217_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_222e62217_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_222e62217_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_222e62217_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> __jule_result_arg0;
	jule::Slice<_222b38ae2_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _2229ba7ba_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_2229ba7ba_Range16(void) = default;

	inline bool operator==(_2229ba7ba_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2229ba7ba_Range16 _other) { return !this->operator==(_other); }


};
struct _2229bac3d_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_2229bac3d_Range32(void) = default;

	inline bool operator==(_2229bac3d_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_2229bac3d_Range32 _other) { return !this->operator==(_other); }


};
struct _2229bb1b1_RangeTable {
	jule::Slice<_2229ba7ba_Range16> _field_R16;
	jule::Slice<_2229bac3d_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_2229bb1b1_RangeTable(void) = default;


};
struct _222a7c2b6_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_222a7c2b6_acceptRange(void) = default;

	inline bool operator==(_222a7c2b6_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_222a7c2b6_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _221aea786_index(_221ade318_lazyBuff*, jule::I64);
inline void _221aed0b3_append(_221ade318_lazyBuff*, jule::U8);
inline jule::Str _221aee8de_string(_221ade318_lazyBuff*);
struct _221ade318_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_221ade318_lazyBuff(void) = default;


};
struct _220d12cac_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_221a21459_Status> _field_Stat;
	

	_220d12cac_DirEntry(void) = default;

	inline bool operator==(_220d12cac_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_220d12cac_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_220d12cac_DirEntry>>> static__221a55d95_Read(jule::Str);
inline jule::VoidExceptional static__221a808d6_Create(jule::Str);
inline jule::VoidExceptional static__221a5a74b_Remove(jule::Str);
struct _220d5adc1_Directory {
	

	_220d5adc1_Directory(void) = default;

	inline bool operator==(_220d5adc1_Directory _other) { return true; }

	inline bool operator!=(_220d5adc1_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_220c4c3de_File>> static__220c4d335_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__220c4e688_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _220d5bb3b_Write(_220c4c3de_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _220c10dca_Read(_220c4c3de_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_220c4c3de_File> static__220c4c5cb_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_220c4c3de_File>> static__220c2b962_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__220c2c0e4_Read(jule::Str);
inline jule::VoidExceptional static__220d13ab0_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _220d14176_Seek(_220c4c3de_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _220c2b225_Close(_220c4c3de_File*);
struct _220c4c3de_File {
	jule::Uintptr _field_handle = 0;
	

	_220c4c3de_File(void) = default;

	inline bool operator==(_220c4c3de_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_220c4c3de_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_221a21459_Status>> static__220c2ab5e_Of(jule::Str);
inline jule::Bool _220c4d17b_IsDir(_221a21459_Status*);
inline jule::Bool _220d134a5_IsReg(_221a21459_Status*);
struct _221a21459_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_221a21459_Status(void) = default;

	inline bool operator==(_221a21459_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_221a21459_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_222b83c80_Cmd> static__222b841ae_New(jule::Str);
inline jule::Exceptional<jule::I64> _222b84423_Spawn(_222b83c80_Cmd*);
inline jule::Exceptional<jule::I64> _222b872e4_spawn(_222b83c80_Cmd*);
struct _222b83c80_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_222b83c80_Cmd(void) = default;


};
struct _222b38ae2_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_222b38ae2_Log(void) = default;

	inline bool operator==(_222b38ae2_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_222b38ae2_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _222e625be_Prec(_222e62217_Token*);
struct _222e62217_Token {
	jule::Ptr<_222e675a2_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_222e62217_Token(void) = default;

	inline bool operator==(_222e62217_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_222e62217_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _222e679ae_IsOk(_222e675a2_File*);
inline void _222e67c34_Fill(_222e675a2_File*, jule::Slice<jule::U8>);
inline jule::Str _222e67e98_Dir(_222e675a2_File*);
inline jule::Str _222e6820c_Name(_222e675a2_File*);
inline jule::Uintptr _222e68471_Addr(_222e675a2_File*);
inline jule::Str _222e6877e_GetRow(_222e675a2_File*, jule::I64);
struct _222e675a2_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Tokens;
	

	_222e675a2_File(void) = default;


};
struct _222e69609_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_222e69609_kindPair(void) = default;

	inline bool operator==(_222e69609_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_222e69609_kindPair _other) { return !this->operator==(_other); }


};
inline void _222e7070e_pushErr(_222e7016a_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _222e70a2d_pushErrTok(_222e7016a_lex*, jule::Ptr<_222e62217_Token>&, jule::Str);
inline void _222e70c09_lex(_222e7016a_lex*);
inline jule::Str _222e71017_id(_222e7016a_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _222e7127b_resume(_222e7016a_lex*);
inline void _222e71501_lexLineComment(_222e7016a_lex*, jule::Ptr<_222e62217_Token>&);
inline void _222e71776_lexRangeComment(_222e7016a_lex*, jule::Ptr<_222e62217_Token>&);
inline jule::Str _222e71a84_num(_222e7016a_lex*, jule::Slice<jule::U8>&);
inline jule::Str _222e71d92_escapeSeq(_222e7016a_lex*, jule::Slice<jule::U8>&);
inline jule::Str _222e72249_getRune(_222e7016a_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _222e72557_lexRune(_222e7016a_lex*, jule::Slice<jule::U8>&);
inline jule::Str _222e727bb_lexStr(_222e7016a_lex*);
inline jule::Bool _222e72a30_isFirstTokenOfLine(_222e7016a_lex*);
inline void _222e72c0b_newLine(_222e7016a_lex*);
inline jule::Bool _222e73206_isOp(_222e7016a_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _222e735ad_lexBasicOps(_222e7016a_lex*, jule::Slice<jule::U8>, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _222e73965_lexId(_222e7016a_lex*, jule::Slice<jule::U8>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _222e73d1c_lexNum(_222e7016a_lex*, jule::Slice<jule::U8>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_222e62217_Token> _222e74081_token(_222e7016a_lex*);
struct _222e7016a_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_tokens;
	jule::Ptr<_222e675a2_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_222b38ae2_Log> _field_errors;
	

	_222e7016a_lex(void) = default;


};
struct _209084bc2_Ast {
	jule::Ptr<_222e675a2_File> _field_File;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_2090d1812_UseDecl>> _field_UseDecls;
	jule::Slice<_2090859b4_Node> _field_Nodes;
	

	_209084bc2_Ast(void) = default;


};
struct _2090859b4_Node {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_2090859b4_Node(void) = default;

	inline bool operator==(_2090859b4_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2090859b4_Node _other) { return !this->operator==(_other); }


};
struct _209085db0_Directive {
	jule::Ptr<_222e62217_Token> _field_Tag;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Args;
	

	_209085db0_Directive(void) = default;


};
struct _2090b9157_TypeDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_2090b9157_TypeDecl(void) = default;

	inline bool operator==(_2090b9157_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2090b9157_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090b9a81_IsPrim(_2090b971d_IdentTypeDecl*);
struct _2090b971d_IdentTypeDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _field_Generics;
	

	_2090b971d_IdentTypeDecl(void) = default;


};
struct _2090b9d6c_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_2090b971d_IdentTypeDecl>> _field_Idents;
	

	_2090b9d6c_SubIdentTypeDecl(void) = default;


};
struct _2090ba224_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Idents;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	

	_2090ba224_NamespaceTypeDecl(void) = default;


};
struct _2090ba510_SptrTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Elem;
	

	_2090ba510_SptrTypeDecl(void) = default;

	inline bool operator==(_2090ba510_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2090ba510_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2090ba90b_SlcTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Elem;
	

	_2090ba90b_SlcTypeDecl(void) = default;

	inline bool operator==(_2090ba90b_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2090ba90b_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _2090babe7_TupleTypeDecl {
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _field_Types;
	

	_2090babe7_TupleTypeDecl(void) = default;


};
inline jule::Bool _2090bb335_IsUnsafe(_2090baed3_PtrTypeDecl*);
struct _2090baed3_PtrTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Elem;
	

	_2090baed3_PtrTypeDecl(void) = default;

	inline bool operator==(_2090baed3_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2090baed3_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090bba3e_AutoSized(_2090bb665_ArrTypeDecl*);
struct _2090bb665_ArrTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Elem;
	jule::Ptr<_2090bd678_Expr> _field_Size;
	

	_2090bb665_ArrTypeDecl(void) = default;

	inline bool operator==(_2090bb665_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2090bb665_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2090bbdb3_MapTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Key;
	jule::Ptr<_2090b9157_TypeDecl> _field_Val;
	

	_2090bbdb3_MapTypeDecl(void) = default;

	inline bool operator==(_2090bbdb3_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2090bbdb3_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _2090bc26a_RetTypeDecl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Idents;
	

	_2090bc26a_RetTypeDecl(void) = default;


};
struct _2090bd678_Expr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_2090bd678_Expr(void) = default;

	inline bool operator==(_2090bd678_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2090bd678_Expr _other) { return !this->operator==(_other); }


};
struct _2090bd964_RangeExpr {
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090bd964_RangeExpr(void) = default;

	inline bool operator==(_2090bd964_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090bd964_RangeExpr _other) { return !this->operator==(_other); }


};
struct _2090be019_UseExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090be019_UseExpr(void) = default;

	inline bool operator==(_2090be019_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090be019_UseExpr _other) { return !this->operator==(_other); }


};
struct _2090be305_TupleExpr {
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Expr;
	

	_2090be305_TupleExpr(void) = default;


};
inline jule::Bool _2090bea0e_IsNil(_2090be6ac_LitExpr*);
struct _2090be6ac_LitExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Value;
	

	_2090be6ac_LitExpr(void) = default;

	inline bool operator==(_2090be6ac_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_2090be6ac_LitExpr _other) { return !this->operator==(_other); }


};
struct _2090bedb6_UnsafeExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090bedb6_UnsafeExpr(void) = default;

	inline bool operator==(_2090bedb6_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090bedb6_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090c068b_IsSelf(_2090c0339_IdentExpr*);
struct _2090c0339_IdentExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_2090c0339_IdentExpr(void) = default;

	inline bool operator==(_2090c0339_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_2090c0339_IdentExpr _other) { return !this->operator==(_other); }


};
struct _2090c0a43_UnaryExpr {
	jule::Ptr<_222e62217_Token> _field_Op;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090c0a43_UnaryExpr(void) = default;

	inline bool operator==(_2090c0a43_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090c0a43_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _2090c0dea_VariadicExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090c0dea_VariadicExpr(void) = default;

	inline bool operator==(_2090c0dea_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090c0dea_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _2090c12a2_CastExpr {
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090c12a2_CastExpr(void) = default;

	inline bool operator==(_2090c12a2_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090c12a2_CastExpr _other) { return !this->operator==(_other); }


};
struct _2090c1659_NsSelectionExpr {
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Ns;
	jule::Ptr<_222e62217_Token> _field_Ident;
	

	_2090c1659_NsSelectionExpr(void) = default;


};
struct _2090c1acc_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_222e62217_Token> _field_Ident;
	

	_2090c1acc_SubIdentExpr(void) = default;

	inline bool operator==(_2090c1acc_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2090c1acc_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _2090c2050_BinopExpr {
	jule::Ptr<_2090bd678_Expr> _field_Left;
	jule::Ptr<_2090bd678_Expr> _field_Right;
	jule::Ptr<_222e62217_Token> _field_Op;
	

	_2090c2050_BinopExpr(void) = default;

	inline bool operator==(_2090c2050_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2090c2050_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090c29bd_Unhandled(_2090c265a_FnCallExpr*);
inline jule::Bool _2090c2c32_Ignored(_2090c265a_FnCallExpr*);
struct _2090c265a_FnCallExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Args;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_2090c265a_FnCallExpr(void) = default;


};
inline jule::Bool _2090c343b_IsTargeted(_2090c30d9_FieldExprPair*);
struct _2090c30d9_FieldExprPair {
	jule::Ptr<_222e62217_Token> _field_Field;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090c30d9_FieldExprPair(void) = default;

	inline bool operator==(_2090c30d9_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090c30d9_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _2090c3837_StructLit {
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Exprs;
	

	_2090c3837_StructLit(void) = default;


};
inline jule::Bool _2090c410c_IsEmpty(_2090c3caa_BraceLit*);
struct _2090c3caa_BraceLit {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Exprs;
	

	_2090c3caa_BraceLit(void) = default;


};
struct _2090c4580_KeyValPair {
	jule::Ptr<_2090bd678_Expr> _field_Key;
	jule::Ptr<_2090bd678_Expr> _field_Val;
	jule::Ptr<_222e62217_Token> _field_Colon;
	

	_2090c4580_KeyValPair(void) = default;

	inline bool operator==(_2090c4580_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_2090c4580_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090c5097_IsEmpty(_2090c4c67_SliceExpr*);
struct _2090c4c67_SliceExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Exprs;
	

	_2090c4c67_SliceExpr(void) = default;


};
struct _2090c55d6_IndexingExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_2090bd678_Expr> _field_Index;
	

	_2090c55d6_IndexingExpr(void) = default;

	inline bool operator==(_2090c55d6_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_2090c55d6_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _2090c5be1_SlicingExpr {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_2090bd678_Expr> _field_Start;
	jule::Ptr<_2090bd678_Expr> _field_To;
	

	_2090c5be1_SlicingExpr(void) = default;

	inline bool operator==(_2090c5be1_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_2090c5be1_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _2090c5ecc_Constraint {
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _field_Mask;
	

	_2090c5ecc_Constraint(void) = default;


};
struct _2090c6450_GenericDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2090c5ecc_Constraint> _field_Constraint;
	

	_2090c6450_GenericDecl(void) = default;

	inline bool operator==(_2090c6450_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_2090c6450_GenericDecl _other) { return !this->operator==(_other); }


};
struct _2090c6807_LabelSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	

	_2090c6807_LabelSt(void) = default;

	inline bool operator==(_2090c6807_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2090c6807_LabelSt _other) { return !this->operator==(_other); }


};
struct _2090c6bae_GotoSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_Label;
	

	_2090c6bae_GotoSt(void) = default;

	inline bool operator==(_2090c6bae_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2090c6bae_GotoSt _other) { return !this->operator==(_other); }


};
struct _2090c6e9a_FallSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	

	_2090c6e9a_FallSt(void) = default;

	inline bool operator==(_2090c6e9a_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_2090c6e9a_FallSt _other) { return !this->operator==(_other); }


};
struct _2090c75a5_AssignLeft {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090c75a5_AssignLeft(void) = default;

	inline bool operator==(_2090c75a5_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090c75a5_AssignLeft _other) { return !this->operator==(_other); }


};
struct _2090c7ae4_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_222e62217_Token> _field_Setter;
	jule::Slice<jule::Ptr<_2090c75a5_AssignLeft>> _field_Left;
	jule::Ptr<_2090bd678_Expr> _field_Right;
	

	_2090c7ae4_AssignSt(void) = default;


};
struct _2090c89d5_Stmt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_2090c89d5_Stmt(void) = default;

	inline bool operator==(_2090c89d5_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_2090c89d5_Stmt _other) { return !this->operator==(_other); }


};
struct _2090c90e0_ScopeTree {
	jule::Ptr<_2090c90e0_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_2090c89d5_Stmt> _field_Stmts;
	jule::Ptr<_222e62217_Token> _field_End;
	

	_2090c90e0_ScopeTree(void) = default;


};
inline jule::Bool _2090c9b29_IsSelf(_2090c97b6_ParamDecl*);
inline jule::Bool _2090c9d8d_IsRef(_2090c97b6_ParamDecl*);
struct _2090c97b6_ParamDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_2090c97b6_ParamDecl(void) = default;

	inline bool operator==(_2090c97b6_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2090c97b6_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090cae38_IsAnon(_2090caad6_FnDecl*);
struct _2090caad6_FnDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_Generics;
	jule::Ptr<_2090bc26a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>> _field_Params;
	

	_2090caad6_FnDecl(void) = default;


};
struct _2090cbab5_VarDecl {
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090cbab5_VarDecl(void) = default;


};
struct _2090cbe6c_RetSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090cbe6c_RetSt(void) = default;

	inline bool operator==(_2090cbe6c_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090cbe6c_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090cc92e_IsInf(_2090cc5cc_Iter*);
struct _2090cc5cc_Iter {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	

	_2090cc5cc_Iter(void) = default;

	inline bool operator==(_2090cc5cc_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2090cc5cc_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090cd204_IsWhileNext(_2090ccda2_WhileKind*);
struct _2090ccda2_WhileKind {
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_222e62217_Token> _field_NextToken;
	

	_2090ccda2_WhileKind(void) = default;

	inline bool operator==(_2090ccda2_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_2090ccda2_WhileKind _other) { return !this->operator==(_other); }


};
struct _2090cd743_RangeKind {
	jule::Ptr<_222e62217_Token> _field_InToken;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_2090cbab5_VarDecl> _field_KeyA;
	jule::Ptr<_2090cbab5_VarDecl> _field_KeyB;
	

	_2090cd743_RangeKind(void) = default;

	inline bool operator==(_2090cd743_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_2090cd743_RangeKind _other) { return !this->operator==(_other); }


};
struct _2090cdaea_BreakSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_Label;
	

	_2090cdaea_BreakSt(void) = default;

	inline bool operator==(_2090cdaea_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2090cdaea_BreakSt _other) { return !this->operator==(_other); }


};
struct _2090cdea2_ContSt {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_Label;
	

	_2090cdea2_ContSt(void) = default;

	inline bool operator==(_2090cdea2_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2090cdea2_ContSt _other) { return !this->operator==(_other); }


};
struct _2090ce425_If {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	

	_2090ce425_If(void) = default;

	inline bool operator==(_2090ce425_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2090ce425_If _other) { return !this->operator==(_other); }


};
struct _2090ce7cc_Else {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	

	_2090ce7cc_Else(void) = default;

	inline bool operator==(_2090ce7cc_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2090ce7cc_Else _other) { return !this->operator==(_other); }


};
struct _2090cec50_Conditional {
	jule::Ptr<_2090ce425_If> _field_Head;
	jule::Slice<jule::Ptr<_2090ce425_If>> _field_Tail;
	jule::Ptr<_2090ce7cc_Else> _field_Default;
	

	_2090cec50_Conditional(void) = default;


};
struct _2090d0426_TypeAliasDecl {
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	

	_2090d0426_TypeAliasDecl(void) = default;

	inline bool operator==(_2090d0426_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2090d0426_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _2090d0899_Case {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_Exprs;
	

	_2090d0899_Case(void) = default;


};
struct _2090d1070_MatchCase {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_2090d0899_Case>> _field_Cases;
	jule::Ptr<_2090ce7cc_Else> _field_Default;
	

	_2090d1070_MatchCase(void) = default;


};
struct _2090d1812_UseDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_2090d1812_UseDecl(void) = default;


};
inline jule::Bool _2090d20d7_AutoExpr(_2090d1c85_EnumItemDecl*);
struct _2090d1c85_EnumItemDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	

	_2090d1c85_EnumItemDecl(void) = default;

	inline bool operator==(_2090d1c85_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2090d1c85_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _2090d2d41_DefaultTyped(_2090d27ad_EnumDecl*);
struct _2090d27ad_EnumDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>> _field_Items;
	jule::Ptr<_222e62217_Token> _field_End;
	

	_2090d27ad_EnumDecl(void) = default;


};
struct _2090d32b4_TypeEnumItemDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	

	_2090d32b4_TypeEnumItemDecl(void) = default;

	inline bool operator==(_2090d32b4_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2090d32b4_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _2090d38be_TypeEnumDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_222e62217_Token> _field_End;
	

	_2090d38be_TypeEnumDecl(void) = default;


};
struct _2090d3abc_FieldDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_2090b9157_TypeDecl> _field_Kind;
	jule::Ptr<_2090bd678_Expr> _field_Default;
	

	_2090d3abc_FieldDecl(void) = default;

	inline bool operator==(_2090d3abc_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2090d3abc_FieldDecl _other) { return !this->operator==(_other); }


};
struct _2090d4370_StructDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_Generics;
	

	_2090d4370_StructDecl(void) = default;


};
struct _2090d497a_TraitDecl {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_2090caad6_FnDecl>> _field_Methods;
	

	_2090d497a_TraitDecl(void) = default;


};
inline jule::Bool _2090d53e8_IsTraitImpl(_2090d5085_Impl*);
inline jule::Bool _2090d565c_IsStructImpl(_2090d5085_Impl*);
struct _2090d5085_Impl {
	jule::Ptr<_222e62217_Token> _field_End;
	jule::Ptr<_2090b9157_TypeDecl> _field_Base;
	jule::Ptr<_2090b9157_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_2090caad6_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _field_Statics;
	

	_2090d5085_Impl(void) = default;


};
struct _217444606_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_217444606_floatInfo(void) = default;

	inline bool operator==(_217444606_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_217444606_floatInfo _other) { return !this->operator==(_other); }


};
struct _1dd9903b7_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1dd9903b7_decimalSlice(void) = default;


};
struct _1dd99902a_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1dd99902a_leftCheat(void) = default;

	inline bool operator==(_1dd99902a_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1dd99902a_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd9934db_set(_1dd9999ed_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1dd99361d_floatBits(_1dd9999ed_decimal*, _217444606_floatInfo&);
inline void _1dd999dc7_assign(_1dd9999ed_decimal*, jule::U64);
inline void _1dd99a14c_shift(_1dd9999ed_decimal*, jule::I64);
inline void _1dd99a3c2_roundDown(_1dd9999ed_decimal*, jule::I64);
inline void _1dd99a647_roundUp(_1dd9999ed_decimal*, jule::I64);
inline void _1dd99a8bc_round(_1dd9999ed_decimal*, jule::I64);
inline jule::U64 _1dd99ab31_roundedInteger(_1dd9999ed_decimal*);
struct _1dd9999ed_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1dd9999ed_decimal(void) = default;

	inline bool operator==(_1dd9999ed_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1dd9999ed_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dd9ad050_Const> static__1dd9ad4c3_NewI64(jule::I64);
inline jule::Ptr<_1dd9ad050_Const> static__1dd9ad76a_NewU64(jule::U64);
inline jule::Ptr<_1dd9ad050_Const> static__1dd9ada12_NewBool(jule::Bool);
inline jule::Ptr<_1dd9ad050_Const> static__1dd9adca9_NewStr(jule::Str);
inline jule::Ptr<_1dd9ad050_Const> static__1dd9ae051_NewF64(jule::F64);
inline jule::Ptr<_1dd9ad050_Const> static__1dd9ae24e_NewNil(void);
inline jule::I64 _1dd9ae848_ReadI64(_1dd9ad050_Const*);
inline jule::U64 _1dd9aeaac_ReadU64(_1dd9ad050_Const*);
inline jule::Bool _1dd9aed21_ReadBool(_1dd9ad050_Const*);
inline jule::Str _1dd9b0085_ReadStr(_1dd9ad050_Const*);
inline jule::F64 _1dd9b02e9_ReadF64(_1dd9ad050_Const*);
inline jule::I64 _1dd9b055d_AsI64(_1dd9ad050_Const*);
inline jule::U64 _1dd9b07c2_AsU64(_1dd9ad050_Const*);
inline jule::F64 _1dd9b0a36_AsF64(_1dd9ad050_Const*);
inline void _1dd9b0cab_SetI64(_1dd9ad050_Const*, jule::I64);
inline void _1dd9b1031_SetU64(_1dd9ad050_Const*, jule::U64);
inline void _1dd9b12a6_SetBool(_1dd9ad050_Const*, jule::Bool);
inline void _1dd9b152b_SetStr(_1dd9ad050_Const*, jule::Str);
inline void _1dd9b17a1_SetF64(_1dd9ad050_Const*, jule::F64);
inline void _1dd9b197c_SetNil(_1dd9ad050_Const*);
inline jule::Bool _1dd9b1be1_IsI64(_1dd9ad050_Const*);
inline jule::Bool _1dd9b1e55_IsU64(_1dd9ad050_Const*);
inline jule::Bool _1dd9b21b9_IsBool(_1dd9ad050_Const*);
inline jule::Bool _1dd9b242d_IsStr(_1dd9ad050_Const*);
inline jule::Bool _1dd9b2692_IsF64(_1dd9ad050_Const*);
inline jule::Bool _1dd9b2906_IsNil(_1dd9ad050_Const*);
inline jule::Bool _1dd9b2c14_AreSameTypes(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b3022_And(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b3330_Or(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b363d_Eq(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b394b_Lt(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b3c59_LtEq(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b4067_Gt(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b4375_GtEq(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b4683_Add(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b4991_Sub(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b4c9e_Mul(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b50ac_Div(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b53ba_Mod(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b56c8_BitwiseAnd(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b59d6_BitwiseOr(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b5ce4_Xor(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b6102_Lshift(_1dd9ad050_Const*, _1dd9ad050_Const);
inline jule::Bool _1dd9b6410_Rshift(_1dd9ad050_Const*, _1dd9ad050_Const);
struct _1dd9ad050_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1dd9ad050_Const(void) = default;

	inline jule::Bool operator==(_1dd9ad050_Const _other) { return _1dd9b363d_Eq(this, _other); }

	inline bool operator!=(_1dd9ad050_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1dd9ad050_Const _other) { return _1dd9b4067_Gt(this, _other); }

	inline jule::Bool operator>=(_1dd9ad050_Const _other) { return _1dd9b4375_GtEq(this, _other); }

	inline jule::Bool operator<(_1dd9ad050_Const _other) { return _1dd9b394b_Lt(this, _other); }

	inline jule::Bool operator<=(_1dd9ad050_Const _other) { return _1dd9b3c59_LtEq(this, _other); }


};
inline jule::Ptr<_2090d5a36_FieldIns> _2090920ec_instance(jule::Ptr<_2090a98a6_Field>);
struct _2090a98a6_Field {
	jule::Ptr<_2090d5849_Struct> _field_Owner;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Ptr<_2090bd678_Expr> _field_Default;
	

	_2090a98a6_Field(void) = default;

	inline bool operator==(_2090a98a6_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2090a98a6_Field _other) { return !this->operator==(_other); }


};
struct _2090b1eeb_Operators {
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Eq;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Gt;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_GtEq;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Lt;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_LtEq;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Shl;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Shr;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Add;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Sub;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Div;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Mul;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Mod;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitAnd;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitOr;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitXor;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Neg;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Pos;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitNot;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_AddAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_SubAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_DivAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_MulAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_ModAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_ShlAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_ShrAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitOrAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitAndAssign;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_BitXorAssign;
	

	_2090b1eeb_Operators(void) = default;

	inline bool operator==(_2090b1eeb_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_2090b1eeb_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_2090d5c23_StructIns> _209095dc0_instance(jule::Ptr<_2090d5849_Struct>);
inline jule::Ptr<_2090d5c23_StructIns> _209096b29_appendInstance(_2090d5849_Struct*, jule::Ptr<_2090d5c23_StructIns>&);
inline jule::Ptr<_1dd9c761e_Fn> _209099c81_FindMethod(_2090d5849_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1dda418db_Var> _2090991d1_FindStatic(_2090d5849_Struct*, jule::Str);
inline jule::Ptr<_2090a98a6_Field> _20909b5ac_FindField(_2090d5849_Struct*, jule::Str);
inline jule::Bool _20909a8a8_IsImplements(_2090d5849_Struct*, jule::Ptr<_1dd9d9521_Trait>);
inline jule::Bool _20909e879_IsDerives(_2090d5849_Struct*, jule::Str);
inline jule::Bool _2090a003e_IsUses(_2090d5849_Struct*, jule::Ptr<_2090d5849_Struct>);
inline jule::Bool _2090a550b_HasRefAccessible(_2090d5849_Struct*);
struct _2090d5849_Struct {
	jule::Ptr<_1dda1da83_Sema> _field_sema;
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _field_Uses;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_2090a98a6_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1dd9d9521_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_2090d5c23_StructIns>> _field_Instances;
	

	_2090d5849_Struct(void) = default;


};
struct _2090d5a36_FieldIns {
	jule::Ptr<_2090a98a6_Field> _field_Decl;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Ptr<_1dda8944a_Data> _field_Default;
	

	_2090d5a36_FieldIns(void) = default;

	inline bool operator==(_2090d5a36_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_2090d5a36_FieldIns _other) { return !this->operator==(_other); }


};
struct _1dd9b8d6e_OperandExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1dd9b8d6e_OperandExprModel(void) = default;

	inline bool operator==(_1dd9b8d6e_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1dd9b8d6e_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9b9336_BinopExprModel {
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _field_Left;
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _field_Right;
	jule::Ptr<_222e62217_Token> _field_Op;
	

	_1dd9b9336_BinopExprModel(void) = default;

	inline bool operator==(_1dd9b9336_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dd9b9336_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9b96dd_UnaryExprModel {
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	jule::Ptr<_222e62217_Token> _field_Op;
	

	_1dd9b96dd_UnaryExprModel(void) = default;

	inline bool operator==(_1dd9b96dd_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dd9b96dd_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9b9ad9_StructArgExprModel {
	jule::Ptr<_2090d5a36_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9b9ad9_StructArgExprModel(void) = default;

	inline bool operator==(_1dd9b9ad9_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9b9ad9_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9b9e91_StructLitExprModel {
	jule::Ptr<_2090d5c23_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1dd9b9ad9_StructArgExprModel>> _field_Args;
	

	_1dd9b9e91_StructLitExprModel(void) = default;


};
struct _1dd9ba29e_AllocStructLitExprModel {
	jule::Ptr<_1dd9b9e91_StructLitExprModel> _field_Lit;
	

	_1dd9ba29e_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1dd9ba29e_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1dd9ba29e_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9ba7ee_CastingExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Ptr<_1ddab53cc_TypeKind> _field_ExprKind;
	

	_1dd9ba7ee_CastingExprModel(void) = default;

	inline bool operator==(_1dd9ba7ee_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1dd9ba7ee_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bb1a1_FnCallExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1dd9e7232_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1dd9bb1a1_FnCallExprModel(void) = default;


};
struct _1dd9bb558_SliceExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1dd9bb558_SliceExprModel(void) = default;


};
struct _1dd9bb9cb_IndexingExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	jule::Ptr<_1dda8944a_Data> _field_Index;
	

	_1dd9bb9cb_IndexingExprModel(void) = default;

	inline bool operator==(_1dd9bb9cb_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1dd9bb9cb_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bbd83_AnonFnExprModel {
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1dd9bbd83_AnonFnExprModel(void) = default;

	inline bool operator==(_1dd9bbd83_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1dd9bbd83_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bc23a_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1dd9bc23a_KeyValPairExprModel(void) = default;

	inline bool operator==(_1dd9bc23a_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1dd9bc23a_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bc6ad_MapExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_KeyKind;
	jule::Ptr<_1ddab53cc_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1dd9bc23a_KeyValPairExprModel>> _field_Entries;
	

	_1dd9bc6ad_MapExprModel(void) = default;


};
struct _1dd9bcbec_SlicingExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1dd9bcbec_SlicingExprModel(void) = default;

	inline bool operator==(_1dd9bcbec_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1dd9bcbec_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bd23b_TraitSubIdentExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dd9c761e_Fn> _field_Method;
	jule::Ptr<_1dd9d9521_Trait> _field_Trt;
	

	_1dd9bd23b_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1dd9bd23b_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1dd9bd23b_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bdadd_StructSubIdentExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	jule::Ptr<_1ddab53cc_TypeKind> _field_ExprKind;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Method;
	jule::Ptr<_2090d5a36_FieldIns> _field_Field;
	jule::Ptr<_2090d5c23_StructIns> _field_Owner;
	

	_1dd9bdadd_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1dd9bdadd_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1dd9bdadd_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bde84_StructStaticIdentExprModel {
	jule::Ptr<_2090d5c23_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Method;
	

	_1dd9bde84_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1dd9bde84_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1dd9bde84_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9be34c_ArrayExprModel {
	jule::Ptr<_1ddac14b5_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1dd9be34c_ArrayExprModel(void) = default;


};
struct _1dd9be638_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1dd9be638_CommonIdentExprModel(void) = default;

	inline bool operator==(_1dd9be638_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dd9be638_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9beb99_CommonSubIdentExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1dd9beb99_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1dd9beb99_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dd9beb99_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9bee96_TupleExprModel {
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _field_Datas;
	

	_1dd9bee96_TupleExprModel(void) = default;


};
struct _1dd9c0370_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1dd9c0370_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1dd9c0370_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1dd9c0370_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c075a_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1dd9c075a_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1dd9c075a_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1dd9c075a_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c0a79_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c0a79_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1dd9c0a79_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c0a79_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c0e64_BuiltinNewCallExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1dd9c0e64_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1dd9c0e64_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1dd9c0e64_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c134e_BuiltinPanicCallExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c134e_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1dd9c134e_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c134e_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c1805_BuiltinAssertCallExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1dd9c1805_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1dd9c1805_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1dd9c1805_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c1cab_BuiltinMakeCallExprModel {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1dd9c1cab_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1dd9c1cab_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1dd9c1cab_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c2196_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1dd9c2196_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1dd9c2196_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1dd9c2196_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c24b5_BuiltinLenCallExprModel {
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	

	_1dd9c24b5_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1dd9c24b5_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c24b5_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c27d4_BuiltinCapCallExprModel {
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	

	_1dd9c27d4_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1dd9c27d4_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c27d4_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c2e88_BuiltinDeleteCallExprModel {
	jule::Ptr<_1dda8944a_Data> _field_Dest;
	jule::Ptr<_1dda8944a_Data> _field_Key;
	

	_1dd9c2e88_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1dd9c2e88_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1dd9c2e88_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c32eb_BuiltinCopyCallExprModel {
	jule::Ptr<_1dda8944a_Data> _field_Dest;
	jule::Ptr<_1dda8944a_Data> _field_Src;
	

	_1dd9c32eb_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1dd9c32eb_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1dd9c32eb_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c36d6_BuiltinErrorCallExprModel {
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Func;
	jule::Ptr<_1dda8944a_Data> _field_Err;
	

	_1dd9c36d6_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1dd9c36d6_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1dd9c36d6_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c39d3_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c39d3_SizeofExprModel(void) = default;

	inline bool operator==(_1dd9c39d3_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c39d3_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c3cbe_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c3cbe_AlignofExprModel(void) = default;

	inline bool operator==(_1dd9c3cbe_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c3cbe_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c40aa_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1dd9c40aa_RuneExprModel(void) = default;

	inline bool operator==(_1dd9c40aa_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1dd9c40aa_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c43b8_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c43b8_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1dd9c43b8_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c43b8_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c4781_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1dd9c4781_BackendEmitExprModel(void) = default;


};
struct _1dd9c4a6c_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9c4a6c_FreeExprModel(void) = default;

	inline bool operator==(_1dd9c4a6c_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9c4a6c_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1dd9c560b_RetType {
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Idents;
	

	_1dd9c560b_RetType(void) = default;


};
inline jule::Ptr<_1dd9c9401_ParamIns> _1dd9c619a_instance(jule::Ptr<_1dd9c5cd2_Param>);
inline jule::Bool _1dd9c640e_IsSelf(_1dd9c5cd2_Param*);
inline jule::Bool _1dd9c6673_IsRef(_1dd9c5cd2_Param*);
struct _1dd9c5cd2_Param {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1dd9c5cd2_Param(void) = default;

	inline bool operator==(_1dd9c5cd2_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dd9c5cd2_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd9c7a81_IsVoid(_1dd9c761e_Fn*);
inline jule::Bool _1dd9c7ce5_IsMethod(_1dd9c761e_Fn*);
inline jule::Bool _1dd9c8059_IsEntryPoint(_1dd9c761e_Fn*);
inline jule::Bool _1dd9c82bd_IsInit(_1dd9c761e_Fn*);
inline jule::Bool _1dd9c8532_IsAnon(_1dd9c761e_Fn*);
inline jule::Bool _1dd9c8796_AnyVar(_1dd9c761e_Fn*);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c8a0a_instanceForce(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c8c6e_instance(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c9049_appendInstance(_1dd9c761e_Fn*, jule::Ptr<_1dd9ca2c0_FnIns>&);
struct _1dd9c761e_Fn {
	jule::Ptr<_1dda1da83_Sema> _field_sema;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_Generics;
	jule::Ptr<_1dd9c560b_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1dd9c5cd2_Param>> _field_Params;
	jule::Ptr<_2090d5849_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1dd9ca2c0_FnIns>> _field_Instances;
	

	_1dd9c761e_Fn(void) = default;


};
inline jule::Str _1dd9c97ca_Str(_1dd9c9401_ParamIns*);
struct _1dd9c9401_ParamIns {
	jule::Ptr<_1dd9c5cd2_Param> _field_Decl;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	

	_1dd9c9401_ParamIns(void) = default;

	inline bool operator==(_1dd9c9401_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dd9c9401_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1dd9ca600_Str(_1dd9ca2c0_FnIns*);
inline jule::Bool _1dd9ca90d_Equal(jule::Ptr<_1dd9ca2c0_FnIns>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1dd9cad70_EqualFn(jule::Ptr<_1dd9ca2c0_FnIns>, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Bool _1dd9cb17d_equalTrait(jule::Ptr<_1dd9ca2c0_FnIns>, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _1dd9cb3e2_Types(_1dd9ca2c0_FnIns*);
inline jule::Bool _1dd9cb656_IsBuiltin(_1dd9ca2c0_FnIns*);
inline jule::Bool _1dd9cb8ba_IsAnon(_1dd9ca2c0_FnIns*);
inline jule::Bool _1dd9cbbc8_Same(_1dd9ca2c0_FnIns*, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Str _1dd9cbed6_GetKindStr(_1dd9ca2c0_FnIns*, jule::Bool);
struct _1dd9ca2c0_FnIns {
	jule::Ptr<_2090d5c23_StructIns> _field_Owner;
	jule::Ptr<_1dd9c761e_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>> _field_Params;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Result;
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	jule::Ptr<_1dd9cd23a_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1dd9ca2c0_FnIns(void) = default;


};
inline jule::Ptr<_1dd9cd23a_ReferenceStack> static__1dd9cd4c1_new(void);
inline jule::I64 _1dd9cd856_Len(_1dd9cd23a_ReferenceStack*);
inline jule::Any _1dd9cdb64_At(_1dd9cd23a_ReferenceStack*, jule::I64);
inline void _1dd9cddd9_Push(_1dd9cd23a_ReferenceStack*, jule::Any);
inline jule::Bool _1c71952ed_Exist(_1dd9cd23a_ReferenceStack*, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Bool _1c71a92ac_Exist(_1dd9cd23a_ReferenceStack*, jule::Ptr<_1dda418db_Var>);
inline jule::Bool _1c72512ee_Exist(_1dd9cd23a_ReferenceStack*, jule::Ptr<_2090d5c23_StructIns>);
inline jule::Bool _2096a3ce6_Exist(_1dd9cd23a_ReferenceStack*, jule::Ptr<_1dd9d9521_Trait>);
struct _1dd9cd23a_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1dd9cd23a_ReferenceStack(void) = default;


};
struct _1dd9ce59e_Pass {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Text;
	

	_1dd9ce59e_Pass(void) = default;

	inline bool operator==(_1dd9ce59e_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1dd9ce59e_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dd9d3a48_symbolBuilder> _1dd9d3eee_getRoot(jule::Ptr<_1dd9d3a48_symbolBuilder>);
inline void _1dd9d43b7_pushErr(_1dd9d3a48_symbolBuilder*, jule::Ptr<_222e62217_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1dd9d4780_pushErrText(_1dd9d3a48_symbolBuilder*, jule::Ptr<_222e62217_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1dd9d4a9e_pushSuggestion(_1dd9d3a48_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dd9d4e56_checkCppUseDeclPath(_1dd9d3a48_symbolBuilder*, jule::Ptr<_2090d1812_UseDecl>&, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d5231_buildCppHeaderImport(_1dd9d3a48_symbolBuilder*, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d553e_buildStdImport(_1dd9d3a48_symbolBuilder*, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d584c_buildIdentImport(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d5b5a_buildImport(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Bool _1dd9d5e68_checkDuplicateUseDecl(_1dd9d3a48_symbolBuilder*, jule::Ptr<_1dda15937_ImportInfo>&);
inline void _1dd9d6287_implImportSelections(_1dd9d3a48_symbolBuilder*, jule::Ptr<_1dda15937_ImportInfo>&, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Str _1dd9d6595_getAsLinkPath(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Str);
inline void _1dd9d695d_pushCycleError(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_1dd9d3a48_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1dd9d6d26_pushCrossCycleError(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_1dd9d3a48_symbolBuilder>&, jule::Ptr<_1dda15937_ImportInfo>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1dd9d71cd_checkImportCycles(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_1dda15937_ImportInfo>, jule::Ptr<_2090d1812_UseDecl>&);
inline void _1dd9d75b8_checkPackageAccessibility(_1dd9d3a48_symbolBuilder*, jule::Ptr<_2090d1812_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1dd9d7981_importPackage(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_1dda15937_ImportInfo>&, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d7c8e_importUseDecl(jule::Ptr<_1dd9d3a48_symbolBuilder>, jule::Ptr<_2090d1812_UseDecl>&);
inline void _1dd9d7e6a_importUseDecls(jule::Ptr<_1dd9d3a48_symbolBuilder>);
inline void _1dd9d81e0_appendNode(_1dd9d3a48_symbolBuilder*, _2090859b4_Node&);
inline void _1dd9d83bb_appendNodes(_1dd9d3a48_symbolBuilder*);
inline void _1dd9d8641_pushDirectivePass(_1dd9d3a48_symbolBuilder*, jule::Ptr<_209085db0_Directive>&);
inline void _1dd9d881c_appendTopDirectives(_1dd9d3a48_symbolBuilder*);
inline void _1dd9d89e8_build(jule::Ptr<_1dd9d3a48_symbolBuilder>);
struct _1dd9d3a48_symbolBuilder {
	jule::Ptr<_1dd9d3a48_symbolBuilder> _field_owner;
	jule::Trait<_1dda12cb9_Importer> _field_importer;
	jule::Slice<_222b38ae2_Log> _field_errors;
	jule::Ptr<_209084bc2_Ast> _field_ast;
	jule::Ptr<_1dda84621_SymbolTable> _field_table;
	

	_1dd9d3a48_symbolBuilder(void) = default;


};
inline jule::Str _1dd9d991c_Str(_1dd9d9521_Trait*);
inline jule::Bool _1dd9d9c2a_Equal(jule::Ptr<_1dd9d9521_Trait>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1dd9da08d_IsBuiltin(_1dd9d9521_Trait*);
inline jule::Ptr<_1dd9c761e_Fn> _1dd9da39b_FindMethod(_1dd9d9521_Trait*, jule::Str);
struct _1dd9d9521_Trait {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _field_Implemented;
	

	_1dd9d9521_Trait(void) = default;


};
inline jule::Bool _1dd9db05b_AutoExpr(_1dd9dab71_EnumItem*);
struct _1dd9dab71_EnumItem {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1dda8a4c3_Value> _field_Value;
	

	_1dd9dab71_EnumItem(void) = default;

	inline bool operator==(_1dd9dab71_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1dd9dab71_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1dd9db9c9_Str(_1dd9db666_Enum*);
inline jule::Bool _1dd9dbcd7_Equal(jule::Ptr<_1dd9db666_Enum>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Ptr<_1dd9dab71_EnumItem> _1dd9dc227_FindItem(_1dd9db666_Enum*, jule::Str);
struct _1dd9db666_Enum {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>> _field_Items;
	

	_1dd9db666_Enum(void) = default;


};
struct _1dd9dc69a_TypeEnumItem {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	

	_1dd9dc69a_TypeEnumItem(void) = default;

	inline bool operator==(_1dd9dc69a_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1dd9dc69a_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1dd9dd091_Str(_1dd9dcc61_TypeEnum*);
inline jule::Bool _1dd9dd39e_Equal(jule::Ptr<_1dd9dcc61_TypeEnum>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Ptr<_1dd9dc69a_TypeEnumItem> _1dd9dd79a_FindItem(_1dd9dcc61_TypeEnum*, jule::Str);
struct _1dd9dcc61_TypeEnum {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>> _field_Items;
	

	_1dd9dcc61_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)> _1dd9e06c0_readyFn(jule::Ptr<_1dd9e0291_constraintChecker>);
inline jule::Bool _1dd9e0934_readyFi(jule::Ptr<_1dd9e0291_constraintChecker>);
inline jule::Bool _1dd9e0b98_readySi(jule::Ptr<_1dd9e0291_constraintChecker>);
inline jule::Bool _1dd9e0e0c_ready(jule::Ptr<_1dd9e0291_constraintChecker>);
inline jule::Bool _1dd9e1171_check(jule::Ptr<_1dd9e0291_constraintChecker>);
struct _1dd9e0291_constraintChecker {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _field_genericsA;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_fi;
	jule::Ptr<_2090d5c23_StructIns> _field_si;
	jule::Ptr<_222e62217_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1dd9e0291_constraintChecker(void) = default;


};
inline jule::Bool _1dd9e25c3_IsTraitImpl(_1dd9e21c7_Impl*);
inline jule::Bool _1dd9e2837_IsStructImpl(_1dd9e21c7_Impl*);
struct _1dd9e21c7_Impl {
	jule::Ptr<_2090b9157_TypeDecl> _field_Base;
	jule::Ptr<_2090b9157_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Statics;
	

	_1dd9e21c7_Impl(void) = default;


};
struct _1dd9e7232_Scope {
	jule::Ptr<_1dd9e7232_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1dd9e7232_Scope(void) = default;


};
struct _1dd9e762d_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	

	_1dd9e762d_If(void) = default;

	inline bool operator==(_1dd9e762d_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dd9e762d_If _other) { return !this->operator==(_other); }


};
struct _1dd9e7919_Else {
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	

	_1dd9e7919_Else(void) = default;

	inline bool operator==(_1dd9e7919_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dd9e7919_Else _other) { return !this->operator==(_other); }


};
struct _1dd9e7c8d_Conditional {
	jule::Slice<jule::Ptr<_1dd9e762d_If>> _field_Elifs;
	jule::Ptr<_1dd9e7919_Else> _field_Default;
	

	_1dd9e7c8d_Conditional(void) = default;


};
struct _1dd9e8079_InfIter {
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	

	_1dd9e8079_InfIter(void) = default;

	inline bool operator==(_1dd9e8079_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dd9e8079_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd9e8893_IsWhileNext(_1dd9e84ec_WhileIter*);
struct _1dd9e84ec_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	

	_1dd9e84ec_WhileIter(void) = default;

	inline bool operator==(_1dd9e84ec_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1dd9e84ec_WhileIter _other) { return !this->operator==(_other); }


};
struct _1dd9e8dd2_RangeIter {
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	jule::Ptr<_1dda418db_Var> _field_KeyA;
	jule::Ptr<_1dda418db_Var> _field_KeyB;
	

	_1dd9e8dd2_RangeIter(void) = default;

	inline bool operator==(_1dd9e8dd2_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1dd9e8dd2_RangeIter _other) { return !this->operator==(_other); }


};
struct _1dd9e92cd_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1dd9e92cd_ContSt(void) = default;

	inline bool operator==(_1dd9e92cd_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1dd9e92cd_ContSt _other) { return !this->operator==(_other); }


};
struct _1dd9e9685_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1dd9e9685_BreakSt(void) = default;

	inline bool operator==(_1dd9e9685_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1dd9e9685_BreakSt _other) { return !this->operator==(_other); }


};
struct _1dd9e9971_Label {
	jule::Str _field_Ident;
	

	_1dd9e9971_Label(void) = default;

	inline bool operator==(_1dd9e9971_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dd9e9971_Label _other) { return !this->operator==(_other); }


};
struct _1dd9e9c5c_GotoSt {
	jule::Str _field_Ident;
	

	_1dd9e9c5c_GotoSt(void) = default;

	inline bool operator==(_1dd9e9c5c_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1dd9e9c5c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1dd9ea114_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1dd9ea114_Postfix(void) = default;

	inline bool operator==(_1dd9ea114_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dd9ea114_Postfix _other) { return !this->operator==(_other); }


};
struct _1dd9ea587_Assign {
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _field_L;
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _field_R;
	jule::Ptr<_222e62217_Token> _field_Op;
	

	_1dd9ea587_Assign(void) = default;

	inline bool operator==(_1dd9ea587_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1dd9ea587_Assign _other) { return !this->operator==(_other); }


};
struct _1dd9ea93e_MultiAssign {
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1dd9ea93e_MultiAssign(void) = default;


};
inline jule::Bool _1dd9eb489_IsGenericTypeMatch(_1dd9eae7d_Match*);
struct _1dd9eae7d_Match {
	jule::Ptr<_1dda8944a_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1dd9eb9c8_Case>> _field_Cases;
	jule::Ptr<_1dd9eb9c8_Case> _field_Default;
	

	_1dd9eae7d_Match(void) = default;


};
inline jule::Bool _1dd9ebc92_isDefault(_1dd9eb9c8_Case*);
struct _1dd9eb9c8_Case {
	jule::Ptr<_1dd9eae7d_Match> _field_Owner;
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _field_Exprs;
	jule::Ptr<_1dd9eb9c8_Case> _field_Next;
	

	_1dd9eb9c8_Case(void) = default;


};
struct _1dd9ec07d_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1dd9ec07d_FallSt(void) = default;

	inline bool operator==(_1dd9ec07d_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1dd9ec07d_FallSt _other) { return !this->operator==(_other); }


};
struct _1dd9ec402_RetSt {
	jule::Ptr<_1dd9ca2c0_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1dd9ec402_RetSt(void) = default;

	inline bool operator==(_1dd9ec402_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1dd9ec402_RetSt _other) { return !this->operator==(_other); }


};
struct _1dd9eca0c_scopeLabel {
	jule::Ptr<_222e62217_Token> _field_token;
	jule::Ptr<_1dd9e9971_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1dd9edc94_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1dd9eca0c_scopeLabel(void) = default;

	inline bool operator==(_1dd9eca0c_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1dd9eca0c_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1dd9ece80_scopeGoto {
	jule::Ptr<_2090c6bae_GotoSt> _field_gt;
	jule::Ptr<_1dd9edc94_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1dd9ece80_scopeGoto(void) = default;

	inline bool operator==(_1dd9ece80_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1dd9ece80_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9ee228_FindPackage(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dd9ee536_SelectPackage(_1dd9edc94_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
inline jule::Ptr<_1dda418db_Var> _1dd9ee8dd_FindVar(_1dd9edc94_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dd9eec95_FindTypeAlias(_1dd9edc94_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda0014c_FindStruct(_1dd9edc94_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda00504_FindFn(_1dd9edc94_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda00812_FindTrait(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda00b20_FindEnum(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda00e2d_FindTypeEnum(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Bool _1dda0125d_isUnsafe(jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Bool _1dda014c2_isRoot(_1dd9edc94_scopeChecker*);
inline void _1dda0169d_stop(_1dd9edc94_scopeChecker*);
inline jule::Bool _1dda01912_stopped(_1dd9edc94_scopeChecker*);
inline jule::Bool _1dda01b76_isDeferred(jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda01dda_getRoot(jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda0214e_getHardRoot(jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Ptr<_1dd9e9971_Label> _1dda0245c_findLabel(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dda0276a_findLabelScope(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Str);
inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dda02a78_findLabelAll(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Bool _1dda02e30_isDuplicatedIdent(_1dd9edc94_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1dda031a5_checkVarDecl(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cbab5_VarDecl>);
inline void _1dda0342a_checkTypeAliasDecl(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d0426_TypeAliasDecl>);
inline jule::Ptr<_1dd9e7232_Scope> _1dda0368e_getChild(_1dd9edc94_scopeChecker*);
inline void _1dda03a57_checkChildSsc(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c90e0_ScopeTree>&, jule::Ptr<_1dd9e7232_Scope>&, jule::Ptr<_1dd9edc94_scopeChecker>&);
inline jule::Ptr<_1dd9e7232_Scope> _1dda03e0e_checkChildSc(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c90e0_ScopeTree>&, jule::Ptr<_1dd9edc94_scopeChecker>&);
inline jule::Ptr<_1dd9e7232_Scope> _1dda0421c_checkChild(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c90e0_ScopeTree>&);
inline void _1dda04492_checkAnonScope(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c90e0_ScopeTree>);
inline void _1dda047b1_processErrorCall(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel>&, jule::Ptr<_222e62217_Token>);
inline void _1dda04a36_checkExpr(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090bd678_Expr>);
inline jule::Ptr<_1dd9e762d_If> _1dda04d44_checkIf(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090ce425_If>);
inline jule::Ptr<_1dd9e7919_Else> _1dda05152_checkElse(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090ce7cc_Else>);
inline void _1dda053c7_checkConditional(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cec50_Conditional>);
inline void _1dda05839_checkIterScopeSsc(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Uintptr, jule::Ptr<_2090c90e0_ScopeTree>, jule::Ptr<_1dd9e7232_Scope>&, jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Ptr<_1dd9e7232_Scope> _1dda05c8a_checkIterScopeSc(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Uintptr, jule::Ptr<_2090c90e0_ScopeTree>, jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Ptr<_1dd9e7232_Scope> _1dda06142_checkIterScope(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Uintptr, jule::Ptr<_2090c90e0_ScopeTree>&);
inline void _1dda063b7_checkInfIter(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cc5cc_Iter>&);
inline void _1dda0663c_checkWhileIter(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cc5cc_Iter>&);
inline void _1dda068b2_checkRangeIter(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cc5cc_Iter>&);
inline void _1dda06b37_checkIter(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cc5cc_Iter>);
inline jule::Bool _1dda06e45_checkValidContLabel(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Uintptr);
inline jule::Bool _1dda07253_checkValidBreakLabel(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1dd9e92cd_ContSt> _1dda07561_checkContValidScope(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cdea2_ContSt>);
inline void _1dda077d6_checkCont(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cdea2_ContSt>);
inline void _1dda07a5b_checkLabel(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c6807_LabelSt>);
inline void _1dda07cd1_pushGoto(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c6bae_GotoSt>);
inline void _1dda08056_checkPostfix(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c7ae4_AssignSt>);
inline jule::Bool _1dda08364_isNewAssignIdent(_1dd9edc94_scopeChecker*, jule::Str);
inline jule::Bool _1dda087b5_checkStructureAssignOp(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_2090c7ae4_AssignSt>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda08a3a_checkSingleAssign(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c7ae4_AssignSt>&);
inline void _1dda09068_processEndPartOfMultiAssign(_1dd9edc94_scopeChecker*, jule::Ptr<_1dd9ea93e_MultiAssign>&, jule::Ptr<_2090c7ae4_AssignSt>&, jule::Ptr<_2090c75a5_AssignLeft>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda092ee_checkMultiAssign(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c7ae4_AssignSt>&);
inline void _1dda09574_checkAssignSt(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c7ae4_AssignSt>);
inline jule::Ptr<_1dd9e7232_Scope> _1dda0992b_checkCaseScope(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9eb9c8_Case>&, jule::Ptr<_2090c90e0_ScopeTree>&);
inline jule::Ptr<_1dd9eb9c8_Case> _1dda09e26_checkCase(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9eae7d_Match>, jule::I64, jule::Ptr<_2090d0899_Case>, jule::Ptr<_1dda8944a_Data>);
inline void _1dda0a2de_checkCases(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d1070_MatchCase>&, jule::Ptr<_1dd9eae7d_Match>, jule::Ptr<_1dda8944a_Data>);
inline jule::Ptr<_1dd9eb9c8_Case> _1dda0a696_checkDefault(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9eae7d_Match>, jule::Ptr<_2090ce7cc_Else>);
inline void _1dda0a91b_checkComptimePanic(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1dda0ac3a_pushTypeMatch(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_1dd9eae7d_Match>, jule::Ptr<_2090d1070_MatchCase>&);
inline void _1dda0aeb0_checkTypeMatch(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d1070_MatchCase>&);
inline void _1dda0b235_checkCommonMatch(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d1070_MatchCase>&);
inline void _1dda0b4aa_checkMatch(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090d1070_MatchCase>);
inline void _1dda0b730_checkFall(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c6e9a_FallSt>);
inline jule::Ptr<_1dd9e9685_BreakSt> _1dda0ba3d_checkBreakWithLabel(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cdaea_BreakSt>);
inline jule::Ptr<_1dd9e9685_BreakSt> _1dda0bd4b_checkPlainBreak(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cdaea_BreakSt>);
inline void _1dda0c0c1_checkBreak(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cdaea_BreakSt>);
inline void _1dda0c346_checkRet(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090cbe6c_RetSt>);
inline void _1dda0c5bb_checkUseExpr(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090be019_UseExpr>);
inline void _1dda0c841_checkNode(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Any&);
inline void _1dda0ca1c_checkResult(jule::Ptr<_1dd9edc94_scopeChecker>);
inline void _1dda0cbe8_checkTree(jule::Ptr<_1dd9edc94_scopeChecker>);
inline void _1dda0d017_checkGoto(_1dd9edc94_scopeChecker*, jule::Ptr<_1dd9ece80_scopeGoto>&, jule::Ptr<_1dd9eca0c_scopeLabel>&);
inline void _1dda0d1e3_checkGotos(_1dd9edc94_scopeChecker*);
inline void _1dda0d3be_checkLabels(_1dd9edc94_scopeChecker*);
inline void _1dda0d59a_checkVars(_1dd9edc94_scopeChecker*);
inline void _1dda0d776_checkAliases(_1dd9edc94_scopeChecker*);
inline void _1dda0da95_check(jule::Ptr<_1dd9edc94_scopeChecker>, jule::Ptr<_2090c90e0_ScopeTree>&, jule::Ptr<_1dd9e7232_Scope>&);
inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda0dd09_newChildChecker(jule::Ptr<_1dd9edc94_scopeChecker>);
struct _1dd9edc94_scopeChecker {
	jule::Ptr<_222e62217_Token> _field_calledFrom;
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_owner;
	jule::Ptr<_1dd9edc94_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1dda84621_SymbolTable> _field_table;
	jule::Ptr<_1dd9e7232_Scope> _field_scope;
	jule::Ptr<_2090c90e0_ScopeTree> _field_tree;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1dd9eca0c_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1dd9ece80_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1dd9edc94_scopeChecker(void) = default;

	inline bool operator==(_1dd9edc94_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1dd9edc94_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1dda0ece9_checkCdef(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda1006e_checkTypedef(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda102e4_checkDerive(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda10569_checkNamespace(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda107de_checkDeprecated(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda10a64_checkTest(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda10cd9_checkDirective(_1dda0e8a9_directiveChecker*, jule::Ptr<_209085db0_Directive>&);
inline void _1dda10eb5_check(_1dda0e8a9_directiveChecker*);
struct _1dda0e8a9_directiveChecker {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_209085db0_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1dda0e8a9_directiveChecker(void) = default;

	inline bool operator==(_1dda0e8a9_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1dda0e8a9_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1dda15937_ImportInfo> _1dda15e54_FindPackage(_1dda15937_ImportInfo*, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dda16262_SelectPackage(_1dda15937_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
inline jule::Ptr<_1dda418db_Var> _1dda16619_FindVar(_1dda15937_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda169c1_FindTypeAlias(_1dda15937_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda16d78_FindStruct(_1dda15937_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda17230_FindFn(_1dda15937_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda1753d_FindTrait(_1dda15937_ImportInfo*, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda1784b_FindEnum(_1dda15937_ImportInfo*, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda17b59_FindTypeEnum(_1dda15937_ImportInfo*, jule::Str);
inline jule::Bool _1dda18000_isLookupable(_1dda15937_ImportInfo*, jule::Str);
inline jule::Bool _1dda1830d_existIdent(_1dda15937_ImportInfo*, jule::Str);
inline jule::Bool _1dda18594_isAccessibleViaSelection(_1dda15937_ImportInfo*);
struct _1dda15937_ImportInfo {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_Selected;
	jule::Ptr<_1dda18891_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1dda15937_ImportInfo(void) = default;


};
inline jule::Ptr<_1dda15937_ImportInfo> _1dda18d69_FindPackage(_1dda18891_Package*, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dda19177_SelectPackage(_1dda18891_Package*, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
inline jule::Ptr<_1dda418db_Var> _1dda1952e_FindVar(_1dda18891_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda198d6_FindTypeAlias(_1dda18891_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda19c8d_FindStruct(_1dda18891_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda1a145_FindFn(_1dda18891_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda1a453_FindTrait(_1dda18891_Package*, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda1a761_FindEnum(_1dda18891_Package*, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda1aa6e_FindTypeEnum(_1dda18891_Package*, jule::Str);
struct _1dda18891_Package {
	jule::Slice<jule::Ptr<_1dda84621_SymbolTable>> _field_Files;
	

	_1dda18891_Package(void) = default;


};
inline jule::Ptr<_1dda15937_ImportInfo> _1dda1e0a0_FindPackage(_1dda1da83_Sema*, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dda1e3ad_SelectPackage(_1dda1da83_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
inline jule::Ptr<_1dda418db_Var> _1dda1e765_FindVar(_1dda1da83_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda1eb1c_FindTypeAlias(_1dda1da83_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda1eec4_FindStruct(_1dda1da83_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda2037b_FindFn(_1dda1da83_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda20689_FindTrait(_1dda1da83_Sema*, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda20997_FindEnum(_1dda1da83_Sema*, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda20ca5_FindTypeEnum(_1dda1da83_Sema*, jule::Str);
inline jule::Bool _1dda21107_isFlag(_1dda1da83_Sema*, jule::I64);
inline void _1dda2137c_setCurrentFile(_1dda1da83_Sema*, jule::Ptr<_1dda84621_SymbolTable>);
inline void _1dda21745_pushErr(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dda2699d_pushSugggestion(_1dda1da83_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dda26c78_isAccessibleDefine(_1dda1da83_Sema*, jule::Bool, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dda271c9_isDuplicatedIdent(_1dda1da83_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1dda274e8_checkDirectives(jule::Ptr<_1dda1da83_Sema>, jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Any);
inline jule::Bool _1dda27949_checkGenericQuantity(_1dda1da83_Sema*, jule::I64, jule::I64, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dda27d23_isDuplicatedImportSelection(_1dda1da83_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1dda281db_getImportDef(_1dda1da83_Sema*, jule::Str, jule::Ptr<_1dda15937_ImportInfo>&);
inline jule::Bool _1c6d33ed1_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dda418db_Var>&);
inline jule::Bool _1c6d37ea2_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1ddab46d9_TypeAlias>&);
inline jule::Bool _1c6d3be40_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_2090d5849_Struct>&);
inline jule::Bool _1c6d41065_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1c6d45003_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9db666_Enum>&);
inline jule::Bool _1c6d48e91_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9dcc61_TypeEnum>&);
inline jule::Bool _1c6d4ce2e_checkImportSelection(_1dda1da83_Sema*, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Bool _1dda288c3_checkImportSelectedSelections(_1dda1da83_Sema*, jule::Ptr<_1dda15937_ImportInfo>&);
inline jule::Bool _1c6d523b7_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dda418db_Var>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d5594d_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d56058_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_2090d5849_Struct>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d5b426_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9c761e_Fn>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d5ba42_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9d9521_Trait>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d5e759_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9db666_Enum>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1c6d62471_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9dcc61_TypeEnum>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1dda290ee_checkImportAllSelections(_1dda1da83_Sema*, jule::Ptr<_1dda15937_ImportInfo>&);
inline jule::Bool _1dda2941d_checkImportSelections(_1dda1da83_Sema*, jule::Ptr<_1dda15937_ImportInfo>&);
inline jule::Bool _1dda2972b_isUseAliasDuplication(_1dda1da83_Sema*, jule::Ptr<_1dda15937_ImportInfo>&);
inline jule::Bool _1dda29a39_checkImport(_1dda1da83_Sema*, jule::Ptr<_1dda15937_ImportInfo>&);
inline void _1dda29c15_checkImports(_1dda1da83_Sema*);
inline void _1dda29de1_implFileImpls(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda2a0bc_implImpls(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda2a298_checkEnums(jule::Ptr<_1dda1da83_Sema>);
inline _1ddac3c48_typeChecker _1dda2a6e9_typeChecker(jule::Ptr<_1dda1da83_Sema>, jule::Trait<_1ddad134e_Lookup>, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>, jule::Ptr<_1ddac2d68_referencer>);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2abe4_buildTypeWithRefers(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090b9157_TypeDecl>&, jule::Trait<_1ddad134e_Lookup>, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>, jule::Ptr<_1ddac2d68_referencer>);
inline jule::Bool _1dda2b1de_checkTypeWithRefers(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab97aa_TypeSymbol>&, jule::Trait<_1ddad134e_Lookup>, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>, jule::Ptr<_1ddac2d68_referencer>);
inline jule::Ptr<_1dd9e0291_constraintChecker> _1dda2b453_constraintChecker(jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1dda2b80a_checkType(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab97aa_TypeSymbol>&, jule::Trait<_1ddad134e_Lookup>);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2bc5b_buildTypeWithGenerics(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090b9157_TypeDecl>&, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>, jule::Ptr<_1dd9cd23a_ReferenceStack>);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2c069_buildType(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090b9157_TypeDecl>&);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2c377_selectType(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090b9157_TypeDecl>&);
inline jule::Ptr<_1dda8aeb8_Eval> _1dda2c7c8_evalpd(jule::Ptr<_1dda1da83_Sema>, jule::Trait<_1ddad134e_Lookup>, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda418db_Var>);
inline jule::Ptr<_1dda8aeb8_Eval> _1dda2cb80_evalp(jule::Ptr<_1dda1da83_Sema>, jule::Trait<_1ddad134e_Lookup>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Ptr<_1dda8aeb8_Eval> _1dda2ce8d_eval(jule::Ptr<_1dda1da83_Sema>, jule::Trait<_1ddad134e_Lookup>);
inline jule::Bool _1dda2d488_checkAssignType(jule::Ptr<_1dda1da83_Sema>, jule::Bool, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dda2d8d9_checkTypeCompatibility(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2dd5c_buildNonGenericTypeKind(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090b9157_TypeDecl>&, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>&, jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>&);
inline jule::Bool _1dda2e247_buildFnNonGenericTypeKinds(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>&);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda2e566_getTraitCheckFnKind(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Bool _1dda2e9b7_checkConstraintsFn(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Bool _1dda2ee18_checkConstraintsStruct(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_222e62217_Token>&, jule::Ptr<_2090d5c23_StructIns>);
inline jule::Bool _1dda302c0_fnEnvironment(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)>);
inline void _1dda30545_checkFnParamKind(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c9401_ParamIns>&);
inline jule::Bool _1dda30853_reloadFnInsTypes(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Bool _1dda30cc6_checkRefValidityForInitExpr(jule::Ptr<_1dda1da83_Sema>, jule::Bool, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1dda3139d_checkValidityForInitExpr(jule::Ptr<_1dda1da83_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1dda31766_checkTypeAliasDeclKind(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab46d9_TypeAlias>&, jule::Trait<_1ddad134e_Lookup>);
inline void _1dda31a85_checkTypeAliasDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab46d9_TypeAlias>&, jule::Trait<_1ddad134e_Lookup>);
inline void _1dda31d0a_checkTypeAliasDeclDup(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1ddab46d9_TypeAlias>&);
inline jule::Bool _1dda3206e_checkTypeAliasDecls(jule::Ptr<_1dda1da83_Sema>);
inline void _1c6dce059_checkEnumItemsDup(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>>);
inline void _1c6dd94c6_checkEnumItemsDup(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>>);
inline void _1dda32569_checkEnumItemsStr(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9db666_Enum>&);
inline void _1dda327de_checkEnumItemsInt(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9db666_Enum>&);
inline void _1dda32a64_checkEnumDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9db666_Enum>&);
inline void _1dda32cd9_checkTypeEnumDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9dcc61_TypeEnum>&);
inline jule::Bool _1dda3304d_checkEnumDecls(jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1dda332b2_checkTypeEnumDecls(jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1dda335c0_checkDeclGenerics(_1dda1da83_Sema*, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>&);
inline jule::Bool _1dda338cd_checkFnDeclParamsDup(_1dda1da83_Sema*, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Bool _1dda33bdb_checkFnDeclResultDup(_1dda1da83_Sema*, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda33e61_checkFnDeclPrototype(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda341d6_checkTraitDeclMethod(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda3445b_checkTraitDeclMethods(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9d9521_Trait>&);
inline void _1dda346d1_checkTraitDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1dda34945_checkTraitDecls(jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1dda34cec_checkTraitImplMethods(_1dda1da83_Sema*, jule::Ptr<_1dd9d9521_Trait>&, jule::Ptr<_1dd9e21c7_Impl>&);
inline jule::Bool _1dda351a4_implToStruct(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&, jule::Ptr<_1dd9e21c7_Impl>&);
inline void _1dda35429_implTrait(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9e21c7_Impl>&);
inline void _1dda3569e_implStruct(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9e21c7_Impl>&);
inline void _1dda35924_implImpl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9e21c7_Impl>&);
inline void _1dda35c43_checkVarDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dda418db_Var>&, jule::Trait<_1ddad134e_Lookup>);
inline void _1dda35eb8_checkGlobalVarDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dda418db_Var>&);
inline jule::Bool _1dda3622c_checkGlobalDecls(jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1dda365d4_checkStructTraitImpl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&, jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1dda368e2_checkStructImpls(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&);
inline jule::Bool _1dda36c00_checkStructFields(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&);
inline void _1dda36e75_checkStructDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&);
inline jule::Bool _1dda371d9_checkStructDecls(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3745e_checkFnDecl(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Bool _1dda376c3_checkFnDecls(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda37a8b_pushCycleError(_1dda1da83_Sema*, jule::Ptr<_2090d5849_Struct>&, jule::Ptr<_2090d5849_Struct>&, jule::Str&);
inline jule::Bool _1dda37edc_checkCrossCycle(_1dda1da83_Sema*, jule::Ptr<_2090d5849_Struct>&, jule::Ptr<_2090d5849_Struct>&, jule::Str&);
inline jule::Bool _1dda38460_checkStructDeriveIllegalCycles(_1dda1da83_Sema*, jule::Str, jule::Ptr<_2090d5849_Struct>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda387a1_checkStructInsDeriveClone(_1dda1da83_Sema*, jule::Ptr<_2090d5c23_StructIns>);
inline void _1dda3898d_checkPackageDecls(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda38cce_checkDataForTypeInference(_1dda1da83_Sema*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline void _1dda39065_checkVar(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dda418db_Var>&);
inline void _1dda39384_checkTypeVar(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dda418db_Var>&, jule::Trait<_1ddad134e_Lookup>);
inline void _1dda39560_checkGlobalTypes(jule::Ptr<_1dda1da83_Sema>);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda39917_readyToCheckFn(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda39c36_checkTypeMethod(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda3a187_checkStructInsOp(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_1dd9c761e_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1dd9c761e_Fn>)>);
inline jule::Bool _1dda3a53e_checkStructEnv(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dda3a8e6_precheckStructIns(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_222e62217_Token>);
inline void _1dda3ab6b_checkStructIns(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1dda3ade1_checkTypeStruct(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&);
inline void _1dda3b0bc_checkStructTypes(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3b364_checkStructInsOperators(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5c23_StructIns>);
inline void _1dda3b5ea_precheckStructType(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_2090d5849_Struct>&);
inline void _1dda3b7c6_precheckStructTypes(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3ba4b_checkRets(_1dda1da83_Sema*, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1dda3bd6a_checkFnInsSc(_1dda1da83_Sema*, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_1dd9edc94_scopeChecker>&);
inline void _1dda3c189_checkFnInsCaller(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_222e62217_Token>);
inline void _1dda3c40e_checkFnIns(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1dda3c684_checkTypeFn(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda3c909_checkTestFn(_1dda1da83_Sema*, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1dda3cb7e_precheckTypeFn(jule::Ptr<_1dda1da83_Sema>, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1dda3cd5a_precheckFnTypes(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3d036_checkFnTypes(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3d212_checkPackageTypes(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3d3dd_setFileSemaFields(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3d5b9_setSemaFields(jule::Ptr<_1dda1da83_Sema>);
inline void _1dda3d83e_check(jule::Ptr<_1dda1da83_Sema>, jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&);
struct _1dda1da83_Sema {
	jule::Slice<_222b38ae2_Log> _field_errors;
	jule::Slice<jule::Ptr<_1dda84621_SymbolTable>> _field_files;
	jule::Ptr<_1dda84621_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_1dda1da83_Sema(void) = default;


};
inline _1dda3dbe6_missingRetChecker static__1dda3e0ae_new(void);
inline jule::Bool _1dda3e389_checkConditional(_1dda3dbe6_missingRetChecker*, jule::Ptr<_1dd9e7c8d_Conditional>);
inline jule::Bool _1dda3e697_checkMatch(_1dda3dbe6_missingRetChecker*, jule::Ptr<_1dd9eae7d_Match>);
inline jule::Bool _1dda3e9a5_checkInfIter(_1dda3dbe6_missingRetChecker*, jule::Ptr<_1dd9e8079_InfIter>);
inline jule::Bool _1dda3ecb3_checkScope(_1dda3dbe6_missingRetChecker*, jule::Ptr<_1dd9e7232_Scope>);
inline jule::Bool _1dda400c1_check(_1dda3dbe6_missingRetChecker*, jule::Ptr<_1dd9e7232_Scope>);
struct _1dda3dbe6_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1dda3dbe6_missingRetChecker(void) = default;


};
struct _1dda408a7_IterRelation {
	jule::Ptr<_1dda418db_Var> _field_Range;
	

	_1dda408a7_IterRelation(void) = default;

	inline bool operator==(_1dda408a7_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1dda408a7_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dda41ca4_IsInitialized(_1dda418db_Var*);
inline jule::Bool _1dda42018_IsTypeInferred(_1dda418db_Var*);
inline jule::Bool _1dda4227c_untypedConstant(_1dda418db_Var*);
struct _1dda418db_Var {
	jule::Ptr<_1dd9e7232_Scope> _field_Scope;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Ptr<_1dda8a4c3_Value> _field_Value;
	jule::Ptr<_1dd9cd23a_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_Directives;
	jule::Ptr<_1dda408a7_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Depends;
	

	_1dda418db_Var(void) = default;


};
inline jule::Bool static__1dda42d0a_Dispose(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda430a2_Str(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda433e3_logical(jule::Ptr<_1dd9c761e_Fn>&, jule::Str);
inline jule::Bool static__1dda4368a_Eq(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda43932_Gt(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda43bc9_GtEq(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda43e71_Lt(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda44218_LtEq(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda44559_result(jule::Ptr<_1dd9c761e_Fn>&, jule::Str);
inline jule::Bool static__1dda44801_Shl(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda44a98_Shr(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda44d40_Add(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda450d7_Sub(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda4537e_Div(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda45626_Mul(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda458bd_Mod(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda45b65_BitAnd(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda45e0c_BitOr(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda461a4_BitXor(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda464e5_unary(jule::Ptr<_1dd9c761e_Fn>&, jule::Str);
inline jule::Bool static__1dda4678c_Neg(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda46a34_Pos(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda46ccb_BitNot(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda4711c_assign(jule::Ptr<_1dd9c761e_Fn>&, jule::Str);
inline jule::Bool static__1dda473b4_AddAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda4765b_SubAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda47903_DivAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda47b9a_MulAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda47e42_ModAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda481d9_ShlAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda48481_ShrAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda48728_BitOrAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda489c0_BitAndAssign(jule::Ptr<_1dd9c761e_Fn>);
inline jule::Bool static__1dda48c67_BitXorAssign(jule::Ptr<_1dd9c761e_Fn>);
struct _1dda42689_FuncPattern {
	

	_1dda42689_FuncPattern(void) = default;


};
inline void _1dda73731_pushErr(_1dda73214_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dda73995_checkTrait(_1dda73214_typeCompatibilityChecker*);
inline jule::Bool _1dda73c09_checkPtr(_1dda73214_typeCompatibilityChecker*);
inline jule::Bool _1dda73e6d_checkPrim(_1dda73214_typeCompatibilityChecker*);
inline jule::Bool _1dda74325_typeEnum(_1dda73214_typeCompatibilityChecker*, jule::Ptr<_1dd9dcc61_TypeEnum>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda74589_checkTypeEnum(_1dda73214_typeCompatibilityChecker*);
inline jule::Bool _1dda747ed_check(_1dda73214_typeCompatibilityChecker*);
struct _1dda73214_typeCompatibilityChecker {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Ptr<_1ddab53cc_TypeKind> _field_dest;
	jule::Ptr<_1ddab53cc_TypeKind> _field_src;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	

	_1dda73214_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1dda73214_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1dda73214_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1dda7529e_pushErr(_1dda74d3c_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dda75513_checkValidity(_1dda74d3c_assignTypeChecker*);
inline jule::Bool _1dda75777_checkConst(_1dda74d3c_assignTypeChecker*);
inline jule::Bool _1dda759db_isPrim(_1dda74d3c_assignTypeChecker*);
inline jule::Bool _1dda75c50_checkCompatibility(_1dda74d3c_assignTypeChecker*);
inline jule::Bool _1dda75eb4_check(_1dda74d3c_assignTypeChecker*);
struct _1dda74d3c_assignTypeChecker {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Ptr<_1ddab53cc_TypeKind> _field_dest;
	jule::Ptr<_1dda8944a_Data> _field_d;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	

	_1dda74d3c_assignTypeChecker(void) = default;

	inline bool operator==(_1dda74d3c_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1dda74d3c_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c7059349_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1c7058a41_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1c705d54b_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1c7058dc6_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda77207_annotateConstraintMap(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda77515_annotateConstraintTup(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda77823_annotateConstraintFn(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda77b53_annotateConstraintIdent(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda77e72_annotateConstraint(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1dda78291_pushGeneric(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&, jule::I64);
inline jule::Bool _1dda7859e_annotatePrim(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda788ac_annotateArr(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda78bba_annotateSlc(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda79072_checkMapKey(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda79380_annotateMap(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7968d_annotateFn(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7999b_annotatePtr(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda79ca9_annotateSptr(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7a0b7_annotateStruct(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7a3c5_annotateAny(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7a6d3_annotateKind(_1dda76822_dynamicTypeAnnotation*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dda7a947_annotate(_1dda76822_dynamicTypeAnnotation*);
struct _1dda76822_dynamicTypeAnnotation {
	jule::Ptr<_1dda8aeb8_Eval> _field_e;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_f;
	jule::Ptr<_1dd9c9401_ParamIns> _field_p;
	jule::Ptr<_1dda8944a_Data> _field_a;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	jule::Ptr<_1ddab53cc_TypeKind>* _field_k = nullptr;
	jule::Ptr<_2090b9157_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_ignored;
	

	_1dda76822_dynamicTypeAnnotation(void) = default;


};
inline void _1dda7b739_pushErrToken(_1dda7b1d9_fnCallArgChecker*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dda7ba58_pushErr(_1dda7b1d9_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>> _1dda7bcbc_getParams(_1dda7b1d9_fnCallArgChecker*);
inline jule::Bool _1dda7c0ca_checkCounts(_1dda7b1d9_fnCallArgChecker*, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>&);
inline jule::Bool _1dda7c52b_checkArg(_1dda7b1d9_fnCallArgChecker*, jule::Ptr<_1dd9c9401_ParamIns>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline jule::Bool _1dda7c8d3_push(_1dda7b1d9_fnCallArgChecker*, jule::Ptr<_1dd9c9401_ParamIns>&, jule::Ptr<_2090bd678_Expr>);
inline jule::Bool _1dda7cc8a_pushVariadic(_1dda7b1d9_fnCallArgChecker*, jule::Ptr<_1dd9c9401_ParamIns>&, jule::I64);
inline jule::Bool _1dda7d098_checkArgs(_1dda7b1d9_fnCallArgChecker*, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>&);
inline jule::Bool _1dda7d32e_checkDynamicTypeAnnotation(_1dda7b1d9_fnCallArgChecker*);
inline jule::Bool _1dda7d5a4_check(_1dda7b1d9_fnCallArgChecker*);
struct _1dda7b1d9_fnCallArgChecker {
	jule::Ptr<_1dda8aeb8_Eval> _field_e;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_args;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_ignored;
	

	_1dda7b1d9_fnCallArgChecker(void) = default;


};
inline void _1dda7e0ee_pushErr(_1dda7dae3_structLitChecker*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dda7e41d_pushSugggestion(_1dda7dae3_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1dda7e7d6_pushMatch(_1dda7dae3_structLitChecker*, jule::Ptr<_2090d5a36_FieldIns>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline void _1dda7eb05_checkPair(_1dda7dae3_structLitChecker*, jule::Ptr<_2090c30d9_FieldExprPair>&, jule::Slice<jule::Ptr<_2090bd678_Expr>>&);
inline jule::Bool _1dda7ee13_readyExprs(_1dda7dae3_structLitChecker*, jule::Slice<jule::Ptr<_2090bd678_Expr>>&);
inline void _1dda80188_check(_1dda7dae3_structLitChecker*, jule::Slice<jule::Ptr<_2090bd678_Expr>>&);
struct _1dda7dae3_structLitChecker {
	jule::Ptr<_1dda8aeb8_Eval> _field_e;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	jule::Ptr<_2090d5c23_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1dd9b9ad9_StructArgExprModel>> _field_args;
	

	_1dda7dae3_structLitChecker(void) = default;


};
inline jule::Ptr<_1dda418db_Var> _1dda80b6c_buildVar(_1dda806c7_rangeChecker*, jule::Ptr<_2090cbab5_VarDecl>&);
inline void _1dda80d48_setSizeKey(_1dda806c7_rangeChecker*);
inline void _1dda81211_checkRangeExprValidity(_1dda806c7_rangeChecker*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda418db_Var>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1dda813dc_checkSlice(_1dda806c7_rangeChecker*);
inline void _1dda815b8_checkArray(_1dda806c7_rangeChecker*);
inline void _1dda81794_checkMapKeyA(_1dda806c7_rangeChecker*);
inline void _1dda81970_checkMapKeyB(_1dda806c7_rangeChecker*);
inline void _1dda81b4b_checkMap(_1dda806c7_rangeChecker*);
inline void _1dda81d27_checkStr(_1dda806c7_rangeChecker*);
inline jule::Bool _1dda8208b_check(_1dda806c7_rangeChecker*);
struct _1dda806c7_rangeChecker {
	jule::Ptr<_1dd9edc94_scopeChecker> _field_sc;
	jule::Ptr<_2090cd743_RangeKind> _field_rang;
	jule::Ptr<_1dd9e8dd2_RangeIter> _field_Kind;
	jule::Ptr<_1dda8944a_Data> _field_d;
	

	_1dda806c7_rangeChecker(void) = default;

	inline bool operator==(_1dda806c7_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1dda806c7_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1dda82c07_prepareTypes(_1dda82762_retTypeChecker*);
inline void _1dda82e7c_prepareExprs(_1dda82762_retTypeChecker*, jule::Ptr<_2090bd678_Expr>&);
inline void _1dda83158_checkExprs(_1dda82762_retTypeChecker*);
inline jule::Bool _1dda83466_check(_1dda82762_retTypeChecker*, jule::Ptr<_2090bd678_Expr>&);
struct _1dda82762_retTypeChecker {
	jule::Ptr<_1dd9edc94_scopeChecker> _field_sc;
	jule::Ptr<_1dd9ca2c0_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _field_exprs;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1dda82762_retTypeChecker(void) = default;


};
inline jule::Ptr<_1dda15937_ImportInfo> _1dda84b3d_FindPackage(_1dda84621_SymbolTable*, jule::Str);
inline jule::Ptr<_1dda15937_ImportInfo> _1dda84e4b_SelectPackage(_1dda84621_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
inline jule::Ptr<_1dda418db_Var> _1dda85303_FindVar(_1dda84621_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda856aa_FindTypeAlias(_1dda84621_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda85a62_FindStruct(_1dda84621_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda85e19_FindFn(_1dda84621_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda86227_FindTrait(_1dda84621_SymbolTable*, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda86535_FindEnum(_1dda84621_SymbolTable*, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda86843_FindTypeEnum(_1dda84621_SymbolTable*, jule::Str);
inline jule::Ptr<_1dda418db_Var> _1dda86db5_findVar(_1dda84621_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda87316_findTypeAlias(_1dda84621_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1dda876bd_defByIdent(_1dda84621_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1dda87b1e_isDuplicatedIdent(_1dda84621_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1dda84621_SymbolTable {
	jule::Ptr<_222e675a2_File> _field_File;
	jule::Slice<_1dd9ce59e_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1dd9d9521_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1dd9db666_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1dd9dcc61_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1dd9e21c7_Impl>> _field_Impls;
	

	_1dda84621_SymbolTable(void) = default;


};
inline jule::Bool _1dda89835_IsNil(_1dda8944a_Data*);
inline jule::Bool _1dda89a99_IsVoid(_1dda8944a_Data*);
inline jule::Bool _1dda89d0d_IsConst(_1dda8944a_Data*);
inline jule::Bool _1dda8a11b_GoodOperand(_1dda8944a_Data*, jule::Ptr<_1dda8944a_Data>&);
struct _1dda8944a_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1dd9ad050_Const> _field_Constant;
	

	_1dda8944a_Data(void) = default;

	inline bool operator==(_1dda8944a_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1dda8944a_Data _other) { return !this->operator==(_other); }


};
struct _1dda8a4c3_Value {
	jule::Ptr<_2090bd678_Expr> _field_Expr;
	jule::Ptr<_1dda8944a_Data> _field_Data;
	

	_1dda8a4c3_Value(void) = default;

	inline bool operator==(_1dda8a4c3_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1dda8a4c3_Value _other) { return !this->operator==(_other); }


};
inline void _1dda8b4c4_pushErr(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1dda8b7e3_pushSugggestion(_1dda8aeb8_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1dda8b9be_allowBuiltin(_1dda8aeb8_Eval*);
inline void _1dda8bb9a_disallowBuiltin(_1dda8aeb8_Eval*);
inline jule::Bool _1dda8be0e_isUnsafe(_1dda8aeb8_Eval*);
inline jule::Bool _1dda8c173_isGlobal(_1dda8aeb8_Eval*);
inline jule::Bool _1dda8c44d_applyNumericPrefix(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8c6b2_litNil(_1dda8aeb8_Eval*);
inline jule::Ptr<_1dda8944a_Data> _1dda8c9c0_litStr(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8cccd_litBool(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8d0db_litRune(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8d3e9_litFloat(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8d707_litInt(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8da15_litNum(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8dd23_evalLit(_1dda8aeb8_Eval*, jule::Ptr<_2090be6ac_LitExpr>);
inline jule::Any _1dda8e131_findBuiltins(_1dda8aeb8_Eval*, jule::Str);
inline jule::Any _1dda8e4d8_getDef(_1dda8aeb8_Eval*, jule::Str, jule::Bool);
inline void _1c7192aae_pushReference(_1dda8aeb8_Eval*, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1c71a6ab2_pushReference(_1dda8aeb8_Eval*, jule::Ptr<_1dda418db_Var>&);
inline void _1c724dab0_pushReference(_1dda8aeb8_Eval*, jule::Ptr<_2090d5c23_StructIns>&);
inline jule::Ptr<_1dda8944a_Data> _1dda8ea6b__evalEnum(_1dda8aeb8_Eval*, jule::Ptr<_1dd9db666_Enum>);
inline jule::Ptr<_1dda8944a_Data> _1dda8ee23_evalEnum(_1dda8aeb8_Eval*, jule::Ptr<_1dd9db666_Enum>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda90231__evalTypeEnum(_1dda8aeb8_Eval*, jule::Ptr<_1dd9dcc61_TypeEnum>);
inline jule::Ptr<_1dda8944a_Data> _1dda905d8_evalTypeEnum(_1dda8aeb8_Eval*, jule::Ptr<_1dd9dcc61_TypeEnum>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda908e6__evalStruct(_1dda8aeb8_Eval*, jule::Ptr<_2090d5c23_StructIns>);
inline jule::Ptr<_1dda8944a_Data> _1dda90c9d_evalStruct(_1dda8aeb8_Eval*, jule::Ptr<_2090d5c23_StructIns>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda910ab_evalFnIns(_1dda8aeb8_Eval*, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1dda913ca_checkDeprecated(_1dda8aeb8_Eval*, jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda91782_evalFn(_1dda8aeb8_Eval*, jule::Ptr<_1dd9c761e_Fn>, jule::Ptr<_222e62217_Token>);
inline void _1dda91b4a_pushIllegalCycleError(_1dda8aeb8_Eval*, jule::Ptr<_1dda418db_Var>&, jule::Ptr<_1dda418db_Var>&, jule::Str&);
inline jule::Bool _1dda92002_checkCrossCycle(_1dda8aeb8_Eval*, jule::Ptr<_1dda418db_Var>&, jule::Str&);
inline jule::Bool _1dda923a9_checkIllegalCycles(_1dda8aeb8_Eval*, jule::Ptr<_1dda418db_Var>&, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda92761_evalVar(_1dda8aeb8_Eval*, jule::Ptr<_1dda418db_Var>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda92b18_evalTypeAlias(_1dda8aeb8_Eval*, jule::Ptr<_1ddab46d9_TypeAlias>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda92ec0_evalDef(_1dda8aeb8_Eval*, jule::Any, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda932cd_evalIdent(_1dda8aeb8_Eval*, jule::Ptr<_2090c0339_IdentExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda935db_evalUnary(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c0a43_UnaryExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda938e9_evalVariadic(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c0dea_VariadicExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda93c07_evalUnsafe(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090bedb6_UnsafeExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda94015_evalArr(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c4c67_SliceExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda94466_evalExpSlc(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c4c67_SliceExpr>, jule::Ptr<_1ddab53cc_TypeKind>, jule::Any);
inline jule::Ptr<_1dda8944a_Data> _1dda94774_evalSliceExpr(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c4c67_SliceExpr>);
inline void _1dda94ab5_checkIntegerIndexingByData(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>);
inline void _1dda94e8e_indexingPtr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline void _1dda95357_indexingArr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline void _1dda95720_indexingSlc(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline void _1dda95ad8_indexingMap(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline void _1dda95ea1_indexingStr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline void _1dda96369_toIndexing(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline jule::Bool _1dda967dc_pushGenericsFromExprSubIdent(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c1acc_SubIdentExpr>&, jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>&, jule::Ptr<_2090bd678_Expr>&);
inline jule::Bool _1dda96ba5_pushGenericsFromData(jule::Ptr<_1dda8aeb8_Eval>, jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>&, jule::Ptr<_2090bd678_Expr>&);
inline void _1dda96ee6_evalIdentDeclFromIndexing(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline jule::Bool _1dda97458_checkGenericFn(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_222e62217_Token>&, jule::Any&);
inline void _1dda97799_evalFnGenericFromIndexing(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c55d6_IndexingExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda97ab8_evalIndexing(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c55d6_IndexingExpr>);
inline __jule_tuple_x_1dda8944a_Data__jule_tuple_x_1dda8944a_Data _1dda97dc6_evalSlicingExprs(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c5be1_SlicingExpr>&);
inline void _1dda9814b_slicingArr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda98514_slicingStr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda98976_checkSlicing(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_2090c5be1_SlicingExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1dda98c84_evalSlicing(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c5be1_SlicingExpr>);
inline void _1dda9914c_castPtr(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda99515_castStruct(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda998cd_castRef(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda99c96_castSlc(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda9a0b5_castStr(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda9a47d_castInt(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda9a846_castNum(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda9ac0e_castPrim(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline void _1dda9b02d_castConstant(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda9b3e6_castTypeEnum(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline void _1dda9b7ae_castTypeEnumT(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_1dda8944a_Data> _1dda9bc10_evalCastByTypeNData(_1dda8aeb8_Eval*, jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda9c161_evalCastT(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_2090bd678_Expr>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_1dda8944a_Data> _1dda9c46e_evalCast(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c12a2_CastExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda9c77c_evalNsSelection(_1dda8aeb8_Eval*, jule::Ptr<_2090c1659_NsSelectionExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda9cbcd_evalStructLitExplicit(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090d5c23_StructIns>, jule::Slice<jule::Ptr<_2090bd678_Expr>>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1dda9cedb_evalStructLit(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c3837_StructLit>);
inline _1ddac3c48_typeChecker _1dda9d250_typeChecker(_1dda8aeb8_Eval*);
inline jule::Ptr<_1dda8944a_Data> _1dda9d55d_evalType(_1dda8aeb8_Eval*, jule::Ptr<_2090b9157_TypeDecl>);
inline void _1dda9d87c_callTypeFn(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda9db9b_callBuiltinFn(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda9dedc_checkFnOfConcurrentCall(_1dda8aeb8_Eval*, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_222e62217_Token>);
inline void _1dda9e3d8_processExceptionalHandler(_1dda8aeb8_Eval*, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1dda9e718_callFn(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1dda9ea26_evalFnCall(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c265a_FnCallExpr>);
inline jule::Ptr<_1dda8944a_Data> _1dda9edcd_evalEnumStatic(_1dda8aeb8_Eval*, jule::Ptr<_1dd9db666_Enum>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa0285_evalTypeEnumStatic(_1dda8aeb8_Eval*, jule::Ptr<_1dd9dcc61_TypeEnum>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa063c_evalStructStatic(_1dda8aeb8_Eval*, jule::Ptr<_2090d5c23_StructIns>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa0a8d_evalTraitSubIdent(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_1dd9d9521_Trait>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa1088_evalStructSubIdent(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_2090d5c23_StructIns>, jule::Ptr<_2090c1acc_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1dda8944a_Data> _1ddaa1440_evalSliceSubIdent(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa17e7_evalArraySubIdent(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa1b05_evalIntTypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa1e13_evalUintTypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa2221_evalI8TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa252e_evalI16TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa283c_evalI32TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa2b4a_evalI64TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa2e58_evalU8TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa3266_evalU16TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa3574_evalU32TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa3882_evalU64TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa3b90_evalF32TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa3e9d_evalF64TypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa4355_evalPrimStatic(_1dda8aeb8_Eval*, jule::Str, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa470c_evalTypeStatic(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_2090c1acc_SubIdentExpr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa4ab4_evalObjSubIdent(_1dda8aeb8_Eval*, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_2090c1acc_SubIdentExpr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa4dc2_evalSubIdent(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c1acc_SubIdentExpr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa51d0_evalTuple(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090be305_TupleExpr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa5587_evalMap(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_1ddac08c1_Map>, jule::Ptr<_2090c3caa_BraceLit>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa5895_evalBraceLit(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c3caa_BraceLit>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa5ba3_evalAnonFn(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090caad6_FnDecl>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa5eb1_evalBinop(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090c2050_BinopExpr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa62be_evalExprKind(jule::Ptr<_1dda8aeb8_Eval>, jule::Any);
inline jule::Ptr<_1dda8944a_Data> _1ddaa65cc_eval(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090bd678_Expr>);
inline jule::Ptr<_1dda8944a_Data> _1ddaa68da_evalExpr(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_2090bd678_Expr>);
struct _1dda8aeb8_Eval {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Trait<_1ddad134e_Lookup> _field_lookup;
	jule::Ptr<_1ddab53cc_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1dda418db_Var> _field_owner;
	jule::Ptr<_2090d5a36_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1dda8aeb8_Eval(void) = default;

	inline bool operator==(_1dda8aeb8_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1dda8aeb8_Eval _other) { return !this->operator==(_other); }


};
inline _1ddaa6d5d_unaryEval static__1ddaa7314_new(jule::Ptr<_1dda8aeb8_Eval>);
inline void _1ddaa74e0_minus(_1ddaa6d5d_unaryEval*);
inline void _1ddaa76bb_plus(_1ddaa6d5d_unaryEval*);
inline void _1ddaa7897_caret(_1ddaa6d5d_unaryEval*);
inline void _1ddaa7a73_excl(_1ddaa6d5d_unaryEval*);
inline void _1ddaa7c4e_star(_1ddaa6d5d_unaryEval*);
inline void _1ddaa7e2a_amper(_1ddaa6d5d_unaryEval*);
inline void _1ddaa8106_typeDecl(_1ddaa6d5d_unaryEval*);
inline void _1ddaa82d2_evalData(_1ddaa6d5d_unaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaa85ac_eval(_1ddaa6d5d_unaryEval*, jule::Ptr<_2090c0a43_UnaryExpr>);
struct _1ddaa6d5d_unaryEval {
	jule::Ptr<_1dda8aeb8_Eval> _field_e;
	jule::Ptr<_1dda8944a_Data> _field_d;
	jule::Ptr<_2090c0a43_UnaryExpr> _field_u;
	

	_1ddaa6d5d_unaryEval(void) = default;

	inline bool operator==(_1ddaa6d5d_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1ddaa6d5d_unaryEval _other) { return !this->operator==(_other); }


};
inline _1ddaa8aeb_binaryEval static__1ddaa91c3_newPlain(jule::Ptr<_1dda8aeb8_Eval>);
inline _1ddaa8aeb_binaryEval static__1ddaa9514_new(jule::Ptr<_1dda8aeb8_Eval>, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1ddaa9778_checkTypeCompatibility(_1ddaa8aeb_binaryEval*);
inline jule::Bool _1ddaa9a20_checkStructCommonOperatorCompatibility(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaa9cb7_evalNil(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaa02b_evalEnum(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaa290_evalTypeEnum(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaa504_evalSptr(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaa768_evalPtr(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaa9cc_evalArr(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaac41_evalSlc(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaaaea5_evalFn(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaab219_evalStruct(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaab47d_evalTrait(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaab6e2_evalAny(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaab956_evalBool(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaabbba_evalStr(_1ddaa8aeb_binaryEval*);
inline void _1ddaabd96_setTypeToGreater(_1ddaa8aeb_binaryEval*);
inline void _1ddaac0d8_checkModData(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddaac2b4_mod(_1ddaa8aeb_binaryEval*);
inline jule::Bool _1ddaac66b_numbersAreCompatibile(_1ddaa8aeb_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1dda8944a_Data> _1ddaac8d0_evalFloat(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaacb44_evalInt(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaacda8_evalPrim(_1ddaa8aeb_binaryEval*);
inline void _1ddaad084_checkSpecialCases(_1ddaa8aeb_binaryEval*);
inline jule::Ptr<_1dda8944a_Data> _1ddaad2e8_evalOp(_1ddaa8aeb_binaryEval*);
inline void _1ddaad56d_evalConst(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddaad7e3_checkData(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddaad9be_checkDatas(_1ddaa8aeb_binaryEval*);
inline void _1ddaadc44_setModel(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddaadeb9_postEval(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddaae371_solveExplicit(_1ddaa8aeb_binaryEval*, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddaae67e_eval(_1ddaa8aeb_binaryEval*, jule::Ptr<_2090c2050_BinopExpr>&);
struct _1ddaa8aeb_binaryEval {
	jule::Ptr<_1dda8aeb8_Eval> _field_e;
	jule::Ptr<_1dda8944a_Data> _field_l;
	jule::Ptr<_1dda8944a_Data> _field_r;
	jule::Ptr<_222e62217_Token> _field_op;
	

	_1ddaa8aeb_binaryEval(void) = default;

	inline bool operator==(_1ddaa8aeb_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ddaa8aeb_binaryEval _other) { return !this->operator==(_other); }


};
struct _1ddab3ba0_InsGeneric {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_Constraint;
	

	_1ddab3ba0_InsGeneric(void) = default;


};
struct _1ddab46d9_TypeAlias {
	jule::Ptr<_2090c90e0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ddab97aa_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _field_Generics;
	

	_1ddab46d9_TypeAlias(void) = default;


};
inline jule::Str _1ddab57c8_Str(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab5ad6_Equal(jule::Ptr<_1ddab53cc_TypeKind>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1ddab609d_CppLinked(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab6312_IsNil(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab6576_Void(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab67da_Comparable(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab6a4e_Mutable(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab6cb3_NilCompatible(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab7027_PerformsRC(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab728b_SupportsCloning(_1ddab53cc_TypeKind*);
inline jule::Bool _1ddab7500_Variadicable(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddaba129_Prim> _1ddab7764_Prim(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddabd8ad_Sptr> _1ddab79c8_Sptr(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddac1e22_Ptr> _1ddab7c3c_Ptr(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1dd9db666_Enum> _1ddab7ea1_Enum(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddab8215_TypeEnum(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddac14b5_Arr> _1ddab8479_Arr(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddabe31a_Slc> _1ddab86dd_Slc(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddab8952_Fn(_1ddab53cc_TypeKind*);
inline jule::Ptr<_2090d5c23_StructIns> _1ddab8bb6_Struct(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1dd9d9521_Trait> _1ddab8e2a_Trait(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddac08c1_Map> _1ddab918e_Map(_1ddab53cc_TypeKind*);
inline jule::Ptr<_1ddabed98_Tuple> _1ddab9403_Tup(_1ddab53cc_TypeKind*);
struct _1ddab53cc_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1ddab4e9d_Kind> _field_Kind;
	

	_1ddab53cc_TypeKind(void) = default;

	inline bool operator==(_1ddab53cc_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ddab53cc_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ddab9b62_checked(_1ddab97aa_TypeSymbol*);
inline void _1ddab9d3d_removeKind(_1ddab97aa_TypeSymbol*);
struct _1ddab97aa_TypeSymbol {
	jule::Ptr<_2090b9157_TypeDecl> _field_Decl;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Kind;
	

	_1ddab97aa_TypeSymbol(void) = default;

	inline bool operator==(_1ddab97aa_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ddab97aa_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddaba48c_Str(_1ddaba129_Prim*);
inline jule::Bool _1ddaba79a_Equal(jule::Ptr<_1ddaba129_Prim>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1ddabac1d_IsConstraint(_1ddaba129_Prim*);
inline jule::Bool _1ddabae82_IsI8(_1ddaba129_Prim*);
inline jule::Bool _1ddabb1e6_IsI16(_1ddaba129_Prim*);
inline jule::Bool _1ddabb45a_IsI32(_1ddaba129_Prim*);
inline jule::Bool _1ddabb6be_IsI64(_1ddaba129_Prim*);
inline jule::Bool _1ddabb933_IsU8(_1ddaba129_Prim*);
inline jule::Bool _1ddabbb97_IsU16(_1ddaba129_Prim*);
inline jule::Bool _1ddabbe0b_IsU32(_1ddaba129_Prim*);
inline jule::Bool _1ddabc170_IsU64(_1ddaba129_Prim*);
inline jule::Bool _1ddabc3d4_IsF32(_1ddaba129_Prim*);
inline jule::Bool _1ddabc648_IsF64(_1ddaba129_Prim*);
inline jule::Bool _1ddabc8ac_IsInt(_1ddaba129_Prim*);
inline jule::Bool _1ddabcb21_IsUint(_1ddaba129_Prim*);
inline jule::Bool _1ddabcd85_IsUintptr(_1ddaba129_Prim*);
inline jule::Bool _1ddabd0e9_IsBool(_1ddaba129_Prim*);
inline jule::Bool _1ddabd35d_IsStr(_1ddaba129_Prim*);
inline jule::Bool _1ddabd5c2_IsAny(_1ddaba129_Prim*);
struct _1ddaba129_Prim {
	jule::Str _field_Kind;
	

	_1ddaba129_Prim(void) = default;

	inline bool operator==(_1ddaba129_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ddaba129_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddabdc21_Str(_1ddabd8ad_Sptr*);
inline jule::Bool _1ddabe02e_Equal(jule::Ptr<_1ddabd8ad_Sptr>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1ddabd8ad_Sptr {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Elem;
	

	_1ddabd8ad_Sptr(void) = default;

	inline bool operator==(_1ddabd8ad_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ddabd8ad_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddabe826_Str(_1ddabe31a_Slc*);
inline jule::Bool _1ddabeb34_Equal(jule::Ptr<_1ddabe31a_Slc>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1ddabe31a_Slc {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Elem;
	

	_1ddabe31a_Slc(void) = default;

	inline bool operator==(_1ddabe31a_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ddabe31a_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddac020b_Str(_1ddabed98_Tuple*);
inline jule::Bool _1ddac0519_Equal(jule::Ptr<_1ddabed98_Tuple>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1ddabed98_Tuple {
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_Types;
	

	_1ddabed98_Tuple(void) = default;


};
inline jule::Str _1ddac0c34_Str(_1ddac08c1_Map*);
inline jule::Bool _1ddac1042_Equal(jule::Ptr<_1ddac08c1_Map>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1ddac08c1_Map {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Key;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Val;
	

	_1ddac08c1_Map(void) = default;

	inline bool operator==(_1ddac08c1_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ddac08c1_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddac1828_Str(_1ddac14b5_Arr*);
inline jule::Bool _1ddac1b36_Equal(jule::Ptr<_1ddac14b5_Arr>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1ddac14b5_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1ddab53cc_TypeKind> _field_Elem;
	

	_1ddac14b5_Arr(void) = default;

	inline bool operator==(_1ddac14b5_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ddac14b5_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1ddac2285_Str(_1ddac1e22_Ptr*);
inline jule::Bool _1ddac2593_Equal(jule::Ptr<_1ddac1e22_Ptr>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1ddac28e5_IsUnsafe(_1ddac1e22_Ptr*);
struct _1ddac1e22_Ptr {
	jule::Ptr<_1ddab53cc_TypeKind> _field_Elem;
	

	_1ddac1e22_Ptr(void) = default;

	inline bool operator==(_1ddac1e22_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ddac1e22_Ptr _other) { return !this->operator==(_other); }


};
struct _1ddac2d68_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1ddac2d68_referencer(void) = default;

	inline bool operator==(_1ddac2d68_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1ddac2d68_referencer _other) { return !this->operator==(_other); }


};
inline void _1ddac4452_pushErr(_1ddac3c48_typeChecker*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ddac462d_allowBuiltin(_1ddac3c48_typeChecker*);
inline void _1ddac4809_disallowBuiltin(_1ddac3c48_typeChecker*);
inline jule::Ptr<_1ddaba129_Prim> _1ddac4b17_buildPrim(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&);
inline void _20969e242_pushReference(_1ddac3c48_typeChecker*, jule::Ptr<_2090d5c23_StructIns>&);
inline void _2096a2135_pushReference(_1ddac3c48_typeChecker*, jule::Ptr<_1dd9d9521_Trait>&);
inline void _1ddac5112_pushReferenceByKind(_1ddac3c48_typeChecker*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1ddac54ca_pushCycleError(_1ddac3c48_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1ddac5882_checkCrossCycle(_1ddac3c48_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1ddac5c39_checkIllegalCycles(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1ddab4e9d_Kind> _1ddac60e1_fromTypeAlias(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_1ddab46d9_TypeAlias>&);
inline jule::Ptr<_1dd9db666_Enum> _1ddac6498_fromEnum(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_1dd9db666_Enum>&);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddac6850_fromTypeEnum(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_1dd9dcc61_TypeEnum>&);
inline jule::Ptr<_1dd9d9521_Trait> _1ddac6c07_fromTrait(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1ddac70ae_checkStructIns(_1ddac3c48_typeChecker*, jule::Ptr<_2090d5c23_StructIns>&, jule::Ptr<_222e62217_Token>&);
inline void _1ddac7356_appendUsedStructReference(_1ddac3c48_typeChecker*, jule::Ptr<_2090d5849_Struct>&);
inline jule::Ptr<_2090d5c23_StructIns> _1ddac771e_buildStructInstance(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_2090d5849_Struct>&);
inline jule::Ptr<_2090d5c23_StructIns> _1ddac7ac6_fromStruct(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&, jule::Ptr<_2090d5849_Struct>&);
inline jule::Trait<_1ddab4e9d_Kind> _1ddac7dd4_getDef(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>&);
inline jule::Trait<_1ddab4e9d_Kind> _1ddac81e2_buildIdent(_1ddac3c48_typeChecker*, jule::Ptr<_2090b971d_IdentTypeDecl>);
inline jule::Trait<_1ddab4e9d_Kind> _1ddac8500_buildSubIdent(_1ddac3c48_typeChecker*, jule::Ptr<_2090b9d6c_SubIdentTypeDecl>);
inline jule::Ptr<_1ddabd8ad_Sptr> _1ddac880d_buildSptrFromType(_1ddac3c48_typeChecker*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Ptr<_1ddabd8ad_Sptr> _1ddac8b1b_buildSptr(_1ddac3c48_typeChecker*, jule::Ptr<_2090ba510_SptrTypeDecl>);
inline jule::Ptr<_1ddac1e22_Ptr> _1ddac8e29_buildPtrFromType(_1ddac3c48_typeChecker*, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Ptr<_1ddac1e22_Ptr> _1ddac9237_buildPtr(_1ddac3c48_typeChecker*, jule::Ptr<_2090baed3_PtrTypeDecl>);
inline jule::Ptr<_1ddabe31a_Slc> _1ddac9545_buildSlc(_1ddac3c48_typeChecker*, jule::Ptr<_2090ba90b_SlcTypeDecl>);
inline jule::Ptr<_1ddac14b5_Arr> _1ddac9853_buildArr(_1ddac3c48_typeChecker*, jule::Ptr<_2090bb665_ArrTypeDecl>);
inline jule::Ptr<_1ddac08c1_Map> _1ddac9b61_buildMap(_1ddac3c48_typeChecker*, jule::Ptr<_2090bbdb3_MapTypeDecl>);
inline jule::Ptr<_1ddabed98_Tuple> _1ddac9e6e_buildTuple(_1ddac3c48_typeChecker*, jule::Ptr<_2090babe7_TupleTypeDecl>);
inline jule::Bool _1ddaca27c_checkFnTypes(_1ddac3c48_typeChecker*, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddaca58a_buildFn(_1ddac3c48_typeChecker*, jule::Ptr<_2090caad6_FnDecl>);
inline jule::Trait<_1ddab4e9d_Kind> _1ddaca898_buildByNamespace(_1ddac3c48_typeChecker*, jule::Ptr<_2090ba224_NamespaceTypeDecl>);
inline jule::Ptr<_1ddab53cc_TypeKind> _1ddacaba6_build(_1ddac3c48_typeChecker*, jule::Any&);
inline jule::Ptr<_1ddab53cc_TypeKind> _1ddacaeb4_checkDecl(_1ddac3c48_typeChecker*, jule::Ptr<_2090b9157_TypeDecl>&);
inline void _1ddacb239_check(_1ddac3c48_typeChecker*, jule::Ptr<_1ddab97aa_TypeSymbol>&);
struct _1ddac3c48_typeChecker {
	jule::Ptr<_1dda1da83_Sema> _field_s;
	jule::Trait<_1ddad134e_Lookup> _field_rootLookup;
	jule::Trait<_1ddad134e_Lookup> _field_lookup;
	jule::Ptr<_1ddac2d68_referencer> _field_referencer;
	jule::Ptr<_1dd9cd23a_ReferenceStack> _field_refers;
	jule::Ptr<_222e62217_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1ddab46d9_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1ddac3c48_typeChecker(void) = default;


};
inline jule::Bool static__1ddacb899_prim(jule::Str&, jule::Ptr<_1ddaba129_Prim>);
inline jule::Bool static__1ddacbbda_exist(jule::Str&, jule::Ptr<_1ddab53cc_TypeKind>&);
struct _1ddacb459_identTypeLookup {
	

	_1ddacb459_identTypeLookup(void) = default;

	inline bool operator==(_1ddacb459_identTypeLookup _other) { return true; }

	inline bool operator!=(_1ddacb459_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1de3b0c60_FileInfo {
	jule::Ptr<_209084bc2_Ast> _field_Ast;
	jule::Slice<_222b38ae2_Log> _field_Errors;
	

	_1de3b0c60_FileInfo(void) = default;


};
struct _1de40bcde_stmt {
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1de40bcde_stmt(void) = default;


};
inline void _1de40cc9b_stop(_1de40c619_scopeParser*);
inline jule::Bool _1de40d010_stopped(_1de40c619_scopeParser*);
inline jule::Bool _1de40d274_finished(_1de40c619_scopeParser*);
inline jule::Bool _1de40d4d8_isLastSt(_1de40c619_scopeParser*);
inline void _1de40d807_pushErr(_1de40c619_scopeParser*, jule::Ptr<_222e62217_Token>, jule::Str);
inline void _1de40db26_pushSuggestion(_1de40c619_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1de40dd9b_insertAsNext(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_1de40bcde_stmt> _1de40e110_next(_1de40c619_scopeParser*);
inline jule::Ptr<_2090c90e0_ScopeTree> _1de40e4b7_buildScope(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_2090cbab5_VarDecl> _1de40e7c5_buildVarSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cbe6c_RetSt> _1de40ead3_buildRetSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090cc5cc_Iter> _1de40ede1_buildWhileNextIter(_1de40c619_scopeParser*, jule::Ptr<_1de40bcde_stmt>&);
inline jule::Ptr<_2090ccda2_WhileKind> _1de4101ee_buildWhileIterKind(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de41050c_getRangeKindKeysTokens(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cbab5_VarDecl> _1de41081a_buildRangeKindKey(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _1de410b28_buildRangeKindKeys(_1de40c619_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>&);
inline void _1de410e69_setupRangeKindKeysPlain(_1de40c619_scopeParser*, jule::Ptr<_2090cd743_RangeKind>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de4112bb_setupRangeKindKeysExplicit(_1de40c619_scopeParser*, jule::Ptr<_2090cd743_RangeKind>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de4115eb_setupRangeKindKeys(_1de40c619_scopeParser*, jule::Ptr<_2090cd743_RangeKind>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cd743_RangeKind> _1de411a4c_buildRangeIterKind(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Any _1de411e04_buildCommonIterKind(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_2090cc5cc_Iter> _1de412212_buildCommonIter(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090cc5cc_Iter> _1de412520_buildIterSt(_1de40c619_scopeParser*, jule::Ptr<_1de40bcde_stmt>&);
inline jule::Ptr<_2090cdaea_BreakSt> _1de41282d_buildBreakSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cdea2_ContSt> _1de412b3b_buildContSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090ce425_If> _1de412e49_buildIf(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090ce7cc_Else> _1de413257_buildElse(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cec50_Conditional> _1de413565_buildIfElseChain(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090bd678_Expr> _1de413873_buildCoCallSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c6bae_GotoSt> _1de413b81_buildGotoSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c6e9a_FallSt> _1de413e8e_buildFallSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de41429c_buildTypeAliasSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de41470e_pushCaseExpr(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Ptr<_222e62217_Token>, jule::Bool, jule::Slice<jule::Ptr<_2090bd678_Expr>>&);
inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de414b60_buildCaseExprs(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>&, jule::Bool);
inline jule::Ptr<_2090c90e0_ScopeTree> _1de414e6d_buildCaseScope(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple_x_2090d0899_Case__jule_tuple_bool _1de415325_buildCase(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Bool);
inline __jule_tuple_sx_2090d0899_Case__jule_tuple_x_2090ce7cc_Else _1de4156cc_buildCases(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Bool);
inline jule::Ptr<_2090d1070_MatchCase> _1de4159da_buildMatchCase(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c90e0_ScopeTree> _1de415ce8_buildScopeSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c6807_LabelSt> _1de416106_buildLabelSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple__2090c87a4_StmtData__jule_tuple_bool _1de416414_buildIdSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_1de425434_assignInfo> _1de416722_buildAssignInfo(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c75a5_AssignLeft> _1de416a30_buildAssignL(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090c75a5_AssignLeft>> _1de416d3d_buildAssignLs(_1de40c619_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>&);
inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de41714b_buildPlainAssign(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de417459_buildDeclAssign(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de417767_buildAssignSt(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090be019_UseExpr> _1de417a75_buildUseExpr(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de417d83_buildSt(_1de40c619_scopeParser*, jule::Ptr<_1de40bcde_stmt>&);
inline void _1de4181a2_build(_1de40c619_scopeParser*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_2090c90e0_ScopeTree>&);
struct _1de40c619_scopeParser {
	jule::Ptr<_1de428c62_parser> _field_p;
	jule::Ptr<_2090c90e0_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1de40c619_scopeParser(void) = default;


};
inline void _1de4193c3_pushErr(_1de418b31_exprBuilder*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1de4196e2_pushSuggestion(_1de418b31_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2090be305_TupleExpr> _1de419a00_buildTuple(_1de418b31_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>&);
inline jule::Ptr<_2090be6ac_LitExpr> _1de419d0d_buildLit(_1de418b31_exprBuilder*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_2090b9157_TypeDecl> _1de41a11b_buildPrimitiveType(_1de418b31_exprBuilder*, jule::Ptr<_222e62217_Token>&);
inline jule::Any _1de41a429_buildSingle(_1de418b31_exprBuilder*, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_2090c0339_IdentExpr> _1de41a737_buildCppLinkedIdent(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c0a43_UnaryExpr> _1de41aa45_buildUnary(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c1acc_SubIdentExpr> _1de41ad53_buildObjSubIdent(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c1659_NsSelectionExpr> _1de41b161_buildNsSubIdent(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090b9157_TypeDecl> _1de41b46e_buildType(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de41b77c_buildSubIdent(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c0dea_VariadicExpr> _1de41ba8a_buildVariadic(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Any _1de41bd98_buildOpRight(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090bd964_RangeExpr> _1de41c1c8_buildBetweenParentheses(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c12a2_CastExpr> _1de41c4e7_tryBuildCast(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de41c8b0_pushArg(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_2090bd678_Expr>>&, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Ptr<_222e62217_Token>);
inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de41cbbd_buildArgs(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _1de41cecb_buildCallGenerics(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c265a_FnCallExpr> _1de41d42c_buildFnCall(_1de418b31_exprBuilder*, jule::Ptr<_222e62217_Token>&, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de41d73a_buildParenthesesRange(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090bedb6_UnsafeExpr> _1de41da48_buildUnsafeExpr(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090caad6_FnDecl> _1de41dd56_buildAnonFn(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de41e164_buildUnsafe(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de41e52c_pushRangeLitPart(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Ptr<_222e62217_Token>, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de41e85c_getBraceRangeLitExprParts(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c30d9_FieldExprPair> _1de41eb7b_buildFieldExprPair(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090bd678_Expr> _1de41ee89_buildStructLitExpr(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de420297_buildStructLitExprs(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c3837_StructLit> _1de4205c7_buildTypedStructLiteral(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090bd678_Expr> _1de4208e6_buildBraceLitPart(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c3caa_BraceLit> _1de420c04_buildBraceLit(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de421012_buildBraceRange(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de421320_getEnumerableParts(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c4c67_SliceExpr> _1de42162d_buildSlice(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c55d6_IndexingExpr> _1de421a7e_buildIndexing(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Ptr<_222e62217_Token>);
inline jule::Ptr<_2090c5be1_SlicingExpr> _1de422123_buildSlicing(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>&, jule::Ptr<_222e62217_Token>);
inline jule::Any _1de422431_buildBracketRange(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Any _1de42273e_buildData(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de422ae6_buildBinop(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64);
inline jule::Any _1de422e04_build(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de423212_buildKind(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090bd678_Expr> _1de423520_buildFromTokens(_1de418b31_exprBuilder*, jule::Slice<jule::Ptr<_222e62217_Token>>);
struct _1de418b31_exprBuilder {
	jule::Ptr<_1de428c62_parser> _field_p;
	

	_1de418b31_exprBuilder(void) = default;

	inline bool operator==(_1de418b31_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1de418b31_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1de425434_assignInfo {
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_l;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_r;
	jule::Ptr<_222e62217_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1de425434_assignInfo(void) = default;


};
inline void _1de429092_stop(_1de428c62_parser*);
inline jule::Bool _1de429306_stopped(_1de428c62_parser*);
inline void _1de4296be_pushErr(_1de428c62_parser*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1de4299dd_pushSuggestion(_1de428c62_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2090bd678_Expr> _1de429ceb_buildExpr(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_209085db0_Directive> _1de42a109_buildDirective(_1de428c62_parser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de42a37e_pushDirective(_1de428c62_parser*, jule::Ptr<_209085db0_Directive>);
inline jule::Ptr<_2090c90e0_ScopeTree> _1de42a736_buildScope(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>);
inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de42ab87__buildType(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64*, jule::Bool);
inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de42b0d8_buildType(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de42b3e6_buildTypeAliasDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de42b715_buildVarTypeAndExpr(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090cbab5_VarDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de42ba34_buildVarCommon(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090cbab5_VarDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de42bdec_buildVarBegin(_1de428c62_parser*, jule::Ptr<_2090cbab5_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090cbab5_VarDecl> _1de42c20a_buildVar(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c6450_GenericDecl> _1de42c518_buildGeneric(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _1de42c8c0_buildGenerics(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Ptr<_222e62217_Token>&);
inline jule::Ptr<_2090c97b6_ParamDecl> _1de42cbcd_buildSelfParam(_1de428c62_parser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de42d096_paramTypeBegin(_1de428c62_parser*, jule::Ptr<_2090c97b6_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de42d3b5_buildParamType(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090c97b6_ParamDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de42d6d4_buildParamBody(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090c97b6_ParamDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090c97b6_ParamDecl> _1de42d9e2_buildParam(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de42dc67_checkParams(_1de428c62_parser*, jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>> _1de42e11e_buildParams(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Bool);
inline __jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool _1de42e4c6_buildMultiRetType(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64&);
inline __jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool _1de42e87d_buildRetType(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64&);
inline jule::Ptr<_2090caad6_FnDecl> _1de42ecce_buildFnPrototype(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_2090caad6_FnDecl> _1de430230_buildFn(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de43053d_getUseDeclSelectors(_1de428c62_parser*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de43085c_buildCppUseDecl(_1de428c62_parser*, jule::Ptr<_2090d1812_UseDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de430b7b_buildStdUseDecl(_1de428c62_parser*, jule::Ptr<_2090d1812_UseDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de430e9a_buildIdentUseDecl(_1de428c62_parser*, jule::Ptr<_2090d1812_UseDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline void _1de4312b9_parseUseDecl(_1de428c62_parser*, jule::Ptr<_2090d1812_UseDecl>&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d1812_UseDecl> _1de431671_buildUseDecl(_1de428c62_parser*, jule::Slice<jule::Ptr<_222e62217_Token>>, jule::Bool);
inline jule::Ptr<_2090b9157_TypeDecl> _1de431a28_buildTypeEnumItemKind(jule::Ptr<_1de428c62_parser>, jule::I64&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>> _1de431d36_buildTypeEnumItems(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090d38be_TypeEnumDecl> _1de432144_buildTypeEnumDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090bd678_Expr> _1de4324eb_buildEnumItemExpr(jule::Ptr<_1de428c62_parser>, jule::I64&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>> _1de432809_buildEnumItems(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090d27ad_EnumDecl> _1de432b17_buildEnumDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Any _1de432e25_buildNodeEnumDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090d3abc_FieldDecl> _1de433233_buildField(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>> _1de433541_buildStructDeclFields(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d4370_StructDecl> _1de43384e_buildStructDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de433ac4_checkMethodReceiver(_1de428c62_parser*, jule::Ptr<_2090caad6_FnDecl>&);
inline jule::Slice<jule::Ptr<_2090caad6_FnDecl>> _1de433dd2_buildTraitMethods(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d497a_TraitDecl> _1de4341e0_buildTraitDecl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090caad6_FnDecl> _1de4344ed_buildCppLinkFn(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090cbab5_VarDecl> _1de43480b_buildCppLinkVar(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d4370_StructDecl> _1de434b19_buildCppLinkStruct(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de434e27_buildCppLinkTypeAlias(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_2090d1812_UseDecl> _1de435235_buildCppLinkUse(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Any _1de435543_buildCppLink(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090caad6_FnDecl> _1de435851_getMethod(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de435b70_parseImplBody(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090d5085_Impl>&, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090d5085_Impl> _1de435e7d_buildImpl(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Any _1de43628b_buildNodeData(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de436511_applyFnMeta(_1de428c62_parser*, jule::Ptr<_2090caad6_FnDecl>&);
inline void _1de436786_applyMeta(_1de428c62_parser*, _2090859b4_Node&);
inline void _1de436a0b_pushUseDecl(jule::Ptr<_1de428c62_parser>, jule::Ptr<_2090d1812_UseDecl>&);
inline jule::Bool _1de436d19_pushMetaNodes(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline _2090859b4_Node _1de437127_parseNode(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de43739c_appendNode(jule::Ptr<_1de428c62_parser>, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de43780e_removeRange(_1de428c62_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::I64>&);
inline void _1de437bc7_pushWrongOrderCloseErr(_1de428c62_parser*, jule::Ptr<_222e62217_Token>&, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::I64>&);
inline void _1de438139_pushRangeClose(_1de428c62_parser*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Slice<jule::I64>&);
inline void _1de4383ae_checkRanges(_1de428c62_parser*, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline void _1de438634_parse(jule::Ptr<_1de428c62_parser>, jule::Ptr<_222e675a2_File>&);
struct _1de428c62_parser {
	jule::Ptr<_209084bc2_Ast> _field_ast;
	jule::Slice<jule::Ptr<_209085db0_Directive>> _field_directives;
	jule::Slice<_222b38ae2_Log> _field_errors;
	

	_1de428c62_parser(void) = default;


};
inline void _1de43a04d_pushErr(_1de439976_typeBuilder*, jule::Ptr<_222e62217_Token>, jule::Str);
inline void _1de43a36c_pushSuggestion(_1de439976_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43a5d1_buildPrim(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43a845_buildNamespace(_1de439976_typeBuilder*);
inline jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _1de43aaa9_buildGenerics(_1de439976_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de43ad1d_identGenerics(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43b082_buildIdent(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43b2e6_buildCppLink(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43b55a_buildFn(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43b7be_buildPtr(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43ba33_buildSptr(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43bc97_buildOp(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43c00b_buildSlc(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43c270_buildArr(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43c4d4_buildMap(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43c748_buildEnumerable(_1de439976_typeBuilder*);
inline jule::Ptr<_2090b9157_TypeDecl> _1de43c9ac_step(_1de439976_typeBuilder*);
inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de43cc21_build(_1de439976_typeBuilder*);
struct _1de439976_typeBuilder {
	jule::Ptr<_1de428c62_parser> _field_p;
	jule::Slice<jule::Ptr<_222e62217_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1de439976_typeBuilder(void) = default;


};
struct _1ddc6426d_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1ddc6426d_CompileInfo(void) = default;

	inline bool operator==(_1ddc6426d_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ddc6426d_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1ddc65b21_pushErr(_1ddc655c1_directiveEval*, jule::Ptr<_222e62217_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1ddc65ec8_splitOperans(_1ddc655c1_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Bool _1ddc662d6_evalDirectiveIdent(_1ddc655c1_directiveEval*, jule::Str);
inline jule::Bool _1ddc665e4_evalDirectivePart(_1ddc655c1_directiveEval*, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Bool _1ddc66858_eval(_1ddc655c1_directiveEval*);
struct _1ddc655c1_directiveEval {
	jule::Slice<_222b38ae2_Log> _field_logs;
	jule::Ptr<_209085db0_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1ddc655c1_directiveEval(void) = default;


};
inline jule::Ptr<_1de331450_JuleImporter> static__1ddd5adae_New(_1ddc6426d_CompileInfo);
inline jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _1ddd9e474_AllPackages(_1de331450_JuleImporter*);
inline void _1dddbd5b4_SetModPath(_1de331450_JuleImporter*, jule::Str);
inline jule::Str _1dddcec35_GetModPath(_1de331450_JuleImporter*);
inline jule::Str _1dde0b37c_ModById(_1de331450_JuleImporter*, jule::I64);
inline jule::Ptr<_1dda15937_ImportInfo> _1dde1099c_GetImport(_1de331450_JuleImporter*, jule::Str);
inline __jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log _1ddec38a6_ImportPackage(_1de331450_JuleImporter*, jule::Str, jule::Bool);
inline void _1dded262e_Imported(_1de331450_JuleImporter*, jule::Ptr<_1dda15937_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_222b38ae2_Log _1dded4e4a_isPassBuildDirectives(_1de331450_JuleImporter*, jule::Ptr<_209084bc2_Ast>&);
struct _1de331450_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1de331450_JuleImporter(void) = default;


};
struct _1ddc7c000_OrderedDefines {
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Globals;
	

	_1ddc7c000_OrderedDefines(void) = default;


};
inline jule::Bool _1d4717511_isCommonOrdered(jule::Slice<jule::Ptr<_2090d5849_Struct>>, jule::Ptr<_2090d5849_Struct>);
inline jule::Bool _1d471e79e_isCommonOrdered(jule::Slice<jule::Ptr<_1dda418db_Var>>, jule::Ptr<_1dda418db_Var>);
inline void _1d470bc31_orderCommon(jule::Slice<jule::Ptr<_2090d5849_Struct>>&);
inline void _1d470c5c2_orderCommon(jule::Slice<jule::Ptr<_1dda418db_Var>>&);
inline void static__1de073390_orderStructures(jule::Slice<jule::Ptr<_2090d5849_Struct>>&);
inline void static__1de202079_orderVars(jule::Slice<jule::Ptr<_1dda418db_Var>>&);
struct _1ddd53db8_defineOrderer {
	

	_1ddd53db8_defineOrderer(void) = default;

	inline bool operator==(_1ddd53db8_defineOrderer _other) { return true; }

	inline bool operator!=(_1ddd53db8_defineOrderer _other) { return !this->operator==(_other); }


};
struct _2173a1c06_liveTable {
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1dd9ca2c0_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_2090d5c23_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1dd9d9521_Trait>> _field_traits;
	

	_2173a1c06_liveTable(void) = default;


};
inline void _1de503dd6_optimizeChild(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1de50417d_optimizeBodyChildExceptional(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1de504414_optimizeBodyChild(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1de504689_optimizeExprModel(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Any&);
inline void _1de504865_eliminateFollowed(_1de50390d_scopeDeadCode*);
inline void _1de504ada_pushGoto(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e9c5c_GotoSt>);
inline void _1de504d60_pushLabel(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e9971_Label>);
inline void _1de5050d5_optimizeRangeIter(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e8dd2_RangeIter>);
inline void _1de50535a_optimizeWhileIter(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e84ec_WhileIter>);
inline void _1de5055d0_optimizeInfIter(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e8079_InfIter>);
inline void _1de505855_optimizeConditional(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9e7c8d_Conditional>);
inline void _1de505aca_optimizeMatch(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9eae7d_Match>);
inline void _1de505d50_optimizeAssign(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9ea587_Assign>);
inline void _1de5060c5_optimizeMultiAssign(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Ptr<_1dd9ea93e_MultiAssign>);
inline void _1de50634a_optimizeStmt(jule::Ptr<_1de50390d_scopeDeadCode>, jule::Any);
inline void _1de506526_optimizeStmts(jule::Ptr<_1de50390d_scopeDeadCode>);
struct _1de50390d_scopeDeadCode {
	jule::Ptr<_1de50390d_scopeDeadCode> _field_parent;
	jule::Ptr<_1dd9e7232_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1dd9e9971_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1dd9e9c5c_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1de50390d_scopeDeadCode(void) = default;

	inline bool operator==(_1de50390d_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1de50390d_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1de507868_exprDeadCode static__1de507e95_new(jule::Ptr<_1de50390d_scopeDeadCode>&);
inline void _1de50821a_binary(_1de507868_exprDeadCode*, jule::Ptr<_1dd9b9336_BinopExprModel>);
inline void _1de508490_unary(_1de507868_exprDeadCode*, jule::Ptr<_1dd9b96dd_UnaryExprModel>);
inline void _1de508715_structureLit(_1de507868_exprDeadCode*, jule::Ptr<_1dd9b9e91_StructLitExprModel>);
inline void _1de50898a_allocStructure(_1de507868_exprDeadCode*, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel>);
inline void _1de508c10_casting(_1de507868_exprDeadCode*, jule::Ptr<_1dd9ba7ee_CastingExprModel>);
inline void _1de508e85_args(_1de507868_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1de50920a_funcCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bb1a1_FnCallExprModel>);
inline void _1de509480_slice(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bb558_SliceExprModel>);
inline void _1de509705_array(_1de507868_exprDeadCode*, jule::Ptr<_1dd9be34c_ArrayExprModel>);
inline void _1de50997a_indexing(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bb9cb_IndexingExprModel>);
inline void _1de509c00_anonFunc(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bbd83_AnonFnExprModel>);
inline void _1de509e75_mapExpr(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bc6ad_MapExprModel>);
inline void _1de50a1ea_slicing(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bcbec_SlicingExprModel>);
inline void _1de50a470_traitSub(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel>);
inline void _1de50a6e5_structureSub(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel>);
inline void _1de50a96a_commonSub(_1de507868_exprDeadCode*, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel>);
inline void _1de50abe0_tuple(_1de507868_exprDeadCode*, jule::Ptr<_1dd9bee96_TupleExprModel>);
inline void _1de50ae65_newCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel>);
inline void _1de50b1da_outCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel>);
inline void _1de50b460_outlnCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel>);
inline void _1de50b6d5_panicCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel>);
inline void _1de50b95a_assertCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel>);
inline void _1de50bbd0_errorCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel>);
inline void _1de50be55_makeCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>);
inline void _1de50c1ca_appendCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel>);
inline void _1de50c450_lenCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel>);
inline void _1de50c6c5_capCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel>);
inline void _1de50c94a_cloneCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel>);
inline void _1de50cbc0_deleteCall(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>);
inline void _1de50ce45_sizeof(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c39d3_SizeofExprModel>);
inline void _1de50d1ba_alignof(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c3cbe_AlignofExprModel>);
inline void _1de50d440_integratedToStr(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel>);
inline void _1de50d6b5_free(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c4a6c_FreeExprModel>);
inline void _1de50d93a_backendEmit(_1de507868_exprDeadCode*, jule::Ptr<_1dd9c4781_BackendEmitExprModel>);
inline void _1de50dbb0_optimize(_1de507868_exprDeadCode*, jule::Any&);
struct _1de507868_exprDeadCode {
	jule::Ptr<_1de50390d_scopeDeadCode> _field_s;
	

	_1de507868_exprDeadCode(void) = default;

	inline bool operator==(_1de507868_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1de507868_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ddb7989d_UnsafeBinopExprModel {
	jule::Ptr<_1dd9b9336_BinopExprModel> _field_Node;
	

	_1ddb7989d_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1ddb7989d_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ddb7989d_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ddb79bbc_UnsafeIndexingExprModel {
	jule::Ptr<_1dd9bb9cb_IndexingExprModel> _field_Node;
	

	_1ddb79bbc_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1ddb79bbc_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ddb79bbc_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ddb7a085_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1dd9bb558_SliceExprModel> _field_Elems;
	

	_1ddb7a085_PushToSliceExprModel(void) = default;

	inline bool operator==(_1ddb7a085_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ddb7a085_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ddb7a64b_MutSlicingExprModel {
	jule::Ptr<_222e62217_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1ddb7a64b_MutSlicingExprModel(void) = default;

	inline bool operator==(_1ddb7a64b_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ddb7a64b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ddb7a9e2_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1ddb7a9e2_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1ddb7a9e2_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ddb7a9e2_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ddb7bb9c_scopeOptimizer> static__1ddb7c1b9_new(jule::Ptr<_1dd9e7232_Scope>);
inline void _1ddb7c43e_setCurrentStmt(_1ddb7bb9c_scopeOptimizer*, jule::Any);
inline void _1ddb82543_optimizeData(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dda8944a_Data>);
inline void _1ddb82796_optimizeVar(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dda418db_Var>);
inline void _1ddb82a1b_optimizeConditional(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9e7c8d_Conditional>);
inline void _1ddb82e06_buildDefaultConstatTrueCase(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9eb9c8_Case>, jule::I64&, jule::Ptr<_1dd9eae7d_Match>&);
inline void _1ddb83115_optimizeMatch(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9eae7d_Match>);
inline void _1ddb8338a_optimizeRangeIter(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9e8dd2_RangeIter>);
inline void _1ddb83610_optimizeWhileIter(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9e84ec_WhileIter>);
inline jule::Bool _1ddb8391d_substr(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ea587_Assign>);
inline jule::Bool _1ddb83c2b_strInsert(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ea587_Assign>);
inline jule::Bool _1ddb84039_strAssign(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ea587_Assign>);
inline void _1ddb842ae_optimizeAssign(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ea587_Assign>);
inline void _1ddb84534_optimizeMultiAssign(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ea93e_MultiAssign>);
inline void _1ddb847a9_optimizeRet(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9ec402_RetSt>);
inline void _1ddb84a2e_optimizeStmt(_1ddb7bb9c_scopeOptimizer*, jule::Any);
inline void _1ddb84ca4_optimizeChild(_1ddb7bb9c_scopeOptimizer*, jule::Ptr<_1dd9e7232_Scope>);
inline void _1ddb84e80_optimize(_1ddb7bb9c_scopeOptimizer*);
struct _1ddb7bb9c_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1dd9e7232_Scope> _field_scope;
	

	_1ddb7bb9c_scopeOptimizer(void) = default;

	inline bool operator==(_1ddb7bb9c_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ddb7bb9c_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1ddb875d1_optimize(jule::Any&);
inline jule::Bool _1ddb878de_strCond(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9b9336_BinopExprModel>);
inline void _1ddb87b64_binary(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9b9336_BinopExprModel>);
inline void _1ddb87dd9_unary(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9b96dd_UnaryExprModel>);
inline void _1ddb8815e_structureLit(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9b9e91_StructLitExprModel>);
inline void _1ddb883d4_allocStructure(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel>);
inline void _1ddb88659_casting(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9ba7ee_CastingExprModel>);
inline void _1ddb888ce_args(_1ddb870c5_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1ddb88b54_scope(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1ddb88dc9_funcCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bb1a1_FnCallExprModel>);
inline void _1ddb8914e_slice(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bb558_SliceExprModel>);
inline void _1ddb893c4_array(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9be34c_ArrayExprModel>);
inline void _1ddb89649_indexing(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bb9cb_IndexingExprModel>);
inline void _1ddb898be_anonFunc(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bbd83_AnonFnExprModel>);
inline void _1ddb89b44_mapExpr(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bc6ad_MapExprModel>);
inline void _1ddb89db9_slicing(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bcbec_SlicingExprModel>);
inline void _1ddb8a13e_traitSub(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel>);
inline void _1ddb8a3b4_structureSub(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel>);
inline void _1ddb8a639_commonSub(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel>);
inline void _1ddb8a8ae_tuple(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9bee96_TupleExprModel>);
inline void _1ddb8ab34_newCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel>);
inline void _1ddb8ada9_outCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel>);
inline void _1ddb8b12e_outlnCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel>);
inline void _1ddb8b3a4_panicCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel>);
inline void _1ddb8b629_assertCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel>);
inline void _1ddb8b89e_errorCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel>);
inline void _1ddb8bb24_makeCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>);
inline void _1ddb8bd99_appendCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel>);
inline void _1ddb8c11e_lenCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel>);
inline void _1ddb8c394_capCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel>);
inline void _1ddb8c619_cloneCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel>);
inline void _1ddb8c88e_deleteCall(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>);
inline void _1ddb8cb14_sizeof(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c39d3_SizeofExprModel>);
inline void _1ddb8cd89_alignof(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c3cbe_AlignofExprModel>);
inline void _1ddb8d10e_integratedToStr(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel>);
inline void _1ddb8d384_free(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c4a6c_FreeExprModel>);
inline void _1ddb8d609_backendEmit(_1ddb870c5_exprOptimizer*, jule::Ptr<_1dd9c4781_BackendEmitExprModel>);
inline void _1ddb8d7d5_do(_1ddb870c5_exprOptimizer*);
struct _1ddb870c5_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1ddb870c5_exprOptimizer(void) = default;

	inline bool operator==(_1ddb870c5_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ddb870c5_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21736d94d_Optimizer> static__21734a199_New(jule::Ptr<_1dded98cd_IR>&);
inline void _21735997d_optimizeGlobal(_21736d94d_Optimizer*, jule::Ptr<_1dda418db_Var>&);
inline void _217362b84_optimizeFunction(_21736d94d_Optimizer*, jule::Ptr<_1dd9c761e_Fn>&);
inline void _2173728ca_optimizeStruct(_21736d94d_Optimizer*, jule::Ptr<_2090d5849_Struct>&);
inline void _217374118_optimizeGlobals(_21736d94d_Optimizer*, jule::Ptr<_1dda18891_Package>&);
inline void _21734ced2_optimizeFunctions(_21736d94d_Optimizer*, jule::Ptr<_1dda18891_Package>&);
inline void _21736d1de_optimizeStructs(_21736d94d_Optimizer*, jule::Ptr<_1dda18891_Package>&);
inline void _2173a329b_optimizePackage(_21736d94d_Optimizer*, jule::Ptr<_1dda18891_Package>&);
inline void _2173a5149_Optimize(_21736d94d_Optimizer*);
struct _21736d94d_Optimizer {
	jule::Ptr<_1dded98cd_IR> _field_ir;
	

	_21736d94d_Optimizer(void) = default;

	inline bool operator==(_21736d94d_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_21736d94d_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1de525677_Reset(void);
inline void static__1de526920_Print(jule::Str, jule::Str);
struct _1de526733_AnsiEscape {
	

	_1de526733_AnsiEscape(void) = default;

	inline bool operator==(_1de526733_AnsiEscape _other) { return true; }

	inline bool operator!=(_1de526733_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1de527ea4_LogFlat(_222b38ae2_Log&);
inline void static__1de5281b3_LogError(_222b38ae2_Log&);
inline void static__1de5283c2_Log(_222b38ae2_Log&);
inline void static__1de5285d1_PrintLogs(jule::Slice<_222b38ae2_Log>&);
struct _1de527c51_Logger {
	

	_1de527c51_Logger(void) = default;

	inline bool operator==(_1de527c51_Logger _other) { return true; }

	inline bool operator!=(_1de527c51_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1c56cad74_Unix(_1c56ca9bc_AbsTime*);
struct _1c56ca9bc_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1c56ca9bc_AbsTime(void) = default;

	inline bool operator==(_1c56ca9bc_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1c56ca9bc_AbsTime _other) { return !this->operator==(_other); }


};
inline _1c56cb160_Time static__1c56cb506_Unix(jule::U64);
inline _1c56cb160_Time static__1c56cb704_Now(void);
inline jule::U64 _1c56cbb55_Unix(_1c56cb160_Time*);
inline jule::U64 _1c56cbdb9_Day(_1c56cb160_Time*);
inline jule::U64 _1c56cc12d_Month(_1c56cb160_Time*);
inline jule::U64 _1c56cc392_Year(_1c56cb160_Time*);
inline jule::U64 _1c56cc606_Second(_1c56cb160_Time*);
inline jule::U64 _1c56cc86a_Minute(_1c56cb160_Time*);
inline jule::U64 _1c56ccace_Hour(_1c56cb160_Time*);
inline _1c56ca9bc_AbsTime _1c56ccd43_Abs(_1c56cb160_Time*);
struct _1c56cb160_Time {
	jule::U64 _field_sec = 0;
	

	_1c56cb160_Time(void) = default;

	inline bool operator==(_1c56cb160_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1c56cb160_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c5626462_scopeCoder> static__1c5626a7d_new(jule::Ptr<_1c56d2e7a_ObjectCoder>&);
inline void _1c5626d03_rangeIndexIter(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e8dd2_RangeIter>&);
inline void _1c5627078_rangeHashmapIter(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e8dd2_RangeIter>&);
inline void _1c56272ed_ifCase(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e762d_If>);
inline void _1c5627573_conditional(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e7c8d_Conditional>);
inline void _1c56277e8_infIter(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e8079_InfIter>);
inline void _1c5627a6d_whileIter(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e84ec_WhileIter>);
inline void _1c5627ce3_rangeIter(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e8dd2_RangeIter>);
inline void _1c5628068_cont(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e92cd_ContSt>);
inline void _1c56282dd_label(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e9971_Label>);
inline void _1c5628563_gotoSt(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e9c5c_GotoSt>);
inline void _1c56287d8_postfix(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea114_Postfix>);
inline void _1c5628a5d_assign(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea587_Assign>);
inline void _1c5628cd3_mapLookupAssign(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea93e_MultiAssign>&);
inline void _1c5629058_multiAssignTup(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea93e_MultiAssign>&);
inline void _1c56292cd_multiAssignFn(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea93e_MultiAssign>&);
inline void _1c5629553_multiAssign(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ea93e_MultiAssign>);
inline jule::Fn<void(void)> _1c5629861_matchExpr(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9eae7d_Match>);
inline void _1c5629b80_case(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9eae7d_Match>, jule::Ptr<_1dd9eb9c8_Case>);
inline void _1c5629e05_matchSt(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9eae7d_Match>);
inline void _1c562a17a_fallSt(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ec07d_FallSt>);
inline void _1c562a400_breakSt(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e9685_BreakSt>);
inline void _1c562a675_setResult(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ec402_RetSt>);
inline void _1c562a8ea_retSt(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ec402_RetSt>);
inline void _1c562ab70_var(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dda418db_Var>);
inline void _1c562ade5_st(jule::Ptr<_1c5626462_scopeCoder>, jule::Any);
inline void _1c562b16a_scopeStmts(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e7232_Scope>&);
inline void _1c562b3e0_scope(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9e7232_Scope>);
inline void _1c562b665_funcScope(jule::Ptr<_1c5626462_scopeCoder>, jule::Ptr<_1dd9ca2c0_FnIns>);
struct _1c5626462_scopeCoder {
	jule::Ptr<_1c56d2e7a_ObjectCoder> _field_oc;
	

	_1c5626462_scopeCoder(void) = default;

	inline bool operator==(_1c5626462_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c5626462_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c562e107_exprCoder> static__1c562e503_new(jule::Ptr<_1c56d2e7a_ObjectCoder>&);
inline void _1c562e778_string(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ad050_Const>&);
inline void _1c562e9ed_boolean(jule::Ptr<_1c562e107_exprCoder>, jule::Bool);
inline void _1c562ebc9_nilLit(jule::Ptr<_1c562e107_exprCoder>);
inline jule::Bool _1c562eed7_ftoaSpecialCases(jule::Ptr<_1c562e107_exprCoder>, jule::F64&);
inline void _1c563025c_float32(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ad050_Const>&);
inline void _1c56304d2_float64(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ad050_Const>&);
inline void _1c5630757_constant(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ad050_Const>);
inline void _1c5630b20_divByZeroBinary(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_222e62217_Token>&, jule::Ptr<_1dd9b8d6e_OperandExprModel>&, jule::Ptr<_1dd9b8d6e_OperandExprModel>&);
inline void _1c5630d95_unsafeBinary(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9b9336_BinopExprModel>);
inline void _1c563111a_binary(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9b9336_BinopExprModel>);
inline void _1c5631390_var(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dda418db_Var>);
inline void _1c5631615_structureIns(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_2090d5c23_StructIns>);
inline void _1c563188a_unary(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9b96dd_UnaryExprModel>);
inline void _1c5631b10_structureLit(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9b9e91_StructLitExprModel>);
inline void _1c5631d85_allocStructure(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel>);
inline void _1c563210a_casting(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ba7ee_CastingExprModel>);
inline void _1c5632380_args(jule::Ptr<_1c562e107_exprCoder>, jule::Slice<jule::Any>);
inline void _1c5632605_modelForCall(jule::Ptr<_1c562e107_exprCoder>, jule::Any);
inline void _1c563287a_pushCallInf(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb1a1_FnCallExprModel>&);
inline jule::Bool _1c5632b88_isWrapped(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb1a1_FnCallExprModel>&);
inline void _1c5632e0d_pureFuncCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb1a1_FnCallExprModel>&);
inline void _1c5633183_coFuncCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb1a1_FnCallExprModel>&);
inline void _1c56334a2_writeUseExpr(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Ptr<_1dda8944a_Data>);
inline void _1c5633727_funcCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb1a1_FnCallExprModel>);
inline void _1c563399c_slice(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb558_SliceExprModel>);
inline void _1c5633c22_indexing(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bb9cb_IndexingExprModel>);
inline void _1c5633e97_unsafeIndexing(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1ddb79bbc_UnsafeIndexingExprModel>);
inline void _1c563421c_anonFunc(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bbd83_AnonFnExprModel>);
inline void _1c5634492_mapExpr(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bc6ad_MapExprModel>);
inline void _1c5634717_slicing(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bcbec_SlicingExprModel>);
inline void _1c563498c_traitSub(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel>);
inline void _1c5634c12_structureSub(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel>);
inline void _1c5634e87_commonIdent(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9be638_CommonIdentExprModel>);
inline void _1c563520c_commonSub(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel>);
inline void _1c5635482_array(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9be34c_ArrayExprModel>);
inline void _1c5635707_funcInsCommon(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1c563597c_funcIns(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1c5635c02_tuple(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bee96_TupleExprModel>);
inline void _1c5635e77_newCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel>);
inline void _1c56361ec_outCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel>);
inline void _1c5636472_outlnCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel>);
inline void _1c56366e7_panicCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel>);
inline void _1c563696c_assertCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel>);
inline void _1c5636be2_errorCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel>);
inline void _1c5636e67_copyCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c32eb_BuiltinCopyCallExprModel>);
inline void _1c56371dc_lenCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel>);
inline void _1c5637462_capCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel>);
inline void _1c56376d7_deleteCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>);
inline void _1c563795c_makeCallSlice(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>&);
inline void _1c5637bd2_makeCallStr(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>&);
inline void _1c5637e57_makeCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>);
inline void _1c56381cc_pushToSlice(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1ddb7a085_PushToSliceExprModel>);
inline void _1c5638452_appendCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel>);
inline void _1c56386c7_cloneCall(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel>);
inline void _1c563894c_sizeof(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c39d3_SizeofExprModel>);
inline void _1c5638bc2_alignof(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c3cbe_AlignofExprModel>);
inline jule::Str _1c5638ed0_runeLit(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c40aa_RuneExprModel>);
inline void _1c5639255_structureStatic(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9bde84_StructStaticIdentExprModel>);
inline void _1c56394ca_integratedToStr(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel>);
inline void _1c5639750_backendEmit(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c4781_BackendEmitExprModel>);
inline void _1c56399c5_free(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dd9c4a6c_FreeExprModel>);
inline void _1c5639c4a_mutSlicing(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1ddb7a64b_MutSlicingExprModel>);
inline void _1c5639ec0_strInsertBegin(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1ddb7a9e2_StrInsertBeginExprModel>);
inline void _1c563a245_model(jule::Ptr<_1c562e107_exprCoder>, jule::Any);
inline void _1c563a4ba_expr(jule::Ptr<_1c562e107_exprCoder>, jule::Any);
inline void _1c563a740_val(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1dda8a4c3_Value>);
inline void _1c563a9b5_initExpr(jule::Ptr<_1c562e107_exprCoder>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1c562e107_exprCoder {
	jule::Ptr<_1c56d2e7a_ObjectCoder> _field_oc;
	

	_1c562e107_exprCoder(void) = default;

	inline bool operator==(_1c562e107_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c562e107_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c563d26a_deriveCoder> static__1c563d644_new(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline jule::Str _1c563d952_cloneFuncDecl(_1c563d26a_deriveCoder*, jule::Ptr<_2090d5849_Struct>&);
inline jule::Str _1c563dc60_cloneFuncDef(_1c563d26a_deriveCoder*, jule::Ptr<_2090d5849_Struct>&);
struct _1c563d26a_deriveCoder {
	jule::Ptr<_1c56d2e7a_ObjectCoder> _field_oc;
	

	_1c563d26a_deriveCoder(void) = default;

	inline bool operator==(_1c563d26a_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c563d26a_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c563eb40_TestCoder> static__1c56400b3_New(jule::Ptr<_1c56d2e7a_ObjectCoder>&);
inline jule::Ptr<_1dda15937_ImportInfo> _1c5640327_findTestingPackage(jule::Ptr<_1c563eb40_TestCoder>);
inline void _1c564059c_appendTest(jule::Ptr<_1c563eb40_TestCoder>, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1c5640822_appendPackageTests(jule::Ptr<_1c563eb40_TestCoder>, jule::Ptr<_1dda18891_Package>&);
inline jule::Bool _1c5640a86_readyTestingPackage(jule::Ptr<_1c563eb40_TestCoder>);
inline void _1c5640c62_callTmReset(jule::Ptr<_1c563eb40_TestCoder>);
inline void _1c5640e3d_callTmFailed(jule::Ptr<_1c563eb40_TestCoder>);
inline void _1c5641119_callTmSkipped(jule::Ptr<_1c563eb40_TestCoder>);
inline void _1c56412e5_Serialize(jule::Ptr<_1c563eb40_TestCoder>);
struct _1c563eb40_TestCoder {
	jule::Ptr<_2090d5c23_StructIns> _field_t;
	jule::Ptr<_1dd9c761e_Fn> _field_tmReset;
	jule::Ptr<_1dd9c761e_Fn> _field_tmFailed;
	jule::Ptr<_1dd9c761e_Fn> _field_tmSkipped;
	jule::Ptr<_1c56d2e7a_ObjectCoder> _field_oc;
	

	_1c563eb40_TestCoder(void) = default;

	inline bool operator==(_1c563eb40_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1c563eb40_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1c5642758_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1c5642b43_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1c5642dda_func(jule::Ptr<_1dd9c761e_Fn>&);
inline jule::Str static__1c5643182_funcIns(jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Str static__1c5643429_traitDecl(jule::Ptr<_1dd9d9521_Trait>);
inline jule::Str static__1c56436c1_param(jule::Ptr<_1dd9c5cd2_Param>&);
inline jule::Str static__1c5643968_structure(jule::Ptr<_2090d5849_Struct>&);
inline jule::Str static__1c5643c10_structureIns(jule::Ptr<_2090d5c23_StructIns>&);
inline jule::Str static__1c5643ea7_field(jule::Ptr<_2090a98a6_Field>&);
inline jule::Str static__1c564424e_var(jule::Ptr<_1dda418db_Var>);
inline jule::Str static__1c56444e6_iterBegin(jule::Uintptr);
inline jule::Str static__1c564478d_iterEnd(jule::Uintptr);
inline jule::Str static__1c5644a35_iterNext(jule::Uintptr);
inline jule::Str static__1c5644ccc_label(jule::Str&);
inline jule::Str static__1c5645074_matchEnd(jule::Uintptr);
inline jule::Str static__1c564531b_caseBegin(jule::Uintptr);
struct _1c5642291_identCoder {
	

	_1c5642291_identCoder(void) = default;

	inline bool operator==(_1c5642291_identCoder _other) { return true; }

	inline bool operator!=(_1c5642291_identCoder _other) { return !this->operator==(_other); }


};
struct _1c5674a32_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1c5674a32_SerializationInfo(void) = default;

	inline bool operator==(_1c5674a32_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1c5674a32_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1c564a046_traitHash {
	jule::Ptr<_1dd9d9521_Trait> _field_t;
	jule::Ptr<_2090d5c23_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1c564a046_traitHash(void) = default;

	inline bool operator==(_1c564a046_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1c564a046_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1c56d8cb6_Str(_1c56d89ca_customType*);
inline jule::Bool _1c56d90c4_Equal(jule::Ptr<_1c56d89ca_customType>, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1c56d89ca_customType {
	jule::Str _field_kind;
	

	_1c56d89ca_customType(void) = default;

	inline bool operator==(_1c56d89ca_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1c56d89ca_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c56d947b_typeCoder> static__1c56d99ba_new(jule::Ptr<_1c56d2e7a_ObjectCoder>&);
inline jule::Str _1c56d9cc8_toType(_1c56d947b_typeCoder*, jule::Str);
inline jule::Str _1c56da0d6_prim(_1c56d947b_typeCoder*, jule::Ptr<_1ddaba129_Prim>);
inline jule::Str _1c56da3e4_tuple(_1c56d947b_typeCoder*, jule::Ptr<_1ddabed98_Tuple>);
inline jule::Str _1c56da702_asSptr(_1c56d947b_typeCoder*, jule::Str);
inline jule::Str _1c56daa10_asPtr(_1c56d947b_typeCoder*, jule::Str);
inline jule::Str _1c56dad1d_sptr(_1c56d947b_typeCoder*, jule::Ptr<_1ddabd8ad_Sptr>);
inline jule::Str _1c56db12b_ptr(_1c56d947b_typeCoder*, jule::Ptr<_1ddac1e22_Ptr>);
inline jule::Str _1c56db439_enumDecl(_1c56d947b_typeCoder*, jule::Ptr<_1dd9db666_Enum>);
inline jule::Str _1c56db747_typeEnumDecl(_1c56d947b_typeCoder*, jule::Ptr<_1dd9dcc61_TypeEnum>);
inline jule::Str _1c56dba55_asSlice(_1c56d947b_typeCoder*, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Str _1c56dbd63_slice(_1c56d947b_typeCoder*, jule::Ptr<_1ddabe31a_Slc>);
inline jule::Str _1c56dc171_mapType(_1c56d947b_typeCoder*, jule::Ptr<_1ddac08c1_Map>);
inline jule::Str _1c56dc47e_traitIdent(_1c56d947b_typeCoder*, jule::Str);
inline jule::Str _1c56dc78c_traitDecl(_1c56d947b_typeCoder*, jule::Ptr<_1dd9d9521_Trait>);
inline jule::Str _1c56dca9a_structure(_1c56d947b_typeCoder*, jule::Ptr<_2090d5849_Struct>);
inline jule::Str _1c56dcda8_structureIns(_1c56d947b_typeCoder*, jule::Ptr<_2090d5c23_StructIns>);
inline jule::Str _1c56dd1b6_array(_1c56d947b_typeCoder*, jule::Ptr<_1ddac14b5_Arr>);
inline jule::Str _1c56dd7d2_paramIns(_1c56d947b_typeCoder*, jule::Ptr<_1dd9c9401_ParamIns>&);
inline void _1c56dde0e_funcInsResult(_1c56d947b_typeCoder*, jule::Str&, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Str _1c56de21c_anonFunc(_1c56d947b_typeCoder*, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Str _1c56de52a_func(_1c56d947b_typeCoder*, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Str _1c56de838_kind(_1c56d947b_typeCoder*, jule::Ptr<_1ddab53cc_TypeKind>);
struct _1c56d947b_typeCoder {
	jule::Ptr<_1c56d2e7a_ObjectCoder> _field_oc;
	jule::Ptr<_1c56e1c69_resultCoder> _field_rc;
	

	_1c56d947b_typeCoder(void) = default;

	inline bool operator==(_1c56d947b_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1c56d947b_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c56e1c69_resultCoder> static__1c56e2275_new(jule::Ptr<_1c56d947b_typeCoder>&);
inline void _1c56e2594_ptr(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddac1e22_Ptr>);
inline void _1c56e28b3_sptr(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddabd8ad_Sptr>);
inline void _1c56e2bd2_mapType(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddac08c1_Map>);
inline void _1c56e3001_slice(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddabe31a_Slc>);
inline void _1c56e3320_arr(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddac14b5_Arr>);
inline void _1c56e363e_func(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1c56e395d_tup(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddabed98_Tuple>);
inline void _1c56e3c7c_codeMut(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1c56e409b_codeMut1(_1c56e1c69_resultCoder*, jule::Str&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Str _1c56e4376_code(_1c56e1c69_resultCoder*, jule::Ptr<_1ddab53cc_TypeKind>&);
struct _1c56e1c69_resultCoder {
	jule::Ptr<_1c56d947b_typeCoder> _field_tc;
	

	_1c56e1c69_resultCoder(void) = default;

	inline bool operator==(_1c56e1c69_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1c56e1c69_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1d4d16ea6_Name(_1d4d16b43_Flag*);
inline jule::Str _1d4d170d8_What(_1d4d16b43_Flag*);
inline void _1d4d1722b_Reset(_1d4d16b43_Flag*);
inline jule::I32 _1d4d1736e_Short(_1d4d16b43_Flag*);
struct _1d4d16b43_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1d4d16b43_Flag(void) = default;

	inline bool operator==(_1d4d16b43_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4d16b43_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d4d1a40a_Name(_1d4d1a87d_Flag*);
inline jule::Str _1d4d1ab69_What(_1d4d1a87d_Flag*);
inline void _1d4d1ac9b_Reset(_1d4d1a87d_Flag*);
inline jule::I32 _1d4d1adcd_Short(_1d4d1a87d_Flag*);
struct _1d4d1a87d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1d4d1a87d_Flag(void) = default;

	inline bool operator==(_1d4d1a87d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4d1a87d_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d4d1dc27_Name(_1d4d1e19a_Flag*);
inline jule::Str _1d4d1e486_What(_1d4d1e19a_Flag*);
inline void _1d4d1e5b8_Reset(_1d4d1e19a_Flag*);
inline jule::I32 _1d4d1e6ea_Short(_1d4d1e19a_Flag*);
struct _1d4d1e19a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1d4d1e19a_Flag(void) = default;

	inline bool operator==(_1d4d1e19a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4d1e19a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d4d22588_Name(_1d4d22a0b_Flag*);
inline jule::Str _1d4d22ce7_What(_1d4d22a0b_Flag*);
inline void _1d4d22e29_Reset(_1d4d22a0b_Flag*);
inline jule::I32 _1d4d2305b_Short(_1d4d22a0b_Flag*);
struct _1d4d22a0b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1d4d22a0b_Flag(void) = default;

	inline bool operator==(_1d4d22a0b_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4d22a0b_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1d4d25da5_Name(_1d4d26328_Flag*);
inline jule::Str _1d4d26614_What(_1d4d26328_Flag*);
inline void _1d4d26746_Reset(_1d4d26328_Flag*);
inline jule::I32 _1d4d26878_Short(_1d4d26328_Flag*);
struct _1d4d26328_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1d4d26328_Flag(void) = default;

	inline bool operator==(_1d4d26328_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d4d26328_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c5730dc9_FlagSet> static__1c57311b5_New(void);
inline jule::Trait<_1c572e45a_CommonFlag> _1c5731649_FindFlag(_1c5730dc9_FlagSet*, jule::Str);
inline jule::Trait<_1c572e45a_CommonFlag> _1c5731957_FindFlagShort(_1c5730dc9_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1c572e45a_CommonFlag>> _1c5731bbb_Flags(_1c5730dc9_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c5731ec9_Parse(_1c5730dc9_FlagSet*, jule::Slice<jule::Str>);
inline void _1c57321a5_Reset(_1c5730dc9_FlagSet*);
inline jule::Ptr<_1d4d26328_Flag> _1d4d9829b_addFlagCommon(_1c5730dc9_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1d4d22a0b_Flag> _1d4da1b9a_addFlagCommon(_1c5730dc9_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1d4d96222_AddVar(_1c5730dc9_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1d4d9eb54_AddVar(_1c5730dc9_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1c5730dc9_FlagSet {
	jule::Slice<jule::Trait<_1c572e45a_CommonFlag>> _field_flags;
	

	_1c5730dc9_FlagSet(void) = default;


};
inline jule::Str _2090ab578_Str(_2090d5c23_StructIns*);
inline jule::Bool _2090ac6cd_Equal(jule::Ptr<_2090d5c23_StructIns>, jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _2090aea32_Same(_2090d5c23_StructIns*, jule::Ptr<_2090d5c23_StructIns>);
inline jule::Ptr<_1dd9c761e_Fn> _2090b0d52_FindMethod(_2090d5c23_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5a36_FieldIns> _209092cbd_FindField(_2090d5c23_StructIns*, jule::Str);
inline jule::Ptr<_1dda418db_Var> _20909dcda_FindStatic(_2090d5c23_StructIns*, jule::Str);
struct _2090d5c23_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_2090d5849_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_2090d5a36_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1dda418db_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1dd9cd23a_ReferenceStack> _field_Refers;
	_2090b1eeb_Operators _field_Operators;
	

	_2090d5c23_StructIns(void) = default;


};
inline jule::Ptr<_2173a20be_ObjectDeadCode> static__1de4eed9e_new(jule::Ptr<_1dded98cd_IR>&);
inline jule::Bool _1d47464da_isLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1d474b523_isLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Bool _1d4753e65_isLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_2090d5c23_StructIns>&);
inline jule::Bool _1d4759a92_isLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda418db_Var>&);
inline void _1d474684d_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dd9d9521_Trait>);
inline void _1d474bdd6_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dd9ca2c0_FnIns>);
inline void _1d475323e_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_2090d5c23_StructIns>);
inline void _1d4759e05_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda418db_Var>);
inline void _1de5006a7_setReferencesAsLive(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dd9cd23a_ReferenceStack>&);
inline void _1de50092c_inits(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda18891_Package>&);
inline void _1de500ba2_collectLivePackage(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda18891_Package>&);
inline void _1de500d7d_collectLive(jule::Ptr<_2173a20be_ObjectDeadCode>);
inline void _1de501103_removeDeadGlobals(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dda418db_Var>>&);
inline void _1de501378_removeDeadFns(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dd9c761e_Fn>>&);
inline void _1de5015ed_removeDeadStructs(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Slice<jule::Ptr<_2090d5849_Struct>>&);
inline void _1de501873_removeDeadTraits(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Slice<jule::Ptr<_1dd9d9521_Trait>>&);
inline void _1de501ae8_removeDeadsFile(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda84621_SymbolTable>&);
inline void _1de501d6d_removeDeadsPackage(jule::Ptr<_2173a20be_ObjectDeadCode>, jule::Ptr<_1dda18891_Package>&);
inline void _1de502049_removeDeads(jule::Ptr<_2173a20be_ObjectDeadCode>);
inline void _1de502225_elimanate(jule::Ptr<_2173a20be_ObjectDeadCode>);
struct _2173a20be_ObjectDeadCode {
	_2173a1c06_liveTable _field_live;
	jule::Ptr<_1dded98cd_IR> _field_ir;
	

	_2173a20be_ObjectDeadCode(void) = default;


};
inline jule::Ptr<_1c56d2e7a_ObjectCoder> static__1c564952e_New(jule::Ptr<_1dded98cd_IR>&, _1c5674a32_SerializationInfo);
inline void _1c5669917_write(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Str);
inline void _1c56a8add_addIndent(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56a910a_doneIndent(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56ac65d_indent(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline jule::I64 _1c56b3642_findAnyType(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::I64 _1c566e015_pushAnyType(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1c566d245_pushResultIns(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1c56ab0a7_pushResult(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9c761e_Fn>&);
inline jule::I64 _1c5649c9e_findTypeOffset(_1c56d2e7a_ObjectCoder*, jule::Ptr<_1dd9d9521_Trait>, jule::Ptr<_1ddab53cc_TypeKind>);
inline void _1c56d3574_locInfo(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_222e62217_Token>&);
inline void _1c56d36a6_head(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d37d8_links(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d391a_prepareStructure(_1c56d2e7a_ObjectCoder*, jule::Ptr<_2090d5849_Struct>&);
inline void _1c56d3a4c_prepareStructures(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d3b7e_iterPackages(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>);
inline void _1c56d3cb1_buildTraitMap(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d3de3_traitDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d4025_structurePlainDecl(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5849_Struct>&);
inline void _1c56d4157_structurePlainDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d4289_fieldDecl(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5a36_FieldIns>&);
inline void _1c56d43bb_structureDestructor(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d44ed_structureDeriveDefsDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d4630_structureOperatorEq(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Str&, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d4762_structureOperatorNotEq(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Str&, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d4894_structureOperator(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Str&, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Str);
inline void _1c56d49c6_structureOperators(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d4b08_structureInsDecl(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d4c3a_structureDecl(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5849_Struct>&);
inline void _1c56d4d6c_structureDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d4e9e_paramsDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>&);
inline void _1c56d50d1_funcHead(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9ca2c0_FnIns>&, jule::Bool);
inline void _1c56d5213_funcDecl(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9c761e_Fn>&, jule::Bool);
inline void _1c56d5345_funcDecls(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d5477_traitDataTypes(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d55a9_paramIns(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9c9401_ParamIns>&);
inline void _1c56d56db_paramsIns(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>&);
inline void _1c56d581d_varInitExpr(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dda418db_Var>&, jule::Fn<void(void)>);
inline void _1c56d5950_var(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dda418db_Var>);
inline void _1c56d5a82_func(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dd9c761e_Fn>&);
inline void _1c56d5bb4_traitWrappers(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d5ce6_traitDatas(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d5e28_globals(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d605a_decls(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d618c_structureMethods(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d62be_structureDeriveDefs(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d6401_structureOstream(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d65bb_structureIns(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5c23_StructIns>&);
inline void _1c56d6841_structure(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_2090d5849_Struct>&);
inline void _1c56d6a1c_structures(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d6be8_funcs(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d6e6d_pushInit(jule::Ptr<_1c56d2e7a_ObjectCoder>, jule::Ptr<_1dda18891_Package>&);
inline void _1c56d7149_initCaller(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d7325_end(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d7501_serializeHead(jule::Ptr<_1c56d2e7a_ObjectCoder>);
inline void _1c56d76cc_Serialize(jule::Ptr<_1c56d2e7a_ObjectCoder>);
struct _1c56d2e7a_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1dded98cd_IR> _field_ir;
	_1c5674a32_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1c564a046_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1c562e107_exprCoder> _field_ec;
	jule::Ptr<_1c5626462_scopeCoder> _field_sc;
	jule::Ptr<_1c56d947b_typeCoder> _field_tc;
	jule::Ptr<_1c563d26a_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1c56d2e7a_ObjectCoder(void) = default;


};
inline __jule_tuple_x_1dded98cd_IR__jule_tuple_s_222b38ae2_Log static__1ddc1dec5_Build(jule::Str, jule::I64);
inline void _1ddc204b0_appendStructs(_1dded98cd_IR*, jule::Ptr<_1dda18891_Package>&, jule::Slice<jule::Ptr<_2090d5849_Struct>>&);
inline jule::Slice<jule::Ptr<_2090d5849_Struct>> _1ddc2c302_GetAllStructures(_1dded98cd_IR*);
inline void _1ddc4a210_appendGlobals(_1dded98cd_IR*, jule::Ptr<_1dda18891_Package>&, jule::Slice<jule::Ptr<_1dda418db_Var>>&);
inline jule::Slice<jule::Ptr<_1dda418db_Var>> _1ddc4ac27_GetAllGlobals(_1dded98cd_IR*);
inline void _1ddc5018d_Order(_1dded98cd_IR*);
struct _1dded98cd_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1dda18891_Package> _field_Main;
	jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _field_Used;
	_1ddc7c000_OrderedDefines _field_Ordered;
	

	_1dded98cd_IR(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1d4d397ae_parseInteger(_1c57335a2_argParser*, jule::Str&, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1d4d428a5_parseInteger(_1c57335a2_argParser*, jule::Str&, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1c5733d99_getData(_1c57335a2_argParser*);
inline jule::VoidExceptional _1c57340db_processFlag(_1c57335a2_argParser*, jule::Trait<_1c572e45a_CommonFlag>&);
inline jule::VoidExceptional _1c5734361_singleDash(_1c57335a2_argParser*, jule::Str&);
inline jule::VoidExceptional _1c57345d6_doubleDash(_1c57335a2_argParser*, jule::Str&);
inline jule::VoidExceptional _1c57347b2_tryArg(_1c57335a2_argParser*);
inline jule::VoidExceptional _1c573498d_parse(_1c57335a2_argParser*);
struct _1c57335a2_argParser {
	_1c5730dc9_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1c57335a2_argParser(void) = default;


};
inline void _2219b08e3_Free(void*);
inline jule::Str _2219c5122_BytePtrToStr(jule::U8*);
inline jule::I64 _220c076da_GetLastErrno(void);
inline jule::I64 _2219e33d7_Stat(jule::U8*, struct stat*);
inline jule::I64 _2219e37c2_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _2219e3b13_Getcwd(jule::U8*, jule::U64);
inline DIR* _2219e40db_Opendir(jule::U8*);
inline struct dirent* _2219e4383_Readdir(DIR*);
inline jule::I64 _2219e462a_Closedir(DIR*);
inline jule::I64 _2219e4eaa_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _2219e5252_Rmdir(jule::U8*);
inline jule::I64 _2219e54e9_Unlink(jule::U8*);
inline jule::I64 _221a06472_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _221a0685c_Read(jule::I64, void*, jule::U64);
inline jule::I64 _221a06bd1_Close(jule::I64);
inline jule::I64 _221a070bb_Write(jule::I64, void*, jule::U64);
inline void _221a072ca_Exit(jule::I64);
inline jule::I64 _221aa4e05_getLastOsError(void);
inline jule::Slice<jule::Str> _221aa5e28_Args(void);
inline jule::Exceptional<jule::Str> _221aa639b_WorkingDir(void);
inline jule::Exceptional<jule::Str> _221aa6c5e_getwd(void);
inline jule::Bool _22294ea4b_IsLetter(jule::I32);
inline jule::Bool _2229bc37c_is16(jule::Slice<_2229ba7ba_Range16>, jule::U16);
inline jule::Bool _2229bc6bd_is32(jule::Slice<_2229bac3d_Range32>, jule::U32);
inline jule::Bool _2229bce60_isExcludingLatin(jule::Ptr<_2229bb1b1_RangeTable>, jule::I32);
inline jule::Bool _2229bd207_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _222a7cd55_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _222a7d174_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _222a7d41b_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _222a7e1b9_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _222a7e50a_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _222a7ea49_RuneCountStr(jule::Str);
inline jule::Bool _222a7ece1_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _222aa0dcd_Stobs(jule::Str&);
inline void _222aa64bb_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _222aa69b6_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _222aa6c3b_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _222a844bb_Repeat(jule::Str, jule::I64);
inline jule::Bool _222a87876_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _222a83b08_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _222aa6da1_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _222aa7159_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _222aa7544_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _222aa7d80_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _222aa8237_FindLast(jule::Str, jule::Str);
inline jule::I64 _222aae75a_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _222ab0096_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _222ab0daa_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _222ab15d6_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _222ab1927_Contains(jule::Str, jule::Str);
inline jule::Bool _222ab23ea_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _222ab273b_Count(jule::Str, jule::Str);
inline jule::Str _222ab2bc0_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _222aaec33_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _222ab3c7b_TrimLeft(jule::Str, jule::Str);
inline void _222ab4034_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _222ab46b6_Trim(jule::Str, jule::Str);
inline jule::Str _222ab4a07_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _221b136e4_Clean(jule::Str);
inline jule::Str _221b3302c_FromSlash(jule::Str);
inline jule::Str _221b355c3_Join(jule::Slice<jule::Str>);
inline jule::Str _221b36a8b_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _221aeeceb_Abs(jule::Str);
inline jule::Str _221b1ad8e_Base(jule::Str);
inline jule::Str _221b39132_Dir(jule::Str);
inline jule::Str _221ade505_VolumeName(jule::Str);
inline jule::Bool _222ab4d48_IsPathSep(jule::U8);
inline jule::Bool _222ab4e7a_IsAbs(jule::Str);
inline jule::I64 _222ab50ac_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _222ab51de_abs(jule::Str);
inline jule::Str _222ab5321_join(jule::Slice<jule::Str>);
inline jule::I64 _220c31add_getLastFsError(void);
inline jule::I64 _222b834ee_getLastProcessError(void);
inline jule::Slice<char*> _222b866bc_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _222b86b1d_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _222b87008_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _222b87b1e_Exit(jule::I64);
inline jule::Str _222b87d1c_Executable(void);
inline jule::Bool _222b2ba19_IsStdHeaderPath(jule::Str);
inline jule::Bool _222b2bc39_IsValidHeaderExt(jule::Str);
inline jule::Bool _222b2bed1_IsValidCppExt(jule::Str);
inline jule::Str _222b39032_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _222b3931d_argToStr(jule::Any);
inline jule::I64 _222b395b5_findNextFmt(jule::Str);
inline jule::Str _222b3994a_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _222b3a9c3_IsTopDirective(jule::Str);
inline jule::Bool _222b3be03_IsWindows(jule::Str);
inline jule::Bool _222b3c1ab_IsDarwin(jule::Str);
inline jule::Bool _222b3c453_IsLinux(jule::Str);
inline jule::Bool _222b3c772_IsI386(jule::Str);
inline jule::Bool _222b3ca19_IsAmd64(jule::Str);
inline jule::Bool _222b3ccb1_IsArm64(jule::Str);
inline jule::Bool _222b3d058_IsUnix(jule::Str);
inline jule::Bool _222b3d3cc_Is32Bit(jule::Str);
inline jule::Bool _222b3d674_Is64Bit(jule::Str);
inline void _222b73214_init(void);
inline jule::Bool _222e62921_IsUnaryOp(jule::Str);
inline jule::Bool _222e62c0c_IsBinOp(jule::Str);
inline jule::Bool _222e632c3_IsStr(jule::Str);
inline jule::Bool _222e6356a_IsRawStr(jule::Str);
inline jule::Bool _222e63812_IsRune(jule::Str);
inline jule::Bool _222e63e2d_IsBool(jule::Str);
inline jule::Bool _222e641c5_IsFloat(jule::Str);
inline jule::Bool _222e6446c_IsNum(jule::Str);
inline jule::Bool _222e649ab_IsIgnoreIdent(jule::Str);
inline jule::Bool _222e64c53_IsAnonIdent(jule::Str);
inline jule::Bool _222e65292_IsSpace(jule::I32);
inline jule::Bool _222e656e3_IsLetter(jule::I32);
inline jule::Bool _222e65c32_IsDecimal(jule::U8);
inline jule::Bool _222e65ec9_IsBinary(jule::U8);
inline jule::Bool _222e66271_IsOctal(jule::U8);
inline jule::Bool _222e66518_IsHex(jule::U8);
inline jule::Bool _222e667b0_IsAssign(jule::U64);
inline jule::Bool _222e66a57_IsPostfixOp(jule::Str);
inline jule::Bool _222e66cee_IsAssignOp(jule::Str);
inline jule::Ptr<_222e675a2_File> _222e68ad1_NewFileSet(jule::Str);
inline _222b38ae2_Log _222e6a374_makeErr(jule::I64, jule::I64, jule::Ptr<_222e675a2_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _222e6a709_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _222e6aa4a_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6add0_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6b221_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6b562_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6b8a3_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6bd04_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6c09b_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _222e6c343_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _222e6c684_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _222e6c9c5_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _222e6cd16_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _222e6d157_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _222e6d498_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6d8e9_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _222e6db91_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _222e6ded2_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _222e6e279_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _222e6e543_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _222e6e6ec_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _222e6e983_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_222b38ae2_Log> _222e7447c_Lex(jule::Ptr<_222e675a2_File>, jule::I64);
inline jule::I64 _1dd95459b_LeadingZeros64(jule::U64);
inline jule::I64 _1dd9554d1_TrailingZeros(jule::U64);
inline jule::I64 _1dd955dc7_TrailingZeros32(jule::U32);
inline jule::I64 _1dd95616e_TrailingZeros64(jule::U64);
inline jule::I64 _1dd95b77e_Len32(jule::U32);
inline jule::I64 _1dd95ba26_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dd95c6d6_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1dd95dd69_Mul64(jule::U64, jule::U64);
inline jule::U32 _2174cb814_F32Bits(jule::F32);
inline jule::F32 _2174cbb00_F32FromBits(jule::U32);
inline jule::U64 _2174cbd97_F64Bits(jule::F64);
inline jule::F64 _2174cc1b6_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _2174ce6a2_Frexp(jule::F64);
inline jule::F64 _1dd962b1a_NaN(void);
inline jule::Bool _1dd962c4c_IsNaN(jule::F64);
inline jule::F64 _1dd962d7e_Inf(jule::I64);
inline jule::Bool _1dd962eb1_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1dd9630e3_normalize(jule::F64);
inline jule::F64 _1dd963eb2_Log(jule::F64);
inline jule::F64 _1dd9645cd_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1dd96837e_Modf(jule::F64);
inline jule::F64 _1dd9687be_Log2(jule::F64);
inline jule::Str _2173c163d_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _21740e967_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _21740ec97_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _217444606_floatInfo&);
inline jule::Slice<jule::U8> _21745cb80_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1dd9903b7_decimalSlice, jule::I64, jule::U8);
inline void _1dd9905a4_roundShortest(_1dd9999ed_decimal&, jule::U64, jule::I64, _217444606_floatInfo&);
inline jule::Slice<jule::U8> _1dd9906d6_fmtE(jule::Slice<jule::U8>, jule::Bool, _1dd9903b7_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1dd990818_fmtF(jule::Slice<jule::U8>, jule::Bool, _1dd9903b7_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1dd990a5a_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _217444606_floatInfo&);
inline jule::Slice<jule::U8> _1dd990b8c_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _217444606_floatInfo&);
inline jule::I64 _1dd990cbe_min(jule::I64, jule::I64);
inline jule::I64 _1dd990e01_max(jule::I64, jule::I64);
inline jule::U8 _1dd991451_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__2096d690b_ConvError _1dd991583_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1dd9916b5_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1dd9917e7_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1dd991c37_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dd991d69_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1dd992e25_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dd993057_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dd993189_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1dd993cc2_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1dd993e04_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__2096d690b_ConvError _1dd994036_atofHex(jule::Str, _217444606_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd994278_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd9943aa_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd9944dc_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1dd99461e_ParseFloat(jule::Str, jule::I64);
inline void _1dd994d5b_ryuFtoaFixed32(_1dd9903b7_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1dd99529b_ryuFtoaFixed64(_1dd9903b7_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1dd995a82_formatDecimal(_1dd9903b7_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1dd996005_ryuFtoaShortest(_1dd9903b7_decimalSlice&, jule::U64, jule::I64, _217444606_floatInfo&);
inline jule::I64 _1dd99629c_mulByLog2Log10(jule::I64);
inline jule::I64 _1dd996544_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dd99692e_computeBounds(jule::U64, jule::I64, _217444606_floatInfo&);
inline void _1dd996ec3_ryuDigits(_1dd9903b7_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1dd9975ab_ryuDigits32(_1dd9903b7_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dd997996_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dd997d81_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1dd9981c2_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1dd998469_divmod1e9(jule::U64);
inline void _1dd99b1d6_trim(_1dd9999ed_decimal&);
inline void _1dd99b48e_rightShift(_1dd9999ed_decimal&, jule::U64);
inline jule::Bool _1dd99b901_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1dd99bb76_leftShift(_1dd9999ed_decimal&, jule::U64);
inline jule::Bool _1dd99beb7_shouldRoundUp(_1dd9999ed_decimal&, jule::I64);
inline jule::Str _1dd99d5d4_FmtUint(jule::U64, jule::I64);
inline jule::Str _1dd99d969_FmtInt(jule::I64, jule::I64);
inline jule::Str _1dd99dc11_Itoa(jule::I64);
inline jule::Str _1dd99e030_small(jule::I64);
inline jule::Bool _1dd99e2c7_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1dd99e805_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1dd9a0c13_RealKindOf(jule::Str);
inline jule::I64 _1dd9a0eaa_BitsizeOf(jule::Str);
inline jule::Str _1dd9a12c9_IntFromBits(jule::I64);
inline jule::Str _1dd9a1571_UintFromBits(jule::I64);
inline jule::Str _1dd9a1818_FloatFromBits(jule::I64);
inline jule::Bool _1dd9a23b8_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1dd9a2660_BitsizeOfFloat(jule::F64);
inline jule::I64 _1dd9a2907_BitsizeOfInt(jule::I64);
inline jule::I64 _1dd9a2b9e_BitsizeOfUint(jule::U64);
inline void _1dd9a2d14_UpdateTarget(void);
inline void _1dd9a2e79_init(void);
inline jule::F64 _1dd9a6cb3_Min(jule::Str);
inline jule::F64 _1dd9a709e_Max(jule::Str);
inline jule::Bool _1dd9a7423_IsI8Compatible(jule::Str);
inline jule::Bool _1dd9a770e_IsI16Compatible(jule::Str);
inline jule::Bool _1dd9a79a6_IsI32Compatible(jule::Str);
inline jule::Bool _1dd9a7cc5_IsI64Compatible(jule::Str);
inline jule::Bool _1dd9a806c_IsU8Compatible(jule::Str);
inline jule::Bool _1dd9a8314_IsU16Compatible(jule::Str);
inline jule::Bool _1dd9a85ab_IsU32Compatible(jule::Str);
inline jule::Bool _1dd9a8930_IsU64Compatible(jule::Str);
inline jule::Bool _1dd9a8bc7_IsF32Compatible(jule::Str);
inline jule::Bool _1dd9a8e6e_IsF64Compatible(jule::Str);
inline jule::Bool _1dd9a92b0_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1dd9a9557_IsI16Greater(jule::Str);
inline jule::Bool _1dd9a97ee_IsI32Greater(jule::Str);
inline jule::Bool _1dd9a9a96_IsI64Greater(jule::Str);
inline jule::Bool _1dd9a9d3d_IsU16Greater(jule::Str);
inline jule::Bool _1dd9aa28e_IsU32Greater(jule::Str);
inline jule::Bool _1dd9aa536_IsU64Greater(jule::Str);
inline jule::Bool _1dd9aa7cd_IsF32Greater(jule::Str);
inline jule::Bool _1dd9aaa75_IsF64Greater(jule::Str);
inline jule::Bool _1dd9aadb6_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1dd9abdea_IsSigInt(jule::Str);
inline jule::Bool _1dd9ac1d6_IsUnsigInt(jule::Str);
inline jule::Bool _1dd9ac47d_IsInt(jule::Str);
inline jule::Bool _1dd9ac79c_IsFloat(jule::Str);
inline jule::Bool _1dd9aca44_IsNum(jule::Str);
inline jule::Bool _1dd9accdb_IsSigNum(jule::Str);
inline void _1dd9b6773_lshiftUnsig(_1dd9ad050_Const&, _1dd9ad050_Const&);
inline void _1dd9b6a70_rshiftUnsig(_1dd9ad050_Const&, _1dd9ad050_Const&);
inline jule::Bool _1dda59e32_IsAscii(jule::I32);
inline jule::I32 _1dda5a0a8_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1dda720e2_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1dda723de_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1dda72686_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1dda72994_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1dda72cd5_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1ddb69096_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1ddb6eb90_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _1ddb6ee48_FmtByDefault(jule::Str&, jule::Any&);
inline void _1ddb70322_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _1ddb7071d_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _1ddb70a2b_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _1ddb71345_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dd9cc3d2_parameterUsesGenerics(jule::Ptr<_1dd9c9401_ParamIns>&, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>&);
inline jule::Ptr<_1ddab97aa_TypeSymbol> _1dd9ce901_buildType(jule::Ptr<_2090b9157_TypeDecl>);
inline jule::Ptr<_1dda8a4c3_Value> _1dd9cebdc_buildExpr(jule::Ptr<_2090bd678_Expr>);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dd9cee84_buildTypeAlias(jule::Ptr<_2090d0426_TypeAliasDecl>);
inline jule::Ptr<_2090a98a6_Field> _1dd9d02a3_buildField(jule::Ptr<_2090d3abc_FieldDecl>);
inline jule::Slice<jule::Ptr<_2090a98a6_Field>> _1dd9d054a_buildFields(jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>>&);
inline jule::Ptr<_2090d5849_Struct> _1dd9d07e2_buildStruct(jule::Ptr<_2090d4370_StructDecl>);
inline jule::Ptr<_1dd9c5cd2_Param> _1dd9d0a89_buildParam(jule::Ptr<_2090c97b6_ParamDecl>);
inline jule::Slice<jule::Ptr<_1dd9c5cd2_Param>> _1dd9d0e0d_buildParams(jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>>&);
inline jule::Ptr<_1dd9c560b_RetType> _1dd9d11a5_buildRetType(jule::Ptr<_2090bc26a_RetTypeDecl>);
inline jule::Ptr<_1dd9c761e_Fn> _1dd9d144c_buildFn(jule::Ptr<_2090caad6_FnDecl>);
inline jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _1dd9d16e4_buildMethods(jule::Slice<jule::Ptr<_2090caad6_FnDecl>>&);
inline jule::Ptr<_1dd9d9521_Trait> _1dd9d198b_buildTrait(jule::Ptr<_2090d497a_TraitDecl>);
inline jule::Ptr<_1dd9dab71_EnumItem> _1dd9d1c33_buildEnumItem(jule::Ptr<_2090d1c85_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>> _1dd9d1eca_buildEnumItems(jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>>&);
inline jule::Ptr<_1dd9db666_Enum> _1dd9d2272_buildEnum(jule::Ptr<_2090d27ad_EnumDecl>);
inline jule::Ptr<_1dd9dc69a_TypeEnumItem> _1dd9d26c3_buildTypeEnumItem(jule::Ptr<_2090d32b4_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>> _1dd9d296a_buildTypeEnumItems(jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>>&);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dd9d2c12_buildTypeEnum(jule::Ptr<_2090d38be_TypeEnumDecl>);
inline jule::Ptr<_1dda418db_Var> _1dd9d2ea9_buildVar(jule::Ptr<_2090cbab5_VarDecl>);
inline jule::Slice<jule::Ptr<_1dda418db_Var>> _1dd9d3251_buildVars(jule::Slice<jule::Ptr<_2090cbab5_VarDecl>>);
inline jule::Ptr<_1dd9e21c7_Impl> _1dd9d34e8_buildImpl(jule::Ptr<_2090d5085_Impl>);
inline jule::Bool _1dd9e156c_matchConstraint(jule::Str&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1dd9e1858_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1dd9edc94_scopeChecker> _1dd9e4262_newScopeCheckerBase(jule::Ptr<_1dda1da83_Sema>&, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Ptr<_1dd9edc94_scopeChecker> _1dd9e45e7_newScopeChecker(jule::Ptr<_1dda1da83_Sema>&, jule::Ptr<_1dd9ca2c0_FnIns>);
inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dd9e4938_findLabelParent(jule::Str, jule::Ptr<_1dd9edc94_scopeChecker>);
inline jule::Bool _1dd9e4cbd_modelIsGotoScope(jule::Any, jule::Ptr<_1dd9e7232_Scope>&);
inline jule::Bool _1dd9e510e_stmtIsGotoScope(jule::Any&, jule::Ptr<_1dd9e7232_Scope>&);
inline jule::I64 _1dd9e5450_countMatchType(jule::Ptr<_1dd9eae7d_Match>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Slice<jule::Ptr<_1dda8944a_Data>> _1dd9e56e7_getDatasFromTupleData(jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1dd9e6033_checkMut(jule::Ptr<_1dda1da83_Sema>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dd9e64b7_checkAssign(jule::Ptr<_1dda1da83_Sema>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1dd9e675e_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1dd9e6a06_isValidStForNextSt(jule::Any&);
inline jule::Bool _1dd9e6c9d_stmtIsDef(jule::Any&);
inline jule::Ptr<_1dda418db_Var> _1dda1314e_findVarInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda1357d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_2090d5849_Struct> _1dda13968_findStructInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9c761e_Fn> _1dda13dca_findFnInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1dd9d9521_Trait> _1dda141d8_findTraitInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1dd9db666_Enum> _1dda14529_findEnumInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda1486a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str);
inline jule::Any _1dda14d65_defByIdentPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _1dda1ae6a_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1dda1bc4b_isValidModelForRef(jule::Any&);
inline _222b38ae2_Log _1dda1c169_compilerErr(jule::Ptr<_222e62217_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dda1c4aa_impIsLookupable(jule::Ptr<_1dda15937_ImportInfo>&, jule::Str);
inline void _1dda1c7a7_appendRetVars(jule::Slice<jule::Ptr<_1dda418db_Var>>&, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1dda1ca60_appendParamVars(jule::Slice<jule::Ptr<_1dda418db_Var>>&, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline void _1dda1cd3a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Ptr<_1dda84621_SymbolTable> _1dda1d18c_findFile(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>&, jule::Ptr<_222e675a2_File>&);
inline void _1dda1d5ee_pushSugggestion(_222b38ae2_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1dda5a350_traitHasReferenceReceiver(jule::Ptr<_1dd9d9521_Trait>&);
inline jule::Bool _1dda5a482_floatAssignable(jule::Str, jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1dda71d5b_sigAssignable(jule::Str, jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1dda71e8d_unsigAssignable(jule::Str, jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1dda73038_intAssignable(jule::Str, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1ddab53cc_TypeKind> _1dda83697_lenKind(void);
inline jule::Ptr<_209085db0_Directive> _1ddaaea7a_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline jule::Any _1ddaaee10_findBuiltinsImport(jule::Str, jule::Ptr<_1dda15937_ImportInfo>);
inline void _1ddab011e_fitBitsize(jule::Ptr<_1dda8944a_Data>&);
inline void _1ddab041b_makeStructLitAlloc(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dd9b9e91_StructLitExprModel>&);
inline jule::Ptr<_1dda418db_Var> _1ddab075c_buildErrorVar(jule::Ptr<_1dd9e7232_Scope>&, jule::Ptr<_2090c265a_FnCallExpr>&);
inline jule::Any _1ddab0a9d_findBuiltinsSema(jule::Str, jule::Ptr<_1dda1da83_Sema>);
inline jule::Bool _1ddab0d45_isOkForShifting(jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1ddab11ec_isInstancedStruct(jule::Ptr<_2090d5c23_StructIns>);
inline jule::Bool _1ddab1560_isPtrArithmeticCompatible(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddab17a2_applyCastKindModel(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1ddab1a5a_applyCastKind(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Ptr<_1dda8944a_Data> _1ddab1c58_buildVoidData(void);
inline jule::Str _1ddab2022_checkDataForIntegerIndexing(jule::Ptr<_1dda8944a_Data>&);
inline void _1ddab22db_applyCastModelByEnum(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dd9db666_Enum>);
inline void _1ddab2594_castConstByType(jule::Str&, jule::Ptr<_1dda8944a_Data>&);
inline void _1ddab2aa0_updateModelToGenericIns(jule::Any&, jule::Ptr<_1dd9ca2c0_FnIns>&);
inline jule::Bool _1ddab2ce2_pushSubIdentFromExpr(jule::Any, jule::Ptr<_2090b9d6c_SubIdentTypeDecl>&);
inline jule::Bool _1ddacc0d6_kindUsesGenerics(jule::Ptr<_1ddab53cc_TypeKind>&, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>&);
inline jule::Bool _1ddacc46b_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline jule::Bool _1ddacc713_canGetPtr(jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1ddacca32_isValidForSptrType(jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1ddacccc9_isValidForRef(jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Bool _1ddacd093_isBuiltinStrConvertable(jule::Ptr<_1ddab53cc_TypeKind>&);
inline jule::Str _1ddacd318_buildLinkPathByTokens(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_1ddaba129_Prim> _1ddacd6c0_buildPrimType(jule::Str);
inline jule::Ptr<_2090d5849_Struct> _1ddacd967_getStructFromKind(jule::Ptr<_1ddab53cc_TypeKind>);
inline jule::Bool _1ddacdc0e_isPrim(jule::Str);
inline void _1ddacdeb7_applyImplicitCast(jule::Ptr<_1ddab53cc_TypeKind>&, jule::Ptr<_1dda8944a_Data>&);
inline __jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log _1ddad2031_buildSymbols(jule::Ptr<_209084bc2_Ast>&, jule::Trait<_1dda12cb9_Importer>&, jule::Ptr<_1dd9d3a48_symbolBuilder>);
inline __jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log _1ddad2460_analyzePackage(jule::Slice<jule::Ptr<_209084bc2_Ast>>&, jule::Trait<_1dda12cb9_Importer>&, jule::I64&);
inline __jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log _1ddad284a_AnalyzePackage(jule::Slice<jule::Ptr<_209084bc2_Ast>>, jule::Trait<_1dda12cb9_Importer>, jule::I64);
inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddadd911_findBuiltinFn(jule::Str);
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddae054a_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1ddae4e23_findBuiltinDef(jule::Str);
inline jule::Any _1ddae40cb_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1ddae420d_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1ddadb18e_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1ddadb2c1_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1dda8944a_Data> _1ddb71477_builtinCallerCommonPlain(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb71730_builtinCallerCommon(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb71b1a_builtinCallerCommonMut(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb71e5b_builtinCallerError(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb72346_builtinCallerOut(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb72731_builtinCallerOutln(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb72b1b_builtinCallerNew(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb73006_builtinCallerPanic(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb73622_builtinCallerMake(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb73a0c_builtinCallerAppend(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb73e91_callerCopySlice(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb74425_callerCopyStr(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb74810_builtinCallerCopy(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb74b51_callerLenSlice(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb74e92_callerLenMap(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb752d3_callerLenArr(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb75624_callerLenStr(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb75a0e_builtinCallerLen(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb75d50_callerCapSlice(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb76191_callerCapStr(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb7657b_builtinCallerCap(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb76a10_callerDeleteMap(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb76dea_builtinCallerDelete(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb772d5_builtinCallerClone(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb7789b_builtinCallerAssert(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb77c0e_builtinCallerStdMemSizeOf(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb7812c_builtinCallerStdMemAlignOf(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb7854a_builtinCallerStdMemFree(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb78979_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb78d97_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb792d7_builtinCallerStdDebugOut(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Ptr<_1dda8944a_Data> _1ddb796c2_builtinCallerStdDebugOutln(jule::Ptr<_1dda8aeb8_Eval>&, jule::Ptr<_2090c265a_FnCallExpr>&, jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1ddc75559_FindModuleFile(jule::Slice<jule::Ptr<_220d12cac_DirEntry>>&);
inline jule::Str _1ddc75702_FindModuleFileDeep(jule::Str);
inline jule::Slice<_222b38ae2_Log> _1ddc75999_CheckModuleFile(jule::Str);
inline jule::Ptr<_1de3b0c60_FileInfo> _1de3b3867_ParseFile(jule::Ptr<_222e675a2_File>);
inline __jule_tuple_x_209084bc2_Ast__jule_tuple_s_222b38ae2_Log _1de40a2b5_parseFileset(jule::Ptr<_222e675a2_File>);
inline jule::Ptr<_2090c90e0_ScopeTree> _1de40ac22_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1de40aeca_isSt(jule::Ptr<_222e62217_Token>, jule::Ptr<_222e62217_Token>);
inline jule::Bool _1de40b31b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64&);
inline __jule_tuple_int__jule_tuple_bool _1de40b6a1_nextStPos(jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::I64);
inline __jule_tuple_sx_222e62217_Token__jule_tuple_bool _1de40b9e2_skipSt(jule::I64&, jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Slice<jule::Ptr<_1de40bcde_stmt>> _1de40c185_splitStmts(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Bool _1de423872_isTypeOp(jule::Str&);
inline jule::Bool _1de423b5d_isTypeRange(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de423e05_getBlockExpr(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token _1de42428a_splitDelim(jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::U64);
inline jule::I64 _1de424532_findLowestPrecOp(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Ptr<_2090c0339_IdentExpr> _1de4247c9_buildIdentExpr(jule::Ptr<_222e62217_Token>&);
inline __jule_tuple_sx_222e62217_Token__jule_tuple_int _1de424a71_getRangeExprTokens(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Bool _1de4257ca_checkAssignTokens(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline _222b38ae2_Log _1de4269eb_makeErr(jule::I64, jule::I64, jule::Ptr<_222e675a2_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de426ec4_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token _1de42726b_rangeLast(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline __jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log _1de427656_partsKind(jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::Str, jule::Bool);
inline __jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log _1de427a41_parts(jule::Slice<jule::Ptr<_222e62217_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1de427cd8_getCloseKindOfBrace(jule::Str);
inline _222b38ae2_Log _1de4281c3_compilerErr(jule::Ptr<_222e62217_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1de428602_pushSuggestion(_222b38ae2_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1de428899_tokstoa(jule::Slice<jule::Ptr<_222e62217_Token>>&);
inline jule::Bool _1de43890e_isPub(jule::Str&);
inline jule::Ptr<_2090b9157_TypeDecl> _1de4392d3_buildVoidType(void);
inline jule::Ptr<_2090b9157_TypeDecl> _1de4394e2_buildPrimType(jule::Ptr<_222e62217_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1ddc4e742_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1ddc60bd7_checkArch(jule::Str);
inline jule::Bool _1ddc4996d_isPassFileAnnotation(jule::Str);
inline void _1ddc6457b_setOsVars(jule::Slice<jule::Str>&);
inline void _1ddc647ce_setArchVars(jule::Slice<jule::Str>&);
inline void _1ddc64a87_initVars(jule::Slice<jule::Str>&, _1ddc6426d_CompileInfo&);
inline jule::Slice<jule::U8> _1ddc7e695_readBuff(jule::Str);
inline _222b38ae2_Log _1ddd556c2_flatCompilerErr(jule::Str);
inline void _1ddc517cc_pushPasses(jule::Ptr<_1dda18891_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1de02c5be_getAllUniquePasses(jule::Ptr<_1dda18891_Package>&, jule::Slice<jule::Ptr<_1dda15937_ImportInfo>>);
inline _1ddc6426d_CompileInfo _1de03da86_buildCompileInfo(void);
inline void _1de5024de_EliminateDefines(jule::Ptr<_1dded98cd_IR>&);
inline jule::Ptr<_209085db0_Directive> _1de502874_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline jule::Bool _1de502bb5_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline void _1de506812_eliminateDeadCodeOfScope(jule::Ptr<_1dd9e7232_Scope>);
inline void _1de506a98_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1dd9c761e_Fn>>&);
inline void _1de506cda_eliminateFunctionsScopePackage(jule::Ptr<_1dda18891_Package>&);
inline void _1de507082_eliminateScopePackage(jule::Ptr<_1dda18891_Package>&);
inline void _1de507291_EliminateScopes(jule::Ptr<_1dded98cd_IR>&);
inline jule::Bool _1ddb8537b_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1ddb85689_isConstantValidConditionalCase(jule::Ptr<_1dd9e762d_If>&);
inline jule::Bool _1ddb85942_isUnreachableExpr(jule::Any&);
inline jule::Bool _1ddb85c83_isConstantValidMatchCase(jule::Ptr<_1dd9eb9c8_Case>&);
inline jule::Bool _1ddb8602a_isUnreachableConditionalCase(jule::Ptr<_1dd9e762d_If>&);
inline jule::Bool _1ddb862d3_isUnreachableMatchCase(jule::Ptr<_1dd9eb9c8_Case>&);
inline __jule_tuple_bool__jule_tuple_u64 _1ddb8dbd1_checkForBitShiftOpt(jule::Ptr<_1dd9b8d6e_OperandExprModel>&, jule::Ptr<_1dd9b8d6e_OperandExprModel>&);
inline void _1ddb90c16_PushOptLevel(jule::I64);
inline void _1de4c7041_detectEnabled(void);
inline void _1de52900a_Throw(jule::Str);
inline jule::U64 _1c56cd0eb_unix(void);
inline jule::U64 _1c56cd409_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1c56cd78e_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1c562b9b7_isCopyOptimizable(jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1c562bd4c_isIterCopyOptimizable(jule::Ptr<_1dda8944a_Data>&, jule::Ptr<_1dda418db_Var>&);
inline jule::Str _1c563ad17_decomposeCommonEsq(jule::U8);
inline jule::Str _1c563b103_sbtoa(jule::U8);
inline jule::Str _1c563b39a_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1c563b6b9_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1c563b9c7_ftoa(jule::F64, jule::I64);
inline jule::Str _1c563bc6e_itoa(jule::I64);
inline jule::Str _1c563c016_utoa(jule::U64);
inline jule::Bool _1c563c3bd_isForwarded(jule::Ptr<_1dd9e7232_Scope>&);
inline jule::Bool _1c563c687_isBuiltinCallHasDebuginf(jule::Ptr<_1dd9bb1a1_FnCallExprModel>&);
inline jule::Bool _1c563c8b8_isExprComesFromBind(jule::Ptr<_1dda8944a_Data>&);
inline jule::Bool _1c563cb60_isAny(jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _1c56d7a40_iterFiles(jule::Ptr<_1dda18891_Package>&, jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>);
inline jule::Str _1c56d7d2b_concatAllParts(jule::Slice<jule::Ptr<_222e62217_Token>>);
inline jule::Ptr<_209085db0_Directive> _1c56e5c5c_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline jule::Bool _1c56e60e2_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>&, jule::Str);
inline jule::Bool _1c56e6389_shouldInitialized(jule::Ptr<_1ddab53cc_TypeKind>&);
inline void _222b0cb3d_printErrorMessage(jule::Str);
inline void _222b161da_help(jule::Slice<jule::Str>&);
inline void _222b09d5a_version(jule::Slice<jule::Str>&);
inline void _222b09e8c_toolDistos(void);
inline void _222b02c54_toolDistarch(void);
inline void _222b02d86_tool(jule::Slice<jule::Str>&);
inline void _222b17a9e_julenv(jule::Slice<jule::Str>&);
inline void _222b17bd1_mod(jule::Slice<jule::Str>&);
inline jule::Bool _222b287e6_processCommand(jule::Slice<jule::Str>&);
inline void _222b28928_showInfo(void);
void entry_point(void);
inline void _1c56ee98b_init(void);
inline jule::Ptr<_220c4c3de_File> _1c5703077_openOutput(jule::Str&);
inline void _1c570e1b5_clearObjects(void);
inline void _1c56ecbba_compileIr(jule::Str, jule::Str);
inline jule::Bool _1c571dbca_isCppSourceFile(jule::Str);
inline void _1c5722cbc_pushCompCmdClang(jule::Str&);
inline void _1c56eae82_pushCompCmdGcc(jule::Str&);
inline __jule_tuple_str__jule_tuple_str _1c5700e10_genCompileCmd(jule::Str, jule::Ptr<_1dded98cd_IR>&);
inline jule::Str _1c56ea514_getCompilePath(void);
inline void _1c5709ed5_applyTargetIndependentOptimizations(jule::Ptr<_1dded98cd_IR>&);
inline void _1c56e9e3c_checkCompilerFlag(void);
inline void _1c56edc21_checkTargetArch(jule::Str);
inline void _1c56edd53_checkTargetOs(jule::Str);
inline void _1c5734bad_checkTargetFlag(jule::Str&);
inline void _1c5734ce0_checkOptFlag(jule::Str&);
inline void _1c5735153_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c5735285_checkFlags(jule::Slice<jule::Str>&);
inline void _1c57353b7_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1dded98cd_IR> _1c57354e9_buildIr(jule::Slice<jule::Str>&);
inline void _1c573562b_compileCommand(jule::Slice<jule::Str>&);


struct _1dda12cb9_ImporterMptrData {
	void(*_1dda11bca_SetModPath)(jule::Trait<_1dda12cb9_Importer>, jule::Str);
	jule::Str(*_1dda11e2d_GetModPath)(jule::Trait<_1dda12cb9_Importer>);
	jule::Str(*_1dda1223b_ModById)(jule::Trait<_1dda12cb9_Importer>, jule::I64);
	jule::Ptr<_1dda15937_ImportInfo>(*_1dda12549_GetImport)(jule::Trait<_1dda12cb9_Importer>, jule::Str);
	__jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log(*_1dda12901_ImportPackage)(jule::Trait<_1dda12cb9_Importer>, jule::Str, jule::Bool);
	void(*_1dda12b76_Imported)(jule::Trait<_1dda12cb9_Importer>, jule::Ptr<_1dda15937_ImportInfo>);
};

struct _1ddab4e9d_KindMptrData {
	jule::Str(*_1ddab4a4c_Str)(jule::Trait<_1ddab4e9d_Kind>);
	jule::Bool(*_1ddab4d5a_Equal)(jule::Trait<_1ddab4e9d_Kind>, jule::Ptr<_1ddab53cc_TypeKind>);
};

struct _1ddad134e_LookupMptrData {
	jule::Ptr<_1dda15937_ImportInfo>(*_1ddace506_FindPackage)(jule::Trait<_1ddad134e_Lookup>, jule::Str);
	jule::Ptr<_1dda15937_ImportInfo>(*_1ddace814_SelectPackage)(jule::Trait<_1ddad134e_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>);
	jule::Ptr<_1dda418db_Var>(*_1ddacebbb_FindVar)(jule::Trait<_1ddad134e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ddab46d9_TypeAlias>(*_1ddad0073_FindTypeAlias)(jule::Trait<_1ddad134e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2090d5849_Struct>(*_1ddad042a_FindStruct)(jule::Trait<_1ddad134e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dd9c761e_Fn>(*_1ddad07d2_FindFn)(jule::Trait<_1ddad134e_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1dd9d9521_Trait>(*_1ddad0ae0_FindTrait)(jule::Trait<_1ddad134e_Lookup>, jule::Str);
	jule::Ptr<_1dd9db666_Enum>(*_1ddad0ded_FindEnum)(jule::Trait<_1ddad134e_Lookup>, jule::Str);
	jule::Ptr<_1dd9dcc61_TypeEnum>(*_1ddad120b_FindTypeEnum)(jule::Trait<_1ddad134e_Lookup>, jule::Str);
};

struct _1c572e45a_CommonFlagMptrData {
	jule::Str(*_1c56e9920_Name)(jule::Trait<_1c572e45a_CommonFlag>);
	jule::I32(*_1c56e9a52_Short)(jule::Trait<_1c572e45a_CommonFlag>);
	jule::Str(*_1c56e9b84_What)(jule::Trait<_1c572e45a_CommonFlag>);
	void(*_1c56e9d0a_Reset)(jule::Trait<_1c572e45a_CommonFlag>);
};



inline void _1dda11bca_SetModPath_0(jule::Trait<_1dda12cb9_Importer> _self_, jule::Str _1729_path) {
	_1dddbd5b4_SetModPath(_self_.safe_ptr<_1de331450_JuleImporter>(), _1729_path);
}
inline jule::Str _1dda11e2d_GetModPath_0(jule::Trait<_1dda12cb9_Importer> _self_) {
	return _1dddcec35_GetModPath(_self_.safe_ptr<_1de331450_JuleImporter>());
}
inline jule::Str _1dda1223b_ModById_0(jule::Trait<_1dda12cb9_Importer> _self_, jule::I64 _2522_id) {
	return _1dde0b37c_ModById(_self_.safe_ptr<_1de331450_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1dda12549_GetImport_0(jule::Trait<_1dda12cb9_Importer> _self_, jule::Str _3128_path) {
	return _1dde1099c_GetImport(_self_.safe_ptr<_1de331450_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log _1dda12901_ImportPackage_0(jule::Trait<_1dda12cb9_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ddec38a6_ImportPackage(_self_.safe_ptr<_1de331450_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1dda12b76_Imported_0(jule::Trait<_1dda12cb9_Importer> _self_, jule::Ptr<_1dda15937_ImportInfo> _4131__0) {
	_1dded262e_Imported(_self_.safe_ptr<_1de331450_JuleImporter>(), _4131__0);
}
inline jule::Str _1ddab4a4c_Str_0(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _2090ab578_Str(_self_.safe_ptr<_2090d5c23_StructIns>());
}
inline jule::Bool _1ddab4d5a_Equal_0(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _2090ac6cd_Equal(_self_.data.as<_2090d5c23_StructIns>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_1(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1dd9ca600_Str(_self_.safe_ptr<_1dd9ca2c0_FnIns>());
}
inline jule::Bool _1ddab4d5a_Equal_1(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1dd9ca90d_Equal(_self_.data.as<_1dd9ca2c0_FnIns>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_2(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1dd9d991c_Str(_self_.safe_ptr<_1dd9d9521_Trait>());
}
inline jule::Bool _1ddab4d5a_Equal_2(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1dd9d9c2a_Equal(_self_.data.as<_1dd9d9521_Trait>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_3(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1dd9db9c9_Str(_self_.safe_ptr<_1dd9db666_Enum>());
}
inline jule::Bool _1ddab4d5a_Equal_3(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1dd9dbcd7_Equal(_self_.data.as<_1dd9db666_Enum>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_4(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1dd9dd091_Str(_self_.safe_ptr<_1dd9dcc61_TypeEnum>());
}
inline jule::Bool _1ddab4d5a_Equal_4(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1dd9dd39e_Equal(_self_.data.as<_1dd9dcc61_TypeEnum>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_5(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddab57c8_Str(_self_.safe_ptr<_1ddab53cc_TypeKind>());
}
inline jule::Bool _1ddab4d5a_Equal_5(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddab5ad6_Equal(_self_.data.as<_1ddab53cc_TypeKind>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_6(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddaba48c_Str(_self_.safe_ptr<_1ddaba129_Prim>());
}
inline jule::Bool _1ddab4d5a_Equal_6(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddaba79a_Equal(_self_.data.as<_1ddaba129_Prim>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_7(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddabdc21_Str(_self_.safe_ptr<_1ddabd8ad_Sptr>());
}
inline jule::Bool _1ddab4d5a_Equal_7(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddabe02e_Equal(_self_.data.as<_1ddabd8ad_Sptr>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_8(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddabe826_Str(_self_.safe_ptr<_1ddabe31a_Slc>());
}
inline jule::Bool _1ddab4d5a_Equal_8(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddabeb34_Equal(_self_.data.as<_1ddabe31a_Slc>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_9(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddac020b_Str(_self_.safe_ptr<_1ddabed98_Tuple>());
}
inline jule::Bool _1ddab4d5a_Equal_9(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddac0519_Equal(_self_.data.as<_1ddabed98_Tuple>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_10(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddac0c34_Str(_self_.safe_ptr<_1ddac08c1_Map>());
}
inline jule::Bool _1ddab4d5a_Equal_10(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddac1042_Equal(_self_.data.as<_1ddac08c1_Map>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_11(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddac1828_Str(_self_.safe_ptr<_1ddac14b5_Arr>());
}
inline jule::Bool _1ddab4d5a_Equal_11(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddac1b36_Equal(_self_.data.as<_1ddac14b5_Arr>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_12(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1ddac2285_Str(_self_.safe_ptr<_1ddac1e22_Ptr>());
}
inline jule::Bool _1ddab4d5a_Equal_12(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1ddac2593_Equal(_self_.data.as<_1ddac1e22_Ptr>(), _5621_other);
}
inline jule::Str _1ddab4a4c_Str_13(jule::Trait<_1ddab4e9d_Kind> _self_) {
	return _1c56d8cb6_Str(_self_.safe_ptr<_1c56d89ca_customType>());
}
inline jule::Bool _1ddab4d5a_Equal_13(jule::Trait<_1ddab4e9d_Kind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _5621_other) {
	return _1c56d90c4_Equal(_self_.data.as<_1c56d89ca_customType>(), _5621_other);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace506_FindPackage_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _930_ident) {
	return _1dd9ee228_FindPackage(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace814_SelectPackage_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _1332_selector) {
	return _1dd9ee536_SelectPackage(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1dda418db_Var> _1ddacebbb_FindVar_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1dd9ee8dd_FindVar(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddad0073_FindTypeAlias_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1dd9eec95_FindTypeAlias(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_2090d5849_Struct> _1ddad042a_FindStruct_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1dda0014c_FindStruct(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1dd9c761e_Fn> _1ddad07d2_FindFn_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1dda00504_FindFn(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1dd9d9521_Trait> _1ddad0ae0_FindTrait_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3328_ident) {
	return _1dda00812_FindTrait(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1dd9db666_Enum> _1ddad0ded_FindEnum_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3727_ident) {
	return _1dda00b20_FindEnum(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddad120b_FindTypeEnum_0(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _4131_ident) {
	return _1dda00e2d_FindTypeEnum(_self_.safe_ptr<_1dd9edc94_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace506_FindPackage_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _930_ident) {
	return _1dda15e54_FindPackage(_self_.safe_ptr<_1dda15937_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace814_SelectPackage_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _1332_selector) {
	return _1dda16262_SelectPackage(_self_.safe_ptr<_1dda15937_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1dda418db_Var> _1ddacebbb_FindVar_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1dda16619_FindVar(_self_.safe_ptr<_1dda15937_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddad0073_FindTypeAlias_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1dda169c1_FindTypeAlias(_self_.safe_ptr<_1dda15937_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_2090d5849_Struct> _1ddad042a_FindStruct_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1dda16d78_FindStruct(_self_.safe_ptr<_1dda15937_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1dd9c761e_Fn> _1ddad07d2_FindFn_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1dda17230_FindFn(_self_.safe_ptr<_1dda15937_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1dd9d9521_Trait> _1ddad0ae0_FindTrait_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3328_ident) {
	return _1dda1753d_FindTrait(_self_.safe_ptr<_1dda15937_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1dd9db666_Enum> _1ddad0ded_FindEnum_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3727_ident) {
	return _1dda1784b_FindEnum(_self_.safe_ptr<_1dda15937_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddad120b_FindTypeEnum_1(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _4131_ident) {
	return _1dda17b59_FindTypeEnum(_self_.safe_ptr<_1dda15937_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace506_FindPackage_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _930_ident) {
	return _1dda18d69_FindPackage(_self_.safe_ptr<_1dda18891_Package>(), _930_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace814_SelectPackage_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _1332_selector) {
	return _1dda19177_SelectPackage(_self_.safe_ptr<_1dda18891_Package>(), _1332_selector);
}
inline jule::Ptr<_1dda418db_Var> _1ddacebbb_FindVar_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1dda1952e_FindVar(_self_.safe_ptr<_1dda18891_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddad0073_FindTypeAlias_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1dda198d6_FindTypeAlias(_self_.safe_ptr<_1dda18891_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_2090d5849_Struct> _1ddad042a_FindStruct_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1dda19c8d_FindStruct(_self_.safe_ptr<_1dda18891_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1dd9c761e_Fn> _1ddad07d2_FindFn_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1dda1a145_FindFn(_self_.safe_ptr<_1dda18891_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1dd9d9521_Trait> _1ddad0ae0_FindTrait_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3328_ident) {
	return _1dda1a453_FindTrait(_self_.safe_ptr<_1dda18891_Package>(), _3328_ident);
}
inline jule::Ptr<_1dd9db666_Enum> _1ddad0ded_FindEnum_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3727_ident) {
	return _1dda1a761_FindEnum(_self_.safe_ptr<_1dda18891_Package>(), _3727_ident);
}
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddad120b_FindTypeEnum_2(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _4131_ident) {
	return _1dda1aa6e_FindTypeEnum(_self_.safe_ptr<_1dda18891_Package>(), _4131_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace506_FindPackage_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _930_ident) {
	return _1dda1e0a0_FindPackage(_self_.safe_ptr<_1dda1da83_Sema>(), _930_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace814_SelectPackage_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _1332_selector) {
	return _1dda1e3ad_SelectPackage(_self_.safe_ptr<_1dda1da83_Sema>(), _1332_selector);
}
inline jule::Ptr<_1dda418db_Var> _1ddacebbb_FindVar_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1dda1e765_FindVar(_self_.safe_ptr<_1dda1da83_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddad0073_FindTypeAlias_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1dda1eb1c_FindTypeAlias(_self_.safe_ptr<_1dda1da83_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_2090d5849_Struct> _1ddad042a_FindStruct_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1dda1eec4_FindStruct(_self_.safe_ptr<_1dda1da83_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1dd9c761e_Fn> _1ddad07d2_FindFn_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1dda2037b_FindFn(_self_.safe_ptr<_1dda1da83_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1dd9d9521_Trait> _1ddad0ae0_FindTrait_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3328_ident) {
	return _1dda20689_FindTrait(_self_.safe_ptr<_1dda1da83_Sema>(), _3328_ident);
}
inline jule::Ptr<_1dd9db666_Enum> _1ddad0ded_FindEnum_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3727_ident) {
	return _1dda20997_FindEnum(_self_.safe_ptr<_1dda1da83_Sema>(), _3727_ident);
}
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddad120b_FindTypeEnum_3(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _4131_ident) {
	return _1dda20ca5_FindTypeEnum(_self_.safe_ptr<_1dda1da83_Sema>(), _4131_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace506_FindPackage_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _930_ident) {
	return _1dda84b3d_FindPackage(_self_.safe_ptr<_1dda84621_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1dda15937_ImportInfo> _1ddace814_SelectPackage_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _1332_selector) {
	return _1dda84e4b_SelectPackage(_self_.safe_ptr<_1dda84621_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1dda418db_Var> _1ddacebbb_FindVar_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1dda85303_FindVar(_self_.safe_ptr<_1dda84621_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddad0073_FindTypeAlias_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1dda856aa_FindTypeAlias(_self_.safe_ptr<_1dda84621_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_2090d5849_Struct> _1ddad042a_FindStruct_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1dda85a62_FindStruct(_self_.safe_ptr<_1dda84621_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1dd9c761e_Fn> _1ddad07d2_FindFn_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1dda85e19_FindFn(_self_.safe_ptr<_1dda84621_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1dd9d9521_Trait> _1ddad0ae0_FindTrait_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3328_ident) {
	return _1dda86227_FindTrait(_self_.safe_ptr<_1dda84621_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1dd9db666_Enum> _1ddad0ded_FindEnum_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _3727_ident) {
	return _1dda86535_FindEnum(_self_.safe_ptr<_1dda84621_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddad120b_FindTypeEnum_4(jule::Trait<_1ddad134e_Lookup> _self_, jule::Str _4131_ident) {
	return _1dda86843_FindTypeEnum(_self_.safe_ptr<_1dda84621_SymbolTable>(), _4131_ident);
}
inline jule::Str _1c56e9920_Name_0(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d16ea6_Name(_self_.safe_ptr<_1d4d16b43_Flag>());
}
inline jule::I32 _1c56e9a52_Short_0(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1736e_Short(_self_.safe_ptr<_1d4d16b43_Flag>());
}
inline jule::Str _1c56e9b84_What_0(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d170d8_What(_self_.safe_ptr<_1d4d16b43_Flag>());
}
inline void _1c56e9d0a_Reset_0(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	_1d4d1722b_Reset(_self_.safe_ptr<_1d4d16b43_Flag>());
}
inline jule::Str _1c56e9920_Name_1(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1a40a_Name(_self_.safe_ptr<_1d4d1a87d_Flag>());
}
inline jule::I32 _1c56e9a52_Short_1(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1adcd_Short(_self_.safe_ptr<_1d4d1a87d_Flag>());
}
inline jule::Str _1c56e9b84_What_1(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1ab69_What(_self_.safe_ptr<_1d4d1a87d_Flag>());
}
inline void _1c56e9d0a_Reset_1(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	_1d4d1ac9b_Reset(_self_.safe_ptr<_1d4d1a87d_Flag>());
}
inline jule::Str _1c56e9920_Name_2(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1dc27_Name(_self_.safe_ptr<_1d4d1e19a_Flag>());
}
inline jule::I32 _1c56e9a52_Short_2(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1e6ea_Short(_self_.safe_ptr<_1d4d1e19a_Flag>());
}
inline jule::Str _1c56e9b84_What_2(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d1e486_What(_self_.safe_ptr<_1d4d1e19a_Flag>());
}
inline void _1c56e9d0a_Reset_2(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	_1d4d1e5b8_Reset(_self_.safe_ptr<_1d4d1e19a_Flag>());
}
inline jule::Str _1c56e9920_Name_3(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d22588_Name(_self_.safe_ptr<_1d4d22a0b_Flag>());
}
inline jule::I32 _1c56e9a52_Short_3(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d2305b_Short(_self_.safe_ptr<_1d4d22a0b_Flag>());
}
inline jule::Str _1c56e9b84_What_3(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d22ce7_What(_self_.safe_ptr<_1d4d22a0b_Flag>());
}
inline void _1c56e9d0a_Reset_3(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	_1d4d22e29_Reset(_self_.safe_ptr<_1d4d22a0b_Flag>());
}
inline jule::Str _1c56e9920_Name_4(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d25da5_Name(_self_.safe_ptr<_1d4d26328_Flag>());
}
inline jule::I32 _1c56e9a52_Short_4(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d26878_Short(_self_.safe_ptr<_1d4d26328_Flag>());
}
inline jule::Str _1c56e9b84_What_4(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	return _1d4d26614_What(_self_.safe_ptr<_1d4d26328_Flag>());
}
inline void _1c56e9d0a_Reset_4(jule::Trait<_1c572e45a_CommonFlag> _self_) {
	_1d4d26746_Reset(_self_.safe_ptr<_1d4d26328_Flag>());
}


static _1dda12cb9_ImporterMptrData _1dda12cb9_Importer_mptr_data[] = {
	{
		._1dda11bca_SetModPath=_1dda11bca_SetModPath_0,
		._1dda11e2d_GetModPath=_1dda11e2d_GetModPath_0,
		._1dda1223b_ModById=_1dda1223b_ModById_0,
		._1dda12549_GetImport=_1dda12549_GetImport_0,
		._1dda12901_ImportPackage=_1dda12901_ImportPackage_0,
		._1dda12b76_Imported=_1dda12b76_Imported_0,
	},
};
static _1ddab4e9d_KindMptrData _1ddab4e9d_Kind_mptr_data[] = {
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_0,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_0,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_1,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_1,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_2,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_2,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_3,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_3,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_4,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_4,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_5,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_5,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_6,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_6,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_7,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_7,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_8,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_8,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_9,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_9,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_10,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_10,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_11,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_11,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_12,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_12,
	},
	{
		._1ddab4a4c_Str=_1ddab4a4c_Str_13,
		._1ddab4d5a_Equal=_1ddab4d5a_Equal_13,
	},
};
static _1ddad134e_LookupMptrData _1ddad134e_Lookup_mptr_data[] = {
	{
		._1ddace506_FindPackage=_1ddace506_FindPackage_0,
		._1ddace814_SelectPackage=_1ddace814_SelectPackage_0,
		._1ddacebbb_FindVar=_1ddacebbb_FindVar_0,
		._1ddad0073_FindTypeAlias=_1ddad0073_FindTypeAlias_0,
		._1ddad042a_FindStruct=_1ddad042a_FindStruct_0,
		._1ddad07d2_FindFn=_1ddad07d2_FindFn_0,
		._1ddad0ae0_FindTrait=_1ddad0ae0_FindTrait_0,
		._1ddad0ded_FindEnum=_1ddad0ded_FindEnum_0,
		._1ddad120b_FindTypeEnum=_1ddad120b_FindTypeEnum_0,
	},
	{
		._1ddace506_FindPackage=_1ddace506_FindPackage_1,
		._1ddace814_SelectPackage=_1ddace814_SelectPackage_1,
		._1ddacebbb_FindVar=_1ddacebbb_FindVar_1,
		._1ddad0073_FindTypeAlias=_1ddad0073_FindTypeAlias_1,
		._1ddad042a_FindStruct=_1ddad042a_FindStruct_1,
		._1ddad07d2_FindFn=_1ddad07d2_FindFn_1,
		._1ddad0ae0_FindTrait=_1ddad0ae0_FindTrait_1,
		._1ddad0ded_FindEnum=_1ddad0ded_FindEnum_1,
		._1ddad120b_FindTypeEnum=_1ddad120b_FindTypeEnum_1,
	},
	{
		._1ddace506_FindPackage=_1ddace506_FindPackage_2,
		._1ddace814_SelectPackage=_1ddace814_SelectPackage_2,
		._1ddacebbb_FindVar=_1ddacebbb_FindVar_2,
		._1ddad0073_FindTypeAlias=_1ddad0073_FindTypeAlias_2,
		._1ddad042a_FindStruct=_1ddad042a_FindStruct_2,
		._1ddad07d2_FindFn=_1ddad07d2_FindFn_2,
		._1ddad0ae0_FindTrait=_1ddad0ae0_FindTrait_2,
		._1ddad0ded_FindEnum=_1ddad0ded_FindEnum_2,
		._1ddad120b_FindTypeEnum=_1ddad120b_FindTypeEnum_2,
	},
	{
		._1ddace506_FindPackage=_1ddace506_FindPackage_3,
		._1ddace814_SelectPackage=_1ddace814_SelectPackage_3,
		._1ddacebbb_FindVar=_1ddacebbb_FindVar_3,
		._1ddad0073_FindTypeAlias=_1ddad0073_FindTypeAlias_3,
		._1ddad042a_FindStruct=_1ddad042a_FindStruct_3,
		._1ddad07d2_FindFn=_1ddad07d2_FindFn_3,
		._1ddad0ae0_FindTrait=_1ddad0ae0_FindTrait_3,
		._1ddad0ded_FindEnum=_1ddad0ded_FindEnum_3,
		._1ddad120b_FindTypeEnum=_1ddad120b_FindTypeEnum_3,
	},
	{
		._1ddace506_FindPackage=_1ddace506_FindPackage_4,
		._1ddace814_SelectPackage=_1ddace814_SelectPackage_4,
		._1ddacebbb_FindVar=_1ddacebbb_FindVar_4,
		._1ddad0073_FindTypeAlias=_1ddad0073_FindTypeAlias_4,
		._1ddad042a_FindStruct=_1ddad042a_FindStruct_4,
		._1ddad07d2_FindFn=_1ddad07d2_FindFn_4,
		._1ddad0ae0_FindTrait=_1ddad0ae0_FindTrait_4,
		._1ddad0ded_FindEnum=_1ddad0ded_FindEnum_4,
		._1ddad120b_FindTypeEnum=_1ddad120b_FindTypeEnum_4,
	},
};
static _1c572e45a_CommonFlagMptrData _1c572e45a_CommonFlag_mptr_data[] = {
	{
		._1c56e9920_Name=_1c56e9920_Name_0,
		._1c56e9a52_Short=_1c56e9a52_Short_0,
		._1c56e9b84_What=_1c56e9b84_What_0,
		._1c56e9d0a_Reset=_1c56e9d0a_Reset_0,
	},
	{
		._1c56e9920_Name=_1c56e9920_Name_1,
		._1c56e9a52_Short=_1c56e9a52_Short_1,
		._1c56e9b84_What=_1c56e9b84_What_1,
		._1c56e9d0a_Reset=_1c56e9d0a_Reset_1,
	},
	{
		._1c56e9920_Name=_1c56e9920_Name_2,
		._1c56e9a52_Short=_1c56e9a52_Short_2,
		._1c56e9b84_What=_1c56e9b84_What_2,
		._1c56e9d0a_Reset=_1c56e9d0a_Reset_2,
	},
	{
		._1c56e9920_Name=_1c56e9920_Name_3,
		._1c56e9a52_Short=_1c56e9a52_Short_3,
		._1c56e9b84_What=_1c56e9b84_What_3,
		._1c56e9d0a_Reset=_1c56e9d0a_Reset_3,
	},
	{
		._1c56e9920_Name=_1c56e9920_Name_4,
		._1c56e9a52_Short=_1c56e9a52_Short_4,
		._1c56e9b84_What=_1c56e9b84_What_4,
		._1c56e9d0a_Reset=_1c56e9d0a_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type7_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type7_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=__jule_any_type7_eq, .to_str=__jule_any_type7_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type7 && __jule_any_type7_eq(any.data.alloc, (void*)&other); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ca2c0_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1dd9ca2c0_FnIns> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dda418db_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1dda418db_Var> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d5c23_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_2090d5c23_StructIns> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9d9521_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1dd9d9521_Trait> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d5085_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_2090d5085_Impl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d0426_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_2090d0426_TypeAliasDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d4370_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_2090d4370_StructDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090caad6_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_2090caad6_FnDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d497a_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_2090d497a_TraitDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cbab5_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_2090cbab5_VarDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d27ad_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_2090d27ad_EnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d38be_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2090d38be_TypeEnumDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090b971d_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_2090b971d_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e9971_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1dd9e9971_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e7232_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1dd9e7232_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c36d6_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dda8944a_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1dda8944a_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c4781_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1dd9c4781_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c2196_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c0a79_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c0370_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c075a_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c134e_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c1805_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c32eb_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1dd9c32eb_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c2e88_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c4a6c_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1dd9c4a6c_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bb1a1_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1dd9bb1a1_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e7c8d_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1dd9e7c8d_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e8079_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1dd9e8079_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090ccda2_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_2090ccda2_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e84ec_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1dd9e84ec_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cd743_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_2090cd743_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e8dd2_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1dd9e8dd2_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e92cd_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1dd9e92cd_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e9c5c_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1dd9e9c5c_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ea114_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1dd9ea114_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ea587_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1dd9ea587_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bb9cb_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1dd9bb9cb_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ea93e_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1dd9ea93e_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ad050_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1dd9ad050_Const> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9eae7d_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1dd9eae7d_Match> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ec07d_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1dd9ec07d_FallSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9e9685_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1dd9e9685_BreakSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ec402_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1dd9ec402_RetSt> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c90e0_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_2090c90e0_ScopeTree> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090bd678_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_2090bd678_Expr> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cec50_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_2090cec50_Conditional> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cc5cc_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_2090cc5cc_Iter> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cdea2_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_2090cdea2_ContSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c6807_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_2090c6807_LabelSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c6bae_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_2090c6bae_GotoSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c7ae4_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_2090c7ae4_AssignSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d1070_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_2090d1070_MatchCase> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c6e9a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_2090c6e9a_FallSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cdaea_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_2090cdaea_BreakSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090cbe6c_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_2090cbe6c_RetSt> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090be019_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_2090be019_UseExpr> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c761e_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1dd9c761e_Fn> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090d5849_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_2090d5849_Struct> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddab46d9_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ddab46d9_TypeAlias> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9db666_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1dd9db666_Enum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9dcc61_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1dd9dcc61_TypeEnum> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bd23b_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bdadd_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9be638_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1dd9be638_CommonIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9beb99_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1dd9beb99_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9b96dd_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1dd9b96dd_UnaryExprModel> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type76_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type76_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=__jule_any_type76_eq, .to_str=__jule_any_type76_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type76 && __jule_any_type76_eq(any.data.alloc, (void*)&other); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090bb665_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_2090bb665_ArrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090ba90b_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_2090ba90b_SlcTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090baed3_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_2090baed3_PtrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090ba510_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_2090ba510_SptrTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090bbdb3_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_2090bbdb3_MapTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090babe7_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_2090babe7_TupleTypeDecl> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c0dea_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_2090c0dea_VariadicExpr> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bb558_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1dd9bb558_SliceExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c30d9_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_2090c30d9_FieldExprPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c4580_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_2090c4580_KeyValPair> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c0339_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_2090c0339_IdentExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090be305_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_2090be305_TupleExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bee96_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1dd9bee96_TupleExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c40aa_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1dd9c40aa_RuneExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddab53cc_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ddab53cc_TypeKind> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9be34c_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1dd9be34c_ArrayExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c1acc_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_2090c1acc_SubIdentExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090b9d6c_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_2090b9d6c_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c0a43_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_2090c0a43_UnaryExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090b9157_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_2090b9157_TypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c1659_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_2090c1659_NsSelectionExpr> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090ba224_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_2090ba224_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bcbec_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1dd9bcbec_SlicingExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type100_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type100_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=__jule_any_type100_eq, .to_str=__jule_any_type100_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type100 && __jule_any_type100_eq(any.data.alloc, (void*)&other); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ba7ee_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1dd9ba7ee_CastingExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c4c67_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_2090c4c67_SliceExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9b9e91_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1dd9b9e91_StructLitExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bde84_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1dd9bde84_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bc6ad_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1dd9bc6ad_MapExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9bbd83_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1dd9bbd83_AnonFnExprModel> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090bd964_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_2090bd964_RangeExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090be6ac_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_2090be6ac_LitExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090bedb6_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_2090bedb6_UnsafeExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c55d6_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_2090c55d6_IndexingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c5be1_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_2090c5be1_SlicingExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c12a2_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_2090c12a2_CastExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c3837_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_2090c3837_StructLit> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c265a_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_2090c265a_FnCallExpr> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c3caa_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_2090c3caa_BraceLit> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2090c2050_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_2090c2050_BinopExpr> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type117_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type117_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=__jule_any_type117_eq, .to_str=__jule_any_type117_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type117 && __jule_any_type117_eq(any.data.alloc, (void*)&other); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9b9336_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1dd9b9336_BinopExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9ba29e_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1dd9ba29e_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c0e64_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c1cab_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c24b5_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c27d4_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c39d3_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1dd9c39d3_SizeofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c3cbe_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1dd9c3cbe_AlignofExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd9c43b8_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddb7a64b_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ddb7a64b_MutSlicingExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddb7a9e2_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ddb7a9e2_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddb7a085_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ddb7a085_PushToSliceExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddb7989d_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ddb7989d_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ddb79bbc_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1ddb79bbc_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Str _1c56ea756_OutDir = jule::Str("dist", 4);
jule::Str _1c56eaa64_OutName = jule::Str("ir.cpp", 6);
jule::Str _1c56eabb8_Out = jule::Str();
jule::Str _220abc78c_Compiler = jule::Str();
jule::Str _220b7a53c_CompilerPath = jule::Str();
jule::Str _220b7a75c_CppStd = jule::Str("cpp17", 5);
jule::Bool _220b7a97c_Shadowing = false;
jule::Bool _220b7abd0_Transpilation = false;
jule::Bool _220b7ae99_Test = false;
jule::Bool _220b7b263_RC = true;
jule::Bool _220b7b63c_Safety = true;
jule::Bool _220b7b906_Production = false;
jule::Ptr<_2229bb1b1_RangeTable> _222951a92__L = jule::new_ptr<_2229bb1b1_RangeTable>(_2229bb1b1_RangeTable{._field_R16=jule::Slice<_2229ba7ba_Range16>::make({_2229ba7ba_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_2229ba7ba_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_2229ba7ba_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_2229ba7ba_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_2229ba7ba_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_2229ba7ba_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_2229ba7ba_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_2229ba7ba_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_2229ba7ba_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_2229ba7ba_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_2229ba7ba_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_2229ba7ba_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_2229ba7ba_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_2229ba7ba_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_2229ba7ba_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_2229ba7ba_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_2229ba7ba_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_2229ba7ba_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_2229ba7ba_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_2229ba7ba_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_2229ba7ba_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_2229ba7ba_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_2229ba7ba_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_2229ba7ba_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_2229ba7ba_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_2229ba7ba_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_2229ba7ba_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_2229ba7ba_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_2229ba7ba_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_2229ba7ba_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2229ba7ba_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_2229ba7ba_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_2229ba7ba_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_2229ba7ba_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_2229ba7ba_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_2229ba7ba_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_2229ba7ba_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2229bac3d_Range32>::make({_2229bac3d_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_2229bac3d_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_2229bac3d_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_2229bac3d_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_2229bac3d_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_2229bac3d_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_2229bac3d_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_2229bac3d_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_2229bac3d_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_2229bac3d_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_2229bac3d_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_2229bac3d_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_2229bac3d_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_2229bac3d_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_2229bac3d_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_2229bac3d_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_2229bac3d_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_2229bac3d_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_2229bac3d_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_2229bac3d_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2229bac3d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_2229bac3d_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_2229bac3d_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_2229bac3d_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_2229bb1b1_RangeTable> _222952a82__LU = jule::new_ptr<_2229bb1b1_RangeTable>(_2229bb1b1_RangeTable{._field_R16=jule::Slice<_2229ba7ba_Range16>::make({_2229ba7ba_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_2229ba7ba_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_2229ba7ba_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_2229ba7ba_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_2229ba7ba_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_2229ba7ba_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_2229ba7ba_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_2229ba7ba_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_2229ba7ba_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_2229ba7ba_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_2229ba7ba_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_2229ba7ba_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_2229bac3d_Range32>::make({_2229bac3d_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_2229bac3d_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_2229bac3d_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_2229bac3d_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_2229bac3d_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_2229bac3d_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _220b9606e_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _222b29cc0_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _222b2b91a_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _222b72147_PathStdlib = jule::Str();
jule::Str _222b729c7_PathExec = jule::Str();
jule::Str _222b73be8_PathWd = jule::Str();
jule::Str _222b82564_PathApi = jule::Str();
jule::Array<jule::I32,5> _222db16a5_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _222db18c5_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _222db1b28_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _222e5b71c_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _222e5ba19_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_222e69609_kindPair,47> _222e69a38_keywords = jule::Array<_222e69609_kindPair,47>({_222e69609_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_222e69609_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_222e69609_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_222e69609_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_222e69609_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_222e69609_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_222e69609_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_222e69609_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_222e69609_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_222e69609_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_222e69609_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_222e69609_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_222e69609_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_222e69609_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_222e69609_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_222e69609_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_222e69609_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_222e69609_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_222e69609_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_222e69609_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_222e69609_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_222e69609_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_222e69609_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_222e69609_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_222e69609_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_222e69609_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_222e69609_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_222e69609_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_222e69609_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_222e69609_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_222e69609_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_222e69609_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_222e69609_kindPair,39> _222e69d79_basicOps = jule::Array<_222e69609_kindPair,39>({_222e69609_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_222e69609_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_222e69609_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_222e69609_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_222e69609_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_222e69609_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_222e69609_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1dd954ba6__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1dd95526c__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_217444606_floatInfo _2173c3ad5_f32info = _217444606_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_217444606_floatInfo _21745a7b5_f64info = _217444606_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1dd99230e_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1dd9933dc_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1dd993871_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1dd993a91_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1dd9955cb_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1dd99902a_leftCheat> _1dd999459_leftCheats = jule::Slice<_1dd99902a_leftCheat>::make({_1dd99902a_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1dd99902a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1dd99902a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1dd99902a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1dd99902a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1dd99902a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1dd99902a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1dd99902a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1dd99902a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1dd99902a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1dd99902a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1dd99902a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1dd99902a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1dd99902a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1dd99902a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1dd99902a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1dd99902a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1dd99902a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1dd99902a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1dd99902a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1dd99902a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1dd99902a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1dd99902a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1dd99902a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1dd99902a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1dd99902a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1dd99902a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1dd99902a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1dd99902a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1dd99902a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1dd99902a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1dd99902a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1dd99902a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1dd99902a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1dd99902a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1dd99902a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1dd99902a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1dd99902a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1dd99902a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1dd99902a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1dd99902a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1dd99902a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1dd99902a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1dd99902a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1dd99902a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1dd99902a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1dd99902a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1dd99902a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1dd99902a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1dd99902a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1dd99902a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1dd99902a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1dd99902a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1dd99902a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1dd99902a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1dd99902a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1dd99902a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1dd99902a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1dd99902a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1dd99902a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1dd99902a_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1dd99eeed_BitSize = 0LL;
jule::Str _1dd9a0262_SysInt = jule::Str();
jule::Str _1dd9a052b_SysUint = jule::Str();
jule::Slice<jule::Str> _1dd9de9cc_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1ddb8e42e_Copy = false;
jule::Bool _1ddb8e73c_Deadcode = false;
jule::Bool _1ddb8ea06_Append = false;
jule::Bool _1ddb8ed14_Math = false;
jule::Bool _1ddb900cd_Access = false;
jule::Bool _1ddb90397_Inline = false;
jule::Bool _1ddb90661_Ptr = false;
jule::Bool _1ddb90a3a_Cond = false;
jule::Bool _21734a551_exprEnabled = false;
jule::Bool _21734ba5d_scopeEnabled = false;
jule::Array<jule::U64,12> _1c56ca04e_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1c5625de0_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_2229bb1b1_RangeTable> _222960287_Upper = _222952a82__LU;
jule::Array<jule::U8,256> _2229aecba__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _222a7bc33_first = jule::Array<jule::U8,256>({});
jule::Array<_222a7c2b6_acceptRange,16> _222a7c5c4_acceptRanges = jule::Array<_222a7c2b6_acceptRange,16>({_222a7c2b6_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_222a7c2b6_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_222a7c2b6_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_222a7c2b6_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_222a7c2b6_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _222b0c973_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _222b724cc_Os = jule::Str("darwin", 6);
jule::Str _222b49b58_Arch = jule::Str("arm64", 5);
jule::Ptr<_2229bb1b1_RangeTable> _222958c31_Letter = _222951a92__L;





std::ostream &operator<<(std::ostream &_Stream, _2229ba7ba_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2229bac3d_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2229bb1b1_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _222a7c2b6_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _221aea786_index(_221ade318_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];;
	};
	return (*_self_)._field_path[_5424_i];;
}



inline void _221aed0b3_append(_221ade318_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _221aee8de_string(_221ade318_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));;
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _221ade318_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _220d12cac_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_220d12cac_DirEntry>>> static__221a55d95_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_220d12cac_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _2219e40db_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_220d12cac_DirEntry>>>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _2219e4383_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1c6048ec7;
			};
			jule::Str _2517_name = _2219c5122_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_221a21459_Status> _2621_stat = ({
				auto except = static__220c2ab5e_Of(_221b355c3_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_220d12cac_DirEntry>>>(except.error);
				} jule::Ptr<_221a21459_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_220d12cac_DirEntry>(_220d12cac_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1c6048ec7:;
	}
	_iter_end_1c6048ec7:;;
	_2219e462a_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_220d12cac_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__221a808d6_Create(jule::Str _3922_path) {
	if ((_2219e4eaa_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__221a5a74b_Remove(jule::Str _5122_path) {
	if ((_2219e5252_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _220d5adc1_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_220c4c3de_File>> static__220c4d335_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _2219e37c2_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_220c4c3de_File>>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_220c4c3de_File>>(jule::Any(), static__220c4c5cb_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__220c4e688_Remove(jule::Str _3022_path) {
	if ((_2219e54e9_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _220d5bb3b_Write(_220c4c3de_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_221a070bb_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _220c10dca_Read(_220c4c3de_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_221a0685c_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_220c4c3de_File> static__220c4c5cb_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_220c4c3de_File>(_220c4c3de_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_220c4c3de_File>> static__220c2b962_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_220c4c3de_File>>(jule::Any(), ({
		auto except = static__220c4d335_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_220c4c3de_File>>(except.error);
		} jule::Ptr<_220c4c3de_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__220c2c0e4_Read(jule::Str _6720_path) {
	jule::Ptr<_221a21459_Status> _6813_s = ({
		auto except = static__220c2ab5e_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});;
	if ((!(_220d134a5_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_220c4c3de_File> _7817_f = ({
		auto except = static__220c4d335_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_220c4c3de_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _220c2b225_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _220c10dca_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL,_8213_n));;
}



inline jule::VoidExceptional static__220d13ab0_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_220c4c3de_File> _9217_f = ({
		auto except = static__220c4d335_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_220c4c3de_File>(nullptr);});
	});;
	({
		auto except = _220d5bb3b_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _220c2b225_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _220d14176_Seek(_220c4c3de_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _221a06472_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _220c2b225_Close(_220c4c3de_File* _self_) {
	if ((_221a06bd1_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _220c4c3de_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_221a21459_Status>> static__220c2ab5e_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_221a21459_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _2219e33d7_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_221a21459_Status>>(jule::Any(), jule::new_ptr<_221a21459_Status>(_221a21459_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_221a21459_Status>>(jule::Any(_220c31add_getLastFsError(), &__jule_any_type0));
}



inline jule::Bool _220c4d17b_IsDir(_221a21459_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _220d134a5_IsReg(_221a21459_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _221a21459_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_222b83c80_Cmd> static__222b841ae_New(jule::Str _2019_path) {
	return jule::new_ptr<_222b83c80_Cmd>(_222b83c80_Cmd{._field_path=_2019_path, });;
}



inline jule::Exceptional<jule::I64> _222b84423_Spawn(_222b83c80_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _222b872e4_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::Exceptional<jule::I64> _222b872e4_spawn(_222b83c80_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type1));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c607230d:;
			{
				return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c6072d58:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_222b86b1d_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_222b87008_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_222b87b1e_Exit(255LL);
			}
		}
		_match_end_1c6072cae:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_222b834ee_getLastProcessError(), &__jule_any_type1));
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_6513_status)));;
}







std::ostream &operator<<(std::ostream &_Stream, _222b83c80_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _222b38ae2_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _222e625be_Prec(_222e62217_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1c61242a0:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1c6124316:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1c612405d:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1c61240c4:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1c612413a:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c61239a8:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c6123953:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _222e62217_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _222e679ae_IsOk(_222e675a2_File* _self_) {
	({
		auto except = static__220c2ab5e_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});
	return true;;
}



inline void _222e67c34_Fill(_222e675a2_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _222e67e98_Dir(_222e675a2_File* _self_) {
	return _221b39132_Dir((*_self_)._field_Path);;
}



inline jule::Str _222e6820c_Name(_222e675a2_File* _self_) {
	return _221b1ad8e_Base((*_self_)._field_Path);;
}



inline jule::Uintptr _222e68471_Addr(_222e675a2_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));;
}



inline jule::Str _222e6877e_GetRow(_222e675a2_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1c6128d54;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1c6128d54:;
	}
	_iter_end_1c6128d54:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _222e675a2_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _222e69609_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _222e7070e_pushErr(_222e7016a_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_222e6a374_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,_45839_args));;
}



inline void _222e70a2d_pushErrTok(_222e7016a_lex* _self_, jule::Ptr<_222e62217_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_222e6a374_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _222e70c09_lex(_222e7016a_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_222e72c0b_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_222e62217_Token> _47321_token = _222e74081_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1c615c7c2:;
	}
	_iter_end_1c615c7c2:;;
}



inline jule::Str _222e71017_id(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_48222_ln);
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_222e656e3_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_48222_ln.slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_222e65c32_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_222e656e3_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1c61609b2:;
	}
	_iter_end_1c61609b2:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);;
}



inline jule::Slice<jule::U8> _222e7127b_resume(_222e7016a_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_222e65292_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c6165489:;
						{
							_222e72c0b_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1c6165269:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1c6160929:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1c6164d6d:;
				};
				goto _iter_next_1c616361e;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1c6164224;
					};
				}
			_iter_next_1c6164224:;
			}
			_iter_end_1c6164224:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);;
		}
	_iter_next_1c616361e:;
	}
	_iter_end_1c616361e:;;
	return nullptr;;
}



inline void _222e71501_lexLineComment(_222e7016a_lex* _self_, jule::Ptr<_222e62217_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1c6167c72;
			};
		}
	_iter_next_1c6167c72:;
	}
	_iter_end_1c6167c72:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _222e71776_lexRangeComment(_222e7016a_lex* _self_, jule::Ptr<_222e62217_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1c616b0b6;
			};
			if ((_55417_r == '\n')) {
				_222e72c0b_newLine(&(*_self_));
				goto _iter_next_1c616b0b6;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c616b0b6:;
	}
	_iter_end_1c616b0b6:;;
	_222e7070e_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _222e71a84_num(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str __jule_func_result;
	if ((_57823_txt[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_222e6db91_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_222e6d8e9_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_222e6c343_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_222e6c09b_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _222e71d92_escapeSeq(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c617608d:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c6175ec2:;
			{
				_60117_seq=_222e6e279_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c6175c08:;
			{
				_60117_seq=_222e6e543_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c6175c6e:;
			{
				_60117_seq=_222e6e6ec_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1c6175499:;
			{
				_60117_seq=_222e6e983_byteEscape(_60029_txt);
			}
		}
		_match_end_1c6175ad7:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_222e7070e_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _222e72249_getRune(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _222e71d92_escapeSeq(&(*_self_), _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_63027_txt);
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _222e72557_lexRune(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1c617c0a5;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_222e7070e_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_222e72c0b_newLine(&(*_self_));
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _222e72249_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_222a7ea49_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1c617c0a5;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1c617c0a5:;
	}
	_iter_end_1c617c0a5:;;
	if ((_64217_n == 0LL)) {
		_222e7070e_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_222e7070e_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _222e727bb_lexStr(_222e7016a_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1c6183ba0;
			};
			if ((_68717_ch == '\n')) {
				_222e72c0b_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_222e7070e_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _222e72249_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_222a7ea49_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1c6183ba0;
			};
		}
	_iter_next_1c6183ba0:;
	}
	_iter_end_1c6183ba0:;;
	return _67917_s;;
}



inline jule::Bool _222e72a30_isFirstTokenOfLine(_222e7016a_lex* _self_) {
	return ((*_self_)._field_column == 1LL);;
}



inline void _222e72c0b_newLine(_222e7016a_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _222e73206_isOp(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_222e62217_Token>& _72066_t) {
	if ((!(_222e6a709_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _222e735ad_lexBasicOps(_222e7016a_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_222e62217_Token>& _73048_tok) {
	{
		auto &expr = _222e69d79_basicOps;
		auto it = expr.begin();
		_iter_begin_1c6189d82:;
		if (it != expr.end()) {
			_222e69609_kindPair &_73116_pair = *it;
			{
				if (_222e73206_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;;
				};
			}
			_iter_next_1c6189d82:;
			++it;
			goto _iter_begin_1c6189d82;
		}
		_iter_end_1c6189d82:;
	};
	return false;;
}



inline jule::Bool _222e73965_lexId(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_222e62217_Token>& _74043_t) {
	jule::Str _74113_lex = _222e71017_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _222e73d1c_lexNum(_222e7016a_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_222e62217_Token>& _75044_t) {
	jule::Str _75113_lex = _222e71a84_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_222e62217_Token> _222e74081_token(_222e7016a_lex* _self_) {
	jule::Ptr<_222e62217_Token> _76217_t = jule::new_ptr<_222e62217_Token>(_222e62217_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _222e7127b_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_222e73d1c_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c6190c9a:;
			{
				goto _match_end_1c619034e;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1c6190eba:;
			{
				_76217_t.get()._field_Kind=_222e72557_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1c6191680:;
			{
				_76217_t.get()._field_Kind=_222e727bb_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_222e6a709_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1c61919d2:;
			{
				_222e71501_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_222e6a709_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1c6191a48:;
			{
				_222e71776_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_222e73206_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e73206_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e73206_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e73206_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e73206_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e73206_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _222e735ad_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c6191aae:;
			{
				goto _match_end_1c619034e;
			}
		}
		else if (_222e73965_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1c619043c:;
			{
				{
					auto &expr = _222e69a38_keywords;
					auto it = expr.begin();
					_iter_begin_1c6197257:;
					if (it != expr.end()) {
						_222e69609_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1c6197257;
							};
						}
						_iter_next_1c6197257:;
						++it;
						goto _iter_begin_1c6197257;
					}
					_iter_end_1c6197257:;
				};
			}
		}
		else {
			_case_begin_1c61903c6:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_222e7070e_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type2)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1c619034e:;
	};
	(*_self_)._field_column+=_222a7ea49_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _222e7016a_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _209084bc2_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090859b4_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _209085db0_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090b9157_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090b9a81_IsPrim(_2090b971d_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _2090b971d_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090b9d6c_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ba224_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ba510_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ba90b_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090babe7_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090bb335_IsUnsafe(_2090baed3_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090baed3_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090bba3e_AutoSized(_2090bb665_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bb665_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bbdb3_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bc26a_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bd678_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bd964_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090be019_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090be305_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090bea0e_IsNil(_2090be6ac_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _2090be6ac_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090bedb6_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c068b_IsSelf(_2090c0339_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c0339_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c0a43_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c0dea_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c12a2_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c1659_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c1acc_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c2050_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c29bd_Unhandled(_2090c265a_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);;
}



inline jule::Bool _2090c2c32_Ignored(_2090c265a_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c265a_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c343b_IsTargeted(_2090c30d9_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c30d9_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c3837_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c410c_IsEmpty(_2090c3caa_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c3caa_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c4580_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c5097_IsEmpty(_2090c4c67_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c4c67_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c55d6_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c5be1_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c5ecc_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c6450_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c6807_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c6bae_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c6e9a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c75a5_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c7ae4_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c89d5_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c90e0_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090c9b29_IsSelf(_2090c97b6_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _2090c9d8d_IsRef(_2090c97b6_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _2090c97b6_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090cae38_IsAnon(_2090caad6_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _2090caad6_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cbab5_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cbe6c_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090cc92e_IsInf(_2090cc5cc_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cc5cc_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090cd204_IsWhileNext(_2090ccda2_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ccda2_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cd743_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cdaea_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cdea2_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ce425_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090ce7cc_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090cec50_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d0426_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d0899_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d1070_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d1812_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090d20d7_AutoExpr(_2090d1c85_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d1c85_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090d2d41_DefaultTyped(_2090d27ad_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d27ad_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d32b4_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d38be_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d3abc_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d4370_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d497a_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2090d53e8_IsTraitImpl(_2090d5085_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _2090d565c_IsStructImpl(_2090d5085_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d5085_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _217444606_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9903b7_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd99902a_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9934db_set(_1dd9999ed_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1c6715891:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1c6715918:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1c671572b:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1c6717a80:;
					{
						goto _iter_next_1c6717354;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1c6717b07:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1c6717354;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1c6717b7e:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1c6717354;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1c6717354;
					}
				}
				_match_end_1c671795e:;
			};
			goto _iter_end_1c6717354;
		}
	_iter_next_1c6717354:;
	}
	_iter_end_1c6717354:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1dd991451_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1c672036d;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1c672036d:;
		}
		_iter_end_1c672036d:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dd99361d_floatBits(_1dd9999ed_decimal* _self_, _217444606_floatInfo& _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1dd9933dc_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1dd9933dc_powtab[(*_self_)._field_dp];
			};
			_1dd99a14c_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1c6726c8c:;
	}
	_iter_end_1c6726c8c:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1dd9933dc_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1dd9933dc_powtab[(-((*_self_)._field_dp))];
			};
			_1dd99a14c_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1c672751d:;
	}
	_iter_end_1c672751d:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1dd99a14c_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1dd99a14c_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1dd99ab31_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dd999dc7_assign(_1dd9999ed_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1c67354a4:;
	}
	_iter_end_1c67354a4:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1c6735e22:;
	}
	_iter_end_1c6735e22:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1dd99b1d6_trim((*_self_));
}



inline void _1dd99a14c_shift(_1dd9999ed_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1c6738067:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1c67380de:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1dd99bb76_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1c6738d59:;
				}
				_iter_end_1c6738d59:;;
				_1dd99bb76_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1c6738166:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1dd99b48e_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1c6738cc1:;
				}
				_iter_end_1c6738cc1:;;
				_1dd99b48e_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1c6737e46:;
	};
}



inline void _1dd99a3c2_roundDown(_1dd9999ed_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1dd99b1d6_trim((*_self_));
}



inline void _1dd99a647_roundUp(_1dd9999ed_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1c673c9c8:;
	}
	_iter_end_1c673c9c8:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1dd99a8bc_round(_1dd9999ed_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1dd99beb7_shouldRoundUp((*_self_),_41124_nd)) {
		_1dd99a647_roundUp(&(*_self_), _41124_nd);
	} else {
		_1dd99a3c2_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1dd99ab31_roundedInteger(_1dd9999ed_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1c67343b5:;
	}
	_iter_end_1c67343b5:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1c6742406:;
	}
	_iter_end_1c6742406:;;
	if (_1dd99beb7_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9999ed_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9ad4c3_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=jule::Any(_1622_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9ad76a_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=jule::Any(_1922_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9ada12_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=jule::Any(_2223_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9adca9_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=jule::Any(_2522_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9ae051_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=jule::Any(_2822_x, &__jule_any_type7)});;
}



inline jule::Ptr<_1dd9ad050_Const> static__1dd9ae24e_NewNil(void) {
	return jule::new_ptr<_1dd9ad050_Const>(_1dd9ad050_Const{._field_data=nullptr});;
}



inline jule::I64 _1dd9ae848_ReadI64(_1dd9ad050_Const* _self_) {
	if ((!(_1dd9b1be1_IsI64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3));;
}



inline jule::U64 _1dd9aeaac_ReadU64(_1dd9ad050_Const* _self_) {
	if ((!(_1dd9b1e55_IsU64(&(*_self_))))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4));;
}



inline jule::Bool _1dd9aed21_ReadBool(_1dd9ad050_Const* _self_) {
	if ((!(_1dd9b21b9_IsBool(&(*_self_))))) {
		return false;;
	};
	return (*_self_)._field_data.cast<jule::Bool>(&__jule_any_type5);;
}



inline jule::Str _1dd9b0085_ReadStr(_1dd9ad050_Const* _self_) {
	if ((!(_1dd9b242d_IsStr(&(*_self_))))) {
		return jule::Str();;
	};
	return (*_self_)._field_data.cast<jule::Str>(&__jule_any_type6);;
}



inline jule::F64 _1dd9b02e9_ReadF64(_1dd9ad050_Const* _self_) {
	if ((!(_1dd9b2692_IsF64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7));;
}



inline jule::I64 _1dd9b055d_AsI64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c67be472:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c67be4d8:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67bddcd:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7)));;
			}
		}
		else {
			_case_begin_1c67bd51a:;
			{
				return 0LL;;
			}
		}
		_match_end_1c67bdd67:;
	};
}



inline jule::U64 _1dd9b07c2_AsU64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c67c0de1:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c67c0e57:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67c0929:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7)));;
			}
		}
		else {
			_case_begin_1c67be560:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c67c0880:;
	};
}



inline jule::F64 _1dd9b0a36_AsF64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67c2860:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c67c28c6:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c67c2398:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type4)));;
			}
		}
		else {
			_case_begin_1c67c0ece:;
			{
				return 0LL;;
			}
		}
		_match_end_1c67c22ee:;
	};
}



inline void _1dd9b0cab_SetI64(_1dd9ad050_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x, &__jule_any_type3);
}



inline void _1dd9b1031_SetU64(_1dd9ad050_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x, &__jule_any_type4);
}



inline void _1dd9b12a6_SetBool(_1dd9ad050_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x, &__jule_any_type5);
}



inline void _1dd9b152b_SetStr(_1dd9ad050_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x, &__jule_any_type6);
}



inline void _1dd9b17a1_SetF64(_1dd9ad050_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x, &__jule_any_type7);
}



inline void _1dd9b197c_SetNil(_1dd9ad050_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1dd9b1be1_IsI64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c67c6336:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67c65ab:;
			{
				return false;;
			}
		}
		_match_end_1c67c6556:;
	};
}



inline jule::Bool _1dd9b1e55_IsU64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c67c6e5d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67c67cb:;
			{
				return false;;
			}
		}
		_match_end_1c67c6677:;
	};
}



inline jule::Bool _1dd9b21b9_IsBool(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c67c71e4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67c78cb:;
			{
				return false;;
			}
		}
		_match_end_1c67c7876:;
	};
}



inline jule::Bool _1dd9b242d_IsStr(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c67c8404:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67c7cd8:;
			{
				return false;;
			}
		}
		_match_end_1c67c7b84:;
	};
}



inline jule::Bool _1dd9b2692_IsF64(_1dd9ad050_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67c868a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67c8d72:;
			{
				return false;;
			}
		}
		_match_end_1c67c8d1c:;
	};
}



inline jule::Bool _1dd9b2906_IsNil(_1dd9ad050_Const* _self_) {
	return ((*_self_)._field_data == nullptr);;
}



inline jule::Bool _1dd9b2c14_AreSameTypes(_1dd9ad050_Const* _self_, _1dd9ad050_Const _21327_x) {
	{
		
		if ((_1dd9b1be1_IsI64(&(*_self_)) == _1dd9b1be1_IsI64(&_21327_x))) {
			_case_begin_1c67ca934:;
			{
				return true;;
			}
		}
		else if ((_1dd9b1e55_IsU64(&(*_self_)) == _1dd9b1e55_IsU64(&_21327_x))) {
			_case_begin_1c67ca23b:;
			{
				return true;;
			}
		}
		else if ((_1dd9b2692_IsF64(&(*_self_)) == _1dd9b2692_IsF64(&_21327_x))) {
			_case_begin_1c67ca2b3:;
			{
				return true;;
			}
		}
		else if ((_1dd9b21b9_IsBool(&(*_self_)) == _1dd9b21b9_IsBool(&_21327_x))) {
			_case_begin_1c67ca33a:;
			{
				return true;;
			}
		}
		else if ((_1dd9b242d_IsStr(&(*_self_)) == _1dd9b242d_IsStr(&_21327_x))) {
			_case_begin_1c67ca3b2:;
			{
				return true;;
			}
		}
		else if ((_1dd9b2906_IsNil(&(*_self_)) == _1dd9b2906_IsNil(&_21327_x))) {
			_case_begin_1c67ca615:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c67ca1b4:;
			{
				return false;;
			}
		}
		_match_end_1c67ca0e8:;
	};
}



inline jule::Bool _1dd9b3022_And(_1dd9ad050_Const* _self_, _1dd9ad050_Const _23818_x) {
	{
		
		if ((_1dd9b21b9_IsBool(&(*_self_)) && _1dd9b21b9_IsBool(&_23818_x))) {
			_case_begin_1c67cdc12:;
			{
				return (_1dd9aed21_ReadBool(&(*_self_)) && _1dd9aed21_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1c67cd519:;
			{
				return false;;
			}
		}
		_match_end_1c67cd0da:;
	};
}



inline jule::Bool _1dd9b3330_Or(_1dd9ad050_Const* _self_, _1dd9ad050_Const _24917_x) {
	{
		
		if ((_1dd9b21b9_IsBool(&(*_self_)) && _1dd9b21b9_IsBool(&_24917_x))) {
			_case_begin_1c67d00ba:;
			{
				return (_1dd9aed21_ReadBool(&(*_self_)) || _1dd9aed21_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1c67ce905:;
			{
				return false;;
			}
		}
		_match_end_1c67ce053:;
	};
}



inline jule::Bool _1dd9b363d_Eq(_1dd9ad050_Const* _self_, _1dd9ad050_Const _26017_x) {
	{
		
		if (_1dd9b2906_IsNil(&(*_self_))) {
			_case_begin_1c67d14d9:;
			{
				return _1dd9b2906_IsNil(&_26017_x);;
			}
		}
		else if (_1dd9b21b9_IsBool(&(*_self_))) {
			_case_begin_1c67d0d35:;
			{
				return (_1dd9b21b9_IsBool(&_26017_x) && (_1dd9aed21_ReadBool(&(*_self_)) == _1dd9aed21_ReadBool(&_26017_x)));;
			}
		}
		else if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67d0d9b:;
			{
				return (_1dd9b242d_IsStr(&_26017_x) && (_1dd9b0085_ReadStr(&(*_self_)) == _1dd9b0085_ReadStr(&_26017_x)));;
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67d0e23:;
			{
				return (_1dd9ae848_ReadI64(&(*_self_)) == _1dd9b055d_AsI64(&_26017_x));;
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67d0e9a:;
			{
				return (_1dd9aeaac_ReadU64(&(*_self_)) == _1dd9b07c2_AsU64(&_26017_x));;
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67d11dc:;
			{
				return (_1dd9b02e9_ReadF64(&(*_self_)) == _1dd9b0a36_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1c67d0cbe:;
			{
				return false;;
			}
		}
		_match_end_1c67d041c:;
	};
}



inline jule::Bool _1dd9b394b_Lt(_1dd9ad050_Const* _self_, _1dd9ad050_Const _28717_x) {
	{
		
		if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67d5433:;
			{
				return (_1dd9b242d_IsStr(&_28717_x) && (_1dd9b0085_ReadStr(&(*_self_)) < _1dd9b0085_ReadStr(&_28717_x)));;
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67d4ce5:;
			{
				return (_1dd9ae848_ReadI64(&(*_self_)) < _1dd9b055d_AsI64(&_28717_x));;
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67d4d5b:;
			{
				return (_1dd9aeaac_ReadU64(&(*_self_)) < _1dd9b07c2_AsU64(&_28717_x));;
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67d4dc2:;
			{
				return (_1dd9b02e9_ReadF64(&(*_self_)) < _1dd9b0a36_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1c67d17e7:;
			{
				return false;;
			}
		}
		_match_end_1c67d172b:;
	};
}



inline jule::Bool _1dd9b3c59_LtEq(_1dd9ad050_Const* _self_, _1dd9ad050_Const _31019_x) {
	{
		
		if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67d8326:;
			{
				return (_1dd9b242d_IsStr(&_31019_x) && (_1dd9b0085_ReadStr(&(*_self_)) <= _1dd9b0085_ReadStr(&_31019_x)));;
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67d7bd8:;
			{
				return (_1dd9ae848_ReadI64(&(*_self_)) <= _1dd9b055d_AsI64(&_31019_x));;
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67d7c4e:;
			{
				return (_1dd9aeaac_ReadU64(&(*_self_)) <= _1dd9b07c2_AsU64(&_31019_x));;
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67d7cb5:;
			{
				return (_1dd9b02e9_ReadF64(&(*_self_)) <= _1dd9b0a36_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1c67d5741:;
			{
				return false;;
			}
		}
		_match_end_1c67d5675:;
	};
}



inline jule::Bool _1dd9b4067_Gt(_1dd9ad050_Const* _self_, _1dd9ad050_Const _33317_x) {
	{
		
		if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67db219:;
			{
				return (_1dd9b242d_IsStr(&_33317_x) && (_1dd9b0085_ReadStr(&(*_self_)) > _1dd9b0085_ReadStr(&_33317_x)));;
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67daacb:;
			{
				return (_1dd9ae848_ReadI64(&(*_self_)) > _1dd9b055d_AsI64(&_33317_x));;
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67dab42:;
			{
				return (_1dd9aeaac_ReadU64(&(*_self_)) > _1dd9b07c2_AsU64(&_33317_x));;
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67daba8:;
			{
				return (_1dd9b02e9_ReadF64(&(*_self_)) > _1dd9b0a36_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1c67d8634:;
			{
				return false;;
			}
		}
		_match_end_1c67d8568:;
	};
}



inline jule::Bool _1dd9b4375_GtEq(_1dd9ad050_Const* _self_, _1dd9ad050_Const _35619_x) {
	{
		
		if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67de10c:;
			{
				return (_1dd9b242d_IsStr(&_35619_x) && (_1dd9b0085_ReadStr(&(*_self_)) >= _1dd9b0085_ReadStr(&_35619_x)));;
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67dd9be:;
			{
				return (_1dd9ae848_ReadI64(&(*_self_)) >= _1dd9b055d_AsI64(&_35619_x));;
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67dda35:;
			{
				return (_1dd9aeaac_ReadU64(&(*_self_)) >= _1dd9b07c2_AsU64(&_35619_x));;
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67dda9b:;
			{
				return (_1dd9b02e9_ReadF64(&(*_self_)) >= _1dd9b0a36_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1c67db527:;
			{
				return false;;
			}
		}
		_match_end_1c67db45b:;
	};
}



inline jule::Bool _1dd9b4683_Add(_1dd9ad050_Const* _self_, _1dd9ad050_Const _37722_x) {
	{
		
		if (_1dd9b242d_IsStr(&(*_self_))) {
			_case_begin_1c67e2000:;
			{
				if ((!(_1dd9b242d_IsStr(&_37722_x)))) {
					return false;;
				};
				_1dd9b152b_SetStr(&(*_self_), (_1dd9b0085_ReadStr(&(*_self_)) + _1dd9b0085_ReadStr(&_37722_x)));
			}
		}
		else if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67e18b2:;
			{
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b02e9_ReadF64(&(*_self_)) + _1dd9b0a36_AsF64(&_37722_x))));
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67e1928:;
			{
				if (_1dd9b2692_IsF64(&_37722_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) + _1dd9b02e9_ReadF64(&_37722_x))));
				} else {
					_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) + _1dd9b055d_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67e198e:;
			{
				if (_1dd9b2692_IsF64(&_37722_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) + _1dd9b02e9_ReadF64(&_37722_x))));
				} else {
					_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) + _1dd9b07c2_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1c67de41a:;
			{
				return false;;
			}
		}
		_match_end_1c67de34e:;
	};
	return true;;
}



inline jule::Bool _1dd9b4991_Sub(_1dd9ad050_Const* _self_, _1dd9ad050_Const _40622_x) {
	{
		
		if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67e75ee:;
			{
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b02e9_ReadF64(&(*_self_)) - _1dd9b0a36_AsF64(&_40622_x))));
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67e6e28:;
			{
				if (_1dd9b2692_IsF64(&_40622_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) - _1dd9b02e9_ReadF64(&_40622_x))));
				} else {
					_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) - _1dd9b055d_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67e6e8e:;
			{
				if (_1dd9b2692_IsF64(&_40622_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) - _1dd9b02e9_ReadF64(&_40622_x))));
				} else {
					_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) - _1dd9b07c2_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1c67e6db2:;
			{
				return false;;
			}
		}
		_match_end_1c67e65a9:;
	};
	return true;;
}



inline jule::Bool _1dd9b4c9e_Mul(_1dd9ad050_Const* _self_, _1dd9ad050_Const _43022_x) {
	{
		
		if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c67ebbec:;
			{
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b02e9_ReadF64(&(*_self_)) * _1dd9b0a36_AsF64(&_43022_x))));
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c67eb526:;
			{
				if (_1dd9b2692_IsF64(&_43022_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) * _1dd9b02e9_ReadF64(&_43022_x))));
				} else {
					_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) * _1dd9b055d_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c67eb58c:;
			{
				if (_1dd9b2692_IsF64(&_43022_x)) {
					_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>((_1dd9b0a36_AsF64(&(*_self_)) * _1dd9b02e9_ReadF64(&_43022_x))));
				} else {
					_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) * _1dd9b07c2_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1c67eb4b0:;
			{
				return false;;
			}
		}
		_match_end_1c67eaa64:;
	};
	return true;;
}



inline jule::Bool _1dd9b50ac_Div(_1dd9ad050_Const* _self_, _1dd9ad050_Const _45822_x) {
	{
		
		if (_1dd9b2692_IsF64(&(*_self_))) {
			_case_begin_1c68012ea:;
			{
				jule::F64 _46117_l = _1dd9b0a36_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1dd9b02e9_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c6800b24:;
			{
				jule::F64 _46717_l = _1dd9b0a36_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1dd9b0a36_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c6800b8a:;
			{
				jule::F64 _47317_l = _1dd9b0a36_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1dd9b17a1_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1dd9b0a36_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_1c6800aad:;
			{
				return false;;
			}
		}
		_match_end_1c6800162:;
	};
	return true;;
}



inline jule::Bool _1dd9b53ba_Mod(_1dd9ad050_Const* _self_, _1dd9ad050_Const _48722_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c680584e:;
			{
				jule::I64 _49017_l = _1dd9b055d_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1dd9ae848_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c6805189:;
			{
				jule::U64 _49617_l = _1dd9b07c2_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1dd9aeaac_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_1c6805123:;
			{
				return false;;
			}
		}
		_match_end_1c6805079:;
	};
	return true;;
}



inline jule::Bool _1dd9b56c8_BitwiseAnd(_1dd9ad050_Const* _self_, _1dd9ad050_Const _50929_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c6808a0b:;
			{
				_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) & _1dd9b055d_AsI64(&_50929_x))));
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c6808346:;
			{
				_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) & _1dd9b07c2_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1c68082d0:;
			{
				return false;;
			}
		}
		_match_end_1c6808236:;
	};
	return true;;
}



inline jule::Bool _1dd9b59d6_BitwiseOr(_1dd9ad050_Const* _self_, _1dd9ad050_Const _52328_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c680ab1d:;
			{
				_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) | _1dd9b055d_AsI64(&_52328_x))));
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c680a458:;
			{
				_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) | _1dd9b07c2_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1c680a3e2:;
			{
				return false;;
			}
		}
		_match_end_1c680a326:;
	};
	return true;;
}



inline jule::Bool _1dd9b5ce4_Xor(_1dd9ad050_Const* _self_, _1dd9ad050_Const _53722_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c680cc30:;
			{
				_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_1dd9ae848_ReadI64(&(*_self_)) ^ _1dd9b055d_AsI64(&_53722_x))));
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c680c56a:;
			{
				_1dd9b1031_SetU64(&(*_self_), static_cast<jule::U64>((_1dd9aeaac_ReadU64(&(*_self_)) ^ _1dd9b07c2_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1c680c504:;
			{
				return false;;
			}
		}
		_match_end_1c680c438:;
	};
	return true;;
}



inline jule::Bool _1dd9b6102_Lshift(_1dd9ad050_Const* _self_, _1dd9ad050_Const _55125_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c680ed42:;
			{
				jule::I64 _55417_l = _1dd9b055d_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1dd9b07c2_AsU64(&_55125_x);;
					_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1dd9b6773_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c680e67c:;
			{
				_1dd9b6773_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_1c680e616:;
			{
				return false;;
			}
		}
		_match_end_1c680e54a:;
	};
	return true;;
}



inline jule::Bool _1dd9b6410_Rshift(_1dd9ad050_Const* _self_, _1dd9ad050_Const _57125_x) {
	{
		
		if (_1dd9b1be1_IsI64(&(*_self_))) {
			_case_begin_1c6812707:;
			{
				jule::I64 _57417_l = _1dd9b055d_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1dd9b07c2_AsU64(&_57125_x);;
					_1dd9b0cab_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1dd9b6a70_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_1dd9b1e55_IsU64(&(*_self_))) {
			_case_begin_1c6812042:;
			{
				_1dd9b6a70_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_1c6811ecb:;
			{
				return false;;
			}
		}
		_match_end_1c6811e10:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ad050_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2090d5a36_FieldIns> _2090920ec_instance(jule::Ptr<_2090a98a6_Field> _self_) {
	return jule::new_ptr<_2090d5a36_FieldIns>(_2090d5a36_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _2090a98a6_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090b1eeb_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2090d5c23_StructIns> _209095dc0_instance(jule::Ptr<_2090d5849_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_2090d5c23_StructIns> _9917_ins = jule::new_ptr<_2090d5c23_StructIns>(_2090d5c23_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_2090d5a36_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1dda418db_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1dd9cd4c1_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c6a768e4:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1dda418db_Var>((*(_10621_s))));;
			}
			_iter_next_1c6a768e4:;
			++it;
			goto _iter_begin_1c6a768e4;
		}
		_iter_end_1c6a768e4:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6a77a16:;
		if (it != expr.end()) {
			jule::Ptr<_2090a98a6_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_2090920ec_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1ddab6a4e_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1c6a77a16:;
			++it;
			goto _iter_begin_1c6a77a16;
		}
		_iter_end_1c6a77a16:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1dd9c761e_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1c6a7a4b9:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c761e_Fn> _12125_f = *it;
				{
					jule::Ptr<_1dd9c761e_Fn> _12225_fins = jule::new_ptr<_1dd9c761e_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1c6a7a4b9:;
				++it;
				goto _iter_begin_1c6a7a4b9;
			}
			_iter_end_1c6a7a4b9:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_2090d5c23_StructIns> _209096b29_appendInstance(_2090d5849_Struct* _self_, jule::Ptr<_2090d5c23_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c6a7c71e:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _13921_ains = *it;
			{
				if (_2090aea32_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;;
				};
			}
			_iter_next_1c6a7c71e:;
			++it;
			goto _iter_begin_1c6a7c71e;
		}
		_iter_end_1c6a7c71e:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;;
}



inline jule::Ptr<_1dd9c761e_Fn> _209099c81_FindMethod(_2090d5849_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6a7dc09:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1c6a7dc09:;
			++it;
			goto _iter_begin_1c6a7dc09;
		}
		_iter_end_1c6a7dc09:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _2090991d1_FindStatic(_2090d5849_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c6a7eda3:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1c6a7eda3:;
			++it;
			goto _iter_begin_1c6a7eda3;
		}
		_iter_end_1c6a7eda3:;
	};
	return nullptr;;
}



inline jule::Ptr<_2090a98a6_Field> _20909b5ac_FindField(_2090d5849_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6a80326:;
		if (it != expr.end()) {
			jule::Ptr<_2090a98a6_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1c6a80326:;
			++it;
			goto _iter_begin_1c6a80326;
		}
		_iter_end_1c6a80326:;
	};
	return nullptr;;
}



inline jule::Bool _20909a8a8_IsImplements(_2090d5849_Struct* _self_, jule::Ptr<_1dd9d9521_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c6a8124a:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;;
				};
			}
			_iter_next_1c6a8124a:;
			++it;
			goto _iter_begin_1c6a8124a;
		}
		_iter_end_1c6a8124a:;
	};
	return false;;
}



inline jule::Bool _20909e879_IsDerives(_2090d5849_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1c6a821c4:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1c6a821c4:;
			++it;
			goto _iter_begin_1c6a821c4;
		}
		_iter_end_1c6a821c4:;
	};
	return false;;
}



inline jule::Bool _2090a003e_IsUses(_2090d5849_Struct* _self_, jule::Ptr<_2090d5849_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c6a848e1:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;;
					}
				_iter_next_1c6a85150:;
				}
				_iter_end_1c6a85150:;;
			}
			_iter_next_1c6a848e1:;
			++it;
			goto _iter_begin_1c6a848e1;
		}
		_iter_end_1c6a848e1:;
	};
	return false;;
}



inline jule::Bool _2090a550b_HasRefAccessible(_2090d5849_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6a8531a:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _1dd9c6673_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1c6a8531a:;
			++it;
			goto _iter_begin_1c6a8531a;
		}
		_iter_end_1c6a8531a:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d5849_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d5a36_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9b8d6e_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9b9336_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9b96dd_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9b9ad9_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9b9e91_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ba29e_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ba7ee_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bb1a1_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bb558_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bb9cb_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bbd83_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bc23a_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bc6ad_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bcbec_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bd23b_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bdadd_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bde84_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9be34c_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9be638_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9beb99_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9bee96_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c0370_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c075a_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c0a79_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c0e64_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c134e_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c1805_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c1cab_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c2196_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c24b5_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c27d4_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c2e88_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c32eb_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c36d6_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c39d3_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c3cbe_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c40aa_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c43b8_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c4781_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c4a6c_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c560b_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd9c9401_ParamIns> _1dd9c619a_instance(jule::Ptr<_1dd9c5cd2_Param> _self_) {
	return jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1dd9c640e_IsSelf(_1dd9c5cd2_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1dd9c6673_IsRef(_1dd9c5cd2_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c5cd2_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9c7a81_IsVoid(_1dd9c761e_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);;
}



inline jule::Bool _1dd9c7ce5_IsMethod(_1dd9c761e_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);;
}



inline jule::Bool _1dd9c8059_IsEntryPoint(_1dd9c761e_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _1dd9c82bd_IsInit(_1dd9c761e_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _1dd9c8532_IsAnon(_1dd9c761e_Fn* _self_) {
	return _222e64c53_IsAnonIdent((*_self_)._field_Ident);;
}



inline jule::Bool _1dd9c8796_AnyVar(_1dd9c761e_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c8a0a_instanceForce(jule::Ptr<_1dd9c761e_Fn> _self_) {
	jule::Ptr<_1dd9ca2c0_FnIns> _10017_ins = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1dd9e7232_Scope>(), ._field_Refers=static__1dd9cd4c1_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c6a992b8:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c5cd2_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1dd9c619a_instance(_10721_p));;
			}
			_iter_next_1c6a992b8:;
			++it;
			goto _iter_begin_1c6a992b8;
		}
		_iter_end_1c6a992b8:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c8c6e_instance(jule::Ptr<_1dd9c761e_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1dd9c8a0a_instanceForce(_self_);;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dd9c9049_appendInstance(_1dd9c761e_Fn* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];;
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c6a9dc6d:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _14421_ains = *it;
			{
				if (_1dd9cbbc8_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;;
				};
			}
			_iter_next_1c6a9dc6d:;
			++it;
			goto _iter_begin_1c6a9dc6d;
		}
		_iter_end_1c6a9dc6d:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c761e_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dd9c97ca_Str(_1dd9c9401_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1dd9c640e_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1dd9c6673_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1ddab57c8_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9c9401_ParamIns _Src) {
	_Stream << _1dd9c97ca_Str(&_Src);
	return _Stream;
}



inline jule::Str _1dd9ca600_Str(_1dd9ca2c0_FnIns* _self_) {
	;
	return _1dd9cbed6_GetKindStr(&(*_self_), false);;
}



inline jule::Bool _1dd9ca90d_Equal(jule::Ptr<_1dd9ca2c0_FnIns> _self_, jule::Ptr<_1ddab53cc_TypeKind> _21721_other) {
	jule::Ptr<_1dd9ca2c0_FnIns> _21813_f = _1ddab8952_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1dd9cad70_EqualFn(_self_, _21813_f);;
}



inline jule::Bool _1dd9cad70_EqualFn(jule::Ptr<_1dd9ca2c0_FnIns> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22824_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22824_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1dd9c7a81_IsVoid(_self_.get()._field_Decl.ptr()) != _1dd9c7a81_IsVoid(_22824_f.get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1dd9c9401_ParamIns>,jule::Ptr<_1dd9c9401_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1dd9c9401_ParamIns>,jule::Ptr<_1dd9c9401_ParamIns>)>([=](jule::Ptr<_1dd9c9401_ParamIns> _23830_p1, jule::Ptr<_1dd9c9401_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1dd9c640e_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1dd9c640e_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1dd9c6673_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1dd9c6673_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1ddab5ad6_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if ((_22824_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22824_f.get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1c6aaba8e:;
	}
	_iter_end_1c6aaba8e:;;
	if ((!(_1dd9c7a81_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1ddab5ad6_Equal(_self_.get()._field_Result, _22824_f.get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1dd9cb17d_equalTrait(jule::Ptr<_1dd9ca2c0_FnIns> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _28727_other) {
	if ((!(_1dd9cad70_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28727_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _1dd9cb3e2_Types(_1dd9ca2c0_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1c6ab00c0:;
			{
				return nullptr;;
			}
		}
		else if ((_1ddab9403_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1c6ab0136:;
			{
				return jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>::make({(*_self_)._field_Result});;
			}
		}
		else {
			_case_begin_1c6ab0059:;
			{
				return _1ddab9403_Tup((*_self_)._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1c6aaee8d:;
	};
}



inline jule::Bool _1dd9cb656_IsBuiltin(_1dd9ca2c0_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);;
}



inline jule::Bool _1dd9cb8ba_IsAnon(_1dd9ca2c0_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1dd9c8532_IsAnon((*_self_)._field_Decl.ptr())));;
}



inline jule::Bool _1dd9cbbc8_Same(_1dd9ca2c0_FnIns* _self_, jule::Ptr<_1dd9ca2c0_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c6ab3997:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1ddab3ba0_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1ddab5ad6_Equal(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1c6ab3997:;
			++it;
			_32913_i++;
			goto _iter_begin_1c6ab3997;
		}
		_iter_end_1c6ab3997:;
	};
	return true;;
}



inline jule::Str _1dd9cbed6_GetKindStr(_1dd9ca2c0_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1c6ab77d1:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c9401_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1dd9c97ca_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1c6ab77d1:;
				++it;
				goto _iter_begin_1c6ab77d1;
			}
			_iter_end_1c6ab77d1:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1dd9c7a81_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1ddab57c8_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ca2c0_FnIns _Src) {
	_Stream << _1dd9ca600_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1dd9cd23a_ReferenceStack> static__1dd9cd4c1_new(void) {
	return jule::new_ptr<_1dd9cd23a_ReferenceStack>(_1dd9cd23a_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1dd9cd856_Len(_1dd9cd23a_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());;
}



inline jule::Any _1dd9cdb64_At(_1dd9cd23a_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*_self_)._field_buffer[_6821_i];;
}



inline void _1dd9cddd9_Push(_1dd9cd23a_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1c71952ed_Exist(_1dd9cd23a_ReferenceStack* _self_, jule::Ptr<_1dd9ca2c0_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c719661d:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type8_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c719661d:;
			++it;
			goto _iter_begin_1c719661d;
		}
		_iter_end_1c719661d:;
	};
	return false;;
}

inline jule::Bool _1c71a92ac_Exist(_1dd9cd23a_ReferenceStack* _self_, jule::Ptr<_1dda418db_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c71aa588:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type9_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c71aa588:;
			++it;
			goto _iter_begin_1c71aa588;
		}
		_iter_end_1c71aa588:;
	};
	return false;;
}

inline jule::Bool _1c72512ee_Exist(_1dd9cd23a_ReferenceStack* _self_, jule::Ptr<_2090d5c23_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1c725261e:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type10_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c725261e:;
			++it;
			goto _iter_begin_1c725261e;
		}
		_iter_end_1c725261e:;
	};
	return false;;
}

inline jule::Bool _2096a3ce6_Exist(_1dd9cd23a_ReferenceStack* _self_, jule::Ptr<_1dd9d9521_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_2096a504a:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type11_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_2096a504a:;
			++it;
			goto _iter_begin_2096a504a;
		}
		_iter_end_2096a504a:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9cd23a_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ce59e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dd9d3a48_symbolBuilder> _1dd9d3eee_getRoot(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_) {
	jule::Ptr<_1dd9d3a48_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1c6ad0354:;
	}
	_iter_end_1c6ad0354:;;
	return _31617_root;;
}



inline void _1dd9d43b7_pushErr(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_222e62217_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dda1c169_compilerErr(_32327_token,true,_32342_fmt,_32355_args));;
}



inline void _1dd9d4780_pushErrText(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_222e62217_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dda1c169_compilerErr(_32731_token,false,_32746_fmt,_32759_args));;
}



inline void _1dd9d4a9e_pushSuggestion(_1dd9d3a48_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1dda1d5ee_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,_33246_args);
	};
}



inline jule::Bool _1dd9d4e56_checkCppUseDeclPath(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_2090d1812_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _221b36a8b_Ext(_33655_path);;
	if (((!(_222b2bc39_IsValidHeaderExt(_33713_ext))) && (!(_222b2bed1_IsValidCppExt(_33713_ext))))) {
		_1dd9d43b7_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_221a21459_Status> _34413_info = ({
		auto except = static__220c2ab5e_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1dd9d43b7_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type6)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});;
	if (_220c4d17b_IsDir(_34413_info.ptr())) {
		_1dd9d43b7_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d5231_buildCppHeaderImport(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_2090d1812_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_222b2ba19_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_221b355c3_Join(jule::Slice<jule::Str>::make({_222e67e98_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1dd9d4e56_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _221aeeceb_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1dd9d43b7_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath, &__jule_any_type6)}));
		};
	};
	return jule::new_ptr<_1dda15937_ImportInfo>(_1dda15937_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d553e_buildStdImport(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_2090d1812_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_222ab2bc0_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_221b355c3_Join(jule::Slice<jule::Str>::make({_222b72147_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _221aeeceb_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1dd9d43b7_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_221a21459_Status> _39513_info = ({
		auto except = static__220c2ab5e_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1dd9d43b7_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
			return nullptr;;
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});;
	if ((!(_220c4d17b_IsDir(_39513_info.ptr())))) {
		_1dd9d43b7_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_222aa8237_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1dda15937_ImportInfo>(_1dda15937_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1dda18891_Package>(_1dda18891_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d584c_buildIdentImport(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_2090d1812_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11e2d_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1dd9d43b7_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1dd9d4a9e_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_222ab2bc0_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_221b355c3_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _221aeeceb_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1dd9d43b7_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_221a21459_Status> _44213_info = ({
		auto except = static__220c2ab5e_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1dd9d43b7_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
			return nullptr;;
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});;
	if ((!(_220c4d17b_IsDir(_44213_info.ptr())))) {
		_1dd9d43b7_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_222aa8237_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1dda15937_ImportInfo>(_1dda15937_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1dda18891_Package>(_1dda18891_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d5b5a_buildImport(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_2090d1812_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1c6ae7cea:;
			{
				return _1dd9d5231_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1c6ae804d:;
			{
				return _1dd9d553e_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1c6ae7602:;
			{
				return _1dd9d584c_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1c6ae7536:;
	};
}



inline jule::Bool _1dd9d5e68_checkDuplicateUseDecl(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_1dda15937_ImportInfo>& _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dda15937_ImportInfo> _48313_lpkg = _1dda84e4b_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>([=](jule::Ptr<_1dda15937_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1dd9d43b7_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath, &__jule_any_type6)}));
	_1dd9d4a9e_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1dd9d6287_implImportSelections(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_1dda15937_ImportInfo>& _49544_imp, jule::Ptr<_2090d1812_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c6aeb9e1:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1c6aec22d:;
					if (it != expr.end()) {
						jule::Ptr<_222e62217_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1c6aec22d;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1dd9d43b7_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type6)}));
								_1dd9d4a9e_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1c6aec22d;
							};
						}
						_iter_next_1c6aec22d:;
						++it;
						goto _iter_begin_1c6aec22d;
					}
					_iter_end_1c6aec22d:;
				};
			}
			_iter_next_1c6aeb9e1:;
			++it;
			goto _iter_begin_1c6aeb9e1;
		}
		_iter_end_1c6aeb9e1:;
	};
}



inline jule::Str _1dd9d6595_getAsLinkPath(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_222a83b08_HasPrefix(_51037_path,_222b72147_PathStdlib)) {
		(_51037_path).mut_slice(_222b72147_PathStdlib.len());;
		return (jule::Str("std", 3) + _222ab2bc0_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _221aeeceb_Abs(_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11e2d_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _222ab2bc0_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);;
}



inline void _1dd9d695d_pushCycleError(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_1dd9d3a48_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _222b39032_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1dd9d6595_getAsLinkPath(_self_, _222e67e98_Dir(_52435_sb.get()._field_table.get()._field_File.ptr())), &__jule_any_type6),jule::Any(_1dd9d6595_getAsLinkPath(_self_, _52455_path), &__jule_any_type6)}));;
	(_52471_message).buffer.insert(0, (((_222a844bb_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1dd9d6d26_pushCrossCycleError(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_1dd9d3a48_symbolBuilder>& _53340_target, jule::Ptr<_1dda15937_ImportInfo>& _53365_imp, jule::Ptr<_222e62217_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1dd9d695d_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1dd9d3a48_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1dd9d3a48_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1dd9d695d_pushCycleError(_self_, _53917_old.get()._field_owner,_222e67e98_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1dd9d695d_pushCycleError(_self_, _53340_target,_222e67e98_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1c6b04bd6;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1c6b04bd6:;
	}
	_iter_end_1c6b04bd6:;;
	_1dd9d43b7_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type6)}));
}



inline jule::Bool _1dd9d71cd_checkImportCycles(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_1dda15937_ImportInfo> _55637_imp, jule::Ptr<_2090d1812_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _222e67e98_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1dd9d43b7_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1dd9d6595_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type6)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_222e67e98_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1dd9d6d26_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	jule::Ptr<_1dd9d3a48_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_222e67e98_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1dd9d6d26_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1dd9d75b8_checkPackageAccessibility(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_2090d1812_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1dda12cb9_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1dda11e2d_GetModPath((*_self_)._field_importer) != _59262_mod) && _222ab1927_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1dd9d43b7_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1dd9d7981_importPackage(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_1dda15937_ImportInfo>& _59838_imp, jule::Ptr<_2090d1812_UseDecl>& _59861_decl) {
	jule::Bool __jule_func_result = false;
	if (_59838_imp.get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dda15937_ImportInfo> _60317_port = _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda12549_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11e2d_GetModPath(_self_.get()._field_importer);;
		_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11bca_SetModPath(_self_.get()._field_importer, _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda1223b_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1dd9d75b8_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11bca_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1dd9d71cd_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11e2d_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11bca_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda11bca_SetModPath(_self_.get()._field_importer, _222b72147_PathStdlib);
		};
		jule::Slice<jule::Ptr<_209084bc2_Ast>> _62222_asts;;
		jule::Slice<_222b38ae2_Log> _62232_errors;;
		({
			__jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda12901_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1dd9d75b8_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1c6b14751:;
			if (it != expr.end()) {
				jule::Ptr<_209084bc2_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1dda84621_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1ddad2031_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1c6b14751:;
				++it;
				goto _iter_begin_1c6b14751;
			}
			_iter_end_1c6b14751:;
		};
	};
	_1dd9d6287_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9d7c8e_importUseDecl(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_, jule::Ptr<_2090d1812_UseDecl>& _64538_decl) {
	jule::Ptr<_1dda15937_ImportInfo> _64617_imp = _1dd9d5b5a_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1dd9d5e68_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1dd9d7981_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1dda12cb9_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1dda12b76_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1dd9d7e6a_importUseDecls(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1c6b18c2d:;
		if (it != expr.end()) {
			jule::Ptr<_2090d1812_UseDecl> _66721_decl = *it;
			{
				_1dd9d7c8e_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1c6b18c2d;
				};
			}
			_iter_next_1c6b18c2d:;
			++it;
			goto _iter_begin_1c6b18c2d;
		}
		_iter_end_1c6b18c2d:;
	};
}



inline void _1dd9d81e0_appendNode(_1dd9d3a48_symbolBuilder* _self_, _2090859b4_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c6b19426:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1dd9d34e8_buildImpl(_67634_node._field_Data.cast_ptr<_2090d5085_Impl>(&__jule_any_type12)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c6b1a328:;
			{
				jule::Ptr<_1ddab46d9_TypeAlias> _68121_ta = _1dd9cee84_buildTypeAlias(_67634_node._field_Data.cast_ptr<_2090d0426_TypeAliasDecl>(&__jule_any_type13));;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1c6b1a38e:;
			{
				jule::Ptr<_2090d5849_Struct> _68421_srct = _1dd9d07e2_buildStruct(_67634_node._field_Data.cast_ptr<_2090d4370_StructDecl>(&__jule_any_type14));;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c6b1a405:;
			{
				jule::Ptr<_1dd9c761e_Fn> _68721_f = _1dd9d144c_buildFn(_67634_node._field_Data.cast_ptr<_2090caad6_FnDecl>(&__jule_any_type15));;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1c6b1ab75:;
			{
				jule::Ptr<_1dd9d9521_Trait> _69021_t = _1dd9d198b_buildTrait(_67634_node._field_Data.cast_ptr<_2090d497a_TraitDecl>(&__jule_any_type16));;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c6b1abdb:;
			{
				jule::Ptr<_1dda418db_Var> _69321_v = _1dd9d2ea9_buildVar(_67634_node._field_Data.cast_ptr<_2090cbab5_VarDecl>(&__jule_any_type17));;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c6b1ac52:;
			{
				jule::Ptr<_1dd9db666_Enum> _69621_e = _1dd9d2272_buildEnum(_67634_node._field_Data.cast_ptr<_2090d27ad_EnumDecl>(&__jule_any_type18));;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6b1acb8:;
			{
				jule::Ptr<_1dd9dcc61_TypeEnum> _69921_e = _1dd9d2c12_buildTypeEnum(_67634_node._field_Data.cast_ptr<_2090d38be_TypeEnumDecl>(&__jule_any_type19));;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1c6b1a218:;
			{
				_1dd9d43b7_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6b1a1b3:;
	};
}



inline void _1dd9d83bb_appendNodes(_1dd9d3a48_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1c6b24365:;
		if (it != expr.end()) {
			_2090859b4_Node _70721_node = *it;
			{
				_1dd9d81e0_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_1c6b24365:;
			++it;
			goto _iter_begin_1c6b24365;
		}
		_iter_end_1c6b24365:;
	};
}



inline void _1dd9d8641_pushDirectivePass(_1dd9d3a48_symbolBuilder* _self_, jule::Ptr<_209085db0_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_1dd9d43b7_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_222e62217_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_1dd9d43b7_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_222e62217_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1dd9d43b7_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1dd9d43b7_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1dd9ce59e_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1dd9d881c_appendTopDirectives(_1dd9d3a48_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1c6b29458:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1c6b2a118:;
						{
							_1dd9d8641_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_1c6b2a080:;
				};
			}
			_iter_next_1c6b29458:;
			++it;
			goto _iter_begin_1c6b29458;
		}
		_iter_end_1c6b29458:;
	};
}



inline void _1dd9d89e8_build(jule::Ptr<_1dd9d3a48_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1dda84621_SymbolTable>(_1dda84621_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1dd9d881c_appendTopDirectives(_self_.ptr());
	_1dd9d7e6a_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1dd9d83bb_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9d3a48_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dd9d991c_Str(_1dd9d9521_Trait* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1dd9d9c2a_Equal(jule::Ptr<_1dd9d9521_Trait> _self_, jule::Ptr<_1ddab53cc_TypeKind> _2521_other) {
	jule::Ptr<_1dd9d9521_Trait> _2613_trt = _1ddab8e2a_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1dd9da08d_IsBuiltin(_1dd9d9521_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dd9da39b_FindMethod(_1dd9d9521_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6b2de30:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1c6b2de30:;
			++it;
			goto _iter_begin_1c6b2de30;
		}
		_iter_end_1c6b2de30:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9d9521_Trait _Src) {
	_Stream << _1dd9d991c_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1dd9db05b_AutoExpr(_1dd9dab71_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9dab71_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dd9db9c9_Str(_1dd9db666_Enum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1dd9dbcd7_Equal(jule::Ptr<_1dd9db666_Enum> _self_, jule::Ptr<_1ddab53cc_TypeKind> _3821_other) {
	jule::Ptr<_1dd9db666_Enum> _3913_enm = _1ddab7ea1_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1dd9dab71_EnumItem> _1dd9dc227_FindItem(_1dd9db666_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c6b315d6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dab71_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1c6b315d6:;
			++it;
			goto _iter_begin_1c6b315d6;
		}
		_iter_end_1c6b315d6:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9db666_Enum _Src) {
	_Stream << _1dd9db9c9_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9dc69a_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1dd9dd091_Str(_1dd9dcc61_TypeEnum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1dd9dd39e_Equal(jule::Ptr<_1dd9dcc61_TypeEnum> _self_, jule::Ptr<_1ddab53cc_TypeKind> _8021_other) {
	jule::Ptr<_1dd9dcc61_TypeEnum> _8113_tenm = _1ddab8215_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1dd9dc69a_TypeEnumItem> _1dd9dd79a_FindItem(_1dd9dcc61_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1c6b336e8:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dc69a_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1c6b336e8:;
			++it;
			goto _iter_begin_1c6b336e8;
		}
		_iter_end_1c6b336e8:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9dcc61_TypeEnum _Src) {
	_Stream << _1dd9dd091_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)> _1dd9e06c0_readyFn(jule::Ptr<_1dd9e0291_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)>([=](jule::Ptr<_1dda1da83_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1c6b40b56:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_2090c6450_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1ddab3ba0_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1c6b40b56;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1c6b4340b:;
						if (it != expr.end()) {
							jule::Ptr<_2090b9157_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1ddab53cc_TypeKind> _7229_kind = _1dda2abe4_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1ddad134e_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1c6b44e68:;
											{
												jule::Ptr<_2090b971d_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_2090b971d_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1dd9e1858_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1c6b44dd0:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1c6b4340b:;
							++it;
							goto _iter_begin_1c6b4340b;
						}
						_iter_end_1c6b4340b:;
					};
				}
				_iter_next_1c6b40b56:;
				++it;
				_6418_i++;
				goto _iter_begin_1c6b40b56;
			}
			_iter_end_1c6b40b56:;
		};
		return true;;
	});;
}



inline jule::Bool _1dd9e0934_readyFi(jule::Ptr<_1dd9e0291_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1dda302c0_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1dd9e06c0_readyFn(_self_)));;
}



inline jule::Bool _1dd9e0b98_readySi(jule::Ptr<_1dd9e0291_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1dd9e06c0_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));;
}



inline jule::Bool _1dd9e0e0c_ready(jule::Ptr<_1dd9e0291_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1dd9e0934_readyFi(_self_);;
	};
	return _1dd9e0b98_readySi(_self_);;
}



inline jule::Bool _1dd9e1171_check(jule::Ptr<_1dd9e0291_constraintChecker> _self_) {
	if ((!(_1dd9e0e0c_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1c6b4bd60:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1ddab3ba0_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1c6b4bd60;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1c6b4cd61:;
					if (it != expr.end()) {
						jule::Ptr<_1ddab53cc_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1ddaba129_Prim> _12425_prim = _1ddab7764_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1ddabac1d_IsConstraint(_12425_prim.ptr()))) {
								if (_1dd9e156c_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1c6b4bd60;
								};
								goto _iter_next_1c6b4cd61;
							};
							if (_1ddab5ad6_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1c6b4bd60;
							};
						}
						_iter_next_1c6b4cd61:;
						++it;
						goto _iter_begin_1c6b4cd61;
					}
					_iter_end_1c6b4cd61:;
				};
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type6)}));
				return false;;
			}
			_iter_next_1c6b4bd60:;
			++it;
			_11914_i++;
			goto _iter_begin_1c6b4bd60;
		}
		_iter_end_1c6b4bd60:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e0291_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9e25c3_IsTraitImpl(_1dd9e21c7_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _1dd9e2837_IsStructImpl(_1dd9e21c7_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e21c7_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e7232_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e762d_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e7919_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e7c8d_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e8079_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9e8893_IsWhileNext(_1dd9e84ec_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e84ec_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e8dd2_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e92cd_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e9685_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e9971_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9e9c5c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ea114_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ea587_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ea93e_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9eb489_IsGenericTypeMatch(_1dd9eae7d_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9eae7d_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd9ebc92_isDefault(_1dd9eb9c8_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9eb9c8_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ec07d_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ec402_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9eca0c_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9ece80_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9ee228_FindPackage(_1dd9edc94_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1dda1e0a0_FindPackage((*_self_)._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dd9ee536_SelectPackage(_1dd9edc94_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _46432_selector) {
	return _1dda1e3ad_SelectPackage((*_self_)._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1dda418db_Var> _1dd9ee8dd_FindVar(_1dd9edc94_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1dda418db_Var> _47817_v = _1dda86db5_findVar((*_self_)._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _48317_parent = (*_self_)._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1dda86db5_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1c6b76e89:;
	}
	_iter_end_1c6b76e89:;;
	return _1dda1e765_FindVar((*_self_)._field_s.ptr(), _47526_ident,_47538_cpp_linked);;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dd9eec95_FindTypeAlias(_1dd9edc94_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1ddab46d9_TypeAlias> _50517_ta = _1dda87316_findTypeAlias((*_self_)._field_table.ptr(), _50232_ident,_50244_cppLinked,true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _51017_parent = (*_self_)._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1dda87316_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident,_50244_cppLinked,true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1c6b7e9db:;
	}
	_iter_end_1c6b7e9db:;;
	return _1dda1eb1c_FindTypeAlias((*_self_)._field_s.ptr(), _50232_ident,_50244_cppLinked);;
}



inline jule::Ptr<_2090d5849_Struct> _1dda0014c_FindStruct(_1dd9edc94_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1dda1eec4_FindStruct((*_self_)._field_s.ptr(), _52729_ident,_52741_cppLinked);;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda00504_FindFn(_1dd9edc94_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1dda2037b_FindFn((*_self_)._field_s.ptr(), _53625_ident,_53637_cppLinked);;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda00812_FindTrait(_1dd9edc94_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1dda20689_FindTrait((*_self_)._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda00b20_FindEnum(_1dd9edc94_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1dda20997_FindEnum((*_self_)._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda00e2d_FindTypeEnum(_1dd9edc94_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1dda20ca5_FindTypeEnum((*_self_)._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1dda0125d_isUnsafe(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	jule::Ptr<_1dd9edc94_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1dda014c2_isRoot(_1dd9edc94_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));;
}



inline void _1dda0169d_stop(_1dd9edc94_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1dda01912_stopped(_1dd9edc94_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);;
}



inline jule::Bool _1dda01b76_isDeferred(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	jule::Ptr<_1dd9edc94_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda01dda_getRoot(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	jule::Ptr<_1dd9edc94_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1c6b89144:;
	}
	_iter_end_1c6b89144:;;
	return _62217_root;;
}



inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda0214e_getHardRoot(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	jule::Ptr<_1dd9edc94_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1c6b8a398:;
	}
	_iter_end_1c6b8a398:;;
	return _63217_root;;
}



inline jule::Ptr<_1dd9e9971_Label> _1dda0245c_findLabel(_1dd9edc94_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c6b8ae04:;
		if (it != expr.end()) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c6b8b93d:;
						{
							jule::Ptr<_1dd9e9971_Label> _64625_label = _64321_st.cast_ptr<_1dd9e9971_Label>(&__jule_any_type21);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1c6b8b83e:;
				};
			}
			_iter_next_1c6b8ae04:;
			++it;
			goto _iter_begin_1c6b8ae04;
		}
		_iter_end_1c6b8ae04:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dda0276a_findLabelScope(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1dd9eca0c_scopeLabel> _65917_label = _1dda02a78_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dda02a78_findLabelAll(_1dd9edc94_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c6b8dba4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eca0c_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1c6b8dba4:;
			++it;
			goto _iter_begin_1c6b8dba4;
		}
		_iter_end_1c6b8dba4:;
	};
	return nullptr;;
}



inline jule::Bool _1dda02e30_isDuplicatedIdent(_1dd9edc94_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1dda418db_Var> _68313_v = _1dd9ee8dd_FindVar(&(*_self_), _68253_ident,false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1dda21107_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ddab46d9_TypeAlias> _69113_ta = _1dd9eec95_FindTypeAlias(&(*_self_), _68253_ident,false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1dda21107_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1dda031a5_checkVarDecl(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cbab5_VarDecl> _70236_decl) {
	jule::Ptr<_1dda418db_Var> _70317_v = _1dd9d2ea9_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type9));;
	});;
	if (_1dda02e30_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)),_70317_v.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1dda0169d_stop(_self_.ptr());
		return;;
	};
	_1dda35c43_checkVarDecl(_self_.get()._field_s, _70317_v,jule::Trait<_1ddad134e_Lookup>(_self_, 0));
	if (((!(_1dda42018_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1dda39384_checkTypeVar(_self_.get()._field_s, _70317_v,jule::Trait<_1ddad134e_Lookup>(_self_, 0));
}



inline void _1dda0342a_checkTypeAliasDecl(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d0426_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1ddab46d9_TypeAlias> _72717_ta = _1dd9cee84_buildTypeAlias(_72642_decl);;
	if (_1dda02e30_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)),_72717_ta.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1dda0169d_stop(_self_.ptr());
		return;;
	};
	_1dda31a85_checkTypeAliasDecl(_self_.get()._field_s, _72717_ta,jule::Trait<_1ddad134e_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1dda0169d_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda0368e_getChild(_1dd9edc94_scopeChecker* _self_) {
	return jule::new_ptr<_1dd9e7232_Scope>(_1dd9e7232_Scope{._field_Parent=(*_self_)._field_scope, });;
}



inline void _1dda03a57_checkChildSsc(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c90e0_ScopeTree>& _75038_tree, jule::Ptr<_1dd9e7232_Scope>& _75061_s, jule::Ptr<_1dd9edc94_scopeChecker>& _75077_ssc) {
	_75077_ssc.get()._field_parent=_self_;
	_1dda0da95_check(_75077_ssc, _75038_tree,_75061_s);
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda03e0e_checkChildSc(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c90e0_ScopeTree>& _75537_tree, jule::Ptr<_1dd9edc94_scopeChecker>& _75560_ssc) {
	jule::Ptr<_1dd9e7232_Scope> _75617_s = _1dda0368e_getChild(_self_.ptr());;
	_1dda03a57_checkChildSsc(_self_, _75537_tree,_75617_s,_75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda0421c_checkChild(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c90e0_ScopeTree>& _76135_tree) {
	jule::Ptr<_1dd9edc94_scopeChecker> _76217_ssc = _1dda0dd09_newChildChecker(_self_);;
	return _1dda03e0e_checkChildSc(_self_, _76135_tree,_76217_ssc);;
}



inline void _1dda04492_checkAnonScope(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c90e0_ScopeTree> _76638_tree) {
	jule::Ptr<_1dd9e7232_Scope> _76717_s = _1dda0421c_checkChild(_self_, _76638_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type22));;
}



inline void _1dda047b1_processErrorCall(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel>& _77141_m, jule::Ptr<_222e62217_Token> _77172_err) {
	if (_1dda01b76_isDeferred(_self_)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _77617_root = _1dda01dda_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77141_m.get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1dda04a36_checkExpr(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090bd678_Expr> _78433_expr) {
	jule::Ptr<_1dda8aeb8_Eval> _78517_eval = _1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1dda8944a_Data> _78717_d = _1ddaa68da_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c6ba4d30:;
			{
				jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1dda047b1_processErrorCall(_self_, _79421_m,_78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type24));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1c6ba5061:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type24));;
			}
		}
		else {
			_case_begin_1c6ba4eea:;
			{
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6ba4e95:;
	};
}



inline jule::Ptr<_1dd9e762d_If> _1dda04d44_checkIf(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090ce425_If> _81431_i) {
	jule::Ptr<_1dd9e7232_Scope> _81517_s = _1dda0421c_checkChild(_self_, _81431_i.get()._field_Scope);;
	jule::Ptr<_1dda8944a_Data> _81717_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ddaba129_Prim> _82217_prim = _1ddab7764_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1ddabd0e9_IsBool(_82217_prim.ptr()))))) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dd9e762d_If>(_1dd9e762d_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1dd9e7919_Else> _1dda05152_checkElse(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090ce7cc_Else> _83433_e) {
	return jule::new_ptr<_1dd9e7919_Else>(_1dd9e7919_Else{._field_Scope=_1dda0421c_checkChild(_self_, _83433_e.get()._field_Scope)});;
}



inline void _1dda053c7_checkConditional(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cec50_Conditional> _84040_conditional) {
	jule::Ptr<_1dd9e7c8d_Conditional> _84117_c = jule::new_ptr<_1dd9e7c8d_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type36));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1dd9e762d_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1dda04d44_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto &expr = _84040_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1c6bad19b:;
		if (it != expr.end()) {
			jule::Ptr<_2090ce425_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1dda04d44_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1c6bad19b:;
			++it;
			goto _iter_begin_1c6bad19b;
		}
		_iter_end_1c6bad19b:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1dda05152_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1dda05839_checkIterScopeSsc(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_2090c90e0_ScopeTree> _85654_tree, jule::Ptr<_1dd9e7232_Scope>& _85677_s, jule::Ptr<_1dd9edc94_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1dda03a57_checkChildSsc(_self_, _85654_tree,_85677_s,_85692_ssc);
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda05c8a_checkIterScopeSc(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_2090c90e0_ScopeTree> _86153_tree, jule::Ptr<_1dd9edc94_scopeChecker> _86175_ssc) {
	jule::Ptr<_1dd9e7232_Scope> _86217_scope = _1dda0368e_getChild(_self_.ptr());;
	_1dda05839_checkIterScopeSsc(_self_, _86136_it,_86153_tree,_86217_scope,_86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda06142_checkIterScope(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_2090c90e0_ScopeTree>& _86752_tree) {
	jule::Ptr<_1dd9edc94_scopeChecker> _86817_ssc = _1dda0dd09_newChildChecker(_self_);;
	return _1dda05c8a_checkIterScopeSc(_self_, _86734_it,_86752_tree,_86817_ssc);;
}



inline void _1dda063b7_checkInfIter(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cc5cc_Iter>& _87237_it) {
	jule::Ptr<_1dd9e8079_InfIter> _87317_kind = jule::new_ptr<_1dd9e8079_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type37));;
	_87317_kind.get()._field_Scope=_1dda06142_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)),_87237_it.get()._field_Scope);
}



inline void _1dda0663c_checkWhileIter(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cc5cc_Iter>& _87839_it) {
	jule::Ptr<_2090ccda2_WhileKind> _87917_wh = _87839_it.get()._field_Kind.cast_ptr<_2090ccda2_WhileKind>(&__jule_any_type38);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1dda063b7_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1dd9e84ec_WhileIter> _88517_kind = jule::new_ptr<_1dd9e84ec_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type39));;
	_88517_kind.get()._field_Scope=_1dda06142_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)),_87839_it.get()._field_Scope);
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1dda8944a_Data> _89021_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ddaba129_Prim> _89517_prim = _1ddab7764_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ddabd0e9_IsBool(_89517_prim.ptr())))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_2090cd204_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1dd9e675e_isValidAstStForNextSt(_87917_wh.get()._field_Next)))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1dda0c841_checkNode(_self_, _87917_wh.get()._field_Next);
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91517_n);
			if ((!(_1dd9e6a06_isValidStForNextSt(_91825_st)))) {
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1dda068b2_checkRangeIter(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cc5cc_Iter>& _92839_it) {
	jule::Ptr<_2090cd743_RangeKind> _92917_rang = _92839_it.get()._field_Kind.cast_ptr<_2090cd743_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1dda8944a_Data> _93117_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1dd9e8dd2_RangeIter> _93617_kind = jule::new_ptr<_1dd9e8dd2_RangeIter>(_1dd9e8dd2_RangeIter{._field_Expr=_93117_d, });;
	_1dda806c7_rangeChecker _94017_rc = _1dda806c7_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1dda8208b_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type41));;
	jule::Ptr<_1dd9edc94_scopeChecker> _95317_ssc = _1dda0dd09_newChildChecker(_self_);;
	jule::Ptr<_1dd9e7232_Scope> _95417_scope = _1dda0368e_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1dda21107_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dda02e30_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type6)}));
			_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1dda21107_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1dda02e30_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type6)}));
			_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1dda05839_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92839_it.get()._field_Scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1dda06b37_checkIter(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cc5cc_Iter> _97833_it) {
	if (_2090cc92e_IsInf(_97833_it.ptr())) {
		_1dda063b7_checkInfIter(_self_, _97833_it);
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c6bcaa9d:;
			{
				_1dda0663c_checkWhileIter(_self_, _97833_it);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c6bc9eed:;
			{
				_1dda068b2_checkRangeIter(_self_, _97833_it);
			}
		}
		else {
			_case_begin_1c6bc9d88:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1c6bc9d22:;
	};
}



inline jule::Bool _1dda06e45_checkValidContLabel(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1dd9edc94_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1dda07253_checkValidBreakLabel(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1dd9edc94_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1dd9eb9c8_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1dd9e92cd_ContSt> _1dda07561_checkContValidScope(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cdea2_ContSt> _103339_c) {
	if (_1dda01b76_isDeferred(_self_)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1dd9e92cd_ContSt>();;
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1c6bd2dd5:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1c6bd2e5c:;
			{
				return jule::new_ptr<_1dd9e92cd_ContSt>(_1dd9e92cd_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1c6bd2d2a:;
	};
	_1dda21745_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1dda077d6_checkCont(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cdea2_ContSt> _105729_c) {
	jule::Ptr<_1dd9e92cd_ContSt> _105817_cont = _1dda07561_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1dd9eca0c_scopeLabel> _106421_label = _1dd9e4938_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1c6bd9cee:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1c6bdb77e:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1c6bdb7e5:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1c6bdb608:;
					{
						_1dda21745_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
					}
				}
				_match_end_1c6bdb592:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1dda06e45_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type42));;
}



inline void _1dda07a5b_checkLabel(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c6807_LabelSt> _110434_l) {
	if ((_1dda0245c_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_1dd9e9971_Label> _111017_label = jule::new_ptr<_1dd9e9971_Label>(_1dd9e9971_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type21));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1dd9eca0c_scopeLabel>>::make({jule::new_ptr<_1dd9eca0c_scopeLabel>(_1dd9eca0c_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1dda07cd1_pushGoto(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c6bae_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1dd9e9c5c_GotoSt>(_1dd9e9c5c_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1dd9ece80_scopeGoto>>::make({jule::new_ptr<_1dd9ece80_scopeGoto>(_1dd9ece80_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1dda08056_checkPostfix(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c7ae4_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2090bd678_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1dda8944a_Data> _114217_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1dd9e64b7_checkAssign(_self_.get()._field_s,_114217_d,nullptr,_113536_a.get()._field_Setter);
	if ((_1ddab7c3c_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ddac1e22_Ptr> _115021_ptr = _1ddab7c3c_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1ddac28e5_IsUnsafe(_115021_ptr.ptr())) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return;;
		};
	} else {
		if (((_1ddab7764_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1dd9aca44_IsNum(_1ddab7764_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1dd9ea114_Postfix>(_1dd9ea114_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44));;
}



inline jule::Bool _1dda08364_isNewAssignIdent(_1dd9edc94_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_222e649ab_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1dda876bd_defByIdent((*_self_)._field_table.ptr(), _116835_ident,false) == nullptr);;
}



inline jule::Bool _1dda087b5_checkStructureAssignOp(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d5c23_StructIns>& _117547_s, jule::Ptr<_2090c7ae4_AssignSt>& _117567_a, jule::Ptr<_1dda8944a_Data>& _117586_r) {
	jule::Ptr<_1dd9ca2c0_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ _117567_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1c6bedae3:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1c6beeee0:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1c6c00056:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1c6c000bc:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1c6bee099:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1c6bee110:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1c6bee176:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1c6bee1dc:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1c6c002a9:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1c6c00320:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1c6bee033:;
			{
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_2090ab578_Str(_117547_s.ptr()), &__jule_any_type6)}));
				return false;;
			}
		}
		_match_end_1c6bed928:;
	};
	if ((_117817_overload == nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type6),jule::Any(_2090ab578_Str(_117547_s.ptr()), &__jule_any_type6)}));
		return false;;
	};
	jule::Ptr<_1dd9c9401_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1dda2d488_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference,_121017_p.get()._field_Kind,_117586_r,_117567_a.get()._field_Setter);;
}



inline void _1dda08a3a_checkSingleAssign(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c7ae4_AssignSt>& _121442_a) {
	jule::Ptr<_1dda8944a_Data> _121517_l = nullptr;;
	if ((!(_222e649ab_IsIgnoreIdent(_121442_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_2090bd678_Expr> _121821_expr = _121442_a.get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1dda8aeb8_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1dda2cb80_evalp(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0),_121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1dda0125d_isUnsafe(_self_);
	jule::Ptr<_1dda8944a_Data> _123217_r = _1ddaa68da_evalExpr(_122517_eval, _121442_a.get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1ddab6576_Void(_123217_r.get()._field_Kind.ptr())) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type24));;
		return;;
	};
	if ((!(_1dd9e64b7_checkAssign(_self_.get()._field_s,_121517_l,_123217_r,_121442_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1ddab9403_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _125417_lm = jule::new_ptr<_1dd9b8d6e_OperandExprModel>(_1dd9b8d6e_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1dd9b8d6e_OperandExprModel> _125817_rm = jule::new_ptr<_1dd9b8d6e_OperandExprModel>(_1dd9b8d6e_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1dd9ea587_Assign>(_1dd9ea587_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=_121442_a.get()._field_Setter}), &__jule_any_type45));;
	if ((_121442_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_2090d5c23_StructIns> _126521_strct = _1ddab8bb6_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1dda087b5_checkStructureAssignOp(_self_, _126521_strct,_121442_a,_123217_r);
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind=_121442_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121442_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1ddaa8aeb_binaryEval _127221_solver = static__1ddaa9514_new(_122517_eval,_121442_a.get()._field_Setter);;
		_123217_r=_1ddaae371_solveExplicit(&_127221_solver, _121517_l,_123217_r);
		if ((_123217_r == nullptr)) {
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1dda74d3c_assignTypeChecker _128117_checker = _1dda74d3c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=_121442_a.get()._field_Setter};;
	if (_1dda75eb4_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1dda09068_processEndPartOfMultiAssign(_1dd9edc94_scopeChecker* _self_, jule::Ptr<_1dd9ea93e_MultiAssign>& _129351_st, jule::Ptr<_2090c7ae4_AssignSt>& _129414_a, jule::Ptr<_2090c75a5_AssignLeft>& _129433_lexpr, jule::Ptr<_1dda8944a_Data>& _129458_l, jule::Ptr<_1dda8944a_Data>& _129473_r) {
	if (_222e649ab_IsIgnoreIdent(_129433_lexpr.get()._field_Ident)) {
		if (_1ddab6576_Void(_129473_r.get()._field_Kind.ptr())) {
			_1dda21745_pushErr((*_self_)._field_s.ptr(), _129414_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129414_a.get()._field_Declarative && _1dda08364_isNewAssignIdent(&(*_self_), _129433_lexpr.get()._field_Ident))) {
		if (_1dda02e30_isDuplicatedIdent(&(*_self_), 0LLU,_129433_lexpr.get()._field_Ident)) {
			_1dda21745_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type6)}));
			_1dda2699d_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1dda0169d_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1dda418db_Var> _131221_v = jule::new_ptr<_1dda418db_Var>(_1dda418db_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129433_lexpr.get()._field_Token, ._field_Ident=_129433_lexpr.get()._field_Ident, ._field_Mutable=_129433_lexpr.get()._field_Mutable, ._field_Reference=_129433_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Expr=_129414_a.get()._field_Right, ._field_Data=_129473_r}), });;
		_1dda39065_checkVar((*_self_)._field_s, _131221_v);
		_131221_v.get()._field_Value=nullptr;
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_131221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131221_v.get()._field_Mutable, ._field_Reference=_131221_v.get()._field_Reference, ._field_Lvalue=(!(_131221_v.get()._field_Constant)), ._field_Model=jule::Any(_131221_v, &__jule_any_type9), }));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131221_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(jule::Any(_131221_v, &__jule_any_type9));;
		return;;
	};
	if ((_129433_lexpr.get()._field_Mutable || _129433_lexpr.get()._field_Reference)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1dd9e64b7_checkAssign((*_self_)._field_s,_129458_l,_129473_r,_129414_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1dda3139d_checkValidityForInitExpr((*_self_)._field_s, _129458_l.get()._field_Mutable,false,_129458_l.get()._field_Kind,_129473_r,_129414_a.get()._field_Setter);
	_1dda74d3c_assignTypeChecker _135517_checker = _1dda74d3c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129458_l.get()._field_Kind, ._field_d=_129473_r, ._field_errorToken=_129414_a.get()._field_Setter};;
	_1dda75eb4_check(&_135517_checker);
	_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(_129458_l);;
}



inline void _1dda092ee_checkMultiAssign(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c7ae4_AssignSt>& _136541_a) {
	jule::Ptr<_1dda8944a_Data> _136617_rd = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _136541_a.get()._field_Right);;
	if ((_136617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _137017_right = _1dd9e56e7_getDatasFromTupleData(_136617_rd);;
	if ((_137017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1c6c2096c:;
				{
					jule::Ptr<_1dd9bb9cb_IndexingExprModel> _137425_iem = _137017_right[0LL].get()._field_Model.cast_ptr<_1dd9bb9cb_IndexingExprModel>(&__jule_any_type46);;
					if ((_1ddab918e_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137017_right=jule::Slice<jule::Ptr<_1dda8944a_Data>>::make({jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_1ddab918e_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1c6c20917:;
		};
	};
	{
		
		if ((_136541_a.get()._field_Left.len() > _137017_right.len())) {
			_case_begin_1c6c20c9c:;
			{
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136541_a.get()._field_Left.len() < _137017_right.len())) {
			_case_begin_1c6c20d13:;
			{
				_1dda21745_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c6c20164:;
	};
	jule::Ptr<_1dd9ea93e_MultiAssign> _139317_st = jule::new_ptr<_1dd9ea93e_MultiAssign>(_1dd9ea93e_MultiAssign{._field_R=_136617_rd.get()._field_Model});;
	{
		auto &expr = _136541_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1c6c250c0:;
		if (it != expr.end()) {
			jule::I64 _139613_i = it - expr.begin();
			{
				jule::Ptr<_2090c75a5_AssignLeft> _139721_lexpr = _136541_a.get()._field_Left[_139613_i];;
				jule::Ptr<_1dda8944a_Data> _139821_l = nullptr;;
				if (((!(_222e649ab_IsIgnoreIdent(_139721_lexpr.get()._field_Ident))) && ((!(_136541_a.get()._field_Declarative)) || (!(_1dda08364_isNewAssignIdent(_self_.ptr(), _139721_lexpr.get()._field_Ident)))))) {
					_139821_l=_1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _139721_lexpr.get()._field_Expr);
					if ((_139821_l == nullptr)) {
						goto _iter_next_1c6c250c0;
					};
				};
				jule::Ptr<_1dda8944a_Data> _140621_r = _137017_right[_139613_i];;
				_1dda09068_processEndPartOfMultiAssign(_self_.ptr(), _139317_st,_136541_a,_139721_lexpr,_139821_l,_140621_r);
			}
			_iter_next_1c6c250c0:;
			++it;
			_139613_i++;
			goto _iter_begin_1c6c250c0;
		}
		_iter_end_1c6c250c0:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139317_st, &__jule_any_type47));;
}



inline void _1dda09574_checkAssignSt(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c7ae4_AssignSt> _141237_a) {
	{
		
		if (_222e66a57_IsPostfixOp(_141237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1c6c2924a:;
			{
				_1dda08056_checkPostfix(_self_, _141237_a);
			}
		}
		else if (((_141237_a.get()._field_Left.len() == 1LL) && (!(_141237_a.get()._field_Declarative)))) {
			_case_begin_1c6c2968a:;
			{
				_1dda08a3a_checkSingleAssign(_self_, _141237_a);
			}
		}
		else {
			_case_begin_1c6c288ed:;
			{
				_1dda092ee_checkMultiAssign(_self_, _141237_a);
			}
		}
		_match_end_1c6c28832:;
	};
}



inline jule::Ptr<_1dd9e7232_Scope> _1dda0992b_checkCaseScope(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9eb9c8_Case>& _142335_c, jule::Ptr<_2090c90e0_ScopeTree>& _142350_tree) {
	jule::Ptr<_1dd9edc94_scopeChecker> _142417_ssc = _1dda0dd09_newChildChecker(_self_);;
	_142417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_142335_c));
	return _1dda03e0e_checkChildSc(_self_, _142350_tree,_142417_ssc);;
}



inline jule::Ptr<_1dd9eb9c8_Case> _1dda09e26_checkCase(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9eae7d_Match> _142933_m, jule::I64 _142944_i, jule::Ptr<_2090d0899_Case> _142956_c, jule::Ptr<_1dda8944a_Data> _142975_expr) {
	jule::Ptr<_1dd9eb9c8_Case> _143017_case = _142933_m.get()._field_Cases[_142944_i];;
	_143017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1dda8944a_Data>>::alloc(0LL, _142956_c.get()._field_Exprs.len());
	jule::Bool _143217_genericMatched = false;;
	jule::Ptr<_1dda8aeb8_Eval> _143317_eval = _1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0));;
	{
		auto &expr = _142956_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c6c2e10c:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _143421_e = *it;
			{
				jule::Ptr<_1dda8944a_Data> _143521_d = _1ddaa62be_evalExprKind(_143317_eval, _143421_e.get()._field_Kind);;
				if ((_143521_d == nullptr)) {
					goto _iter_next_1c6c2e10c;
				};
				if (_142933_m.get()._field_TypeMatch) {
					_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
					if ((_1dd9e5450_countMatchType(_142933_m,_143521_d.get()._field_Kind) > 1LL)) {
						_1dda21745_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_143521_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
					};
					if (_142975_expr.get()._field_Kind.get()._field_Generic) {
						_143217_genericMatched=(_143217_genericMatched || _1ddab5ad6_Equal(_142975_expr.get()._field_Kind, _143521_d.get()._field_Kind));
					} else {
						if ((_1ddab8215_TypeEnum(_142975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1dda2d8d9_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
						} else {
							jule::Ptr<_1dd9d9521_Trait> _145029_trt = _1ddab8e2a_Trait(_142975_expr.get()._field_Kind.ptr());;
							if ((_145029_trt != nullptr)) {
								_1dda2d8d9_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1c6c2e10c;
				};
				if (_143521_d.get()._field_Decl) {
					_1dda21745_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1c6c2e10c;
				};
				_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
				_1dda74d3c_assignTypeChecker _146821_checker = _1dda74d3c_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142975_expr.get()._field_Kind, ._field_d=_143521_d, ._field_errorToken=_143421_e.get()._field_Token};;
				_1dda75eb4_check(&_146821_checker);
			}
			_iter_next_1c6c2e10c:;
			++it;
			goto _iter_begin_1c6c2e10c;
		}
		_iter_end_1c6c2e10c:;
	};
	if ((((!(_142933_m.get()._field_TypeMatch)) || (!(_142975_expr.get()._field_Kind.get()._field_Generic))) || _143217_genericMatched)) {
		_143017_case.get()._field_Scope=_1dda0992b_checkCaseScope(_self_, _143017_case,_142956_c.get()._field_Scope);
	};
	return _143017_case;;
}



inline void _1dda0a2de_checkCases(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d1070_MatchCase>& _148235_m, jule::Ptr<_1dd9eae7d_Match> _148254_rm, jule::Ptr<_1dda8944a_Data> _148270_expr) {
	_148254_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1dd9eb9c8_Case>>::alloc(0LL, _148235_m.get()._field_Cases.len());
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c6c37ed4:;
		if (it != expr.end()) {
			jule::I64 _148413_i = it - expr.begin();
			{
				jule::Ptr<_1dd9eb9c8_Case> _148521_case = jule::new_ptr<_1dd9eb9c8_Case>(_1dd9eb9c8_Case{._field_Owner=_148254_rm, });;
				if ((_148413_i > 0LL)) {
					_148254_rm.get()._field_Cases[(_148413_i - 1LL)].get()._field_Next=_148521_case;
				};
				_148254_rm.get()._field_Cases = jule::alloc_for_append(_148254_rm.get()._field_Cases,1);_148254_rm.get()._field_Cases.__push(_148521_case);;
			}
			_iter_next_1c6c37ed4:;
			++it;
			_148413_i++;
			goto _iter_begin_1c6c37ed4;
		}
		_iter_end_1c6c37ed4:;
	};
	if (((_148254_rm.get()._field_Default != nullptr) && (_148235_m.get()._field_Cases.len() > 0LL))) {
		_148254_rm.get()._field_Cases[(_148254_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148254_rm.get()._field_Default;
	};
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c6c3ab63:;
		if (it != expr.end()) {
			jule::I64 _149814_i = it - expr.begin();
			jule::Ptr<_2090d0899_Case> _149821_c = *it;
			{
				_1dda09e26_checkCase(_self_, _148254_rm,_149814_i,_149821_c,_148270_expr);
			}
			_iter_next_1c6c3ab63:;
			++it;
			_149814_i++;
			goto _iter_begin_1c6c3ab63;
		}
		_iter_end_1c6c3ab63:;
	};
}



inline jule::Ptr<_1dd9eb9c8_Case> _1dda0a696_checkDefault(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9eae7d_Match> _150336_m, jule::Ptr<_2090ce7cc_Else> _150351_d) {
	jule::Ptr<_1dd9eb9c8_Case> _150417_def = jule::new_ptr<_1dd9eb9c8_Case>(_1dd9eb9c8_Case{._field_Owner=_150336_m, });;
	_150417_def.get()._field_Scope=_1dda0992b_checkCaseScope(_self_, _150417_def,_150351_d.get()._field_Scope);
	return _150417_def;;
}



inline void _1dda0a91b_checkComptimePanic(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9e7232_Scope>& _151139_s) {
	if ((_151139_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151613_stmt = _151139_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151613_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6c3dda8:;
			{
				jule::Ptr<_1dda8944a_Data> _151917_d = _151613_stmt.cast_ptr<_1dda8944a_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _151917_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1c6c3eb9a:;
						{
							jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel> _152221_m = _151917_d.get()._field_Model.cast_ptr<_1dd9c134e_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _152221_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type48) {
									_case_begin_1c6c40b46:;
									{
										jule::Ptr<_1dd9ad050_Const> _152525_c = _152221_m.get()._field_Expr.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
										if (_1dd9b242d_IsStr(_152525_c.ptr())) {
											jule::Ptr<_1dd9edc94_scopeChecker> _152733_root = _1dda0214e_getHardRoot(_self_);;
											_1dda21745_pushErr(_self_.get()._field_s.ptr(), _152733_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1dd9b0085_ReadStr(_152525_c.ptr()), &__jule_any_type6)}));
										};
									}
								}
								_match_end_1c6c40937:;
							};
						}
					}
					_match_end_1c6c3e78d:;
				};
			}
		}
		_match_end_1c6c3dd53:;
	};
}



inline void _1dda0ac3a_pushTypeMatch(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_1dd9eae7d_Match> _153537_tm, jule::Ptr<_2090d1070_MatchCase>& _153554_m) {
	if (_153537_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _153537_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1c6c400c9:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9eb9c8_Case> _153925_c = *it;
				{
					if ((_153925_c.get()._field_Scope != nullptr)) {
						_1dda0a91b_checkComptimePanic(_self_, _153925_c.get()._field_Scope);
						_153537_tm.get()._field_Default=_153925_c;
						_153537_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1c6c400c9:;
				++it;
				goto _iter_begin_1c6c400c9;
			}
			_iter_end_1c6c400c9:;
		};
		if ((_153554_m.get()._field_Default != nullptr)) {
			_153537_tm.get()._field_Cases=nullptr;
			_153537_tm.get()._field_Default=_1dda0a696_checkDefault(_self_, _153537_tm,_153554_m.get()._field_Default);
			if ((_153537_tm.get()._field_Default != nullptr)) {
				_1dda0a91b_checkComptimePanic(_self_, _153537_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153537_tm, &__jule_any_type49));;
}



inline void _1dda0aeb0_checkTypeMatch(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d1070_MatchCase>& _155939_m) {
	jule::Ptr<_1dda8944a_Data> _156017_d = _1ddaa65cc_eval(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _155939_m.get()._field_Expr);;
	if ((_156017_d == nullptr)) {
		return;;
	};
	if (((!(_156017_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1ddab7764_Prim(_156017_d.get()._field_Kind.ptr()) != nullptr) && _1ddabd5c2_IsAny(_1ddab7764_Prim(_156017_d.get()._field_Kind.ptr()).ptr())) || (_1ddab8e2a_Trait(_156017_d.get()._field_Kind.ptr()) != nullptr)) || (_1ddab8215_TypeEnum(_156017_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _155939_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1dd9eae7d_Match> _157117_tm = jule::new_ptr<_1dd9eae7d_Match>(_1dd9eae7d_Match{._field_Expr=_156017_d, ._field_TypeMatch=true, });;
	if (((!(_157117_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155939_m.get()._field_Default != nullptr))) {
		_157117_tm.get()._field_Default=_1dda0a696_checkDefault(_self_, _157117_tm,_155939_m.get()._field_Default);
	};
	_1dda0a2de_checkCases(_self_, _155939_m,_157117_tm,_156017_d);
	_1dda0ac3a_pushTypeMatch(_self_, _157117_tm,_155939_m);
}



inline void _1dda0b235_checkCommonMatch(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d1070_MatchCase>& _158441_m) {
	jule::Ptr<_1dda8944a_Data> _158517_d = nullptr;;
	if ((_158441_m.get()._field_Expr == nullptr)) {
		_158517_d=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1dd9ada12_NewBool(true)});
		_158517_d.get()._field_Model=jule::Any(_158517_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_158517_d=_1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _158441_m.get()._field_Expr);
		if ((_158517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1dd9eae7d_Match> _159917_mc = jule::new_ptr<_1dd9eae7d_Match>(_1dd9eae7d_Match{._field_Expr=_158517_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_159917_mc, &__jule_any_type49));;
	if ((_158441_m.get()._field_Default != nullptr)) {
		_159917_mc.get()._field_Default=_1dda0a696_checkDefault(_self_, _159917_mc,_158441_m.get()._field_Default);
	};
	_1dda0a2de_checkCases(_self_, _158441_m,_159917_mc,_158517_d);
}



inline void _1dda0b4aa_checkMatch(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090d1070_MatchCase> _161134_m) {
	if (_161134_m.get()._field_TypeMatch) {
		_1dda0aeb0_checkTypeMatch(_self_, _161134_m);
		return;;
	};
	_1dda0b235_checkCommonMatch(_self_, _161134_m);
}



inline void _1dda0b730_checkFall(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c6e9a_FallSt> _161929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1dda01b76_isDeferred(_self_))) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1dd9eb9c8_Case* _162717_case = ((_1dd9eb9c8_Case*)(_self_.get()._field_cse));;
	if ((_162717_case->_field_Next == nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1dd9ec07d_FallSt>(_1dd9ec07d_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_162717_case->_field_Next))}), &__jule_any_type50));;
}



inline jule::Ptr<_1dd9e9685_BreakSt> _1dda0ba3d_checkBreakWithLabel(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cdaea_BreakSt> _163939_b) {
	jule::Ptr<_1dd9e9685_BreakSt> _164017_brk = _1dda0bd4b_checkPlainBreak(_self_, _163939_b);;
	if ((_164017_brk == nullptr)) {
		return nullptr;;
	};
	_164017_brk.get()._field_It=0LLU;
	_164017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1dd9eca0c_scopeLabel> _165017_label = _1dd9e4938_findLabelParent(_163939_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_165017_label == nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	_165017_label.get()._field_used=true;
	if (((_165017_label.get()._field_pos + 1LL) >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::I64 _166313_i = (_165017_label.get()._field_pos + 1LL);;
	if ((_166313_i >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
	} else {
		jule::Any _166721_st = _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166313_i];;
		{
			auto &_match_expr{ _166721_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1c6c5a831:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1c6c5c558:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1c6c5c5be:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type49) {
				_case_begin_1c6c5c635:;
				{
					_164017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49)));
				}
			}
			else {
				_case_begin_1c6c5c3d2:;
				{
					_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
				}
			}
			_match_end_1c6c5c36b:;
		};
	};
	if ((_164017_brk.get()._field_It != 0LLU)) {
		if ((!(_1dda07253_checkValidBreakLabel(_self_, _164017_brk.get()._field_It)))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	if ((_164017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1dda07253_checkValidBreakLabel(_self_, _164017_brk.get()._field_Mtch)))) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
		};
	};
	return _164017_brk;;
}



inline jule::Ptr<_1dd9e9685_BreakSt> _1dda0bd4b_checkPlainBreak(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cdaea_BreakSt> _169735_b) {
	if (_1dda01b76_isDeferred(_self_)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _170317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170317_scope.get()._field_it == 0LLU) && (_170317_scope.get()._field_cse == 0LLU)) && (_170317_scope.get()._field_parent != nullptr)) && (_170317_scope.get()._field_owner == nullptr))) {
			_case_begin_1c6c63839:;
			{
				_170317_scope=_170317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170317_scope.get()._field_it != 0LLU)) {
			_case_begin_1c6c638b1:;
			{
				return jule::new_ptr<_1dd9e9685_BreakSt>(_1dd9e9685_BreakSt{._field_It=_170317_scope.get()._field_it, });;
			}
		}
		else if ((_170317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1c6c63938:;
			{
				return jule::new_ptr<_1dd9e9685_BreakSt>(_1dd9e9685_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1dd9eb9c8_Case*)(_170317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1c6c6376d:;
	};
	_1dda21745_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1dda0c0c1_checkBreak(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cdaea_BreakSt> _171930_b) {
	if ((_171930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1dd9e9685_BreakSt> _172121_brk = _1dda0ba3d_checkBreakWithLabel(_self_, _171930_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172121_brk, &__jule_any_type51));;
		return;;
	};
	jule::Ptr<_1dd9e9685_BreakSt> _172617_brk = _1dda0bd4b_checkPlainBreak(_self_, _171930_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172617_brk, &__jule_any_type51));;
}



inline void _1dda0c346_checkRet(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090cbe6c_RetSt> _173032_r) {
	if (_1dda01b76_isDeferred(_self_)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _173032_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9ec402_RetSt> _173517_rt = jule::new_ptr<_1dd9ec402_RetSt>(_1dd9ec402_RetSt{._field_Func=_1dda01dda_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173517_rt, &__jule_any_type52));;
	jule::Ptr<_1dda82762_retTypeChecker> _174017_rtc = jule::new_ptr<_1dda82762_retTypeChecker>(_1dda82762_retTypeChecker{._field_sc=_self_, ._field_f=_173517_rt.get()._field_Func, ._field_errorToken=_173032_r.get()._field_Token, });;
	jule::Bool _174513_ok = _1dda83466_check(_174017_rtc.ptr(), _173032_r.get()._field_Expr);;
	if ((!(_174513_ok))) {
		return;;
	};
	if ((_173032_r.get()._field_Expr != nullptr)) {
		_173517_rt.get()._field_Expr=_174017_rtc.get()._field_model;
	};
}



inline void _1dda0c5bb_checkUseExpr(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090be019_UseExpr> _175532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1dda01b76_isDeferred(_self_)) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1dda21745_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1dda0c841_checkNode(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Any& _177134_node) {
	{
		auto &_match_expr{ _177134_node };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1c6c7099a:;
			{
				_1dda04492_checkAnonScope(_self_, _177134_node.cast_ptr<_2090c90e0_ScopeTree>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1c6c70d96:;
			{
				_1dda031a5_checkVarDecl(_self_, _177134_node.cast_ptr<_2090cbab5_VarDecl>(&__jule_any_type17));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c6c711b5:;
			{
				_1dda0342a_checkTypeAliasDecl(_self_, _177134_node.cast_ptr<_2090d0426_TypeAliasDecl>(&__jule_any_type13));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c6c7122b:;
			{
				_1dda04a36_checkExpr(_self_, _177134_node.cast_ptr<_2090bd678_Expr>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1c6c713d5:;
			{
				_1dda053c7_checkConditional(_self_, _177134_node.cast_ptr<_2090cec50_Conditional>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1c6c7144b:;
			{
				_1dda06b37_checkIter(_self_, _177134_node.cast_ptr<_2090cc5cc_Iter>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1c6c714b2:;
			{
				_1dda077d6_checkCont(_self_, _177134_node.cast_ptr<_2090cdea2_ContSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1c6c71528:;
			{
				_1dda07a5b_checkLabel(_self_, _177134_node.cast_ptr<_2090c6807_LabelSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1c6c7158e:;
			{
				_1dda07cd1_pushGoto(_self_, _177134_node.cast_ptr<_2090c6bae_GotoSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c6c71605:;
			{
				_1dda09574_checkAssignSt(_self_, _177134_node.cast_ptr<_2090c7ae4_AssignSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1c6c7166b:;
			{
				_1dda0b4aa_checkMatch(_self_, _177134_node.cast_ptr<_2090d1070_MatchCase>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1c6c716d2:;
			{
				_1dda0b730_checkFall(_self_, _177134_node.cast_ptr<_2090c6e9a_FallSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c6c71748:;
			{
				_1dda0c0c1_checkBreak(_self_, _177134_node.cast_ptr<_2090cdaea_BreakSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c6c717ae:;
			{
				_1dda0c346_checkRet(_self_, _177134_node.cast_ptr<_2090cbe6c_RetSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c6c71825:;
			{
				_1dda0c5bb_checkUseExpr(_self_, _177134_node.cast_ptr<_2090be019_UseExpr>(&__jule_any_type65));
			}
		}
		else {
			_case_begin_1c6c70b21:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1c6c70a44:;
	};
}



inline void _1dda0ca1c_checkResult(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	_2090c89d5_Stmt _180917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c6c79d39:;
			{
				jule::Ptr<_2090be019_UseExpr> _181221_ue = _180917_stmt._field_Data.cast_ptr<_2090be019_UseExpr>(&__jule_any_type65);;
				jule::Ptr<_1dda8944a_Data> _181321_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _181221_ue.get()._field_Expr);;
				if ((_181321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181321_d, &__jule_any_type24));;
				jule::Ptr<_1dda82762_retTypeChecker> _181821_rtc = jule::new_ptr<_1dda82762_retTypeChecker>(_1dda82762_retTypeChecker{._field_sc=_self_, ._field_types=_1dd9cb3e2_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181221_ue.get()._field_Expr.get()._field_Token, });;
				_1dda83466_check(_181821_rtc.ptr(), _181221_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c6c79520:;
			{
				jule::Ptr<_2090bd678_Expr> _182521_expr = _180917_stmt._field_Data.cast_ptr<_2090bd678_Expr>(&__jule_any_type54);;
				jule::Ptr<_1dda8944a_Data> _182621_d = _1ddaa68da_evalExpr(_1dda2ce8d_eval(_self_.get()._field_s, jule::Trait<_1ddad134e_Lookup>(_self_, 0)), _182521_expr);;
				if ((_182621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1c6c7ddb5:;
						{
							jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> _183225_m = _182621_d.get()._field_Model.cast_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1dda047b1_processErrorCall(_self_, _183225_m,_182521_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182621_d, &__jule_any_type24));;
						}
					}
					else {
						_case_begin_1c6c7e25b:;
						{
							return;;
						}
					}
					_match_end_1c6c7e206:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type59 || _match_expr.type == &__jule_any_type63 || _match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type64) {
			_case_begin_1c6c79586:;
			{
				_1dda0c841_checkNode(_self_, _180917_stmt._field_Data);
			}
		}
		else {
			_case_begin_1c6c794a9:;
			{
				_1dda0c841_checkNode(_self_, _180917_stmt._field_Data);
				return;;
			}
		}
		_match_end_1c6c79322:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1dda0cbe8_checkTree(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185417_n)--;
	};
	for (; (_self_.get()._field_i < _185417_n); (_self_.get()._field_i)++) {
		{
			_2090c89d5_Stmt _186221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1dda0c841_checkNode(_self_, _186221_stmt._field_Data);
			if (_1dda01912_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1c6c818ac:;
	}
	_iter_end_1c6c818ac:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1dda0ca1c_checkResult(_self_);
	};
}



inline void _1dda0d017_checkGoto(_1dd9edc94_scopeChecker* _self_, jule::Ptr<_1dd9ece80_scopeGoto>& _187333_gt, jule::Ptr<_1dd9eca0c_scopeLabel>& _187354_label) {
	jule::Ptr<_1dd9edc94_scopeChecker> _187417_gtsc = _187333_gt.get()._field_scope;;
	while (((_187417_gtsc.get()._field_childIndex - 1LL) > _187354_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187417_gtsc=_187417_gtsc.get()._field_parent;
		}
	_iter_next_1c6c8573a:;
	}
	_iter_end_1c6c8573a:;;
	jule::I64 _187917_n = 0LL;;
	if ((_187417_gtsc.get()._field_scope == _187354_label.get()._field_scope.get()._field_scope)) {
		if ((_187333_gt.get()._field_pos > _187354_label.get()._field_pos)) {
			return;;
		};
		_187917_n=_187333_gt.get()._field_pos;
	};
	jule::I64 _189217_i = (_187354_label.get()._field_pos - 1LL);;
	if ((_187917_n == 0LL)) {
		{
			auto &expr = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1c6c87d47:;
			if (it != expr.end()) {
				jule::I64 _189517_j = it - expr.begin();
				jule::Any _189520_stmt = *it;
				{
					if (_1dd9e510e_stmtIsGotoScope(_189520_stmt,_187417_gtsc.get()._field_scope)) {
						_187917_n=_189517_j;
						goto _iter_end_1c6c87d47;
					};
				}
				_iter_next_1c6c87d47:;
				++it;
				_189517_j++;
				goto _iter_begin_1c6c87d47;
			}
			_iter_end_1c6c87d47:;
		};
	};
	for (; (_189217_i >= _187917_n); (_189217_i)--) {
		{
			jule::Any _190521_stmt = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189217_i];;
			if (_1dd9e6c9d_stmtIsDef(_190521_stmt)) {
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _187333_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187333_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
				return;;
			};
		}
	_iter_next_1c6c88c38:;
	}
	_iter_end_1c6c88c38:;;
}



inline void _1dda0d1e3_checkGotos(_1dd9edc94_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1c6c89189:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ece80_scopeGoto> _191421_gt = *it;
			{
				jule::Ptr<_1dd9eca0c_scopeLabel> _191521_label = _1dda02a78_findLabelAll(&(*_self_), _191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191521_label == nullptr)) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _191421_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type6)}));
					goto _iter_next_1c6c89189;
				};
				_191521_label.get()._field_used=true;
				_1dda0d017_checkGoto(&(*_self_), _191421_gt,_191521_label);
			}
			_iter_next_1c6c89189:;
			++it;
			goto _iter_begin_1c6c89189;
		}
		_iter_end_1c6c89189:;
	};
}



inline void _1dda0d3be_checkLabels(_1dd9edc94_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1c6c8ad28:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eca0c_scopeLabel> _192716_l = *it;
			{
				if ((!(_192716_l.get()._field_used))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _192716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192716_l.get()._field_label.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_1c6c8ad28:;
			++it;
			goto _iter_begin_1c6c8ad28;
		}
		_iter_end_1c6c8ad28:;
	};
}



inline void _1dda0d59a_checkVars(_1dd9edc94_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c6c8e623:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _193516_v = *it;
			{
				if (((((!(_193516_v.get()._field_Used)) && (!(_222e649ab_IsIgnoreIdent(_193516_v.get()._field_Ident)))) && (!(_222e64c53_IsAnonIdent(_193516_v.get()._field_Ident)))) && (_193516_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _193516_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193516_v.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_1c6c8e623:;
			++it;
			goto _iter_begin_1c6c8e623;
		}
		_iter_end_1c6c8e623:;
	};
}



inline void _1dda0d776_checkAliases(_1dd9edc94_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c6c9159d:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> _194316_a = *it;
			{
				if ((((!(_194316_a.get()._field_Used)) && (!(_222e649ab_IsIgnoreIdent(_194316_a.get()._field_Ident)))) && (!(_222e64c53_IsAnonIdent(_194316_a.get()._field_Ident))))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _194316_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194316_a.get()._field_Ident, &__jule_any_type6)}));
				};
			}
			_iter_next_1c6c9159d:;
			++it;
			goto _iter_begin_1c6c9159d;
		}
		_iter_end_1c6c9159d:;
	};
}



inline void _1dda0da95_check(jule::Ptr<_1dd9edc94_scopeChecker> _self_, jule::Ptr<_2090c90e0_ScopeTree>& _195130_tree, jule::Ptr<_1dd9e7232_Scope>& _195153_s) {
	_195153_s.get()._field_Deferred=_195130_tree.get()._field_Deferred;
	_195153_s.get()._field_Unsafety=_195130_tree.get()._field_Unsafety;
	jule::I64 _195513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_195130_tree;
	_self_.get()._field_scope=_195153_s;
	_1dda0cbe8_checkTree(_self_);
	if ((_195513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1dda0d59a_checkVars(_self_.ptr());
		_1dda0d776_checkAliases(_self_.ptr());
		if (_1dda014c2_isRoot(_self_.ptr())) {
			_1dda0d1e3_checkGotos(_self_.ptr());
			_1dda0d3be_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1dd9edc94_scopeChecker> _1dda0dd09_newChildChecker(jule::Ptr<_1dd9edc94_scopeChecker> _self_) {
	jule::Ptr<_1dd9edc94_scopeChecker> _197517_base = _1dd9e4262_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197517_base.get()._field_parent=_self_;
	_197517_base.get()._field_labels=_self_.get()._field_labels;
	_197517_base.get()._field_gotos=_self_.get()._field_gotos;
	_197517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd9edc94_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1dda0ece9_checkCdef(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6c9795b:;
			{
				if ((*_self_)._field_o.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1c6c97b9d;
				};
				goto _case_begin_1c6c97c03;
			}
		}
		else {
			_case_begin_1c6c97c03:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6c97b9d:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1dda1006e_checkTypedef(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6c9a211:;
			{
				if ((*_self_)._field_o.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_CppLinked) {
					goto _match_end_1c6c9a442;
				};
				goto _case_begin_1c6c9a497;
			}
		}
		else {
			_case_begin_1c6c9a497:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6c9a442:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1dda102e4_checkDerive(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6c9c9d8:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_CppLinked))) {
					goto _match_end_1c6c9cc19;
				};
				goto _case_begin_1c6c9cc6e;
			}
		}
		else {
			_case_begin_1c6c9cc6e:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6c9cc19:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1c6ca169b:;
		}
		else {
			_case_begin_1c6c9d962:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6ca12d3:;
	};
}



inline void _1dda10569_checkNamespace(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6ca15d0:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_CppLinked))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6ca2c1e:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66).get()._field_CppLinked))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c6ca2c85:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1dda418db_Var>(&__jule_any_type9).get()._field_CppLinked))) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else {
			_case_begin_1c6ca2b64:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6ca2b0e:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_222e62217_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6cab376:;
			{
				if ((_1ddaaea7a_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_209085db0_Directive> _11625_typedef = jule::new_ptr<_209085db0_Directive>(_209085db0_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_209085db0_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1c6ca9a4a:;
	};
}



inline void _1dda107de_checkDeprecated(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c6cabb6d:;
			{
				if ((*_self_)._field_o.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_CppLinked) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6cad631:;
			{
				if ((*_self_)._field_o.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66).get()._field_CppLinked) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c6cad697:;
			{
				if ((*_self_)._field_o.cast_ptr<_1dda418db_Var>(&__jule_any_type9).get()._field_CppLinked) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
				};
			}
		}
		else {
			_case_begin_1c6cad026:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6cacd6c:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_222e62217_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1dda10a64_checkTest(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c6cb5e85:;
			{
				jule::Ptr<_1dd9c761e_Fn> _16717_f = (*_self_)._field_o.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1dd9c82bd_IsInit(_16717_f.ptr())))) && (!(_1dd9c8059_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1c6cb679e;
				};
				if (_1dd9c7ce5_IsMethod(_16717_f.ptr())) {
					_1dda21745_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1c6cb679e;
				};
				goto _case_begin_1c6cb6903;
			}
		}
		else {
			_case_begin_1c6cb6903:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6cb679e:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1dda21745_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1dda10cd9_checkDirective(_1dda0e8a9_directiveChecker* _self_, jule::Ptr<_209085db0_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1c6cba82a:;
			{
				_1dda0ece9_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1c6cba891:;
			{
				_1dda1006e_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1c6cba907:;
			{
				_1dda102e4_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1c6cba96d:;
			{
				_1dda10569_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1c6cbb5ea:;
			{
				_1dda107de_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1c6cbb661:;
			{
				_1dda10a64_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1c6cbb6c7:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		else {
			_case_begin_1c6cba7b4:;
			{
				_1dda21745_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type6)}));
			}
		}
		_match_end_1c6cba75e:;
	};
}



inline void _1dda10eb5_check(_1dda0e8a9_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1c6cbdc29:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _20821_d = *it;
			{
				_1dda10cd9_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1c6cbdc29:;
			++it;
			goto _iter_begin_1c6cbdc29;
		}
		_iter_end_1c6cbdc29:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dda0e8a9_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda15e54_FindPackage(_1dda15937_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda16262_SelectPackage(_1dda15937_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _1dda16619_FindVar(_1dda15937_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;;
	};
	return _1dda1314e_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda169c1_FindTypeAlias(_1dda15937_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;;
	};
	return _1dda1357d_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);;
}



inline jule::Ptr<_2090d5849_Struct> _1dda16d78_FindStruct(_1dda15937_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;;
	};
	return _1dda13968_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda17230_FindFn(_1dda15937_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;;
	};
	return _1dda13dca_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda1753d_FindTrait(_1dda15937_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;;
	};
	return _1dda141d8_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda1784b_FindEnum(_1dda15937_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;;
	};
	return _1dda14529_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda17b59_FindTypeEnum(_1dda15937_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1dda18000_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;;
	};
	return _1dda1486a_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);;
}



inline jule::Bool _1dda18000_isLookupable(_1dda15937_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1dda1830d_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1dda1830d_existIdent(&(*_self_), _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1dda1830d_existIdent(_1dda15937_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c6cd9195:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1c6cd9195:;
			++it;
			goto _iter_begin_1c6cd9195;
		}
		_iter_end_1c6cd9195:;
	};
	return false;;
}



inline jule::Bool _1dda18594_isAccessibleViaSelection(_1dda15937_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1dda1830d_existIdent(&(*_self_), jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda15937_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda18d69_FindPackage(_1dda18891_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda19177_SelectPackage(_1dda18891_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _1dda1952e_FindVar(_1dda18891_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1dda1314e_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda198d6_FindTypeAlias(_1dda18891_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1dda1357d_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);;
}



inline jule::Ptr<_2090d5849_Struct> _1dda19c8d_FindStruct(_1dda18891_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1dda13968_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda1a145_FindFn(_1dda18891_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1dda13dca_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda1a453_FindTrait(_1dda18891_Package* _self_, jule::Str _34428_ident) {
	return _1dda141d8_findTraitInPackage((*_self_)._field_Files,_34428_ident);;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda1a761_FindEnum(_1dda18891_Package* _self_, jule::Str _35027_ident) {
	return _1dda14529_findEnumInPackage((*_self_)._field_Files,_35027_ident);;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda1aa6e_FindTypeEnum(_1dda18891_Package* _self_, jule::Str _35631_ident) {
	return _1dda1486a_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda18891_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda1e0a0_FindPackage(_1dda1da83_Sema* _self_, jule::Str _22330_ident) {
	return _1dda84b3d_FindPackage((*_self_)._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda1e3ad_SelectPackage(_1dda1da83_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _23332_selector) {
	return _1dda84e4b_SelectPackage((*_self_)._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1dda418db_Var> _1dda1e765_FindVar(_1dda1da83_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1dda418db_Var> _24517_v = _1dda1314e_findVarInPackage((*_self_)._field_files,_24326_ident,_24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d0c7a1:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_25121_imp,_24326_ident)))) {
					goto _iter_next_1c6d0c7a1;
				};
				_24517_v=_1dda16619_FindVar(_25121_imp.ptr(), _24326_ident,_24338_cpp_linked);
				if (((_24517_v != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _24517_v.get()._field_Public,_24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1c6d0c7a1:;
			++it;
			goto _iter_begin_1c6d0c7a1;
		}
		_iter_end_1c6d0c7a1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda1eb1c_FindTypeAlias(_1dda1da83_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1ddab46d9_TypeAlias> _27217_ta = _1dda1357d_findTypeAliasInPackage((*_self_)._field_files,_27032_ident,_27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d100ab:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_27821_imp,_27032_ident)))) {
					goto _iter_next_1c6d100ab;
				};
				_27217_ta=_1dda169c1_FindTypeAlias(_27821_imp.ptr(), _27032_ident,_27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _27217_ta.get()._field_Public,_27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1c6d100ab:;
			++it;
			goto _iter_begin_1c6d100ab;
		}
		_iter_end_1c6d100ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_2090d5849_Struct> _1dda1eec4_FindStruct(_1dda1da83_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_2090d5849_Struct> _29917_s = _1dda13968_findStructInPackage((*_self_)._field_files,_29729_ident,_29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d128b6:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_30421_imp,_29729_ident)))) {
					goto _iter_next_1c6d128b6;
				};
				_29917_s=_1dda16d78_FindStruct(_30421_imp.ptr(), _29729_ident,_29741_cppLinked);
				if (((_29917_s != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _29917_s.get()._field_Public,_29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1c6d128b6:;
			++it;
			goto _iter_begin_1c6d128b6;
		}
		_iter_end_1c6d128b6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda2037b_FindFn(_1dda1da83_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1dd9c761e_Fn> _32417_f = _1dda13dca_findFnInPackage((*_self_)._field_files,_32225_ident,_32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d151c1:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_33021_imp,_32225_ident)))) {
					goto _iter_next_1c6d151c1;
				};
				_32417_f=_1dda17230_FindFn(_33021_imp.ptr(), _32225_ident,_32237_cpp_linked);
				if (((_32417_f != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _32417_f.get()._field_Public,_32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1c6d151c1:;
			++it;
			goto _iter_begin_1c6d151c1;
		}
		_iter_end_1c6d151c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda20689_FindTrait(_1dda1da83_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1dd9d9521_Trait> _35117_t = _1dda141d8_findTraitInPackage((*_self_)._field_files,_34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d17b1e:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_35721_imp,_34928_ident)))) {
					goto _iter_next_1c6d17b1e;
				};
				_35117_t=_1dda1753d_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _35117_t.get()._field_Public,_35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1c6d17b1e:;
			++it;
			goto _iter_begin_1c6d17b1e;
		}
		_iter_end_1c6d17b1e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda20997_FindEnum(_1dda1da83_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1dd9db666_Enum> _37817_e = _1dda14529_findEnumInPackage((*_self_)._field_files,_37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d1a1c6:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_38421_imp,_37627_ident)))) {
					goto _iter_next_1c6d1a1c6;
				};
				_37817_e=_1dda1784b_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _37817_e.get()._field_Public,_37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1c6d1a1c6:;
			++it;
			goto _iter_begin_1c6d1a1c6;
		}
		_iter_end_1c6d1a1c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda20ca5_FindTypeEnum(_1dda1da83_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1dd9dcc61_TypeEnum> _40517_e = _1dda1486a_findTypeEnumInPackage((*_self_)._field_files,_40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d1c77d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1dda1c4aa_impIsLookupable(_41121_imp,_40331_ident)))) {
					goto _iter_next_1c6d1c77d;
				};
				_40517_e=_1dda17b59_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1dda26c78_isAccessibleDefine(&(*_self_), _40517_e.get()._field_Public,_40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1c6d1c77d:;
			++it;
			goto _iter_begin_1c6d1c77d;
		}
		_iter_end_1c6d1c77d:;
	};
	return nullptr;;
}



inline jule::Bool _1dda21107_isFlag(_1dda1da83_Sema* _self_, jule::I64 _42721_flags) {
	return (((*_self_)._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1dda2137c_setCurrentFile(_1dda1da83_Sema* _self_, jule::Ptr<_1dda84621_SymbolTable> _42937_f) {
	(*_self_)._field_file=_42937_f;
}



inline void _1dda21745_pushErr(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1dda1c169_compilerErr(_43126_token,true,_43141_fmt,_43154_args));;
}



inline void _1dda2699d_pushSugggestion(_1dda1da83_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1dda1d5ee_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43634_fmt,_43647_args);
	};
}



inline jule::Bool _1dda26c78_isAccessibleDefine(_1dda1da83_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_222e62217_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_222e67e98_Dir((*_self_)._field_file.get()._field_File.ptr()) == _222e67e98_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1dda271c9_isDuplicatedIdent(_1dda1da83_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c6d23c18:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> &_44916_f = *it;
			{
				if (_1dda87b1e_isDuplicatedIdent(_44916_f.ptr(), _44832_itself,_44849_ident,_44861_cpp_linked)) {
					return true;;
				};
				{
					auto &expr = _44916_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c6d24a93:;
					if (it != expr.end()) {
						jule::Ptr<_1dda15937_ImportInfo> &_45420_imp = *it;
						{
							{
								auto &expr = _45420_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1c6d25357:;
								if (it != expr.end()) {
									jule::Ptr<_222e62217_Token> &_45524_selected = *it;
									{
										if ((_45524_selected.get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1c6d25357:;
									++it;
									goto _iter_begin_1c6d25357;
								}
								_iter_end_1c6d25357:;
							};
						}
						_iter_next_1c6d24a93:;
						++it;
						goto _iter_begin_1c6d24a93;
					}
					_iter_end_1c6d24a93:;
				};
			}
			_iter_next_1c6d23c18:;
			++it;
			goto _iter_begin_1c6d23c18;
		}
		_iter_end_1c6d23c18:;
	};
	return false;;
}



inline void _1dda274e8_checkDirectives(jule::Ptr<_1dda1da83_Sema> _self_, jule::Slice<jule::Ptr<_209085db0_Directive>>& _46540_d, jule::Any _46566_o) {
	_1dda0e8a9_directiveChecker _46617_dc = _1dda0e8a9_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_209085db0_Directive>>>)((&(_46540_d)))), ._field_o=_46566_o};;
	_1dda10eb5_check(&_46617_dc);
}



inline jule::Bool _1dda27949_checkGenericQuantity(_1dda1da83_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_222e62217_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1c6d28080:;
			{
				_1dda21745_pushErr(&(*_self_), _47466_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1c6d27898:;
			{
				_1dda21745_pushErr(&(*_self_), _47466_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1c6d2790e:;
			{
				_1dda21745_pushErr(&(*_self_), _47466_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1c6d27986:;
			{
				_1dda21745_pushErr(&(*_self_), _47466_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c6d27832:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c6d27766:;
	};
}



inline jule::Bool _1dda27d23_isDuplicatedImportSelection(_1dda1da83_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d2937d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> &_49416_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49416_imp) == _49342_itself)) {
					goto _iter_end_1c6d2937d;
				};
				if (_1dda1830d_existIdent(_49416_imp.ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1c6d2937d:;
			++it;
			goto _iter_begin_1c6d2937d;
		}
		_iter_end_1c6d2937d:;
	};
	return false;;
}



inline jule::Any _1dda281db_getImportDef(_1dda1da83_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1dda15937_ImportInfo>& _50644_imp) {
	if ((_1ddadb2c1_findPackageBuiltinDef(_50644_imp.get()._field_LinkPath,_50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type5);;
	};
	{
		auto &expr = _50644_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c6d2c44c:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1dda876bd_defByIdent(_51021_f.ptr(), _50627_ident,false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1c6d2c44c:;
			++it;
			goto _iter_begin_1c6d2c44c;
		}
		_iter_end_1c6d2c44c:;
	};
	return nullptr;;
}



inline jule::Bool _1c6d33ed1_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1dda418db_Var>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d37ea2_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1ddab46d9_TypeAlias>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d3be40_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_2090d5849_Struct>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d41065_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1dd9d9521_Trait>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d45003_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1dd9db666_Enum>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d48e91_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1dd9dcc61_TypeEnum>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1c6d4ce2e_checkImportSelection(_1dda1da83_Sema* _self_, jule::Ptr<_222e62217_Token>& _52143_ident, jule::Ptr<_1dd9c761e_Fn>& _52159_s) {
	if ((!(_1dda26c78_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1dda14d65_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1dda21745_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type6)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1dda288c3_checkImportSelectedSelections(_1dda1da83_Sema* _self_, jule::Ptr<_1dda15937_ImportInfo>& _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _53553_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1c6d2e7c3:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1c6d2e7c3;
				};
				if (_1dda27d23_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53553_imp)),_53716_ident.get()._field_Kind)) {
					_1dda21745_pushErr(&(*_self_), _53716_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type6)}));
					_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c6d2e7c3;
				};
				jule::Any _54921_def = _1dda281db_getImportDef(&(*_self_), _53716_ident.get()._field_Kind,_53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type5) {
						_case_begin_1c6d32a90:;
						{
							goto _iter_next_1c6d2e7c3;
						}
					}
					else if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1c6d2eecc:;
						{
							jule::Ptr<_1dda418db_Var> _55525_v = _54921_def.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
							__jule_func_result=(_1c6d33ed1_checkImportSelection(&(*_self_), _53716_ident,_55525_v) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1c6d32111:;
						{
							jule::Ptr<_1ddab46d9_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68);;
							__jule_func_result=(_1c6d37ea2_checkImportSelection(&(*_self_), _53716_ident,_55825_ta) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1c6d32188:;
						{
							jule::Ptr<_2090d5849_Struct> _56125_s = _54921_def.cast_ptr<_2090d5849_Struct>(&__jule_any_type67);;
							__jule_func_result=(_1c6d3be40_checkImportSelection(&(*_self_), _53716_ident,_56125_s) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type11) {
						_case_begin_1c6d32210:;
						{
							jule::Ptr<_1dd9d9521_Trait> _56425_t = _54921_def.cast_ptr<_1dd9d9521_Trait>(&__jule_any_type11);;
							__jule_func_result=(_1c6d41065_checkImportSelection(&(*_self_), _53716_ident,_56425_t) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1c6d32287:;
						{
							jule::Ptr<_1dd9db666_Enum> _56725_e = _54921_def.cast_ptr<_1dd9db666_Enum>(&__jule_any_type69);;
							__jule_func_result=(_1c6d45003_checkImportSelection(&(*_self_), _53716_ident,_56725_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type70) {
						_case_begin_1c6d32cb0:;
						{
							jule::Ptr<_1dd9dcc61_TypeEnum> _57025_e = _54921_def.cast_ptr<_1dd9dcc61_TypeEnum>(&__jule_any_type70);;
							__jule_func_result=(_1c6d48e91_checkImportSelection(&(*_self_), _53716_ident,_57025_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1c6d32d37:;
						{
							jule::Ptr<_1dd9c761e_Fn> _57325_f = _54921_def.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66);;
							__jule_func_result=(_1c6d4ce2e_checkImportSelection(&(*_self_), _53716_ident,_57325_f) && __jule_func_result);
						}
					}
					else {
						_case_begin_1c6d31e9b:;
						{
							_1dda21745_pushErr(&(*_self_), _53716_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type6)}));
							__jule_func_result=false;
							goto _iter_next_1c6d2e7c3;
						}
					}
					_match_end_1c6d31e46:;
				};
			}
			_iter_next_1c6d2e7c3:;
			++it;
			goto _iter_begin_1c6d2e7c3;
		}
		_iter_end_1c6d2e7c3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6d523b7_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dda418db_Var>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d5409a:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d33ed1_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d5409a:;
			++it;
			goto _iter_begin_1c6d5409a;
		}
		_iter_end_1c6d5409a:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d5594d_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d56d17:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d37ea2_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d56d17:;
			++it;
			goto _iter_begin_1c6d56d17;
		}
		_iter_end_1c6d56d17:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d56058_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_2090d5849_Struct>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d59a73:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d3be40_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d59a73:;
			++it;
			goto _iter_begin_1c6d59a73;
		}
		_iter_end_1c6d59a73:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d5b426_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9c761e_Fn>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d5c801:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d4ce2e_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d5c801:;
			++it;
			goto _iter_begin_1c6d5c801;
		}
		_iter_end_1c6d5c801:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d5ba42_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9d9521_Trait>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d60518:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d41065_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d60518:;
			++it;
			goto _iter_begin_1c6d60518;
		}
		_iter_end_1c6d60518:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d5e759_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9db666_Enum>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d63230:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9db666_Enum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d45003_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d63230:;
			++it;
			goto _iter_begin_1c6d63230;
		}
		_iter_end_1c6d63230:;
	};
	return _58517_ok;;
}

inline jule::Bool _1c6d62471_checkImportsAllSelectionsFromCollection(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9dcc61_TypeEnum>>& _58462_s, jule::Ptr<_222e62217_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1c6d65ed0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dcc61_TypeEnum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1c6d48e91_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1c6d65ed0:;
			++it;
			goto _iter_begin_1c6d65ed0;
		}
		_iter_end_1c6d65ed0:;
	};
	return _58517_ok;;
}



inline jule::Bool _1dda290ee_checkImportAllSelections(_1dda1da83_Sema* _self_, jule::Ptr<_1dda15937_ImportInfo>& _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _59444_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1c6d33453:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> &_59616_file = *it;
			{
				__jule_func_result=(_1c6d523b7_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Vars,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d5594d_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeAliases,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d56058_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Structs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d5b426_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Funcs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d5ba42_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Traits,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d5e759_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Enums,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1c6d62471_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeEnums,_59444_imp.get()._field_Token) && __jule_func_result);
			}
			_iter_next_1c6d33453:;
			++it;
			goto _iter_begin_1c6d33453;
		}
		_iter_end_1c6d33453:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda2941d_checkImportSelections(_1dda1da83_Sema* _self_, jule::Ptr<_1dda15937_ImportInfo>& _60845_imp) {
	jule::Bool __jule_func_result = false;
	if ((_60845_imp.get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1dda288c3_checkImportSelectedSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	} else if (_60845_imp.get()._field_ImportAll) {
		__jule_func_result = _1dda290ee_checkImportAllSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda2972b_isUseAliasDuplication(_1dda1da83_Sema* _self_, jule::Ptr<_1dda15937_ImportInfo>& _61741_imp) {
	if ((_61741_imp.get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c6d687eb:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == _61741_imp)) {
					goto _iter_end_1c6d687eb;
				};
				if ((_62221_imp2.get()._field_Alias == _61741_imp.get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == _61741_imp.get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1c6d687eb:;
			++it;
			goto _iter_begin_1c6d687eb;
		}
		_iter_end_1c6d687eb:;
	};
	return false;;
}



inline jule::Bool _1dda29a39_checkImport(_1dda1da83_Sema* _self_, jule::Ptr<_1dda15937_ImportInfo>& _63735_imp) {
	if ((_63735_imp.get()._field_CppLinked || (_63735_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1dda2972b_isUseAliasDuplication(&(*_self_), _63735_imp)) {
		_1dda21745_pushErr(&(*_self_), _63735_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63735_imp.get()._field_Alias, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63735_imp.get()._field_Duplicate))) {
		jule::Ptr<_1dda1da83_Sema> _64821_sema = jule::new_ptr<_1dda1da83_Sema>(_1dda1da83_Sema{._field_flags=(*_self_)._field_flags});;
		_1dda3d83e_check(_64821_sema, _63735_imp.get()._field_Package.get()._field_Files);
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1dda2941d_checkImportSelections(&(*_self_), _63735_imp);;
}



inline void _1dda29c15_checkImports(_1dda1da83_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1c6d6e406:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _66221_file = *it;
			{
				_1dda2137c_setCurrentFile(&(*_self_), _66221_file);
				{
					auto &expr = _66221_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1c6d70061:;
					if (it != expr.end()) {
						jule::Ptr<_1dda15937_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1dda29a39_checkImport(&(*_self_), _66425_imp);;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1c6d70061:;
						++it;
						goto _iter_begin_1c6d70061;
					}
					_iter_end_1c6d70061:;
				};
			}
			_iter_next_1c6d6e406:;
			++it;
			goto _iter_begin_1c6d6e406;
		}
		_iter_end_1c6d6e406:;
	};
}



inline void _1dda29de1_implFileImpls(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1c6d6eb32:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9e21c7_Impl> _67521_imp = *it;
			{
				_1dda35924_implImpl(_self_, _67521_imp);
			}
			_iter_next_1c6d6eb32:;
			++it;
			goto _iter_begin_1c6d6eb32;
		}
		_iter_end_1c6d6eb32:;
	};
}



inline void _1dda2a0bc_implImpls(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6d71b45:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _68121_file = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _68121_file);
				_1dda29de1_implFileImpls(_self_);
			}
			_iter_next_1c6d71b45:;
			++it;
			goto _iter_begin_1c6d71b45;
		}
		_iter_end_1c6d71b45:;
	};
}



inline void _1dda2a298_checkEnums(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6d72bbd:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _68821_file = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _68821_file);
				_1dda3304d_checkEnumDecls(_self_);
			}
			_iter_next_1c6d72bbd:;
			++it;
			goto _iter_begin_1c6d72bbd;
		}
		_iter_end_1c6d72bbd:;
	};
}



inline _1ddac3c48_typeChecker _1dda2a6e9_typeChecker(jule::Ptr<_1dda1da83_Sema> _self_, jule::Trait<_1ddad134e_Lookup> _69435_l, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _69450_generics, jule::Ptr<_1ddac2d68_referencer> _69513_referencer) {
	_1ddac3c48_typeChecker _69617_tc = _1ddac3c48_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6d7465e:;
			{
				jule::Ptr<_1dd9edc94_scopeChecker> _70521_hard = _1dda0214e_getHardRoot(_69435_l.cast_ptr<_1dd9edc94_scopeChecker>(0));;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1c6d74571:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type68) {
				_case_begin_1c6d75ab1:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68);
				}
			}
			_match_end_1c6d75a5b:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2abe4_buildTypeWithRefers(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090b9157_TypeDecl>& _72144_t, jule::Trait<_1ddad134e_Lookup> _72167_l, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _72213_generics, jule::Ptr<_1ddac2d68_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1dda2a6e9_typeChecker(_self_, _72167_l,_72213_generics,_72241_referencer); _1ddacaeb4_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1dda2b1de_checkTypeWithRefers(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab97aa_TypeSymbol>& _72844_t, jule::Trait<_1ddad134e_Lookup> _72864_l, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _72913_generics, jule::Ptr<_1ddac2d68_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ddab9b62_checked(_72844_t.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_72844_t.get()._field_Kind=_1dda2abe4_buildTypeWithRefers(_self_, _72844_t.get()._field_Decl,_72864_l,_72913_generics,_72941_referencer);
	__jule_func_result = _1ddab9b62_checked(_72844_t.ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1dd9e0291_constraintChecker> _1dda2b453_constraintChecker(jule::Ptr<_1dda1da83_Sema> _self_) {
	return jule::new_ptr<_1dd9e0291_constraintChecker>(_1dd9e0291_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1dda2b80a_checkType(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab97aa_TypeSymbol>& _74334_t, jule::Trait<_1ddad134e_Lookup> _74354_l) {
	return _1dda2b1de_checkTypeWithRefers(_self_, _74334_t,_74354_l,nullptr,nullptr);;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2bc5b_buildTypeWithGenerics(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090b9157_TypeDecl>& _74946_t, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _75013_generics, jule::Ptr<_1dd9cd23a_ReferenceStack> _75041_refers) {
	jule::Ptr<_1ddac3c48_typeChecker> _75117_tc = jule::new_ptr<_1ddac3c48_typeChecker>(_1ddac3c48_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1ddacaeb4_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2c069_buildType(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090b9157_TypeDecl>& _76234_t) {
	return _1dda2bc5b_buildTypeWithGenerics(_self_, _76234_t,nullptr,nullptr);;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2c377_selectType(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090b9157_TypeDecl>& _76735_t) {
	jule::Ptr<_1ddac3c48_typeChecker> _76817_tc = jule::new_ptr<_1ddac3c48_typeChecker>(_1ddac3c48_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1ddacaeb4_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1dda8aeb8_Eval> _1dda2c7c8_evalpd(jule::Ptr<_1dda1da83_Sema> _self_, jule::Trait<_1ddad134e_Lookup> _77930_l, jule::Ptr<_1ddab53cc_TypeKind> _77945_p, jule::Ptr<_1dda418db_Var> _77963_owner) {
	jule::Ptr<_1dda8aeb8_Eval> _78017_e = jule::new_ptr<_1dda8aeb8_Eval>(_1dda8aeb8_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6d7dcea:;
			{
				_78017_e.get()._field_unsafety=_1dda0125d_isUnsafe(_77930_l.cast_ptr<_1dd9edc94_scopeChecker>(0));
			}
		}
		_match_end_1c6d7dc84:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1dda8aeb8_Eval> _1dda2cb80_evalp(jule::Ptr<_1dda1da83_Sema> _self_, jule::Trait<_1ddad134e_Lookup> _79429_l, jule::Ptr<_1ddab53cc_TypeKind> _79444_p) {
	return _1dda2c7c8_evalpd(_self_, _79429_l,_79444_p,nullptr);;
}



inline jule::Ptr<_1dda8aeb8_Eval> _1dda2ce8d_eval(jule::Ptr<_1dda1da83_Sema> _self_, jule::Trait<_1ddad134e_Lookup> _79928_l) {
	return _1dda2cb80_evalp(_self_, _79928_l,nullptr);;
}



inline jule::Bool _1dda2d488_checkAssignType(jule::Ptr<_1dda1da83_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1ddab53cc_TypeKind>& _80357_dest, jule::Ptr<_1dda8944a_Data>& _80414_d, jule::Ptr<_222e62217_Token> _80428_errorToken) {
	if (_80414_d.get()._field_Decl) {
		_1dda21745_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1ddab5ad6_Equal(_80357_dest, _80414_d.get()._field_Kind)))) {
			_1dda21745_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_80357_dest.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_80414_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return false;;
		};
	} else {
		jule::Ptr<_1dda74d3c_assignTypeChecker> _81521_atc = jule::new_ptr<_1dda74d3c_assignTypeChecker>(_1dda74d3c_assignTypeChecker{._field_s=_self_, ._field_dest=_80357_dest, ._field_d=_80414_d, ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1dda75eb4_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1dda89d0d_IsConst(_80414_d.ptr()))) || (_1ddab7764_Prim(_80357_dest.ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1ddab7764_Prim(_80357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1dd9abdea_IsSigInt(_83117_kind)) {
			_case_begin_1c6d85461:;
			{
				_1dd9b0cab_SetI64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1dd9ac1d6_IsUnsigInt(_83117_kind)) {
			_case_begin_1c6d854d8:;
			{
				_1dd9b1031_SetU64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1dd9ac79c_IsFloat(_83117_kind)) {
			_case_begin_1c6d85560:;
			{
				_1dd9b17a1_SetF64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1dd9b0a36_AsF64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1c6d85395:;
	};
	return true;;
}



inline jule::Bool _1dda2d8d9_checkTypeCompatibility(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab53cc_TypeKind>& _84547_dest, jule::Ptr<_1ddab53cc_TypeKind>& _84614_src, jule::Ptr<_222e62217_Token>& _84635_errorToken) {
	if ((_84614_src == nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_84614_src.ptr()), &__jule_any_type6)}));
		return false;;
	};
	if ((_1ddab9403_Tup(_84614_src.ptr()) != nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_84614_src.ptr()), &__jule_any_type6)}));
		return false;;
	};
	_1dda73214_typeCompatibilityChecker _86017_tcc = _1dda73214_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84547_dest, ._field_src=_84614_src, ._field_errorToken=_84635_errorToken};;
	if (_1dda747ed_check(&_86017_tcc)) {
		return true;;
	};
	_1dda21745_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_84547_dest.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_84614_src.ptr()), &__jule_any_type6)}));
	return false;;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda2dd5c_buildNonGenericTypeKind(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090b9157_TypeDecl>& _88148_ast, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>& _88214_generics, jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>& _88250_ignored) {
	jule::Ptr<_1ddac3c48_typeChecker> _88317_tc = jule::new_ptr<_1ddac3c48_typeChecker>(_1ddac3c48_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_ignoreGenerics=_88214_generics, ._field_ignoredGenerics=(&(_88250_ignored)), });;
	return _1ddacaeb4_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1dda2e247_buildFnNonGenericTypeKinds(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _89351_f, jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>& _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _89517_generics = nullptr;;
	if (_1dd9c7ce5_IsMethod(_89351_f.get()._field_Decl.ptr())) {
		_89517_generics=jule::append(_89351_f.get()._field_Decl.get()._field_Generics,_89351_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=_89351_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _89351_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c6d8dac9:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> _90221_p = *it;
			{
				if ((!(_1dd9c640e_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1dda2dd5c_buildNonGenericTypeKind(_self_, _90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1c6d8dac9:;
			++it;
			goto _iter_begin_1c6d8dac9;
		}
		_iter_end_1c6d8dac9:;
	};
	if ((!(_1dd9c7a81_IsVoid(_89351_f.get()._field_Decl.ptr())))) {
		_89351_f.get()._field_Result=_1dda2dd5c_buildNonGenericTypeKind(_self_, _89351_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
		__jule_func_result=(__jule_func_result && (_89351_f.get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda2e566_getTraitCheckFnKind(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _91544_f) {
	if ((_91544_f.get()._field_Instances.len() == 1LL)) {
		return _91544_f.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _91917_ins = _1dd9c8a0a_instanceForce(_91544_f);;
	jule::Ptr<_1ddac3c48_typeChecker> _92117_tc = jule::new_ptr<_1ddac3c48_typeChecker>(_1ddac3c48_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1ddad134e_Lookup>(_self_, 3), });;
	{
		auto &expr = _91917_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c6d92407:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> _92621_p = *it;
			{
				if ((!(_1dd9c640e_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1ddacaeb4_checkDecl(_92117_tc.ptr(), _92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1c6d92407:;
			++it;
			goto _iter_begin_1c6d92407;
		}
		_iter_end_1c6d92407:;
	};
	if ((!(_1dd9c7a81_IsVoid(_91544_f.ptr())))) {
		_91917_ins.get()._field_Result=_1ddacaeb4_checkDecl(_92117_tc.ptr(), _91544_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91917_ins;;
}



inline jule::Bool _1dda2e9b7_checkConstraintsFn(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _93843_f, jule::Ptr<_222e62217_Token>& _93859_et, jule::Ptr<_1dd9ca2c0_FnIns> _93875_exist) {
	jule::Ptr<_1dd9e0291_constraintChecker> _93917_cc = _1dda2b453_constraintChecker(_self_);;
	_93917_cc.get()._field_et=_93859_et;
	_93917_cc.get()._field_fi=_93843_f;
	if ((_93875_exist != nullptr)) {
		{
			auto &expr = _93875_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c6d97088:;
			if (it != expr.end()) {
				jule::I64 _94318_i = it - expr.begin();
				jule::Ptr<_1ddab3ba0_InsGeneric> _94325_g = *it;
				{
					_93843_f.get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1c6d97088:;
				++it;
				_94318_i++;
				goto _iter_begin_1c6d97088;
			}
			_iter_end_1c6d97088:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1dd9e1171_check(_93917_cc);;
}



inline jule::Bool _1dda2ee18_checkConstraintsStruct(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _95247_s, jule::Ptr<_222e62217_Token>& _95267_et, jule::Ptr<_2090d5c23_StructIns> _95283_exist) {
	jule::Ptr<_1dd9e0291_constraintChecker> _95317_cc = _1dda2b453_constraintChecker(_self_);;
	_95317_cc.get()._field_et=_95267_et;
	_95317_cc.get()._field_si=_95247_s;
	if ((_95283_exist != nullptr)) {
		{
			auto &expr = _95283_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c6d99a91:;
			if (it != expr.end()) {
				jule::I64 _95718_i = it - expr.begin();
				jule::Ptr<_1ddab3ba0_InsGeneric> _95725_g = *it;
				{
					_95247_s.get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1c6d99a91:;
				++it;
				_95718_i++;
				goto _iter_begin_1c6d99a91;
			}
			_iter_end_1c6d99a91:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1dd9e1171_check(_95317_cc);;
}



inline jule::Bool _1dda302c0_fnEnvironment(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)> _96949_algo) {
	jule::Ptr<_1dda1da83_Sema> _97017_sema = _96938_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1dda84621_SymbolTable> _97117_old = _96938_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1dda2137c_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1dda84621_SymbolTable> _97317_file = _1dda1d18c_findFile(_96938_f.get()._field_Decl.get()._field_sema.get()._field_files,_96938_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_97317_file != nullptr)) {
		_1dda2137c_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = _96938_f.get()._field_Generics.len();;
	if (((_96938_f.get()._field_Decl != nullptr) && (_96938_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=_96938_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>::alloc(0LL, _97817_size);;
	_1dda1cd3a_appendGenericTypeAliases(_98317_generics,_96938_f);
	jule::Bool _98613_ok = _96949_algo(_97017_sema,_98317_generics);;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1dda30545_checkFnParamKind(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c9401_ParamIns>& _99641_p) {
	_99641_p.get()._field_Kind.get()._field_Variadic=_99641_p.get()._field_Decl.get()._field_Variadic;
	if ((_99641_p.get()._field_Decl.get()._field_Reference && (!(_1ddacccc9_isValidForRef(_99641_p.get()._field_Kind))))) {
		_1dda21745_pushErr(_self_.ptr(), _99641_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_99641_p.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline jule::Bool _1dda30853_reloadFnInsTypes(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _100340_f) {
	if ((_1dd9cb656_IsBuiltin(_100340_f.ptr()) || _1dd9cb8ba_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1dda302c0_fnEnvironment(_self_, _100340_f,jule::Fn<jule::Bool(jule::Ptr<_1dda1da83_Sema>&,jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>&)>([=](jule::Ptr<_1dda1da83_Sema>& _100743_sema, jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>& _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto &expr = _100340_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1c6da5c9a:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c9401_ParamIns> _100925_p = *it;
				{
					if (_1dd9c640e_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1dd9c6673_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabd8ad_Sptr>(_1ddabd8ad_Sptr{._field_Elem=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1dda2bc5b_buildTypeWithGenerics(_100743_sema, _100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1dda30545_checkFnParamKind(_self_, _100925_p);
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1c6da5c9a:;
				++it;
				goto _iter_begin_1c6da5c9a;
			}
			_iter_end_1c6da5c9a:;
		};
		if ((!(_1dd9c7a81_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1dda2bc5b_buildTypeWithGenerics(_100743_sema, _100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1dda30cc6_checkRefValidityForInitExpr(jule::Ptr<_1dda1da83_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1dda8944a_Data>& _103967_d, jule::Ptr<_222e62217_Token>& _103982_errorToken) {
	{
		auto &_match_expr{ _103967_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c6dab432:;
			{
				goto _match_end_1c6da5195;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c6dab498:;
			{
				jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> _104421_model = _103967_d.get()._field_Model.cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1dda1bc4b_isValidModelForRef(_104421_model.get()._field_Expr)))) {
					_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type6)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c6dab289:;
			{
				jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _105021_model = _103967_d.get()._field_Model.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72);;
				if ((!(_1dda1bc4b_isValidModelForRef(_105021_model.get()._field_Expr.get()._field_Model)))) {
					_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73 || _match_expr.type == &__jule_any_type74) {
			_case_begin_1c6dab300:;
			{
				_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c6daa992:;
			{
				jule::Ptr<_1dd9b96dd_UnaryExprModel> _106021_unary = _103967_d.get()._field_Model.cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1dda1bc4b_isValidModelForRef(_103967_d.get()._field_Model)))) {
						_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type6)}));
						return false;;
					};
					goto _match_end_1c6da5195;
				};
				goto _case_begin_1c6daa909;
			}
		}
		else {
			_case_begin_1c6daa909:;
			{
				_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c6da5195:;
	};
	if ((_103947_leftMut && (!(_103967_d.get()._field_Mutable)))) {
		_1dda21745_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1dda3139d_checkValidityForInitExpr(jule::Ptr<_1dda1da83_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1ddab53cc_TypeKind>& _108110_leftKind, jule::Ptr<_1dda8944a_Data>& _108136_d, jule::Ptr<_222e62217_Token>& _108151_errorToken) {
	if (((_108044_leftMut && (!(_108136_d.get()._field_Mutable))) && _1ddab6a4e_Mutable(_108136_d.get()._field_Kind.ptr()))) {
		_1dda21745_pushErr(_self_.ptr(), _108151_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_108136_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1dda30cc6_checkRefValidityForInitExpr(_self_, _108044_leftMut,_108136_d,_108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1dda74d3c_assignTypeChecker> _109117_atc = jule::new_ptr<_1dda74d3c_assignTypeChecker>(_1dda74d3c_assignTypeChecker{._field_s=_self_, ._field_d=_108136_d, ._field_errorToken=_108151_errorToken});;
	return _1dda75513_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1dda31766_checkTypeAliasDeclKind(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab46d9_TypeAlias>& _109947_ta, jule::Trait<_1ddad134e_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dda84621_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1dda2137c_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if ((_109947_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1dda84621_SymbolTable> _110521_file = _1dda1d18c_findFile(_self_.get()._field_files,_109947_ta.get()._field_Token.get()._field_File);;
		if ((_110521_file != nullptr)) {
			_1dda2137c_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1dda2b1de_checkTypeWithRefers(_self_, _109947_ta.get()._field_Kind,_109967_l,nullptr,jule::new_ptr<_1ddac2d68_referencer>(_1ddac2d68_referencer{._field_ident=_109947_ta.get()._field_Ident, ._field_owner=jule::Any(_109947_ta, &__jule_any_type68), ._field_refs=(&(_109947_ta.get()._field_Refers))}));
	if (((__jule_func_result && (_1ddab8479_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1ddab8479_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1dda21745_pushErr(_self_.ptr(), _109947_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1dda31a85_checkTypeAliasDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab46d9_TypeAlias>& _112243_ta, jule::Trait<_1ddad134e_Lookup> _112263_l) {
	if (_222e649ab_IsIgnoreIdent(_112243_ta.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _112243_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1dda31766_checkTypeAliasDeclKind(_self_, _112243_ta,_112263_l);
}



inline void _1dda31d0a_checkTypeAliasDeclDup(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1ddab46d9_TypeAlias>& _113046_ta) {
	if (_222e649ab_IsIgnoreIdent(_113046_ta.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113046_ta)),_113046_ta.get()._field_Ident,_113046_ta.get()._field_CppLinked)) {
		_1dda21745_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113046_ta.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1dda31766_checkTypeAliasDeclKind(_self_, _113046_ta,jule::Trait<_1ddad134e_Lookup>(_self_, 3));
}



inline jule::Bool _1dda3206e_checkTypeAliasDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c6dbd158:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> _114321_ta = *it;
			{
				_1dda31d0a_checkTypeAliasDeclDup(_self_, _114321_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6dbd158:;
			++it;
			goto _iter_begin_1c6dbd158;
		}
		_iter_end_1c6dbd158:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c6dce059_checkEnumItemsDup(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1c6dd028b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dab71_EnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1c6dd028b;
				} else if (_222e649ab_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1dda21745_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1c6dd1028:;
						if (it != expr.end()) {
							jule::Ptr<_1dd9dab71_EnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1c6dd1028;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1dda21745_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type6)}));
									_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c6dd1028;
								};
							}
							_iter_next_1c6dd1028:;
							++it;
							goto _iter_begin_1c6dd1028;
						}
						_iter_end_1c6dd1028:;
					};
				};
			}
			_iter_next_1c6dd028b:;
			++it;
			goto _iter_begin_1c6dd028b;
		}
		_iter_end_1c6dd028b:;
	};
}

inline void _1c6dd94c6_checkEnumItemsDup(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1c6dda6b4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dc69a_TypeEnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1c6dda6b4;
				} else if (_222e649ab_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1dda21745_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1c6ddb451:;
						if (it != expr.end()) {
							jule::Ptr<_1dd9dc69a_TypeEnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1c6ddb451;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1dda21745_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type6)}));
									_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1c6ddb451;
								};
							}
							_iter_next_1c6ddb451:;
							++it;
							goto _iter_begin_1c6ddb451;
						}
						_iter_end_1c6ddb451:;
					};
				};
			}
			_iter_next_1c6dda6b4:;
			++it;
			goto _iter_begin_1c6dda6b4;
		}
		_iter_end_1c6dda6b4:;
	};
}



inline void _1dda32569_checkEnumItemsStr(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9db666_Enum>& _117442_e) {
	jule::Ptr<_1dda8aeb8_Eval> _117517_eval = _1dda2ce8d_eval(_self_, jule::Trait<_1ddad134e_Lookup>(_self_, 3));;
	{
		auto &expr = _117442_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c6dbebe8:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dab71_EnumItem> _117621_item = *it;
			{
				if (_1dd9db05b_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Data=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Constant=static__1dd9adca9_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type48);
				} else {
					jule::Ptr<_1dda8944a_Data> _118525_d = _1ddaa68da_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1c6dbebe8;
					};
					if ((!(_1dda89d0d_IsConst(_118525_d.ptr())))) {
						_1dda21745_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1dda2d488_checkAssignType(_self_, false,_117442_e.get()._field_Kind.get()._field_Kind,_118525_d,_117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1c6dbebe8:;
			++it;
			goto _iter_begin_1c6dbebe8;
		}
		_iter_end_1c6dbebe8:;
	};
}



inline void _1dda327de_checkEnumItemsInt(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9db666_Enum>& _120042_e) {
	jule::Ptr<_1ddaba129_Prim> _120113_prim = _1ddab7764_Prim(_120042_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_1dd9a709e_Max(_1ddaba48c_Str(_120113_prim.ptr())));;
	jule::Ptr<_1dda8aeb8_Eval> _120317_eval = _1dda2ce8d_eval(_self_, jule::Trait<_1ddad134e_Lookup>(_self_, 3));;
	{
		auto &expr = _120042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c6dc412b:;
		if (it != expr.end()) {
			jule::I64 _120414_i = it - expr.begin();
			jule::Ptr<_1dd9dab71_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_1dda21745_pushErr(_self_.ptr(), _120421_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_1dd9db05b_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Data=jule::new_ptr<_1dda8944a_Data>()});
					{
						
						if (_1dd9abdea_IsSigInt(_1ddaba48c_Str(_120113_prim.ptr()))) {
							_case_begin_1c6dc745e:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_1c6dc70eb:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1dd9ad76a_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_1c6dc7096:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type48);
				} else {
					jule::Ptr<_1dda8944a_Data> _122225_d = _1ddaa68da_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_1c6dc412b;
					};
					if ((!(_1dda89d0d_IsConst(_122225_d.ptr())))) {
						_1dda21745_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1dda2d488_checkAssignType(_self_, false,_120042_e.get()._field_Kind.get()._field_Kind,_122225_d,_120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_1c6dc412b:;
			++it;
			_120414_i++;
			goto _iter_begin_1c6dc412b;
		}
		_iter_end_1c6dc412b:;
	};
}



inline void _1dda32a64_checkEnumDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9db666_Enum>& _123538_e) {
	if (_222e649ab_IsIgnoreIdent(_123538_e.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123538_e)),_123538_e.get()._field_Ident,false)) {
		_1dda21745_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123538_e.get()._field_Items.len() == 0LL)) {
		_1dda21745_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type6)}));
	};
	_1c6dce059_checkEnumItemsDup(_self_.ptr(), _123538_e.get()._field_Items);
	if ((_123538_e.get()._field_Kind != nullptr)) {
		if ((!(_1dda2b80a_checkType(_self_, _123538_e.get()._field_Kind,jule::Trait<_1ddad134e_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_123538_e.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1ddaba129_Prim> _126217_t = _1ddab7764_Prim(_123538_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ddabd35d_IsStr(_126217_t.ptr())) {
			_case_begin_1c6dd52c4:;
			{
				_1dda32569_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_1dd9ac47d_IsInt(_1ddaba48c_Str(_126217_t.ptr()))) {
			_case_begin_1c6dd4ec7:;
			{
				_1dda327de_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_1c6dd445a:;
			{
				_1dda21745_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6dd4405:;
	};
}



inline void _1dda32cd9_checkTypeEnumDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9dcc61_TypeEnum>& _127942_e) {
	if (_222e649ab_IsIgnoreIdent(_127942_e.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127942_e)),_127942_e.get()._field_Ident,false)) {
		_1dda21745_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127942_e.get()._field_Items.len() == 0LL)) {
		_1dda21745_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type6)}));
		return;;
	};
	_1c6dd94c6_checkEnumItemsDup(_self_.ptr(), _127942_e.get()._field_Items);
	{
		auto &expr = _127942_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c6ddc92a:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dc69a_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_1dda21745_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1c6ddc92a;
				};
				jule::Bool _129817_ok = _1dda2b80a_checkType(_self_, _129321_item.get()._field_Kind,jule::Trait<_1ddad134e_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_1c6ddc92a;
				};
				jule::Ptr<_1ddaba129_Prim> _130217_p = _1ddab7764_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _1ddabd5c2_IsAny(_130217_p.ptr()))) {
					_1dda21745_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c6ddc92a:;
			++it;
			goto _iter_begin_1c6ddc92a;
		}
		_iter_end_1c6ddc92a:;
	};
	if ((_127942_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1dd9dc69a_TypeEnumItem> _130821_item = _127942_e.get()._field_Items[0LL];;
		_1ddab53cc_TypeKind _130917_tk = _1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_127942_e, 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _1ddab5ad6_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1ddab53cc_TypeKind>)((&(_130917_tk))))))) {
			_1dda21745_pushErr(_self_.ptr(), _130821_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1dd9dd091_Str(_127942_e.ptr()), &__jule_any_type6)}));
		};
	};
}



inline jule::Bool _1dda3304d_checkEnumDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c6de37cc:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9db666_Enum> _132021_e = *it;
			{
				_1dda32a64_checkEnumDecl(_self_, _132021_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6de37cc:;
			++it;
			goto _iter_begin_1c6de37cc;
		}
		_iter_end_1c6de37cc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda332b2_checkTypeEnumDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c6de3e2b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dcc61_TypeEnum> _133221_e = *it;
			{
				_1dda32cd9_checkTypeEnumDecl(_self_, _133221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6de3e2b:;
			++it;
			goto _iter_begin_1c6de3e2b;
		}
		_iter_end_1c6de3e2b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda335c0_checkDeclGenerics(_1dda1da83_Sema* _self_, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>& _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _134237_generics;
		auto it = expr.begin();
		_iter_begin_1c6de636d:;
		if (it != expr.end()) {
			jule::I64 _134413_i = it - expr.begin();
			jule::Ptr<_2090c6450_GenericDecl> &_134416_g = *it;
			{
				if (_222e649ab_IsIgnoreIdent(_134416_g.get()._field_Ident)) {
					_1dda21745_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c6de636d;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _134237_generics;
					auto it = expr.begin();
					_iter_begin_1c6de7391:;
					if (it != expr.end()) {
						jule::I64 _135317_j = it - expr.begin();
						jule::Ptr<_2090c6450_GenericDecl> &_135320_ct = *it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_1c6de8a02:;
									{
										goto _iter_end_1c6de7391;
									}
								}
								else if ((_134416_g.get()._field_Ident == _135320_ct.get()._field_Ident)) {
									_case_begin_1c6de8a79:;
									{
										_1dda21745_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134416_g.get()._field_Ident, &__jule_any_type6)}));
										_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c6de7391;
									}
								}
								_match_end_1c6de88e2:;
							};
						}
						_iter_next_1c6de7391:;
						++it;
						_135317_j++;
						goto _iter_begin_1c6de7391;
					}
					_iter_end_1c6de7391:;
				};
			}
			_iter_next_1c6de636d:;
			++it;
			_134413_i++;
			goto _iter_begin_1c6de636d;
		}
		_iter_end_1c6de636d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda338cd_checkFnDeclParamsDup(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9c761e_Fn>& _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto &expr = _136940_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c6dead78:;
		if (it != expr.end()) {
			jule::I64 _137213_i = it - expr.begin();
			jule::Ptr<_1dd9c5cd2_Param> &_137216_p = *it;
			{
				{
					auto &expr = _136940_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c6deba16:;
					if (it != expr.end()) {
						jule::Ptr<_2090c6450_GenericDecl> &_137420_g = *it;
						{
							if ((_137216_p.get()._field_Ident == _137420_g.get()._field_Ident)) {
								__jule_func_result=false;
								_1dda21745_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type6)}));
								_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1c6dead78;
							};
						}
						_iter_next_1c6deba16:;
						++it;
						goto _iter_begin_1c6deba16;
					}
					_iter_end_1c6deba16:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136940_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c6debe78:;
					if (it != expr.end()) {
						jule::I64 _138417_j = it - expr.begin();
						jule::Ptr<_1dd9c5cd2_Param> &_138420_jp = *it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_1c6dee1bc:;
									{
										goto _iter_end_1c6debe78;
									}
								}
								else if ((_222e64c53_IsAnonIdent(_137216_p.get()._field_Ident) || _222e64c53_IsAnonIdent(_138420_jp.get()._field_Ident))) {
									_case_begin_1c6dee244:;
									{
										goto _iter_end_1c6debe78;
									}
								}
								else if ((_137216_p.get()._field_Ident == _138420_jp.get()._field_Ident)) {
									_case_begin_1c6dee2bb:;
									{
										__jule_func_result=false;
										_1dda21745_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type6)}));
										_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1c6dead78;
									}
								}
								_match_end_1c6dee09b:;
							};
						}
						_iter_next_1c6debe78:;
						++it;
						_138417_j++;
						goto _iter_begin_1c6debe78;
					}
					_iter_end_1c6debe78:;
				};
			}
			_iter_next_1c6dead78:;
			++it;
			_137213_i++;
			goto _iter_begin_1c6dead78;
		}
		_iter_end_1c6dead78:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda33bdb_checkFnDeclResultDup(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9c761e_Fn>& _140340_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1dd9c7a81_IsVoid(_140340_f.ptr())) {
		return __jule_func_result;;
	};
	{
		auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c6e0207c:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> &_141016_v = *it;
			{
				if ((_222e649ab_IsIgnoreIdent(_141016_v.get()._field_Kind) || _222e64c53_IsAnonIdent(_141016_v.get()._field_Kind))) {
					goto _iter_next_1c6e0207c;
				};
				{
					auto &expr = _140340_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c6e03413:;
					if (it != expr.end()) {
						jule::Ptr<_2090c6450_GenericDecl> &_141520_g = *it;
						{
							if ((_141016_v.get()._field_Kind == _141520_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c6e03413:;
						++it;
						goto _iter_begin_1c6e03413;
					}
					_iter_end_1c6e03413:;
				};
				{
					auto &expr = _140340_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c6e04645:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c5cd2_Param> &_142120_p = *it;
						{
							if ((_141016_v.get()._field_Kind == _142120_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1c6e04645:;
						++it;
						goto _iter_begin_1c6e04645;
					}
					_iter_end_1c6e04645:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1c6e05844:;
					if (it != expr.end()) {
						jule::I64 _142917_j = it - expr.begin();
						jule::Ptr<_222e62217_Token> &_142920_jv = *it;
						{
							{
								
								if ((_142917_j >= _141013_i)) {
									_case_begin_1c6e065ae:;
									{
										goto _iter_end_1c6e05844;
									}
								}
								else if ((_142920_jv.get()._field_Kind == _141016_v.get()._field_Kind)) {
									_case_begin_1c6e06636:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1c6e0649e:;
							};
						}
						_iter_next_1c6e05844:;
						++it;
						_142917_j++;
						goto _iter_begin_1c6e05844;
					}
					_iter_end_1c6e05844:;
				};
				goto _iter_next_1c6e0207c;
				_julec_label_exist:;
				_1dda21745_pushErr(&(*_self_), _141016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_141016_v.get()._field_Kind, &__jule_any_type6)}));
				_1dda2699d_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c6e0207c:;
			++it;
			_141013_i++;
			goto _iter_begin_1c6e0207c;
		}
		_iter_end_1c6e0207c:;
	};
	return __jule_func_result;;
}



inline void _1dda33e61_checkFnDeclPrototype(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _145045_f) {
	if ((_145045_f.get()._field_Exceptional && _145045_f.get()._field_CppLinked)) {
		_1dda21745_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_145045_f.get()._field_Exceptional) {
		if (_1dd9c8059_IsEntryPoint(_145045_f.ptr())) {
			_1dda21745_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1dd9c82bd_IsInit(_145045_f.ptr())) {
			_1dda21745_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1dda335c0_checkDeclGenerics(_self_.ptr(), _145045_f.get()._field_Generics)))) {
			_case_begin_1c6e097c1:;
		}
		else if ((!(_1dda338cd_checkFnDeclParamsDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1c6e09848:;
		}
		else if ((!(_1dda33bdb_checkFnDeclResultDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1c6e0ab79:;
		}
		_match_end_1c6e0968e:;
	};
}



inline void _1dda341d6_checkTraitDeclMethod(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _147145_f) {
	if (_222e649ab_IsIgnoreIdent(_147145_f.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _147145_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_147145_f.get()._field_sema=_self_;
	_1dda33e61_checkFnDeclPrototype(_self_, _147145_f);
	jule::Ptr<_1dd9ca2c0_FnIns> _147817_ins = _1dd9c8c6e_instance(_147145_f);;
	_1dda30853_reloadFnInsTypes(_self_, _147817_ins);
	_147817_ins.get()._field_reloaded=true;
	_1dd9c9049_appendInstance(_147145_f.ptr(), _147817_ins);
}



inline void _1dda3445b_checkTraitDeclMethods(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9d9521_Trait>& _148446_t) {
	{
		auto &expr = _148446_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e0e166:;
		if (it != expr.end()) {
			jule::I64 _148514_i = it - expr.begin();
			jule::Ptr<_1dd9c761e_Fn> _148521_f = *it;
			{
				_1dda341d6_checkTraitDeclMethod(_self_, _148521_f);
				_148446_t.get()._field_Mutable=(_148446_t.get()._field_Mutable || _148521_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _148446_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c6e1119b:;
					if (it != expr.end()) {
						jule::I64 _149617_j = it - expr.begin();
						jule::Ptr<_1dd9c761e_Fn> _149620_jf = *it;
						{
							{
								
								if ((_149617_j >= _148514_i)) {
									_case_begin_1c6e11e38:;
									{
										goto _iter_end_1c6e1119b;
									}
								}
								else if ((_148521_f.get()._field_Ident == _149620_jf.get()._field_Ident)) {
									_case_begin_1c6e11eb0:;
									{
										_1dda21745_pushErr(_self_.ptr(), _148521_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148521_f.get()._field_Ident, &__jule_any_type6)}));
										_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1c6e1119b;
									}
								}
								_match_end_1c6e11d28:;
							};
						}
						_iter_next_1c6e1119b:;
						++it;
						_149617_j++;
						goto _iter_begin_1c6e1119b;
					}
					_iter_end_1c6e1119b:;
				};
			}
			_iter_next_1c6e0e166:;
			++it;
			_148514_i++;
			goto _iter_begin_1c6e0e166;
		}
		_iter_end_1c6e0e166:;
	};
}



inline void _1dda346d1_checkTraitDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9d9521_Trait>& _151539_t) {
	if (_222e649ab_IsIgnoreIdent(_151539_t.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151539_t)),_151539_t.get()._field_Ident,false)) {
		_1dda21745_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_151539_t.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1dda3445b_checkTraitDeclMethods(_self_, _151539_t);
}



inline jule::Bool _1dda34945_checkTraitDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c6e15dd7:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> _152821_t = *it;
			{
				_1dda346d1_checkTraitDecl(_self_, _152821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6e15dd7:;
			++it;
			goto _iter_begin_1c6e15dd7;
		}
		_iter_end_1c6e15dd7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda34cec_checkTraitImplMethods(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9d9521_Trait>& _153845_base, jule::Ptr<_1dd9e21c7_Impl>& _153860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _153860_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e178cd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> &_154016_f = *it;
			{
				if ((_1dd9da39b_FindMethod(_153845_base.ptr(), _154016_f.get()._field_Ident) == nullptr)) {
					_1dda21745_pushErr(&(*_self_), _154016_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153845_base.get()._field_Ident, &__jule_any_type6),jule::Any(_154016_f.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c6e178cd:;
			++it;
			goto _iter_begin_1c6e178cd;
		}
		_iter_end_1c6e178cd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda351a4_implToStruct(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _154937_dest, jule::Ptr<_1dd9e21c7_Impl>& _154957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _154957_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e19b99:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _155321_f = *it;
			{
				if (((_209099c81_FindMethod(_154937_dest.ptr(), _155321_f.get()._field_Ident,_155321_f.get()._field_Statically) != nullptr) || (_20909b5ac_FindField(_154937_dest.ptr(), _155321_f.get()._field_Ident) != nullptr))) {
					_1dda21745_pushErr(_self_.ptr(), _155321_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type6),jule::Any(_155321_f.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
					goto _iter_next_1c6e19b99;
				};
				if (((_154937_dest.get()._field_Generics.len() > 0LL) && (_155321_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _155321_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c6e1c262:;
						if (it != expr.end()) {
							jule::Ptr<_2090c6450_GenericDecl> _156124_fg = *it;
							{
								{
									auto &expr = _154937_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1c6e1ca59:;
									if (it != expr.end()) {
										jule::Ptr<_2090c6450_GenericDecl> _156228_dg = *it;
										{
											if ((_156124_fg.get()._field_Ident == _156228_dg.get()._field_Ident)) {
												_1dda21745_pushErr(_self_.ptr(), _156124_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c6e1ca59:;
										++it;
										goto _iter_begin_1c6e1ca59;
									}
									_iter_end_1c6e1ca59:;
								};
							}
							_iter_next_1c6e1c262:;
							++it;
							goto _iter_begin_1c6e1c262;
						}
						_iter_end_1c6e1c262:;
					};
				};
				_1dda274e8_checkDirectives(_self_, _155321_f.get()._field_Directives,jule::Any(_155321_f, &__jule_any_type66));
				_155321_f.get()._field_sema=_self_;
				_155321_f.get()._field_Owner=_154937_dest;
				_154937_dest.get()._field_Methods = jule::alloc_for_append(_154937_dest.get()._field_Methods,1);_154937_dest.get()._field_Methods.__push(_155321_f);;
			}
			_iter_next_1c6e19b99:;
			++it;
			goto _iter_begin_1c6e19b99;
		}
		_iter_end_1c6e19b99:;
	};
	{
		auto &expr = _154957_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c6e20287:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _157821_v = *it;
			{
				;
				if (((_209099c81_FindMethod(_154937_dest.ptr(), _157821_v.get()._field_Ident,true) != nullptr) || (_2090991d1_FindStatic(_154937_dest.ptr(), _157821_v.get()._field_Ident) != nullptr))) {
					_1dda21745_pushErr(_self_.ptr(), _157821_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type6),jule::Any(_157821_v.get()._field_Ident, &__jule_any_type6)}));
					__jule_func_result=false;
					goto _iter_next_1c6e20287;
				};
				_154937_dest.get()._field_Statics = jule::alloc_for_append(_154937_dest.get()._field_Statics,1);_154937_dest.get()._field_Statics.__push(_157821_v);;
			}
			_iter_next_1c6e20287:;
			++it;
			goto _iter_begin_1c6e20287;
		}
		_iter_end_1c6e20287:;
	};
	return __jule_func_result;;
}



inline void _1dda35429_implTrait(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9e21c7_Impl>& _159134_decl) {
	jule::Ptr<_1ddab53cc_TypeKind> _159217_base_t = _1dda2c377_selectType(_self_, _159134_decl.get()._field_Base);;
	if ((_159217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1dd9d9521_Trait> _159617_base = _1ddab8e2a_Trait(_159217_base_t.ptr());;
	if ((_159617_base == nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _159134_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_159217_base_t.ptr()), &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _160317_destT = _1dda2c377_selectType(_self_, _159134_decl.get()._field_Dest);;
	if ((_160317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2090d5c23_StructIns> _160717_destS = _1ddab8bb6_Struct(_160317_destT.ptr());;
	if ((_160717_destS == nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_160317_destT.ptr()), &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2090d5849_Struct> _161417_dest = _160717_destS.get()._field_Decl;;
	if ((_222e67e98_Dir(_161417_dest.get()._field_Token.get()._field_File.ptr()) != _222e67e98_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1dda21745_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_159617_base.get()._field_Implemented = jule::alloc_for_append(_159617_base.get()._field_Implemented,1);_159617_base.get()._field_Implemented.__push(_161417_dest);;
	_161417_dest.get()._field_Implements = jule::alloc_for_append(_161417_dest.get()._field_Implements,1);_161417_dest.get()._field_Implements.__push(_159617_base);;
	if ((_159134_decl.get()._field_Statics.len() > 0LL)) {
		_1dda21745_pushErr(_self_.ptr(), _159134_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1dda34cec_checkTraitImplMethods(_self_.ptr(), _159617_base,_159134_decl)))) {
			_case_begin_1c6e297be:;
			{
				return;;
			}
		}
		else if ((!(_1dda351a4_implToStruct(_self_, _161417_dest,_159134_decl)))) {
			_case_begin_1c6e29846:;
			{
				return;;
			}
		}
		_match_end_1c6e28c30:;
	};
}



inline void _1dda3569e_implStruct(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9e21c7_Impl>& _163635_decl) {
	jule::Ptr<_1ddab53cc_TypeKind> _163717_destT = _1dda2c377_selectType(_self_, _163635_decl.get()._field_Dest);;
	if ((_163717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_2090d5c23_StructIns> _164117_destS = _1ddab8bb6_Struct(_163717_destT.ptr());;
	if ((_164117_destS == nullptr)) {
		_1dda21745_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_163717_destT.ptr()), &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2090d5849_Struct> _164817_dest = _164117_destS.get()._field_Decl;;
	if ((_222e67e98_Dir(_164817_dest.get()._field_Token.get()._field_File.ptr()) != _222e67e98_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1dda21745_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1dda351a4_implToStruct(_self_, _164817_dest,_163635_decl)))) {
			_case_begin_1c6e2e120:;
			{
				return;;
			}
		}
		_match_end_1c6e2b86a:;
	};
}



inline void _1dda35924_implImpl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9e21c7_Impl>& _166133_decl) {
	{
		
		if (_1dd9e25c3_IsTraitImpl(_166133_decl.ptr())) {
			_case_begin_1c6e2ec25:;
			{
				_1dda35429_implTrait(_self_, _166133_decl);
			}
		}
		else if (_1dd9e2837_IsStructImpl(_166133_decl.ptr())) {
			_case_begin_1c6e2ec9c:;
			{
				_1dda3569e_implStruct(_self_, _166133_decl);
			}
		}
		_match_end_1c6e2eb15:;
	};
}



inline void _1dda35c43_checkVarDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dda418db_Var>& _167237_decl, jule::Trait<_1ddad134e_Lookup> _167253_l) {
	if (_222e649ab_IsIgnoreIdent(_167237_decl.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1dda42018_IsTypeInferred(_167237_decl.ptr())) {
		if ((!(_1dda41ca4_IsInitialized(_167237_decl.ptr())))) {
			_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1dda2b80a_checkType(_self_, _167237_decl.get()._field_Kind,_167253_l);
	};
	if ((_167237_decl.get()._field_Constant && _167237_decl.get()._field_Reference)) {
		_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1dda41ca4_IsInitialized(_167237_decl.ptr())))) {
		if (_167237_decl.get()._field_Constant) {
			_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Statically) {
			_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Reference) {
			_1dda21745_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1dda35eb8_checkGlobalVarDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dda418db_Var>& _170443_decl) {
	if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170443_decl)),_170443_decl.get()._field_Ident,_170443_decl.get()._field_CppLinked)) {
		_1dda21745_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_170443_decl.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_170443_decl.get()._field_CppLinked && _170443_decl.get()._field_Constant)) {
		_1dda21745_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_170443_decl.get()._field_CppLinked)) && (!(_170443_decl.get()._field_Constant))) && (!(_170443_decl.get()._field_Statically)))) {
		_1dda21745_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1dda274e8_checkDirectives(_self_, _170443_decl.get()._field_Directives,jule::Any(_170443_decl, &__jule_any_type9));
	_1dda35c43_checkVarDecl(_self_, _170443_decl,jule::Trait<_1ddad134e_Lookup>(_self_, 3));
}



inline jule::Bool _1dda3622c_checkGlobalDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c6e395d1:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _172221_decl = *it;
			{
				_1dda35eb8_checkGlobalVarDecl(_self_, _172221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6e395d1:;
			++it;
			goto _iter_begin_1c6e395d1;
		}
		_iter_end_1c6e395d1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda365d4_checkStructTraitImpl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _173245_strct, jule::Ptr<_1dd9d9521_Trait>& _173266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _173266_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e3ad74:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _173321_tf = *it;
			{
				jule::Bool _173421_exist = false;;
				jule::Ptr<_1dd9c761e_Fn> _173521_sf = _209099c81_FindMethod(_173245_strct.ptr(), _173321_tf.get()._field_Ident,_173321_tf.get()._field_Statically);;
				jule::Ptr<_1dd9ca2c0_FnIns> _173617_tfK = _1dda2e566_getTraitCheckFnKind(_self_, _173321_tf);;
				if ((_173521_sf != nullptr)) {
					jule::Ptr<_1dd9ca2c0_FnIns> _173825_sfK = _1dda2e566_getTraitCheckFnKind(_self_, _173521_sf);;
					_173421_exist=(((_173617_tfK.get()._field_Decl.get()._field_Public == _173825_sfK.get()._field_Decl.get()._field_Public) && (_173617_tfK.get()._field_Decl.get()._field_Ident == _173825_sfK.get()._field_Decl.get()._field_Ident)) && _1dd9cb17d_equalTrait(_173617_tfK, _173825_sfK));
				};
				if (_173421_exist) {
					jule::Ptr<_209085db0_Directive> _174421_d = _1ddaaea7a_findDirective(_173521_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_174421_d != nullptr)) {
						_1dda21745_pushErr(_self_.ptr(), _174421_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175125_s = _1dd9cbed6_GetKindStr(_173617_tfK.ptr(), true);;
					if (_173321_tf.get()._field_Public) {
						(_175125_s).buffer.insert(0, (jule::Str()));;
					};
					_1dda21745_pushErr(_self_.ptr(), _173245_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_173266_trt.get()._field_Ident, &__jule_any_type6),jule::Any(_175125_s, &__jule_any_type6)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1c6e3ad74:;
			++it;
			goto _iter_begin_1c6e3ad74;
		}
		_iter_end_1c6e3ad74:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda368e2_checkStructImpls(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _176241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _176241_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1c6e475cd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> _176421_trt = *it;
			{
				__jule_func_result=(_1dda365d4_checkStructTraitImpl(_self_, _176241_s,_176421_trt) && __jule_func_result);
			}
			_iter_next_1c6e475cd:;
			++it;
			goto _iter_begin_1c6e475cd;
		}
		_iter_end_1c6e475cd:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dda36c00_checkStructFields(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _177042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _177042_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6e48964:;
		if (it != expr.end()) {
			jule::Ptr<_2090a98a6_Field> _177221_f = *it;
			{
				_177221_f.get()._field_Owner=_177042_st;
				{
					auto &expr = _177042_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1c6e494e2:;
					if (it != expr.end()) {
						jule::Ptr<_2090a98a6_Field> _177420_cf = *it;
						{
							if ((_177221_f == _177420_cf)) {
								goto _iter_end_1c6e494e2;
							} else if ((_177221_f.get()._field_Ident == _177420_cf.get()._field_Ident)) {
								_1dda21745_pushErr(_self_.ptr(), _177221_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177221_f.get()._field_Ident, &__jule_any_type6)}));
								_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c6e494e2:;
						++it;
						goto _iter_begin_1c6e494e2;
					}
					_iter_end_1c6e494e2:;
				};
			}
			_iter_next_1c6e48964:;
			++it;
			goto _iter_begin_1c6e48964;
		}
		_iter_end_1c6e48964:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1dda36e75_checkStructDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _178740_s) {
	if (_222e649ab_IsIgnoreIdent(_178740_s.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178740_s)),_178740_s.get()._field_Ident,_178740_s.get()._field_CppLinked)) {
		_1dda21745_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178740_s.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1dda274e8_checkDirectives(_self_, _178740_s.get()._field_Directives,jule::Any(_178740_s, &__jule_any_type67));
	{
		
		if ((!(_1dda335c0_checkDeclGenerics(_self_.ptr(), _178740_s.get()._field_Generics)))) {
			_case_begin_1c6e4b3b2:;
		}
		else if ((!(_1dda36c00_checkStructFields(_self_, _178740_s)))) {
			_case_begin_1c6e4d2e8:;
		}
		else if ((!(_1dda368e2_checkStructImpls(_self_, _178740_s)))) {
			_case_begin_1c6e4d35e:;
		}
		_match_end_1c6e4d1d8:;
	};
}



inline jule::Bool _1dda371d9_checkStructDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c6e4e5d5:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _180621_s = *it;
			{
				_1dda36e75_checkStructDecl(_self_, _180621_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6e4e5d5:;
			++it;
			goto _iter_begin_1c6e4e5d5;
		}
		_iter_end_1c6e4e5d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dda3745e_checkFnDecl(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _181636_f) {
	if (_222e649ab_IsIgnoreIdent(_181636_f.get()._field_Ident)) {
		_1dda21745_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1dda274e8_checkDirectives(_self_, _181636_f.get()._field_Directives,jule::Any(_181636_f, &__jule_any_type66));
	_181636_f.get()._field_sema=_self_;
	_1dda33e61_checkFnDeclPrototype(_self_, _181636_f);
	if (_1dda271c9_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181636_f)),_181636_f.get()._field_Ident,_181636_f.get()._field_CppLinked)) {
		if ((_181636_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1dd9c761e_Fn> _182821_init = _1dda2037b_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182821_init != nullptr)) {
				return;;
			};
		};
		_1dda21745_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_181636_f.get()._field_Ident, &__jule_any_type6)}));
		_1dda2699d_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1dda376c3_checkFnDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c6e54530:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _184021_f = *it;
			{
				_1dda3745e_checkFnDecl(_self_, _184021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6e54530:;
			++it;
			goto _iter_begin_1c6e54530;
		}
		_iter_end_1c6e54530:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dda37a8b_pushCycleError(_1dda1da83_Sema* _self_, jule::Ptr<_2090d5849_Struct>& _185030_st1, jule::Ptr<_2090d5849_Struct>& _185045_st2, jule::Str& _185064_message) {
	;
	jule::Str _185213_refers_to = _222b39032_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_185030_st1.get()._field_Ident, &__jule_any_type6),jule::Any(_185045_st2.get()._field_Ident, &__jule_any_type6)}));;
	(_185064_message).buffer.insert(0, (((_222a844bb_Repeat(jule::Str(" ", 1),4LL) + _185213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1dda37edc_checkCrossCycle(_1dda1da83_Sema* _self_, jule::Ptr<_2090d5849_Struct>& _185631_st1, jule::Ptr<_2090d5849_Struct>& _185646_st2, jule::Str& _185665_message) {
	{
		auto &expr = _185646_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1c6e577ca:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> &_185716_u = *it;
			{
				if ((_185716_u == _185631_st1)) {
					_1dda37a8b_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
				if ((!(_1dda37edc_checkCrossCycle(&(*_self_), _185631_st1,_185716_u,_185665_message)))) {
					_1dda37a8b_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
			}
			_iter_next_1c6e577ca:;
			++it;
			goto _iter_begin_1c6e577ca;
		}
		_iter_end_1c6e577ca:;
	};
	return true;;
}



inline jule::Bool _1dda38460_checkStructDeriveIllegalCycles(_1dda1da83_Sema* _self_, jule::Str _187149_derive, jule::Ptr<_2090d5849_Struct>& _187163_st1, jule::Ptr<_1ddab53cc_TypeKind>& _187182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2090d5849_Struct> _187217_st2 = _1ddacd967_getStructFromKind(_187182_k);;
	if ((_187217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_187163_st1 == _187217_st2)) {
		_1dda21745_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type6),jule::Any(_187163_st1.get()._field_Ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188417_message = jule::Str();;
	if ((!(_1dda37edc_checkCrossCycle(&(*_self_), _187163_st1,_187217_st2,_188417_message)))) {
		jule::Str _188621_errMsg = _188417_message;;
		_188417_message=jule::Str();
		_1dda37a8b_pushCycleError(&(*_self_), _187163_st1,_187217_st2,_188417_message);
		_188621_errMsg+=_188417_message;
		_1dda21745_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type6),jule::Any(_188621_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda387a1_checkStructInsDeriveClone(_1dda1da83_Sema* _self_, jule::Ptr<_2090d5c23_StructIns> _189648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_20909e879_IsDerives(_189648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &expr = _189648_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6e5d14e:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5a36_FieldIns> _190021_f = *it;
			{
				if ((_190021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1c6e5d14e;
				};
				if ((!(_1ddab728b_SupportsCloning(_190021_f.get()._field_Kind.ptr())))) {
					_1dda21745_pushErr(&(*_self_), _189648_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_190021_f.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1dda38460_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_189648_st.get()._field_Decl,_190021_f.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6e5d14e:;
			++it;
			goto _iter_begin_1c6e5d14e;
		}
		_iter_end_1c6e5d14e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dda3898d_checkPackageDecls(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6e5ce95:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _191821_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _191821_f);
				if ((!(_1dda332b2_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1dda3206e_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c6e5ce95:;
			++it;
			goto _iter_begin_1c6e5ce95;
		}
		_iter_end_1c6e5ce95:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6e5b669:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _192821_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _192821_f);
				if ((!(_1dda34945_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c6e5b669:;
			++it;
			goto _iter_begin_1c6e5b669;
		}
		_iter_end_1c6e5b669:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6e62098:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _193521_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _193521_f);
				if ((!(_1dda3622c_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c6e62098:;
			++it;
			goto _iter_begin_1c6e62098;
		}
		_iter_end_1c6e62098:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6e62593:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _194221_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _194221_f);
				{
					
					if ((!(_1dda376c3_checkFnDecls(_self_)))) {
						_case_begin_1c6e6463e:;
					}
					else if ((!(_1dda371d9_checkStructDecls(_self_)))) {
						_case_begin_1c6e646a5:;
					}
					else {
						_case_begin_1c6e645c8:;
						{
							goto _iter_next_1c6e62593;
						}
					}
					_match_end_1c6e64562:;
				};
				return;;
			}
			_iter_next_1c6e62593:;
			++it;
			goto _iter_begin_1c6e62593;
		}
		_iter_end_1c6e62593:;
	};
}



inline void _1dda38cce_checkDataForTypeInference(_1dda1da83_Sema* _self_, jule::Ptr<_1dda8944a_Data>& _195445_d, jule::Ptr<_222e62217_Token>& _195456_err_token) {
	{
		
		if (_1dda89835_IsNil(_195445_d.ptr())) {
			_case_begin_1c6e655eb:;
			{
				_1dda21745_pushErr(&(*_self_), _195456_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1dda89a99_IsVoid(_195445_d.ptr())) {
			_case_begin_1c6e65673:;
			{
				_1dda21745_pushErr(&(*_self_), _195456_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_195445_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c6e656ea:;
			{
				_1dda21745_pushErr(&(*_self_), _195456_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c6e654ca:;
	};
}



inline void _1dda39065_checkVar(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dda418db_Var>& _196533_v) {
	if (_196533_v.get()._field_CppLinked) {
		return;;
	};
	if (_1dda42018_IsTypeInferred(_196533_v.ptr())) {
		_196533_v.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1dda38cce_checkDataForTypeInference(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1dda3139d_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1ddac14b5_Arr> _198221_arr = _1ddab8479_Arr(_196533_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198221_arr != nullptr)) {
			if (_198221_arr.get()._field_Auto) {
				jule::Ptr<_1ddac14b5_Arr> _198525_dataArr = _1ddab8479_Arr(_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198525_dataArr != nullptr)) {
					_198221_arr.get()._field_N=_198525_dataArr.get()._field_N;
				};
			};
		};
		if (_1dda2d488_checkAssignType(_self_, _196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1dda3139d_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_196533_v.get()._field_Reference && (!(_1ddacccc9_isValidForRef(_196533_v.get()._field_Kind.get()._field_Kind))))) {
		_1dda21745_pushErr(_self_.ptr(), _196533_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_196533_v.get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
	if (_196533_v.get()._field_Constant) {
		if ((!(_1dda89d0d_IsConst(_196533_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1dda21745_pushErr(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_196533_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1ddab9403_Tup(_196533_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_196533_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1dda39384_checkTypeVar(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dda418db_Var>& _202037_decl, jule::Trait<_1ddad134e_Lookup> _202053_l) {
	if ((_202037_decl.get()._field_CppLinked || (!(_1dda41ca4_IsInitialized(_202037_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1dda8aeb8_Eval> _202517_eval = nullptr;;
	if ((_202037_decl.get()._field_Kind != nullptr)) {
		_202517_eval=_1dda2c7c8_evalpd(_self_, _202053_l,_202037_decl.get()._field_Kind.get()._field_Kind,_202037_decl);
	} else {
		_202517_eval=_1dda2c7c8_evalpd(_self_, _202053_l,nullptr,_202037_decl);
	};
	_202517_eval.get()._field_immutable=(!(_202037_decl.get()._field_Mutable));
	_202037_decl.get()._field_Value.get()._field_Data=_1ddaa68da_evalExpr(_202517_eval, _202037_decl.get()._field_Value.get()._field_Expr);
	if ((_202037_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1dda39065_checkVar(_self_, _202037_decl);
}



inline void _1dda39560_checkGlobalTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c6e7474d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _204121_decl = *it;
			{
				if (((_1dda41ca4_IsInitialized(_204121_decl.ptr()) && (_204121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1dda42018_IsTypeInferred(_204121_decl.ptr()) && (_204121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1dda39384_checkTypeVar(_self_, _204121_decl,jule::Trait<_1ddad134e_Lookup>(_self_, 3));
				};
			}
			_iter_next_1c6e7474d:;
			++it;
			goto _iter_begin_1c6e7474d;
		}
		_iter_end_1c6e7474d:;
	};
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda39917_readyToCheckFn(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _205239_s, jule::Ptr<_1dd9c761e_Fn>& _205259_f) {
	jule::Ptr<_1dd9ca2c0_FnIns> _205317_ins = _1dd9c8c6e_instance(_205259_f);;
	if ((_205259_f.get()._field_Instances.len() != 0LL)) {
		return _205317_ins;;
	};
	_205317_ins.get()._field_Owner=_205239_s;
	_1dd9c9049_appendInstance(_205259_f.ptr(), _205317_ins);
	_205317_ins.get()._field_reloaded=true;
	if (_1dda30853_reloadFnInsTypes(_self_, _205317_ins)) {
		return _205317_ins;;
	};
	return nullptr;;
}



inline void _1dda39c36_checkTypeMethod(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _206640_s, jule::Ptr<_1dd9c761e_Fn>& _206660_f) {
	if ((_206660_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _207117_ins = _206660_f.get()._field_Instances[0LL];;
	if ((_207117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1dda3c40e_checkFnIns(_self_, _207117_ins);
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1dda3a187_checkStructInsOp(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _207941_s, jule::Ptr<_1dd9c761e_Fn>& _207961_f, jule::Fn<jule::Bool(jule::Ptr<_1dd9c761e_Fn>)> _207969_p) {
	if ((((_207961_f == nullptr) || (_207961_f.get()._field_Generics.len() > 0LL)) || (!(_207969_p(_207961_f))))) {
		return nullptr;;
	};
	return _207961_f.get()._field_Instances[0LL];;
}



inline jule::Bool _1dda3a53e_checkStructEnv(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _208939_s, jule::Ptr<_222e62217_Token> _208958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ddac3c48_typeChecker _209017_tc = _1ddac3c48_typeChecker{._field_s=_208939_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1ddad134e_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1ddad134e_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1ddac2d68_referencer>(_1ddac2d68_referencer{._field_ident=_208939_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208939_s.get()._field_Decl, &__jule_any_type67), }), ._field_refers=_208939_s.get()._field_Refers, };;
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		_209017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>::alloc(0LL, _208939_s.get()._field_Generics.len());
		{
			auto &expr = _208939_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c6e7dd1d:;
			if (it != expr.end()) {
				jule::I64 _210318_i = it - expr.begin();
				jule::Ptr<_1ddab3ba0_InsGeneric> _210325_g = *it;
				{
					jule::Ptr<_2090c6450_GenericDecl> _210425_decl = _208939_s.get()._field_Decl.get()._field_Generics[_210318_i];;
					_209017_tc._field_useGenerics = jule::alloc_for_append(_209017_tc._field_useGenerics,1);_209017_tc._field_useGenerics.__push(jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Token=_210425_decl.get()._field_Token, ._field_Ident=_210425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_210325_g.get()._field_Kind}), }));;
				}
				_iter_next_1c6e7dd1d:;
				++it;
				_210318_i++;
				goto _iter_begin_1c6e7dd1d;
			}
			_iter_end_1c6e7dd1d:;
		};
	};
	jule::Ptr<_1dda84621_SymbolTable> _211317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1dda2137c_setCurrentFile(_self_.ptr(), _211317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208939_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1dda84621_SymbolTable> _211721_file = _1dda1d18c_findFile(_self_.get()._field_files,_208939_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_211721_file != nullptr)) {
			_1dda2137c_setCurrentFile(_self_.ptr(), _211721_file);
		};
	};
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1dd9e0291_constraintChecker> _212421_cc = _1dda2b453_constraintChecker(_self_);;
		_212421_cc.get()._field_et=_208958_errorToken;
		_212421_cc.get()._field_si=_208939_s;
		_212421_cc.get()._field_genericsA=_209017_tc._field_useGenerics;
		_212421_cc.get()._field_uniq=true;
		if ((!(_1dd9e1171_check(_212421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if ((_208939_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _213721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208939_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1c6e85be3:;
			if (it != expr.end()) {
				jule::Ptr<_1dda418db_Var> _213925_v = *it;
				{
					_1dda35c43_checkVarDecl(_self_, _213925_v,jule::Trait<_1ddad134e_Lookup>(_self_, 3));
					_1dda39384_checkTypeVar(_self_, _213925_v,jule::Trait<_1ddad134e_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c6e85be3:;
				++it;
				goto _iter_begin_1c6e85be3;
			}
			_iter_end_1c6e85be3:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1dda8aeb8_Eval> _215017_eval = _1dda2ce8d_eval(_self_, jule::Trait<_1ddad134e_Lookup>(_self_, 3));;
	_208939_s.get()._field_Comparable=true;
	{
		auto &expr = _208939_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6e88a09:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5a36_FieldIns> _215221_f = *it;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _215321_kind = _1ddacaeb4_checkDecl(&_209017_tc, _215221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				__jule_func_result=((_215321_kind != nullptr) && __jule_func_result);
				if ((_215321_kind == nullptr)) {
					if (((_self_ != _208939_s.get()._field_Decl.get()._field_sema) && (_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1c6e88a09;
				};
				_215221_f.get()._field_Kind=_215321_kind;
				_208939_s.get()._field_Mutable=(_208939_s.get()._field_Mutable || ((!(_215221_f.get()._field_Decl.get()._field_Mutable)) && _1ddab6a4e_Mutable(_215221_f.get()._field_Kind.ptr())));
				_208939_s.get()._field_Comparable=(_208939_s.get()._field_Comparable && _1ddab67da_Comparable(_215221_f.get()._field_Kind.ptr()));
				_1dda387a1_checkStructInsDeriveClone(_self_.ptr(), _208939_s);
				if ((_215221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1c6e88a09;
				};
				_215017_eval.get()._field_prefix=_215221_f.get()._field_Kind;
				_215017_eval.get()._field_field=_215221_f;
				_215221_f.get()._field_Default=_1ddaa68da_evalExpr(_215017_eval, _215221_f.get()._field_Decl.get()._field_Default);
				if ((_215221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1c6e88a09;
				};
				;
				_1dda2d488_checkAssignType(_self_, false,_215221_f.get()._field_Kind,_215221_f.get()._field_Default,_215221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1c6e88a09:;
			++it;
			goto _iter_begin_1c6e88a09;
		}
		_iter_end_1c6e88a09:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1dda3a8e6_precheckStructIns(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _218742_s, jule::Ptr<_222e62217_Token> _218761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1dda3a53e_checkStructEnv(_self_, _218742_s,_218761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _218742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e90c42:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _219221_f = *it;
			{
				if ((_219221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1dda39917_readyToCheckFn(_self_, _218742_s,_219221_f) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c6e90c42:;
			++it;
			goto _iter_begin_1c6e90c42;
		}
		_iter_end_1c6e90c42:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1dda3ab6b_checkStructIns(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns>& _220239_s) {
	{
		auto &expr = _220239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e925d4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _220321_f = *it;
			{
				_1dda39c36_checkTypeMethod(_self_, _220239_s,_220321_f);
			}
			_iter_next_1c6e925d4:;
			++it;
			goto _iter_begin_1c6e925d4;
		}
		_iter_end_1c6e925d4:;
	};
}



inline void _1dda3ade1_checkTypeStruct(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _220840_s) {
	if (_220840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_220840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c6e93d33:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _222121_ins = *it;
			{
				_1dda3ab6b_checkStructIns(_self_, _222121_ins);
			}
			_iter_next_1c6e93d33:;
			++it;
			goto _iter_begin_1c6e93d33;
		}
		_iter_end_1c6e93d33:;
	};
}



inline void _1dda3b0bc_checkStructTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c6e9454d:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _222721_s = *it;
			{
				_1dda3ade1_checkTypeStruct(_self_, _222721_s);
			}
			_iter_next_1c6e9454d:;
			++it;
			goto _iter_begin_1c6e9454d;
		}
		_iter_end_1c6e9454d:;
	};
}



inline void _1dda3b364_checkStructInsOperators(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5c23_StructIns> _223247_s) {
	{
		auto &expr = _223247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6e958d4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _223321_m = *it;
			{
				{
					auto &_match_expr{ _223321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1c6e9664e:;
						{
							_223247_s.get()._field_Operators._field_Eq=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda4368a_Eq);
							_223247_s.get()._field_Comparable=(_223247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1c6e966b5:;
						{
							_223247_s.get()._field_Operators._field_Gt=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda43932_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1c6e9673c:;
						{
							_223247_s.get()._field_Operators._field_GtEq=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda43bc9_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1c6e967b4:;
						{
							_223247_s.get()._field_Operators._field_Lt=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda43e71_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1c6e9683b:;
						{
							_223247_s.get()._field_Operators._field_LtEq=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda44218_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1c6e968b3:;
						{
							_223247_s.get()._field_Operators._field_Shl=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda44801_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1c6e9693a:;
						{
							_223247_s.get()._field_Operators._field_Shr=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda44a98_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1c6e969b2:;
						{
							_223247_s.get()._field_Operators._field_Add=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda44d40_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1c6e96a39:;
						{
							_223247_s.get()._field_Operators._field_Sub=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda450d7_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1c6e96ab1:;
						{
							_223247_s.get()._field_Operators._field_Div=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda4537e_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1c6e96b38:;
						{
							_223247_s.get()._field_Operators._field_Mul=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda45626_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1c6e96bb0:;
						{
							_223247_s.get()._field_Operators._field_Mod=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda458bd_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1c6e96c37:;
						{
							_223247_s.get()._field_Operators._field_BitAnd=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda45b65_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1c6e96cae:;
						{
							_223247_s.get()._field_Operators._field_BitOr=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda45e0c_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1c6e96d36:;
						{
							_223247_s.get()._field_Operators._field_BitXor=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda461a4_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1c6e96dad:;
						{
							_223247_s.get()._field_Operators._field_Neg=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda4678c_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1c6e96e35:;
						{
							_223247_s.get()._field_Operators._field_Pos=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda46a34_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1c6e96eac:;
						{
							_223247_s.get()._field_Operators._field_BitNot=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda46ccb_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1c6e97034:;
						{
							_223247_s.get()._field_Operators._field_AddAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda473b4_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1c6e970ab:;
						{
							_223247_s.get()._field_Operators._field_SubAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda4765b_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1c6e97133:;
						{
							_223247_s.get()._field_Operators._field_DivAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda47903_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1c6e971aa:;
						{
							_223247_s.get()._field_Operators._field_MulAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda47b9a_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1c6e97232:;
						{
							_223247_s.get()._field_Operators._field_ModAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda47e42_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1c6e972a9:;
						{
							_223247_s.get()._field_Operators._field_ShlAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda481d9_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1c6e97331:;
						{
							_223247_s.get()._field_Operators._field_ShrAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda48481_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1c6e973a8:;
						{
							_223247_s.get()._field_Operators._field_BitOrAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda48728_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1c6e97430:;
						{
							_223247_s.get()._field_Operators._field_BitAndAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda489c0_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1c6e974a7:;
						{
							_223247_s.get()._field_Operators._field_BitXorAssign=_1dda3a187_checkStructInsOp(_self_, _223247_s,_223321_m,static__1dda48c67_BitXorAssign);
						}
					}
					_match_end_1c6e96231:;
				};
			}
			_iter_next_1c6e958d4:;
			++it;
			goto _iter_begin_1c6e958d4;
		}
		_iter_end_1c6e958d4:;
	};
}



inline void _1dda3b5ea_precheckStructType(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_2090d5849_Struct>& _229643_s) {
	if (_229643_s.get()._field_CppLinked) {
		return;;
	};
	if ((_229643_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_229643_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_2090d5c23_StructIns> _230721_ins = _209095dc0_instance(_229643_s);;
		_230721_ins.get()._field_Checked=true;
		_209096b29_appendInstance(_229643_s.ptr(), _230721_ins);
		_1dda3a8e6_precheckStructIns(_self_, _230721_ins,nullptr);
	};
	_1dda3b364_checkStructInsOperators(_self_, _229643_s.get()._field_Instances[0LL]);
}



inline void _1dda3b7c6_precheckStructTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c6eaa069:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _231721_s = *it;
			{
				_1dda3b5ea_precheckStructType(_self_, _231721_s);
			}
			_iter_next_1c6eaa069:;
			++it;
			goto _iter_begin_1c6eaa069;
		}
		_iter_end_1c6eaa069:;
	};
}



inline void _1dda3ba4b_checkRets(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _232233_f) {
	if (_1dd9c7a81_IsVoid(_232233_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1dda3dbe6_missingRetChecker _232613_mrc = static__1dda3e0ae_new();;
	jule::Bool _232713_ok = _1dda400c1_check(&_232613_mrc, _232233_f.get()._field_Scope);;
	if ((!(_232713_ok))) {
		_1dda21745_pushErr(&(*_self_), _232233_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1dda3bd6a_checkFnInsSc(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _233336_f, jule::Ptr<_1dd9edc94_scopeChecker>& _233352_sc) {
	_1dda1c7a7_appendRetVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1dda1ca60_appendParamVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1dda1cd3a_appendGenericTypeAliases(_233352_sc.get()._field_table.get()._field_TypeAliases,_233336_f);
	_1dda0da95_check(_233352_sc, _233336_f.get()._field_Decl.get()._field_Scope,_233336_f.get()._field_Scope);
	if ((!(_1dda01912_stopped(_233352_sc.ptr())))) {
		_1dda3ba4b_checkRets(&(*_self_), _233336_f);
	};
}



inline void _1dda3c189_checkFnInsCaller(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _234641_f, jule::Ptr<_222e62217_Token> _234656_caller) {
	if (_234641_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1dda84621_SymbolTable> _235117_old = _234641_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1dda2137c_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235117_old);
	});;
	jule::Ptr<_1dda84621_SymbolTable> _235317_file = _1dda1d18c_findFile(_234641_f.get()._field_Decl.get()._field_sema.get()._field_files,_234641_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_235317_file != nullptr)) {
		_1dda2137c_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235317_file);
	};
	jule::Ptr<_1dd9edc94_scopeChecker> _235817_sc = _1dd9e45e7_newScopeChecker(_234641_f.get()._field_Decl.get()._field_sema,_234641_f);;
	_235817_sc.get()._field_calledFrom=_234656_caller;
	_1dda3bd6a_checkFnInsSc(_self_.ptr(), _234641_f,_235817_sc);
	if ((_234641_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1dda3c40e_checkFnIns(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _236835_f) {
	_1dda3c189_checkFnInsCaller(_self_, _236835_f,nullptr);
}



inline void _1dda3c684_checkTypeFn(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _237236_f) {
	if (_237236_f.get()._field_CppLinked) {
		return;;
	};
	if ((_237236_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _237236_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1c6eb57e4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _238221_ins = *it;
			{
				_1dda3c40e_checkFnIns(_self_, _238221_ins);
			}
			_iter_next_1c6eb57e4:;
			++it;
			goto _iter_begin_1c6eb57e4;
		}
		_iter_end_1c6eb57e4:;
	};
}



inline void _1dda3c909_checkTestFn(_1dda1da83_Sema* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _238735_f) {
	if (_238735_f.get()._field_Decl.get()._field_Public) {
		_1dda21745_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_238735_f.get()._field_Params.len() != 1LL) || (_238735_f.get()._field_Result != nullptr))) {
		_1dda21745_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ddabd8ad_Sptr> _240017_sptr = _1ddab79c8_Sptr(_238735_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240017_sptr == nullptr)) {
		_1dda21745_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2090d5c23_StructIns> _240713_s = _1ddab8bb6_Struct(_240017_sptr.get()._field_Elem.ptr());;
	if (((_240713_s == nullptr) || (!(_1dda1ae6a_isStdPackage(_240713_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1dda21745_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1dda2699d_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1dda3cb7e_precheckTypeFn(jule::Ptr<_1dda1da83_Sema> _self_, jule::Ptr<_1dd9c761e_Fn>& _241539_f) {
	if (_241539_f.get()._field_CppLinked) {
		return;;
	};
	if ((_241539_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_241539_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1dd9ca2c0_FnIns> _242621_ins = _1dd9c8a0a_instanceForce(_241539_f);;
		_241539_f.get()._field_Instances = jule::alloc_for_append(_241539_f.get()._field_Instances,1);_241539_f.get()._field_Instances.__push(_242621_ins);;
		_1dda30853_reloadFnInsTypes(_self_, _242621_ins);
		_242621_ins.get()._field_reloaded=true;
		if (_1ddacc46b_hasDirective(_241539_f.get()._field_Directives,jule::Str("test", 4))) {
			_1dda3c909_checkTestFn(_self_.ptr(), _242621_ins);
		};
	};
}



inline void _1dda3cd5a_precheckFnTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c6ebed81:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> _243921_decl = *it;
			{
				{
					auto &expr = _243921_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1c6ec0711:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _244025_m = *it;
						{
							_1dda3cb7e_precheckTypeFn(_self_, _244025_m);
						}
						_iter_next_1c6ec0711:;
						++it;
						goto _iter_begin_1c6ec0711;
					}
					_iter_end_1c6ec0711:;
				};
			}
			_iter_next_1c6ebed81:;
			++it;
			goto _iter_begin_1c6ebed81;
		}
		_iter_end_1c6ebed81:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c6ec03d1:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _244421_decl = *it;
			{
				_1dda3cb7e_precheckTypeFn(_self_, _244421_decl);
			}
			_iter_next_1c6ec03d1:;
			++it;
			goto _iter_begin_1c6ec03d1;
		}
		_iter_end_1c6ec03d1:;
	};
}



inline void _1dda3d036_checkFnTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c6ec1c40:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _245121_decl = *it;
			{
				_1dda3c684_checkTypeFn(_self_, _245121_decl);
			}
			_iter_next_1c6ec1c40:;
			++it;
			goto _iter_begin_1c6ec1c40;
		}
		_iter_end_1c6ec1c40:;
	};
}



inline void _1dda3d212_checkPackageTypes(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6ec27bd:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _245921_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _245921_f);
				_1dda39560_checkGlobalTypes(_self_);
				_1dda3cd5a_precheckFnTypes(_self_);
				_1dda3b7c6_precheckStructTypes(_self_);
			}
			_iter_next_1c6ec27bd:;
			++it;
			goto _iter_begin_1c6ec27bd;
		}
		_iter_end_1c6ec27bd:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6ec40c7:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _247021_f = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _247021_f);
				_1dda3d036_checkFnTypes(_self_);
				_1dda3b0bc_checkStructTypes(_self_);
			}
			_iter_next_1c6ec40c7:;
			++it;
			goto _iter_begin_1c6ec40c7;
		}
		_iter_end_1c6ec40c7:;
	};
}



inline void _1dda3d3dd_setFileSemaFields(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c6ec5419:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _247821_f = *it;
			{
				_247821_f.get()._field_sema=_self_;
			}
			_iter_next_1c6ec5419:;
			++it;
			goto _iter_begin_1c6ec5419;
		}
		_iter_end_1c6ec5419:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c6ec5716:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _248121_st = *it;
			{
				_248121_st.get()._field_sema=_self_;
			}
			_iter_next_1c6ec5716:;
			++it;
			goto _iter_begin_1c6ec5716;
		}
		_iter_end_1c6ec5716:;
	};
}



inline void _1dda3d5b9_setSemaFields(jule::Ptr<_1dda1da83_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1c6ec6261:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _248721_file = *it;
			{
				_1dda2137c_setCurrentFile(_self_.ptr(), _248721_file);
				_1dda3d3dd_setFileSemaFields(_self_);
			}
			_iter_next_1c6ec6261:;
			++it;
			goto _iter_begin_1c6ec6261;
		}
		_iter_end_1c6ec6261:;
	};
}



inline void _1dda3d83e_check(jule::Ptr<_1dda1da83_Sema> _self_, jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _249330_files) {
	_self_.get()._field_files=_249330_files;
	_1dda29c15_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dda3d5b9_setSemaFields(_self_);
	_1dda2a298_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dda2a0bc_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dda3898d_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1dda3d212_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1dda1da83_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1dda3dbe6_missingRetChecker static__1dda3e0ae_new(void) {
	return _1dda3dbe6_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1dda3e389_checkConditional(_1dda3dbe6_missingRetChecker* _self_, jule::Ptr<_1dd9e7c8d_Conditional> _253635_c) {
	{
		auto &expr = _253635_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1c6ecac05:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9e762d_If> _253721_elif = *it;
			{
				if ((_253721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1dda3ecb3_checkScope(&(*_self_), _253721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c6ecac05:;
			++it;
			goto _iter_begin_1c6ecac05;
		}
		_iter_end_1c6ecac05:;
	};
	return ((_253635_c.get()._field_Default != nullptr) && _1dda3ecb3_checkScope(&(*_self_), _253635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1dda3e697_checkMatch(_1dda3dbe6_missingRetChecker* _self_, jule::Ptr<_1dd9eae7d_Match> _254829_m) {
	{
		auto &expr = _254829_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c6ecc8d8:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eb9c8_Case> _254921_c = *it;
			{
				if ((_254921_c == nullptr)) {
					return false;;
				};
				jule::I64 _255317_n = (*_self_)._field_breaked.len();;
				jule::Bool _255417_ok = _1dda3ecb3_checkScope(&(*_self_), _254921_c.get()._field_Scope);;
				{
					
					if ((_255317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1c6ece566:;
						{
							return false;;
						}
					}
					else if ((!(_255417_ok))) {
						_case_begin_1c6ece5dd:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;;
							};
							goto _case_begin_1c6ece665;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1c6ece665:;
						{
							(*_self_)._field_falled=false;
							if ((_254921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c6ecc8d8;
						}
					}
					_match_end_1c6ece4de:;
				};
			}
			_iter_next_1c6ecc8d8:;
			++it;
			goto _iter_begin_1c6ecc8d8;
		}
		_iter_end_1c6ecc8d8:;
	};
	return ((_254829_m.get()._field_Default != nullptr) && _1dda3ecb3_checkScope(&(*_self_), _254829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1dda3e9a5_checkInfIter(_1dda3dbe6_missingRetChecker* _self_, jule::Ptr<_1dd9e8079_InfIter> _257431_it) {
	jule::I64 _257513_n = (*_self_)._field_breaked.len();;
	if (_1dda3ecb3_checkScope(&(*_self_), _257431_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
		return true;;
	};
	if ((_257513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _258117_itaddr = static_cast<jule::Uintptr>(_257431_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_257513_n);
			auto it = expr.begin();
			_iter_begin_1c6ed349e:;
			if (it != expr.end()) {
				jule::Uintptr _258220_addr = *it;
				{
					if ((_258117_itaddr == _258220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
						return false;;
					};
				}
				_iter_next_1c6ed349e:;
				++it;
				goto _iter_begin_1c6ed349e;
			}
			_iter_end_1c6ed349e:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
	};
	return true;;
}



inline jule::Bool _1dda3ecb3_checkScope(_1dda3dbe6_missingRetChecker* _self_, jule::Ptr<_1dd9e7232_Scope> _259329_s) {
	if ((_259329_s == nullptr)) {
		return false;;
	};
	{
		auto &expr = _259329_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1c6ed4e1d:;
		if (it != expr.end()) {
			jule::Any _259721_st = *it;
			{
				{
					auto &_match_expr{ _259721_st };
					
					if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1c6ed5803:;
						{
							(*_self_)._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1c6ed589c:;
						{
							jule::Uintptr _260321_addr = _259721_st.cast_ptr<_1dd9e9685_BreakSt>(&__jule_any_type51).get()._field_It;;
							if ((_260321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_260321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1c6ed5913:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1c6ed5979:;
						{
							if (_1dda3e9a5_checkInfIter(&(*_self_), _259721_st.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type52) {
						_case_begin_1c6ed59e0:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c6ed5a56:;
						{
							if (_1dda3ecb3_checkScope(&(*_self_), _259721_st.cast_ptr<_1dd9e7232_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1c6ed5acd:;
						{
							{
								auto &_match_expr{ _259721_st.cast_ptr<_1dda8944a_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1c6ed9571:;
									{
										return true;;
									}
								}
								_match_end_1c6ed92b8:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1c6ed5b55:;
						{
							if (_1dda3e389_checkConditional(&(*_self_), _259721_st.cast_ptr<_1dd9e7c8d_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1c6ed5bcc:;
						{
							if (_1dda3e697_checkMatch(&(*_self_), _259721_st.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49))) {
								return true;;
							};
						}
					}
					_match_end_1c6ed565a:;
				};
			}
			_iter_next_1c6ed4e1d:;
			++it;
			goto _iter_begin_1c6ed4e1d;
		}
		_iter_end_1c6ed4e1d:;
	};
	return false;;
}



inline jule::Bool _1dda400c1_check(_1dda3dbe6_missingRetChecker* _self_, jule::Ptr<_1dd9e7232_Scope> _263924_s) {
	return _1dda3ecb3_checkScope(&(*_self_), _263924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda3dbe6_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda408a7_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dda41ca4_IsInitialized(_1dda418db_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);;
}



inline jule::Bool _1dda42018_IsTypeInferred(_1dda418db_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1dda4227c_untypedConstant(_1dda418db_Var* _self_) {
	return (_1dda42018_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda418db_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1dda42d0a_Dispose(jule::Ptr<_1dd9c761e_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1dd9c7a81_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1dd9c6673_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1dda430a2_Str(jule::Ptr<_1dd9c761e_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1dd9c7a81_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1dd9c6673_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1ddaba129_Prim> _3913_prim = _1ddab7764_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1ddabd35d_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1dda433e3_logical(jule::Ptr<_1dd9c761e_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1dd9c7a81_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1dd9c6673_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1ddaba129_Prim> _6413_prim = _1ddab7764_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1ddabd0e9_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1ddab8bb6_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1dda4368a_Eq(jule::Ptr<_1dd9c761e_Fn> _7218_f) {
	return static__1dda433e3_logical(_7218_f,jule::Str("Eq", 2));;
}



inline jule::Bool static__1dda43932_Gt(jule::Ptr<_1dd9c761e_Fn> _7718_f) {
	return static__1dda433e3_logical(_7718_f,jule::Str("Gt", 2));;
}



inline jule::Bool static__1dda43bc9_GtEq(jule::Ptr<_1dd9c761e_Fn> _8220_f) {
	return static__1dda433e3_logical(_8220_f,jule::Str("GtEq", 4));;
}



inline jule::Bool static__1dda43e71_Lt(jule::Ptr<_1dd9c761e_Fn> _8718_f) {
	return static__1dda433e3_logical(_8718_f,jule::Str("Lt", 2));;
}



inline jule::Bool static__1dda44218_LtEq(jule::Ptr<_1dd9c761e_Fn> _9220_f) {
	return static__1dda433e3_logical(_9220_f,jule::Str("LtEq", 4));;
}



inline jule::Bool static__1dda44559_result(jule::Ptr<_1dd9c761e_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1dd9c7a81_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1dd9c6673_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1ddab8bb6_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1dda44801_Shl(jule::Ptr<_1dd9c761e_Fn> _11819_f) {
	return static__1dda44559_result(_11819_f,jule::Str("Shl", 3));;
}



inline jule::Bool static__1dda44a98_Shr(jule::Ptr<_1dd9c761e_Fn> _12319_f) {
	return static__1dda44559_result(_12319_f,jule::Str("Shr", 3));;
}



inline jule::Bool static__1dda44d40_Add(jule::Ptr<_1dd9c761e_Fn> _12819_f) {
	return static__1dda44559_result(_12819_f,jule::Str("Add", 3));;
}



inline jule::Bool static__1dda450d7_Sub(jule::Ptr<_1dd9c761e_Fn> _13319_f) {
	return static__1dda44559_result(_13319_f,jule::Str("Sub", 3));;
}



inline jule::Bool static__1dda4537e_Div(jule::Ptr<_1dd9c761e_Fn> _13819_f) {
	return static__1dda44559_result(_13819_f,jule::Str("Div", 3));;
}



inline jule::Bool static__1dda45626_Mul(jule::Ptr<_1dd9c761e_Fn> _14319_f) {
	return static__1dda44559_result(_14319_f,jule::Str("Mul", 3));;
}



inline jule::Bool static__1dda458bd_Mod(jule::Ptr<_1dd9c761e_Fn> _14819_f) {
	return static__1dda44559_result(_14819_f,jule::Str("Mod", 3));;
}



inline jule::Bool static__1dda45b65_BitAnd(jule::Ptr<_1dd9c761e_Fn> _15322_f) {
	return static__1dda44559_result(_15322_f,jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1dda45e0c_BitOr(jule::Ptr<_1dd9c761e_Fn> _15821_f) {
	return static__1dda44559_result(_15821_f,jule::Str("BitOr", 5));;
}



inline jule::Bool static__1dda461a4_BitXor(jule::Ptr<_1dd9c761e_Fn> _16322_f) {
	return static__1dda44559_result(_16322_f,jule::Str("BitXor", 6));;
}



inline jule::Bool static__1dda464e5_unary(jule::Ptr<_1dd9c761e_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1dd9c7a81_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1dd9c6673_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1ddab8bb6_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1dda4678c_Neg(jule::Ptr<_1dd9c761e_Fn> _18719_f) {
	return static__1dda464e5_unary(_18719_f,jule::Str("Neg", 3));;
}



inline jule::Bool static__1dda46a34_Pos(jule::Ptr<_1dd9c761e_Fn> _19219_f) {
	return static__1dda464e5_unary(_19219_f,jule::Str("Pos", 3));;
}



inline jule::Bool static__1dda46ccb_BitNot(jule::Ptr<_1dd9c761e_Fn> _19722_f) {
	return static__1dda464e5_unary(_19722_f,jule::Str("BitNot", 6));;
}



inline jule::Bool static__1dda4711c_assign(jule::Ptr<_1dd9c761e_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1dd9c7a81_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1dd9c6673_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1dda473b4_AddAssign(jule::Ptr<_1dd9c761e_Fn> _22125_f) {
	return static__1dda4711c_assign(_22125_f,jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1dda4765b_SubAssign(jule::Ptr<_1dd9c761e_Fn> _22625_f) {
	return static__1dda4711c_assign(_22625_f,jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1dda47903_DivAssign(jule::Ptr<_1dd9c761e_Fn> _23125_f) {
	return static__1dda4711c_assign(_23125_f,jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1dda47b9a_MulAssign(jule::Ptr<_1dd9c761e_Fn> _23625_f) {
	return static__1dda4711c_assign(_23625_f,jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1dda47e42_ModAssign(jule::Ptr<_1dd9c761e_Fn> _24125_f) {
	return static__1dda4711c_assign(_24125_f,jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1dda481d9_ShlAssign(jule::Ptr<_1dd9c761e_Fn> _24625_f) {
	return static__1dda4711c_assign(_24625_f,jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1dda48481_ShrAssign(jule::Ptr<_1dd9c761e_Fn> _25125_f) {
	return static__1dda4711c_assign(_25125_f,jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1dda48728_BitOrAssign(jule::Ptr<_1dd9c761e_Fn> _25627_f) {
	return static__1dda4711c_assign(_25627_f,jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1dda489c0_BitAndAssign(jule::Ptr<_1dd9c761e_Fn> _26128_f) {
	return static__1dda4711c_assign(_26128_f,jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1dda48c67_BitXorAssign(jule::Ptr<_1dd9c761e_Fn> _26628_f) {
	return static__1dda4711c_assign(_26628_f,jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda42689_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1dda73731_pushErr(_1dda73214_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1dda21745_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,_11739_args);
}



inline jule::Bool _1dda73995_checkTrait(_1dda73214_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ddab6312_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dd9d9521_Trait> _12513_trt = _1ddab8e2a_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1ddab79c8_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c70230c1:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1ddab79c8_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1ddab8bb6_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c702293e;
			}
		}
		else if ((_1ddab8bb6_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c702293e:;
			{
				jule::Ptr<_2090d5c23_StructIns> _13617_s = _1ddab8bb6_Struct((*_self_)._field_src.ptr());;
				if ((!(_20909a8a8_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1dda5a350_traitHasReferenceReceiver(_12513_trt))) {
					_1dda73731_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8e2a_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1c70229a5:;
			{
				__jule_func_result = (_12513_trt == _1ddab8e2a_Trait((*_self_)._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c70228c8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c7022862:;
	};
}



inline jule::Bool _1dda73c09_checkPtr(_1dda73214_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ddab6312_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddac1e22_Ptr> _15617_dest = _1ddab7c3c_Ptr((*_self_)._field_dest.ptr());;
	if (_1ddac28e5_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ddab5ad6_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1dda73e6d_checkPrim(_1dda73214_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1ddaba129_Prim> _16517_prim = _1ddab7764_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1ddabd5c2_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ddab5ad6_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1dda74325_typeEnum(_1dda73214_typeCompatibilityChecker* _self_, jule::Ptr<_1dd9dcc61_TypeEnum>& _17328_e, jule::Ptr<_1ddab53cc_TypeKind>& _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1c702a183:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dc69a_TypeEnumItem> _17421_item = *it;
			{
				if (_1ddab5ad6_Equal(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1dd9dcc61_TypeEnum> _17821_ke = _1ddab8215_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1c702a183;
				};
				if (_1dda74325_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c702a183:;
			++it;
			goto _iter_begin_1c702a183;
		}
		_iter_end_1c702a183:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda74589_checkTypeEnum(_1dda73214_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ddab5ad6_Equal((*_self_)._field_dest, (*_self_)._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1dd9dcc61_TypeEnum> _19317_e = _1ddab8215_TypeEnum((*_self_)._field_dest.ptr());;
	__jule_func_result = _1dda74325_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1dda747ed_check(_1dda73214_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ddab7c3c_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1dda73c09_checkPtr(&(*_self_));
		return __jule_func_result;;
	};
	if (_1ddab6cb3_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1ddab6312_IsNil((*_self_)._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ddab7764_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c70302ba:;
			{
				__jule_func_result = _1dda73e6d_checkPrim(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8215_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c7030111:;
			{
				__jule_func_result = _1dda74589_checkTypeEnum(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8e2a_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1c702e7e7:;
			{
				__jule_func_result = _1dda73995_checkTrait(&(*_self_));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c702e31e:;
			{
				__jule_func_result = _1ddab5ad6_Equal((*_self_)._field_dest, (*_self_)._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c702e20e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dda73214_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1dda7529e_pushErr(_1dda74d3c_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1dda21745_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,_22939_args);
}



inline jule::Bool _1dda75513_checkValidity(_1dda74d3c_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1ddab8952_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7032ee3:;
			{
				jule::Ptr<_1dd9ca2c0_FnIns> _23717_f = _1ddab8952_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1dd9cb656_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1c70345cc:;
						{
							_1dda7529e_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1c7034654:;
						{
							_1dda7529e_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1dd9c7ce5_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1c70346cb:;
						{
							_1dda7529e_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1c7034753:;
						{
							_1dda7529e_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1dda2699d_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1c7034500:;
				};
			}
		}
		else if ((_1ddab9403_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c703306a:;
			{
				_1dda7529e_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1c7032e38:;
	};
	return _23417_valid;;
}



inline jule::Bool _1dda75777_checkConst(_1dda74d3c_assignTypeChecker* _self_) {
	if (((((!(_1dda89d0d_IsConst((*_self_)._field_d.ptr()))) || (_1ddab7764_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1dd9aca44_IsNum(_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type48_compare((*_self_)._field_d.get()._field_Model, (*_self_)._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1ddab7764_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1dd9ac79c_IsFloat(_27413_kind)) {
			_case_begin_1c703be64:;
			{
				if ((!(_1dda5a482_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1dda7529e_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1dd9ac47d_IsInt(_27413_kind)) {
			_case_begin_1c703b7e3:;
			{
				if ((!(_1dda73038_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1dda7529e_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1c703b77c:;
			{
				return false;;
			}
		}
		_match_end_1c703b716:;
	};
	return true;;
}



inline jule::Bool _1dda759db_isPrim(_1dda74d3c_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1ddab609d_CppLinked((*_self_)._field_dest.ptr()) || _1ddab609d_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1ddab7764_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1dda75c50_checkCompatibility(_1dda74d3c_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1c7041177:;
			{
				return false;;
			}
		}
		else if ((!(_1dda75513_checkValidity(&(*_self_))))) {
			_case_begin_1c70411ee:;
			{
				return false;;
			}
		}
		else if (_1dda75777_checkConst(&(*_self_))) {
			_case_begin_1c7041276:;
			{
				return true;;
			}
		}
		else if ((_1ddab7ea1_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c70412ed:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_1ddab7ea1_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1ddab7ea1_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1ddab7764_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1c7041034;
				};
				if (_1dd9a92b0_TypesAreCompatible(_1ddab7764_Prim(_1ddab7ea1_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1ddab7764_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1dda759db_isPrim(&(*_self_))) {
			_case_begin_1c7041375:;
			{
				jule::Ptr<_1ddaba129_Prim> _32817_dest = _1ddab7764_Prim((*_self_)._field_dest.ptr());;
				if (_1ddabd5c2_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1ddaba129_Prim> _33221_src = _1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1dd9a92b0_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1c7041034:;
	};
	return _1dda2d8d9_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);;
}



inline jule::Bool _1dda75eb4_check(_1dda74d3c_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1dda75c50_checkCompatibility(&(*_self_));;
	if ((_34113_ok && (!((*_self_)._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1ddacdeb7_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda74d3c_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c7059349_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c705a944:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1c705b77a:;
						{
							_36421_elem=_1ddab8479_Arr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c705b2e6:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_2090bb665_ArrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1dda77e72_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1c705a8ab:;
	};
	return false;;
}

inline jule::Bool _1c7058a41_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c705dea8:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1c705ed77:;
						{
							_36421_elem=_1ddab86dd_Slc(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c705e85a:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_2090ba90b_SlcTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1dda77e72_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1c705de20:;
	};
	return false;;
}

inline jule::Bool _1c705d54b_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c706251c:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1c7063452:;
						{
							_36421_elem=_1ddab7c3c_Ptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c7062dbe:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_2090baed3_PtrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1dda77e72_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1c7062484:;
	};
	return false;;
}

inline jule::Bool _1c7058dc6_annotateConstraintElem(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c7065762:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1c706671e:;
						{
							_36421_elem=_1ddab79c8_Sptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1c7066114:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_2090ba510_SptrTypeDecl>(&__jule_any_type80).get()._field_Elem;
				return _1dda77e72_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1c70656c9:;
	};
	return false;;
}



inline jule::Bool _1dda77207_annotateConstraintMap(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c7048dd8:;
			{
				jule::Ptr<_1ddac08c1_Map> _38421_m = _1ddab918e_Map(_38145_k.ptr());;
				jule::Ptr<_2090bbdb3_MapTypeDecl> _38521_m2 = (*_self_)._field_c.get()._field_Kind.cast_ptr<_2090bbdb3_MapTypeDecl>(&__jule_any_type81);;
				(*_self_)._field_c=_38521_m2.get()._field_Key;
				if ((!(_1dda77e72_annotateConstraint(&(*_self_), _38421_m.get()._field_Key)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*_self_)._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1dda77e72_annotateConstraint(&(*_self_), _38421_m.get()._field_Val);
				return __jule_func_result;;
			}
		}
		_match_end_1c7048d83:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda77515_annotateConstraintTup(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c704b5c2:;
			{
				jule::Ptr<_2090babe7_TupleTypeDecl> _39921_tup = (*_self_)._field_c.get()._field_Kind.cast_ptr<_2090babe7_TupleTypeDecl>(&__jule_any_type82);;
				jule::Ptr<_1ddabed98_Tuple> _40021_tup2 = _1ddab9403_Tup(_39645_k.ptr());;
				{
					auto &expr = _40021_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c704cae0:;
					if (it != expr.end()) {
						jule::Ptr<_1ddab53cc_TypeKind> _40125_t2 = *it;
						{
							{
								auto &expr = _39921_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1c704d33d:;
								if (it != expr.end()) {
									jule::Ptr<_2090b9157_TypeDecl> _40229_t = *it;
									{
										(*_self_)._field_c=_40229_t;
										if (_1dda77e72_annotateConstraint(&(*_self_), _40125_t2)) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c704d33d:;
									++it;
									goto _iter_begin_1c704d33d;
								}
								_iter_end_1c704d33d:;
							};
						}
						_iter_next_1c704cae0:;
						++it;
						goto _iter_begin_1c704cae0;
					}
					_iter_end_1c704cae0:;
				};
			}
		}
		_match_end_1c704b54a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda77823_annotateConstraintFn(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c704d11d:;
			{
				jule::Ptr<_2090caad6_FnDecl> _41621_pf = (*_self_)._field_c.get()._field_Kind.cast_ptr<_2090caad6_FnDecl>(&__jule_any_type15);;
				jule::Ptr<_1dd9ca2c0_FnIns> _41721_f = _1ddab8952_Fn(_41344_k.ptr());;
				{
					auto &expr = _41721_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c7050571:;
					if (it != expr.end()) {
						jule::I64 _41818_i = it - expr.begin();
						jule::Ptr<_1dd9c9401_ParamIns> _41825_fp = *it;
						{
							(*_self_)._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1dda77e72_annotateConstraint(&(*_self_), _41825_fp.get()._field_Kind)) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c7050571:;
						++it;
						_41818_i++;
						goto _iter_begin_1c7050571;
					}
					_iter_end_1c7050571:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1dda77e72_annotateConstraint(&(*_self_), _41721_f.get()._field_Result)) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c704d0b8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda77b53_annotateConstraintIdent(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _43447_k) {
	jule::Ptr<_2090b971d_IdentTypeDecl> _43517_ident = (*_self_)._field_c.get()._field_Kind.cast_ptr<_2090b971d_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_2090d5c23_StructIns> _43617_s = _1ddab8bb6_Struct(_43447_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c7053464:;
		if (it != expr.end()) {
			jule::I64 _43713_i = it - expr.begin();
			jule::Ptr<_2090c6450_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1ddab3ba0_InsGeneric> _43925_fg = (*_self_)._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1dda78291_pushGeneric(&(*_self_), _43447_k,_43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1c7053464;
				};
				jule::Ptr<_2090b9157_TypeDecl> _44921_c = (*_self_)._field_c;;
				{
					auto &expr = _43517_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c705571e:;
					if (it != expr.end()) {
						jule::Ptr<_2090b9157_TypeDecl> _45025_ig = *it;
						{
							(*_self_)._field_c=_45025_ig;
							{
								auto &expr = _43617_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1c70569b7:;
								if (it != expr.end()) {
									jule::Ptr<_1ddab3ba0_InsGeneric> _45229_sg = *it;
									{
										if (_1dda77e72_annotateConstraint(&(*_self_), _45229_sg.get()._field_Kind)) {
											return true;;
										};
									}
									_iter_next_1c70569b7:;
									++it;
									goto _iter_begin_1c70569b7;
								}
								_iter_end_1c70569b7:;
							};
						}
						_iter_next_1c705571e:;
						++it;
						goto _iter_begin_1c705571e;
					}
					_iter_end_1c705571e:;
				};
				(*_self_)._field_c=_44921_c;
			}
			_iter_next_1c7053464:;
			++it;
			_43713_i++;
			goto _iter_begin_1c7053464;
		}
		_iter_end_1c7053464:;
	};
	return false;;
}



inline jule::Bool _1dda77e72_annotateConstraint(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _46342_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c7056da2:;
			{
				return _1dda77b53_annotateConstraintIdent(&(*_self_), _46342_k);;
			}
		}
		_match_end_1c7056d4c:;
	};
	{
		
		if ((_1ddab8479_Arr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c7057e19:;
			{
				return _1c7059349_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab86dd_Slc(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c70583e2:;
			{
				return _1c7058a41_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab7c3c_Ptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c7058458:;
			{
				return _1c705d54b_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab79c8_Sptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c7058535:;
			{
				return _1c7058dc6_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab918e_Map(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c705859b:;
			{
				return _1dda77207_annotateConstraintMap(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab8952_Fn(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c70579da:;
			{
				return _1dda77823_annotateConstraintFn(&(*_self_), _46342_k);;
			}
		}
		else if ((_1ddab9403_Tup(_46342_k.ptr()) != nullptr)) {
			_case_begin_1c7057a51:;
			{
				return _1dda77515_annotateConstraintTup(&(*_self_), _46342_k);;
			}
		}
		else {
			_case_begin_1c7058304:;
			{
				return false;;
			}
		}
		_match_end_1c705829e:;
	};
}



inline void _1dda78291_pushGeneric(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _48835_k, jule::I64 _48849_i) {
	(*_self_)._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1ddab3ba0_InsGeneric>(_1ddab3ba0_InsGeneric{._field_Kind=_48835_k, });
	jule::Ptr<_2090c6450_GenericDecl> _49017_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto &expr = (*_self_)._field_ignored;
		auto it = expr.begin();
		_iter_begin_1c7069216:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab53cc_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1ddab57c8_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=_48835_k.get()._field_Kind;
				};
			}
			_iter_next_1c7069216:;
			++it;
			goto _iter_begin_1c7069216;
		}
		_iter_end_1c7069216:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1dda77e72_annotateConstraint(&(*_self_), _48835_k);
}



inline jule::Bool _1dda7859e_annotatePrim(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1dda7a3c5_annotateAny(&(*_self_), _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1dda788ac_annotateArr(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddac14b5_Arr> _50817_parr = _1ddab8479_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddac14b5_Arr> _51217_arr = _1ddab8479_Arr(_50742_k.ptr());;
	(*_self_)._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1dda7a6d3_annotateKind(&(*_self_), _51217_arr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1dda78bba_annotateSlc(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddabe31a_Slc> _51817_pslc = _1ddab86dd_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddabe31a_Slc> _52217_slc = _1ddab86dd_Slc(_51742_k.ptr());;
	(*_self_)._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1dda7a6d3_annotateKind(&(*_self_), _52217_slc.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1dda79072_checkMapKey(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>* _52741_k, jule::Ptr<_1ddab53cc_TypeKind>& _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddab53cc_TypeKind>* _52817_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52741_k;
	__jule_func_result=_1dda7a6d3_annotateKind(&(*_self_), _52761_ck);
	(*_self_)._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dda79380_annotateMap(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddac08c1_Map> _53617_pmap = _1ddab918e_Map((*((*_self_)._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddac08c1_Map> _54017_m = _1ddab918e_Map(_53542_k.ptr());;
	__jule_func_result = (_1dda79072_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Key)),_54017_m.get()._field_Key) && _1dda79072_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Val)),_54017_m.get()._field_Val));
	return __jule_func_result;;
}



inline jule::Bool _1dda7968d_annotateFn(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dd9ca2c0_FnIns> _54617_pf = _1ddab8952_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _55017_f = _1ddab8952_Fn(_54541_k.ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1c707561d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1dd9c7a81_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1dd9c7a81_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1c7075695:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c7075585:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ddab53cc_TypeKind>* _55917_old = (*_self_)._field_k;;
	{
		auto &expr = _55017_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c7076e8d:;
		if (it != expr.end()) {
			jule::I64 _56014_i = it - expr.begin();
			jule::Ptr<_1dd9c9401_ParamIns> _56021_fp = *it;
			{
				(*_self_)._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1dda7a6d3_annotateKind(&(*_self_), _56021_fp.get()._field_Kind) && __jule_func_result);
			}
			_iter_next_1c7076e8d:;
			++it;
			_56014_i++;
			goto _iter_begin_1c7076e8d;
		}
		_iter_end_1c7076e8d:;
	};
	if ((!(_1dd9c7a81_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1dda7a6d3_annotateKind(&(*_self_), _55017_f.get()._field_Result) && __jule_func_result);
	};
	(*_self_)._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dda7999b_annotatePtr(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddac1e22_Ptr> _57517_pptr = _1ddab7c3c_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddac1e22_Ptr> _57917_ptr = _1ddab7c3c_Ptr(_57442_k.ptr());;
	(*_self_)._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1dda7a6d3_annotateKind(&(*_self_), _57917_ptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1dda79ca9_annotateSptr(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddabd8ad_Sptr> _58517_ssptr = _1ddab79c8_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ddabd8ad_Sptr> _58917_sptr = _1ddab79c8_Sptr(_58443_k.ptr());;
	(*_self_)._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1dda7a6d3_annotateKind(&(*_self_), _58917_sptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1dda7a0b7_annotateStruct(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2090d5c23_StructIns> _59517_s = _1ddab8bb6_Struct((*((*_self_)._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2090d5c23_StructIns> _59917_s2 = _1ddab8bb6_Struct(_59445_k.ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _59517_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c70800c8:;
		if (it != expr.end()) {
			jule::I64 _60314_i = it - expr.begin();
			jule::Ptr<_1ddab3ba0_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1ddab3ba0_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1ddab5ad6_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1c70800c8;
				};
				(*_self_)._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1dda7a6d3_annotateKind(&(*_self_), _60421_g2.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c70800c8:;
			++it;
			_60314_i++;
			goto _iter_begin_1c70800c8;
		}
		_iter_end_1c70800c8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda7a3c5_annotateAny(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1ddab57c8_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c7082a37:;
		if (it != expr.end()) {
			jule::I64 _61813_i = it - expr.begin();
			jule::Ptr<_2090c6450_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1c7082a37;
				};
				jule::Ptr<_1ddab3ba0_InsGeneric> _62217_t = (*_self_)._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1c70846c6:;
						{
							_1dda78291_pushGeneric(&(*_self_), _61642_k,_61813_i);
						}
					}
					else if ((!(_1ddab5ad6_Equal(_62217_t.get()._field_Kind, _61642_k)))) {
						_case_begin_1c708474d:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c7084572:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61642_k.get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c7082a37:;
			++it;
			_61813_i++;
			goto _iter_begin_1c7082a37;
		}
		_iter_end_1c7082a37:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda7a6d3_annotateKind(_1dda76822_dynamicTypeAnnotation* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1dda7a3c5_annotateAny(&(*_self_), _63743_k)) {
			_case_begin_1c7086c8e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ddab7764_Prim(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c7086d05:;
			{
				__jule_func_result = _1dda7859e_annotatePrim(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8479_Arr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c7086d6b:;
			{
				__jule_func_result = _1dda788ac_annotateArr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab86dd_Slc(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c7086dd2:;
			{
				__jule_func_result = _1dda78bba_annotateSlc(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab918e_Map(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c7087157:;
			{
				__jule_func_result = _1dda79380_annotateMap(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8952_Fn(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c70871bd:;
			{
				__jule_func_result = _1dda7968d_annotateFn(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab7c3c_Ptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c7087234:;
			{
				__jule_func_result = _1dda7999b_annotatePtr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab79c8_Sptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c708729a:;
			{
				__jule_func_result = _1dda79ca9_annotateSptr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ddab8bb6_Struct(_63743_k.ptr()) != nullptr)) {
			_case_begin_1c70874ed:;
			{
				__jule_func_result = _1dda7a0b7_annotateStruct(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c7086c28:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c7086bc3:;
	};
}



inline jule::Bool _1dda7a947_annotate(_1dda76822_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	__jule_func_result = _1dda7a6d3_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda76822_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1dda7b739_pushErrToken(_1dda7b1d9_fnCallArgChecker* _self_, jule::Ptr<_222e62217_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1dda21745_pushErr((*_self_)._field_e.get()._field_s.ptr(), _68231_token,_68246_fmt,_68259_args);
}



inline void _1dda7ba58_pushErr(_1dda7b1d9_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1dda7b739_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68626_fmt,_68639_args);
}



inline jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>> _1dda7bcbc_getParams(_1dda7b1d9_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1dd9c640e_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);;
	};
	return (*_self_)._field_f.get()._field_Params;;
}



inline jule::Bool _1dda7c0ca_checkCounts(_1dda7b1d9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>& _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = _69931_params.len();;
	if (((_70017_n > 0LL) && _1dd9c640e_IsSelf(_69931_params[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*_self_)._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1c7092ea9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && _69931_params[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1c7093031:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > _69931_params.len()))) {
			_case_begin_1c70930a8:;
			{
				_1dda7ba58_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c7092e32:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + _69931_params[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1c7094a5a:;
	}
	_iter_end_1c7094a5a:;;
	(_71617_idents).mut_slice(2LL);;
	_1dda7ba58_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type6)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1dda7c52b_checkArg(_1dda7b1d9_fnCallArgChecker* _self_, jule::Ptr<_1dd9c9401_ParamIns>& _72632_p, jule::Ptr<_1dda8944a_Data>& _72651_arg, jule::Ptr<_222e62217_Token>& _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_dynamicAnnotation && _1dd9cc3d2_parameterUsesGenerics(_72632_p,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		__jule_func_result=(!(_72632_p.get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1dda76822_dynamicTypeAnnotation _73025_dta = _1dda76822_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72632_p, ._field_a=_72651_arg, ._field_errorToken=_72668_errorToken, ._field_ignored=(*_self_)._field_ignored};;
			__jule_func_result=_1dda7a947_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_1dda7b739_pushErrToken(&(*_self_), _72668_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1dda3139d_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Mutable,_72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken)) {
		_1dda2d488_checkAssignType((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda7c8d3_push(_1dda7b1d9_fnCallArgChecker* _self_, jule::Ptr<_1dd9c9401_ParamIns>& _75428_p, jule::Ptr<_2090bd678_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ddab53cc_TypeKind> _75517_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _75613_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1dda8944a_Data> _75717_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_75428_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_75428_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_75428_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75717_d=_1ddaa62be_evalExprKind((*_self_)._field_e, _75446_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_75517_old;
	(*_self_)._field_e.get()._field_immutable=_75613_old_immut;
	if ((_75717_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1dda7c52b_checkArg(&(*_self_), _75428_p,_75717_d,_75446_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75717_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1dda7cc8a_pushVariadic(_1dda7b1d9_fnCallArgChecker* _self_, jule::Ptr<_1dd9c9401_ParamIns>& _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78117_variadiced = false;;
	jule::Bool _78213_more = ((_77954_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1dd9bb558_SliceExprModel> _78317_model = jule::new_ptr<_1dd9bb558_SliceExprModel>(_1dd9bb558_SliceExprModel{._field_ElemKind=_77936_p.get()._field_Kind, });;
	jule::Ptr<_1ddab53cc_TypeKind> _78717_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _79213_variadic = _77936_p.get()._field_Kind.get()._field_Variadic;;
	_77936_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77936_p.get()._field_Kind.get()._field_Variadic=_79213_variadic;
	});;
	for (; (_77954_i < (*_self_)._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_2090bd678_Expr> _79921_arg = (*_self_)._field_args[_77954_i];;
			{
				auto &_match_expr{ _79921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type83) {
					_case_begin_1c70a8244:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabe31a_Slc>(_1ddabe31a_Slc{._field_Elem=_77936_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1c70a8a91:;
					{
						(*_self_)._field_e.get()._field_prefix=_77936_p.get()._field_Kind;
					}
				}
				_match_end_1c70a8909:;
			};
			jule::Ptr<_1dda8944a_Data> _81221_d = _1ddaa65cc_eval((*_self_)._field_e, _79921_arg);;
			if ((_81221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c70a76b6;
			};
			if (_81221_d.get()._field_Kind.get()._field_Variadic) {
				_78117_variadiced=true;
				_77936_p.get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1dda7c52b_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
				{
					auto &_match_expr{ _81221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1c70aac4c:;
						{
							_78317_model=_81221_d.get()._field_Model.cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84);
							_78317_model.get()._field_ElemKind=_77936_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1c70aba2d:;
						{
							_78317_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_81221_d.get()._field_Model);;
						}
					}
					_match_end_1c70abb2c:;
				};
				(_77954_i)++;
				goto _iter_end_1c70a76b6;
			};
			__jule_func_result=(__jule_func_result && _1dda7c52b_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
			_78317_model.get()._field_Elems = jule::alloc_for_append(_78317_model.get()._field_Elems,1);_78317_model.get()._field_Elems.__push(_81221_d.get()._field_Model);;
		}
	_iter_next_1c70a76b6:;
	}
	_iter_end_1c70a76b6:;;
	(*_self_)._field_e.get()._field_prefix=_78717_old;
	if ((_78117_variadiced && _78213_more)) {
		_1dda7b739_pushErrToken(&(*_self_), (*_self_)._field_args[_77954_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_78317_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(jule::Any(_78317_model, &__jule_any_type84));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dda7d098_checkArgs(_1dda7b1d9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>& _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85613_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86017_i = 0LL;;
	if (((_85533_params.len() > 0LL) && _1dd9c640e_IsSelf(_85533_params[0LL].get()._field_Decl.ptr()))) {
		(_86017_i)++;
	};
	_julec_label_iter:;
	while ((_86017_i < _85533_params.len())) {
		{
			jule::Ptr<_1dd9c9401_ParamIns> _86721_p = _85533_params[_86017_i];;
			{
				
				if (_86721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1c70b3804:;
					{
						__jule_func_result=(_1dda7cc8a_pushVariadic(&(*_self_), _86721_p,_86017_i) && __jule_func_result);
						goto _iter_end_1c70b1637;
					}
				}
				else if (((*_self_)._field_args.len() <= _86017_i)) {
					_case_begin_1c70b30a6:;
					{
						__jule_func_result=false;
						goto _iter_end_1c70b1637;
					}
				}
				else {
					_case_begin_1c70b2c10:;
					{
						__jule_func_result=(_1dda7c8d3_push(&(*_self_), _86721_p,(*_self_)._field_args[_86017_i]) && __jule_func_result);
					}
				}
				_match_end_1c70b2b99:;
			};
			(_86017_i)++;
		}
	_iter_next_1c70b1637:;
	}
	_iter_end_1c70b1637:;;
	(*_self_)._field_e.get()._field_arg=_85613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dda7d32e_checkDynamicTypeAnnotation(_1dda7b1d9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c70b50b9:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab3ba0_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1dda7ba58_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c70b50b9:;
			++it;
			goto _iter_begin_1c70b50b9;
		}
		_iter_end_1c70b50b9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1dda7d5a4_check(_1dda7b1d9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>> _89717_params = _1dda7bcbc_getParams(&(*_self_));;
	__jule_func_result=_1dda7c0ca_checkCounts(&(*_self_), _89717_params);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1dda7d098_checkArgs(&(*_self_), _89717_params);
	if ((__jule_func_result && (*_self_)._field_dynamicAnnotation)) {
		__jule_func_result=_1dda7d32e_checkDynamicTypeAnnotation(&(*_self_));
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda7b1d9_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1dda7e0ee_pushErr(_1dda7dae3_structLitChecker* _self_, jule::Ptr<_222e62217_Token> _91826_token, jule::Str _91841_fmt, jule::Slice<jule::Any> _91854_args) {
	_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), _91826_token,_91841_fmt,_91854_args);
}



inline void _1dda7e41d_pushSugggestion(_1dda7dae3_structLitChecker* _self_, jule::Str _92334_fmt, jule::Slice<jule::Any> _92347_args) {
	_1dda8b7e3_pushSugggestion((*_self_)._field_e.ptr(), _92334_fmt,_92347_args);
}



inline void _1dda7e7d6_pushMatch(_1dda7dae3_structLitChecker* _self_, jule::Ptr<_2090d5a36_FieldIns>& _92733_f, jule::Ptr<_1dda8944a_Data>& _92752_d, jule::Ptr<_222e62217_Token>& _92767_errorToken) {
	;
	if (_1dda3139d_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken)) {
		_1dda2d488_checkAssignType((*_self_)._field_e.get()._field_s, false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1dd9b9ad9_StructArgExprModel>(_1dd9b9ad9_StructArgExprModel{._field_Field=_92733_f, ._field_Expr=_92752_d.get()._field_Model}));;
}



inline void _1dda7eb05_checkPair(_1dda7dae3_structLitChecker* _self_, jule::Ptr<_2090c30d9_FieldExprPair>& _94033_pair, jule::Slice<jule::Ptr<_2090bd678_Expr>>& _94060_exprs) {
	jule::Ptr<_2090d5a36_FieldIns> _94217_f = _209092cbd_FindField((*_self_)._field_s.ptr(), _94033_pair.get()._field_Field.get()._field_Kind);;
	if ((_94217_f == nullptr)) {
		_1dda7e0ee_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
		return;;
	};
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _94217_f.get()._field_Decl.get()._field_Public,_94217_f.get()._field_Decl.get()._field_Token)))) {
		_1dda7e0ee_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
		_1dda7e41d_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _94060_exprs;
		auto it = expr.begin();
		_iter_begin_1c70beac9:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _95421_expr = *it;
			{
				{
					auto &_match_expr{ _95421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1c70c049d:;
						{
							jule::Ptr<_2090c30d9_FieldExprPair> _95725_dpair = _95421_expr.get()._field_Kind.cast_ptr<_2090c30d9_FieldExprPair>(&__jule_any_type85);;
							{
								
								if ((_94033_pair == _95725_dpair)) {
									_case_begin_1c70c13d3:;
									{
										goto _iter_end_1c70beac9;
									}
								}
								else if ((_94033_pair.get()._field_Field.get()._field_Kind == _95725_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1c70c145a:;
									{
										_1dda7e0ee_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type6)}));
										goto _iter_end_1c70beac9;
									}
								}
								_match_end_1c70c1328:;
							};
						}
					}
					_match_end_1c70c027d:;
				};
			}
			_iter_next_1c70beac9:;
			++it;
			goto _iter_begin_1c70beac9;
		}
		_iter_end_1c70beac9:;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _96817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_94217_f.get()._field_Kind;
	jule::Ptr<_1dda8944a_Data> _97217_d = _1ddaa62be_evalExprKind((*_self_)._field_e, _94033_pair.get()._field_Expr.get()._field_Kind);;
	if ((_97217_d == nullptr)) {
		return;;
	};
	_1dda7e7d6_pushMatch(&(*_self_), _94217_f,_97217_d,_94033_pair.get()._field_Field);
}



inline jule::Bool _1dda7ee13_readyExprs(_1dda7dae3_structLitChecker* _self_, jule::Slice<jule::Ptr<_2090bd678_Expr>>& _97934_exprs) {
	jule::Bool _98017_ok = true;;
	{
		auto &expr = _97934_exprs;
		auto it = expr.begin();
		_iter_begin_1c70c4cdd:;
		if (it != expr.end()) {
			jule::I64 _98114_i = it - expr.begin();
			jule::Ptr<_2090bd678_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1c70c5a9c:;
						{
							jule::Ptr<_2090c4580_KeyValPair> _98425_pair = _98121_expr.get()._field_Kind.cast_ptr<_2090c4580_KeyValPair>(&__jule_any_type86);;
							{
								auto &_match_expr{ _98425_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type87) {
									_case_begin_1c70c6372:;
									{
										goto _match_end_1c70c6806;
									}
								}
								else {
									_case_begin_1c70c6a7b:;
									{
										_1dda7e0ee_pushErr(&(*_self_), _98425_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_98017_ok=false;
										goto _iter_next_1c70c4cdd;
									}
								}
								_match_end_1c70c6806:;
							};
							_97934_exprs[_98114_i].get()._field_Kind=jule::Any(jule::new_ptr<_2090c30d9_FieldExprPair>(_2090c30d9_FieldExprPair{._field_Field=_98425_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98425_pair.get()._field_Val}), &__jule_any_type85);
						}
					}
					_match_end_1c70c587c:;
				};
			}
			_iter_next_1c70c4cdd:;
			++it;
			_98114_i++;
			goto _iter_begin_1c70c4cdd;
		}
		_iter_end_1c70c4cdd:;
	};
	return _98017_ok;;
}



inline void _1dda80188_check(_1dda7dae3_structLitChecker* _self_, jule::Slice<jule::Ptr<_2090bd678_Expr>>& _100329_exprs) {
	if ((_100329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1dda7ee13_readyExprs(&(*_self_), _100329_exprs)))) {
		return;;
	};
	jule::Bool _101017_paired = false;;
	{
		auto &expr = _100329_exprs;
		auto it = expr.begin();
		_iter_begin_1c70c57c2:;
		if (it != expr.end()) {
			jule::I64 _101114_i = it - expr.begin();
			jule::Ptr<_2090bd678_Expr> _101121_expr = *it;
			{
				{
					auto &_match_expr{ _101121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1c70ce27b:;
						{
							jule::Ptr<_2090c30d9_FieldExprPair> _101425_pair = _101121_expr.get()._field_Kind.cast_ptr<_2090c30d9_FieldExprPair>(&__jule_any_type85);;
							if (((_101114_i > 0LL) && (!(_101017_paired)))) {
								_1dda7e0ee_pushErr(&(*_self_), _101425_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_101017_paired=true;
							_1dda7eb05_checkPair(&(*_self_), _101425_pair,_100329_exprs);
						}
					}
					else {
						_case_begin_1c70c9b5b:;
						{
							if (_101017_paired) {
								_1dda7e0ee_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_101114_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1dda7e0ee_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1c70c57c2;
							};
							jule::Ptr<_2090d5a36_FieldIns> _102925_field = (*_self_)._field_s.get()._field_Fields[_101114_i];;
							if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102925_field.get()._field_Decl.get()._field_Public,_102925_field.get()._field_Decl.get()._field_Token)))) {
								_1dda7e0ee_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1dda7e41d_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ddab53cc_TypeKind> _103725_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103725_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102925_field.get()._field_Kind;
							jule::Ptr<_1dda8944a_Data> _104125_d = _1ddaa62be_evalExprKind((*_self_)._field_e, _101121_expr.get()._field_Kind);;
							if ((_104125_d == nullptr)) {
								goto _iter_next_1c70c57c2;
							};
							_1dda7e7d6_pushMatch(&(*_self_), _102925_field,_104125_d,_101121_expr.get()._field_Token);
						}
					}
					_match_end_1c70c99c4:;
				};
			}
			_iter_next_1c70c57c2:;
			++it;
			_101114_i++;
			goto _iter_begin_1c70c57c2;
		}
		_iter_end_1c70c57c2:;
	};
	if ((!(_101017_paired))) {
		jule::I64 _105217_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _105321_diff = (_105217_n - _100329_exprs.len());;
		{
			
			if ((_105321_diff <= 0LL)) {
				_case_begin_1c70d2438:;
				{
					return;;
				}
			}
			_match_end_1c70d2317:;
		};
		jule::Str _105921_idents = jule::Str();;
		for (; (_105321_diff > 0LL); (_105321_diff)--) {
			{
				_105921_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_105217_n - _105321_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1c70d2d2e:;
		}
		_iter_end_1c70d2d2e:;;
		(_105921_idents).mut_slice(2LL);;
		_1dda7e0ee_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105921_idents, &__jule_any_type6)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dda7dae3_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda418db_Var> _1dda80b6c_buildVar(_1dda806c7_rangeChecker* _self_, jule::Ptr<_2090cbab5_VarDecl>& _107828_decl) {
	jule::Ptr<_1dda418db_Var> _107917_v = _1dd9d2ea9_buildVar(_107828_decl);;
	return _107917_v;;
}



inline void _1dda80d48_setSizeKey(_1dda806c7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c70d699d:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1dda408a7_IterRelation>(_1dda408a7_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9)});
			}
		}
		_match_end_1c70d6948:;
	};
}



inline void _1dda81211_checkRangeExprValidity(_1dda806c7_rangeChecker* _self_, jule::Ptr<_1dda8944a_Data>& _110946_d, jule::Ptr<_1dda418db_Var>& _110957_key, jule::Ptr<_1ddab53cc_TypeKind>& _110973_k) {
	jule::Bool _111017__mut = _110957_key.get()._field_Mutable;;
	if ((_111017__mut && (!(_1ddab6a4e_Mutable(_110973_k.ptr()))))) {
		_111017__mut=false;
	};
	_1dda3139d_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _111017__mut,_110957_key.get()._field_Reference,_110957_key.get()._field_Kind.get()._field_Kind,_110946_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1dda813dc_checkSlice(_1dda806c7_rangeChecker* _self_) {
	_1dda80d48_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ddabe31a_Slc> _112817_slc = _1ddab86dd_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_112817_slc.get()._field_Elem});
	_1dda81211_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112817_slc.get()._field_Elem);
}



inline void _1dda815b8_checkArray(_1dda806c7_rangeChecker* _self_) {
	_1dda80d48_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ddac14b5_Arr> _114117_arr = _1ddab8479_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_114117_arr.get()._field_Elem});
	_1dda81211_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_114117_arr.get()._field_Elem);
}



inline void _1dda81794_checkMapKeyA(_1dda806c7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ddac08c1_Map> _115317_m = _1ddab918e_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_115317_m.get()._field_Key});
	jule::Ptr<_1dda8944a_Data> _115717_d = jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d)));;
	_115717_d.get()._field_Kind=_115317_m.get()._field_Key;
	_1dda81211_checkRangeExprValidity(&(*_self_), _115717_d,(*_self_)._field_Kind.get()._field_KeyA,_115317_m.get()._field_Key);
}



inline void _1dda81970_checkMapKeyB(_1dda806c7_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ddac08c1_Map> _116817_m = _1ddab918e_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_116817_m.get()._field_Val});
	jule::Ptr<_1dda8944a_Data> _117217_d = jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d)));;
	_117217_d.get()._field_Kind=_116817_m.get()._field_Val;
	_1dda81211_checkRangeExprValidity(&(*_self_), _117217_d,(*_self_)._field_Kind.get()._field_KeyB,_116817_m.get()._field_Val);
}



inline void _1dda81b4b_checkMap(_1dda806c7_rangeChecker* _self_) {
	_1dda81794_checkMapKeyA(&(*_self_));
	_1dda81970_checkMapKeyB(&(*_self_));
}



inline void _1dda81d27_checkStr(_1dda806c7_rangeChecker* _self_) {
	_1dda80d48_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _222e649ab_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1dda80b6c_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1dda8208b_check(_1dda806c7_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1c70ea066:;
		}
		else if ((_1ddab86dd_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c70e995b:;
			{
				_1dda813dc_checkSlice(&(*_self_));
				return true;;
			}
		}
		else if ((_1ddab8479_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c70e99c2:;
			{
				_1dda815b8_checkArray(&(*_self_));
				return true;;
			}
		}
		else if ((_1ddab918e_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c70e9a38:;
			{
				_1dda81b4b_checkMap(&(*_self_));
				return true;;
			}
		}
		else {
			_case_begin_1c70e98e5:;
			{
				jule::Ptr<_1ddaba129_Prim> _121017_prim = _1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_121017_prim != nullptr) && _1ddabd35d_IsStr(_121017_prim.ptr()))) {
					_1dda81d27_checkStr(&(*_self_));
					return true;;
				};
			}
		}
		_match_end_1c70e9829:;
	};
	_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda806c7_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1dda82c07_prepareTypes(_1dda82762_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1dd9cb3e2_Types((*_self_)._field_f.ptr());
	};
}



inline void _1dda82e7c_prepareExprs(_1dda82762_retTypeChecker* _self_, jule::Ptr<_2090bd678_Expr>& _123836_e) {
	if ((_123836_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123836_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c710029c:;
			{
				(*_self_)._field_exprs=_123836_e.get()._field_Kind.cast_ptr<_2090be305_TupleExpr>(&__jule_any_type88).get()._field_Expr;
			}
		}
		else {
			_case_begin_1c710049a:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123836_e);;
			}
		}
		_match_end_1c71000e3:;
	};
}



inline void _1dda83158_checkExprs(_1dda82762_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _125417_datas = jule::Slice<jule::Ptr<_1dda8944a_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1c71023e2:;
		if (it != expr.end()) {
			jule::I64 _125514_i = it - expr.begin();
			jule::Ptr<_2090bd678_Expr> _125521_expr = *it;
			{
				if ((_125514_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1c71023e2;
				};
				jule::Ptr<_1ddab53cc_TypeKind> _126021_t = (*_self_)._field_types[_125514_i];;
				jule::Ptr<_1dda8944a_Data> _126221_d = _1ddaa68da_evalExpr(_1dda2cb80_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1ddad134e_Lookup>((*_self_)._field_sc, 0),_126021_t), _125521_expr);;
				if ((_126221_d == nullptr)) {
					goto _iter_next_1c71023e2;
				};
				_125417_datas = jule::alloc_for_append(_125417_datas,1);_125417_datas.__push(_126221_d);;
				if (((!(_126221_d.get()._field_Mutable)) && _1ddab6a4e_Mutable(_126221_d.get()._field_Kind.ptr()))) {
					_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1dda74d3c_assignTypeChecker _127421_ac = _1dda74d3c_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_126021_t, ._field_d=_126221_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1dda75eb4_check(&_127421_ac);
			}
			_iter_next_1c71023e2:;
			++it;
			_125514_i++;
			goto _iter_begin_1c71023e2;
		}
		_iter_end_1c71023e2:;
	};
	if ((_125417_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1dd9bee96_TupleExprModel>(_1dd9bee96_TupleExprModel{._field_Datas=_125417_datas}), &__jule_any_type89);
	} else if ((_125417_datas.len() == 1LL)) {
		(*_self_)._field_model=_125417_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1dda83466_check(_1dda82762_retTypeChecker* _self_, jule::Ptr<_2090bd678_Expr>& _129329_e) {
	_1dda82c07_prepareTypes(&(*_self_));
	_1dda82e7c_prepareExprs(&(*_self_), _129329_e);
	jule::I64 _129713_n = (*_self_)._field_exprs.len();;
	if (((_129713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1dd9c8796_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1dd9c7a81_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129713_n > (*_self_)._field_types.len())) {
		_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_129713_n < (*_self_)._field_types.len())) {
		_1dda21745_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1dda83158_checkExprs(&(*_self_));
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda82762_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda84b3d_FindPackage(_1dda84621_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c710d574:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1c710d574:;
			++it;
			goto _iter_begin_1c710d574;
		}
		_iter_end_1c710d574:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dda84e4b_SelectPackage(_1dda84621_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c710e71d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1c710e71d:;
			++it;
			goto _iter_begin_1c710e71d;
		}
		_iter_end_1c710e71d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _1dda85303_FindVar(_1dda84621_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1dda86db5_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda856aa_FindTypeAlias(_1dda84621_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1dda87316_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);;
}



inline jule::Ptr<_2090d5849_Struct> _1dda85a62_FindStruct(_1dda84621_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c7111d80:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1c7111d80:;
			++it;
			goto _iter_begin_1c7111d80;
		}
		_iter_end_1c7111d80:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda85e19_FindFn(_1dda84621_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c71132b0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1c71132b0:;
			++it;
			goto _iter_begin_1c71132b0;
		}
		_iter_end_1c71132b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda86227_FindTrait(_1dda84621_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c71144e2:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1c71144e2:;
			++it;
			goto _iter_begin_1c71144e2;
		}
		_iter_end_1c71144e2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda86535_FindEnum(_1dda84621_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c7114965:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9db666_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1c7114965:;
			++it;
			goto _iter_begin_1c7114965;
		}
		_iter_end_1c7114965:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda86843_FindTypeEnum(_1dda84621_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c7115889:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dcc61_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1c7115889:;
			++it;
			goto _iter_begin_1c7115889;
		}
		_iter_end_1c7115889:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _1dda86db5_findVar(_1dda84621_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1dda418db_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1c71182b5:;
		}
		_iter_end_1c71182b5:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1c7117869:;
			if (it != expr.end()) {
				jule::Ptr<_1dda418db_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1c7117869:;
				++it;
				goto _iter_begin_1c7117869;
			}
			_iter_end_1c7117869:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda87316_findTypeAlias(_1dda84621_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1ddab46d9_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1c711b461:;
		}
		_iter_end_1c711b461:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1c711aa15:;
			if (it != expr.end()) {
				jule::Ptr<_1ddab46d9_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1c711aa15:;
				++it;
				goto _iter_begin_1c711aa15;
			}
			_iter_end_1c711aa15:;
		};
	};
	return nullptr;;
}



inline jule::Any _1dda876bd_defByIdent(_1dda84621_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c711d760:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type9);;
				};
			}
			_iter_next_1c711d760:;
			++it;
			goto _iter_begin_1c711d760;
		}
		_iter_end_1c711d760:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c711e211:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type68);;
				};
			}
			_iter_next_1c711e211:;
			++it;
			goto _iter_begin_1c711e211;
		}
		_iter_end_1c711e211:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c711e9a3:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type67);;
				};
			}
			_iter_next_1c711e9a3:;
			++it;
			goto _iter_begin_1c711e9a3;
		}
		_iter_end_1c711e9a3:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c7120c7e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type66);;
				};
			}
			_iter_next_1c7120c7e:;
			++it;
			goto _iter_begin_1c7120c7e;
		}
		_iter_end_1c7120c7e:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c7121e5b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type11);;
				};
			}
			_iter_next_1c7121e5b:;
			++it;
			goto _iter_begin_1c7121e5b;
		}
		_iter_end_1c7121e5b:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c7122c4d:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9db666_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type69);;
				};
			}
			_iter_next_1c7122c4d:;
			++it;
			goto _iter_begin_1c7122c4d;
		}
		_iter_end_1c7122c4d:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c71239b8:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dcc61_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type70);;
				};
			}
			_iter_next_1c71239b8:;
			++it;
			goto _iter_begin_1c71239b8;
		}
		_iter_end_1c71239b8:;
	};
	return nullptr;;
}



inline jule::Bool _1dda87b1e_isDuplicatedIdent(_1dda84621_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1c7124777:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c7124777:;
			++it;
			goto _iter_begin_1c7124777;
		}
		_iter_end_1c7124777:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1c7125b30:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c7125b30:;
			++it;
			goto _iter_begin_1c7125b30;
		}
		_iter_end_1c7125b30:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1c7125778:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c7125778:;
			++it;
			goto _iter_begin_1c7125778;
		}
		_iter_end_1c7125778:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1c7127d74:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1c7127d74:;
			++it;
			goto _iter_begin_1c7127d74;
		}
		_iter_end_1c7127d74:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1c71293d6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9d9521_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c71293d6:;
			++it;
			goto _iter_begin_1c71293d6;
		}
		_iter_end_1c71293d6:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1c7129859:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9db666_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c7129859:;
			++it;
			goto _iter_begin_1c7129859;
		}
		_iter_end_1c7129859:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1c712abe0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9dcc61_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1c712abe0:;
			++it;
			goto _iter_begin_1c712abe0;
		}
		_iter_end_1c712abe0:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda84621_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dda89835_IsNil(_1dda8944a_Data* _self_) {
	return _1ddab6312_IsNil((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1dda89a99_IsVoid(_1dda8944a_Data* _self_) {
	return _1ddab6576_Void((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1dda89d0d_IsConst(_1dda8944a_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);;
}



inline jule::Bool _1dda8a11b_GoodOperand(_1dda8944a_Data* _self_, jule::Ptr<_1dda8944a_Data>& _10031_other) {
	if ((_1ddab8215_TypeEnum(_10031_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ddab7764_Prim(_10031_other.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd5c2_IsAny(_1ddab7764_Prim(_10031_other.get()._field_Kind.ptr()).ptr())))) && (_1ddab8e2a_Trait(_10031_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1ddab6312_IsNil((*_self_)._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda8944a_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dda8a4c3_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1dda8b4c4_pushErr(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1dda21745_pushErr((*_self_)._field_s.ptr(), _13126_token,_13141_fmt,_13154_args);
}



inline void _1dda8b7e3_pushSugggestion(_1dda8aeb8_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1dda2699d_pushSugggestion((*_self_)._field_s.ptr(), _13634_fmt,_13647_args);
}



inline void _1dda8b9be_allowBuiltin(_1dda8aeb8_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1dda8bb9a_disallowBuiltin(_1dda8aeb8_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1dda8be0e_isUnsafe(_1dda8aeb8_Eval* _self_) {
	return (*_self_)._field_unsafety;;
}



inline jule::Bool _1dda8c173_isGlobal(_1dda8aeb8_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c715a439:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c715a967:;
			{
				return false;;
			}
		}
		_match_end_1c715a912:;
	};
}



inline jule::Bool _1dda8c44d_applyNumericPrefix(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _16342_d) {
	if (((((_16342_d == nullptr) || (!(_1dda89d0d_IsConst(_16342_d.ptr())))) || (_1ddab7764_Prim(_16342_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ddaba129_Prim> _17013_prim = _1ddab7764_Prim((*_self_)._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1dd9ac79c_IsFloat(_1ddaba48c_Str(_17013_prim.ptr()))) {
			_case_begin_1c715d31b:;
			{
				_16342_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>((*((*_self_)._field_prefix)));
				_1dd9b17a1_SetF64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1dd9b0a36_AsF64(_16342_d.get()._field_Constant.ptr())));
				_16342_d.get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1dd9abdea_IsSigInt(_1ddaba48c_Str(_17013_prim.ptr()))) {
			_case_begin_1c715d382:;
			{
				if ((!(_1dda71d5b_sigAssignable(_1ddaba48c_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>((*((*_self_)._field_prefix)));
				_1dd9b0cab_SetI64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_16342_d.get()._field_Constant.ptr())));
				_16342_d.get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1dd9ac1d6_IsUnsigInt(_1ddaba48c_Str(_17013_prim.ptr()))) {
			_case_begin_1c715d3e8:;
			{
				if ((!(_1dda71e8d_unsigAssignable(_1ddaba48c_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>((*((*_self_)._field_prefix)));
				_1dd9b1031_SetU64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_16342_d.get()._field_Constant.ptr())));
				_16342_d.get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1c715d11d:;
	};
	return true;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8c6b2_litNil(_1dda8aeb8_Eval* _self_) {
	jule::Ptr<_1dd9ad050_Const> _20217_constant = static__1dd9ae24e_NewNil();;
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type48), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8c9c0_litStr(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _21122_l) {
	jule::Str _21217_s = _21122_l.get()._field_Value.slice(1LL,(_21122_l.get()._field_Value.len() - 1LL));;
	if (_222e6356a_IsRawStr(_21122_l.get()._field_Value)) {
		_21217_s=_1dda720e2_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1dda723de_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1dd9ad050_Const> _21817_constant = static__1dd9adca9_NewStr(_21217_s);;
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type48), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8cccd_litBool(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _23023_l) {
	jule::Ptr<_1dd9ad050_Const> _23117_constant = static__1dd9ada12_NewBool((_23023_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type48), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8d0db_litRune(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _24223_l) {
	;
	;
	jule::Str _24713_lt = _24223_l.get()._field_Value.slice(1LL,(_24223_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1dda5a0a8_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1dda8944a_Data> _24917_data = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Constant=static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1dda59e32_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c40aa_RuneExprModel>(_1dd9c40aa_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type90);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8d3e9_litFloat(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1dd99461e_ParseFloat(_27124_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1dd9ad050_Const> _27417_constant = static__1dd9ae051_NewF64(_27313_f);;
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type48), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8d707_litInt(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _28626_l) {
	;
	jule::Str _28917_lit = _28626_l.get()._field_Value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_222a83b08_HasPrefix(_28917_lit,jule::Str("0x", 2))) {
			_case_begin_1c716edee:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_222a83b08_HasPrefix(_28917_lit,jule::Str("0b", 2))) {
			_case_begin_1c716ee65:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_222a83b08_HasPrefix(_28917_lit,jule::Str("0o", 2))) {
			_case_begin_1c716eb13:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1c716eb79:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1c716ea9c:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1c716ea36:;
	};
	jule::Ptr<_1dda8944a_Data> _31017_d = jule::new_ptr<_1dda8944a_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1dd9917e7_ParseInt(_28917_lit,_29017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1dd9ad4c3_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1dd9916b5_ParseUint(_28917_lit,_29017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1dda8b4c4_pushErr(&(*_self_), _28626_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1dd9ad76a_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type48);
	if ((!(_1dda8c44d_applyNumericPrefix(&(*_self_), _31017_d)))) {
		_1ddab011e_fitBitsize(_31017_d);
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8da15_litNum(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr>& _34626_l) {
	{
		
		if (_222e641c5_IsFloat(_34626_l.get()._field_Value)) {
			_case_begin_1c7177ee5:;
			{
				return _1dda8d3e9_litFloat(&(*_self_), _34626_l);;
			}
		}
		else {
			_case_begin_1c71777ec:;
			{
				return _1dda8d707_litInt(&(*_self_), _34626_l);;
			}
		}
		_match_end_1c7177731:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1dda8dd23_evalLit(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090be6ac_LitExpr> _35526_lit) {
	{
		
		if (_2090bea0e_IsNil(_35526_lit.ptr())) {
			_case_begin_1c7179139:;
			{
				return _1dda8c6b2_litNil(&(*_self_));;
			}
		}
		else if (_222e632c3_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1c7178a40:;
			{
				return _1dda8c9c0_litStr(&(*_self_), _35526_lit);;
			}
		}
		else if (_222e63e2d_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1c7178ab7:;
			{
				return _1dda8cccd_litBool(&(*_self_), _35526_lit);;
			}
		}
		else if (_222e63812_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1c7178b3e:;
			{
				return _1dda8d0db_litRune(&(*_self_), _35526_lit);;
			}
		}
		else if (_222e6446c_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1c7178d70:;
			{
				return _1dda8da15_litNum(&(*_self_), _35526_lit);;
			}
		}
		else {
			_case_begin_1c7178578:;
			{
				return nullptr;;
			}
		}
		_match_end_1c71784ac:;
	};
}



inline jule::Any _1dda8e131_findBuiltins(_1dda8aeb8_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1c717b02b:;
			{
				jule::Any _37521_def = _1ddaaee10_findBuiltinsImport(_37231_ident,(*_self_)._field_lookup.cast_ptr<_1dda15937_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c717b47c:;
			{
				jule::Any _38021_def = _1ddab0a9d_findBuiltinsSema(_37231_ident,(*_self_)._field_lookup.cast_ptr<_1dda1da83_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c717b4e3:;
			{
				jule::Any _38521_def = _1ddab0a9d_findBuiltinsSema(_37231_ident,(*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1c717aec6:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;;
	};
	return _1ddae4e23_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1dda8e4d8_getDef(_1dda8aeb8_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1dda418db_Var> _40117_v = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddacebbb_FindVar((*_self_)._field_lookup, _39625_ident,_39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type9);;
	};
	jule::Ptr<_1ddab46d9_TypeAlias> _40617_ta = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad0073_FindTypeAlias((*_self_)._field_lookup, _39625_ident,_39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type68);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1dd9db666_Enum> _41221_enm = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad0ded_FindEnum((*_self_)._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type69);;
		};
		jule::Ptr<_1dd9dcc61_TypeEnum> _41721_tenm = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad120b_FindTypeEnum((*_self_)._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type70);;
		};
	};
	jule::Ptr<_1dd9c761e_Fn> _42317_f = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad07d2_FindFn((*_self_)._field_lookup, _39625_ident,_39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type66);;
	};
	jule::Ptr<_2090d5849_Struct> _42817_s = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad042a_FindStruct((*_self_)._field_lookup, _39625_ident,_39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type67);;
	};
	return _1dda8e131_findBuiltins(&(*_self_), _39625_ident);;
}



inline void _1c7192aae_pushReference(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _43640_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c71973ee:;
			{
				jule::Ptr<_1dd9edc94_scopeChecker> _43921_sc = _1dda0214e_getHardRoot((*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0));;
				if ((!(_1c71952ed_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), _43640_ref)))) {
					_1dd9cddd9_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1c7193ecd:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c71952ed_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43640_ref))))) {
					_1dd9cddd9_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type8));
				};
			}
		}
		_match_end_1c7193e78:;
	};
}

inline void _1c71a6ab2_pushReference(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda418db_Var>& _43640_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c71ab215:;
			{
				jule::Ptr<_1dd9edc94_scopeChecker> _43921_sc = _1dda0214e_getHardRoot((*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0));;
				if ((!(_1c71a92ac_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), _43640_ref)))) {
					_1dd9cddd9_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1c71a7e8c:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c71a92ac_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43640_ref))))) {
					_1dd9cddd9_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type9));
				};
			}
		}
		_match_end_1c71a7e37:;
	};
}

inline void _1c724dab0_pushReference(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090d5c23_StructIns>& _43640_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c724ec48:;
			{
				jule::Ptr<_1dd9edc94_scopeChecker> _43921_sc = _1dda0214e_getHardRoot((*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0));;
				if ((!(_1c72512ee_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), _43640_ref)))) {
					_1dd9cddd9_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type10));
				};
			}
		}
		else {
			_case_begin_1c724eece:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1c72512ee_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43640_ref))))) {
					_1dd9cddd9_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43640_ref, &__jule_any_type10));
				};
			}
		}
		_match_end_1c724ee79:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1dda8ea6b__evalEnum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9db666_Enum> _45028_enm) {
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1dda8944a_Data> _1dda8ee23_evalEnum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9db666_Enum> _45931_enm, jule::Ptr<_222e62217_Token> _45943_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _45931_enm.get()._field_Public,_45931_enm.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _45943_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1dda8ea6b__evalEnum(&(*_self_), _45931_enm);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda90231__evalTypeEnum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9dcc61_TypeEnum> _46832_enm) {
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1dda8944a_Data> _1dda905d8_evalTypeEnum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9dcc61_TypeEnum> _47735_enm, jule::Ptr<_222e62217_Token> _47751_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _47735_enm.get()._field_Public,_47735_enm.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _47751_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1dda90231__evalTypeEnum(&(*_self_), _47735_enm);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda908e6__evalStruct(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090d5c23_StructIns> _48630_s) {
	jule::Ptr<_1dda8944a_Data> _48717_d = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type10), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda90c9d_evalStruct(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090d5c23_StructIns> _50033_s, jule::Ptr<_222e62217_Token> _50048_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public,_50033_s.get()._field_Decl.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _50048_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dda913ca_checkDeprecated(&(*_self_), _50033_s.get()._field_Decl.get()._field_Directives,_50048_errorToken);
	return _1dda908e6__evalStruct(&(*_self_), _50033_s);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda910ab_evalFnIns(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9ca2c0_FnIns> _51028_f) {
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type8), });;
}



inline void _1dda913ca_checkDeprecated(_1dda8aeb8_Eval* _self_, jule::Slice<jule::Ptr<_209085db0_Directive>>& _51939_directives, jule::Ptr<_222e62217_Token> _51970_tok) {
	if (_1dda8be0e_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_209085db0_Directive> _52413_d = _1ddaaea7a_findDirective(_51939_directives,jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_1dda8b4c4_pushErr(&(*_self_), _51970_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type6)}));
		} else {
			_1dda8b4c4_pushErr(&(*_self_), _51970_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type6)}));
		};
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1dda8944a_Data> _1dda91782_evalFn(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9c761e_Fn> _53529_f, jule::Ptr<_222e62217_Token> _53537_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _53529_f.get()._field_Public,_53529_f.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _53537_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dda913ca_checkDeprecated(&(*_self_), _53529_f.get()._field_Directives,_53537_errorToken);
	jule::Ptr<_1dd9ca2c0_FnIns> _54417_ins = _1dd9c8c6e_instance(_53529_f);;
	_1c7192aae_pushReference(&(*_self_), _54417_ins);
	return _1dda910ab_evalFnIns(&(*_self_), _54417_ins);;
}



inline void _1dda91b4a_pushIllegalCycleError(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda418db_Var>& _54941_v1, jule::Ptr<_1dda418db_Var>& _54952_v2, jule::Str& _54967_message) {
	;
	jule::Str _55113_refers_to = _222b39032_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54941_v1.get()._field_Ident, &__jule_any_type6),jule::Any(_54952_v2.get()._field_Ident, &__jule_any_type6)}));;
	(_54967_message).buffer.insert(0, (((_222a844bb_Repeat(jule::Str(" ", 1),4LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1dda92002_checkCrossCycle(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda418db_Var>& _55535_v, jule::Str& _55549_message) {
	{
		auto &expr = _55535_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1c719a3ad:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> &_55616_d = *it;
			{
				if ((_55616_d == (*_self_)._field_owner)) {
					_1dda91b4a_pushIllegalCycleError(&(*_self_), _55535_v,_55616_d,_55549_message);
					return false;;
				};
				if ((!(_1dda92002_checkCrossCycle(&(*_self_), _55616_d,_55549_message)))) {
					_1dda91b4a_pushIllegalCycleError(&(*_self_), _55535_v,_55616_d,_55549_message);
					return false;;
				};
			}
			_iter_next_1c719a3ad:;
			++it;
			goto _iter_begin_1c719a3ad;
		}
		_iter_end_1c719a3ad:;
	};
	return true;;
}



inline jule::Bool _1dda923a9_checkIllegalCycles(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda418db_Var>& _57442_v, jule::Ptr<_222e62217_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*_self_)._field_owner == _57442_v)) {
		_1dda8b4c4_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_1dda92002_checkCrossCycle(&(*_self_), _57442_v,_58617_message)))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_1dda91b4a_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_57442_v,_58617_message);
		_58921_errMsg+=_58617_message;
		_1dda8b4c4_pushErr(&(*_self_), _57451_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_57442_v);;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda92761_evalVar(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda418db_Var> _60130_v, jule::Ptr<_222e62217_Token> _60139_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _60130_v.get()._field_Public,_60130_v.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _60139_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dda913ca_checkDeprecated(&(*_self_), _60130_v.get()._field_Directives,_60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c71a2926:;
			{
				jule::Bool _61517_ok = _1dda923a9_checkIllegalCycles(&(*_self_), _60130_v,_60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c71a29c0:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _1dda8be0e_isUnsafe(&(*_self_)))) {
					goto _match_end_1c71a28c1;
				};
				jule::Ptr<_1dd9edc94_scopeChecker> _62321_s = (*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1c71a476e:;
				}
				_iter_end_1c71a476e:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_1dda8b4c4_pushErr(&(*_self_), _60139_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type6)}));
				};
			}
		}
		_match_end_1c71a28c1:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_1c71a6ab2_pushReference(&(*_self_), _60130_v);
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_1dda39384_checkTypeVar((*_self_)._field_s, _60130_v,jule::Trait<_1ddad134e_Lookup>((*_self_)._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1dda39384_checkTypeVar((*_self_)._field_s, _60130_v,(*_self_)._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1dda8944a_Data> _66617_d = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type9), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _1dda41ca4_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_1dd9ad050_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type48);
		if (_1dda4227c_untypedConstant(_60130_v.ptr())) {
			_1dda8c44d_applyNumericPrefix(&(*_self_), _66617_d);
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda92b18_evalTypeAlias(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab46d9_TypeAlias> _69036_ta, jule::Ptr<_222e62217_Token> _69052_errorToken) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _69036_ta.get()._field_Public,_69036_ta.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _69052_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_1ddab4e9d_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1dda8944a_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c71b7ad4:;
			{
				_70017_d=_1dda908e6__evalStruct(&(*_self_), _69917_kind.cast_ptr<_2090d5c23_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c71b8321:;
			{
				_70017_d=_1dda8ea6b__evalEnum(&(*_self_), _69917_kind.cast_ptr<_1dd9db666_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c71b6dad:;
			{
				_70017_d=_1dda90231__evalTypeEnum(&(*_self_), _69917_kind.cast_ptr<_1dd9dcc61_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1c71b6c8c:;
			{
				_70017_d=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type91);
			}
		}
		_match_end_1c71b6c37:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda92ec0_evalDef(_1dda8aeb8_Eval* _self_, jule::Any _72630_def, jule::Ptr<_222e62217_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c71babb4:;
			{
				return _1dda92761_evalVar(&(*_self_), _72630_def.cast_ptr<_1dda418db_Var>(&__jule_any_type9),_72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c71bac2a:;
			{
				return _1dda8ee23_evalEnum(&(*_self_), _72630_def.cast_ptr<_1dd9db666_Enum>(&__jule_any_type69),_72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c71bac91:;
			{
				return _1dda905d8_evalTypeEnum(&(*_self_), _72630_def.cast_ptr<_1dd9dcc61_TypeEnum>(&__jule_any_type70),_72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c71bad18:;
			{
				return _1dda90c9d_evalStruct(&(*_self_), _209095dc0_instance(_72630_def.cast_ptr<_2090d5849_Struct>(&__jule_any_type67)),_72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c71bad7e:;
			{
				jule::Ptr<_1dd9c761e_Fn> _73721_f = _72630_def.cast_ptr<_1dd9c761e_Fn>(&__jule_any_type66);;
				if ((_73721_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1dda91782_evalFn(&(*_self_), _73721_f,_72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c71bae06:;
			{
				return _1dda910ab_evalFnIns(&(*_self_), _72630_def.cast_ptr<_1dd9ca2c0_FnIns>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c71bae7d:;
			{
				return _1dda92b18_evalTypeAlias(&(*_self_), _72630_def.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68),_72640_ident);;
			}
		}
		_match_end_1c71baac6:;
	};
	_1dda8b4c4_pushErr(&(*_self_), _72640_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda932cd_evalIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090c0339_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _1dda8e4d8_getDef(&(*_self_), _75028_ident.get()._field_Ident,_75028_ident.get()._field_CppLinked);;
	return _1dda92ec0_evalDef(&(*_self_), _75117_def,_75028_ident.get()._field_Token);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda935db_evalUnary(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c0a43_UnaryExpr> _75533_u) {
	_1ddaa6d5d_unaryEval _75617_unary = static__1ddaa7314_new(_self_);;
	return _1ddaa85ac_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda938e9_evalVariadic(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c0dea_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _76036_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_1dda8944a_Data> _77017_d = _1ddaa62be_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ddab7500_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_1dda8b4c4_pushErr(_self_.ptr(), _76036_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_1ddabe31a_Slc> _78013_slc = _1ddab86dd_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda93c07_evalUnsafe(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090bedb6_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1dda8944a_Data> _79317_d = _1ddaa62be_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda94015_evalArr(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c4c67_SliceExpr> _79831_s) {
	jule::Ptr<_1ddac14b5_Arr> _80017_pt = _1ddab8479_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1ddac14b5_Arr> _80217_arr = jule::new_ptr<_1ddac14b5_Arr>(_1ddac14b5_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1c71c9d6b:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_2090c0dea_VariadicExpr>(&__jule_any_type83).get()._field_Expr != nullptr)) {
						goto _match_end_1c71c9d16;
					};
					if (_80017_pt.get()._field_Auto) {
						_1dda8b4c4_pushErr(_self_.ptr(), _79831_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1c71c9d16:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I64>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_1dda8b4c4_pushErr(_self_.ptr(), _79831_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_1dd9be34c_ArrayExprModel> _83717_model = jule::new_ptr<_1dd9be34c_ArrayExprModel>(_1dd9be34c_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1ddab53cc_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto &expr = _79831_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c71cebc8:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _84821_elem = *it;
			{
				jule::Ptr<_1dda8944a_Data> _84921_d = _1ddaa62be_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_1c71cebc8;
				};
				_1dda2d488_checkAssignType(_self_.get()._field_s, false,_80217_arr.get()._field_Elem,_84921_d,_79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_1c71cebc8:;
			++it;
			goto _iter_begin_1c71cebc8;
		}
		_iter_end_1c71cebc8:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type92), });;
}



inline jule::Ptr<_1dda8944a_Data> _1dda94466_evalExpSlc(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c4c67_SliceExpr> _87334_s, jule::Ptr<_1ddab53cc_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_1ddabe31a_Slc> _87417_slc = jule::new_ptr<_1ddabe31a_Slc>(_1ddabe31a_Slc{._field_Elem=_87353_t});;
	jule::Ptr<_1dd9bb558_SliceExprModel> _87817_model = jule::new_ptr<_1dd9bb558_SliceExprModel>(_1dd9bb558_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87817_model.get()._field_Elems = jule::alloc_for_append(_87817_model.get()._field_Elems,1);_87817_model.get()._field_Elems.__push(_87371_first);;
		_87334_s.get()._field_Exprs=_87334_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1ddab53cc_TypeKind> _88717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto &expr = _87334_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c71d563a:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _88921_elem = *it;
			{
				jule::Ptr<_1dda8944a_Data> _89021_d = _1ddaa62be_evalExprKind(_self_, _88921_elem.get()._field_Kind);;
				if ((_89021_d == nullptr)) {
					goto _iter_next_1c71d563a;
				};
				_1dda2d488_checkAssignType(_self_.get()._field_s, false,_87417_slc.get()._field_Elem,_89021_d,_87334_s.get()._field_Token);
				_87817_model.get()._field_Elems = jule::alloc_for_append(_87817_model.get()._field_Elems,1);_87817_model.get()._field_Elems.__push(_89021_d.get()._field_Model);;
			}
			_iter_next_1c71d563a:;
			++it;
			goto _iter_begin_1c71d563a;
		}
		_iter_end_1c71d563a:;
	};
	_self_.get()._field_prefix=_88717_prefix;
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87817_model, &__jule_any_type84), });;
}



inline jule::Ptr<_1dda8944a_Data> _1dda94774_evalSliceExpr(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c4c67_SliceExpr> _90837_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1ddab8479_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c71d82a8:;
				{
					return _1dda94015_evalArr(_self_, _90837_s);;
				}
			}
			else if ((_1ddab86dd_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1c71d8330:;
				{
					jule::Ptr<_1ddabe31a_Slc> _91425_pt = _1ddab86dd_Slc(_self_.get()._field_prefix.ptr());;
					return _1dda94466_evalExpSlc(_self_, _90837_s,_91425_pt.get()._field_Elem,nullptr);;
				}
			}
			_match_end_1c71d8198:;
		};
	};
	jule::Ptr<_1ddab53cc_TypeKind> _91917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90837_s.get()._field_Exprs.len() == 0LL)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _90837_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _92717_first_elem = _1ddaa62be_evalExprKind(_self_, _90837_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92717_first_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _93217_d = _1dda94466_evalExpSlc(_self_, _90837_s,_92717_first_elem.get()._field_Kind,_92717_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91917_prefix;
	return _93217_d;;
}



inline void _1dda94ab5_checkIntegerIndexingByData(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _93850_d, jule::Ptr<_222e62217_Token> _93860_token) {
	jule::Str _93913_err_key = _1ddab2022_checkDataForIntegerIndexing(_93850_d);;
	{
		auto &_match_expr{ _93913_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c71dd3ac:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1c71dd896:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _93860_token,_93913_err_key,jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_93850_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
			}
		}
		else {
			_case_begin_1c71dd731:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _93860_token,_93913_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1c71dd654:;
	};
}



inline void _1dda94e8e_indexingPtr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _95035_d, jule::Ptr<_1dda8944a_Data>& _95050_index, jule::Ptr<_2090c55d6_IndexingExpr>& _95065_i) {
	_1dda94ab5_checkIntegerIndexingByData(&(*_self_), _95050_index,_95065_i.get()._field_Token);
	jule::Ptr<_1ddac1e22_Ptr> _95317_ptr = _1ddab7c3c_Ptr(_95035_d.get()._field_Kind.ptr());;
	{
		
		if (_1ddac28e5_IsUnsafe(_95317_ptr.ptr())) {
			_case_begin_1c71e10b3:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _95065_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1dda8be0e_isUnsafe(&(*_self_))))) {
			_case_begin_1c71e1129:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _95065_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1c71e0e92:;
	};
	_95035_d.get()._field_Kind=_95317_ptr.get()._field_Elem;
}



inline void _1dda95357_indexingArr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _96535_d, jule::Ptr<_1dda8944a_Data>& _96550_index, jule::Ptr<_2090c55d6_IndexingExpr>& _96565_i) {
	jule::Ptr<_1ddac14b5_Arr> _96617_arr = _1ddab8479_Arr(_96535_d.get()._field_Kind.ptr());;
	_96535_d.get()._field_Kind=_96617_arr.get()._field_Elem;
	_1dda94ab5_checkIntegerIndexingByData(&(*_self_), _96550_index,_96565_i.get()._field_Token);
	if ((_1dda89d0d_IsConst(_96550_index.ptr()) && (_1dd9b0a36_AsF64(_96550_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96617_arr.get()._field_N)))) {
		_1dda8b4c4_pushErr(&(*_self_), _96565_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1dda95720_indexingSlc(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _97435_d, jule::Ptr<_1dda8944a_Data>& _97450_index, jule::Ptr<_2090c55d6_IndexingExpr>& _97465_i) {
	jule::Ptr<_1ddabe31a_Slc> _97517_slc = _1ddab86dd_Slc(_97435_d.get()._field_Kind.ptr());;
	_97435_d.get()._field_Kind=_97517_slc.get()._field_Elem;
	_1dda94ab5_checkIntegerIndexingByData(&(*_self_), _97450_index,_97465_i.get()._field_Token);
	if ((!(_1dda89d0d_IsConst(_97450_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _97435_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c71e69e2:;
			{
				jule::Ptr<_1dd9bb558_SliceExprModel> _98521_m = _97435_d.get()._field_Model.cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84);;
				jule::F64 _98617_indx = _1dd9b0a36_AsF64(_97450_index.get()._field_Constant.ptr());;
				if ((_98617_indx >= static_cast<jule::F64>(_98521_m.get()._field_Elems.len()))) {
					_1dda8b4c4_pushErr(&(*_self_), _97465_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_97435_d.get()._field_Model=_98521_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98617_indx))];
					_97435_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1c71e6948:;
	};
}



inline void _1dda95ad8_indexingMap(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _99635_d, jule::Ptr<_1dda8944a_Data>& _99650_index, jule::Ptr<_2090c55d6_IndexingExpr>& _99669_i) {
	if ((_99650_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1ddac08c1_Map> _100017_m = _1ddab918e_Map(_99635_d.get()._field_Kind.ptr());;
	_1dda74d3c_assignTypeChecker _100117_atc = _1dda74d3c_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_100017_m.get()._field_Key, ._field_d=_99650_index, ._field_errorToken=_99669_i.get()._field_Token};;
	_1dda75eb4_check(&_100117_atc);
	_99635_d.get()._field_Kind=_100017_m.get()._field_Val;
}



inline void _1dda95ea1_indexingStr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _101135_d, jule::Ptr<_1dda8944a_Data>& _101150_index, jule::Ptr<_2090c55d6_IndexingExpr>& _101165_i) {
	;
	_101135_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_101150_index == nullptr)) {
		return;;
	};
	_1dda94ab5_checkIntegerIndexingByData(&(*_self_), _101150_index,_101165_i.get()._field_Token);
	if ((!(_1dda89d0d_IsConst(_101150_index.ptr())))) {
		_101135_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1dda89d0d_IsConst(_101135_d.ptr())) {
		jule::Ptr<_222e62217_Token> _102717_errorToken = _101165_i.get()._field_Token;;
		jule::I64 _102817_j = _1dd9b055d_AsI64(_101150_index.get()._field_Constant.ptr());;
		jule::Str _102917_s = _1dd9b0085_ReadStr(_101135_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102817_j) >= _102917_s.len())) {
			_1dda8b4c4_pushErr(&(*_self_), _102717_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1dd9b1031_SetU64(_101135_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102917_s[_102817_j])));
		};
	};
}



inline void _1dda96369_toIndexing(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _103834_d, jule::Ptr<_1dda8944a_Data>& _103849_index, jule::Ptr<_2090c55d6_IndexingExpr>& _103868_i) {
	{
		
		if ((_1ddab7c3c_Ptr(_103834_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7201689:;
			{
				_1dda94e8e_indexingPtr(&(*_self_), _103834_d,_103849_index,_103868_i);
				return;;
			}
		}
		else if ((_1ddab8479_Arr(_103834_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7201711:;
			{
				_1dda95357_indexingArr(&(*_self_), _103834_d,_103849_index,_103868_i);
				return;;
			}
		}
		else if ((_1ddab86dd_Slc(_103834_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7201788:;
			{
				_1dda95720_indexingSlc(&(*_self_), _103834_d,_103849_index,_103868_i);
				return;;
			}
		}
		else if ((_1ddab918e_Map(_103834_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7201810:;
			{
				_1dda95ad8_indexingMap(&(*_self_), _103834_d,_103849_index,_103868_i);
				return;;
			}
		}
		else if ((_1ddab7764_Prim(_103834_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7201887:;
			{
				jule::Ptr<_1ddaba129_Prim> _105317_prim = _1ddab7764_Prim(_103834_d.get()._field_Kind.ptr());;
				{
					
					if (_1ddabd35d_IsStr(_105317_prim.ptr())) {
						_case_begin_1c720a61b:;
						{
							_1dda95ea1_indexingStr(&(*_self_), _103834_d,_103849_index,_103868_i);
							return;;
						}
					}
					_match_end_1c720a594:;
				};
			}
		}
		_match_end_1c7201546:;
	};
	_1dda8b4c4_pushErr(&(*_self_), _103868_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_103834_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
}



inline jule::Bool _1dda967dc_pushGenericsFromExprSubIdent(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c1acc_SubIdentExpr>& _106353_sexpr, jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>& _106414_generics, jule::Ptr<_2090bd678_Expr>& _106442_expr) {
	jule::Ptr<_2090b9d6c_SubIdentTypeDecl> _106517_t = jule::new_ptr<_2090b9d6c_SubIdentTypeDecl>();;
	if ((!(_1ddab2ce2_pushSubIdentFromExpr(jule::Any(_106353_sexpr, &__jule_any_type93),_106517_t)))) {
		_1dda8b4c4_pushErr(_self_.ptr(), _106442_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	_106414_generics = jule::alloc_for_append(_106414_generics,1);_106414_generics.__push(jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Kind=jule::Any(_106517_t, &__jule_any_type94)}));;
	return true;;
}



inline jule::Bool _1dda96ba5_pushGenericsFromData(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>& _107445_generics, jule::Ptr<_2090bd678_Expr>& _107473_expr) {
	{
		auto &_match_expr{ _107473_expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c720e4ee:;
			{
				jule::Ptr<_2090c0a43_UnaryExpr> _107721_u = _107473_expr.get()._field_Kind.cast_ptr<_2090c0a43_UnaryExpr>(&__jule_any_type95);;
				{
					auto &_match_expr{ _107721_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1c7211006:;
						{
							jule::Ptr<_2090baed3_PtrTypeDecl> _108025_kind = jule::new_ptr<_2090baed3_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _108125__generics = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, 1LL);;
							_1dda96ba5_pushGenericsFromData(_self_, _108125__generics,_107721_u.get()._field_Expr);
							_108025_kind.get()._field_Elem=_108125__generics[0LL];
							_107445_generics = jule::alloc_for_append(_107445_generics,1);_107445_generics.__push(jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_107473_expr.get()._field_Token, ._field_Kind=jule::Any(_108025_kind, &__jule_any_type79)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1c721106c:;
						{
							jule::Ptr<_2090ba510_SptrTypeDecl> _108925_kind = jule::new_ptr<_2090ba510_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _109025__generics = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, 1LL);;
							_1dda96ba5_pushGenericsFromData(_self_, _109025__generics,_107721_u.get()._field_Expr);
							_108925_kind.get()._field_Elem=_109025__generics[0LL];
							_107445_generics = jule::alloc_for_append(_107445_generics,1);_107445_generics.__push(jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_107473_expr.get()._field_Token, ._field_Kind=jule::Any(_108925_kind, &__jule_any_type80)}));;
						}
					}
					else {
						_case_begin_1c72103e0:;
						{
							_1dda8b4c4_pushErr(_self_.ptr(), _107721_u.get()._field_Op,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c721016a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c720e565:;
			{
				_107445_generics = jule::alloc_for_append(_107445_generics,1);_107445_generics.__push(_107473_expr.get()._field_Kind.cast_ptr<_2090b9157_TypeDecl>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c720e356:;
			{
				jule::Ptr<_2090c1acc_SubIdentExpr> _110421_sexpr = _107473_expr.get()._field_Kind.cast_ptr<_2090c1acc_SubIdentExpr>(&__jule_any_type93);;
				return _1dda967dc_pushGenericsFromExprSubIdent(_self_, _110421_sexpr,_107445_generics,_107473_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c720e3bc:;
			{
				jule::Ptr<_2090c0339_IdentExpr> _110721_ident = _107473_expr.get()._field_Kind.cast_ptr<_2090c0339_IdentExpr>(&__jule_any_type87);;
				_107445_generics = jule::alloc_for_append(_107445_generics,1);_107445_generics.__push(jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_110721_ident.get()._field_Token, ._field_Ident=_110721_ident.get()._field_Ident, ._field_CppLinked=_110721_ident.get()._field_CppLinked, }), &__jule_any_type20)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c720d993:;
			{
				{
					auto &expr = _107473_expr.get()._field_Kind.cast_ptr<_2090be305_TupleExpr>(&__jule_any_type88).get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1c721611b:;
					if (it != expr.end()) {
						jule::Ptr<_2090bd678_Expr> _111625_texpr = *it;
						{
							if ((!(_1dda96ba5_pushGenericsFromData(_self_, _107445_generics,_111625_texpr)))) {
								return false;;
							};
						}
						_iter_next_1c721611b:;
						++it;
						goto _iter_begin_1c721611b;
					}
					_iter_end_1c721611b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c720da09:;
			{
				jule::Ptr<_2090c1659_NsSelectionExpr> _112221_ns = _107473_expr.get()._field_Kind.cast_ptr<_2090c1659_NsSelectionExpr>(&__jule_any_type97);;
				jule::Ptr<_2090b971d_IdentTypeDecl> _112321_decl = jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_112221_ns.get()._field_Ident, ._field_Ident=_112221_ns.get()._field_Ident.get()._field_Kind, });;
				_107445_generics = jule::alloc_for_append(_107445_generics,1);_107445_generics.__push(jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_112321_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2090ba224_NamespaceTypeDecl>(_2090ba224_NamespaceTypeDecl{._field_Idents=_112221_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_112321_decl.get()._field_Token, ._field_Kind=jule::Any(_112321_decl, &__jule_any_type20)})}), &__jule_any_type98)}));;
			}
		}
		else {
			_case_begin_1c720d92c:;
			{
				_1dda8b4c4_pushErr(_self_.ptr(), _107473_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c720d8c7:;
	};
	return true;;
}



inline void _1dda96ee6_evalIdentDeclFromIndexing(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_1dda8944a_Data>& _114450_d, jule::Ptr<_2090c55d6_IndexingExpr>& _114465_i) {
	jule::Ptr<_2090d5c23_StructIns> _114517_s = _1ddab8bb6_Struct(_114450_d.get()._field_Kind.ptr());;
	if ((_114517_s == nullptr)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _114465_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_114450_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		_114450_d=nullptr;
		return;;
	};
	jule::Ptr<_2090b971d_IdentTypeDecl> _115217_decl = nullptr;;
	{
		auto &_match_expr{ _114465_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c721b4ea:;
			{
				jule::Ptr<_2090c0339_IdentExpr> _115521_expr = _114465_i.get()._field_Expr.get()._field_Kind.cast_ptr<_2090c0339_IdentExpr>(&__jule_any_type87);;
				_115217_decl=jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_115521_expr.get()._field_Token, ._field_Ident=_115521_expr.get()._field_Ident, ._field_CppLinked=_115521_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c721c5b7:;
			{
				jule::Ptr<_2090c1659_NsSelectionExpr> _116221_expr = _114465_i.get()._field_Expr.get()._field_Kind.cast_ptr<_2090c1659_NsSelectionExpr>(&__jule_any_type97);;
				_115217_decl=jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_116221_expr.get()._field_Ident, ._field_Ident=_116221_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1c721b907:;
			{
				_1dda8b4c4_pushErr(_self_.ptr(), _114465_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_114450_d=nullptr;
				return;;
			}
		}
		_match_end_1c721b8a2:;
	};
	if ((!(_1dda96ba5_pushGenericsFromData(_self_, _115217_decl.get()._field_Generics,_114465_i.get()._field_Index)))) {
		_114450_d=nullptr;
		return;;
	};
	_114517_s=({ auto _wrap_copy = _1dda9d250_typeChecker(_self_.ptr()); _1ddac7ac6_fromStruct(&_wrap_copy, _115217_decl,_114517_s.get()._field_Decl); });
	if ((_114517_s == nullptr)) {
		_114450_d=nullptr;
		return;;
	};
	_114450_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_114517_s, 0);
}



inline jule::Bool _1dda97458_checkGenericFn(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _118739_f, jule::Ptr<_222e62217_Token>& _118755_et, jule::Any& _118772_model) {
	jule::Bool _118813_ok = _1dda30853_reloadFnInsTypes(_self_.get()._field_s, _118739_f);;
	_118739_f.get()._field_reloaded=true;
	if ((!(_118813_ok))) {
		return false;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _119317_existInstance = _1dd9c9049_appendInstance(_118739_f.get()._field_Decl.ptr(), _118739_f);;
	if ((!(_1dda2e9b7_checkConstraintsFn(_self_.get()._field_s, _118739_f,_118755_et,_119317_existInstance)))) {
		return false;;
	};
	if ((_119317_existInstance != nullptr)) {
		_118739_f=_119317_existInstance;
		_1ddab2aa0_updateModelToGenericIns(_118772_model,_119317_existInstance);
	} else {
		_1dda3c189_checkFnInsCaller(_self_.get()._field_s, _118739_f,_118755_et);
	};
	return true;;
}



inline void _1dda97799_evalFnGenericFromIndexing(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_1dda8944a_Data>& _121250_d, jule::Ptr<_2090c55d6_IndexingExpr>& _121265_i) {
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _121317_generics = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1dda96ba5_pushGenericsFromData(_self_, _121317_generics,_121265_i.get()._field_Index)))) {
		_121250_d=nullptr;
		return;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _121917_f = _1ddab8952_Fn(_121250_d.get()._field_Kind.ptr());;
	jule::I64 _122017_genericsLen = 0LL;;
	if ((_121917_f.get()._field_Decl != nullptr)) {
		_122017_genericsLen=static_cast<jule::I64>(_121917_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1dda27949_checkGenericQuantity(_self_.get()._field_s.ptr(), _122017_genericsLen,static_cast<jule::I64>(_121317_generics.len()),_121265_i.get()._field_Expr.get()._field_Token)))) {
		_121250_d=nullptr;
		return;;
	};
	_121917_f.get()._field_Generics=jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>>::alloc(0LL, _121917_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _121317_generics;
		auto it = expr.begin();
		_iter_begin_1c72268ac:;
		if (it != expr.end()) {
			jule::Ptr<_2090b9157_TypeDecl> _123121_g = *it;
			{
				jule::Ptr<_1dda8944a_Data> _123221_k = _1dda9d55d_evalType(_self_.ptr(), _123121_g);;
				if ((_123221_k == nullptr)) {
					_121250_d=nullptr;
					return;;
				};
				_121917_f.get()._field_Generics = jule::alloc_for_append(_121917_f.get()._field_Generics,1);_121917_f.get()._field_Generics.__push(jule::new_ptr<_1ddab3ba0_InsGeneric>(_1ddab3ba0_InsGeneric{._field_Kind=_123221_k.get()._field_Kind, }));;
			}
			_iter_next_1c72268ac:;
			++it;
			goto _iter_begin_1c72268ac;
		}
		_iter_end_1c72268ac:;
	};
	if (_1dd9cb656_IsBuiltin(_121917_f.ptr())) {
		return;;
	};
	if (_1dda97458_checkGenericFn(_self_, _121917_f,_121265_i.get()._field_Expr.get()._field_Token,_121250_d.get()._field_Model)) {
		_121250_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_121917_f, 1);
	} else {
		_121250_d=nullptr;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1dda97ab8_evalIndexing(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c55d6_IndexingExpr> _125136_i) {
	jule::Ptr<_1ddab53cc_TypeKind> _125217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125217_prefix;
	});;
	jule::Ptr<_1dda8944a_Data> _125617_d = _1ddaa62be_evalExprKind(_self_, _125136_i.get()._field_Expr.get()._field_Kind);;
	if ((_125617_d == nullptr)) {
		return nullptr;;
	};
	if (_125617_d.get()._field_Decl) {
		_1dda96ee6_evalIdentDeclFromIndexing(_self_, _125617_d,_125136_i);
		return _125617_d;;
	};
	if ((_1ddab8952_Fn(_125617_d.get()._field_Kind.ptr()) != nullptr)) {
		_1dda97799_evalFnGenericFromIndexing(_self_, _125617_d,_125136_i);
		return _125617_d;;
	};
	_1dda8944a_Data _127217_old_d = (*(_125617_d));;
	jule::Ptr<_1dda8944a_Data> _127417_index = _1ddaa62be_evalExprKind(_self_, _125136_i.get()._field_Index.get()._field_Kind);;
	if ((_127417_index == nullptr)) {
		return nullptr;;
	};
	_125617_d.get()._field_Decl=false;
	_1dda96369_toIndexing(_self_.ptr(), _125617_d,_127417_index,_125136_i);
	if (_1dda89d0d_IsConst(_125617_d.ptr())) {
		_125617_d.get()._field_Decl=false;
		_125617_d.get()._field_Model=jule::Any(_125617_d.get()._field_Constant, &__jule_any_type48);
	} else if (_125617_d.get()._field_Decl) {
		_125617_d.get()._field_Decl=false;
	} else {
		_125617_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9bb9cb_IndexingExprModel>(_1dd9bb9cb_IndexingExprModel{._field_Token=_125136_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1dda8944a_Data>(_127217_old_d), ._field_Index=_127417_index}), &__jule_any_type46);
	};
	return _125617_d;;
}



inline __jule_tuple_x_1dda8944a_Data__jule_tuple_x_1dda8944a_Data _1dda97dc6_evalSlicingExprs(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c5be1_SlicingExpr>& _130541_s) {
	__jule_tuple_x_1dda8944a_Data__jule_tuple_x_1dda8944a_Data __jule_func_result;
	jule::Ptr<_1ddab53cc_TypeKind> _130617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130617_prefix;
	});;
	jule::Ptr<_1dda8944a_Data> _131017_l = nullptr;;
	jule::Ptr<_1dda8944a_Data> _131117_r = nullptr;;
	if ((_130541_s.get()._field_Start != nullptr)) {
		_131017_l=_1ddaa62be_evalExprKind(_self_, _130541_s.get()._field_Start.get()._field_Kind);
		if ((_131017_l != nullptr)) {
			_1dda94ab5_checkIntegerIndexingByData(_self_.ptr(), _131017_l,_130541_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131017_l=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1dd9ad4c3_NewI64(0LL)});
		_131017_l.get()._field_Model=jule::Any(_131017_l.get()._field_Constant, &__jule_any_type48);
	};
	if ((_130541_s.get()._field_To != nullptr)) {
		_131117_r=_1ddaa62be_evalExprKind(_self_, _130541_s.get()._field_To.get()._field_Kind);
		if ((_131117_r != nullptr)) {
			_1dda94ab5_checkIntegerIndexingByData(_self_.ptr(), _131117_r,_130541_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131017_l;
	__jule_func_result.__jule_result_arg1 = _131117_r;
	return __jule_func_result;;
}



inline void _1dda9814b_slicingArr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _134030_d) {
	jule::Ptr<_1ddab53cc_TypeKind> _134117_elemType = _1ddab8479_Arr(_134030_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_134030_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabe31a_Slc>(_1ddabe31a_Slc{._field_Elem=_134117_elemType}), 8)});
	_134030_d.get()._field_Lvalue=false;
	_134030_d.get()._field_Mutable=(_134030_d.get()._field_Mutable || (!(_1ddab6a4e_Mutable(_134117_elemType.ptr()))));
}



inline void _1dda98514_slicingStr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _135530_d, jule::Ptr<_1dda8944a_Data>& _135541_l, jule::Ptr<_1dda8944a_Data>& _135552_r) {
	_135530_d.get()._field_Lvalue=false;
	_135530_d.get()._field_Mutable=true;
	if ((!(_1dda89d0d_IsConst(_135530_d.ptr())))) {
		return;;
	};
	if (((_135541_l == nullptr) || (_135552_r == nullptr))) {
		_135530_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1dda89d0d_IsConst(_135541_l.ptr()) && _1dda89d0d_IsConst(_135552_r.ptr()))) {
		jule::I64 _136817_left = _1dd9b055d_AsI64(_135541_l.get()._field_Constant.ptr());;
		if ((_136817_left < 0LL)) {
			return;;
		};
		jule::Str _137317_s = _1dd9b0085_ReadStr(_135530_d.get()._field_Constant.ptr());;
		jule::I64 _137421_right = 0LL;;
		if ((_135552_r == nullptr)) {
			_137421_right=static_cast<jule::I64>(static_cast<jule::I64>(_137317_s.len()));
		} else {
			_137421_right=static_cast<jule::I64>(_1dd9b055d_AsI64(_135552_r.get()._field_Constant.ptr()));
		};
		if ((_136817_left > _137421_right)) {
			return;;
		};
		_1dd9b152b_SetStr(_135530_d.get()._field_Constant.ptr(), _137317_s.slice(_136817_left,_137421_right));
		_135530_d.get()._field_Decl=true;
	} else {
		_135530_d.get()._field_Constant=nullptr;
	};
}



inline void _1dda98976_checkSlicing(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data>& _139136_d, jule::Ptr<_1dda8944a_Data>& _139147_l, jule::Ptr<_1dda8944a_Data>& _139158_r, jule::Ptr<_2090c5be1_SlicingExpr>& _139169_s) {
	{
		
		if ((_1ddab8479_Arr(_139136_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c723d9a1:;
			{
				_1dda9814b_slicingArr(&(*_self_), _139136_d);
				return;;
			}
		}
		else if ((_1ddab86dd_Slc(_139136_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c723da28:;
			{
				return;;
			}
		}
		else if ((_1ddab7764_Prim(_139136_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c723daa0:;
			{
				jule::Ptr<_1ddaba129_Prim> _139917_prim = _1ddab7764_Prim(_139136_d.get()._field_Kind.ptr());;
				{
					
					if (_1ddabd35d_IsStr(_139917_prim.ptr())) {
						_case_begin_1c7241036:;
						{
							_1dda98514_slicingStr(&(*_self_), _139136_d,_139147_l,_139158_r);
							return;;
						}
					}
					_match_end_1c7240e8c:;
				};
			}
		}
		_match_end_1c723d880:;
	};
	_1dda8b4c4_pushErr(&(*_self_), _139169_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_139136_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
}



inline jule::Ptr<_1dda8944a_Data> _1dda98c84_evalSlicing(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c5be1_SlicingExpr> _141035_s) {
	jule::Ptr<_1dda8944a_Data> _141117_d = _1ddaa62be_evalExprKind(_self_, _141035_s.get()._field_Expr.get()._field_Kind);;
	if ((_141117_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _141618_l;;
	jule::Ptr<_1dda8944a_Data> _141625_r;;
	({
		__jule_tuple_x_1dda8944a_Data__jule_tuple_x_1dda8944a_Data __jule_assign_result = _1dda97dc6_evalSlicingExprs(_self_, _141035_s);
		_141618_l = __jule_assign_result.__jule_result_arg0;
		_141625_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141618_l == nullptr)) {
		return _141117_d;;
	};
	_141117_d.get()._field_Decl=false;
	_1dda98976_checkSlicing(_self_.ptr(), _141117_d,_141618_l,_141625_r,_141035_s);
	if (_1dda89d0d_IsConst(_141117_d.ptr())) {
		_141117_d.get()._field_Decl=false;
		_141117_d.get()._field_Model=jule::Any(_141117_d.get()._field_Constant, &__jule_any_type48);
	} else if (_141117_d.get()._field_Decl) {
		_141117_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1dd9bcbec_SlicingExprModel> _143421_model = jule::new_ptr<_1dd9bcbec_SlicingExprModel>(_1dd9bcbec_SlicingExprModel{._field_Token=_141035_s.get()._field_Token, ._field_Expr=_141117_d.get()._field_Model, ._field_Left=_141618_l.get()._field_Model, });;
		if ((_141625_r != nullptr)) {
			_143421_model.get()._field_Right=_141625_r.get()._field_Model;
		};
		_141117_d.get()._field_Model=jule::Any(_143421_model, &__jule_any_type99);
	};
	return _141117_d;;
}



inline void _1dda9914c_castPtr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _144730_t, jule::Ptr<_1dda8944a_Data> _144748_d, jule::Ptr<_222e62217_Token> _144758_errorToken) {
	_144748_d.get()._field_Constant=nullptr;
	jule::Ptr<_1ddabd8ad_Sptr> _144913_sptr = _1ddab79c8_Sptr(_144748_d.get()._field_Kind.ptr());;
	if ((_144913_sptr != nullptr)) {
		if ((!(_1ddab5ad6_Equal(_1ddab7c3c_Ptr(_144730_t.ptr()).get()._field_Elem, _144913_sptr.get()._field_Elem)))) {
			_1dda8b4c4_pushErr(&(*_self_), _144758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_144748_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_144730_t.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((!(_1dda8be0e_isUnsafe(&(*_self_))))) {
		_1dda8b4c4_pushErr(&(*_self_), _144758_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _146213_prim = _1ddab7764_Prim(_144748_d.get()._field_Kind.ptr());;
	if (((_1ddab7c3c_Ptr(_144748_d.get()._field_Kind.ptr()) == nullptr) && ((_146213_prim == nullptr) || (!(_1dd9ac47d_IsInt(_1ddaba48c_Str(_146213_prim.ptr()))))))) {
		_1dda8b4c4_pushErr(&(*_self_), _144758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_144748_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_144730_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _1dda99515_castStruct(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _146833_t, jule::Ptr<_1dda8944a_Data> _146851_d, jule::Ptr<_222e62217_Token> _146861_errorToken) {
	_146851_d.get()._field_Constant=nullptr;
	jule::Ptr<_1dd9d9521_Trait> _147017_tr = _1ddab8e2a_Trait(_146851_d.get()._field_Kind.ptr());;
	if ((_147017_tr == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _146861_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_146851_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_146833_t.ptr()), &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_2090d5c23_StructIns> _147617_s = _1ddab8bb6_Struct(_146833_t.ptr());;
	_1c724dab0_pushReference(&(*_self_), _147617_s);
	if ((!(_20909a8a8_IsImplements(_147617_s.get()._field_Decl.ptr(), _147017_tr)))) {
		_1dda8b4c4_pushErr(&(*_self_), _146861_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_146851_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_146833_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _1dda998cd_castRef(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _148430_t, jule::Ptr<_1dda8944a_Data> _148448_d, jule::Ptr<_222e62217_Token> _148458_errorToken) {
	_148448_d.get()._field_Constant=nullptr;
	jule::Ptr<_1ddabd8ad_Sptr> _148617_sptr = _1ddab79c8_Sptr(_148430_t.ptr());;
	jule::Ptr<_1ddac1e22_Ptr> _148817_ptr = _1ddab7c3c_Ptr(_148448_d.get()._field_Kind.ptr());;
	if (((_148817_ptr != nullptr) && _1ddab5ad6_Equal(_148617_sptr.get()._field_Elem, _148817_ptr.get()._field_Elem))) {
		if ((!(_1dda8be0e_isUnsafe(&(*_self_))))) {
			_1dda8b4c4_pushErr(&(*_self_), _148458_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ddab8bb6_Struct(_148617_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1dda99515_castStruct(&(*_self_), _148617_sptr.get()._field_Elem,_148448_d,_148458_errorToken);
		return;;
	};
	_1dda8b4c4_pushErr(&(*_self_), _148458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_148448_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_148430_t.ptr()), &__jule_any_type6)}));
}



inline void _1dda99c96_castSlc(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _150630_t, jule::Ptr<_1dda8944a_Data> _150648_d, jule::Ptr<_222e62217_Token> _150658_errorToken) {
	_150648_d.get()._field_Constant=nullptr;
	if ((_1ddab7ea1_Enum(_150648_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1ddab7764_Prim(_1ddab7ea1_Enum(_150648_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd35d_IsStr(_1ddab7764_Prim(_1ddab7ea1_Enum(_150648_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1dda8b4c4_pushErr(&(*_self_), _150658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_150648_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_150630_t.ptr()), &__jule_any_type6)}));
			return;;
		};
	} else if (((_1ddab7764_Prim(_150648_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd35d_IsStr(_1ddab7764_Prim(_150648_d.get()._field_Kind.ptr()).ptr()))))) {
		_1dda8b4c4_pushErr(&(*_self_), _150658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_150648_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_150630_t.ptr()), &__jule_any_type6)}));
		return;;
	};
	_150630_t=_1ddab86dd_Slc(_150630_t.ptr()).get()._field_Elem;
	jule::Ptr<_1ddaba129_Prim> _151913_prim = _1ddab7764_Prim(_150630_t.ptr());;
	if (((_151913_prim == nullptr) || ((!(_1ddabb933_IsU8(_151913_prim.ptr()))) && (!(_1ddabb45a_IsI32(_151913_prim.ptr())))))) {
		_1dda8b4c4_pushErr(&(*_self_), _150658_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_150648_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_150630_t.ptr()), &__jule_any_type6)}));
	};
}



inline void _1dda9a0b5_castStr(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _152530_d, jule::Ptr<_222e62217_Token> _152540_errorToken) {
	_152530_d.get()._field_Constant=nullptr;
	if ((_1ddab7ea1_Enum(_152530_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dd9db666_Enum> _152821_e = _1ddab7ea1_Enum(_152530_d.get()._field_Kind.ptr());;
		if (((_1ddab7764_Prim(_152821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1ddabd35d_IsStr(_1ddab7764_Prim(_152821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1ddab7764_Prim(_152530_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ddaba129_Prim> _153517_prim = _1ddab7764_Prim(_152530_d.get()._field_Kind.ptr());;
		if (((!(_1ddabb933_IsU8(_153517_prim.ptr()))) && (!(_1ddabb45a_IsI32(_153517_prim.ptr()))))) {
			_1dda8b4c4_pushErr(&(*_self_), _152540_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_1ddab57c8_Str(_152530_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((_1ddab86dd_Slc(_152530_d.get()._field_Kind.ptr()) == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _152540_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_1ddab57c8_Str(_152530_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _154717_t = _1ddab86dd_Slc(_152530_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1ddaba129_Prim> _154813_prim = _1ddab7764_Prim(_154717_t.ptr());;
	if (((_154813_prim == nullptr) || ((!(_1ddabb933_IsU8(_154813_prim.ptr()))) && (!(_1ddabb45a_IsI32(_154813_prim.ptr())))))) {
		_1dda8b4c4_pushErr(&(*_self_), _152540_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_1ddab57c8_Str(_152530_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline void _1dda9a47d_castInt(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _155430_t, jule::Ptr<_1dda8944a_Data> _155448_d, jule::Ptr<_222e62217_Token> _155458_errorToken) {
	if (_1dda89d0d_IsConst(_155448_d.ptr())) {
		jule::Ptr<_1ddaba129_Prim> _155617_prim = _1ddab7764_Prim(_155430_t.ptr());;
		{
			
			if (_1dd9abdea_IsSigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1c72688ee:;
				{
					_1dd9b0cab_SetI64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dd9ac1d6_IsUnsigInt(_155617_prim.get()._field_Kind)) {
				_case_begin_1c7268976:;
				{
					_1dd9b1031_SetU64(_155448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_155448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c7268844:;
		};
	} else {
		_155448_d.get()._field_Constant=nullptr;
	};
	if ((_1ddab7ea1_Enum(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dd9db666_Enum> _156817_e = _1ddab7ea1_Enum(_155448_d.get()._field_Kind.ptr());;
		if (_1dd9aca44_IsNum(_1ddab57c8_Str(_156817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ddab79c8_Sptr(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ddaba129_Prim> _157517_prim = _1ddab7764_Prim(_155430_t.ptr());;
		if ((!(_1ddabcd85_IsUintptr(_157517_prim.ptr())))) {
			_1dda8b4c4_pushErr(&(*_self_), _155458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_155448_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_155430_t.ptr()), &__jule_any_type6)}));
		};
		return;;
	};
	if ((_1ddab7c3c_Ptr(_155448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ddaba129_Prim> _158217_prim = _1ddab7764_Prim(_155430_t.ptr());;
		if (_1ddabcd85_IsUintptr(_158217_prim.ptr())) {
		} else if ((!(_1dda8be0e_isUnsafe(&(*_self_))))) {
			_1dda8b4c4_pushErr(&(*_self_), _155458_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _159113_prim = _1ddab7764_Prim(_155448_d.get()._field_Kind.ptr());;
	if (((_159113_prim != nullptr) && _1dd9aca44_IsNum(_1ddaba48c_Str(_159113_prim.ptr())))) {
		return;;
	};
	_1dda8b4c4_pushErr(&(*_self_), _155458_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_155448_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_155430_t.ptr()), &__jule_any_type6)}));
}



inline void _1dda9a846_castNum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _159930_t, jule::Ptr<_1dda8944a_Data> _159948_d, jule::Ptr<_222e62217_Token> _159958_errorToken) {
	if (_1dda89d0d_IsConst(_159948_d.ptr())) {
		jule::Ptr<_1ddaba129_Prim> _160117_prim = _1ddab7764_Prim(_159930_t.ptr());;
		{
			
			if (_1dd9ac79c_IsFloat(_160117_prim.get()._field_Kind)) {
				_case_begin_1c727262d:;
				{
					_1dd9b17a1_SetF64(_159948_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1dd9b0a36_AsF64(_159948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dd9abdea_IsSigInt(_160117_prim.get()._field_Kind)) {
				_case_begin_1c72726a5:;
				{
					_1dd9b0cab_SetI64(_159948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_159948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1dd9ac1d6_IsUnsigInt(_160117_prim.get()._field_Kind)) {
				_case_begin_1c727272c:;
				{
					_1dd9b1031_SetU64(_159948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_159948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1c7272562:;
		};
	} else {
		_159948_d.get()._field_Constant=nullptr;
	};
	if ((_1ddab7ea1_Enum(_159948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dd9db666_Enum> _161517_e = _1ddab7ea1_Enum(_159948_d.get()._field_Kind.ptr());;
		if (_1dd9aca44_IsNum(_1ddab57c8_Str(_161517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ddaba129_Prim> _162113_prim = _1ddab7764_Prim(_159948_d.get()._field_Kind.ptr());;
	if (((_162113_prim != nullptr) && _1dd9aca44_IsNum(_1ddaba48c_Str(_162113_prim.ptr())))) {
		return;;
	};
	_1dda8b4c4_pushErr(&(*_self_), _159958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_159948_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_159930_t.ptr()), &__jule_any_type6)}));
}



inline void _1dda9ac0e_castPrim(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _162931_t, jule::Ptr<_1dda8944a_Data> _162949_d, jule::Ptr<_222e62217_Token> _162959_errorToken) {
	jule::Ptr<_1ddaba129_Prim> _163013_prim = _1ddab7764_Prim(_162931_t.ptr());;
	{
		
		if (_1ddabd5c2_IsAny(_163013_prim.ptr())) {
			_case_begin_1c727827c:;
			{
				_162949_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1ddabd35d_IsStr(_163013_prim.ptr())) {
			_case_begin_1c72787ee:;
			{
				_1dda9a0b5_castStr(&(*_self_), _162949_d,_162959_errorToken);
			}
		}
		else if (_1dd9ac47d_IsInt(_1ddaba48c_Str(_163013_prim.ptr()))) {
			_case_begin_1c7278865:;
			{
				_1dda9a47d_castInt(&(*_self_), _162931_t,_162949_d,_162959_errorToken);
			}
		}
		else if (_1dd9aca44_IsNum(_1ddaba48c_Str(_163013_prim.ptr()))) {
			_case_begin_1c72788cb:;
			{
				_1dda9a846_castNum(&(*_self_), _162931_t,_162949_d,_162959_errorToken);
			}
		}
		else {
			_case_begin_1c7278788:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _162959_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_162931_t.ptr()), &__jule_any_type6)}));
			}
		}
		_match_end_1c7278722:;
	};
}



inline void _1dda9b02d_castConstant(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _164636_t, jule::Ptr<_1dda8944a_Data>& _164655_d) {
	if (((_164655_d == nullptr) || (!(_1dda89d0d_IsConst(_164655_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _165013_prim = _1ddab7764_Prim(_164636_t.ptr());;
	_1ddab2594_castConstByType(_165013_prim.get()._field_Kind,_164655_d);
	_164655_d.get()._field_Model=jule::Any(_164655_d.get()._field_Constant, &__jule_any_type48);
}



inline void _1dda9b3e6_castTypeEnum(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _165536_t, jule::Ptr<_1dda8944a_Data>& _165555_d, jule::Ptr<_222e62217_Token>& _165570_errorToken) {
	jule::I64 _165613_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1dda2d8d9_checkTypeCompatibility((*_self_)._field_s, _165555_d.get()._field_Kind,_165536_t,_165570_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_165613_n);
		_1dda8b4c4_pushErr(&(*_self_), _165570_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_165555_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_165536_t.ptr()), &__jule_any_type6)}));
	};
	_165555_d.get()._field_Constant=nullptr;
}



inline void _1dda9b7ae_castTypeEnumT(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _166437_t, jule::Ptr<_1dda8944a_Data>& _166456_d, jule::Ptr<_222e62217_Token>& _166471_errorToken) {
	jule::I64 _166513_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1dda2d8d9_checkTypeCompatibility((*_self_)._field_s, _166437_t,_166456_d.get()._field_Kind,_166471_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_166513_n);
		_1dda8b4c4_pushErr(&(*_self_), _166471_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_166456_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_166437_t.ptr()), &__jule_any_type6)}));
	};
	_166456_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9bc10_evalCastByTypeNData(_1dda8aeb8_Eval* _self_, jule::Ptr<_1ddab53cc_TypeKind> _167342_t, jule::Ptr<_1dda8944a_Data> _167360_d, jule::Ptr<_222e62217_Token> _167374_errorToken) {
	if (((_167360_d != nullptr) && _167360_d.get()._field_Decl)) {
		_1dda8b4c4_pushErr(&(*_self_), _167374_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1dda89835_IsNil(_167360_d.ptr())) {
			_case_begin_1c7284453:;
			{
				if ((!(_1ddab6cb3_NilCompatible(_167342_t.ptr())))) {
					_1dda8b4c4_pushErr(&(*_self_), _167374_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_167342_t.ptr()), &__jule_any_type6)}));
				};
				_167360_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1ddab7764_Prim(_167360_d.get()._field_Kind.ptr()) != nullptr) && _1ddabd5c2_IsAny(_1ddab7764_Prim(_167360_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c72841cd:;
			{
				if ((_1ddab7ea1_Enum(_167342_t.ptr()) != nullptr)) {
					_1dda8b4c4_pushErr(&(*_self_), _167374_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1ddab8215_TypeEnum(_167342_t.ptr()) != nullptr)) {
					_1dda8b4c4_pushErr(&(*_self_), _167374_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_167360_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1ddab8215_TypeEnum(_167360_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7284244:;
			{
				_1dda9b3e6_castTypeEnum(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab8215_TypeEnum(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c72842aa:;
			{
				_1dda9b7ae_castTypeEnumT(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab7c3c_Ptr(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c7284e59:;
			{
				_1dda9914c_castPtr(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab79c8_Sptr(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c7284ec0:;
			{
				_1dda998cd_castRef(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab86dd_Slc(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c7285036:;
			{
				_1dda99c96_castSlc(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab8bb6_Struct(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c728509c:;
			{
				_1dda99515_castStruct(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
			}
		}
		else if ((_1ddab7764_Prim(_167342_t.ptr()) != nullptr)) {
			_case_begin_1c7285113:;
			{
				_1dda9ac0e_castPrim(&(*_self_), _167342_t,_167360_d,_167374_errorToken);
				_1dda9b02d_castConstant(&(*_self_), _167342_t,_167360_d);
			}
		}
		else {
			_case_begin_1c72840ac:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _167374_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_167342_t.ptr()), &__jule_any_type6)}));
				_167360_d=nullptr;
			}
		}
		_match_end_1c7284046:;
	};
	if ((_167360_d == nullptr)) {
		return nullptr;;
	};
	_167360_d.get()._field_Mutable=(_167360_d.get()._field_Mutable || ((!(_1ddab6a4e_Mutable(_167360_d.get()._field_Kind.ptr()))) && _1ddab6a4e_Mutable(_167342_t.ptr())));
	_167360_d.get()._field_Lvalue=false;
	_167360_d.get()._field_Decl=false;
	if (((_1ddab7ea1_Enum(_167360_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ddab5ad6_Equal(_1ddab7ea1_Enum(_167360_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167342_t))))) {
		_1ddab1a5a_applyCastKind(_167360_d,_167342_t);
		_167360_d.get()._field_Model.cast_ptr<_1dd9ba7ee_CastingExprModel>(&__jule_any_type101).get()._field_Token=_167374_errorToken;
	} else {
		_167360_d.get()._field_Kind=_167342_t;
	};
	_167360_d.get()._field_untyped=false;
	if (_1dda89d0d_IsConst(_167360_d.ptr())) {
		_167360_d.get()._field_Constant.get()._field_Kind=_1ddab7764_Prim(_167342_t.ptr()).get()._field_Kind;
	};
	return _167360_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9c161_evalCastT(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_1ddab53cc_TypeKind>& _173834_t, jule::Ptr<_2090bd678_Expr>& _173853_e, jule::Ptr<_222e62217_Token>& _173868_et) {
	jule::Ptr<_1ddab53cc_TypeKind> _173917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_173917_prefix;
	});;
	if ((_1ddab86dd_Slc(_173834_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _173853_e.get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type102) {
				_case_begin_1c7292d02:;
				{
					_self_.get()._field_prefix=_173834_t;
				}
			}
			_match_end_1c7292b48:;
		};
	};
	jule::Ptr<_1dda8944a_Data> _174817_d = _1ddaa62be_evalExprKind(_self_, _173853_e.get()._field_Kind);;
	if (((_174817_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174817_d;;
	};
	return _1dda9bc10_evalCastByTypeNData(_self_.ptr(), _173834_t,_174817_d,_173868_et);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9c46e_evalCast(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c12a2_CastExpr> _175532_c) {
	jule::Ptr<_1ddab97aa_TypeSymbol> _175617_t = _1dd9ce901_buildType(_175532_c.get()._field_Kind);;
	jule::Bool _175713_ok = _1dda2b80a_checkType(_self_.get()._field_s, _175617_t,_self_.get()._field_lookup);;
	if ((!(_175713_ok))) {
		return nullptr;;
	};
	return _1dda9c161_evalCastT(_self_, _175617_t.get()._field_Kind,_175532_c.get()._field_Expr,_175532_c.get()._field_Kind.get()._field_Token);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9c77c_evalNsSelection(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090c1659_NsSelectionExpr> _176434_s) {
	jule::Str _176513_path = _1ddacd318_buildLinkPathByTokens(_176434_s.get()._field_Ns);;
	jule::Ptr<_1dda15937_ImportInfo> _176617_imp = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddace814_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>([=](jule::Ptr<_1dda15937_ImportInfo> _176652_imp) mutable -> jule::Bool {
		if (((_176434_s.get()._field_Ns.len() == 1LL) && (_176652_imp.get()._field_Alias == _176513_path))) {
			return true;;
		};
		return ((_176652_imp.get()._field_LinkPath == _176513_path) && _1dda18594_isAccessibleViaSelection(_176652_imp.ptr()));;
	}));;
	if ((_176617_imp == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _176434_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_176513_path, &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Trait<_1ddad134e_Lookup> _177817_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ddad134e_Lookup>(_176617_imp, 1);
	;
	_1dda8bb9a_disallowBuiltin(&(*_self_));
	jule::Any _178317_def = _1dda8e4d8_getDef(&(*_self_), _176434_s.get()._field_Ident.get()._field_Kind,false);;
	_1dda8b9be_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_177817_lookup;
	jule::Ptr<_1dda8944a_Data> _178617_d = _1dda92ec0_evalDef(&(*_self_), _178317_def,_176434_s.get()._field_Ident);;
	return _178617_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9cbcd_evalStructLitExplicit(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090d5c23_StructIns> _179045_s, jule::Slice<jule::Ptr<_2090bd678_Expr>> _179113_exprs, jule::Ptr<_222e62217_Token> _179133_errorToken) {
	jule::Bool _179213_ok = _1dda27949_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_179045_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_179045_s.get()._field_Generics.len()),_179133_errorToken);;
	if ((!(_179213_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179045_s.get()._field_Decl))) {
		_1dda8b4c4_pushErr(_self_.ptr(), _179133_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_179045_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
	};
	_1c724dab0_pushReference(_self_.ptr(), _179045_s);
	_1dda913ca_checkDeprecated(_self_.ptr(), _179045_s.get()._field_Decl.get()._field_Directives,_179133_errorToken);
	_1dda7dae3_structLitChecker _180517_slc = _1dda7dae3_structLitChecker{._field_e=_self_, ._field_errorToken=_179133_errorToken, ._field_s=_179045_s, };;
	_1dda80188_check(&_180517_slc, _179113_exprs);
	jule::Ptr<_1dda8944a_Data> _181217_d = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_179045_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1dd9b9e91_StructLitExprModel>(_1dd9b9e91_StructLitExprModel{._field_Strct=_179045_s, ._field_Args=_180517_slc._field_args}), &__jule_any_type103), });;
	if (_179045_s.get()._field_Decl.get()._field_CppLinked) {
		_181217_d.get()._field_Kind.get()._field_CppIdent=_179045_s.get()._field_Decl.get()._field_Ident;
	};
	return _181217_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9cedb_evalStructLit(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c3837_StructLit> _182837_lit) {
	jule::Ptr<_1ddab97aa_TypeSymbol> _182917_t = _1dd9ce901_buildType(_182837_lit.get()._field_Kind);;
	jule::Bool _183013_ok = _1dda2b80a_checkType(_self_.get()._field_s, _182917_t,_self_.get()._field_lookup);;
	if ((!(_183013_ok))) {
		return nullptr;;
	};
	jule::Ptr<_2090d5c23_StructIns> _183517_s = _1ddab8bb6_Struct(_182917_t.get()._field_Kind.ptr());;
	if ((_183517_s == nullptr)) {
		if ((_1ddab79c8_Sptr(_182917_t.get()._field_Kind.ptr()) != nullptr)) {
			_183517_s=_1ddab8bb6_Struct(_1ddab79c8_Sptr(_182917_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183517_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1dda8b4c4_pushErr(_self_.ptr(), _182837_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1dda8944a_Data> _184817_d = _1dda9cbcd_evalStructLitExplicit(_self_, _183517_s,_182837_lit.get()._field_Exprs,_182837_lit.get()._field_Kind.get()._field_Token);;
	if ((_1ddab79c8_Sptr(_182917_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1dd9b9e91_StructLitExprModel> _185021_model = _184817_d.get()._field_Model.cast_ptr<_1dd9b9e91_StructLitExprModel>(&__jule_any_type103);;
		_1ddab041b_makeStructLitAlloc(_184817_d,_185021_model);
	};
	return _184817_d;;
}



inline _1ddac3c48_typeChecker _1dda9d250_typeChecker(_1dda8aeb8_Eval* _self_) {
	return _1dda2a6e9_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9d55d_evalType(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090b9157_TypeDecl> _186031_t) {
	jule::Ptr<_1ddab97aa_TypeSymbol> _186117_tk = _1dd9ce901_buildType(_186031_t);;
	jule::Bool _186213_ok = _1dda2b80a_checkType((*_self_)._field_s, _186117_tk,(*_self_)._field_lookup);;
	if ((!(_186213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_186117_tk.get()._field_Kind, ._field_Model=jule::Any(_186117_tk.get()._field_Kind, &__jule_any_type91), ._field_Decl=true, });;
}



inline void _1dda9d87c_callTypeFn(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c265a_FnCallExpr>& _187335_fc, jule::Ptr<_1dda8944a_Data>& _187357_d) {
	if ((_187335_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _187335_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type6)}));
	} else if ((_187335_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _187335_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_187335_fc.get()._field_IsCo) {
		_1dda8b4c4_pushErr(_self_.ptr(), _187335_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_187357_d=nullptr;
		return;;
	} else if ((_187335_fc.get()._field_Exception != nullptr)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _187335_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_187357_d=nullptr;
		return;;
	};
	if ((_187335_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_2090bd678_Expr> _188921_arg = _187335_fc.get()._field_Args[0LL];;
		_187357_d=_1dda9c161_evalCastT(_self_, _187357_d.get()._field_Kind,_188921_arg,_188921_arg.get()._field_Token);
		return;;
	};
	if ((_187357_d != nullptr)) {
		_187357_d.get()._field_Decl=false;
	};
}



inline void _1dda9db9b_callBuiltinFn(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c265a_FnCallExpr>& _189938_fc, jule::Ptr<_1dda8944a_Data>& _189960_d) {
	_189960_d=_1ddab8952_Fn(_189960_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_189938_fc,_189960_d);
	if ((_189960_d == nullptr)) {
		return;;
	};
	_189960_d.get()._field_Mutable=true;
}



inline void _1dda9dedc_checkFnOfConcurrentCall(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _190743_f, jule::Ptr<_222e62217_Token> _190754_errorToken) {
	if (_1dda8be0e_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _190743_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c72b2bbd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> &_191116_p = *it;
			{
				if (_1dd9c640e_IsSelf(_191116_p.get()._field_Decl.ptr())) {
					if ((!(_1dd9c6673_IsRef(_191116_p.get()._field_Decl.ptr())))) {
						_1dda8b4c4_pushErr(&(*_self_), _190754_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_191116_p.get()._field_Decl.get()._field_Reference) {
					_1dda8b4c4_pushErr(&(*_self_), _190754_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c72b2bbd:;
			++it;
			goto _iter_begin_1c72b2bbd;
		}
		_iter_end_1c72b2bbd:;
	};
}



inline void _1dda9e3d8_processExceptionalHandler(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _192649_f, jule::Ptr<_2090c265a_FnCallExpr>& _192665_fc, jule::Ptr<_1dda8944a_Data>& _192687_d) {
	jule::Bool _192713_resultNeeded = ((!(_1dd9c7a81_IsVoid(_192649_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1dd9edc94_scopeChecker> _192817_csc = nullptr;;
	jule::Ptr<_1dd9e7232_Scope> _192917_ch = nullptr;;
	jule::Ptr<_1dd9bb1a1_FnCallExprModel> _193117_model = _192687_d.get()._field_Model.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1dd9edc94_scopeChecker> _193517_sc = (*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0);;
	_192817_csc=_1dda0dd09_newChildChecker(_193517_sc);
	if (_192713_resultNeeded) {
		_192817_csc.get()._field_result=_192649_f;
	};
	_192917_ch=_1dda0368e_getChild(_193517_sc.ptr());
	_192665_fc.get()._field_Exception.get()._field_Parent=_193517_sc.get()._field_tree;
	_192817_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192817_csc.get()._field_table.get()._field_Vars,1);_192817_csc.get()._field_table.get()._field_Vars.__push(_1ddab075c_buildErrorVar(_192917_ch,_192665_fc));;
	_1dda03a57_checkChildSsc(_193517_sc, _192665_fc.get()._field_Exception,_192917_ch,_192817_csc);
	_193117_model.get()._field_Assigned=_192713_resultNeeded;
	_193117_model.get()._field_Except=_192917_ch;
	if ((_192713_resultNeeded && (_192817_csc.get()._field_result != nullptr))) {
		_1dda8b4c4_pushErr(&(*_self_), _192665_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1dda9e718_callFn(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c265a_FnCallExpr>& _195331_fc, jule::Ptr<_1dda8944a_Data>& _195353_d) {
	jule::Ptr<_1dd9ca2c0_FnIns> _195417_f = _1ddab8952_Fn(_195353_d.get()._field_Kind.ptr());;
	if (_1dd9cb656_IsBuiltin(_195417_f.ptr())) {
		_1dda9db9b_callBuiltinFn(_self_, _195331_fc,_195353_d);
		return;;
	};
	if ((_1dda8c173_isGlobal(_self_.ptr()) && _195417_f.get()._field_Decl.get()._field_Exceptional)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1dda8b7e3_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_195353_d=nullptr;
		return;;
	};
	if (((!(_1dd9c7ce5_IsMethod(_195417_f.get()._field_Decl.ptr()))) && _1ddacc46b_hasDirective(_195417_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_195353_d=nullptr;
		return;;
	};
	if (((((!(_195353_d.get()._field_Mutable)) && _1dd9c7ce5_IsMethod(_195417_f.get()._field_Decl.ptr())) && (!(_195417_f.get()._field_Decl.get()._field_Statically))) && _195417_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1dda8be0e_isUnsafe(_self_.ptr()))) && _195417_f.get()._field_Decl.get()._field_Unsafety)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _197817_dynamicAnnotation = (((_195417_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195417_f.get()._field_Generics.len() == 0LL)) && (_195417_f.get()._field_Params.len() > 0LL));;
	if (_197817_dynamicAnnotation) {
		_195417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>>::alloc(_195417_f.get()._field_Decl.get()._field_Generics.len(), _195417_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195417_f.get()._field_Generics.len() != _195417_f.get()._field_Decl.get()._field_Generics.len())) {
		_1dda27949_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195417_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_195417_f.get()._field_Generics.len()),_195331_fc.get()._field_Token);
		_195353_d=nullptr;
		return;;
	};
	jule::Ptr<_1dda1da83_Sema> _198717_old = _self_.get()._field_s;;
	if ((_195417_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195417_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198717_old != _self_.get()._field_s)) {
			_198717_old.get()._field_errors=jule::append(_198717_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198717_old;
	});;
	_1dda7b1d9_fnCallArgChecker _200017_fcac = _1dda7b1d9_fnCallArgChecker{._field_e=_self_, ._field_args=_195331_fc.get()._field_Args, ._field_errorToken=_195331_fc.get()._field_Token, ._field_dynamicAnnotation=_197817_dynamicAnnotation, };;
	if ((!(_197817_dynamicAnnotation))) {
		if ((!(_195417_f.get()._field_reloaded))) {
			jule::Bool _200921_ok = _1dda30853_reloadFnInsTypes(_self_.get()._field_s, _195417_f);;
			_195417_f.get()._field_reloaded=true;
			if ((!(_200921_ok))) {
				_195353_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1dd9ca2c0_FnIns> _201621_existInstance = _1dd9c9049_appendInstance(_195417_f.get()._field_Decl.ptr(), _195417_f);;
		if ((_201621_existInstance != nullptr)) {
			_195417_f=_201621_existInstance;
		};
	} else if ((!(_1dda2e247_buildFnNonGenericTypeKinds(_self_.get()._field_s, _195417_f,_200017_fcac._field_ignored)))) {
		_195353_d=nullptr;
		return;;
	};
	_200017_fcac._field_f=_195417_f;
	jule::Bool _202717_ok = false;;
	if ((_195417_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1dda1da83_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1dda1da83_Sema> _1___jule_assign_arg = _198717_old;
			_198717_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202717_ok=_1dda7d5a4_check(&_200017_fcac);
		({
			jule::Ptr<_1dda1da83_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1dda1da83_Sema> _1___jule_assign_arg = _198717_old;
			_198717_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202717_ok=_1dda7d5a4_check(&_200017_fcac);
	};
	if (_197817_dynamicAnnotation) {
		if ((!(_202717_ok))) {
			_195353_d=nullptr;
			return;;
		};
		if ((!(_1dda97458_checkGenericFn(_self_, _195417_f,_195331_fc.get()._field_Token,_195353_d.get()._field_Model)))) {
			_195353_d=nullptr;
			return;;
		};
	};
	jule::Any _204717_callModel = _195353_d.get()._field_Model;;
	if (_1dd9c7a81_IsVoid(_195417_f.get()._field_Decl.ptr())) {
		_195353_d=_1ddab1c58_buildVoidData();
	} else {
		_195353_d.get()._field_Kind=_195417_f.get()._field_Result;
		_195353_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1dd9bb1a1_FnCallExprModel> _205617_model = jule::new_ptr<_1dd9bb1a1_FnCallExprModel>(_1dd9bb1a1_FnCallExprModel{._field_Token=_195331_fc.get()._field_Token, ._field_Func=_195417_f, ._field_IsCo=_195331_fc.get()._field_IsCo, ._field_Expr=_204717_callModel, ._field_Args=_200017_fcac._field_argModels, });;
	_195353_d.get()._field_Model=jule::Any(_205617_model, &__jule_any_type35);
	_195353_d.get()._field_Mutable=true;
	if (_195417_f.get()._field_Decl.get()._field_Exceptional) {
		if (_195331_fc.get()._field_IsCo) {
			_1dda21745_pushErr(_self_.get()._field_s.ptr(), _195331_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_1dda2699d_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_2090c29bd_Unhandled(_195331_fc.ptr())) {
				_case_begin_1c72d09aa:;
				{
					_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1dda8b7e3_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_2090c2c32_Ignored(_195331_fc.ptr())) {
				_case_begin_1c72d0900:;
				{
					goto _match_end_1c72ce987;
				}
			}
			else {
				_case_begin_1c72ce9ed:;
				{
					_1dda9e3d8_processExceptionalHandler(_self_.ptr(), _195417_f,_195331_fc,_195353_d);
				}
			}
			_match_end_1c72ce987:;
		};
	} else if ((!(_2090c29bd_Unhandled(_195331_fc.ptr())))) {
		_1dda8b4c4_pushErr(_self_.ptr(), _195331_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_195331_fc.get()._field_IsCo) {
		_1dda9dedc_checkFnOfConcurrentCall(_self_.ptr(), _205617_model.get()._field_Func,_195331_fc.get()._field_Token);
	};
}



inline jule::Ptr<_1dda8944a_Data> _1dda9ea26_evalFnCall(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c265a_FnCallExpr> _209134_fc) {
	jule::Ptr<_1ddab53cc_TypeKind> _209217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209217_prefix;
	});;
	{
		auto &_match_expr{ _209134_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c72d3a24:;
			{
				if ((_209134_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1ddb71e5b_builtinCallerError(_self_,_209134_fc);;
				};
			}
		}
		_match_end_1c72d39be:;
	};
	jule::Ptr<_1dda8944a_Data> _210517_d = _1ddaa62be_evalExprKind(_self_, _209134_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210517_d == nullptr)) {
		return nullptr;;
	};
	if (_210517_d.get()._field_Decl) {
		_1dda9d87c_callTypeFn(_self_, _209134_fc,_210517_d);
		return _210517_d;;
	};
	if ((_1ddab8952_Fn(_210517_d.get()._field_Kind.ptr()) == nullptr)) {
		_1dda8b4c4_pushErr(_self_.ptr(), _209134_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1dda9e718_callFn(_self_, _209134_fc,_210517_d);
	return _210517_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1dda9edcd_evalEnumStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9db666_Enum> _212437_enm, jule::Ptr<_222e62217_Token> _212449_ident) {
	jule::Ptr<_1dda8944a_Data> _212517_d = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_212437_enm, 3)}), });;
	jule::Ptr<_1dd9dab71_EnumItem> _213117_item = _1dd9dc227_FindItem(_212437_enm.ptr(), _212449_ident.get()._field_Kind);;
	if ((_213117_item == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _212449_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_212437_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_212449_ident.get()._field_Kind, &__jule_any_type6)}));
	} else {
		_212517_d.get()._field_Constant=jule::new_ptr<_1dd9ad050_Const>((*(_213117_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212517_d.get()._field_Model=jule::Any(_212517_d.get()._field_Constant, &__jule_any_type48);
		_1ddab22db_applyCastModelByEnum(_212517_d,_212437_enm);
	};
	return _212517_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa0285_evalTypeEnumStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dd9dcc61_TypeEnum> _214341_enm, jule::Ptr<_222e62217_Token> _214357_ident) {
	jule::Ptr<_1dd9dc69a_TypeEnumItem> _214417_item = _1dd9dd79a_FindItem(_214341_enm.ptr(), _214357_ident.get()._field_Kind);;
	if ((_214417_item == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _214357_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_214341_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_214357_ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		
		if ((_1ddab7ea1_Enum(_214417_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c72dba82:;
			{
				return _1dda8ea6b__evalEnum(&(*_self_), _1ddab7ea1_Enum(_214417_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1ddab8215_TypeEnum(_214417_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c72dc247:;
			{
				return _1dda90231__evalTypeEnum(&(*_self_), _1ddab8215_TypeEnum(_214417_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1ddab8bb6_Struct(_214417_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c72db5a9:;
			{
				return _1dda908e6__evalStruct(&(*_self_), _1ddab8bb6_Struct(_214417_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1c72da223:;
			{
				jule::Ptr<_1dda8944a_Data> _215721_d = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_214417_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215721_d.get()._field_Model=jule::Any(_215721_d.get()._field_Kind, &__jule_any_type91);
				return _215721_d;;
			}
		}
		_match_end_1c72db422:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa063c_evalStructStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_2090d5c23_StructIns> _216639_s, jule::Ptr<_222e62217_Token> _216654_ident) {
	jule::Ptr<_1dda8944a_Data> _216717_d = jule::new_ptr<_1dda8944a_Data>();;
	;
	jule::Ptr<_1dd9c761e_Fn> _217117_method = _2090b0d52_FindMethod(_216639_s.ptr(), _216654_ident.get()._field_Kind,true);;
	if ((_217117_method != nullptr)) {
		if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _217117_method.get()._field_Public,_217117_method.get()._field_Token)))) {
			_1dda8b4c4_pushErr(&(*_self_), _216654_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_216654_ident.get()._field_Kind, &__jule_any_type6)}));
			_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dd9ca2c0_FnIns> _217821_ins = _1dd9c8c6e_instance(_217117_method);;
		_217821_ins.get()._field_Owner=_216639_s;
		_1c7192aae_pushReference(&(*_self_), _217821_ins);
		_216717_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9bde84_StructStaticIdentExprModel>(_1dd9bde84_StructStaticIdentExprModel{._field_Structure=_216639_s, ._field_Expr=_216717_d.get()._field_Model, ._field_Method=_217821_ins}), &__jule_any_type104);
		_216717_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_217821_ins, 1)});
		return _216717_d;;
	};
	jule::Ptr<_1dda418db_Var> _219217_sttc = _20909dcda_FindStatic(_216639_s.ptr(), _216654_ident.get()._field_Kind);;
	if ((_219217_sttc != nullptr)) {
		return _1dda92761_evalVar(&(*_self_), _219217_sttc,_216654_ident);;
	};
	_1dda8b4c4_pushErr(&(*_self_), _216654_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_216639_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6),jule::Any(_216654_ident.get()._field_Kind, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa0a8d_evalTraitSubIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _220140_d, jule::Ptr<_1dd9d9521_Trait> _220154_trt, jule::Ptr<_222e62217_Token> _220171_ident) {
	jule::Ptr<_1dd9c761e_Fn> _220217_f = _1dd9da39b_FindMethod(_220154_trt.ptr(), _220171_ident.get()._field_Kind);;
	if ((_220217_f == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _220171_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_220154_trt.get()._field_Ident, &__jule_any_type6),jule::Any(_220171_ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1dd9c8c6e_instance(_220217_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1dd9bd23b_TraitSubIdentExprModel>(_1dd9bd23b_TraitSubIdentExprModel{._field_Token=_220171_ident, ._field_Expr=_220140_d.get()._field_Model, ._field_Method=_220217_f, ._field_Trt=_220154_trt}), &__jule_any_type71), });;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa1088_evalStructSubIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _222041_d, jule::Ptr<_2090d5c23_StructIns> _222055_s, jule::Ptr<_2090c1acc_SubIdentExpr> _222074_si, jule::Bool _222093_ref) {
	jule::Ptr<_2090d5a36_FieldIns> _222117_f = _209092cbd_FindField(_222055_s.ptr(), _222074_si.get()._field_Ident.get()._field_Kind);;
	if ((_222117_f != nullptr)) {
		if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _222117_f.get()._field_Decl.get()._field_Public,_222117_f.get()._field_Decl.get()._field_Token)))) {
			_1dda8b4c4_pushErr(&(*_self_), _222074_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_222117_f.get()._field_Decl.get()._field_Ident, &__jule_any_type6)}));
			_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _222821_model = jule::new_ptr<_1dd9bdadd_StructSubIdentExprModel>(_1dd9bdadd_StructSubIdentExprModel{._field_Token=_222074_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1dda8944a_Data>((*(_222041_d))), ._field_ExprKind=_222041_d.get()._field_Kind, ._field_Field=_222117_f, ._field_Owner=_222055_s});;
		_222041_d.get()._field_Model=jule::Any(_222821_model, &__jule_any_type72);
		_222041_d.get()._field_Kind=_222117_f.get()._field_Kind;
		_222041_d.get()._field_Lvalue=true;
		if ((_222117_f.get()._field_Decl.get()._field_Mutable && (!(_222041_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1c72ecbe7:;
					{
						jule::Ptr<_1dd9edc94_scopeChecker> _224325_scope = _1dda01dda_getRoot((*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0));;
						_222041_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222055_s));
					}
				}
				_match_end_1c72ecb92:;
			};
		};
		return _222041_d;;
	};
	;
	jule::Ptr<_1dd9c761e_Fn> _225217_m = _2090b0d52_FindMethod(_222055_s.ptr(), _222074_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_225217_m == nullptr)) {
		_1dda8b4c4_pushErr(&(*_self_), _222074_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_222055_s.get()._field_Decl.get()._field_Ident, &__jule_any_type6),jule::Any(_222074_si.get()._field_Ident.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _225217_m.get()._field_Public,_225217_m.get()._field_Token)))) {
		_1dda8b4c4_pushErr(&(*_self_), _222074_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type6)}));
		_1dda8b7e3_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1dd9c6673_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222093_ref)))) {
		_1dda8b4c4_pushErr(&(*_self_), _222074_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1dda913ca_checkDeprecated(&(*_self_), _225217_m.get()._field_Directives,_222074_si.get()._field_Ident);
	jule::Ptr<_1dd9ca2c0_FnIns> _226817_ins = _1dd9c8c6e_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222055_s;
	_1c7192aae_pushReference(&(*_self_), _226817_ins);
	jule::Ptr<_1dda8944a_Data> _227117_model = jule::new_ptr<_1dda8944a_Data>((*(_222041_d)));;
	_222041_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9bdadd_StructSubIdentExprModel>(_1dd9bdadd_StructSubIdentExprModel{._field_Token=_222074_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_ExprKind=_222041_d.get()._field_Kind, ._field_Method=_226817_ins, ._field_Owner=_222055_s}), &__jule_any_type72);
	_222041_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_226817_ins, 1)});
	return _222041_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa1440_evalSliceSubIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _228340_d, jule::Ptr<_222e62217_Token> _228354_ident) {
	{
		auto &_match_expr{ _228354_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c73061d9:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>::make({jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb71b1a_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228340_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1dd9beb99_CommonSubIdentExprModel>(_1dd9beb99_CommonSubIdentExprModel{._field_ExprKind=_228340_d.get()._field_Kind, ._field_Expr=_228340_d.get()._field_Model, ._field_Token=_228354_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type74), });;
			}
		}
		else {
			_case_begin_1c73064b4:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _228354_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_228340_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_228354_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7306272:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa17e7_evalArraySubIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _232040_d, jule::Ptr<_222e62217_Token> _232054_ident) {
	{
		auto &_match_expr{ _232054_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1c730777e:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>::make({jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb71b1a_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232040_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1dd9beb99_CommonSubIdentExprModel>(_1dd9beb99_CommonSubIdentExprModel{._field_ExprKind=_232040_d.get()._field_Kind, ._field_Expr=_232040_d.get()._field_Model, ._field_Token=_232054_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type74), });;
			}
		}
		else {
			_case_begin_1c73097d6:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _232054_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_232040_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_232054_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c730974d:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa1b05_evalIntTypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _235736_ident) {
	;
	{
		auto &_match_expr{ _235736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c730db3c:;
			{
				jule::Ptr<_1dd9ad050_Const> _236121_c = static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dd9a709e_Max(jule::Str("int", 3)))));;
				_236121_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236121_c, &__jule_any_type48), ._field_Constant=_236121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c730dba3:;
			{
				jule::Ptr<_1dd9ad050_Const> _236921_c = static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dd9a6cb3_Min(jule::Str("int", 3)))));;
				_236921_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236921_c, &__jule_any_type48), ._field_Constant=_236921_c});;
			}
		}
		else {
			_case_begin_1c730cdc2:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _235736_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type6),jule::Any(_235736_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c730cc18:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa1e13_evalUintTypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _238237_ident) {
	;
	{
		auto &_match_expr{ _238237_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c73118ba:;
			{
				jule::Ptr<_1dd9ad050_Const> _238621_c = static__1dd9ad76a_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1dd9a709e_Max(jule::Str("uint", 4)))));;
				_238621_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238621_c, &__jule_any_type48), ._field_Constant=_238621_c});;
			}
		}
		else {
			_case_begin_1c7311ab8:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _238237_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type6),jule::Any(_238237_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7311a63:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa2221_evalI8TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _239935_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239935_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c731589c:;
			{
				jule::Ptr<_1dd9ad050_Const> _240521_c = static__1dd9ad4c3_NewI64(127LL);;
				_240521_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240521_c, &__jule_any_type48), ._field_Constant=_240521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c7315913:;
			{
				jule::Ptr<_1dd9ad050_Const> _241321_c = static__1dd9ad4c3_NewI64(-128LL);;
				_241321_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241321_c, &__jule_any_type48), ._field_Constant=_241321_c});;
			}
		}
		else {
			_case_begin_1c7314ba9:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _239935_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type6),jule::Any(_239935_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7314abb:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa252e_evalI16TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _242636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c731984b:;
			{
				jule::Ptr<_1dd9ad050_Const> _243221_c = static__1dd9ad4c3_NewI64(32767LL);;
				_243221_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243221_c, &__jule_any_type48), ._field_Constant=_243221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c73198b2:;
			{
				jule::Ptr<_1dd9ad050_Const> _244021_c = static__1dd9ad4c3_NewI64(-32768LL);;
				_244021_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_244021_c, &__jule_any_type48), ._field_Constant=_244021_c});;
			}
		}
		else {
			_case_begin_1c7318b58:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _242636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type6),jule::Any(_242636_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7318a6a:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa283c_evalI32TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _245336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c731d7ea:;
			{
				jule::Ptr<_1dd9ad050_Const> _245921_c = static__1dd9ad4c3_NewI64(2147483647LL);;
				_245921_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245921_c, &__jule_any_type48), ._field_Constant=_245921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c731d861:;
			{
				jule::Ptr<_1dd9ad050_Const> _246721_c = static__1dd9ad4c3_NewI64(-2147483648LL);;
				_246721_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246721_c, &__jule_any_type48), ._field_Constant=_246721_c});;
			}
		}
		else {
			_case_begin_1c731cb07:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _245336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type6),jule::Any(_245336_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c731ca19:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa2b4a_evalI64TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _248036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c7322799:;
			{
				jule::Ptr<_1dd9ad050_Const> _248621_c = static__1dd9ad4c3_NewI64(jule::MAX_I64);;
				_248621_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248621_c, &__jule_any_type48), ._field_Constant=_248621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c7322810:;
			{
				jule::Ptr<_1dd9ad050_Const> _249421_c = static__1dd9ad4c3_NewI64(jule::MIN_I64);;
				_249421_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249421_c, &__jule_any_type48), ._field_Constant=_249421_c});;
			}
		}
		else {
			_case_begin_1c7321aa6:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _248036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type6),jule::Any(_248036_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c73219b8:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa2e58_evalU8TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _250735_ident) {
	;
	;
	{
		auto &_match_expr{ _250735_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c7325923:;
			{
				jule::Ptr<_1dd9ad050_Const> _251221_c = static__1dd9ad76a_NewU64(255LLU);;
				_251221_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251221_c, &__jule_any_type48), ._field_Constant=_251221_c});;
			}
		}
		else {
			_case_begin_1c7325291:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _250735_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type6),jule::Any(_250735_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c73254e4:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa3266_evalU16TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _252536_ident) {
	;
	;
	{
		auto &_match_expr{ _252536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c7328470:;
			{
				jule::Ptr<_1dd9ad050_Const> _253021_c = static__1dd9ad76a_NewU64(65535LLU);;
				_253021_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_253021_c, &__jule_any_type48), ._field_Constant=_253021_c});;
			}
		}
		else {
			_case_begin_1c7327c55:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _252536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type6),jule::Any(_252536_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7327eb9:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa3574_evalU32TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _254336_ident) {
	;
	;
	{
		auto &_match_expr{ _254336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c732ae45:;
			{
				jule::Ptr<_1dd9ad050_Const> _254821_c = static__1dd9ad76a_NewU64(4294967295LLU);;
				_254821_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254821_c, &__jule_any_type48), ._field_Constant=_254821_c});;
			}
		}
		else {
			_case_begin_1c732a72a:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _254336_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type6),jule::Any(_254336_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c732a98e:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa3882_evalU64TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _256136_ident) {
	;
	;
	{
		auto &_match_expr{ _256136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c732d91a:;
			{
				jule::Ptr<_1dd9ad050_Const> _256621_c = static__1dd9ad76a_NewU64(jule::MAX_U64);;
				_256621_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256621_c, &__jule_any_type48), ._field_Constant=_256621_c});;
			}
		}
		else {
			_case_begin_1c732d200:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _256136_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type6),jule::Any(_256136_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c732d464:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa3b90_evalF32TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _257936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c733249b:;
			{
				jule::Ptr<_1dd9ad050_Const> _258621_c = static__1dd9ae051_NewF64(340282346638528860000000000000000000000.0);;
				_258621_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258621_c, &__jule_any_type48), ._field_Constant=_258621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c7332512:;
			{
				jule::Ptr<_1dd9ad050_Const> _259421_c = static__1dd9ae051_NewF64(-340282346638528860000000000000000000000.0);;
				_259421_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259421_c, &__jule_any_type48), ._field_Constant=_259421_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c7332347:;
			{
				jule::Ptr<_1dd9ad050_Const> _260221_c = static__1dd9ae051_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260221_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260221_c, &__jule_any_type48), ._field_Constant=_260221_c});;
			}
		}
		else {
			_case_begin_1c733170e:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _257936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type100),jule::Any(_257936_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c73316a9:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa3e9d_evalF64TypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_222e62217_Token> _261536_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1c733787a:;
			{
				jule::Ptr<_1dd9ad050_Const> _262221_c = static__1dd9ae051_NewF64(jule::MAX_F64);;
				_262221_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262221_c, &__jule_any_type48), ._field_Constant=_262221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1c73378e1:;
			{
				jule::Ptr<_1dd9ad050_Const> _263021_c = static__1dd9ae051_NewF64(jule::MIN_F64);;
				_263021_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263021_c, &__jule_any_type48), ._field_Constant=_263021_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1c7337726:;
			{
				jule::Ptr<_1dd9ad050_Const> _263821_c = static__1dd9ae051_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263821_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263821_c, &__jule_any_type48), ._field_Constant=_263821_c});;
			}
		}
		else {
			_case_begin_1c7336add:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _261536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type100),jule::Any(_261536_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7336a88:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa4355_evalPrimStatic(_1dda8aeb8_Eval* _self_, jule::Str _265133_kind, jule::Ptr<_222e62217_Token> _265144_ident) {
	{
		auto &_match_expr{ _265133_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c733a7e5:;
			{
				return _1ddaa1b05_evalIntTypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c733bc69:;
			{
				return _1ddaa1e13_evalUintTypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c733bcd0:;
			{
				return _1ddaa2221_evalI8TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c733b1db:;
			{
				return _1ddaa252e_evalI16TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c733b252:;
			{
				return _1ddaa283c_evalI32TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c733b2b8:;
			{
				return _1ddaa2b4a_evalI64TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c733b32e:;
			{
				return _1ddaa2e58_evalU8TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c733bd46:;
			{
				return _1ddaa3266_evalU16TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c733bdac:;
			{
				return _1ddaa3574_evalU32TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c733be23:;
			{
				return _1ddaa3882_evalU64TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c733be89:;
			{
				return _1ddaa3b90_evalF32TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c733c000:;
			{
				return _1ddaa3e9d_evalF64TypeStatic(&(*_self_), _265144_ident);;
			}
		}
		else {
			_case_begin_1c7336c97:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _265144_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_265133_kind, &__jule_any_type6),jule::Any(_265144_ident.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7337a56:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa470c_evalTypeStatic(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _268337_d, jule::Ptr<_2090c1acc_SubIdentExpr> _268351_si) {
	{
		
		if ((_1ddab7764_Prim(_268337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c734205a:;
			{
				return _1ddaa4355_evalPrimStatic(&(*_self_), _1ddaba48c_Str(_1ddab7764_Prim(_268337_d.get()._field_Kind.ptr()).ptr()),_268351_si.get()._field_Ident);;
			}
		}
		else if ((_1ddab7ea1_Enum(_268337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c73420c1:;
			{
				return _1dda9edcd_evalEnumStatic(&(*_self_), _1ddab7ea1_Enum(_268337_d.get()._field_Kind.ptr()),_268351_si.get()._field_Ident);;
			}
		}
		else if ((_1ddab8215_TypeEnum(_268337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7341db2:;
			{
				return _1ddaa0285_evalTypeEnumStatic(&(*_self_), _1ddab8215_TypeEnum(_268337_d.get()._field_Kind.ptr()),_268351_si.get()._field_Ident);;
			}
		}
		else if ((_1ddab8bb6_Struct(_268337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7341e28:;
			{
				return _1ddaa063c_evalStructStatic(&(*_self_), _1ddab8bb6_Struct(_268337_d.get()._field_Kind.ptr()),_268351_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1c734106a:;
			{
				_1dda8b4c4_pushErr(&(*_self_), _268351_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_268337_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_1c7340e9e:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa4ab4_evalObjSubIdent(_1dda8aeb8_Eval* _self_, jule::Ptr<_1dda8944a_Data> _269938_d, jule::Ptr<_2090c1acc_SubIdentExpr> _269952_si) {
	if (_222e649ab_IsIgnoreIdent(_269952_si.get()._field_Ident.get()._field_Kind)) {
		_1dda8b4c4_pushErr(&(*_self_), _269952_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _270517_kind = _269938_d.get()._field_Kind;;
	{
		
		if ((_1ddab7c3c_Ptr(_269938_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7346b64:;
			{
				jule::Ptr<_1ddac1e22_Ptr> _270817_ptr = _1ddab7c3c_Ptr(_269938_d.get()._field_Kind.ptr());;
				if (_1ddac28e5_IsUnsafe(_270817_ptr.ptr())) {
					goto _match_end_1c7346a43;
				};
				if (((!(_269952_si.get()._field_IsSelf)) && (!(_1dda8be0e_isUnsafe(&(*_self_)))))) {
					_1dda8b4c4_pushErr(&(*_self_), _269952_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_270517_kind=_1ddab7c3c_Ptr(_269938_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1ddab79c8_Sptr(_269938_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7346bca:;
			{
				_270517_kind=_1ddab79c8_Sptr(_269938_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1c7346a43:;
	};
	{
		
		if ((_1ddab8e2a_Trait(_269938_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7349628:;
			{
				return _1ddaa0a8d_evalTraitSubIdent(&(*_self_), _269938_d,_1ddab8e2a_Trait(_269938_d.get()._field_Kind.ptr()),_269952_si.get()._field_Ident);;
			}
		}
		else if ((_1ddab8bb6_Struct(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1c73496a0:;
			{
				jule::Ptr<_2090d5c23_StructIns> _272417_s = _1ddab8bb6_Struct(_270517_kind.ptr());;
				if (_1ddab11ec_isInstancedStruct(_272417_s)) {
					jule::Bool _272625_usedReferenceElem = (_1ddab79c8_Sptr(_269938_d.get()._field_Kind.ptr()) != nullptr);;
					return _1ddaa1088_evalStructSubIdent(&(*_self_), _269938_d,_1ddab8bb6_Struct(_270517_kind.ptr()),_269952_si,_272625_usedReferenceElem);;
				};
			}
		}
		else if ((_1ddab86dd_Slc(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1c7349727:;
			{
				return _1ddaa1440_evalSliceSubIdent(&(*_self_), _269938_d,_269952_si.get()._field_Ident);;
			}
		}
		else if ((_1ddab8479_Arr(_270517_kind.ptr()) != nullptr)) {
			_case_begin_1c734979e:;
			{
				return _1ddaa17e7_evalArraySubIdent(&(*_self_), _269938_d,_269952_si.get()._field_Ident);;
			}
		}
		_match_end_1c734954b:;
	};
	_1dda8b4c4_pushErr(&(*_self_), _269952_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_269938_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa4dc2_evalSubIdent(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c1acc_SubIdentExpr> _273836_si) {
	jule::Ptr<_1ddab53cc_TypeKind> _273917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273917_prefix;
	});;
	jule::Ptr<_1dda8944a_Data> _274317_d = _1ddaa62be_evalExprKind(_self_, _273836_si.get()._field_Expr.get()._field_Kind);;
	if ((_274317_d == nullptr)) {
		return nullptr;;
	};
	if (_274317_d.get()._field_Decl) {
		return _1ddaa470c_evalTypeStatic(_self_.ptr(), _274317_d,_273836_si);;
	};
	return _1ddaa4ab4_evalObjSubIdent(_self_.ptr(), _274317_d,_273836_si);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa51d0_evalTuple(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090be305_TupleExpr> _275533_tup) {
	jule::Ptr<_1ddabed98_Tuple> _275617_tupT = jule::new_ptr<_1ddabed98_Tuple>();;
	_275617_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>::alloc(0LL, _275533_tup.get()._field_Expr.len());
	jule::Ptr<_1dd9bee96_TupleExprModel> _275917_model = jule::new_ptr<_1dd9bee96_TupleExprModel>(_1dd9bee96_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1dda8944a_Data>>::alloc(0LL, _275533_tup.get()._field_Expr.len())});;
	jule::Bool _276317_ok = true;;
	{
		auto &expr = _275533_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1c7353676:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _276421_expr = *it;
			{
				jule::Ptr<_1dda8944a_Data> _276521_d = _1ddaa62be_evalExprKind(_self_, _276421_expr.get()._field_Kind);;
				if ((_276521_d == nullptr)) {
					_276317_ok=false;
					goto _iter_next_1c7353676;
				};
				_275617_tupT.get()._field_Types = jule::alloc_for_append(_275617_tupT.get()._field_Types,1);_275617_tupT.get()._field_Types.__push(_276521_d.get()._field_Kind);;
				_275917_model.get()._field_Datas = jule::alloc_for_append(_275917_model.get()._field_Datas,1);_275917_model.get()._field_Datas.__push(_276521_d);;
			}
			_iter_next_1c7353676:;
			++it;
			goto _iter_begin_1c7353676;
		}
		_iter_end_1c7353676:;
	};
	if ((!(_276317_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_275617_tupT, 9)}), ._field_Model=jule::Any(_275917_model, &__jule_any_type89), });;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa5587_evalMap(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_1ddac08c1_Map> _278431_m, jule::Ptr<_2090c3caa_BraceLit> _278444_lit) {
	jule::Ptr<_1dd9bc6ad_MapExprModel> _278517_model = jule::new_ptr<_1dd9bc6ad_MapExprModel>(_1dd9bc6ad_MapExprModel{._field_KeyKind=_278431_m.get()._field_Key, ._field_ValKind=_278431_m.get()._field_Val, });;
	{
		auto &expr = _278444_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1c73567ab:;
		if (it != expr.end()) {
			jule::Ptr<_2090bd678_Expr> _279021_expr = *it;
			{
				{
					auto &_match_expr{ _279021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1c7356ec6:;
						{
							goto _match_end_1c7357081;
						}
					}
					else {
						_case_begin_1c7357218:;
						{
							_1dda8b4c4_pushErr(_self_.ptr(), _278444_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c7357081:;
				};
				jule::Ptr<_2090c4580_KeyValPair> _280021_pair = _279021_expr.get()._field_Kind.cast_ptr<_2090c4580_KeyValPair>(&__jule_any_type86);;
				jule::Ptr<_1dda8944a_Data> _280221_key = _1ddaa62be_evalExprKind(_self_, _280021_pair.get()._field_Key.get()._field_Kind);;
				if ((_280221_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1dda8944a_Data> _280721_val = _1ddaa62be_evalExprKind(_self_, _280021_pair.get()._field_Val.get()._field_Kind);;
				if ((_280721_val == nullptr)) {
					return nullptr;;
				};
				_1dda2d488_checkAssignType(_self_.get()._field_s, false,_278431_m.get()._field_Key,_280221_key,_280021_pair.get()._field_Colon);
				_1dda2d488_checkAssignType(_self_.get()._field_s, false,_278431_m.get()._field_Val,_280721_val,_280021_pair.get()._field_Colon);
				_278517_model.get()._field_Entries = jule::alloc_for_append(_278517_model.get()._field_Entries,1);_278517_model.get()._field_Entries.__push(jule::new_ptr<_1dd9bc23a_KeyValPairExprModel>(_1dd9bc23a_KeyValPairExprModel{._field_Key=_280221_key.get()._field_Model, ._field_Val=_280721_val.get()._field_Model}));;
			}
			_iter_next_1c73567ab:;
			++it;
			goto _iter_begin_1c73567ab;
		}
		_iter_end_1c73567ab:;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_278431_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278517_model, &__jule_any_type105), });;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa5895_evalBraceLit(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c3caa_BraceLit> _282836_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1c735c4c6:;
			{
				_1dda8b4c4_pushErr(_self_.ptr(), _282836_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ddab918e_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c735c53c:;
			{
				return _1ddaa5587_evalMap(_self_, _1ddab918e_Map(_self_.get()._field_prefix.ptr()),_282836_lit);;
			}
		}
		else if ((_1ddab8bb6_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c735c350:;
			{
				return _1dda9cbcd_evalStructLitExplicit(_self_, _1ddab8bb6_Struct(_self_.get()._field_prefix.ptr()),_282836_lit.get()._field_Exprs,_282836_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1c735b827:;
			{
				_1dda8b4c4_pushErr(_self_.ptr(), _282836_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c735b75b:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa5ba3_evalAnonFn(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090caad6_FnDecl> _284334_decl) {
	_1ddac3c48_typeChecker _284417_tc = _1ddac3c48_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1dd9ca2c0_FnIns> _284917_ins = _1ddaca58a_buildFn(&_284417_tc, _284334_decl);;
	if ((_284917_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c73611de:;
			{
				jule::Ptr<_1dd9edc94_scopeChecker> _285521_sc = _self_.get()._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0);;
				jule::Ptr<_1dd9edc94_scopeChecker> _285621_scc = _1dda0dd09_newChildChecker(_285521_sc);;
				_285621_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1dd9eca0c_scopeLabel>>>(nullptr);
				_285621_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1dd9ece80_scopeGoto>>>(nullptr);
				_285621_scc.get()._field_owner=nullptr;
				_285621_scc.get()._field_childIndex=0LL;
				_285621_scc.get()._field_it=0LLU;
				_285621_scc.get()._field_cse=0LLU;
				_285621_scc.get()._field_owner=_284917_ins;
				_1dda3bd6a_checkFnInsSc(_self_.get()._field_s.ptr(), _284917_ins,_285621_scc);
			}
		}
		else {
			_case_begin_1c7361013:;
			{
				_1dda3c40e_checkFnIns(_self_.get()._field_s, _284917_ins);
			}
		}
		_match_end_1c7360c5a:;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_284917_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1dd9bbd83_AnonFnExprModel>(_1dd9bbd83_AnonFnExprModel{._field_Func=_284917_ins, ._field_Global=_1dda8c173_isGlobal(_self_.ptr())}), &__jule_any_type106), });;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa5eb1_evalBinop(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090c2050_BinopExpr> _287833_op) {
	_1ddaa8aeb_binaryEval _287917_bs = static__1ddaa91c3_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1ddaba129_Prim> _288217_prim = _1ddab7764_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288217_prim == nullptr) || (!(_1dd9aca44_IsNum(_1ddaba48c_Str(_288217_prim.ptr())))))) {
			jule::Ptr<_1ddab53cc_TypeKind> _288425_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288425_prefix;
			});;
			return _1ddaae67e_eval(&_287917_bs, _287833_op);;
		};
	};
	return _1ddaae67e_eval(&_287917_bs, _287833_op);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa62be_evalExprKind(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Any _289336_kind) {
	{
		auto &_match_expr{ _289336_kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c736a3b3:;
			{
				jule::Ptr<_2090bd964_RangeExpr> _289621_e = _289336_kind.cast_ptr<_2090bd964_RangeExpr>(&__jule_any_type107);;
				return _1ddaa62be_evalExprKind(_self_, _289621_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c736d262:;
			{
				return _1dda8dd23_evalLit(_self_.ptr(), _289336_kind.cast_ptr<_2090be6ac_LitExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c736d2c8:;
			{
				return _1dda932cd_evalIdent(_self_.ptr(), _289336_kind.cast_ptr<_2090c0339_IdentExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c736cccd:;
			{
				return _1dda935db_evalUnary(_self_, _289336_kind.cast_ptr<_2090c0a43_UnaryExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c736cd44:;
			{
				return _1dda938e9_evalVariadic(_self_, _289336_kind.cast_ptr<_2090c0dea_VariadicExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c736cdbb:;
			{
				return _1dda93c07_evalUnsafe(_self_, _289336_kind.cast_ptr<_2090bedb6_UnsafeExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c736ce43:;
			{
				return _1dda94774_evalSliceExpr(_self_, _289336_kind.cast_ptr<_2090c4c67_SliceExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c736d350:;
			{
				return _1dda97ab8_evalIndexing(_self_, _289336_kind.cast_ptr<_2090c55d6_IndexingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c736d3c7:;
			{
				return _1dda98c84_evalSlicing(_self_, _289336_kind.cast_ptr<_2090c5be1_SlicingExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c736d44e:;
			{
				return _1dda9c46e_evalCast(_self_, _289336_kind.cast_ptr<_2090c12a2_CastExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c736d4c6:;
			{
				return _1dda9c77c_evalNsSelection(_self_.ptr(), _289336_kind.cast_ptr<_2090c1659_NsSelectionExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c736d54d:;
			{
				return _1dda9cedb_evalStructLit(_self_, _289336_kind.cast_ptr<_2090c3837_StructLit>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c736d5c5:;
			{
				return _1dda9d55d_evalType(_self_.ptr(), _289336_kind.cast_ptr<_2090b9157_TypeDecl>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c736d64c:;
			{
				return _1dda9ea26_evalFnCall(_self_, _289336_kind.cast_ptr<_2090c265a_FnCallExpr>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c736d6c4:;
			{
				return _1ddaa4dc2_evalSubIdent(_self_, _289336_kind.cast_ptr<_2090c1acc_SubIdentExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c736d74b:;
			{
				return _1ddaa51d0_evalTuple(_self_, _289336_kind.cast_ptr<_2090be305_TupleExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c736d7c3:;
			{
				return _1ddaa5895_evalBraceLit(_self_, _289336_kind.cast_ptr<_2090c3caa_BraceLit>(&__jule_any_type115));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c736d84a:;
			{
				return _1ddaa5ba3_evalAnonFn(_self_, _289336_kind.cast_ptr<_2090caad6_FnDecl>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c736d8c2:;
			{
				return _1ddaa5eb1_evalBinop(_self_, _289336_kind.cast_ptr<_2090c2050_BinopExpr>(&__jule_any_type116));;
			}
		}
		else {
			_case_begin_1c736cbce:;
			{
				return nullptr;;
			}
		}
		_match_end_1c736cb79:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa65cc_eval(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090bd678_Expr> _294128_expr) {
	jule::Ptr<_1dda8944a_Data> _294217_d = _1ddaa62be_evalExprKind(_self_, _294128_expr.get()._field_Kind);;
	if (((_294217_d == nullptr) || (_294217_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ddab8952_Fn(_294217_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7377e4d:;
			{
				jule::Ptr<_1dd9ca2c0_FnIns> _294921_f = _1ddab8952_Fn(_294217_d.get()._field_Kind.ptr());;
				if (_1dd9cb656_IsBuiltin(_294921_f.ptr())) {
					goto _match_end_1c7377d1b;
				};
				if ((_294921_f.get()._field_Generics.len() != _294921_f.get()._field_Decl.get()._field_Generics.len())) {
					_1dda21745_pushErr(_self_.get()._field_s.ptr(), _294128_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_294921_f.get()._field_Decl.get()._field_Statically)) && _1dd9c7ce5_IsMethod(_294921_f.get()._field_Decl.ptr()))) {
					_1dda21745_pushErr(_self_.get()._field_s.ptr(), _294128_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1c7377d1b:;
	};
	return _294217_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa68da_evalExpr(jule::Ptr<_1dda8aeb8_Eval> _self_, jule::Ptr<_2090bd678_Expr> _296732_expr) {
	jule::Ptr<_1dda8944a_Data> _296817_d = _1ddaa65cc_eval(_self_, _296732_expr);;
	{
		
		if ((_296817_d == nullptr)) {
			_case_begin_1c737ba78:;
			{
				return nullptr;;
			}
		}
		else if (_296817_d.get()._field_Decl) {
			_case_begin_1c737bb00:;
			{
				_1dda8b4c4_pushErr(_self_.ptr(), _296732_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c737b9bd:;
			{
				return _296817_d;;
			}
		}
		_match_end_1c737b968:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1dda8aeb8_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1ddaa6d5d_unaryEval static__1ddaa7314_new(jule::Ptr<_1dda8aeb8_Eval> _298823_e) {
	return _1ddaa6d5d_unaryEval{._field_e=_298823_e, };;
}



inline void _1ddaa74e0_minus(_1ddaa6d5d_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c737d5d5:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c737d2a5:;
			{
				if ((!(_1dd9aca44_IsNum(_1ddab57c8_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c737d31b:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c737d23e:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c737d10c:;
	};
	if (_1dda89d0d_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1dd9b2692_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7381cae:;
				{
					_1dd9b17a1_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1dd9b02e9_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1dd9b1be1_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7381d36:;
				{
					_1dd9b0cab_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1dd9ae848_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1dd9b1e55_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7381dad:;
				{
					_1dd9b0cab_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1dd9b055d_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c7381bc1:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _1ddaa76bb_plus(_1ddaa6d5d_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c7386423:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c73860e3:;
			{
				if ((!(_1dd9aca44_IsNum(_1ddab57c8_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c7386159:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c738607c:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c7385eb1:;
	};
	if (_1dda89d0d_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1dd9b2692_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7389aec:;
				{
					_1dd9b17a1_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1dd9b02e9_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1dd9b1be1_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7389b74:;
				{
					_1dd9b0cab_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1dd9ae848_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1dd9b1e55_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7389beb:;
				{
					_1dd9b0cab_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1dd9b055d_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c7389a0e:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _1ddaa7897_caret(_1ddaa6d5d_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1c738e261:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c738de31:;
			{
				if ((!(_1dd9ac47d_IsInt(_1ddab57c8_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c738de97:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c738ddba:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c738dcee:;
	};
	if (_1dda89d0d_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1dd9b1be1_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c7392929:;
				{
					_1dd9b0cab_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1dd9ae848_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1dd9b1e55_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c73929a1:;
				{
					_1dd9b1031_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1dd9aeaac_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1c739284c:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _1ddaa7a73_excl(_1ddaa6d5d_unaryEval* _self_) {
	jule::Ptr<_1ddaba129_Prim> _310713_t = _1ddab7764_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_310713_t == nullptr) || (!(_1ddabd0e9_IsBool(_310713_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1dda89d0d_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1dd9b21b9_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1c739738a:;
				{
					_1dd9b12a6_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1dd9aed21_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1c739728b:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
}



inline void _1ddaa7c4e_star(_1ddaa6d5d_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
	{
		
		if ((_1ddab7c3c_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c739a3d2:;
			{
				if ((!(_1dda8be0e_isUnsafe((*_self_)._field_e.ptr())))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ddac1e22_Ptr> _313921_t = _1ddab7c3c_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1ddac28e5_IsUnsafe(_313921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_313921_t.get()._field_Elem;
			}
		}
		else if ((_1ddab79c8_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c739a0a2:;
			{
				(*_self_)._field_d.get()._field_Kind=_1ddab79c8_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1c739a03b:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c7399ec5:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1ddaa7e2a_amper(_1ddaa6d5d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_2300cd50d:;
			{
				jule::Ptr<_1dd9b9e91_StructLitExprModel> _315921_lit = (*_self_)._field_d.get()._field_Model.cast_ptr<_1dd9b9e91_StructLitExprModel>(&__jule_any_type103);;
				_1ddab041b_makeStructLitAlloc((*_self_)._field_d,_315921_lit);
			}
		}
		else {
			_case_begin_2300967a1:;
			{
				{
					
					if (_1ddacc713_canGetPtr((*_self_)._field_d)) {
						_case_begin_230097043:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddac1e22_Ptr>(_1ddac1e22_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type75);
						}
					}
					else {
						_case_begin_230096949:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_2300a07bb:;
				};
			}
		}
		_match_end_23009466c:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1ddaa8106_typeDecl(_1ddaa6d5d_unaryEval* _self_) {
	_1ddac3c48_typeChecker _318317_tc = _1ddac3c48_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_208166b2e:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddac8e29_buildPtrFromType(&_318317_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_208170473:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddac880d_buildSptrFromType(&_318317_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_20736e70b:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_208131ab6:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1ddaa82d2_evalData(_1ddaa6d5d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_20831a2cc:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _320621_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1ddaa62be_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_320621_prefix;
			}
		}
		else {
			_case_begin_208319881:;
			{
				(*_self_)._field_d=_1ddaa62be_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_20822c0e0:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa85ac_eval(_1ddaa6d5d_unaryEval* _self_, jule::Ptr<_2090c0a43_UnaryExpr> _321527_u) {
	(*_self_)._field_u=_321527_u;
	_1ddaa82d2_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1ddaa8106_typeDecl(&(*_self_));
		return (*_self_)._field_d;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _322613_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2084e493a:;
			{
				_1ddaa74e0_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2084e570a:;
			{
				_1ddaa76bb_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_20850453d:;
			{
				_1ddaa7897_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_2085079b4:;
			{
				_1ddaa7a73_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_208514edd:;
			{
				_1ddaa7c4e_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_20852442b:;
			{
				_1ddaa7e2a_amper(&(*_self_));
			}
		}
		else {
			_case_begin_2084e2262:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_20847e540:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_20855d9d7:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str(_322613_kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		else if (_1dda89d0d_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_20855dbe6:;
			{
				(*_self_)._field_d.get()._field_Model=jule::Any((*_self_)._field_d.get()._field_Constant, &__jule_any_type48);
			}
		}
		_match_end_208858a90:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddaa6d5d_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1ddaa8aeb_binaryEval static__1ddaa91c3_newPlain(jule::Ptr<_1dda8aeb8_Eval> _326428_e) {
	return _1ddaa8aeb_binaryEval{._field_e=_326428_e, };;
}



inline _1ddaa8aeb_binaryEval static__1ddaa9514_new(jule::Ptr<_1dda8aeb8_Eval> _327023_e, jule::Ptr<_222e62217_Token> _327037_op) {
	return _1ddaa8aeb_binaryEval{._field_e=_327023_e, ._field_op=_327037_op};;
}



inline jule::Bool _1ddaa9778_checkTypeCompatibility(_1ddaa8aeb_binaryEval* _self_) {
	return _1dda2d8d9_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);;
}



inline jule::Bool _1ddaa9a20_checkStructCommonOperatorCompatibility(_1ddaa8aeb_binaryEval* _self_) {
	jule::Ptr<_1dd9ca2c0_FnIns> _328417_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_208ac6846:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_208acdc05:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_208ca5eed:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_208ca6a48:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_208ca6d01:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_208ca6e33:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_208ca70cb:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_208ca74b6:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_208ca765e:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_208ca8385:;
			{
				_328417_overload=_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_2088a0c2a:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return false;;
			}
		}
		_match_end_2089b6b98:;
	};
	if ((_328417_overload == nullptr)) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return false;;
	};
	jule::Ptr<_1dd9c9401_ParamIns> _331617_p = _328417_overload.get()._field_Params[1LL];;
	return _1dda2d488_checkAssignType((*_self_)._field_e.get()._field_s, _331617_p.get()._field_Decl.get()._field_Reference,_331617_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaa9cb7_evalNil(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddab6cb3_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type117),jule::Any(_1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2081a360a:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_20814c186:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("nil", 3), &__jule_any_type117)}));
				return nullptr;;
			}
		}
		_match_end_209054eb1:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaa02b_evalEnum(_1ddaa8aeb_binaryEval* _self_) {
	jule::Ptr<_1dd9db666_Enum> _334117_enm = _1ddab7ea1_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20823bc48:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _334521_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1ddab7ea1_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334521_rkind=_1ddab7ea1_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1dda2d8d9_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _334117_enm.get()._field_Kind.get()._field_Kind,_334521_rkind,(*_self_)._field_op)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_2091dca72:;
	};
	if (((_1ddab7ea1_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_334117_enm != _1ddab7ea1_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_334117_enm.get()._field_Ident, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_208863825:;
			{
				if ((!(_1dd9aca44_IsNum(_1ddab57c8_Str(_334117_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_334117_enm.get()._field_Ident, &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_20888d542:;
			{
				if (((_1ddab7764_Prim(_334117_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1dd9ac47d_IsInt(_1ddaba48c_Str(_1ddab7764_Prim(_334117_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_334117_enm.get()._field_Ident, &__jule_any_type6)}));
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_208856d68:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_334117_enm.get()._field_Ident, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2094bc68c:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaa290_evalTypeEnum(_1ddaa8aeb_binaryEval* _self_) {
	jule::Ptr<_1dd9dcc61_TypeEnum> _339217_enm = _1ddab8215_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2092526a8:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2092072ea:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1dd9dd091_Str(_339217_enm.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2092082b8:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaa504_evalSptr(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_23006dc2e:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2081ed59a:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2081de9ed:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaa768_evalPtr(_1ddaa8aeb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_208228075:;
			{
				if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_208361cc4:;
			{
				if ((_1ddab7c3c_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
						jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
						(*_self_)._field_l = ___jule_assign_arg;
						(*_self_)._field_r = _1___jule_assign_arg;
					});
				};
				if (_1ddac28e5_IsUnsafe(_1ddab7c3c_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				};
				if ((!(_1ddab1560_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_20835ca17:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_20835bbe2:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaa9cc_evalArr(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_208eb045a:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_208eb0108:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_208ead0b2:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaac41_evalSlc(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2092028cd:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_209201da5:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2092004ad:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaaaea5_evalFn(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2300a59ad:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_207364cb7:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_2073605a9:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaab219_evalStruct(_1ddaa8aeb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_208a006b5:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_208a36311:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_208a6a125:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_208ace70b:;
			{
				if ((_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_208ad0ee3:;
			{
				if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_20896840d:;
	};
	if ((!(_1ddaa9a20_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	return (*_self_)._field_l;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaab47d_evalTrait(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_20849b370:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2072439dc:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_207243987:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaab6e2_evalAny(_1ddaa8aeb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2082d7057:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2081b0815:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("any", 3), &__jule_any_type100)}));
				return nullptr;;
			}
		}
		_match_end_2081b07b0:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaab956_evalBool(_1ddaa8aeb_binaryEval* _self_) {
	if ((!(_1ddaa9778_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_2089ea506:;
			{
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_20856a076:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_208519663:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaabbba_evalStr(_1ddaa8aeb_binaryEval* _self_) {
	jule::Str _363417_rk = _1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_363417_rk != jule::Str("str", 3))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_363417_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_208ceee9d:;
			{
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_208d00014:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_208cac91c:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("str", 3), &__jule_any_type100)}));
				return nullptr;;
			}
		}
		_match_end_208cac8b7:;
	};
}



inline void _1ddaabd96_setTypeToGreater(_1ddaa8aeb_binaryEval* _self_) {
	jule::Ptr<_1ddaba129_Prim> _366113_lp = _1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1ddaba129_Prim> _366213_rp = _1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_1dda89d0d_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1dda89d0d_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_366213_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1dda89d0d_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_366113_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1dda89d0d_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_366213_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1dd9aadb6_IsGreater(_366213_rp.get()._field_Kind,_366113_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1dda89d0d_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_366213_rp.get()._field_Kind;
		};
	};
}



inline void _1ddaac0d8_checkModData(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _369436_d) {
	if ((!(_1dda89d0d_IsConst(_369436_d.ptr())))) {
		if (((_1ddab7764_Prim(_369436_d.get()._field_Kind.ptr()) == nullptr) || (!(_1dd9ac47d_IsInt(_1ddab7764_Prim(_369436_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1dda71d5b_sigAssignable(jule::Str("i64", 3),_369436_d)) {
			_case_begin_2081528a6:;
			{
				_1dd9b0cab_SetI64(_369436_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_369436_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1dda71e8d_unsigAssignable(jule::Str("u64", 3),_369436_d)) {
			_case_begin_20815291c:;
			{
				_1dd9b1031_SetU64(_369436_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_369436_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_2072a97de:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_208147ca8:;
	};
}



inline void _1ddaac2b4_mod(_1ddaa8aeb_binaryEval* _self_) {
	_1ddaac0d8_checkModData(&(*_self_), (*_self_)._field_l);
	_1ddaac0d8_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1ddaac66b_numbersAreCompatibile(_1ddaa8aeb_binaryEval* _self_, jule::Str& _371637_lk, jule::Str& _371647_rk) {
	if ((!(_1dd9aca44_IsNum(_371647_rk)))) {
		return false;;
	};
	if ((_1dda89d0d_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((_371637_lk == jule::Str("f32", 3))) {
		if ((_1dda89d0d_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371647_rk == jule::Str("f32", 3));;
	};
	if ((_371637_lk == jule::Str("f64", 3))) {
		if ((_1dda89d0d_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_371647_rk == jule::Str("f64", 3));;
	};
	if ((_1dda89d0d_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;;
	};
	return (_371637_lk == _371647_rk);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaac8d0_evalFloat(_1ddaa8aeb_binaryEval* _self_) {
	jule::Str _374213_lk = _1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _374313_rk = _1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1ddaac66b_numbersAreCompatibile(&(*_self_), _374213_lk,_374313_rk)))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_374213_lk, &__jule_any_type6),jule::Any(_374313_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2083627ec:;
			{
				if (((!(_1dda89d0d_IsConst((*_self_)._field_l.ptr()))) || (!(_1dda73038_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_374213_lk, &__jule_any_type6),jule::Any(_374313_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				if (((!(_1dda89d0d_IsConst((*_self_)._field_r.ptr()))) || (!(_1dda73038_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_374213_lk, &__jule_any_type6),jule::Any(_374313_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				_1dd9b0cab_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1dd9b1031_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1ddab0d45_isOkForShifting((*_self_)._field_r)))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_208361e8e:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_208a16852:;
			{
				_1ddaabd96_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_208a167ec:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_208232bea:;
			{
				_1ddaabd96_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2088a8c77:;
			{
				if ((!(_1dd9ac47d_IsInt(_374313_rk)))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_374213_lk, &__jule_any_type6),jule::Any(_374313_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				_1ddaac2b4_mod(&(*_self_));
				_1ddaabd96_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;;
			}
		}
		else {
			_case_begin_208a8079a:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_208a80745:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaacb44_evalInt(_1ddaa8aeb_binaryEval* _self_) {
	jule::Str _380813_lk = _1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380913_rk = _1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_2088a9a8b:;
			{
				if (((!(_1dd9ac47d_IsInt(_380813_lk))) || (!(_1dd9ac47d_IsInt(_380913_rk))))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type6),jule::Any(_380913_rk, &__jule_any_type6)}));
					return nullptr;;
				};
				if ((!(_1ddab0d45_isOkForShifting((*_self_)._field_r)))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_208b8a71d:;
	};
	if ((!(_1ddaac66b_numbersAreCompatibile(&(*_self_), _380813_lk,_380913_rk)))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_380813_lk, &__jule_any_type6),jule::Any(_380913_rk, &__jule_any_type6)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_208cdea2b:;
			{
				return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_208cdc95d:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_208b8a773:;
			{
				_1ddaabd96_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_208dc55c3:;
			{
				_1ddaac2b4_mod(&(*_self_));
				_1ddaabd96_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_208d2c1ea:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6)}));
				return nullptr;;
			}
		}
		_match_end_208d2c195:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaacda8_evalPrim(_1ddaa8aeb_binaryEval* _self_) {
	jule::Ptr<_1ddaba129_Prim> _386713_prim = _1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1ddabd0e9_IsBool(_386713_prim.ptr())) {
			_case_begin_209022ba4:;
			{
				return _1ddaab956_evalBool(&(*_self_));;
			}
		}
		else if (_1ddabd35d_IsStr(_386713_prim.ptr())) {
			_case_begin_20902614c:;
			{
				return _1ddaabbba_evalStr(&(*_self_));;
			}
		}
		_match_end_209022b4e:;
	};
	if ((_1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddaba48c_Str(_386713_prim.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	{
		
		if (_1dd9ac79c_IsFloat(_386713_prim.get()._field_Kind)) {
			_case_begin_2091d05ae:;
			{
				return _1ddaac8d0_evalFloat(&(*_self_));;
			}
		}
		else if (_1dd9ac47d_IsInt(_386713_prim.get()._field_Kind)) {
			_case_begin_2091d0625:;
			{
				return _1ddaacb44_evalInt(&(*_self_));;
			}
		}
		else {
			_case_begin_208dc6250:;
			{
				return nullptr;;
			}
		}
		_match_end_20916ad63:;
	};
}



inline void _1ddaad084_checkSpecialCases(_1ddaa8aeb_binaryEval* _self_) {
	if (((!(_1ddab67da_Comparable((*_self_)._field_l.get()._field_Kind.ptr()))) && (!(_1ddab6312_IsNil((*_self_)._field_r.get()._field_Kind.ptr()))))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type6)}));
	} else if (((!(_1ddab67da_Comparable((*_self_)._field_r.get()._field_Kind.ptr()))) && (!(_1ddab6312_IsNil((*_self_)._field_l.get()._field_Kind.ptr()))))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type6)}));
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddaad2e8_evalOp(_1ddaa8aeb_binaryEval* _self_) {
	_1ddaad084_checkSpecialCases(&(*_self_));
	{
		
		if (_1ddab6576_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_208ccc486:;
			{
				_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type6),jule::Any(jule::Str("void", 4), &__jule_any_type6)}));
				return nullptr;;
			}
		}
		else if (((_1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1ddabd5c2_IsAny(_1ddab7764_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_2091dd710:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208cce466;
			}
		}
		else if (((_1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1ddabd5c2_IsAny(_1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_208cce466:;
			{
				return _1ddaab6e2_evalAny(&(*_self_));;
			}
		}
		else if ((_1ddab8215_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cce4cc:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208cd1578;
			}
		}
		else if ((_1ddab8215_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd1578:;
			{
				return _1ddaaa290_evalTypeEnum(&(*_self_));;
			}
		}
		else if (_1ddab6312_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_208cd15de:;
			{
				return _1ddaa9cb7_evalNil(&(*_self_));;
			}
		}
		else if ((_1ddab7ea1_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd16dd:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208cd1754;
			}
		}
		else if ((_1ddab7ea1_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd1754:;
			{
				return _1ddaaa02b_evalEnum(&(*_self_));;
			}
		}
		else if ((_1ddab79c8_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd3602:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208cd3668;
			}
		}
		else if ((_1ddab79c8_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd3668:;
			{
				return _1ddaaa504_evalSptr(&(*_self_));;
			}
		}
		else if ((_1ddab7c3c_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd3767:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208cd37cd;
			}
		}
		else if ((_1ddab7c3c_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd37cd:;
			{
				return _1ddaaa768_evalPtr(&(*_self_));;
			}
		}
		else if ((_1ddab8479_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd54e4:;
			{
				return _1ddaaa9cc_evalArr(&(*_self_));;
			}
		}
		else if ((_1ddab86dd_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208cd555a:;
			{
				return _1ddaaac41_evalSlc(&(*_self_));;
			}
		}
		else if ((_1ddab8952_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208ce1b2c:;
			{
				return _1ddaaaea5_evalFn(&(*_self_));;
			}
		}
		else if ((_1ddab8e2a_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208ce1b93:;
			{
				({
					jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_208ce1c92;
			}
		}
		else if ((_1ddab8e2a_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208ce1c92:;
			{
				return _1ddaab47d_evalTrait(&(*_self_));;
			}
		}
		else if ((_1ddab8bb6_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208ce1d08:;
			{
				return _1ddaab219_evalStruct(&(*_self_));;
			}
		}
		else if ((_1ddab7764_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_208ceaa37:;
			{
				return _1ddaacda8_evalPrim(&(*_self_));;
			}
		}
		else {
			_case_begin_208ccc420:;
			{
				return nullptr;;
			}
		}
		_match_end_208ccb485:;
	};
}



inline void _1ddaad56d_evalConst(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _395133_d) {
	{
		
		if ((_395133_d == nullptr)) {
			_case_begin_2081b4d03:;
			{
				return;;
			}
		}
		else if ((!(_1dda89d0d_IsConst((*_self_)._field_l.ptr()))) || (!(_1dda89d0d_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_2081b4d69:;
			{
				_395133_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_2081ba17c:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_208351544:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b363d_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_2083632e2:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool((!(_1dd9b363d_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_208363358:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b3330_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_20844656d:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b3022_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2084465d4:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b4067_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_20845e102:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b394b_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_20845e168:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b4375_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_208473479:;
			{
				_395133_d.get()._field_Constant=static__1dd9ada12_NewBool(_1dd9b3c59_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2084734e0:;
			{
				_1dd9b4683_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2084975d0:;
			{
				_1dd9b4991_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_208497646:;
			{
				_1dd9b4c9e_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2084abdb9:;
			{
				jule::Bool _398817_ok = _1dd9b50ac_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_398817_ok)) && (_1dd9b0a36_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1ddaba129_Prim> _399321_prim = _1ddab7764_Prim(_395133_d.get()._field_Kind.ptr());;
				{
					
					if (_1dd9abdea_IsSigInt(_399321_prim.get()._field_Kind)) {
						_case_begin_208aba021:;
						{
							_1dd9b0cab_SetI64(_395133_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_395133_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1dd9ac1d6_IsUnsigInt(_399321_prim.get()._field_Kind)) {
						_case_begin_208aba098:;
						{
							_1dd9b1031_SetU64(_395133_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_395133_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_208a79b29:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_2084abe30:;
			{
				jule::Bool _400117_ok = _1dd9b53ba_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_400117_ok)) && (_1dd9b0a36_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2084b9ab9:;
			{
				_1dd9b59d6_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_2084b9b30:;
			{
				_1dd9b56c8_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2084ca5e1:;
			{
				_1dd9b5ce4_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_2084ca657:;
			{
				_1dd9b6102_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2084e101e:;
			{
				_1dd9b6410_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_395133_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_20827a44b:;
	};
	_395133_d.get()._field_Model=jule::Any(_395133_d.get()._field_Constant, &__jule_any_type48);
	_1ddab22db_applyCastModelByEnum(_395133_d,_1ddab7ea1_Enum(_395133_d.get()._field_Kind.ptr()));
}



inline void _1ddaad7e3_checkData(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _402633_d) {
	jule::Ptr<_1dd9ca2c0_FnIns> _402713_f = _1ddab8952_Fn(_402633_d.get()._field_Kind.ptr());;
	if ((((_402713_f != nullptr) && (_402713_f.get()._field_Decl != nullptr)) && _1dd9c7ce5_IsMethod(_402713_f.get()._field_Decl.ptr()))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1ddaad9be_checkDatas(_1ddaa8aeb_binaryEval* _self_) {
	_1ddaad7e3_checkData(&(*_self_), (*_self_)._field_l);
	_1ddaad7e3_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1ddaadc44_setModel(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _403832_d) {
	if (_1dda89d0d_IsConst(_403832_d.ptr())) {
		if ((_1dda89d0d_IsConst((*_self_)._field_l.ptr()) && _1dda89d0d_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1dda8944a_Data> _404618_l;;
	jule::Ptr<_1dda8944a_Data> _404625_r;;
	({
		jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = (*_self_)._field_l;
		jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = (*_self_)._field_r;
		_404618_l = ___jule_assign_arg;
		_404625_r = _1___jule_assign_arg;
	});
	if ((!(_1dda8a11b_GoodOperand(_404618_l.ptr(), _404625_r)))) {
		({
			jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = _404625_r;
			jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = _404618_l;
			_404618_l = ___jule_assign_arg;
			_404625_r = _1___jule_assign_arg;
		});
	};
	_403832_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9b9336_BinopExprModel>(_1dd9b9336_BinopExprModel{._field_Left=jule::new_ptr<_1dd9b8d6e_OperandExprModel>(_1dd9b8d6e_OperandExprModel{._field_Kind=_404618_l.get()._field_Kind, ._field_Model=_404618_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1dd9b8d6e_OperandExprModel>(_1dd9b8d6e_OperandExprModel{._field_Kind=_404625_r.get()._field_Kind, ._field_Model=_404625_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}), &__jule_any_type118);
}



inline void _1ddaadeb9_postEval(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _406432_d) {
	_406432_d.get()._field_Lvalue=false;
	_1ddaadc44_setModel(&(*_self_), _406432_d);
}



inline jule::Ptr<_1dda8944a_Data> _1ddaae371_solveExplicit(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_1dda8944a_Data>& _406937_l, jule::Ptr<_1dda8944a_Data>& _406952_r) {
	({
		jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = _406937_l;
		jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = _406952_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1ddaad9be_checkDatas(&(*_self_));
	jule::Ptr<_1dda8944a_Data> _407417_d = _1ddaad2e8_evalOp(&(*_self_));;
	({
		jule::Ptr<_1dda8944a_Data> ___jule_assign_arg = _406937_l;
		jule::Ptr<_1dda8944a_Data> _1___jule_assign_arg = _406952_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1ddaad56d_evalConst(&(*_self_), _407417_d);
	if ((_407417_d != nullptr)) {
		_407417_d.get()._field_Mutable=true;
		_1ddaadeb9_postEval(&(*_self_), _407417_d);
	};
	return _407417_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddaae67e_eval(_1ddaa8aeb_binaryEval* _self_, jule::Ptr<_2090c2050_BinopExpr>& _408928_op) {
	if ((_408928_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1dda8b4c4_pushErr((*_self_)._field_e.ptr(), _408928_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1dda8b7e3_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _409617_l = _1ddaa62be_evalExprKind((*_self_)._field_e, _408928_op.get()._field_Left.get()._field_Kind);;
	if (((_409617_l == nullptr) || (_409617_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _410117_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_409617_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_410117_prefix;
	});;
	jule::Ptr<_1dda8944a_Data> _410417_r = _1ddaa62be_evalExprKind((*_self_)._field_e, _408928_op.get()._field_Right.get()._field_Kind);;
	if (((_410417_r == nullptr) || (_410417_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*_self_)._field_op=_408928_op.get()._field_Op;
	jule::Ptr<_1dda8944a_Data> _411117_d = _1ddaae371_solveExplicit(&(*_self_), _409617_l,_410417_r);;
	if ((((_411117_d != nullptr) && _409617_l.get()._field_IsRune) && _410417_r.get()._field_IsRune)) {
		_411117_d.get()._field_IsRune=true;
	};
	return _411117_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddaa8aeb_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddab3ba0_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddab46d9_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ddab57c8_Str(_1ddab53cc_TypeKind* _self_) {
	if (_1ddab6312_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1ddab609d_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1ddab4e9d_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1ddab4a4c_Str((*_self_)._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1ddab5ad6_Equal(jule::Ptr<_1ddab53cc_TypeKind> _self_, jule::Ptr<_1ddab53cc_TypeKind> _9021_other) {
	if (_1ddab6312_IsNil(_self_.ptr())) {
		return _1ddab6312_IsNil(_9021_other.ptr());;
	};
	if (_1ddab609d_CppLinked(_self_.ptr())) {
		return (_1ddab609d_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1ddab4e9d_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1ddab4d5a_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1ddab609d_CppLinked(_1ddab53cc_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1ddab6312_IsNil(_1ddab53cc_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}



inline jule::Bool _1ddab6576_Void(_1ddab53cc_TypeKind* _self_) {
	jule::Ptr<_1ddaba129_Prim> _11113_prim = _1ddab7764_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _1ddab67da_Comparable(_1ddab53cc_TypeKind* _self_) {
	if (_1ddab609d_CppLinked(&(*_self_))) {
		return false;;
	};
	{
		_1ddab53cc_TypeKind* _12121__self = (&((*_self_)));;
		if ((_1ddab8bb6_Struct(_12121__self) != nullptr)) {
			return _1ddab8bb6_Struct(_12121__self).get()._field_Comparable;;
		};
		return (((_1ddab918e_Map(_12121__self) == nullptr) && (_1ddab86dd_Slc(_12121__self) == nullptr)) && (_1ddab8952_Fn(_12121__self) == nullptr));;
	};
}



inline jule::Bool _1ddab6a4e_Mutable(_1ddab53cc_TypeKind* _self_) {
	{
		_1ddab53cc_TypeKind* _13221__self = (&((*_self_)));;
		if ((_1ddab8bb6_Struct(_13221__self) != nullptr)) {
			return _1ddab8bb6_Struct(_13221__self).get()._field_Mutable;;
		};
		if ((_1ddab8e2a_Trait(_13221__self) != nullptr)) {
			return _1ddab8e2a_Trait(_13221__self).get()._field_Mutable;;
		};
		if ((_1ddab7764_Prim(_13221__self) != nullptr)) {
			jule::Ptr<_1ddaba129_Prim> _14021_p = _1ddab7764_Prim(_13221__self);;
			return _1ddabd5c2_IsAny(_14021_p.ptr());;
		};
		if ((_1ddab8479_Arr(_13221__self) != nullptr)) {
			return _1ddab6a4e_Mutable(_1ddab8479_Arr(_13221__self).get()._field_Elem.ptr());;
		};
		return (((_1ddab86dd_Slc(_13221__self) != nullptr) || (_1ddab7c3c_Ptr(_13221__self) != nullptr)) || (_1ddab79c8_Sptr(_13221__self) != nullptr));;
	};
}



inline jule::Bool _1ddab6cb3_NilCompatible(_1ddab53cc_TypeKind* _self_) {
	{
		_1ddab53cc_TypeKind* _15521__self = (&((*_self_)));;
		jule::Ptr<_1ddaba129_Prim> _15717_prim = _1ddab7764_Prim(_15521__self);;
		if (((_15717_prim != nullptr) && _1ddabd5c2_IsAny(_15717_prim.ptr()))) {
			return true;;
		};
		return (((((((_1ddab6312_IsNil(_15521__self) || (_1ddab8952_Fn(_15521__self) != nullptr)) || (_1ddab79c8_Sptr(_15521__self) != nullptr)) || (_1ddab7c3c_Ptr(_15521__self) != nullptr)) || (_1ddab8e2a_Trait(_15521__self) != nullptr)) || (_1ddab86dd_Slc(_15521__self) != nullptr)) || (_1ddab918e_Map(_15521__self) != nullptr)) || (_1ddab8215_TypeEnum(_15521__self) != nullptr));;
	};
}



inline jule::Bool _1ddab7027_PerformsRC(_1ddab53cc_TypeKind* _self_) {
	{
		_1ddab53cc_TypeKind* _17621__self = (&((*_self_)));;
		jule::Ptr<_1ddaba129_Prim> _17717_prim = _1ddab7764_Prim(_17621__self);;
		if ((_17717_prim != nullptr)) {
			return _1ddabd5c2_IsAny(_17717_prim.ptr());;
		};
		return (((_1ddab79c8_Sptr(_17621__self) != nullptr) || (_1ddab86dd_Slc(_17621__self) != nullptr)) || (_1ddab8e2a_Trait(_17621__self) != nullptr));;
	};
}



inline jule::Bool _1ddab728b_SupportsCloning(_1ddab53cc_TypeKind* _self_) {
	{
		_1ddab53cc_TypeKind* _18821__self = (&((*_self_)));;
		{
			
			if ((_1ddab7764_Prim(_18821__self) != nullptr)) {
				_case_begin_209669c9b:;
				{
					return (!(_1ddabd5c2_IsAny(_1ddab7764_Prim(_18821__self).ptr())));;
				}
			}
			else if ((_1ddab7ea1_Enum(_18821__self) != nullptr)) {
				_case_begin_20966bb05:;
				{
					return true;;
				}
			}
			else if ((_1ddab8952_Fn(_18821__self) != nullptr)) {
				_case_begin_20966bb6b:;
				{
					return true;;
				}
			}
			else if ((_1ddab7c3c_Ptr(_18821__self) != nullptr)) {
				_case_begin_20966bbd2:;
				{
					return true;;
				}
			}
			else if ((_1ddab86dd_Slc(_18821__self) != nullptr)) {
				_case_begin_20966b72b:;
				{
					return _1ddab728b_SupportsCloning(_1ddab86dd_Slc(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1ddab918e_Map(_18821__self) != nullptr)) {
				_case_begin_20966b792:;
				{
					jule::Ptr<_1ddac08c1_Map> _20121_m = _1ddab918e_Map(_18821__self);;
					return (_1ddab728b_SupportsCloning(_20121_m.get()._field_Key.ptr()) && _1ddab728b_SupportsCloning(_20121_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1ddab8479_Arr(_18821__self) != nullptr)) {
				_case_begin_20966b808:;
				{
					return _1ddab728b_SupportsCloning(_1ddab8479_Arr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1ddab79c8_Sptr(_18821__self) != nullptr)) {
				_case_begin_20966b86e:;
				{
					return _1ddab728b_SupportsCloning(_1ddab79c8_Sptr(_18821__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1ddab8bb6_Struct(_18821__self) != nullptr)) {
				_case_begin_20966be13:;
				{
					jule::Ptr<_2090d5c23_StructIns> _20825_s = _1ddab8bb6_Struct(_18821__self);;
					return (((_20825_s.get()._field_Decl != nullptr) && (!(_20825_s.get()._field_Decl.get()._field_CppLinked))) && _20909e879_IsDerives(_20825_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_20966b6b5:;
				{
					return false;;
				}
			}
			_match_end_20966b64e:;
		};
	};
}



inline jule::Bool _1ddab7500_Variadicable(_1ddab53cc_TypeKind* _self_) {
	{
		_1ddab53cc_TypeKind* _22121__self = (&((*_self_)));;
		return (_1ddab86dd_Slc(_22121__self) != nullptr);;
	};
}



inline jule::Ptr<_1ddaba129_Prim> _1ddab7764_Prim(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_209669aae:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddaba129_Prim>(6);;
			}
		}
		else {
			_case_begin_20966aede:;
			{
				return nullptr;;
			}
		}
		_match_end_20966ae89:;
	};
}



inline jule::Ptr<_1ddabd8ad_Sptr> _1ddab79c8_Sptr(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_20966b066:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddabd8ad_Sptr>(7);;
			}
		}
		else {
			_case_begin_209674a75:;
			{
				return nullptr;;
			}
		}
		_match_end_209674a20:;
	};
}



inline jule::Ptr<_1ddac1e22_Ptr> _1ddab7c3c_Ptr(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_20967505e:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddac1e22_Ptr>(12);;
			}
		}
		else {
			_case_begin_209675713:;
			{
				return nullptr;;
			}
		}
		_match_end_209675108:;
	};
}



inline jule::Ptr<_1dd9db666_Enum> _1ddab7ea1_Enum(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_2096757ac:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1dd9db666_Enum>(3);;
			}
		}
		else {
			_case_begin_20967647d:;
			{
				return nullptr;;
			}
		}
		_match_end_209676428:;
	};
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddab8215_TypeEnum(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_209676967:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1dd9dcc61_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_20967711b:;
			{
				return nullptr;;
			}
		}
		_match_end_209676a11:;
	};
}



inline jule::Ptr<_1ddac14b5_Arr> _1ddab8479_Arr(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_2096771c6:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddac14b5_Arr>(11);;
			}
		}
		else {
			_case_begin_209677d86:;
			{
				return nullptr;;
			}
		}
		_match_end_209677d31:;
	};
}



inline jule::Ptr<_1ddabe31a_Slc> _1ddab86dd_Slc(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_209677e1e:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddabe31a_Slc>(8);;
			}
		}
		else {
			_case_begin_209678a9b:;
			{
				return nullptr;;
			}
		}
		_match_end_209678a46:;
	};
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddab8952_Fn(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_209678b34:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1dd9ca2c0_FnIns>(1);;
			}
		}
		else {
			_case_begin_2096797b1:;
			{
				return nullptr;;
			}
		}
		_match_end_20967975b:;
	};
}



inline jule::Ptr<_2090d5c23_StructIns> _1ddab8bb6_Struct(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_209679838:;
			{
				return (*_self_)._field_Kind.cast_ptr<_2090d5c23_StructIns>(0);;
			}
		}
		else {
			_case_begin_20967a4c6:;
			{
				return nullptr;;
			}
		}
		_match_end_20967a471:;
	};
}



inline jule::Ptr<_1dd9d9521_Trait> _1ddab8e2a_Trait(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_20967a9b0:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1dd9d9521_Trait>(2);;
			}
		}
		else {
			_case_begin_20967b164:;
			{
				return nullptr;;
			}
		}
		_match_end_20967aa59:;
	};
}



inline jule::Ptr<_1ddac08c1_Map> _1ddab918e_Map(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_20967b21e:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddac08c1_Map>(10);;
			}
		}
		else {
			_case_begin_20967bdce:;
			{
				return nullptr;;
			}
		}
		_match_end_20967bd79:;
	};
}



inline jule::Ptr<_1ddabed98_Tuple> _1ddab9403_Tup(_1ddab53cc_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_20967be67:;
			{
				return (*_self_)._field_Kind.cast_ptr<_1ddabed98_Tuple>(9);;
			}
		}
		else {
			_case_begin_20967cae4:;
			{
				return nullptr;;
			}
		}
		_match_end_20967ca8e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ddab53cc_TypeKind _Src) {
	_Stream << _1ddab57c8_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1ddab9b62_checked(_1ddab97aa_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);;
}



inline void _1ddab9d3d_removeKind(_1ddab97aa_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddab97aa_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ddaba48c_Str(_1ddaba129_Prim* _self_) {
	return (*_self_)._field_Kind;;
}



inline jule::Bool _1ddaba79a_Equal(jule::Ptr<_1ddaba129_Prim> _self_, jule::Ptr<_1ddab53cc_TypeKind> _37421_other) {
	jule::Ptr<_1ddaba129_Prim> _37513_prim = _1ddab7764_Prim(_37421_other.ptr());;
	if ((_37513_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37513_prim.get()._field_Kind);;
}



inline jule::Bool _1ddabac1d_IsConstraint(_1ddaba129_Prim* _self_) {
	return ((((!(_1ddabd35d_IsStr(&(*_self_)))) && (!(_1ddabd5c2_IsAny(&(*_self_))))) && (!(_1ddabd0e9_IsBool(&(*_self_))))) && (!(_1dd9aca44_IsNum((*_self_)._field_Kind))));;
}



inline jule::Bool _1ddabae82_IsI8(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _1ddabb1e6_IsI16(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _1ddabb45a_IsI32(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _1ddabb6be_IsI64(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _1ddabb933_IsU8(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _1ddabbb97_IsU16(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _1ddabbe0b_IsU32(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _1ddabc170_IsU64(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _1ddabc3d4_IsF32(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _1ddabc648_IsF64(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _1ddabc8ac_IsInt(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _1ddabcb21_IsUint(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _1ddabcd85_IsUintptr(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _1ddabd0e9_IsBool(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _1ddabd35d_IsStr(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _1ddabd5c2_IsAny(_1ddaba129_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddaba129_Prim _Src) {
	_Stream << _1ddaba48c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddabdc21_Str(_1ddabd8ad_Sptr* _self_) {
	return (jule::Str("&", 1) + _1ddab57c8_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1ddabe02e_Equal(jule::Ptr<_1ddabd8ad_Sptr> _self_, jule::Ptr<_1ddab53cc_TypeKind> _45121_other) {
	jule::Ptr<_1ddabd8ad_Sptr> _45213_sptr = _1ddab79c8_Sptr(_45121_other.ptr());;
	if ((_45213_sptr == nullptr)) {
		return false;;
	};
	return _1ddab5ad6_Equal(_self_.get()._field_Elem, _45213_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddabd8ad_Sptr _Src) {
	_Stream << _1ddabdc21_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddabe826_Str(_1ddabe31a_Slc* _self_) {
	return (jule::Str("[]", 2) + _1ddab57c8_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1ddabeb34_Equal(jule::Ptr<_1ddabe31a_Slc> _self_, jule::Ptr<_1ddab53cc_TypeKind> _47021_other) {
	jule::Ptr<_1ddabe31a_Slc> _47113_slc = _1ddab86dd_Slc(_47021_other.ptr());;
	if ((_47113_slc == nullptr)) {
		return false;;
	};
	return _1ddab5ad6_Equal(_self_.get()._field_Elem, _47113_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddabe31a_Slc _Src) {
	_Stream << _1ddabe826_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddac020b_Str(_1ddabed98_Tuple* _self_) {
	jule::Str _48717_s = jule::Str("(", 1);;
	_48717_s+=_1ddab57c8_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_20968c373:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab53cc_TypeKind> &_48916_t = *it;
			{
				_48717_s+=jule::Str(",", 1);
				_48717_s+=_1ddab57c8_Str(_48916_t.ptr());
			}
			_iter_next_20968c373:;
			++it;
			goto _iter_begin_20968c373;
		}
		_iter_end_20968c373:;
	};
	_48717_s+=jule::Str(")", 1);
	return _48717_s;;
}



inline jule::Bool _1ddac0519_Equal(jule::Ptr<_1ddabed98_Tuple> _self_, jule::Ptr<_1ddab53cc_TypeKind> _49821_other) {
	jule::Ptr<_1ddabed98_Tuple> _49913_tup = _1ddab9403_Tup(_49821_other.ptr());;
	if ((_49913_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49913_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50617_i = 0LL;;
	for (; (_50617_i < _self_.get()._field_Types.len()); (_50617_i)++) {
		{
			if ((!(_1ddab5ad6_Equal(_self_.get()._field_Types[_50617_i], _49913_tup.get()._field_Types[_50617_i])))) {
				return false;;
			};
		}
	_iter_next_20968ed15:;
	}
	_iter_end_20968ed15:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddabed98_Tuple _Src) {
	_Stream << _1ddac020b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddac0c34_Str(_1ddac08c1_Map* _self_) {
	jule::Str _52617_s = jule::Str("[", 1);;
	_52617_s+=_1ddab57c8_Str((*_self_)._field_Key.ptr());
	_52617_s+=jule::Str(":", 1);
	_52617_s+=_1ddab57c8_Str((*_self_)._field_Val.ptr());
	_52617_s+=jule::Str("]", 1);
	return _52617_s;;
}



inline jule::Bool _1ddac1042_Equal(jule::Ptr<_1ddac08c1_Map> _self_, jule::Ptr<_1ddab53cc_TypeKind> _53521_other) {
	jule::Ptr<_1ddac08c1_Map> _53613_m = _1ddab918e_Map(_53521_other.ptr());;
	if ((_53613_m == nullptr)) {
		return false;;
	};
	return (_1ddab5ad6_Equal(_self_.get()._field_Key, _53613_m.get()._field_Key) && _1ddab5ad6_Equal(_self_.get()._field_Val, _53613_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddac08c1_Map _Src) {
	_Stream << _1ddac0c34_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddac1828_Str(_1ddac14b5_Arr* _self_) {
	jule::Str _55417_s = jule::Str("[", 1);;
	_55417_s+=_1dd99dc11_Itoa((*_self_)._field_N);
	_55417_s+=jule::Str("]", 1);
	_55417_s+=_1ddab57c8_Str((*_self_)._field_Elem.ptr());
	return _55417_s;;
}



inline jule::Bool _1ddac1b36_Equal(jule::Ptr<_1ddac14b5_Arr> _self_, jule::Ptr<_1ddab53cc_TypeKind> _56221_other) {
	jule::Ptr<_1ddac14b5_Arr> _56313_arr = _1ddab8479_Arr(_56221_other.ptr());;
	if ((_56313_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56313_arr.get()._field_N) && _1ddab5ad6_Equal(_self_.get()._field_Elem, _56313_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddac14b5_Arr _Src) {
	_Stream << _1ddac1828_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ddac2285_Str(_1ddac1e22_Ptr* _self_) {
	if (_1ddac28e5_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1ddab57c8_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1ddac2593_Equal(jule::Ptr<_1ddac1e22_Ptr> _self_, jule::Ptr<_1ddab53cc_TypeKind> _58621_other) {
	jule::Ptr<_1ddac1e22_Ptr> _58713_ptr = _1ddab7c3c_Ptr(_58621_other.ptr());;
	if ((_58713_ptr == nullptr)) {
		return false;;
	};
	return _1ddab5ad6_Equal(_self_.get()._field_Elem, _58713_ptr.get()._field_Elem);;
}



inline jule::Bool _1ddac28e5_IsUnsafe(_1ddac1e22_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddac1e22_Ptr _Src) {
	_Stream << _1ddac2285_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddac2d68_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1ddac4452_pushErr(_1ddac3c48_typeChecker* _self_, jule::Ptr<_222e62217_Token> _67226_token, jule::Str _67241_fmt, jule::Slice<jule::Any> _67254_args) {
	_1dda21745_pushErr((*_self_)._field_s.ptr(), _67226_token,_67241_fmt,_67254_args);
}



inline void _1ddac462d_allowBuiltin(_1ddac3c48_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1ddac4809_disallowBuiltin(_1ddac3c48_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1ddaba129_Prim> _1ddac4b17_buildPrim(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _68429_decl) {
	if ((!(_1ddacdc0e_isPrim(_68429_decl.get()._field_Ident)))) {
		_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_68429_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _68429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_68429_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _1ddacd6c0_buildPrimType(_68429_decl.get()._field_Ident);;
}



inline void _20969e242_pushReference(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090d5c23_StructIns>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1c72512ee_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_1dd9cddd9_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type10));
}

inline void _2096a2135_pushReference(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1dd9d9521_Trait>& _69840_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_2096a3ce6_Exist((*_self_)._field_refers.ptr(), _69840_t)) {
		return;;
	};
	_1dd9cddd9_Push((*_self_)._field_refers.ptr(), jule::Any(_69840_t, &__jule_any_type11));
}



inline void _1ddac5112_pushReferenceByKind(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _70843_k) {
	{
		
		if ((_1ddab8bb6_Struct(_70843_k.ptr()) != nullptr)) {
			_case_begin_20969cdde:;
			{
				jule::Ptr<_2090d5c23_StructIns> _71121_t = _1ddab8bb6_Struct(_70843_k.ptr());;
				_20969e242_pushReference(&(*_self_), _71121_t);
			}
		}
		else if ((_1ddab8e2a_Trait(_70843_k.ptr()) != nullptr)) {
			_case_begin_20969ce66:;
			{
				jule::Ptr<_1dd9d9521_Trait> _71421_t = _1ddab8e2a_Trait(_70843_k.ptr());;
				_2096a2135_pushReference(&(*_self_), _71421_t);
			}
		}
		_match_end_20969ccce:;
	};
}



inline void _1ddac54ca_pushCycleError(_1ddac3c48_typeChecker* _self_, jule::Any _71929_def1, jule::Any _71940_def2, jule::Str& _71956_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _72113_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _72128_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _72128_def };
			
			if (_match_expr.type == &__jule_any_type68) {
				_case_begin_2096a736b:;
				{
					return _72128_def.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type67) {
				_case_begin_2096a73d2:;
				{
					return _72128_def.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else {
				_case_begin_2096a6c2d:;
				{
					return jule::Str();;
				}
			}
			_match_end_2096a6b51:;
		};
	});;
	jule::Str _73113_def1Ident = _72113_getIdent(_71929_def1);;
	jule::Str _73213_def2Ident = _72113_getIdent(_71940_def2);;
	jule::Str _73313_refersTo = _222b39032_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_73113_def1Ident, &__jule_any_type6),jule::Any(_73213_def2Ident, &__jule_any_type6)}));;
	(_71956_message).buffer.insert(0, (((_222a844bb_Repeat(jule::Str(" ", 1),4LL) + _73313_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1ddac5882_checkCrossCycle(_1ddac3c48_typeChecker* _self_, jule::Any _73730_decl, jule::Str& _73746_message) {
	{
		auto &_match_expr{ _73730_decl };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_2096a9549:;
			{
				jule::Ptr<_1ddab46d9_TypeAlias> _74017_ta = _73730_decl.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68);;
				{
					auto &expr = _74017_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_2096aa00b:;
					if (it != expr.end()) {
						jule::Any &_74120_d = *it;
						{
							{
								
								if ((_74120_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_2096aac10:;
									{
										_1ddac54ca_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type68),_74120_d,_73746_message);
										return false;;
									}
								}
								else if ((!(_1ddac5882_checkCrossCycle(&(*_self_), _74120_d,_73746_message)))) {
									_case_begin_2096aac87:;
									{
										_1ddac54ca_pushCycleError(&(*_self_), jule::Any(_74017_ta, &__jule_any_type68),_74120_d,_73746_message);
										return false;;
									}
								}
								_match_end_2096aab00:;
							};
						}
						_iter_next_2096aa00b:;
						++it;
						goto _iter_begin_2096aa00b;
					}
					_iter_end_2096aa00b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2096a95b0:;
			{
				jule::Ptr<_2090d5849_Struct> _75217_s = _73730_decl.cast_ptr<_2090d5849_Struct>(&__jule_any_type67);;
				{
					auto &expr = _75217_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_2096ab6a0:;
					if (it != expr.end()) {
						jule::Ptr<_2090d5849_Struct> &_75320_d = *it;
						{
							{
								
								if ((__jule_any_type67_compare((*_self_)._field_referencer.get()._field_owner, _75320_d))) {
									_case_begin_2096ad053:;
									{
										_1ddac54ca_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type67),jule::Any(_75320_d, &__jule_any_type67),_73746_message);
										return false;;
									}
								}
								else if ((!(_1ddac5882_checkCrossCycle(&(*_self_), jule::Any(_75320_d, &__jule_any_type67),_73746_message)))) {
									_case_begin_2096ad0ca:;
									{
										_1ddac54ca_pushCycleError(&(*_self_), jule::Any(_75217_s, &__jule_any_type67),jule::Any(_75320_d, &__jule_any_type67),_73746_message);
										return false;;
									}
								}
								_match_end_2096ace43:;
							};
						}
						_iter_next_2096ab6a0:;
						++it;
						goto _iter_begin_2096ab6a0;
					}
					_iter_end_2096ab6a0:;
				};
			}
		}
		_match_end_2096a945b:;
	};
	return true;;
}



inline jule::Bool _1ddac5c39_checkIllegalCycles(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _77138_ident, jule::Any _77165_decl) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _77165_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2096aeecd:;
			{
				if (((*_self_)._field_notPlain || _77165_decl.cast_ptr<_2090d5849_Struct>(&__jule_any_type67).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_2096b0044:;
			{
				if (_77165_decl.cast_ptr<_1ddab46d9_TypeAlias>(&__jule_any_type68).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_2096acb02:;
	};
	if ((_77165_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1ddac4452_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79417_message = jule::Str();;
	if ((!(_1ddac5882_checkCrossCycle(&(*_self_), _77165_decl,_79417_message)))) {
		jule::Str _79721_errMsg = _79417_message;;
		_79417_message=jule::Str();
		_1ddac54ca_pushCycleError(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_77165_decl,_79417_message);
		_79721_errMsg+=_79417_message;
		_1ddac4452_pushErr(&(*_self_), _77138_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_79721_errMsg, &__jule_any_type6)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_2096b2662:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_77165_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2096b3ee3:;
			{
				{
					auto &_match_expr{ _77165_decl };
					
					if (_match_expr.type == &__jule_any_type67) {
						_case_begin_2096b46db:;
						{
							jule::Ptr<_2090d5849_Struct> _81325_s = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_2090d5849_Struct>(&__jule_any_type67);;
							_81325_s.get()._field_Depends = jule::alloc_for_append(_81325_s.get()._field_Depends,1);_81325_s.get()._field_Depends.__push(_77165_decl.cast_ptr<_2090d5849_Struct>(&__jule_any_type67));;
						}
					}
					_match_end_2096b45ed:;
				};
			}
		}
		_match_end_2096b25c9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1ddab4e9d_Kind> _1ddac60e1_fromTypeAlias(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _82133_decl, jule::Ptr<_1ddab46d9_TypeAlias>& _82160_ta) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _82160_ta.get()._field_Public,_82160_ta.get()._field_Token)))) {
		_1ddac4452_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	_82160_ta.get()._field_Used=true;
	if ((_82133_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_2096b8ca6:;
			if (it != expr.end()) {
				jule::Ptr<_1ddab46d9_TypeAlias> _83820_bg = *it;
				{
					if (((_83820_bg == _82160_ta) || ((_82160_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1ddab5ad6_Equal(_82160_ta.get()._field_Kind.get()._field_Kind, _83820_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_2096b8ca6;
					};
				}
				_iter_next_2096b8ca6:;
				++it;
				goto _iter_begin_2096b8ca6;
			}
			_iter_end_2096b8ca6:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1c74c2bd0:;
			if (it != expr.end()) {
				jule::Ptr<_1ddab46d9_TypeAlias> _84920_bg = *it;
				{
					if ((_84920_bg == _82160_ta)) {
						_1ddac4452_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
						return nullptr;;
					};
					{
						auto &expr = _82160_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1c74c3829:;
						if (it != expr.end()) {
							jule::Ptr<_1ddab46d9_TypeAlias> _85424_dg = *it;
							{
								if ((_84920_bg == _85424_dg)) {
									_1ddac4452_pushErr(&(*_self_), _82133_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_82133_decl.get()._field_Ident, &__jule_any_type6)}));
									return nullptr;;
								};
							}
							_iter_next_1c74c3829:;
							++it;
							goto _iter_begin_1c74c3829;
						}
						_iter_end_1c74c3829:;
					};
				}
				_iter_next_1c74c2bd0:;
				++it;
				goto _iter_begin_1c74c2bd0;
			}
			_iter_end_1c74c2bd0:;
		};
	};
	jule::Bool _86317_ok = _1ddac5c39_checkIllegalCycles(&(*_self_), _82133_decl,jule::Any(_82160_ta, &__jule_any_type68));;
	if ((!(_86317_ok))) {
		return nullptr;;
	};
	if ((_82160_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_86317_ok=_1dda31766_checkTypeAliasDeclKind((*_self_)._field_s, _82160_ta,(*_self_)._field_lookup);
		if ((!(_86317_ok))) {
			return nullptr;;
		};
	};
	if ((_82160_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_82160_ta);;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _88217_tk = jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Generic=_82160_ta.get()._field_Generic, ._field_Kind=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1ddac5112_pushReferenceByKind(&(*_self_), _88217_tk);
	if (_82160_ta.get()._field_CppLinked) {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Ident;
	} else {
		_88217_tk.get()._field_CppIdent=_82160_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1ddab4e9d_Kind>(_88217_tk, 5);;
}



inline jule::Ptr<_1dd9db666_Enum> _1ddac6498_fromEnum(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _89528_decl, jule::Ptr<_1dd9db666_Enum>& _89555_e) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _89555_e.get()._field_Public,_89555_e.get()._field_Token)))) {
		_1ddac4452_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_89528_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _89528_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89528_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _89555_e;;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1ddac6850_fromTypeEnum(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _90732_decl, jule::Ptr<_1dd9dcc61_TypeEnum>& _90759_e) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _90759_e.get()._field_Public,_90759_e.get()._field_Token)))) {
		_1ddac4452_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_90732_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _90732_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90732_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	return _90759_e;;
}



inline jule::Ptr<_1dd9d9521_Trait> _1ddac6c07_fromTrait(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _91929_decl, jule::Ptr<_1dd9d9521_Trait>& _91956_t) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _91956_t.get()._field_Public,_91956_t.get()._field_Token)))) {
		_1ddac4452_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_91929_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _91929_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_91929_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	_2096a2135_pushReference(&(*_self_), _91956_t);
	return _91956_t;;
}



inline jule::Bool _1ddac70ae_checkStructIns(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090d5c23_StructIns>& _93238_ins, jule::Ptr<_222e62217_Token>& _93260_errorToken) {
	jule::Bool __jule_func_result = false;
	if (_93238_ins.get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_93238_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && (__jule_any_type67_compare((*_self_)._field_referencer.get()._field_owner, _93238_ins.get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1dda3a8e6_precheckStructIns((*_self_)._field_s, _93238_ins,_93260_errorToken)))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((_93238_ins.get()._field_Generics.len() > 0LL)) {
		_1dda3b364_checkStructInsOperators((*_self_)._field_s, _93238_ins);
		_1dda3ab6b_checkStructIns((*_self_)._field_s, _93238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ddac7356_appendUsedStructReference(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090d5849_Struct>& _95349_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c74d486d:;
			{
				jule::Ptr<_2090d5849_Struct> _95921_refS = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_2090d5849_Struct>(&__jule_any_type67);;
				if ((!(_2090a003e_IsUses(_95921_refS.ptr(), _95349_s)))) {
					_95921_refS.get()._field_Uses = jule::alloc_for_append(_95921_refS.get()._field_Uses,1);_95921_refS.get()._field_Uses.__push(_95349_s);;
				};
			}
		}
		_match_end_1c74d4818:;
	};
}



inline jule::Ptr<_2090d5c23_StructIns> _1ddac771e_buildStructInstance(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _96643_decl, jule::Ptr<_2090d5849_Struct>& _96670_s) {
	jule::Ptr<_1ddac2d68_referencer> _96817_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>> _97017_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1c74d751e:;
				{
					jule::Ptr<_1dd9edc94_scopeChecker> _97725_sc = (*_self_)._field_lookup.cast_ptr<_1dd9edc94_scopeChecker>(0);;
					jule::Ptr<_1dd9edc94_scopeChecker> _97825_hard = _1dda0214e_getHardRoot(_97725_sc);;
					if (((_97825_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97825_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _96670_s))) {
						goto _match_end_1c74d74b9;
					};
					jule::I64 _98221_n = (_97825_hard.get()._field_owner.get()._field_Generics.len() + _97825_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_97825_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_98221_n);
				}
			}
			_match_end_1c74d74b9:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1ddad134e_Lookup> _99217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_2090d5c23_StructIns> _99617_ins = _209095dc0_instance(_96670_s);;
	_99617_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1ddab3ba0_InsGeneric>>::alloc(0LL, _96643_decl.get()._field_Generics.len());
	{
		auto &expr = _96643_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c74db589:;
		if (it != expr.end()) {
			jule::Ptr<_2090b9157_TypeDecl> _99821_g = *it;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _99921_kind = _1ddacaba6_build(&(*_self_), _99821_g.get()._field_Kind);;
				if ((_99921_kind == nullptr)) {
					return nullptr;;
				};
				_99617_ins.get()._field_Generics = jule::alloc_for_append(_99617_ins.get()._field_Generics,1);_99617_ins.get()._field_Generics.__push(jule::new_ptr<_1ddab3ba0_InsGeneric>(_1ddab3ba0_InsGeneric{._field_Kind=_99921_kind, }));;
			}
			_iter_next_1c74db589:;
			++it;
			goto _iter_begin_1c74db589;
		}
		_iter_end_1c74db589:;
	};
	(*_self_)._field_lookup=_99217_lookup;
	(*_self_)._field_bannedGenerics=_97017_bannedGenerics;
	(*_self_)._field_referencer=_96817_referencer;
	return _99617_ins;;
}



inline jule::Ptr<_2090d5c23_StructIns> _1ddac7ac6_fromStruct(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _101434_decl, jule::Ptr<_2090d5849_Struct>& _101461_s) {
	if ((!(_1dda26c78_isAccessibleDefine((*_self_)._field_s.ptr(), _101461_s.get()._field_Public,_101461_s.get()._field_Token)))) {
		_1ddac4452_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_101434_decl.get()._field_Ident, &__jule_any_type6)}));
		return nullptr;;
	};
	if ((*_self_)._field_selection) {
		if ((_101434_decl.get()._field_Generics.len() > 0LL)) {
			_1ddac4452_pushErr(&(*_self_), _101434_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_2090d5c23_StructIns>(_2090d5c23_StructIns{._field_Decl=_101461_s, });;
	};
	jule::Bool _103217_ok = ((*_self_)._field_notPlain || _1ddac5c39_checkIllegalCycles(&(*_self_), _101434_decl,jule::Any(_101461_s, &__jule_any_type67)));;
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	_1ddac7356_appendUsedStructReference(&(*_self_), _101461_s);
	jule::Ptr<_2090d5c23_StructIns> _103817_ins = _1ddac771e_buildStructInstance(&(*_self_), _101434_decl,_101461_s);;
	if ((_103817_ins == nullptr)) {
		return nullptr;;
	};
	_103217_ok=_1dda27949_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_103817_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_103817_ins.get()._field_Generics.len()),_101434_decl.get()._field_Token);
	if ((!(_103217_ok))) {
		return nullptr;;
	};
	jule::Ptr<_2090d5c23_StructIns> _104817_existInstance = _209096b29_appendInstance(_101461_s.ptr(), _103817_ins);;
	if ((_104817_existInstance != nullptr)) {
		if ((!(_1dda2ee18_checkConstraintsStruct((*_self_)._field_s, _103817_ins,_101434_decl.get()._field_Token,_104817_existInstance)))) {
			return nullptr;;
		};
		_20969e242_pushReference(&(*_self_), _104817_existInstance);
		return _104817_existInstance;;
	};
	if ((!(_1ddac70ae_checkStructIns(&(*_self_), _103817_ins,_101434_decl.get()._field_Token)))) {
		return nullptr;;
	};
	_20969e242_pushReference(&(*_self_), _103817_ins);
	return _103817_ins;;
}



inline jule::Trait<_1ddab4e9d_Kind> _1ddac7dd4_getDef(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl>& _107230_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1c74e61dc:;
		if (it != expr.end()) {
			jule::Ptr<_2090c6450_GenericDecl> _107316_g = *it;
			{
				if ((_107316_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					return jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(_107316_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1c74e61dc:;
			++it;
			goto _iter_begin_1c74e61dc;
		}
		_iter_end_1c74e61dc:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1c74e6374:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab46d9_TypeAlias> _107921_g = *it;
			{
				if ((_107921_g.get()._field_Ident == _107230_decl.get()._field_Ident)) {
					if ((_107230_decl.get()._field_Generics.len() > 0LL)) {
						_1ddac4452_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type6)}));
						return nullptr;;
					};
					jule::Ptr<_2090d5c23_StructIns> _108525_st = _1ddab8bb6_Struct(_107921_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108525_st != nullptr)) {
						jule::Bool _108725_ok = _1ddac5c39_checkIllegalCycles(&(*_self_), _107230_decl,jule::Any(_108525_st.get()._field_Decl, &__jule_any_type67));;
						if ((!(_108725_ok))) {
							return nullptr;;
						};
					};
					return _107921_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1c74e6374:;
			++it;
			goto _iter_begin_1c74e6374;
		}
		_iter_end_1c74e6374:;
	};
	if ((!(_107230_decl.get()._field_CppLinked))) {
		jule::Ptr<_1dd9db666_Enum> _109721_e = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad0ded_FindEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_109721_e != nullptr)) {
			return jule::Trait<_1ddab4e9d_Kind>(_1ddac6498_fromEnum(&(*_self_), _107230_decl,_109721_e), 3);;
		};
		jule::Ptr<_1dd9dcc61_TypeEnum> _110221_te = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad120b_FindTypeEnum((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110221_te != nullptr)) {
			return jule::Trait<_1ddab4e9d_Kind>(_1ddac6850_fromTypeEnum(&(*_self_), _107230_decl,_110221_te), 4);;
		};
		jule::Ptr<_1dd9d9521_Trait> _110721_t = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad0ae0_FindTrait((*_self_)._field_lookup, _107230_decl.get()._field_Ident);;
		if ((_110721_t != nullptr)) {
			return jule::Trait<_1ddab4e9d_Kind>(_1ddac6c07_fromTrait(&(*_self_), _107230_decl,_110721_t), 2);;
		};
	} else if ((*_self_)._field_selection) {
		_1ddac4452_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090d5849_Struct> _111617_s = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad042a_FindStruct((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if ((_111617_s != nullptr)) {
		return jule::Trait<_1ddab4e9d_Kind>(_1ddac7ac6_fromStruct(&(*_self_), _107230_decl,_111617_s), 0);;
	};
	jule::Ptr<_1ddab46d9_TypeAlias> _112117_ta = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddad0073_FindTypeAlias((*_self_)._field_lookup, _107230_decl.get()._field_Ident,_107230_decl.get()._field_CppLinked);;
	if (((_112117_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_112117_ta=_1ddae054a_findBuiltinTypeAlias(_107230_decl.get()._field_Ident);
	};
	if ((_112117_ta != nullptr)) {
		return _1ddac60e1_fromTypeAlias(&(*_self_), _107230_decl,_112117_ta);;
	};
	_1ddac4452_pushErr(&(*_self_), _107230_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_107230_decl.get()._field_Ident, &__jule_any_type6)}));
	return nullptr;;
}



inline jule::Trait<_1ddab4e9d_Kind> _1ddac81e2_buildIdent(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b971d_IdentTypeDecl> _113333_decl) {
	{
		
		if (_1ddacdc0e_isPrim(_113333_decl.get()._field_Ident)) {
			_case_begin_1c750233b:;
			{
				return jule::Trait<_1ddab4e9d_Kind>(_1ddac4b17_buildPrim(&(*_self_), _113333_decl), 6);;
			}
		}
		else {
			_case_begin_1c7501b43:;
			{
				return _1ddac7dd4_getDef(&(*_self_), _113333_decl);;
			}
		}
		_match_end_1c7501a77:;
	};
}



inline jule::Trait<_1ddab4e9d_Kind> _1ddac8500_buildSubIdent(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b9d6c_SubIdentTypeDecl> _114236_decl) {
	jule::Trait<_1ddab4e9d_Kind> _114317_ident = _1ddac81e2_buildIdent(&(*_self_), _114236_decl.get()._field_Idents[0LL]);;
	if ((_114317_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114317_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1c7503b67:;
			{
				goto _match_end_1c7503a79;
			}
		}
		else {
			_case_begin_1c7503947:;
			{
				_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c7503a79:;
	};
	jule::Ptr<_1dd9dcc61_TypeEnum> _115417_t = _114317_ident.cast_ptr<_1dd9dcc61_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_2090b971d_IdentTypeDecl>> _115517_idents = _114236_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _115517_idents;
		auto it = expr.begin();
		_iter_begin_1c7505042:;
		if (it != expr.end()) {
			jule::I64 _115613_i = it - expr.begin();
			jule::Ptr<_2090b971d_IdentTypeDecl> _115616_id = *it;
			{
				jule::Ptr<_1dd9dc69a_TypeEnumItem> _115721_item = _1dd9dd79a_FindItem(_115417_t.ptr(), _115616_id.get()._field_Ident);;
				if ((_115721_item == nullptr)) {
					_1ddac4452_pushErr(&(*_self_), _115616_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_115417_t.get()._field_Ident, &__jule_any_type6),jule::Any(_115616_id.get()._field_Ident, &__jule_any_type6)}));
					return nullptr;;
				};
				if (((_115517_idents.len() - _115613_i) == 1LL)) {
					_1ddac5112_pushReferenceByKind(&(*_self_), _115721_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1ddab4e9d_Kind>(_115721_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115417_t=_1ddab8215_TypeEnum(_115721_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115417_t == nullptr)) {
					_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c7505042:;
			++it;
			_115613_i++;
			goto _iter_begin_1c7505042;
		}
		_iter_end_1c7505042:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ddabd8ad_Sptr> _1ddac880d_buildSptrFromType(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _117641_elem) {
	{
		
		if ((_117641_elem == nullptr)) {
			_case_begin_1c7508e03:;
			{
				return nullptr;;
			}
		}
		else if ((_1ddab8bb6_Struct(_117641_elem.ptr()) != nullptr)) {
			_case_begin_1c7508e7a:;
			{
				jule::Ptr<_2090d5c23_StructIns> _118217_s = _1ddab8bb6_Struct(_117641_elem.ptr());;
				if (((_118217_s.get()._field_Decl != nullptr) && _118217_s.get()._field_Decl.get()._field_CppLinked)) {
					_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ddab8479_Arr(_117641_elem.ptr()) != nullptr) && _1ddab8479_Arr(_117641_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c7509002:;
			{
				_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c7508551:;
	};
	return jule::new_ptr<_1ddabd8ad_Sptr>(_1ddabd8ad_Sptr{._field_Elem=_117641_elem});;
}



inline jule::Ptr<_1ddabd8ad_Sptr> _1ddac8b1b_buildSptr(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090ba510_SptrTypeDecl> _119632_decl) {
	jule::Bool _119713_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119713_notPlain;
	});;
	jule::Ptr<_1ddab53cc_TypeKind> _120117_elem = _1ddacaeb4_checkDecl(&(*_self_), _119632_decl.get()._field_Elem);;
	return _1ddac880d_buildSptrFromType(&(*_self_), _120117_elem);;
}



inline jule::Ptr<_1ddac1e22_Ptr> _1ddac8e29_buildPtrFromType(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _120540_elem) {
	{
		
		if ((_120540_elem == nullptr)) {
			_case_begin_1c750dd09:;
			{
				return nullptr;;
			}
		}
		else if (((_1ddab8479_Arr(_120540_elem.ptr()) != nullptr) && _1ddab8479_Arr(_120540_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c750dd81:;
			{
				_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1ddac1e22_Ptr>();;
			}
		}
		_match_end_1c750dbe9:;
	};
	return jule::new_ptr<_1ddac1e22_Ptr>(_1ddac1e22_Ptr{._field_Elem=_120540_elem});;
}



inline jule::Ptr<_1ddac1e22_Ptr> _1ddac9237_buildPtr(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090baed3_PtrTypeDecl> _122031_decl) {
	jule::Bool _122113_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_122113_notPlain;
	});;
	jule::Ptr<_1ddab53cc_TypeKind> _122517_elem = nullptr;;
	if ((!(_2090bb335_IsUnsafe(_122031_decl.ptr())))) {
		_122517_elem=_1ddacaeb4_checkDecl(&(*_self_), _122031_decl.get()._field_Elem);
		return _1ddac8e29_buildPtrFromType(&(*_self_), _122517_elem);;
	};
	return jule::new_ptr<_1ddac1e22_Ptr>(_1ddac1e22_Ptr{._field_Elem=_122517_elem});;
}



inline jule::Ptr<_1ddabe31a_Slc> _1ddac9545_buildSlc(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090ba90b_SlcTypeDecl> _123731_decl) {
	jule::Bool _123813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123813_notPlain;
	});;
	jule::Ptr<_1ddab53cc_TypeKind> _124217_elem = _1ddacaeb4_checkDecl(&(*_self_), _123731_decl.get()._field_Elem);;
	{
		
		if ((_124217_elem == nullptr)) {
			_case_begin_1c7513dca:;
			{
				return nullptr;;
			}
		}
		else if (((_1ddab8479_Arr(_124217_elem.ptr()) != nullptr) && _1ddab8479_Arr(_124217_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c7513e52:;
			{
				_1ddac4452_pushErr(&(*_self_), _123731_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c7513d20:;
	};
	return jule::new_ptr<_1ddabe31a_Slc>(_1ddabe31a_Slc{._field_Elem=_124217_elem});;
}



inline jule::Ptr<_1ddac14b5_Arr> _1ddac9853_buildArr(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090bb665_ArrTypeDecl> _125831_decl) {
	jule::Bool _125913_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_125913_notPlain;
	});;
	jule::I64 _126317_n = 0LL;;
	if ((!(_2090bba3e_AutoSized(_125831_decl.ptr())))) {
		jule::Ptr<_1dda8944a_Data> _126621_size = _1ddaa68da_evalExpr(_1dda2ce8d_eval((*_self_)._field_s, (*_self_)._field_lookup), _125831_decl.get()._field_Size);;
		if ((_126621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1dda89d0d_IsConst(_126621_size.ptr())))) {
			_1ddac4452_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ddab7764_Prim(_126621_size.get()._field_Kind.ptr()) == nullptr) || (!(_1dd9ac47d_IsInt(_1ddab7764_Prim(_126621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1ddac4452_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126317_n=static_cast<jule::I64>(static_cast<jule::I64>(_1dd9b055d_AsI64(_126621_size.get()._field_Constant.ptr())));
		if ((_126317_n < 0LL)) {
			_1ddac4452_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1dd99eeed_BitSize != 64LL) && (static_cast<jule::F64>(_126317_n) > _1dd9a709e_Max(jule::Str("int", 3))))) {
			_1ddac4452_pushErr(&(*_self_), _125831_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ddab53cc_TypeKind> _128917_elem = _1ddacaeb4_checkDecl(&(*_self_), _125831_decl.get()._field_Elem);;
	{
		
		if ((_128917_elem == nullptr)) {
			_case_begin_1c751c71e:;
			{
				return nullptr;;
			}
		}
		else if (((_1ddab8479_Arr(_128917_elem.ptr()) != nullptr) && _1ddab8479_Arr(_128917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1c751c785:;
			{
				_1ddac4452_pushErr(&(*_self_), _125831_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c751c521:;
	};
	return jule::new_ptr<_1ddac14b5_Arr>(_1ddac14b5_Arr{._field_Auto=_2090bba3e_AutoSized(_125831_decl.ptr()), ._field_N=_126317_n, ._field_Elem=_128917_elem});;
}



inline jule::Ptr<_1ddac08c1_Map> _1ddac9b61_buildMap(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090bbdb3_MapTypeDecl> _130731_decl) {
	jule::Bool _130813_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_130813_notPlain;
	});;
	jule::Ptr<_1ddab53cc_TypeKind> _131217_key = _1ddacaeb4_checkDecl(&(*_self_), _130731_decl.get()._field_Key);;
	if ((_131217_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _131717_val = _1ddacaeb4_checkDecl(&(*_self_), _130731_decl.get()._field_Val);;
	if ((_131717_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ddab7ea1_Enum(_131717_val.ptr()) != nullptr)) {
		_1ddac4452_pushErr(&(*_self_), _130731_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1ddac08c1_Map>(_1ddac08c1_Map{._field_Key=_131217_key, ._field_Val=_131717_val});;
}



inline jule::Ptr<_1ddabed98_Tuple> _1ddac9e6e_buildTuple(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090babe7_TupleTypeDecl> _133133_decl) {
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _133217_types = jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>::alloc(0LL, _133133_decl.get()._field_Types.len());;
	{
		auto &expr = _133133_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1c7522dea:;
		if (it != expr.end()) {
			jule::Ptr<_2090b9157_TypeDecl> _133321_t = *it;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _133421_kind = _1ddacaeb4_checkDecl(&(*_self_), _133321_t);;
				if ((_133421_kind == nullptr)) {
					return nullptr;;
				};
				_133217_types = jule::alloc_for_append(_133217_types,1);_133217_types.__push(_133421_kind);;
			}
			_iter_next_1c7522dea:;
			++it;
			goto _iter_begin_1c7522dea;
		}
		_iter_end_1c7522dea:;
	};
	return jule::new_ptr<_1ddabed98_Tuple>(_1ddabed98_Tuple{._field_Types=_133217_types});;
}



inline jule::Bool _1ddaca27c_checkFnTypes(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _134436_f) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _134436_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c75249e0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> _134521_p = *it;
			{
				_134521_p.get()._field_Kind=_1ddacaba6_build(&(*_self_), _134521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				__jule_func_result=(_134521_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1dda30545_checkFnParamKind((*_self_)._field_s, _134521_p);
			}
			_iter_next_1c75249e0:;
			++it;
			goto _iter_begin_1c75249e0;
		}
		_iter_end_1c75249e0:;
	};
	if ((!(_1dd9c7a81_IsVoid(_134436_f.get()._field_Decl.ptr())))) {
		_134436_f.get()._field_Result=_1ddacaba6_build(&(*_self_), _134436_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		__jule_func_result = (_134436_f.get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddaca58a_buildFn(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090caad6_FnDecl> _136230_decl) {
	if ((_136230_decl.get()._field_Generics.len() > 0LL)) {
		_1ddac4452_pushErr(&(*_self_), _136230_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dd9c761e_Fn> _136817_f = _1dd9d144c_buildFn(_136230_decl);;
	jule::I64 _137013_n = (*_self_)._field_s.get()._field_errors.len();;
	_1dda3745e_checkFnDecl((*_self_)._field_s, _136817_f);
	if ((_137013_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _137617_ins = _1dd9c8a0a_instanceForce(_136817_f);;
	_137617_ins.get()._field_Anon=true;
	jule::Bool _137913_ok = _1ddaca27c_checkFnTypes(&(*_self_), _137617_ins);;
	if ((!(_137913_ok))) {
		return nullptr;;
	};
	return _137617_ins;;
}



inline jule::Trait<_1ddab4e9d_Kind> _1ddaca898_buildByNamespace(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090ba224_NamespaceTypeDecl> _138739_decl) {
	jule::Str _138813_path = _1ddacd318_buildLinkPathByTokens(_138739_decl.get()._field_Idents);;
	jule::Ptr<_1dda15937_ImportInfo> _138917_imp = _1ddad134e_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1ddace814_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1dda15937_ImportInfo>)>([=](jule::Ptr<_1dda15937_ImportInfo> _138952_imp) mutable -> jule::Bool {
		if (((_138739_decl.get()._field_Idents.len() == 1LL) && (_138952_imp.get()._field_Alias == _138813_path))) {
			return true;;
		};
		return ((_138952_imp.get()._field_LinkPath == _138813_path) && _1dda18594_isAccessibleViaSelection(_138952_imp.ptr()));;
	}));;
	if (((_138917_imp == nullptr) || (!(_1dda18000_isLookupable(_138917_imp.ptr(), jule::Str("self", 4)))))) {
		_1ddac4452_pushErr(&(*_self_), _138739_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_138813_path, &__jule_any_type6)}));
		return nullptr;;
	};
	_1ddac4809_disallowBuiltin(&(*_self_));
	jule::Trait<_1ddad134e_Lookup> _140217_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1ddad134e_Lookup>(_138917_imp, 1);
	jule::Ptr<_1ddab53cc_TypeKind> _140417_kind = _1ddacaeb4_checkDecl(&(*_self_), _138739_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_140217_lookup;
	_1ddac462d_allowBuiltin(&(*_self_));
	return jule::Trait<_1ddab4e9d_Kind>(_140417_kind, 5);;
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1ddacaba6_build(_1ddac3c48_typeChecker* _self_, jule::Any& _141029_declKind) {
	jule::Trait<_1ddab4e9d_Kind> _141117_kind = nullptr;;
	{
		auto &_match_expr{ _141029_declKind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c7531a52:;
			{
				jule::Trait<_1ddab4e9d_Kind> _141421_t = _1ddac81e2_buildIdent(&(*_self_), _141029_declKind.cast_ptr<_2090b971d_IdentTypeDecl>(&__jule_any_type20));;
				if ((_141421_t != nullptr)) {
					_141117_kind=_141421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c7532855:;
			{
				jule::Trait<_1ddab4e9d_Kind> _141921_t = _1ddac8500_buildSubIdent(&(*_self_), _141029_declKind.cast_ptr<_2090b9d6c_SubIdentTypeDecl>(&__jule_any_type94));;
				if ((_141921_t != nullptr)) {
					_141117_kind=_141921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c75328bb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddabd8ad_Sptr> _142521_t = _1ddac8b1b_buildSptr(&(*_self_), _141029_declKind.cast_ptr<_2090ba510_SptrTypeDecl>(&__jule_any_type80));;
				if ((_142521_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_142521_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c753202a:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddac1e22_Ptr> _143121_t = _1ddac9237_buildPtr(&(*_self_), _141029_declKind.cast_ptr<_2090baed3_PtrTypeDecl>(&__jule_any_type79));;
				if ((_143121_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_143121_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c7532091:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddabe31a_Slc> _143721_t = _1ddac9545_buildSlc(&(*_self_), _141029_declKind.cast_ptr<_2090ba90b_SlcTypeDecl>(&__jule_any_type78));;
				if ((_143721_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_143721_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c7532107:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddac14b5_Arr> _144321_t = _1ddac9853_buildArr(&(*_self_), _141029_declKind.cast_ptr<_2090bb665_ArrTypeDecl>(&__jule_any_type77));;
				if ((_144321_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_144321_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1c753216d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddac08c1_Map> _144921_t = _1ddac9b61_buildMap(&(*_self_), _141029_declKind.cast_ptr<_2090bbdb3_MapTypeDecl>(&__jule_any_type81));;
				if ((_144921_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_144921_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1c7532a75:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ddabed98_Tuple> _145521_t = _1ddac9e6e_buildTuple(&(*_self_), _141029_declKind.cast_ptr<_2090babe7_TupleTypeDecl>(&__jule_any_type82));;
				if ((_145521_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_145521_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c7532adb:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1dd9ca2c0_FnIns> _146121_t = _1ddaca58a_buildFn(&(*_self_), _141029_declKind.cast_ptr<_2090caad6_FnDecl>(&__jule_any_type15));;
				if ((_146121_t != nullptr)) {
					_141117_kind=jule::Trait<_1ddab4e9d_Kind>(_146121_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c7532b52:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1ddab4e9d_Kind> _146721_t = _1ddaca898_buildByNamespace(&(*_self_), _141029_declKind.cast_ptr<_2090ba224_NamespaceTypeDecl>(&__jule_any_type98));;
				if ((_146721_t != nullptr)) {
					_141117_kind=_146721_t;
				};
			}
		}
		else {
			_case_begin_1c7531dc6:;
			{
				_1ddac4452_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c7531cd8:;
	};
	if ((_141117_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _141117_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1c753dda0:;
			{
				return _141117_kind.cast_ptr<_1ddab53cc_TypeKind>(5);;
			}
		}
		else {
			_case_begin_1c753de49:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _148221_tk = jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=_141117_kind});;
				{
					auto &_match_expr{ _141117_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_1c753e884:;
						{
							if (((*_self_)._field_ignoredGenerics != nullptr)) {
								{
									(*((*_self_)._field_ignoredGenerics))=jule::append((*((*_self_)._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>>::make({_148221_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1c753e90b:;
						{
							jule::Ptr<_2090d5c23_StructIns> _148921_s = _141117_kind.cast_ptr<_2090d5c23_StructIns>(0);;
							if (((_148921_s.get()._field_Decl != nullptr) && _148921_s.get()._field_Decl.get()._field_CppLinked)) {
								_148221_tk.get()._field_CppIdent=_148921_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1c753e774:;
				};
				return _148221_tk;;
			}
		}
		_match_end_1c753da70:;
	};
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1ddacaeb4_checkDecl(_1ddac3c48_typeChecker* _self_, jule::Ptr<_2090b9157_TypeDecl>& _149833_decl) {
	jule::Ptr<_222e62217_Token> _150017_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_149833_decl.get()._field_Token;
	jule::Ptr<_1ddab53cc_TypeKind> _150317_kind = _1ddacaba6_build(&(*_self_), _149833_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_150017_errorToken;
	return _150317_kind;;
}



inline void _1ddacb239_check(_1ddac3c48_typeChecker* _self_, jule::Ptr<_1ddab97aa_TypeSymbol>& _150929_t) {
	if ((_150929_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1ddab53cc_TypeKind> _151317_kind = _1ddacaeb4_checkDecl(&(*_self_), _150929_t.get()._field_Decl);;
	if ((_151317_kind == nullptr)) {
		_1ddab9d3d_removeKind(_150929_t.ptr());
		return;;
	};
	_150929_t.get()._field_Kind=_151317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddac3c48_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1ddacb899_prim(jule::Str& _152521_ident, jule::Ptr<_1ddaba129_Prim> _152533_t) {
	return (_152533_t.get()._field_Kind == _152521_ident);;
}



inline jule::Bool static__1ddacbbda_exist(jule::Str& _152922_ident, jule::Ptr<_1ddab53cc_TypeKind>& _152939_k) {
	{
		
		if ((_1ddab7764_Prim(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545802:;
			{
				return static__1ddacb899_prim(_152922_ident,_1ddab7764_Prim(_152939_k.ptr()));;
			}
		}
		else if ((_1ddab79c8_Sptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545868:;
			{
				jule::Ptr<_1ddabd8ad_Sptr> _153421_sptr = _1ddab79c8_Sptr(_152939_k.ptr());;
				return static__1ddacbbda_exist(_152922_ident,_153421_sptr.get()._field_Elem);;
			}
		}
		else if ((_1ddab7c3c_Ptr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c75458ce:;
			{
				jule::Ptr<_1ddac1e22_Ptr> _153721_ptr = _1ddab7c3c_Ptr(_152939_k.ptr());;
				return static__1ddacbbda_exist(_152922_ident,_153721_ptr.get()._field_Elem);;
			}
		}
		else if ((_1ddab86dd_Slc(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545945:;
			{
				jule::Ptr<_1ddabe31a_Slc> _154021_slc = _1ddab86dd_Slc(_152939_k.ptr());;
				return static__1ddacbbda_exist(_152922_ident,_154021_slc.get()._field_Elem);;
			}
		}
		else if ((_1ddab8479_Arr(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545bcb:;
			{
				jule::Ptr<_1ddac14b5_Arr> _154321_arr = _1ddab8479_Arr(_152939_k.ptr());;
				return static__1ddacbbda_exist(_152922_ident,_154321_arr.get()._field_Elem);;
			}
		}
		else if ((_1ddab918e_Map(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545c42:;
			{
				jule::Ptr<_1ddac08c1_Map> _154621_m = _1ddab918e_Map(_152939_k.ptr());;
				return (static__1ddacbbda_exist(_152922_ident,_154621_m.get()._field_Key) || static__1ddacbbda_exist(_152922_ident,_154621_m.get()._field_Val));;
			}
		}
		else if ((_1ddab8bb6_Struct(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545ca8:;
			{
				jule::Ptr<_2090d5c23_StructIns> _155021_s = _1ddab8bb6_Struct(_152939_k.ptr());;
				{
					auto &expr = _155021_s.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1c754be24:;
					if (it != expr.end()) {
						jule::Ptr<_1ddab3ba0_InsGeneric> _155125_g = *it;
						{
							if (static__1ddacbbda_exist(_152922_ident,_155125_g.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1c754be24:;
						++it;
						goto _iter_begin_1c754be24;
					}
					_iter_end_1c754be24:;
				};
				return false;;
			}
		}
		else if ((_1ddab8952_Fn(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7545d1e:;
			{
				jule::Ptr<_1dd9ca2c0_FnIns> _155821_f = _1ddab8952_Fn(_152939_k.ptr());;
				{
					auto &expr = _155821_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1c754d794:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c9401_ParamIns> _155925_p = *it;
						{
							if (_1dd9c640e_IsSelf(_155925_p.get()._field_Decl.ptr())) {
								goto _iter_next_1c754d794;
							};
							if (static__1ddacbbda_exist(_152922_ident,_155925_p.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1c754d794:;
						++it;
						goto _iter_begin_1c754d794;
					}
					_iter_end_1c754d794:;
				};
				if ((_155821_f.get()._field_Result != nullptr)) {
					return static__1ddacbbda_exist(_152922_ident,_155821_f.get()._field_Result);;
				};
				return false;;
			}
		}
		else if ((_1ddab9403_Tup(_152939_k.ptr()) != nullptr)) {
			_case_begin_1c7546072:;
			{
				jule::Ptr<_1ddabed98_Tuple> _157221_tup = _1ddab9403_Tup(_152939_k.ptr());;
				{
					auto &expr = _157221_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1c7550961:;
					if (it != expr.end()) {
						jule::Ptr<_1ddab53cc_TypeKind> _157325_t = *it;
						{
							if (static__1ddacbbda_exist(_152922_ident,_157325_t)) {
								return true;;
							};
						}
						_iter_next_1c7550961:;
						++it;
						goto _iter_begin_1c7550961;
					}
					_iter_end_1c7550961:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c754578b:;
			{
				return false;;
			}
		}
		_match_end_1c75456c0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ddacb459_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de3b0c60_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de40bcde_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1de40cc9b_stop(_1de40c619_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1de40d010_stopped(_1de40c619_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);;
}



inline jule::Bool _1de40d274_finished(_1de40c619_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());;
}



inline jule::Bool _1de40d4d8_isLastSt(_1de40c619_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());;
}



inline void _1de40d807_pushErr(_1de40c619_scopeParser* _self_, jule::Ptr<_222e62217_Token> _19126_token, jule::Str _19141_fmt) {
	_1de4296be_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _1de40db26_pushSuggestion(_1de40c619_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1de4299dd_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,_19646_args);
}



inline void _1de40dd9b_insertAsNext(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1de40bcde_stmt>(_1de40bcde_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_1de40bcde_stmt> _1de40e110_next(_1de40c619_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];;
}



inline jule::Ptr<_2090c90e0_ScopeTree> _1de40e4b7_buildScope(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _21034_tokens, jule::Ptr<_222e62217_Token> _21056_end) {
	jule::Ptr<_2090c90e0_ScopeTree> _21117_s = _1de40ac22_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1de40c619_scopeParser _21417_ssp = _1de40c619_scopeParser{._field_p=(*_self_)._field_p, };;
	_1de4181a2_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;;
}



inline jule::Ptr<_2090cbab5_VarDecl> _1de40e7c5_buildVarSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _22134_tokens) {
	jule::Ptr<_2090cbab5_VarDecl> _22217_v = _1de42c20a_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;;
}



inline jule::Ptr<_2090cbe6c_RetSt> _1de40ead3_buildRetSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _22733_tokens) {
	jule::Ptr<_2090cbe6c_RetSt> _22817_st = jule::new_ptr<_2090cbe6c_RetSt>(_2090cbe6c_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;;
}



inline jule::Ptr<_2090cc5cc_Iter> _1de40ede1_buildWhileNextIter(_1de40c619_scopeParser* _self_, jule::Ptr<_1de40bcde_stmt>& _23842_s) {
	jule::Ptr<_2090cc5cc_Iter> _23917_it = jule::new_ptr<_2090cc5cc_Iter>(_2090cc5cc_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_222e62217_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_2090ccda2_WhileKind> _24317_kind = jule::new_ptr<_2090ccda2_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_1de40d4d8_isLastSt(&(*_self_))) {
		_1de40d807_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1de40e110_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_222e62217_Token>> _25517_stTokens = _1de423e05_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1de40bcde_stmt> _25721_stmt = jule::new_ptr<_1de40bcde_stmt>(_1de40bcde_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1de417d83_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_222e62217_Token>> _26617_blockTokens = _1de426ec4_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_1de40cc9b_stop(&(*_self_));
		_1de40d807_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1de40e4b7_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_2090ccda2_WhileKind> _1de4101ee_buildWhileIterKind(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _28342_tokens) {
	return jule::new_ptr<_2090ccda2_WhileKind>(_2090ccda2_WhileKind{._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de41050c_getRangeKindKeysTokens(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _29018_vars;;
	jule::Slice<_222b38ae2_Log> _29024_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_2090cbab5_VarDecl> _1de41081a_buildRangeKindKey(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_2090cbab5_VarDecl> _29917_key = jule::new_ptr<_2090cbab5_VarDecl>(_2090cbab5_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_1de40d807_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_1de40d807_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de40d807_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _1de410b28_buildRangeKindKeys(_1de40c619_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_1d438ce23:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1de41081a_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_1d438ce23:;
			++it;
			goto _iter_begin_1d438ce23;
		}
		_iter_end_1d438ce23:;
	};
	return _32117_keys;;
}



inline void _1de410e69_setupRangeKindKeysPlain(_1de40c619_scopeParser* _self_, jule::Ptr<_2090cd743_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_222e62217_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _32917_keyTokens = _1de41050c_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1de40d807_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _33617_keys = _1de410b28_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1de4112bb_setupRangeKindKeysExplicit(_1de40c619_scopeParser* _self_, jule::Ptr<_2090cd743_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_222e62217_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _34517_rang = _1de426ec4_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1de410e69_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _1de4115eb_setupRangeKindKeys(_1de40c619_scopeParser* _self_, jule::Ptr<_2090cd743_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_222e62217_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1de40d807_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1de4112bb_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_1de410e69_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_2090cd743_RangeKind> _1de411a4c_buildRangeIterKind(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_222e62217_Token>>& _36514_exprTokens, jule::Ptr<_222e62217_Token>& _36541_inToken) {
	jule::Ptr<_2090cd743_RangeKind> _36617_rng = jule::new_ptr<_2090cd743_RangeKind>(_2090cd743_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_1de40d807_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_1de4115eb_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1de411e04_buildCommonIterKind(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _38043_tokens, jule::Ptr<_222e62217_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_1d4398736:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d4399d31:;
							{
								(_38117_braceN)++;
								goto _iter_next_1d4398736;
							}
						}
						else {
							_case_begin_1d4399924:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1d4399715:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1d4398736;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1d4399dca:;
						{
							jule::Slice<jule::Ptr<_222e62217_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_222e62217_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return jule::Any(_1de411a4c_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok), &__jule_any_type40);;
						}
					}
					_match_end_1d439a68e:;
				};
			}
			_iter_next_1d4398736:;
			++it;
			_38214_i++;
			goto _iter_begin_1d4398736;
		}
		_iter_end_1d4398736:;
	};
	return jule::Any(_1de4101ee_buildWhileIterKind(&(*_self_), _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_2090cc5cc_Iter> _1de412212_buildCommonIter(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _40738_tokens) {
	jule::Ptr<_2090cc5cc_Iter> _40817_it = jule::new_ptr<_2090cc5cc_Iter>(_2090cc5cc_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1de40cc9b_stop(&(*_self_));
		_1de40d807_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _41817_exprTokens = _1de423e05_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1de411e04_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_222e62217_Token>> _42317_scopeTokens = _1de426ec4_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_1de40cc9b_stop(&(*_self_));
		_1de40d807_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1de40e4b7_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_2090cc5cc_Iter> _1de412520_buildIterSt(_1de40c619_scopeParser* _self_, jule::Ptr<_1de40bcde_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _1de40ede1_buildWhileNextIter(&(*_self_), _43735_st);;
	};
	return _1de412212_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);;
}



inline jule::Ptr<_2090cdaea_BreakSt> _1de41282d_buildBreakSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _44436_tokens) {
	jule::Ptr<_2090cdaea_BreakSt> _44517_brk = jule::new_ptr<_2090cdaea_BreakSt>(_2090cdaea_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1de40d807_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_1de40db26_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_1de40d807_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_2090cdea2_ContSt> _1de412b3b_buildContSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _46235_tokens) {
	jule::Ptr<_2090cdea2_ContSt> _46317_cont = jule::new_ptr<_2090cdea2_ContSt>(_2090cdea2_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1de40d807_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_1de40db26_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_1de40d807_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_2090ce425_If> _1de412e49_buildIf(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _48031_tokens) {
	jule::Ptr<_2090ce425_If> _48117_model = jule::new_ptr<_2090ce425_If>(_2090ce425_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_222e62217_Token>> _48517_exprTokens = _1de423e05_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1de40d807_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _49217_scopeTokens = _1de426ec4_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1de40cc9b_stop(&(*_self_));
		_1de40d807_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_222e62217_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_1de40d807_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_1de40e4b7_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;;
}



inline jule::Ptr<_2090ce7cc_Else> _1de413257_buildElse(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _51333_tokens) {
	jule::Ptr<_2090ce7cc_Else> _51417_els = jule::new_ptr<_2090ce7cc_Else>(_2090ce7cc_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _51917_scopeTokens = _1de426ec4_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_1de40d807_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1de40cc9b_stop(&(*_self_));
			_1de40d807_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1de40e4b7_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_2090cec50_Conditional> _1de413565_buildIfElseChain(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _53739_tokens) {
	jule::Ptr<_2090cec50_Conditional> _53817_chain = jule::new_ptr<_2090cec50_Conditional>(_2090cec50_Conditional{._field_Head=_1de412e49_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1d43b5643;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_2090ce425_If> _55025_elif = _1de412e49_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1d43b5643;
			};
			_53817_chain.get()._field_Default=_1de413257_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_1d43b5643;
		}
	_iter_next_1d43b5643:;
	}
	_iter_end_1d43b5643:;;
	return _53817_chain;;
}



inline jule::Ptr<_2090bd678_Expr> _1de413873_buildCoCallSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _56036_tokens) {
	jule::Ptr<_222e62217_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_2090bd678_Expr> _56317_e = _1de429ceb_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d43b98de:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_2090c265a_FnCallExpr>(&__jule_any_type114).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1d43b9b64:;
			{
				_1de40d807_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1d43b9b0e:;
	};
	return _56317_e;;
}



inline jule::Ptr<_2090c6bae_GotoSt> _1de413b81_buildGotoSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _57635_tokens) {
	jule::Ptr<_2090c6bae_GotoSt> _57717_gt = jule::new_ptr<_2090c6bae_GotoSt>(_2090c6bae_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_1de40d807_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if ((_57635_tokens.len() > 2LL)) {
		_1de40d807_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_222e62217_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de40d807_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_2090c6e9a_FallSt> _1de413e8e_buildFallSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _59635_tokens) {
	jule::Ptr<_2090c6e9a_FallSt> _59717_fll = jule::new_ptr<_2090c6e9a_FallSt>(_2090c6e9a_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_1de40d807_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de41429c_buildTypeAliasSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _60640_tokens) {
	jule::Ptr<_2090d0426_TypeAliasDecl> _60717_tad = _1de42b3e6_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;;
}



inline void _1de41470e_pushCaseExpr(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _61235_tokens, jule::Ptr<_222e62217_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_2090bd678_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_2090b9157_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_2090bd678_Expr>(_2090bd678_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type96)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1de40d807_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_1de429ceb_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de414b60_buildCaseExprs(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _63638_tokens, jule::Ptr<_222e62217_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_2090bd678_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_1d43c5d07:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1d43c8238:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1d43c7d2b:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1d43c7b1c:;
					};
					goto _iter_next_1d43c5d07;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1d43c5d07;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1d43c8a30:;
						{
							jule::Slice<jule::Ptr<_222e62217_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1de40d807_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_1de41470e_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1d43c8a96:;
						{
							_63661_colon=_64121_tok;
							_1de41470e_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1d43c8535:;
				};
			}
			_iter_next_1d43c5d07:;
			++it;
			_64114_i++;
			goto _iter_begin_1d43c5d07;
		}
		_iter_end_1d43c5d07:;
	};
	_1de40d807_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;;
}



inline jule::Ptr<_2090c90e0_ScopeTree> _1de414e6d_buildCaseScope(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_222e62217_Token>> _68022_next;;
			({
				__jule_tuple_sx_222e62217_Token__jule_tuple_bool __jule_assign_result = _1de40b9e2_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1d43cc4a1;
			};
			jule::Ptr<_222e62217_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1d43cc4a1;
			};
			jule::Slice<jule::Ptr<_222e62217_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_2090c90e0_ScopeTree> _69021_scope = _1de40e4b7_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1d43cc4a1:;
	}
	_iter_end_1d43cc4a1:;;
	jule::Ptr<_222e62217_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_2090c90e0_ScopeTree> _69817_scope = _1de40e4b7_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_2090d0899_Case__jule_tuple_bool _1de415325_buildCase(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_2090d0899_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2090d0899_Case> _70417_c = jule::new_ptr<_2090d0899_Case>(_2090d0899_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_222e62217_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1de414b60_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_1de414e6d_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_2090d0899_Case__jule_tuple_x_2090ce7cc_Else _1de4156cc_buildCases(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_2090d0899_Case__jule_tuple_x_2090ce7cc_Else __jule_func_result;
	jule::Slice<jule::Ptr<_2090d0899_Case>> _71917_cases = nullptr;;
	jule::Ptr<_2090ce7cc_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_222e62217_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1de40d807_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1d43d5ca1;
			};
			jule::Ptr<_2090d0899_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_2090d0899_Case__jule_tuple_bool __jule_assign_result = _1de415325_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_2090ce7cc_Else>(_2090ce7cc_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1de40d807_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1d43d5ca1:;
	}
	_iter_end_1d43d5ca1:;;
	if (_72117_defNotLast) {
		_1de40d807_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_2090d1070_MatchCase> _1de4159da_buildMatchCase(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _75237_tokens) {
	jule::Ptr<_2090d1070_MatchCase> _75317_m = jule::new_ptr<_2090d1070_MatchCase>(_2090d1070_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _76317_exprTokens = _1de423e05_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_1de40d807_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_222e62217_Token>> _77117_blockToks = _1de426ec4_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_1de40cc9b_stop(&(*_self_));
		_1de40d807_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1de40db26_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_2090d0899_Case__jule_tuple_x_2090ce7cc_Else __jule_assign_result = _1de4156cc_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_2090c90e0_ScopeTree> _1de415ce8_buildScopeSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_222e62217_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1de40d807_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1de40d807_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1de40d807_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _81517_scopeTokens = _1de426ec4_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_1de40d807_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1de40d807_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2090c90e0_ScopeTree> _82217_scope = _1de40e4b7_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_2090c6807_LabelSt> _1de416106_buildLabelSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _82836_tokens) {
	jule::Ptr<_2090c6807_LabelSt> _82917_lbl = jule::new_ptr<_2090c6807_LabelSt>(_2090c6807_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_1de40dd9b_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__2090c87a4_StmtData__jule_tuple_bool _1de416414_buildIdSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _84333_tokens) {
	__jule_tuple__2090c87a4_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((_84333_tokens.len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_222e62217_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1d43ebea4:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1de416106_buildLabelSt(&(*_self_), _84333_tokens), &__jule_any_type58);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d43ebe4e:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1de425434_assignInfo> _1de416722_buildAssignInfo(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _85739_tokens) {
	jule::Ptr<_1de425434_assignInfo> _85817_info = jule::new_ptr<_1de425434_assignInfo>(_1de425434_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_1d43ed725:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d43eed42:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1d43ee935:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1d43ee726:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1d4400172:;
						{
							goto _iter_next_1d43ed725;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1d44001d8:;
						{
							goto _iter_next_1d43ed725;
						}
					}
					else if ((!(_222e66cee_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1d440024e:;
						{
							goto _iter_next_1d43ed725;
						}
					}
					_match_end_1d43eeddb:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_222e66a57_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1d43ed725;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_222e66a57_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1de40d807_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1d43ed725;
			}
			_iter_next_1d43ed725:;
			++it;
			_86214_i++;
			goto _iter_begin_1d43ed725;
		}
		_iter_end_1d43ed725:;
	};
	return _85817_info;;
}



inline jule::Ptr<_2090c75a5_AssignLeft> _1de416a30_buildAssignL(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _90536_tokens) {
	jule::Ptr<_2090c75a5_AssignLeft> _90617_l = jule::new_ptr<_2090c75a5_AssignLeft>(_2090c75a5_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_2090c75a5_AssignLeft>> _1de416d3d_buildAssignLs(_1de40c619_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_2090c75a5_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_1d4406de3:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _91821_part = *it;
			{
				jule::Ptr<_2090c75a5_AssignLeft> _91921_l = _1de416a30_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1d4406de3:;
			++it;
			goto _iter_begin_1d4406de3;
		}
		_iter_end_1d4406de3:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de41714b_buildPlainAssign(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _92640_tokens) {
	__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1de425434_assignInfo> _92717_info = _1de416722_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2090c7ae4_AssignSt> _93217_assign = jule::new_ptr<_2090c7ae4_AssignSt>(_2090c7ae4_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _93618_parts;;
	jule::Slice<_222b38ae2_Log> _93625_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1de416d3d_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1de429ceb_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de417459_buildDeclAssign(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _95038_tokens) {
	__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_222e62217_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2090c7ae4_AssignSt> _96117_assign = jule::new_ptr<_2090c7ae4_AssignSt>(_2090c7ae4_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _96617_rang = _1de426ec4_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_1de40d807_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_222e62217_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1de429ceb_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _97818_parts;;
	jule::Slice<_222b38ae2_Log> _97825_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_1d441277d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1de40d807_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1d441277d;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1de40d807_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1d441277d;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1de40d807_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1d441277d;
				};
				jule::Ptr<_2090c75a5_AssignLeft> _101421_l = _1de416a30_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1d441277d:;
			++it;
			goto _iter_begin_1d441277d;
		}
		_iter_end_1d441277d:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool _1de417767_buildAssignSt(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _102337_tokens) {
	__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1de4257ca_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d441b4ce:;
			{
				({
					__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_assign_result = _1de417459_buildDeclAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d441b0c2:;
			{
				({
					__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_assign_result = _1de41714b_buildPlainAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d441b06c:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_2090be019_UseExpr> _1de417a75_buildUseExpr(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_1de40d807_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_2090be019_UseExpr> _104317_ue = jule::new_ptr<_2090be019_UseExpr>(_2090be019_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_1de429ceb_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1de417d83_buildSt(_1de40c619_scopeParser* _self_, jule::Ptr<_1de40bcde_stmt>& _105131_st) {
	jule::Ptr<_222e62217_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__2090c87a4_StmtData__jule_tuple_bool __jule_assign_result = _1de416414_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_2090c7ae4_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_2090c7ae4_AssignSt__jule_tuple_bool __jule_assign_result = _1de417767_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type60);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d442154a:;
			{
				return jule::Any(_1de417a75_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1d44216b0:;
			{
				return jule::Any(_1de40e7c5_buildVarSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1d4421726:;
			{
				return jule::Any(_1de40ead3_buildRetSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1d44217d1:;
			{
				return jule::Any(_1de412520_buildIterSt(&(*_self_), _105131_st), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1d4421847:;
			{
				return jule::Any(_1de41282d_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1d44218ad:;
			{
				return jule::Any(_1de412b3b_buildContSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1d4421924:;
			{
				return jule::Any(_1de413565_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1d442198a:;
			{
				return jule::Any(_1de413873_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1d4421a01:;
			{
				return jule::Any(_1de413b81_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d4421a67:;
			{
				return jule::Any(_1de413e8e_buildFallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d4421acd:;
			{
				return jule::Any(_1de41429c_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1d4421b44:;
			{
				return jule::Any(_1de4159da_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1d4421bbb:;
			{
				return jule::Any(_1de415ce8_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d4421c43:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_1de415ce8_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type53);;
				};
			}
		}
		_match_end_1d4421407:;
	};
	jule::Ptr<_2090bd678_Expr> _110117_expr = _1de429ceb_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type54);;
	};
	_1de40d807_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1de4181a2_build(_1de40c619_scopeParser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _110929_tokens, jule::Ptr<_2090c90e0_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1de40c185_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_1de40d4d8_isLastSt(&(*_self_)))) && (!(_1de40d274_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1de40bcde_stmt> _111721_st = _1de40e110_next(&(*_self_));;
			jule::Any _111821_data = _1de417d83_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_2090c89d5_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1de40d010_stopped(&(*_self_))) {
				goto _iter_end_1d4429d6c;
			};
		}
	_iter_next_1d4429d6c:;
	}
	_iter_end_1d4429d6c:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de40c619_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1de4193c3_pushErr(_1de418b31_exprBuilder* _self_, jule::Ptr<_222e62217_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1de4296be_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,_4454_args);
}



inline void _1de4196e2_pushSuggestion(_1de418b31_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1de4299dd_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,_4946_args);
}



inline jule::Ptr<_2090be305_TupleExpr> _1de419a00_buildTuple(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>& _5334_parts) {
	jule::Ptr<_2090be305_TupleExpr> _5417_tuple = jule::new_ptr<_2090be305_TupleExpr>(_2090be305_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_2090bd678_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1d444eb94:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1de423520_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1d444eb94:;
			++it;
			goto _iter_begin_1d444eb94;
		}
		_iter_end_1d444eb94:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_2090be6ac_LitExpr> _1de419d0d_buildLit(_1de418b31_exprBuilder* _self_, jule::Ptr<_222e62217_Token> _6327_token) {
	return jule::new_ptr<_2090be6ac_LitExpr>(_2090be6ac_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de41a11b_buildPrimitiveType(_1de418b31_exprBuilder* _self_, jule::Ptr<_222e62217_Token>& _7038_token) {
	return _1de4394e2_buildPrimType(_7038_token);;
}



inline jule::Any _1de41a429_buildSingle(_1de418b31_exprBuilder* _self_, jule::Ptr<_222e62217_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1d4451679:;
			{
				return jule::Any(_1de419d0d_buildLit(&(*_self_), _7434_token), &__jule_any_type108);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d4451701:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_2090c0dea_VariadicExpr>(_2090c0dea_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type83);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1d4451778:;
			{
				return jule::Any(_1de4247c9_buildIdentExpr(_7434_token), &__jule_any_type87);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d4451800:;
			{
				return jule::Any(_1de41a11b_buildPrimitiveType(&(*_self_), _7434_token), &__jule_any_type96);;
			}
		}
		_match_end_1d445069a:;
	};
	_1de4193c3_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2090c0339_IdentExpr> _1de41a737_buildCppLinkedIdent(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1de4193c3_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_222e62217_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4193c3_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090c0339_IdentExpr> _10917_expr = _1de4247c9_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_2090c0a43_UnaryExpr> _1de41aa45_buildUnary(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _11433_tokens) {
	jule::Ptr<_222e62217_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1de4193c3_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_222e62921_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1de4193c3_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type6)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_2090c0a43_UnaryExpr>(_2090c0a43_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1de423520_buildFromTokens(&(*_self_), _11433_tokens)});;
}



inline jule::Ptr<_2090c1acc_SubIdentExpr> _1de41ad53_buildObjSubIdent(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_222e62217_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2090c1acc_SubIdentExpr>(_2090c1acc_SubIdentExpr{._field_Expr=_1de423520_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_2090c1659_NsSelectionExpr> _1de41b161_buildNsSubIdent(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _15039_tokens) {
	jule::Ptr<_2090c1659_NsSelectionExpr> _15117_ns = jule::new_ptr<_2090c1659_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1d445c960:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1de4193c3_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1de4196e2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1de4193c3_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1de4196e2_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d445c960:;
			++it;
			_15214_i++;
			goto _iter_begin_1d445c960;
		}
		_iter_end_1d445c960:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de41b46e_buildType(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_2090b9157_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1de4193c3_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1de4193c3_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1de41b77c_buildSubIdent(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_222e62217_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1d4464b10:;
			{
				return jule::Any(_1de41ad53_buildObjSubIdent(&(*_self_), _18337_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1d446510a:;
			{
				return jule::Any(_1de41b161_buildNsSubIdent(&(*_self_), _18337_tokens), &__jule_any_type97);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d4465171:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_1de41b46e_buildType(&(*_self_), _18337_tokens), &__jule_any_type96);;
				};
			}
		}
		_match_end_1d4464ea6:;
	};
	_1de4193c3_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2090c0dea_VariadicExpr> _1de41ba8a_buildVariadic(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _20136_tokens) {
	jule::Ptr<_222e62217_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_2090c0dea_VariadicExpr>(_2090c0dea_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1de423520_buildFromTokens(&(*_self_), _20136_tokens)});;
}



inline jule::Any _1de41bd98_buildOpRight(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _21036_tokens) {
	jule::Ptr<_222e62217_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1d44690cb:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1de422e04_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type114) {
						_case_begin_1d446a6a4:;
						{
							_21521_d.cast_ptr<_2090c265a_FnCallExpr>(&__jule_any_type114).get()._field_Exception=jule::new_ptr<_2090c90e0_ScopeTree>(_2090c90e0_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1d446a7d6:;
				};
			}
		}
		_match_end_1d4468e11:;
	};
	_1de4193c3_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_2090bd964_RangeExpr> _1de41c1c8_buildBetweenParentheses(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1de4193c3_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_2090bd964_RangeExpr>(_2090bd964_RangeExpr{._field_Expr=_1de423520_buildFromTokens(&(*_self_), _23146_tokens)});;
}



inline jule::Ptr<_2090c12a2_CastExpr> _1de41c4e7_tryBuildCast(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1d446da2b:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d4470104:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1d446da2b;
							}
						}
						else {
							_case_begin_1d446ebe7:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1d446e9d8:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1d446da2b;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_222e62217_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_222e62217_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_222e62217_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_2090c12a2_CastExpr> _27721_cast = jule::new_ptr<_2090c12a2_CastExpr>(_2090c12a2_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1de4193c3_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1de4196e2_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1de4193c3_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1de4196e2_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_2090b9157_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1de4193c3_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1de426ec4_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1de423520_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1d446da2b:;
			++it;
			_24513_i++;
			goto _iter_begin_1d446da2b;
		}
		_iter_end_1d446da2b:;
	};
	return nullptr;;
}



inline void _1de41c8b0_pushArg(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_2090bd678_Expr>>& _31731_args, jule::Slice<jule::Ptr<_222e62217_Token>> _31750_tokens, jule::Ptr<_222e62217_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1de423520_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de41cbbd_buildArgs(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1d447c6e9:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d447de8c:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1d447da80:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1d447d871:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1d447c6e9;
				};
				_1de41c8b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1d447c6e9:;
			++it;
			_33613_i++;
			goto _iter_begin_1d447c6e9;
		}
		_iter_end_1d447c6e9:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1de41c8b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1de41c8b0_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _1de41cecb_buildCallGenerics(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _37418_parts;;
	jule::Slice<_222b38ae2_Log> _37425_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1d44831c2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1d44831c2;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_2090b9157_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1de4193c3_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1d44831c2:;
			++it;
			goto _iter_begin_1d44831c2;
		}
		_iter_end_1d44831c2:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_2090c265a_FnCallExpr> _1de41d42c_buildFnCall(_1de418b31_exprBuilder* _self_, jule::Ptr<_222e62217_Token>& _39235_token, jule::Slice<jule::Ptr<_222e62217_Token>>& _39255_expr, jule::Slice<jule::Ptr<_222e62217_Token>>& _39276_args) {
	return jule::new_ptr<_2090c265a_FnCallExpr>(_2090c265a_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1de423520_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1de41cbbd_buildArgs(&(*_self_), _39276_args), });;
}



inline jule::Any _1de41d73a_buildParenthesesRange(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _40045_tokens) {
	jule::Ptr<_222e62217_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d4487d20:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d448868e:;
						{
							jule::Ptr<_2090c12a2_CastExpr> _40625_expr = _1de41c4e7_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type112);;
							};
						}
					}
					_match_end_1d44884c4:;
				};
			}
		}
		_match_end_1d4487b55:;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_assign_result = _1de42726b_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1de41c1c8_buildBetweenParentheses(&(*_self_), _41234_args_tokens), &__jule_any_type107);;
	};
	return jule::Any(_1de41d42c_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens), &__jule_any_type114);;
}



inline jule::Ptr<_2090bedb6_UnsafeExpr> _1de41da48_buildUnsafeExpr(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _42138_tokens) {
	jule::Ptr<_222e62217_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _42517_rangeTokens = _1de426ec4_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2090bedb6_UnsafeExpr>(_2090bedb6_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1de423520_buildFromTokens(&(*_self_), _42517_rangeTokens)});;
}



inline jule::Ptr<_2090caad6_FnDecl> _1de41dd56_buildAnonFn(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _43635_tokens) {
	jule::Ptr<_2090caad6_FnDecl> _43717_f = _1de430230_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_2090cae38_IsAnon(_43717_f.ptr())))) {
		_1de4193c3_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1de41e164_buildUnsafe(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1d448e7a5:;
			{
				return jule::Any(_1de41dd56_buildAnonFn(&(*_self_), _44535_tokens), &__jule_any_type15);;
			}
		}
		else {
			_case_begin_1d448ec17:;
			{
				return jule::Any(_1de41da48_buildUnsafeExpr(&(*_self_), _44535_tokens), &__jule_any_type109);;
			}
		}
		_match_end_1d448eb90:;
	};
}



inline void _1de41e52c_pushRangeLitPart(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _45539_part, jule::Ptr<_222e62217_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de41e85c_getBraceRangeLitExprParts(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1d4493da3:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d4495646:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1d4495239:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1d449502a:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1d4493da3;
				};
				_1de41e52c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1d4493da3:;
			++it;
			_47713_i++;
			goto _iter_begin_1d4493da3;
		}
		_iter_end_1d4493da3:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1de41e52c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1de41e52c_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_2090c30d9_FieldExprPair> _1de41eb7b_buildFieldExprPair(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090c30d9_FieldExprPair> _51317_pair = jule::new_ptr<_2090c30d9_FieldExprPair>(_2090c30d9_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1de423520_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_2090bd678_Expr> _1de41ee89_buildStructLitExpr(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _52142_tokens) {
	jule::Ptr<_222e62217_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_2090bd678_Expr>(_2090bd678_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=jule::Any(_1de41eb7b_buildFieldExprPair(&(*_self_), _52142_tokens), &__jule_any_type85)});;
		};
	};
	return _1de423520_buildFromTokens(&(*_self_), _52142_tokens);;
}



inline jule::Slice<jule::Ptr<_2090bd678_Expr>> _1de420297_buildStructLitExprs(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _53717_parts = _1de41e85c_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2090bd678_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_2090bd678_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1d449d5b6:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1de41ee89_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1d449d5b6:;
			++it;
			goto _iter_begin_1d449d5b6;
		}
		_iter_end_1d449d5b6:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_2090c3837_StructLit> _1de4205c7_buildTypedStructLiteral(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_2090b9157_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1de4193c3_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_222e62217_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1de4193c3_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2090c3837_StructLit>(_2090c3837_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1de420297_buildStructLitExprs(&(*_self_), _54946_tokens)});;
}



inline jule::Ptr<_2090bd678_Expr> _1de4208e6_buildBraceLitPart(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_222e62217_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _57425_r;;
	({
		__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_assign_result = _1de42428a_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_2090bd678_Expr>(_2090bd678_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_2090c4580_KeyValPair>(_2090c4580_KeyValPair{._field_Key=_1de423520_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1de423520_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}), &__jule_any_type86)});;
	};
	return _1de423520_buildFromTokens(&(*_self_), _57341_tokens);;
}



inline jule::Ptr<_2090c3caa_BraceLit> _1de420c04_buildBraceLit(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _59037_tokens) {
	jule::Ptr<_2090c3caa_BraceLit> _59117_lit = jule::new_ptr<_2090c3caa_BraceLit>(_2090c3caa_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _59617_parts = _1de41e85c_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_2090bd678_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1d44a7b97:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1de4208e6_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1d44a7b97:;
			++it;
			goto _iter_begin_1d44a7b97;
		}
		_iter_end_1d44a7b97:;
	};
	return _59117_lit;;
}



inline jule::Any _1de421012_buildBraceRange(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_222e62217_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_222e62217_Token__jule_tuple_int __jule_assign_result = _1de424a71_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1d44a9979:;
			{
				return jule::Any(_1de420c04_buildBraceLit(&(*_self_), _60939_tokens), &__jule_any_type115);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1d44a99e0:;
			{
				_1de4193c3_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d44a8abb:;
	};
	jule::Ptr<_222e62217_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1de422e04_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type114) {
				_case_begin_1d44acc8a:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_222e62217_Token>> _63225_rangeTokens = _1de426ec4_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_2090c265a_FnCallExpr> _63325_model = _62421_d.cast_ptr<_2090c265a_FnCallExpr>(&__jule_any_type114);;
					if (_2090c2c32_Ignored(_63325_model.ptr())) {
						_1de4193c3_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1de4196e2_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1de42a736_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1d44ac86c:;
				{
					_1de4193c3_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1d44ac718:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d44b271d:;
			{
				return _1de41e164_buildUnsafe(&(*_self_), _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1d44b2784:;
			{
				return jule::Any(_1de41dd56_buildAnonFn(&(*_self_), _60939_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d44b2575:;
			{
				return jule::Any(_1de4205c7_buildTypedStructLiteral(&(*_self_), _60939_tokens), &__jule_any_type113);;
			}
		}
		else {
			_case_begin_1d44b0045:;
			{
				_1de4193c3_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d44b1909:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de421320_getEnumerableParts(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _66318_parts;;
	jule::Slice<_222b38ae2_Log> _66325_errors;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_2090c4c67_SliceExpr> _1de42162d_buildSlice(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _66833_tokens) {
	jule::Ptr<_2090c4c67_SliceExpr> _66917_slc = jule::new_ptr<_2090c4c67_SliceExpr>(_2090c4c67_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _67417_parts = _1de421320_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_2090bd678_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1d44b7190:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1d44b7190;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1de423520_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1d44b7190:;
			++it;
			goto _iter_begin_1d44b7190;
		}
		_iter_end_1d44b7190:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_2090c55d6_IndexingExpr> _1de421a7e_buildIndexing(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_222e62217_Token>> _69113_tokens, jule::Ptr<_222e62217_Token> _69135_errorToken) {
	jule::Ptr<_222e62217_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090bd678_Expr> _69817_expr = _1de423520_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2090bd678_Expr> _70217_index = _1de423520_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2090c55d6_IndexingExpr>(_2090c55d6_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_2090c5be1_SlicingExpr> _1de422123_buildSlicing(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_222e62217_Token>>& _71463_start, jule::Slice<jule::Ptr<_222e62217_Token>>& _71514_to, jule::Ptr<_222e62217_Token>& _71533_errorToken, jule::Ptr<_222e62217_Token> _71557_end) {
	jule::Ptr<_2090c5be1_SlicingExpr> _71617_slc = jule::new_ptr<_2090c5be1_SlicingExpr>(_2090c5be1_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1de423520_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1de423520_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1de423520_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;;
}



inline jule::Any _1de422431_buildBracketRange(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _73040_tokens) {
	jule::Ptr<_222e62217_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_222e62217_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_222e62217_Token__jule_tuple_int __jule_assign_result = _1de424a71_getRangeExprTokens(_73040_tokens);
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1de42162d_buildSlice(&(*_self_), _73040_tokens), &__jule_any_type102);;
	} else if ((_73230_rangeN > 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_222e62217_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_222e62217_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _74829_to;;
	({
		__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_assign_result = _1de42428a_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1de422123_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type111);;
	};
	return jule::Any(_1de421a7e_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken), &__jule_any_type110);;
}



inline jule::Any _1de42273e_buildData(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d44c3a5e:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d44c3b2a:;
			{
				return _1de41a429_buildSingle(&(*_self_), _75533_tokens[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d44c3b91:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1de41a737_buildCppLinkedIdent(&(*_self_), _75533_tokens), &__jule_any_type87);;
				};
			}
		}
		_match_end_1d44c3333:;
	};
	jule::Ptr<_222e62217_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_1de41ba8a_buildVariadic(&(*_self_), _75533_tokens), &__jule_any_type83);;
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d44c6c93:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1de41b46e_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
					};
				};
				return jule::Any(_1de41aa45_buildUnary(&(*_self_), _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d44c6de7:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1d44c6d81;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_222e62217_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1d44c6d81;
					};
				};
				jule::Ptr<_222e62217_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1d44c6d81;
				};
				return jule::Any(_1de41b46e_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		_match_end_1d44c6d81:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1d44c7436:;
			{
				return _1de41b77c_buildSubIdent(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d44cc958:;
			{
				return jule::Any(_1de41b46e_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d44cc9be:;
			{
				return _1de41bd98_buildOpRight(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d44cca35:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d44ce2a6:;
						{
							return _1de41d73a_buildParenthesesRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1d44ce32d:;
						{
							return _1de421012_buildBraceRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d44ce3a5:;
						{
							return _1de422431_buildBracketRange(&(*_self_), _75533_tokens);;
						}
					}
					_match_end_1d44cdcab:;
				};
			}
		}
		_match_end_1d44c73d1:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1de41b46e_buildType(&(*_self_), _75533_tokens), &__jule_any_type96);;
	};
	_1de4193c3_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1de422ae6_buildBinop(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_222e62217_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_222e62217_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_1de423872_isTypeOp(_83217_op.get()._field_Kind) && _1de423b5d_isTypeRange(_83317_leftTokens))) {
		return jule::Any(_1de41b46e_buildType(&(*_self_), _83134_tokens), &__jule_any_type96);;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1de4193c3_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4196e2_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_2090c2050_BinopExpr>(_2090c2050_BinopExpr{._field_Left=_1de423520_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_1de423520_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type116);;
}



inline jule::Any _1de422e04_build(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _1de424532_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1de42273e_buildData(&(*_self_), _85629_tokens);;
	};
	return _1de422ae6_buildBinop(&(*_self_), _85629_tokens,_85713_i);;
}



inline jule::Any _1de423212_buildKind(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _86518_parts;;
	jule::Slice<_222b38ae2_Log> _86525_errors;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1de419a00_buildTuple(&(*_self_), _86518_parts), &__jule_any_type88);;
	};
	return _1de422e04_build(&(*_self_), _86433_tokens);;
}



inline jule::Ptr<_2090bd678_Expr> _1de423520_buildFromTokens(_1de418b31_exprBuilder* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_2090bd678_Expr>(_2090bd678_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1de423212_buildKind(&(*_self_), _87538_tokens)});;
}







std::ostream &operator<<(std::ostream &_Stream, _1de418b31_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de425434_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1de429092_stop(_1de428c62_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1de429306_stopped(_1de428c62_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);;
}



inline void _1de4296be_pushErr(_1de428c62_parser* _self_, jule::Ptr<_222e62217_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1de4281c3_compilerErr(_28126_token,_28141_fmt,_28154_args));;
}



inline void _1de4299dd_pushSuggestion(_1de428c62_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1de428602_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,_28646_args);
	};
}



inline jule::Ptr<_2090bd678_Expr> _1de429ceb_buildExpr(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _29034_tokens) {
	jule::Ptr<_1de418b31_exprBuilder> _29117_ep = jule::new_ptr<_1de418b31_exprBuilder>(_1de418b31_exprBuilder{._field_p=_self_});;
	jule::Ptr<_2090bd678_Expr> _29417_expr = _1de423520_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;;
}



inline jule::Ptr<_209085db0_Directive> _1de42a109_buildDirective(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1de4296be_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1de4296be_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_209085db0_Directive>(_209085db0_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1de42a37e_pushDirective(_1de428c62_parser* _self_, jule::Ptr<_209085db0_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1d45125b4:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1d45125b4:;
			++it;
			goto _iter_begin_1d45125b4;
		}
		_iter_end_1d45125b4:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_2090c90e0_ScopeTree> _1de42a736_buildScope(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _32635_tokens, jule::Ptr<_222e62217_Token> _32657_end) {
	jule::Ptr<_2090c90e0_ScopeTree> _32717_s = _1de40ac22_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1de40c619_scopeParser _32917_sp = _1de40c619_scopeParser{._field_p=_self_, };;
	_1de4181a2_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;;
}



inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de42ab87__buildType(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1de439976_typeBuilder _33817_tb = _1de439976_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_2090b9157_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de43cc21_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de42b0d8_buildType(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_222e62217_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_2090b9157_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42ab87__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1de4296be_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de42b3e6_buildTypeAliasDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090d0426_TypeAliasDecl> _36517_tad = jule::new_ptr<_2090d0426_TypeAliasDecl>(_2090d0426_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_222e62217_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_2090b9157_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_1de4296be_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1de43890e_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;;
}



inline void _1de42b715_buildVarTypeAndExpr(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090cbab5_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_222e62217_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_222e62217_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1de4296be_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_2090b9157_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1de4296be_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_222e62217_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1de4296be_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_1de429ceb_buildExpr(_self_, _42421_exprTokens);
	} else {
		_1de4296be_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1de42ba34_buildVarCommon(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090cbab5_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_222e62217_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_1de43890e_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1de42b715_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _1de42bdec_buildVarBegin(_1de428c62_parser* _self_, jule::Ptr<_2090cbab5_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_222e62217_Token>>& _45164_tokens) {
	jule::Ptr<_222e62217_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1d452c117:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1d452b820;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d452b820:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_1de4296be_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1d452b886:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1d452b776:;
			{
				_1de4296be_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d452b5de:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_1de4296be_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_2090cbab5_VarDecl> _1de42c20a_buildVar(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_2090cbab5_VarDecl> _48317_v = jule::new_ptr<_2090cbab5_VarDecl>(_2090cbab5_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1de42bdec_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1de42ba34_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_2090c6450_GenericDecl> _1de42c518_buildGeneric(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _50337_tokens) {
	jule::Ptr<_2090c6450_GenericDecl> _50417_g = jule::new_ptr<_2090c6450_GenericDecl>(_2090c6450_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1de4296be_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_1de4296be_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_222e62217_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _52222_parts;;
		jule::Slice<_222b38ae2_Log> _52229_errors;;
		({
			__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427656_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_2090c5ecc_Constraint>(_2090c5ecc_Constraint{._field_Mask=jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1d4538ad5:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_222e62217_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_2090b9157_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _52825_part,(&(_52925_i)),true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1de4296be_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1d4538ad5:;
				++it;
				goto _iter_begin_1d4538ad5;
			}
			_iter_end_1d4538ad5:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _1de42c8c0_buildGenerics(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _54038_tokens, jule::Ptr<_222e62217_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_1de4296be_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _54618_parts;;
	jule::Slice<_222b38ae2_Log> _54625_errors;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2090c6450_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1d453d28d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1de42c518_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1d453d28d:;
			++it;
			goto _iter_begin_1d453d28d;
		}
		_iter_end_1d453d28d:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_2090c97b6_ParamDecl> _1de42cbcd_buildSelfParam(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_2090c97b6_ParamDecl> _56517_param = jule::new_ptr<_2090c97b6_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1de4296be_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1de4296be_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1de4296be_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1de42d096_paramTypeBegin(_1de428c62_parser* _self_, jule::Ptr<_2090c97b6_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_222e62217_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_222e62217_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_1de4296be_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1d4545174;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1d4545174:;
	}
	_iter_end_1d4545174:;;
}



inline void _1de42d3b5_buildParamType(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090c97b6_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_222e62217_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1de42d096_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
		_61639_param.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < _61663_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1de42d6d4_buildParamBody(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090c97b6_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_222e62217_Token>> _62962_tokens) {
	jule::Ptr<_222e62217_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1de4296be_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1de42d3b5_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1de42d3b5_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_2090c97b6_ParamDecl> _1de42d9e2_buildParam(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _64734_tokens) {
	jule::Ptr<_2090c97b6_ParamDecl> _64817_param = jule::new_ptr<_2090c97b6_ParamDecl>(_2090c97b6_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1de4296be_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1de4296be_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1de42d3b5_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_1de42d6d4_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;;
}



inline void _1de42dc67_checkParams(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1d45544b3:;
		if (it != expr.end()) {
			jule::Ptr<_2090c97b6_ParamDecl> _69121_param = *it;
			{
				if ((_2090c9b29_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1d45544b3;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1de4296be_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1d45544b3:;
			++it;
			goto _iter_begin_1d45544b3;
		}
		_iter_end_1d45544b3:;
	};
}



inline jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>> _1de42e11e_buildParams(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _71118_parts;;
	jule::Slice<_222b38ae2_Log> _71125_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_2090c97b6_ParamDecl> _71921_param = _1de42cbcd_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _2090c9b29_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1d4558b7c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _72621_part = *it;
			{
				jule::Ptr<_2090c97b6_ParamDecl> _72721_param = _1de42d9e2_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1d4558b7c:;
			++it;
			goto _iter_begin_1d4558b7c;
		}
		_iter_end_1d4558b7c:;
	};
	_1de42dc67_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;;
}



inline __jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool _1de42e4c6_buildMultiRetType(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _73742_tokens, jule::I64& _73765_i) {
	__jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_2090bc26a_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		({
			__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_222e62217_Token>> _74717_rangeTokens = _1de426ec4_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _74918_parts;;
	jule::Slice<_222b38ae2_Log> _74925_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_222e62217_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1d455eea2:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _75721_part = *it;
			{
				jule::Ptr<_222e62217_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1de4296be_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1d455eea2;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_222e62217_Token> _77525_newToken = jule::new_ptr<_222e62217_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_2090b9157_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _75721_part,(&(_75921_offset)),true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1de4296be_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1d455eea2:;
			++it;
			goto _iter_begin_1d455eea2;
		}
		_iter_end_1d455eea2:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=jule::Any(jule::new_ptr<_2090babe7_TupleTypeDecl>(_2090babe7_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type82)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool _1de42e87d_buildRetType(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _80537_tokens, jule::I64& _80560_i) {
	__jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_2090bc26a_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_222e62217_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d456863c:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d45686a3:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1d4568719:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_1de4296be_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1d456b08a:;
							{
								({
									__jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1de42e4c6_buildMultiRetType(_self_, _80537_tokens,_80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1d456b112:;
							{
								_1de4296be_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1d456aee1:;
					};
				};
				({
					__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1d456854e:;
	};
	(_80560_i)++;
	_1de4296be_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_2090caad6_FnDecl> _1de42ecce_buildFnPrototype(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_2090caad6_FnDecl> _85117_f = jule::new_ptr<_2090caad6_FnDecl>(_2090caad6_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_222e62217_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_222e62217_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_222e62217_Token>> _89717_genericsTokens = _1de426ec4_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1de42c8c0_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_1de4296be_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _90717_paramsToks = _1de426ec4_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1de42e11e_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_222e62217_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_1de43890e_isPub(_85117_f.get()._field_Ident);
	({
		__jule_tuple_x_2090bc26a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1de42e87d_buildRetType(_self_, _85041_tokens,_85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_2090caad6_FnDecl> _1de430230_buildFn(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_2090caad6_FnDecl> _92917_f = _1de42ecce_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _94517_blockTokens = _1de426ec4_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1de42a736_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de43053d_getUseDeclSelectors(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1de426ec4_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _96418_parts;;
	jule::Slice<_222b38ae2_Log> _96425_errs;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _97017_selectors = jule::Slice<jule::Ptr<_222e62217_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1d458238c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1de4296be_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_222e62217_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1de4296be_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1de4299dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1d458238c;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1d458238c:;
			++it;
			goto _iter_begin_1d458238c;
		}
		_iter_end_1d458238c:;
	};
	return _97017_selectors;;
}



inline void _1de43085c_buildCppUseDecl(_1de428c62_parser* _self_, jule::Ptr<_2090d1812_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_222e62217_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_1de4296be_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_222e62217_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1de4296be_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1de430b7b_buildStdUseDecl(_1de428c62_parser* _self_, jule::Ptr<_2090d1812_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_222e62217_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_222e62217_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1d458ab15:;
			{
				_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d458ab8c:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_222e62217_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_assign_result = _1de42726b_rangeLast(_99959_tokens);
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_99939_decl.get()._field_Selected=_1de43053d_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d458ac14:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1d458aa8d:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1de428899_tokstoa(_99959_tokens));
}



inline void _1de430e9a_buildIdentUseDecl(_1de428c62_parser* _self_, jule::Ptr<_2090d1812_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_222e62217_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_222e62217_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1d459534a:;
			{
				_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d4595933:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_222e62217_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_assign_result = _1de42726b_rangeLast(_106161_tokens);
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_106141_decl.get()._field_Selected=_1de43053d_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d4595aba:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1de4296be_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1d45958cd:;
	};
	_106141_decl.get()._field_LinkPath=_1de428899_tokstoa(_106161_tokens);
}



inline void _1de4312b9_parseUseDecl(_1de428c62_parser* _self_, jule::Ptr<_2090d1812_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_222e62217_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_1de43085c_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_222e62217_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1de4296be_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1de4299dd_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1d45a1dd4:;
			{
				_1de430b7b_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1d45a8d0e:;
			{
				_1de430e9a_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1d45a8c98:;
	};
}



inline jule::Ptr<_2090d1812_UseDecl> _1de431671_buildUseDecl(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_2090d1812_UseDecl> _115917_decl = jule::new_ptr<_2090d1812_UseDecl>(_2090d1812_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1de4296be_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1de4312b9_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de431a28_buildTypeEnumItemKind(jule::Ptr<_1de428c62_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_222e62217_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_222e62217_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1d45ade46:;
						{
							(_117317_braceN)++;
							goto _iter_next_1d45ac9a0;
						}
					}
					else {
						_case_begin_1d45ada39:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1d45ad82a:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1d45ac9a0;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_222e62217_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_2090b9157_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1de4296be_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1d45ac9a0:;
	}
	_iter_end_1d45ac9a0:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>> _1de431d36_buildTypeEnumItems(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_222e62217_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_2090d32b4_TypeEnumItemDecl> _121421_item = jule::new_ptr<_2090d32b4_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1de4296be_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1d45b3753;
					};
				};
			};
			_121421_item.get()._field_Kind=_1de431a28_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1d45b3753:;
	}
	_iter_end_1d45b3753:;;
	return _121017_items;;
}



inline jule::Ptr<_2090d38be_TypeEnumDecl> _1de432144_buildTypeEnumDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_2090d38be_TypeEnumDecl> _123517_e = jule::new_ptr<_2090d38be_TypeEnumDecl>(_2090d38be_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_222e62217_Token>> _124517_itemTokens = _1de426ec4_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < _123342_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1de43890e_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1de431d36_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;;
}



inline jule::Ptr<_2090bd678_Expr> _1de4324eb_buildEnumItemExpr(jule::Ptr<_1de428c62_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_222e62217_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_222e62217_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1d45bee57:;
						{
							(_126117_braceN)++;
							goto _iter_next_1d45bd9b1;
						}
					}
					else {
						_case_begin_1d45bea4a:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1d45be83b:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1d45bd9b1;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_222e62217_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1de429ceb_buildExpr(_self_, _128025_exprTokens);;
			};
		}
	_iter_next_1d45bd9b1:;
	}
	_iter_end_1d45bd9b1:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>> _1de432809_buildEnumItems(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_222e62217_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_2090d1c85_EnumItemDecl> _129721_item = jule::new_ptr<_2090d1c85_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1de4296be_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1d45c33cd;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1de4296be_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1d45c33cd;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1de4296be_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1d45c33cd;
			};
			_129721_item.get()._field_Expr=_1de4324eb_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1d45c33cd:;
	}
	_iter_end_1d45c33cd:;;
	return _129317_items;;
}



inline jule::Ptr<_2090d27ad_EnumDecl> _1de432b17_buildEnumDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1de4296be_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090d27ad_EnumDecl> _133417_e = jule::new_ptr<_2090d27ad_EnumDecl>(_2090d27ad_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= _132938_tokens.len())) {
			_1de429092_stop(_self_.ptr());
			_1de4296be_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _135917_itemTokens = _1de426ec4_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1de43890e_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1de432809_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;;
}



inline jule::Any _1de432e25_buildNodeEnumDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1de432144_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type19);;
		};
	};
	return jule::Any(_1de432b17_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
}



inline jule::Ptr<_2090d3abc_FieldDecl> _1de433233_buildField(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _138334_tokens) {
	jule::Ptr<_2090d3abc_FieldDecl> _138417_f = jule::new_ptr<_2090d3abc_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1de4296be_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1de4296be_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_222e62217_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1de4296be_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1de429ceb_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_1de43890e_isPub(_138417_f.get()._field_Ident);
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>> _1de433541_buildStructDeclFields(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _143417_stmts = _1de40c185_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1d45dedab:;
		if (it != expr.end()) {
			jule::Ptr<_1de40bcde_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_2090d3abc_FieldDecl> _143721_f = _1de433233_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1d45dedab:;
			++it;
			goto _iter_begin_1d45dedab;
		}
		_iter_end_1d45dedab:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_2090d4370_StructDecl> _1de43384e_buildStructDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_1de4296be_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_2090d4370_StructDecl> _145017_s = jule::new_ptr<_2090d4370_StructDecl>(_2090d4370_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_222e62217_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_222e62217_Token>> _146517_genericsTokens = _1de426ec4_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1de42c8c0_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _147517_bodyTokens = _1de426ec4_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1de43890e_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_1de433541_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1de433ac4_checkMethodReceiver(_1de428c62_parser* _self_, jule::Ptr<_2090caad6_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _2090c9b29_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_1de4296be_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_1de4296be_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2090c97b6_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_2090c9b29_IsSelf(_150313_param.ptr())))) {
		_1de4296be_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_2090caad6_FnDecl>> _1de433dd2_buildTraitMethods(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_2090caad6_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _151217_stmts = _1de40c185_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1d45edeca:;
		if (it != expr.end()) {
			jule::Ptr<_1de40bcde_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1d45edeca;
				};
				jule::Ptr<_2090caad6_FnDecl> _151821_f = _1de430230_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_2090cae38_IsAnon(_151821_f.ptr())) {
						_1de4296be_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1de433ac4_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1de4296be_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1d45edeca:;
			++it;
			goto _iter_begin_1d45edeca;
		}
		_iter_end_1d45edeca:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_2090d497a_TraitDecl> _1de4341e0_buildTraitDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_1de4296be_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090d497a_TraitDecl> _153817_t = jule::new_ptr<_2090d497a_TraitDecl>(_2090d497a_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _154717_bodyTokens = _1de426ec4_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1de43890e_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_1de433dd2_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_2090caad6_FnDecl> _1de4344ed_buildCppLinkFn(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_2090caad6_FnDecl> _156517_f = _1de430230_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_2090cae38_IsAnon(_156517_f.ptr())) {
			_1de4296be_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_2090cbab5_VarDecl> _1de43480b_buildCppLinkVar(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_2090cbab5_VarDecl> _157817_v = _1de42c20a_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1de4296be_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_2090d4370_StructDecl> _1de434b19_buildCppLinkStruct(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_2090d4370_StructDecl> _159117_s = _1de43384e_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1d460d7ae:;
			if (it != expr.end()) {
				jule::Ptr<_2090d3abc_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1d460d7ae:;
				++it;
				goto _iter_begin_1d460d7ae;
			}
			_iter_end_1d460d7ae:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_2090d0426_TypeAliasDecl> _1de434e27_buildCppLinkTypeAlias(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_2090d0426_TypeAliasDecl> _160517_t = _1de42b3e6_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_2090d1812_UseDecl> _1de435235_buildCppLinkUse(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1de4296be_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1de431671_buildUseDecl(_self_.ptr(), _161339_tokens,true);;
}



inline jule::Any _1de435543_buildCppLink(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _162437_tokens) {
	jule::Ptr<_222e62217_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_1de4296be_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d461342e:;
			{
				return jule::Any(_1de4344ed_buildCppLinkFn(_self_, _162437_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d4614100:;
			{
				return jule::Any(_1de43480b_buildCppLinkVar(_self_, _162437_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1d4614166:;
			{
				return jule::Any(_1de434b19_buildCppLinkStruct(_self_, _162437_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d46141cc:;
			{
				return jule::Any(_1de434e27_buildCppLinkTypeAlias(_self_, _162437_tokens), &__jule_any_type13);;
			}
		}
		else {
			_case_begin_1d4613e8a:;
			{
				_1de4296be_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d4614089:;
	};
	return nullptr;;
}



inline jule::Ptr<_2090caad6_FnDecl> _1de435851_getMethod(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_222e62217_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1de4296be_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1de4296be_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090caad6_FnDecl> _167417_f = _1de430230_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _2090cae38_IsAnon(_167417_f.ptr()))) {
		_1de4296be_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _1de435b70_parseImplBody(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090d5085_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_222e62217_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _168217_stmts = _1de40c185_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1d461c0c5:;
		if (it != expr.end()) {
			jule::Ptr<_1de40bcde_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_222e62217_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1d461d22a:;
						{
							_1de42a37e_pushDirective(_self_.ptr(), _1de42a109_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1d461c0c5;
						}
					}
					_match_end_1d461d1c5:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1d461d36d:;
						{
							jule::Ptr<_2090cbab5_VarDecl> _169425_v = _1de42c20a_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1d461ded9:;
						{
							jule::Ptr<_2090caad6_FnDecl> _170125_f = _1de435851_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1de433ac4_checkMethodReceiver(_self_.ptr(), _170125_f);
								_1de436511_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1d461d79c:;
						{
							_1de4296be_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1d461c0c5;
						}
					}
					_match_end_1d461d747:;
				};
			}
			_iter_next_1d461c0c5:;
			++it;
			goto _iter_begin_1d461c0c5;
		}
		_iter_end_1d461c0c5:;
	};
}



inline jule::Ptr<_2090d5085_Impl> _1de435e7d_buildImpl(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _171433_tokens) {
	jule::Ptr<_222e62217_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_2090b9157_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2090d5085_Impl> _173217_ipl = jule::new_ptr<_2090d5085_Impl>(_2090d5085_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_2090b9157_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_2090b9157_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_222e62217_Token>> _177017_bodyTokens = _1de426ec4_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_1de429092_stop(_self_.ptr());
		_1de4296be_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1de4296be_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1de435b70_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;;
}



inline jule::Any _1de43628b_buildNodeData(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _178538_tokens) {
	jule::Ptr<_222e62217_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d462da10:;
			{
				jule::Ptr<_2090caad6_FnDecl> _179021_f = _1de430230_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_2090cae38_IsAnon(_179021_f.ptr())) {
						_1de4296be_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179021_f, &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1d462e978:;
			{
				return jule::Any(_1de42c20a_buildVar(_self_, _178538_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d462e9de:;
			{
				return jule::Any(_1de42b3e6_buildTypeAliasDecl(_self_, _178538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d462ea55:;
			{
				return _1de432e25_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1d462e170:;
			{
				return jule::Any(_1de43384e_buildStructDecl(_self_, _178538_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1d462e1d6:;
			{
				return jule::Any(_1de4341e0_buildTraitDecl(_self_, _178538_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d462e24c:;
			{
				return jule::Any(_1de435e7d_buildImpl(_self_, _178538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d462e2b3:;
			{
				return _1de435543_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_1d462e109:;
			{
				_1de4296be_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d462de50:;
	};
}



inline void _1de436511_applyFnMeta(_1de428c62_parser* _self_, jule::Ptr<_2090caad6_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1de436786_applyMeta(_1de428c62_parser* _self_, _2090859b4_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1d4635495:;
			{
				jule::Ptr<_2090cbab5_VarDecl> _182921_v = _182633_node._field_Data.cast_ptr<_2090cbab5_VarDecl>(&__jule_any_type17);;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1d463550b:;
			{
				jule::Ptr<_2090caad6_FnDecl> _183621_f = _182633_node._field_Data.cast_ptr<_2090caad6_FnDecl>(&__jule_any_type15);;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1de436511_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d4635572:;
			{
				jule::Ptr<_2090d4370_StructDecl> _184221_sd = _182633_node._field_Data.cast_ptr<_2090d4370_StructDecl>(&__jule_any_type14);;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1d4635286:;
	};
}



inline void _1de436a0b_pushUseDecl(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_2090d1812_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1de4296be_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1de4299dd_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1de436d19_pushMetaNodes(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d463b0b1:;
			{
				;
				jule::Ptr<_2090d1812_UseDecl> _186321_decl = _1de431671_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_1de436a0b_pushUseDecl(_self_, _186321_decl);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d463b138:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_2090d1812_UseDecl> _186825_decl = _1de435235_buildCppLinkUse(_self_, _185938_tokens);;
					_1de436a0b_pushUseDecl(_self_, _186825_decl);
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1d463b1b0:;
			{
				_1de42a37e_pushDirective(_self_.ptr(), _1de42a109_buildDirective(_self_.ptr(), _185938_tokens));
				return true;;
			}
		}
		_match_end_1d463aed4:;
	};
	return false;;
}



inline _2090859b4_Node _1de437127_parseNode(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _187934_st) {
	_2090859b4_Node _188017_node = _2090859b4_Node{._field_Token=_187934_st[0LL], };;
	if (_1de436d19_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _1de43628b_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_1de436786_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1de4296be_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _1de43739c_appendNode(jule::Ptr<_1de428c62_parser> _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_2090859b4_Node _190717_node = _1de437127_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1de429306_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1de43780e_removeRange(_1de428c62_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_222e62217_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _1de427cd8_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_222e62217_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1d464575d;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1d464575d;
		}
	_iter_next_1d464575d:;
	}
	_iter_end_1d464575d:;;
}



inline void _1de437bc7_pushWrongOrderCloseErr(_1de428c62_parser* _self_, jule::Ptr<_222e62217_Token>& _192642_t, jule::Slice<jule::Ptr<_222e62217_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1d464781a:;
			{
				_1de4296be_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1d4647892:;
			{
				_1de4296be_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1d4647919:;
			{
				_1de4296be_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1d46476e9:;
	};
}



inline void _1de438139_pushRangeClose(_1de428c62_parser* _self_, jule::Ptr<_222e62217_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_222e62217_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1d464a444:;
				{
					_1de4296be_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1d464a4bb:;
				{
					_1de4296be_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1d464a543:;
				{
					_1de4296be_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1d464a202:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1de437bc7_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_1de43780e_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _1de4383ae_checkRanges(_1de428c62_parser* _self_, jule::Slice<jule::Ptr<_222e62217_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1d464d5bd:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1d464d5bd;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1d464e877:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d464e8dd:;
						{
							_1de438139_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1d464e954:;
						{
							_1de438139_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d464e9cb:;
						{
							_1de438139_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1d464e7bc:;
				};
			}
			_iter_next_1d464d5bd:;
			++it;
			_195813_i++;
			goto _iter_begin_1d464d5bd;
		}
		_iter_end_1d464d5bd:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1d4650e3e:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_222e62217_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d4652094:;
						{
							_1de4296be_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1d465210a:;
						{
							_1de4296be_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1d4652171:;
						{
							_1de4296be_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1d4651d63:;
				};
			}
			_iter_next_1d4650e3e:;
			++it;
			goto _iter_begin_1d4650e3e;
		}
		_iter_end_1d4650e3e:;
	};
}



inline void _1de438634_parse(jule::Ptr<_1de428c62_parser> _self_, jule::Ptr<_222e675a2_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_209084bc2_Ast>(_209084bc2_Ast{._field_File=_198930_f, });
	_1de4383ae_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _199917_stmts = _1de40c185_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1de40bcde_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1d46550db;
			};
			if ((!(_222b3a9c3_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1d46550db;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1de42a109_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1d46550db:;
	}
	_iter_end_1d46550db:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1de40bcde_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1de43739c_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_1de429306_stopped(_self_.ptr())) {
				goto _iter_end_1d4656a7c;
			};
		}
	_iter_next_1d4656a7c:;
	}
	_iter_end_1d4656a7c:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1de4296be_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1de428c62_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1de43a04d_pushErr(_1de439976_typeBuilder* _self_, jule::Ptr<_222e62217_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_1de4296be_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1de43a36c_pushSuggestion(_1de439976_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_1de4299dd_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,_4846_args);
	};
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43a5d1_buildPrim(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_2090b9157_TypeDecl> _5517_t = _1de4394e2_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43a845_buildNamespace(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_2090b9157_TypeDecl> _6117_t = jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_2090ba224_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_2090ba224_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_222e62217_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1de43a04d_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_1de43a36c_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1d465dc60;
			};
			(_6617_n)++;
		}
	_iter_next_1d465dc60:;
	}
	_iter_end_1d465dc60:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_1de43b082_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type98);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _1de43aaa9_buildGenerics(_1de439976_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_222e62217_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _9917_parts = _1de43ad1d_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_1de43a04d_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2090b9157_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_2090b9157_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1d4666619:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_2090b9157_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1de43a04d_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1d4666619:;
			++it;
			goto _iter_begin_1d4666619;
		}
		_iter_end_1d4666619:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1de43ad1d_identGenerics(_1de439976_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_222e62217_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1d466a145:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1d466a1bc:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1d4669e14:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1d4668d25;
			};
		}
	_iter_next_1d4668d25:;
	}
	_iter_end_1d4668d25:;;
	jule::Slice<jule::Ptr<_222e62217_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _13618_parts;;
	jule::Slice<_222b38ae2_Log> _13625_errors;;
	({
		__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de427a41_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43b082_buildIdent(_1de439976_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1de43a845_buildNamespace(&(*_self_));;
	};
	jule::Ptr<_222e62217_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_2090b971d_IdentTypeDecl> _14917_it = jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2090b9157_TypeDecl> _15517_itd = jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type20)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1de43aaa9_buildGenerics(&(*_self_));
		return _15517_itd;;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1de43a04d_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1de43a04d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_2090b9d6c_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_2090b9d6c_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_2090b9157_TypeDecl> _17417_ident = _1de43b082_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d4675150:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_2090b971d_IdentTypeDecl>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1d46751e9:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_2090b9d6c_SubIdentTypeDecl>(&__jule_any_type94).get()._field_Idents);
			}
		}
		_match_end_1d46750ea:;
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type94)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43b2e6_buildCppLink(_1de439976_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1de43a04d_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_2090b9157_TypeDecl> _19317_t = _1de43b082_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.cast_ptr<_2090b971d_IdentTypeDecl>(&__jule_any_type20).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43b55a_buildFn(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_2090caad6_FnDecl> _20017_f = _1de42ecce_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_2090cae38_IsAnon(_20017_f.ptr())))) {
		_1de43a04d_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type15)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43b7be_buildPtr(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1de43a04d_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_2090baed3_PtrTypeDecl>(_2090baed3_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type79)});;
	};
	jule::Ptr<_2090b9157_TypeDecl> _23117_elem = _1de43c9ac_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_2090baed3_PtrTypeDecl>(_2090baed3_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43ba33_buildSptr(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1de43a04d_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2090b9157_TypeDecl> _25217_elem = _1de43c9ac_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_2090ba510_SptrTypeDecl>(_2090ba510_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type80)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43bc97_buildOp(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d46822d3:;
			{
				return _1de43b7be_buildPtr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1d4683c41:;
			{
				return _1de43ba33_buildSptr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1d4683ca7:;
			{
				return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_2090ba510_SptrTypeDecl>(_2090ba510_SptrTypeDecl{._field_Elem=_1de43ba33_buildSptr(&(*_self_))}), &__jule_any_type80)});;
			}
		}
		else {
			_case_begin_1d46832d4:;
			{
				_1de43a04d_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1d468314c:;
	};
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43c00b_buildSlc(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_2090b9157_TypeDecl> _28717_elem = _1de43c9ac_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_2090ba90b_SlcTypeDecl>(_2090ba90b_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43c270_buildArr(_1de439976_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_222e62217_Token>> _30017_exprTokens = _1de426ec4_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1de43a04d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_2090b9157_TypeDecl> _30617_elem = _1de43c9ac_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2090bb665_ArrTypeDecl> _31117_arrt = jule::new_ptr<_2090bb665_ArrTypeDecl>(_2090bb665_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_222e62217_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1de429ceb_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type77)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43c4d4_buildMap(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1de43a04d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_222e62217_Token>> _33717_keyTokens = _1de426ec4_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1de43a04d_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1de43a04d_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_2090bbdb3_MapTypeDecl> _34617_mapt = jule::new_ptr<_2090bbdb3_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_2090b9157_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1de43a04d_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_2090b9157_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_assign_result = _1de42b0d8_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type81)});;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43c748_buildEnumerable(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1de43a04d_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1de43c00b_buildSlc(&(*_self_));;
	};
	((*((*_self_)._field_i)))--;
	return _1de43c270_buildArr(&(*_self_));;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de43c9ac_step(_1de439976_typeBuilder* _self_) {
	jule::Ptr<_222e62217_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d46975e5:;
			{
				return _1de43a5d1_buildPrim(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1d4696dca:;
			{
				return _1de43b082_buildIdent(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d4696e41:;
			{
				return _1de43b2e6_buildCppLink(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1d4696ea7:;
			{
				return _1de43b55a_buildFn(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d469702e:;
			{
				return _1de43bc97_buildOp(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1d4697947:;
			{
				return _1de43c748_buildEnumerable(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d46979ad:;
			{
				return _1de43c4d4_buildMap(&(*_self_));;
			}
		}
		else {
			_case_begin_1d4696d64:;
			{
				((*((*_self_)._field_i)))++;
				_1de43a04d_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1d4696bcc:;
	};
}



inline __jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool _1de43cc21_build(_1de439976_typeBuilder* _self_) {
	__jule_tuple_x_2090b9157_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2090b9157_TypeDecl> _41117_root = _1de43c9ac_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1de4392d3_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de439976_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddc6426d_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ddc65b21_pushErr(_1ddc655c1_directiveEval* _self_, jule::Ptr<_222e62217_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_222b39032_Logf(_2137_fmt,_2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _1ddc65ec8_splitOperans(_1ddc655c1_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_222e62217_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_222e62217_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1d46bca27:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1d46ba838;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1d46bca8d:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1d46bc818:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1d46ba838;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1d46ba838:;
	}
	_iter_end_1d46ba838:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1ddc65b21_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1ddc662d6_evalDirectiveIdent(_1ddc655c1_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1d46c0ad5:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1d46c0ad5:;
			++it;
			goto _iter_begin_1d46c0ad5;
		}
		_iter_end_1d46c0ad5:;
	};
	return false;;
}



inline jule::Bool _1ddc665e4_evalDirectivePart(_1ddc655c1_directiveEval* _self_, jule::Slice<jule::Ptr<_222e62217_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1ddc65b21_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1ddc662d6_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1ddc66858_eval(_1ddc655c1_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1ddc65b21_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _11317_logicalOrParts = _1ddc65ec8_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1d46c6e4e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_222e62217_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _12021_logicalAndParts = _1ddc65ec8_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1d46c8714:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_222e62217_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_222e62217_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_222e62217_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1ddc65b21_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1ddc665e4_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1d46c8714:;
						++it;
						goto _iter_begin_1d46c8714;
					}
					_iter_end_1d46c8714:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1d46c6e4e:;
			++it;
			goto _iter_begin_1d46c6e4e;
		}
		_iter_end_1d46c6e4e:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddc655c1_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1de331450_JuleImporter> static__1ddd5adae_New(_1ddc6426d_CompileInfo _5819_info) {
	jule::Ptr<_1de331450_JuleImporter> _5917_imp = jule::new_ptr<_1de331450_JuleImporter>(_1de331450_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_222b72147_PathStdlib}), });;
	_1ddc64a87_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _1ddd9e474_AllPackages(_1de331450_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;;
}



inline void _1dddbd5b4_SetModPath(_1de331450_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1dddcec35_GetModPath(_1de331450_JuleImporter* _self_) {
	return (*_self_)._field_mod;;
}



inline jule::Str _1dde0b37c_ModById(_1de331450_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1dde1099c_GetImport(_1de331450_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1d46d0430:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1d46d0430:;
			++it;
			goto _iter_begin_1d46d0430;
		}
		_iter_end_1d46d0430:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log _1ddec38a6_ImportPackage(_1de331450_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log __jule_func_result;
	jule::Slice<jule::Ptr<_220d12cac_DirEntry>> _9717_dirents = ({
		auto except = static__221a55d95_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_222b38ae2_Log>::make({_1ddd556c2_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_220d12cac_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1ddc75702_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_222b38ae2_Log> _10525_errs = _1ddc75999_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_209084bc2_Ast>> _11217_asts = jule::Slice<jule::Ptr<_209084bc2_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1d46d194d:;
		if (it != expr.end()) {
			jule::Ptr<_220d12cac_DirEntry> _11316_dirent = *it;
			{
				if ((_220c4d17b_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_222aa7159_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1d46d194d;
				};
				jule::Str _11917__path = _221b355c3_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_222e675a2_File> _12021_file = _222e68ad1_NewFileSet(_11917__path);;
				_222e67c34_Fill(_12021_file.ptr(), _1ddc7e695_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_222b38ae2_Log> _12221_errors = _222e7447c_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1de3b0c60_FileInfo> _12721_finfo = _1de3b3867_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ddc4996d_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1d46d194d;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_222b38ae2_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1dded4e4a_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1d46d194d;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1d46d194d:;
			++it;
			goto _iter_begin_1d46d194d;
		}
		_iter_end_1d46d194d:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1dded262e_Imported(_1de331450_JuleImporter* _self_, jule::Ptr<_1dda15937_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1d46d9a88:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1d46d9a88:;
			++it;
			goto _iter_begin_1d46d9a88;
		}
		_iter_end_1d46d9a88:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1d46db370:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1d46db370:;
				++it;
				_16217_i++;
				goto _iter_begin_1d46db370;
			}
			_iter_end_1d46db370:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_222b38ae2_Log _1dded4e4a_isPassBuildDirectives(_1de331450_JuleImporter* _self_, jule::Ptr<_209084bc2_Ast>& _17945_file) {
	__jule_tuple_bool__jule_tuple_s_222b38ae2_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1d46de5c6:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1d46de5c6;
				};
				_1ddc655c1_directiveEval _18421_de = _1ddc655c1_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1ddc66858_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1d46de5c6:;
			++it;
			goto _iter_begin_1d46de5c6;
		}
		_iter_end_1d46de5c6:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de331450_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddc7c000_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d4717511_isCommonOrdered(jule::Slice<jule::Ptr<_2090d5849_Struct>> _1834_s, jule::Ptr<_2090d5849_Struct> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1d47185ab:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1d4718dd6:;
					if (it != expr.end()) {
						jule::Ptr<_2090d5849_Struct> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1d4718dd6:;
						++it;
						goto _iter_begin_1d4718dd6;
					}
					_iter_end_1d4718dd6:;
				};
			}
			_iter_next_1d47185ab:;
			++it;
			goto _iter_begin_1d47185ab;
		}
		_iter_end_1d47185ab:;
	};
	return true;;
}

inline jule::Bool _1d471e79e_isCommonOrdered(jule::Slice<jule::Ptr<_1dda418db_Var>> _1834_s, jule::Ptr<_1dda418db_Var> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1d4720805:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1d4721130:;
					if (it != expr.end()) {
						jule::Ptr<_1dda418db_Var> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1d4721130:;
						++it;
						goto _iter_begin_1d4721130;
					}
					_iter_end_1d4721130:;
				};
			}
			_iter_next_1d4720805:;
			++it;
			goto _iter_begin_1d4720805;
		}
		_iter_end_1d4720805:;
	};
	return true;;
}



inline void _1d470bc31_orderCommon(jule::Slice<jule::Ptr<_2090d5849_Struct>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1d4712dbe:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_2090d5849_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1d4712dbe:;
			++it;
			_3314_j++;
			goto _iter_begin_1d4712dbe;
		}
		_iter_end_1d4712dbe:;
	};
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1d4715245:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1d4717511_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1d471606a:;
				}
				_iter_end_1d471606a:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1d4715245;
				};
				(_4117_n)--;
			}
			_iter_next_1d4715245:;
			++it;
			goto _iter_begin_1d4715245;
		}
		_iter_end_1d4715245:;
	};
}

inline void _1d470c5c2_orderCommon(jule::Slice<jule::Ptr<_1dda418db_Var>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1d471a15c:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_1dda418db_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1d471a15c:;
			++it;
			_3314_j++;
			goto _iter_begin_1d471a15c;
		}
		_iter_end_1d471a15c:;
	};
	jule::Slice<jule::Ptr<_1dda418db_Var>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1d471c4d3:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1d471e79e_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1d471d308:;
				}
				_iter_end_1d471d308:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1d471c4d3;
				};
				(_4117_n)--;
			}
			_iter_next_1d471c4d3:;
			++it;
			goto _iter_begin_1d471c4d3;
		}
		_iter_end_1d471c4d3:;
	};
}



inline void static__1de073390_orderStructures(jule::Slice<jule::Ptr<_2090d5849_Struct>>& _6036_structs) {
	_1d470bc31_orderCommon(_6036_structs);
}



inline void static__1de202079_orderVars(jule::Slice<jule::Ptr<_1dda418db_Var>>& _6630_vars) {
	_1d470c5c2_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1ddd53db8_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2173a1c06_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1de503dd6_optimizeChild(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e7232_Scope>& _3938_s) {
	jule::Ptr<_1de50390d_scopeDeadCode> _4017_sdc = jule::new_ptr<_1de50390d_scopeDeadCode>(_1de50390d_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1de506526_optimizeStmts(_4017_sdc);
	};
}



inline void _1de50417d_optimizeBodyChildExceptional(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e7232_Scope>& _5053_s) {
	jule::Ptr<_1de50390d_scopeDeadCode> _5117_sdc = jule::new_ptr<_1de50390d_scopeDeadCode>(_1de50390d_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1de506526_optimizeStmts(_5117_sdc);
	};
}



inline void _1de504414_optimizeBodyChild(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e7232_Scope>& _6142_s) {
	jule::Ptr<_1de50390d_scopeDeadCode> _6217_sdc = jule::new_ptr<_1de50390d_scopeDeadCode>(_1de50390d_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1de506526_optimizeStmts(_6217_sdc);
	};
}



inline void _1de504689_optimizeExprModel(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1de507868_exprDeadCode _7213_edc = static__1de507e95_new(_self_);;
	_1de50dbb0_optimize(&_7213_edc, _7142_model);
}



inline void _1de504865_eliminateFollowed(_1de50390d_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1de50390d_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1d478ba19:;
	}
	_iter_end_1d478ba19:;;
}



inline void _1de504ada_pushGoto(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e9c5c_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1d478ec3c:;
	}
	_iter_end_1d478ec3c:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1dd9e9c5c_GotoSt>>::make({_9232_gt}));
}



inline void _1de504d60_pushLabel(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e9971_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1d4791513;
			};
			(_10317_i)++;
		}
	_iter_next_1d4791513:;
	}
	_iter_end_1d4791513:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1dd9e9971_Label>>::make({_10233_l}));
}



inline void _1de5050d5_optimizeRangeIter(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e8dd2_RangeIter> _11541_it) {
	_1de504689_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1de504414_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1de50535a_optimizeWhileIter(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e84ec_WhileIter> _12041_it) {
	_1de504689_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1de50634a_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1de504414_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1de5055d0_optimizeInfIter(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e8079_InfIter> _12839_it) {
	_1de504414_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1de505855_optimizeConditional(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9e7c8d_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1d4797739:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9e762d_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1de504689_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1de504414_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1d4797739:;
			++it;
			goto _iter_begin_1d4797739;
		}
		_iter_end_1d4797739:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1de503dd6_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1de504414_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1de505aca_optimizeMatch(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9eae7d_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1d479a385:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eb9c8_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1d479abd2:;
					if (it != expr.end()) {
						jule::Ptr<_1dda8944a_Data> _15225_expr = *it;
						{
							_1de504689_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1d479abd2:;
						++it;
						goto _iter_begin_1d479abd2;
					}
					_iter_end_1d479abd2:;
				};
				_1de504414_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1d479a385:;
			++it;
			goto _iter_begin_1d479a385;
		}
		_iter_end_1d479a385:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1de503dd6_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1de504414_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1de505d50_optimizeAssign(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9ea587_Assign> _16838_assign) {
	_1de504689_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1de504689_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1de5060c5_optimizeMultiAssign(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Ptr<_1dd9ea93e_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1d479e1be:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1de504689_optimizeExprModel(_self_, _17421_l.get()._field_Model);
				};
			}
			_iter_next_1d479e1be:;
			++it;
			goto _iter_begin_1d479e1be;
		}
		_iter_end_1d479e1be:;
	};
	_1de504689_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1de50634a_optimizeStmt(jule::Ptr<_1de50390d_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d47a0896:;
			{
				jule::Ptr<_1dd9e7232_Scope> _18521_scope = _18236_st.cast_ptr<_1dd9e7232_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1de506812_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1de503dd6_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d47a0a1c:;
			{
				_1de5050d5_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d47a0a83:;
			{
				_1de50535a_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d47a0ae9:;
			{
				_1de5055d0_optimizeInfIter(_self_, _18236_st.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d47a0b71:;
			{
				_1de505855_optimizeConditional(_self_, _18236_st.cast_ptr<_1dd9e7c8d_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1d47a0be8:;
			{
				_1de505aca_optimizeMatch(_self_, _18236_st.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d47a0c70:;
			{
				_1de505d50_optimizeAssign(_self_, _18236_st.cast_ptr<_1dd9ea587_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d47a0ce7:;
			{
				_1de5060c5_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1dd9ea93e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d47a0d6e:;
			{
				jule::Ptr<_1dda8944a_Data> _20621_d = _18236_st.cast_ptr<_1dda8944a_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1d47a09a6;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1d47a5cb9:;
						{
							_1de504865_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1d47a62d6:;
						{
							_1de504689_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1d47a6281:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d47a0de6:;
			{
				_1de504865_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d47a0e6d:;
			{
				_1de504ada_pushGoto(_self_, _18236_st.cast_ptr<_1dd9e9c5c_GotoSt>(&__jule_any_type43));
				_1de504865_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1d47a0ee5:;
			{
				_1de504d60_pushLabel(_self_, _18236_st.cast_ptr<_1dd9e9971_Label>(&__jule_any_type21));
			}
		}
		_match_end_1d47a09a6:;
	};
}



inline void _1de506526_optimizeStmts(jule::Ptr<_1de50390d_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1de50634a_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1d47a87a0:;
	}
	_iter_end_1d47a87a0:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1de50390d_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1de507868_exprDeadCode static__1de507e95_new(jule::Ptr<_1de50390d_scopeDeadCode>& _5024_s) {
	return _1de507868_exprDeadCode{._field_s=_5024_s};;
}



inline void _1de50821a_binary(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9b9336_BinopExprModel> _5625_m) {
	_1de50dbb0_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_1de50dbb0_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _1de508490_unary(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9b96dd_UnaryExprModel> _6124_m) {
	_1de50dbb0_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _1de508715_structureLit(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9b9e91_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1d47ab9d4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9b9ad9_StructArgExprModel> _6621_arg = *it;
			{
				_1de50dbb0_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_1d47ab9d4:;
			++it;
			goto _iter_begin_1d47ab9d4;
		}
		_iter_end_1d47ab9d4:;
	};
}



inline void _1de50898a_allocStructure(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel> _7133_m) {
	_1de508715_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _1de508c10_casting(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9ba7ee_CastingExprModel> _7526_m) {
	_1de50dbb0_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _1de508e85_args(_1de507868_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_1d47adc39:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_1de50dbb0_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_1d47adc39:;
			++it;
			goto _iter_begin_1d47adc39;
		}
		_iter_end_1d47adc39:;
	};
}



inline void _1de50920a_funcCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel> _8527_m) {
	_1de50dbb0_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_1de508e85_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1de50417d_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _1de509480_slice(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bb558_SliceExprModel> _9324_m) {
	_1de508e85_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _1de509705_array(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9be34c_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1de50dbb0_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_1de508e85_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _1de50997a_indexing(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bb9cb_IndexingExprModel> _10427_m) {
	_1de50dbb0_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_1de50dbb0_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _1de509c00_anonFunc(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bbd83_AnonFnExprModel> _10927_m) {
	_1de506812_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1de509e75_mapExpr(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bc6ad_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1d47b4c0c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9bc23a_KeyValPairExprModel> _11421_pair = *it;
			{
				_1de50dbb0_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_1de50dbb0_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_1d47b4c0c:;
			++it;
			goto _iter_begin_1d47b4c0c;
		}
		_iter_end_1d47b4c0c:;
	};
}



inline void _1de50a1ea_slicing(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bcbec_SlicingExprModel> _12026_m) {
	_1de50dbb0_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_1de50dbb0_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1de50dbb0_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _1de50a470_traitSub(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> _12827_m) {
	_1de50dbb0_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _1de50a6e5_structureSub(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _13231_m) {
	_1de50dbb0_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _1de50a96a_commonSub(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel> _13628_m) {
	_1de50dbb0_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _1de50abe0_tuple(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9bee96_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1d47b920b:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> _14121_d = *it;
			{
				_1de50dbb0_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_1d47b920b:;
			++it;
			goto _iter_begin_1d47b920b;
		}
		_iter_end_1d47b920b:;
	};
}



inline void _1de50ae65_newCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1de50dbb0_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _1de50b1da_outCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel> _15226_m) {
	_1de50dbb0_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _1de50b460_outlnCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel> _15628_m) {
	_1de50dbb0_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _1de50b6d5_panicCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel> _16028_m) {
	_1de50dbb0_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _1de50b95a_assertCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel> _16429_m) {
	_1de50dbb0_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _1de50bbd0_errorCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> _16828_m) {
	_1de50dbb0_optimize(&(*_self_), _16828_m.get()._field_Err.get()._field_Model);
}



inline void _1de50be55_makeCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1de50dbb0_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1de50dbb0_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _1de50c1ca_appendCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel> _18129_m) {
	_1de50dbb0_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_1de50dbb0_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _1de50c450_lenCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel> _18626_m) {
	_1de50dbb0_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _1de50c6c5_capCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel> _19026_m) {
	_1de50dbb0_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _1de50c94a_cloneCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel> _19428_m) {
	_1de50dbb0_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _1de50cbc0_deleteCall(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel> _19829_m) {
	_1de50dbb0_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1de50dbb0_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1de50ce45_sizeof(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c39d3_SizeofExprModel> _20525_m) {
	_1de50dbb0_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _1de50d1ba_alignof(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c3cbe_AlignofExprModel> _20926_m) {
	_1de50dbb0_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _1de50d440_integratedToStr(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel> _21334_m) {
	_1de50dbb0_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _1de50d6b5_free(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c4a6c_FreeExprModel> _21723_m) {
	_1de50dbb0_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _1de50d93a_backendEmit(_1de507868_exprDeadCode* _self_, jule::Ptr<_1dd9c4781_BackendEmitExprModel> _22130_m) {
	_1de508e85_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _1de50dbb0_optimize(_1de507868_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d47c6ceb:;
			{
				_1de50821a_binary(&(*_self_), _22528_model.cast_ptr<_1dd9b9336_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1d47c6d73:;
			{
				_1de508490_unary(&(*_self_), _22528_model.cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d47c6dea:;
			{
				_1de508715_structureLit(&(*_self_), _22528_model.cast_ptr<_1dd9b9e91_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d47c72c4:;
			{
				_1de50898a_allocStructure(&(*_self_), _22528_model.cast_ptr<_1dd9ba29e_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d47c733a:;
			{
				_1de508c10_casting(&(*_self_), _22528_model.cast_ptr<_1dd9ba7ee_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d47c73b2:;
			{
				_1de50920a_funcCall(&(*_self_), _22528_model.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d47c7439:;
			{
				_1de509480_slice(&(*_self_), _22528_model.cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d47c74b1:;
			{
				_1de509705_array(&(*_self_), _22528_model.cast_ptr<_1dd9be34c_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d47c7538:;
			{
				_1de50997a_indexing(&(*_self_), _22528_model.cast_ptr<_1dd9bb9cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1d47c75b0:;
			{
				_1de509c00_anonFunc(&(*_self_), _22528_model.cast_ptr<_1dd9bbd83_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1d47c7637:;
			{
				_1de509e75_mapExpr(&(*_self_), _22528_model.cast_ptr<_1dd9bc6ad_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d47c76ae:;
			{
				_1de50a1ea_slicing(&(*_self_), _22528_model.cast_ptr<_1dd9bcbec_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d47c7736:;
			{
				_1de50a470_traitSub(&(*_self_), _22528_model.cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d47c77ad:;
			{
				_1de50a6e5_structureSub(&(*_self_), _22528_model.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d47c7835:;
			{
				_1de50a96a_commonSub(&(*_self_), _22528_model.cast_ptr<_1dd9beb99_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d47c78ac:;
			{
				_1de50abe0_tuple(&(*_self_), _22528_model.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d47c7934:;
			{
				_1de50b1da_outCall(&(*_self_), _22528_model.cast_ptr<_1dd9c0370_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d47c79ab:;
			{
				_1de50b460_outlnCall(&(*_self_), _22528_model.cast_ptr<_1dd9c075a_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d47c7a33:;
			{
				_1de50ae65_newCall(&(*_self_), _22528_model.cast_ptr<_1dd9c0e64_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d47c7aaa:;
			{
				_1de50b6d5_panicCall(&(*_self_), _22528_model.cast_ptr<_1dd9c134e_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d47c7b32:;
			{
				_1de50b95a_assertCall(&(*_self_), _22528_model.cast_ptr<_1dd9c1805_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d47c7ba9:;
			{
				_1de50bbd0_errorCall(&(*_self_), _22528_model.cast_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d47c7c31:;
			{
				_1de50be55_makeCall(&(*_self_), _22528_model.cast_ptr<_1dd9c1cab_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d47c7ca8:;
			{
				_1de50c1ca_appendCall(&(*_self_), _22528_model.cast_ptr<_1dd9c2196_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d47c7d30:;
			{
				_1de50c450_lenCall(&(*_self_), _22528_model.cast_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d47c7da7:;
			{
				_1de50c6c5_capCall(&(*_self_), _22528_model.cast_ptr<_1dd9c27d4_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d47c7e2e:;
			{
				_1de50c94a_cloneCall(&(*_self_), _22528_model.cast_ptr<_1dd9c0a79_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d47c7ea6:;
			{
				_1de50cbc0_deleteCall(&(*_self_), _22528_model.cast_ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d47c802d:;
			{
				_1de50ce45_sizeof(&(*_self_), _22528_model.cast_ptr<_1dd9c39d3_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1d47c80a5:;
			{
				_1de50d1ba_alignof(&(*_self_), _22528_model.cast_ptr<_1dd9c3cbe_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1d47c812c:;
			{
				_1de50d440_integratedToStr(&(*_self_), _22528_model.cast_ptr<_1dd9c43b8_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d47c81a4:;
			{
				_1de50d6b5_free(&(*_self_), _22528_model.cast_ptr<_1dd9c4a6c_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d47c822b:;
			{
				_1de50d93a_backendEmit(&(*_self_), _22528_model.cast_ptr<_1dd9c4781_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1d47c6ee9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1de507868_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb7989d_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb79bbc_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb7a085_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb7a64b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb7a9e2_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ddb7bb9c_scopeOptimizer> static__1ddb7c1b9_new(jule::Ptr<_1dd9e7232_Scope> _4523_scope) {
	return jule::new_ptr<_1ddb7bb9c_scopeOptimizer>(_1ddb7bb9c_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _1ddb7c43e_setCurrentStmt(_1ddb7bb9c_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1ddb82543_optimizeData(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dda8944a_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d4812e25:;
			{
				jule::Ptr<_1dd9bb1a1_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35);;
				if (_220b7b906_Production) {
					if (((!(_1dd9cb656_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1ddb8537b_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1ddb7c43e_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1d4812c16:;
	};
	static__1ddb875d1_optimize(_5535_d.get()._field_Model);
}



inline void _1ddb82796_optimizeVar(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dda418db_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1ddb875d1_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1ddb82a1b_optimizeConditional(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9e7c8d_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1d4816027:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9e762d_If> _7721_elif = *it;
			{
				static__1ddb875d1_optimize(_7721_elif.get()._field_Expr);
				_1ddb84ca4_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1d4816027:;
			++it;
			goto _iter_begin_1d4816027;
		}
		_iter_end_1d4816027:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1ddb84ca4_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1ddb90a3a_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1d4817da3:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1dd9e762d_If> _9221_elif = *it;
			{
				if ((!(_1ddb85689_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1d4817da3;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1dd9e7919_Else>(_1dd9e7919_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1d4817da3;
			}
			_iter_next_1d4817da3:;
			++it;
			_9214_i++;
			goto _iter_begin_1d4817da3;
		}
		_iter_end_1d4817da3:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1dd9e762d_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1dd9e762d_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1ddb8602a_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1d481b0d7:;
	}
	_iter_end_1d481b0d7:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1d481c748:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1dd9e762d_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1d481c748:;
			++it;
			_12913_j++;
			goto _iter_begin_1d481c748;
		}
		_iter_end_1d481c748:;
	};
	if ((_12817_only != -1LL)) {
		_1ddb7c43e_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1ddb82e06_buildDefaultConstatTrueCase(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9eb9c8_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1dd9eae7d_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1d482021d;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type == &__jule_any_type50) {
					_case_begin_1d482087d:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=jule::Any(_14581_m.get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1d482021d;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1d4821cbe:;
					{
						goto _iter_end_1d482021d;
					}
				}
				_match_end_1d4821bd1:;
			};
		}
	_iter_next_1d482021d:;
	}
	_iter_end_1d482021d:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1ddb83115_optimizeMatch(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9eae7d_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1d4823dc0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eb9c8_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1d482471c:;
					if (it != expr.end()) {
						jule::Ptr<_1dda8944a_Data> _17325_expr = *it;
						{
							static__1ddb875d1_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1d482471c:;
						++it;
						goto _iter_begin_1d482471c;
					}
					_iter_end_1d482471c:;
				};
				_1ddb84ca4_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1d4823dc0:;
			++it;
			goto _iter_begin_1d4823dc0;
		}
		_iter_end_1d4823dc0:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1ddb84ca4_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1ddb90a3a_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1d48263ab:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1dd9eb9c8_Case> _18925_case = *it;
			{
				if ((!(_1ddb85c83_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1d48263ab;
				};
				_18617_constCase=true;
				_1ddb82e06_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1d48263ab;
			}
			_iter_next_1d48263ab:;
			++it;
			_18918_i++;
			goto _iter_begin_1d48263ab;
		}
		_iter_end_1d48263ab:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1dd9eb9c8_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1dd9eb9c8_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1ddb862d3_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1d48290c3:;
	}
	_iter_end_1d48290c3:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1d482a17e:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1dd9eb9c8_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1d482a17e:;
			++it;
			_21913_j++;
			goto _iter_begin_1d482a17e;
		}
		_iter_end_1d482a17e:;
	};
	if ((_21817_only != -1LL)) {
		_1ddb7c43e_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1ddb8338a_optimizeRangeIter(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9e8dd2_RangeIter> _23540_it) {
	static__1ddb875d1_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1ddb84ca4_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1ddb83610_optimizeWhileIter(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9e84ec_WhileIter> _24040_it) {
	static__1ddb875d1_optimize(_24040_it.get()._field_Expr);
	_1ddb84a2e_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1ddb84ca4_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1ddb8391d_substr(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ea587_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d482e2e8:;
			{
				jule::Ptr<_1dd9bcbec_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_1dd9bcbec_SlicingExprModel>(&__jule_any_type99);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1ddb7c43e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1ddb7a64b_MutSlicingExprModel>(_1ddb7a64b_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_1d482e293:;
	};
	return false;;
}



inline jule::Bool _1ddb83c2b_strInsert(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ea587_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d4831718:;
			{
				jule::Ptr<_1dd9b9336_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_1dd9b9336_BinopExprModel>(&__jule_any_type118);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1ddb7c43e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1ddb7a9e2_StrInsertBeginExprModel>(_1ddb7a9e2_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type128));
					return true;;
				};
			}
		}
		_match_end_1d4831460:;
	};
	return false;;
}



inline jule::Bool _1ddb84039_strAssign(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ea587_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_1ddaba129_Prim> _28213_lp = _1ddab7764_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1ddabd35d_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1ddb8391d_substr(&(*_self_), _27832_a) || _1ddb83c2b_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1d48350e0:;
			{
				return true;;
			}
		}
		_match_end_1d4835057:;
	};
	return false;;
}



inline void _1ddb842ae_optimizeAssign(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ea587_Assign> _29437_assign) {
	if ((_1ddb8e42e_Copy && _1ddb84039_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1ddb875d1_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1ddb875d1_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1d4836ee3:;
			{
				if ((_1ddb8ed14_Math && (_1ddab8bb6_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1dd9b9336_BinopExprModel>(_1dd9b9336_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type118);;
					static__1ddb875d1_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type118) {
							_case_begin_1d4839468:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1dd9b8d6e_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1d4839215:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1d4836d8e:;
	};
	if (_1ddb8ea06_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1d483b0e6:;
				{
					jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_1dd9c2196_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type84) {
							_case_begin_1d483c180:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type72) {
										_case_begin_1d483c933:;
										{
											_1ddb7c43e_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1ddb7a085_PushToSliceExprModel>(_1ddb7a085_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84)}), &__jule_any_type129));
										}
									}
									_match_end_1d483c8cd:;
								};
							}
						}
						_match_end_1d483be71:;
					};
				}
			}
			_match_end_1d4837ad7:;
		};
	};
}



inline void _1ddb84534_optimizeMultiAssign(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ea93e_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1d483b503:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1ddb875d1_optimize(_34521_l.get()._field_Model);
				};
			}
			_iter_next_1d483b503:;
			++it;
			goto _iter_begin_1d483b503;
		}
		_iter_end_1d483b503:;
	};
	static__1ddb875d1_optimize(_34442_assign.get()._field_R);
}



inline void _1ddb847a9_optimizeRet(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9ec402_RetSt> _35334_r) {
	static__1ddb875d1_optimize(_35334_r.get()._field_Expr);
}



inline void _1ddb84a2e_optimizeStmt(_1ddb7bb9c_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d483ee0d:;
			{
				_1ddb84ca4_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1dd9e7232_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d483ee85:;
			{
				_1ddb82543_optimizeData(&(*_self_), _35735_stmt.cast_ptr<_1dda8944a_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d483eeeb:;
			{
				_1ddb82796_optimizeVar(&(*_self_), _35735_stmt.cast_ptr<_1dda418db_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d4840062:;
			{
				_1ddb82a1b_optimizeConditional(&(*_self_), _35735_stmt.cast_ptr<_1dd9e7c8d_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d48400c8:;
			{
				_1ddb8338a_optimizeRangeIter(&(*_self_), _35735_stmt.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d4840150:;
			{
				_1ddb83610_optimizeWhileIter(&(*_self_), _35735_stmt.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d48401c7:;
			{
				_1ddb84ca4_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d484024e:;
			{
				_1ddb842ae_optimizeAssign(&(*_self_), _35735_stmt.cast_ptr<_1dd9ea587_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d48402c6:;
			{
				_1ddb84534_optimizeMultiAssign(&(*_self_), _35735_stmt.cast_ptr<_1dd9ea93e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1d484034d:;
			{
				_1ddb83115_optimizeMatch(&(*_self_), _35735_stmt.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d48403c5:;
			{
				_1ddb847a9_optimizeRet(&(*_self_), _35735_stmt.cast_ptr<_1dd9ec402_RetSt>(&__jule_any_type52));
			}
		}
		_match_end_1d483ec43:;
	};
}



inline void _1ddb84ca4_optimizeChild(_1ddb7bb9c_scopeOptimizer* _self_, jule::Ptr<_1dd9e7232_Scope> _38436_child) {
	jule::Ptr<_1ddb7bb9c_scopeOptimizer> _38517_so = static__1ddb7c1b9_new(_38436_child);;
	_1ddb84e80_optimize(_38517_so.ptr());
}



inline void _1ddb84e80_optimize(_1ddb7bb9c_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1d4846574:;
		if (it != expr.end()) {
			jule::I64 _39114_i = it - expr.begin();
			jule::Any _39121_stmt = *it;
			{
				(*_self_)._field_i=_39114_i;
				_1ddb84a2e_optimizeStmt(&(*_self_), _39121_stmt);
			}
			_iter_next_1d4846574:;
			++it;
			_39114_i++;
			goto _iter_begin_1d4846574;
		}
		_iter_end_1d4846574:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb7bb9c_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1ddb875d1_optimize(jule::Any& _5829_model) {
	if (_21734a551_exprEnabled) {
		jule::Ptr<_1ddb870c5_exprOptimizer> _6121_exop = jule::new_ptr<_1ddb870c5_exprOptimizer>(_1ddb870c5_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_1ddb8d7d5_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1ddb878de_strCond(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9b9336_BinopExprModel> _6826_m) {
	jule::Ptr<_1ddaba129_Prim> _6913_lp = _1ddab7764_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1ddabd35d_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d48500e9:;
			{
				({
					jule::Ptr<_1dd9b8d6e_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1dd9b8d6e_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1d4850094:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d484e824:;
			{
				goto _match_end_1d4850d86;
			}
		}
		else {
			_case_begin_1d485121b:;
			{
				return true;;
			}
		}
		_match_end_1d4850d86:;
	};
	_julec_label_opt:;
	jule::Ptr<_1dd9ad050_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
	if ((!(_1dd9b0085_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1d4852904:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1dd9beb99_CommonSubIdentExprModel>(_1dd9beb99_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type74);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1d485296a:;
			{
				jule::Ptr<_222e62217_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1dd9b96dd_UnaryExprModel>(_1dd9b96dd_UnaryExprModel{._field_Expr=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Model=jule::Any(jule::new_ptr<_1dd9beb99_CommonSubIdentExprModel>(_1dd9beb99_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type74), }), ._field_Op=_10021_op}), &__jule_any_type75);
			}
		}
		_match_end_1d4852195:;
	};
	return true;;
}



inline void _1ddb87b64_binary(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9b9336_BinopExprModel> _11625_m) {
	static__1ddb875d1_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__1ddb875d1_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d4853ecc:;
			{
				goto _match_end_1d4856430;
			}
		}
		else {
			_case_begin_1d4856584:;
			{
				return;;
			}
		}
		_match_end_1d4856430:;
	};
	if ((_1ddb90a3a_Cond && _1ddb878de_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_1ddb8ed14_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d48575c9:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ddb8dbd1_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1dd9ad050_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
					_1dd9b1031_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1d4857640:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ddb8dbd1_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1dd9ad050_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
					_1dd9b1031_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1d48576a6:;
			{
				jule::Ptr<_1dd9ad050_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
				jule::F64 _15317_d = _1dd9b0a36_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1dd9b0cab_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1d48573dc:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_1ddb7989d_UnsafeBinopExprModel>(_1ddb7989d_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type130);;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _1ddb87dd9_unary(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9b96dd_UnaryExprModel> _16324_m) {
	static__1ddb875d1_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_1ddb90661_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1d485e614:;
				{
					jule::Ptr<_1dd9b96dd_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1d485e5ae:;
		};
	};
}



inline void _1ddb8815e_structureLit(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9b9e91_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1d48611d7:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9b9ad9_StructArgExprModel> _17721_arg = *it;
			{
				static__1ddb875d1_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_1d48611d7:;
			++it;
			goto _iter_begin_1d48611d7;
		}
		_iter_end_1d48611d7:;
	};
}



inline void _1ddb883d4_allocStructure(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel> _18233_m) {
	_1ddb8815e_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _1ddb88659_casting(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9ba7ee_CastingExprModel> _18626_m) {
	static__1ddb875d1_optimize(_18626_m.get()._field_Expr);
}



inline void _1ddb888ce_args(_1ddb870c5_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_1d4862bcd:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__1ddb875d1_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_1d4862bcd:;
			++it;
			_19114_i++;
			goto _iter_begin_1d4862bcd;
		}
		_iter_end_1d4862bcd:;
	};
}



inline void _1ddb88b54_scope(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9e7232_Scope>& _19725_s) {
	jule::Ptr<_1ddb7bb9c_scopeOptimizer> _19817_scopt = static__1ddb7c1b9_new(_19725_s);;
	_1ddb84e80_optimize(_19817_scopt.ptr());
}



inline void _1ddb88dc9_funcCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel> _20227_m) {
	static__1ddb875d1_optimize(_20227_m.get()._field_Expr);
	_1ddb888ce_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_1ddb88b54_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _1ddb8914e_slice(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bb558_SliceExprModel> _21024_m) {
	_1ddb888ce_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _1ddb893c4_array(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9be34c_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__1ddb875d1_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_1ddb888ce_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _1ddb89649_indexing(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bb9cb_IndexingExprModel> _22327_m) {
	static__1ddb875d1_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__1ddb875d1_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_1ddb900cd_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_1ddab8479_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _1dda89d0d_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_1ddb79bbc_UnsafeIndexingExprModel>(_1ddb79bbc_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type131);;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d487145b:;
			{
				jule::Ptr<_1dda418db_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1d4871406;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1d4872c32:;
						{
							jule::Ptr<_1dda418db_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_1ddb79bbc_UnsafeIndexingExprModel>(_1ddb79bbc_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type131);;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1d4872bcc:;
				};
			}
		}
		_match_end_1d4871406:;
	};
}



inline void _1ddb898be_anonFunc(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bbd83_AnonFnExprModel> _25427_m) {
	_1ddb88b54_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _1ddb89b44_mapExpr(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bc6ad_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1d4875350:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9bc23a_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1ddb875d1_optimize(_25921_pair.get()._field_Key);
				static__1ddb875d1_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_1d4875350:;
			++it;
			goto _iter_begin_1d4875350;
		}
		_iter_end_1d4875350:;
	};
}



inline void _1ddb89db9_slicing(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bcbec_SlicingExprModel> _26526_m) {
	static__1ddb875d1_optimize(_26526_m.get()._field_Expr);
	static__1ddb875d1_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__1ddb875d1_optimize(_26526_m.get()._field_Right);
	};
}



inline void _1ddb8a13e_traitSub(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> _27327_m) {
	static__1ddb875d1_optimize(_27327_m.get()._field_Expr);
}



inline void _1ddb8a3b4_structureSub(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _27731_m) {
	static__1ddb875d1_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _1ddb8a639_commonSub(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel> _28128_m) {
	static__1ddb875d1_optimize(_28128_m.get()._field_Expr);
}



inline void _1ddb8a8ae_tuple(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9bee96_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1d487870a:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> _28621_d = *it;
			{
				static__1ddb875d1_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_1d487870a:;
			++it;
			goto _iter_begin_1d487870a;
		}
		_iter_end_1d487870a:;
	};
}



inline void _1ddb8ab34_newCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__1ddb875d1_optimize(_29126_m.get()._field_Init);
	};
}



inline void _1ddb8ada9_outCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel> _29726_m) {
	static__1ddb875d1_optimize(_29726_m.get()._field_Expr);
}



inline void _1ddb8b12e_outlnCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel> _30128_m) {
	static__1ddb875d1_optimize(_30128_m.get()._field_Expr);
}



inline void _1ddb8b3a4_panicCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel> _30528_m) {
	static__1ddb875d1_optimize(_30528_m.get()._field_Expr);
}



inline void _1ddb8b629_assertCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel> _30929_m) {
	static__1ddb875d1_optimize(_30929_m.get()._field_Expr);
}



inline void _1ddb8b89e_errorCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> _31328_m) {
	static__1ddb875d1_optimize(_31328_m.get()._field_Err.get()._field_Model);
}



inline void _1ddb8bb24_makeCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__1ddb875d1_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__1ddb875d1_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _1ddb8bd99_appendCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel> _32629_m) {
	static__1ddb875d1_optimize(_32629_m.get()._field_Dest);
	static__1ddb875d1_optimize(_32629_m.get()._field_Elements);
}



inline void _1ddb8c11e_lenCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel> _33126_m) {
	static__1ddb875d1_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _1ddb8c394_capCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel> _33526_m) {
	static__1ddb875d1_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _1ddb8c619_cloneCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel> _33928_m) {
	static__1ddb875d1_optimize(_33928_m.get()._field_Expr);
}



inline void _1ddb8c88e_deleteCall(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel> _34329_m) {
	static__1ddb875d1_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__1ddb875d1_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1ddb8cb14_sizeof(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c39d3_SizeofExprModel> _35025_m) {
	static__1ddb875d1_optimize(_35025_m.get()._field_Expr);
}



inline void _1ddb8cd89_alignof(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c3cbe_AlignofExprModel> _35426_m) {
	static__1ddb875d1_optimize(_35426_m.get()._field_Expr);
}



inline void _1ddb8d10e_integratedToStr(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel> _35834_m) {
	static__1ddb875d1_optimize(_35834_m.get()._field_Expr);
}



inline void _1ddb8d384_free(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c4a6c_FreeExprModel> _36223_m) {
	static__1ddb875d1_optimize(_36223_m.get()._field_Expr);
}



inline void _1ddb8d609_backendEmit(_1ddb870c5_exprOptimizer* _self_, jule::Ptr<_1dd9c4781_BackendEmitExprModel> _36630_m) {
	_1ddb888ce_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _1ddb8d7d5_do(_1ddb870c5_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d4882c97:;
			{
				_1ddb87b64_binary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9b9336_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1d4883083:;
			{
				_1ddb87dd9_unary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d48830e9:;
			{
				_1ddb8815e_structureLit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9b9e91_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d4883160:;
			{
				_1ddb883d4_allocStructure(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9ba29e_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d48831d7:;
			{
				_1ddb88659_casting(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9ba7ee_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d488325e:;
			{
				_1ddb88dc9_funcCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d48832d6:;
			{
				_1ddb8914e_slice(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d488335d:;
			{
				_1ddb893c4_array(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9be34c_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d48833d5:;
			{
				_1ddb89649_indexing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bb9cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1d488345c:;
			{
				_1ddb898be_anonFunc(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bbd83_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1d48834d4:;
			{
				_1ddb89b44_mapExpr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bc6ad_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d488355b:;
			{
				_1ddb89db9_slicing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bcbec_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d48835d3:;
			{
				_1ddb8a13e_traitSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d488365a:;
			{
				_1ddb8a3b4_structureSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d48836d2:;
			{
				_1ddb8a639_commonSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9beb99_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d4883759:;
			{
				_1ddb8a8ae_tuple(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d48837d1:;
			{
				_1ddb8ada9_outCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c0370_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d4883858:;
			{
				_1ddb8b12e_outlnCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c075a_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d48838d0:;
			{
				_1ddb8ab34_newCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c0e64_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d4883957:;
			{
				_1ddb8b3a4_panicCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c134e_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d48839ce:;
			{
				_1ddb8b629_assertCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c1805_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d4883a56:;
			{
				_1ddb8b89e_errorCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d4883acd:;
			{
				_1ddb8bb24_makeCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c1cab_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d4883b55:;
			{
				_1ddb8bd99_appendCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c2196_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d4883bcc:;
			{
				_1ddb8c11e_lenCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d4883c54:;
			{
				_1ddb8c394_capCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c27d4_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d4883ccb:;
			{
				_1ddb8c619_cloneCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c0a79_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d4883d53:;
			{
				_1ddb8c88e_deleteCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d4883dca:;
			{
				_1ddb8cb14_sizeof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c39d3_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1d4883e52:;
			{
				_1ddb8cd89_alignof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c3cbe_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1d4883ec9:;
			{
				_1ddb8d10e_integratedToStr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c43b8_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d4884051:;
			{
				_1ddb8d384_free(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c4a6c_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d48840c8:;
			{
				_1ddb8d609_backendEmit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1dd9c4781_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1d4882c42:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ddb870c5_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21736d94d_Optimizer> static__21734a199_New(jule::Ptr<_1dded98cd_IR>& _2524_ir) {
	return jule::new_ptr<_21736d94d_Optimizer>(_21736d94d_Optimizer{._field_ir=_2524_ir});;
}



inline void _21735997d_optimizeGlobal(_21736d94d_Optimizer* _self_, jule::Ptr<_1dda418db_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1ddb875d1_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _217362b84_optimizeFunction(_21736d94d_Optimizer* _self_, jule::Ptr<_1dd9c761e_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d489b354:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1ddb7bb9c_scopeOptimizer> _4221_so = static__1ddb7c1b9_new(_4121_ins.get()._field_Scope);;
				_1ddb84e80_optimize(_4221_so.ptr());
			}
			_iter_next_1d489b354:;
			++it;
			goto _iter_begin_1d489b354;
		}
		_iter_end_1d489b354:;
	};
}



inline void _2173728ca_optimizeStruct(_21736d94d_Optimizer* _self_, jule::Ptr<_2090d5849_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d489c80b:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1d489d136:;
					if (it != expr.end()) {
						jule::Ptr<_2090d5a36_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1ddb875d1_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1d489d136:;
						++it;
						goto _iter_begin_1d489d136;
					}
					_iter_end_1d489d136:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1d489e379:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _5725_m = *it;
						{
							_217362b84_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1d489e379:;
						++it;
						goto _iter_begin_1d489e379;
					}
					_iter_end_1d489e379:;
				};
			}
			_iter_next_1d489c80b:;
			++it;
			goto _iter_begin_1d489c80b;
		}
		_iter_end_1d489c80b:;
	};
}



inline void _217374118_optimizeGlobals(_21736d94d_Optimizer* _self_, jule::Ptr<_1dda18891_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d489e577:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1d48a02ae:;
					if (it != expr.end()) {
						jule::Ptr<_1dda418db_Var> _6525_v = *it;
						{
							_21735997d_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1d48a02ae:;
						++it;
						goto _iter_begin_1d48a02ae;
					}
					_iter_end_1d48a02ae:;
				};
			}
			_iter_next_1d489e577:;
			++it;
			goto _iter_begin_1d489e577;
		}
		_iter_end_1d489e577:;
	};
}



inline void _21734ced2_optimizeFunctions(_21736d94d_Optimizer* _self_, jule::Ptr<_1dda18891_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d48a0820:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1d48a15ac:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _7325_func = *it;
						{
							_217362b84_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1d48a15ac:;
						++it;
						goto _iter_begin_1d48a15ac;
					}
					_iter_end_1d48a15ac:;
				};
			}
			_iter_next_1d48a0820:;
			++it;
			goto _iter_begin_1d48a0820;
		}
		_iter_end_1d48a0820:;
	};
}



inline void _21736d1de_optimizeStructs(_21736d94d_Optimizer* _self_, jule::Ptr<_1dda18891_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d48a1b1d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1d48a28aa:;
					if (it != expr.end()) {
						jule::Ptr<_2090d5849_Struct> _8125_s = *it;
						{
							_2173728ca_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1d48a28aa:;
						++it;
						goto _iter_begin_1d48a28aa;
					}
					_iter_end_1d48a28aa:;
				};
			}
			_iter_next_1d48a1b1d:;
			++it;
			goto _iter_begin_1d48a1b1d;
		}
		_iter_end_1d48a1b1d:;
	};
}



inline void _2173a329b_optimizePackage(_21736d94d_Optimizer* _self_, jule::Ptr<_1dda18891_Package>& _8739_p) {
	_217374118_optimizeGlobals(&(*_self_), _8739_p);
	_21734ced2_optimizeFunctions(&(*_self_), _8739_p);
	_21736d1de_optimizeStructs(&(*_self_), _8739_p);
}



inline void _2173a5149_Optimize(_21736d94d_Optimizer* _self_) {
	_1de4c7041_detectEnabled();
	if (_1ddb8e73c_Deadcode) {
		_1de5024de_EliminateDefines((*_self_)._field_ir);
	};
	if ((_21734ba5d_scopeEnabled || _21734a551_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1d48a46c0:;
			if (it != expr.end()) {
				jule::Ptr<_1dda15937_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_2173a329b_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1d48a46c0:;
				++it;
				goto _iter_begin_1d48a46c0;
			}
			_iter_end_1d48a46c0:;
		};
		_2173a329b_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1ddb8e73c_Deadcode) {
		_1de507291_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21736d94d_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1de525677_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1de526920_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1de525677_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1de526733_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1de527ea4_LogFlat(_222b38ae2_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1de5281b3_LogError(_222b38ae2_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1de525677_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1dd99dc11_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1dd99dc11_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _222ab3c7b_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_222ab3c7b_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1dd99dc11_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_222a844bb_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_222a844bb_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_222a844bb_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1de526920_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1de5283c2_Log(_222b38ae2_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1d48b48bc:;
			{
				static__1de527ea4_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1d48b4933:;
			{
				static__1de5281b3_LogError(_6520_l);
			}
		}
		_match_end_1d48b4779:;
	};
}



inline void static__1de5285d1_PrintLogs(jule::Slice<_222b38ae2_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1d48b589b:;
		if (it != expr.end()) {
			_222b38ae2_Log &_7616_l = *it;
			{
				static__1de5283c2_Log(_7616_l);
			}
			_iter_next_1d48b589b:;
			++it;
			goto _iter_begin_1d48b589b;
		}
		_iter_end_1d48b589b:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1dd99dc11_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1de527c51_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1c56cad74_Unix(_1c56ca9bc_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1c56cd409_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1c56cd78e_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c56ca9bc_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1c56cb160_Time static__1c56cb506_Unix(jule::U64 _9120_sec) {
	return _1c56cb160_Time{._field_sec=_9120_sec};;
}



inline _1c56cb160_Time static__1c56cb704_Now(void) {
	return static__1c56cb506_Unix(static_cast<jule::U64>(_1c56cd0eb_unix()));;
}



inline jule::U64 _1c56cbb55_Unix(_1c56cb160_Time* _self_) {
	return (*_self_)._field_sec;;
}



inline jule::U64 _1c56cbdb9_Day(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Day;;
}



inline jule::U64 _1c56cc12d_Month(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Month;;
}



inline jule::U64 _1c56cc392_Year(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Year;;
}



inline jule::U64 _1c56cc606_Second(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Second;;
}



inline jule::U64 _1c56cc86a_Minute(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Minute;;
}



inline jule::U64 _1c56ccace_Hour(_1c56cb160_Time* _self_) {
	return _1c56ccd43_Abs(&(*_self_))._field_Hour;;
}



inline _1c56ca9bc_AbsTime _1c56ccd43_Abs(_1c56cb160_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1c56ca04e_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1c56ca04e_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1d48e54e1:;
	}
	_iter_end_1d48e54e1:;;
	_1c56ca9bc_AbsTime _17417_t = _1c56ca9bc_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c56cb160_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c5626462_scopeCoder> static__1c5626a7d_new(jule::Ptr<_1c56d2e7a_ObjectCoder>& _6124_oc) {
	return jule::new_ptr<_1c5626462_scopeCoder>(_1c5626462_scopeCoder{._field_oc=_6124_oc});;
}



inline void _1c5626d03_rangeIndexIter(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e8dd2_RangeIter>& _6739_it) {
	jule::Str _6813_begin = static__1c56444e6_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	jule::Str _6913_next = static__1c5644a35_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1ddb8e42e_Copy && _1c562b9b7_isCopyOptimizable(_6739_it.get()._field_Expr))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c563a245_model(_self_.get()._field_oc.get()._field_ec, _6739_it.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, _6813_begin);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1c56d581d_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	if ((_6739_it.get()._field_KeyB != nullptr)) {
		if (_1ddb8e42e_Copy) {
			_6739_it.get()._field_KeyB.get()._field_Reference=_1c562bd4c_isIterCopyOptimizable(_6739_it.get()._field_Expr,_6739_it.get()._field_KeyB);
		};
		_1c56d581d_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	_1c562b3e0_scope(_self_, _6739_it.get()._field_Scope);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, _6913_next);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c56ac65d_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, static__1c564424e_var(_6739_it.get()._field_KeyA));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c5669917_write(_self_.get()._field_oc, _6813_begin);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c564478d_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c5627078_rangeHashmapIter(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e8dd2_RangeIter>& _13541_it) {
	jule::Str _13613_begin = static__1c56444e6_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	jule::Str _13713_next = static__1c5644a35_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1ddb8e42e_Copy && _1c562b9b7_isCopyOptimizable(_13541_it.get()._field_Expr))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1c563a245_model(_self_.get()._field_oc.get()._field_ec, _13541_it.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, _13613_begin);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	if ((_13541_it.get()._field_KeyA != nullptr)) {
		if (_1ddb8e42e_Copy) {
			_13541_it.get()._field_KeyA.get()._field_Reference=_1c562bd4c_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyA);
		};
		_1c56d581d_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	if ((_13541_it.get()._field_KeyB != nullptr)) {
		if (_1ddb8e42e_Copy) {
			_13541_it.get()._field_KeyB.get()._field_Reference=_1c562bd4c_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyB);
		};
		_1c56d581d_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	_1c562b3e0_scope(_self_, _13541_it.get()._field_Scope);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, _13713_next);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c5669917_write(_self_.get()._field_oc, _13613_begin);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c564478d_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c56272ed_ifCase(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e762d_If> _20130_i) {
	if ((_20130_i.get()._field_Expr != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _20130_i.get()._field_Expr);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1c562b3e0_scope(_self_, _20130_i.get()._field_Scope);
}



inline void _1c5627573_conditional(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e7c8d_Conditional> _21035_c) {
	jule::Bool _21117_writed = false;;
	{
		auto &expr = _21035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1d49a86c5:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9e762d_If> _21221_elif = *it;
			{
				if ((_21221_elif == nullptr)) {
					goto _iter_next_1d49a86c5;
				};
				if (_21117_writed) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_21117_writed=true;
				_1c56272ed_ifCase(_self_, _21221_elif);
			}
			_iter_next_1d49a86c5:;
			++it;
			goto _iter_begin_1d49a86c5;
		}
		_iter_end_1d49a86c5:;
	};
	if ((_21035_c.get()._field_Default != nullptr)) {
		if (_21117_writed) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1c562b3e0_scope(_self_, _21035_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1c56277e8_infIter(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e8079_InfIter> _23031_it) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c562b3e0_scope(_self_, _23031_it.get()._field_Scope);
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c5644a35_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c564478d_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c5627a6d_whileIter(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e84ec_WhileIter> _24733_it) {
	if (((_24733_it.get()._field_Expr != nullptr) && (_24733_it.get()._field_Next == nullptr))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24733_it.get()._field_Expr != nullptr)) {
			_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24733_it.get()._field_Next != nullptr)) {
			_1c562ade5_st(_self_, _24733_it.get()._field_Next);
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c562b3e0_scope(_self_, _24733_it.get()._field_Scope);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c5644a35_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c564478d_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1c5627ce3_rangeIter(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e8dd2_RangeIter> _28033_it) {
	{
		
		if ((_1ddab86dd_Slc(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d49b920d:;
			{
				_1c5626d03_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1ddab8479_Arr(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d49b8c9b:;
			{
				_1c5626d03_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1ddab918e_Map(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d49b896b:;
			{
				_1c5627078_rangeHashmapIter(_self_, _28033_it);
			}
		}
		else {
			_case_begin_1d49b8905:;
			{
				_1c5626d03_rangeIndexIter(_self_, _28033_it);
			}
		}
		_match_end_1d49b8839:;
	};
}



inline void _1c5628068_cont(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e92cd_ContSt> _29324_c) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c5669917_write(_self_.get()._field_oc, static__1c5644a35_iterNext(_29324_c.get()._field_It));
}



inline void _1c56282dd_label(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e9971_Label> _29825_l) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5644ccc_label(_29825_l.get()._field_Ident));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1c5628563_gotoSt(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e9c5c_GotoSt> _30326_gt) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c5669917_write(_self_.get()._field_oc, static__1c5644ccc_label(_30326_gt.get()._field_Ident));
}



inline void _1c56287d8_postfix(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea114_Postfix> _30831_p) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _30831_p.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1c5669917_write(_self_.get()._field_oc, _30831_p.get()._field_Op);
}



inline void _1c5628a5d_assign(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea587_Assign> _31530_a) {
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_L.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, _31530_a.get()._field_Op.get()._field_Kind);
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_R.get()._field_Model);
}



inline void _1c5628cd3_mapLookupAssign(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea93e_MultiAssign>& _32140_a) {
	jule::Ptr<_1dd9bb9cb_IndexingExprModel> _32217_iem = _32140_a.get()._field_R.cast_ptr<_1dd9bb9cb_IndexingExprModel>(&__jule_any_type46);;
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Index.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_32140_a.get()._field_L[0LL] != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[0LL].get()._field_Model);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_32140_a.get()._field_L[1LL] != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[1LL].get()._field_Model);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5629058_multiAssignTup(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea93e_MultiAssign>& _34439_a) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1dd9bee96_TupleExprModel> _34817_tup = _34439_a.get()._field_R.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89);;
	{
		auto &expr = _34817_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1d49ce6a7:;
		if (it != expr.end()) {
			jule::I64 _35014_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _35021_r = *it;
			{
				_1c56ac65d_indent(_self_.get()._field_oc);
				jule::Ptr<_1dda8944a_Data> _35221_l = _34439_a.get()._field_L[_35014_i];;
				if ((_35221_l != nullptr)) {
					_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35221_l.get()._field_Kind));
					_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1c5669917_write(_self_.get()._field_oc, static__1c5642758_toOut(_1c5625de0_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_35014_i))));
					_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _35021_r.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1d49ce6a7:;
			++it;
			_35014_i++;
			goto _iter_begin_1d49ce6a7;
		}
		_iter_end_1d49ce6a7:;
	};
	{
		auto &expr = _34439_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1d49d4107:;
		if (it != expr.end()) {
			jule::I64 _36314_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _36321_l = *it;
			{
				if ((_36321_l != nullptr)) {
					_1c56ac65d_indent(_self_.get()._field_oc);
					_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _36321_l.get()._field_Model);
					_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1c5669917_write(_self_.get()._field_oc, static__1c5642758_toOut(_1c5625de0_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_36314_i))));
					_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1d49d4107:;
			++it;
			_36314_i++;
			goto _iter_begin_1d49d4107;
		}
		_iter_end_1d49d4107:;
	};
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c56292cd_multiAssignFn(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea93e_MultiAssign>& _37838_a) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	jule::Ptr<_1dd9bb1a1_FnCallExprModel> _38317_f = _37838_a.get()._field_R.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35);;
	_1c56e409b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_38317_f.get()._field_Func.get()._field_Result);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _37838_a.get()._field_R);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto &expr = _37838_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1d49da86c:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _38921_l = *it;
			{
				if ((_38921_l != nullptr)) {
					_1c56ac65d_indent(_self_.get()._field_oc);
					_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _38921_l.get()._field_Model);
					_1c5669917_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_38914_i));
					_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1d49da86c:;
			++it;
			_38914_i++;
			goto _iter_begin_1d49da86c;
		}
		_iter_end_1d49da86c:;
	};
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c5629553_multiAssign(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ea93e_MultiAssign> _40435_a) {
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d49de233:;
			{
				_1c5628cd3_mapLookupAssign(_self_, _40435_a);
				return;;
			}
		}
		_match_end_1d49de024:;
	};
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d49dde58:;
			{
				_1c5629058_multiAssignTup(_self_, _40435_a);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d49e00d0:;
			{
				_1c56292cd_multiAssignFn(_self_, _40435_a);
			}
		}
		else {
			_case_begin_1d49dec4a:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:418:13"));;
			}
		}
		_match_end_1d49debe5:;
	};
}



inline jule::Fn<void(void)> _1c5629861_matchExpr(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9eae7d_Match> _42233_m) {
	if ((!(_1dda89d0d_IsConst(_42233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1dd9b21b9_IsBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1dd9aed21_ReadBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1c563a245_model(_self_.get()._field_oc.get()._field_ec, _42233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1c5629b80_case(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9eae7d_Match> _43228_m, jule::Ptr<_1dd9eb9c8_Case> _43243_c) {
	if (((_43243_c.get()._field_Exprs.len() != 0LL) && (!(_1dd9eb489_IsGenericTypeMatch(_43228_m.ptr()))))) {
		if (((_43228_m.get()._field_Cases.len() > 0LL) && (_43228_m.get()._field_Cases[0LL] == _43243_c))) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _43243_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1d49e56bd:;
			if (it != expr.end()) {
				jule::I64 _43918_i = it - expr.begin();
				jule::Ptr<_1dda8944a_Data> _43925_expr = *it;
				{
					{
						
						if ((!(_43228_m.get()._field_TypeMatch))) {
							_case_begin_1d49ebcbd:;
							{
								jule::Fn<void(void)> _44225_caseExpr = _1c5629861_matchExpr(_self_, _43228_m);;
								if (_1dda8a11b_GoodOperand(_43228_m.get()._field_Expr.ptr(), _43925_expr)) {
									if ((_44225_caseExpr != nullptr)) {
										_44225_caseExpr();
										_1c5669917_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
								} else {
									_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
									if ((_44225_caseExpr != nullptr)) {
										_1c5669917_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_44225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1d49e6933:;
							{
								_1c5669917_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1ddab53cc_TypeKind> _45829_tk = _43925_expr.get()._field_Model.cast_ptr<_1ddab53cc_TypeKind>(&__jule_any_type91);;
								if ((_1ddab8e2a_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1c5669917_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1c562e9ed_boolean(_self_.get()._field_oc.get()._field_ec, (_1ddab79c8_Sptr(_43925_expr.get()._field_Kind.ptr()) != nullptr));
									_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(static_cast<jule::I64>(_1c5649c9e_findTypeOffset(_self_.get()._field_oc.ptr(), _1ddab8e2a_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()),_43925_expr.get()._field_Kind))));
									_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _46629_j = _1c566e015_pushAnyType(_self_.get()._field_oc, _45829_tk);;
									_1c5669917_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_46629_j));
								};
							}
						}
						_match_end_1d49e6867:;
					};
					if (((_43243_c.get()._field_Exprs.len() - _43918_i) > 1LL)) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1d49e56bd:;
				++it;
				_43918_i++;
				goto _iter_begin_1d49e56bd;
			}
			_iter_end_1d49e56bd:;
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_43228_m.get()._field_Default == _43243_c) && (_43228_m.get()._field_Cases.len() != 0LL))) {
		_1c56ac65d_indent(_self_.get()._field_oc);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c564531b_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43243_c))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_43243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1c56ac65d_indent(_self_.get()._field_oc);
		_1c562b3e0_scope(_self_, _43243_c.get()._field_Scope);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c5629e05_matchSt(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9eae7d_Match> _50031_m) {
	if (((_50031_m.get()._field_Cases.len() == 0LL) && (_50031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _50513_genericTypeMatch = _1dd9eb489_IsGenericTypeMatch(_50031_m.ptr());;
	if ((_50513_genericTypeMatch && ((_50031_m.get()._field_Default == nullptr) || (_50031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	if (((!(_50513_genericTypeMatch)) && (!(_1dda89d0d_IsConst(_50031_m.get()._field_Expr.ptr()))))) {
		if ((_1ddb8e42e_Copy && _1c562b9b7_isCopyOptimizable(_50031_m.get()._field_Expr))) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _50031_m.get()._field_Expr.get()._field_Model);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1c56ac65d_indent(_self_.get()._field_oc);
	};
	if ((_50031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _50031_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1d4a0ae42:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9eb9c8_Case> _52925_c = *it;
				{
					if ((_52925_c == nullptr)) {
						goto _iter_next_1d4a0ae42;
					};
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c56ac65d_indent(_self_.get()._field_oc);
					_1c5629b80_case(_self_, _50031_m,_52925_c);
				}
				_iter_next_1d4a0ae42:;
				++it;
				goto _iter_begin_1d4a0ae42;
			}
			_iter_end_1d4a0ae42:;
		};
	};
	if ((_50031_m.get()._field_Default != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1c5629b80_case(_self_, _50031_m,_50031_m.get()._field_Default);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c5645074_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_50031_m))));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c562a17a_fallSt(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ec07d_FallSt> _55626_f) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1c5669917_write(_self_.get()._field_oc, static__1c564531b_caseBegin(_55626_f.get()._field_DestCase));
}



inline void _1c562a400_breakSt(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e9685_BreakSt> _56127_b) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_56127_b.get()._field_It != 0LLU)) {
		_1c5669917_write(_self_.get()._field_oc, static__1c564478d_iterEnd(_56127_b.get()._field_It));
	} else {
		_1c5669917_write(_self_.get()._field_oc, static__1c5645074_matchEnd(_56127_b.get()._field_Mtch));
	};
}



inline void _1c562a675_setResult(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ec402_RetSt> _57033_r) {
	if ((_57033_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _57033_r.get()._field_Expr);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1c56ac65d_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1dda8944a_Data>> _57817_datas = _57033_r.get()._field_Expr.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89).get()._field_Datas;;
	{
		auto &expr = _57817_datas;
		auto it = expr.begin();
		_iter_begin_1d4a13422:;
		if (it != expr.end()) {
			jule::I64 _57913_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _57916_data = *it;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_57913_i));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _57916_data.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1c56ac65d_indent(_self_.get()._field_oc);
			}
			_iter_next_1d4a13422:;
			++it;
			_57913_i++;
			goto _iter_begin_1d4a13422;
		}
		_iter_end_1d4a13422:;
	};
}



inline void _1c562a8ea_retSt(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ec402_RetSt> _58929_r) {
	if (_1dd9c7a81_IsVoid(_58929_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_58929_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58929_r.get()._field_Func.get()._field_Result));
			_1c5669917_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _58929_r.get()._field_Expr);
			_1c5669917_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _58929_r.get()._field_Expr);
			_1c5669917_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_58929_r.get()._field_Expr != nullptr)) {
		_1c562a675_setResult(_self_, _58929_r);
	};
	if (_58929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1c56e409b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_58929_r.get()._field_Func.get()._field_Result);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1c562ab70_var(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dda418db_Var> _62527_v) {
	if ((!(_62527_v.get()._field_Constant))) {
		_1c56d5950_var(_self_.get()._field_oc, _62527_v);
	};
}



inline void _1c562ade5_st(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Any _63226_st) {
	if ((_63226_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63226_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d4a23146:;
			{
				_1c562b3e0_scope(_self_, _63226_st.cast_ptr<_1dd9e7232_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d4a22ce4:;
			{
				_1c562ab70_var(_self_, _63226_st.cast_ptr<_1dda418db_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d4a23740:;
			{
				_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _63226_st.cast_ptr<_1dda8944a_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d4a237a6:;
			{
				_1c5627573_conditional(_self_, _63226_st.cast_ptr<_1dd9e7c8d_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d4a2381c:;
			{
				_1c56277e8_infIter(_self_, _63226_st.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d4a23883:;
			{
				_1c5627a6d_whileIter(_self_, _63226_st.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d4a238e9:;
			{
				_1c5627ce3_rangeIter(_self_, _63226_st.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1d4a23960:;
			{
				_1c5628068_cont(_self_, _63226_st.cast_ptr<_1dd9e92cd_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1d4a239c6:;
			{
				_1c56282dd_label(_self_, _63226_st.cast_ptr<_1dd9e9971_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d4a23a3c:;
			{
				_1c5628563_gotoSt(_self_, _63226_st.cast_ptr<_1dd9e9c5c_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1d4a23ab4:;
			{
				_1c56287d8_postfix(_self_, _63226_st.cast_ptr<_1dd9ea114_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d4a23b3b:;
			{
				_1c5628a5d_assign(_self_, _63226_st.cast_ptr<_1dd9ea587_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d4a23bb3:;
			{
				_1c5629553_multiAssign(_self_, _63226_st.cast_ptr<_1dd9ea93e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1d4a23c3a:;
			{
				_1c5629e05_matchSt(_self_, _63226_st.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1d4a23cb2:;
			{
				_1c562a17a_fallSt(_self_, _63226_st.cast_ptr<_1dd9ec07d_FallSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1d4a23d39:;
			{
				_1c562a400_breakSt(_self_, _63226_st.cast_ptr<_1dd9e9685_BreakSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d4a23db1:;
			{
				_1c562a8ea_retSt(_self_, _63226_st.cast_ptr<_1dd9ec402_RetSt>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d4a23e38:;
			{
				_1c56381cc_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63226_st.cast_ptr<_1ddb7a085_PushToSliceExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1d4a23eb0:;
			{
				_1c5639c4a_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63226_st.cast_ptr<_1ddb7a64b_MutSlicingExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1d4a24037:;
			{
				_1c5639ec0_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63226_st.cast_ptr<_1ddb7a9e2_StrInsertBeginExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_1d4a22ac4:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1d4a22a6e:;
	};
}



inline void _1c562b16a_scopeStmts(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e7232_Scope>& _68235_s) {
	{
		auto &expr = _68235_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1d4a2dcbc:;
		if (it != expr.end()) {
			jule::Any _68321_st = *it;
			{
				_1c56ac65d_indent(_self_.get()._field_oc);
				_1c562ade5_st(_self_, _68321_st);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1d4a2dcbc:;
			++it;
			goto _iter_begin_1d4a2dcbc;
		}
		_iter_end_1d4a2dcbc:;
	};
}



inline void _1c562b3e0_scope(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9e7232_Scope> _69129_s) {
	_1c56a8add_addIndent(_self_.get()._field_oc);
	if (_69129_s.get()._field_Deferred) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c562b16a_scopeStmts(_self_, _69129_s);
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_69129_s.get()._field_Deferred) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1c562b665_funcScope(jule::Ptr<_1c5626462_scopeCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _70733_f) {
	if ((_70733_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	if ((!(_1dd9c7a81_IsVoid(_70733_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1ddabed98_Tuple> _71421_tup = _1ddab9403_Tup(_70733_f.get()._field_Result.ptr());;
		if ((_71421_tup != nullptr)) {
			_1c56ac65d_indent(_self_.get()._field_oc);
			_1c56e395d_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_71421_tup);
			_1c5669917_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto &expr = _71421_tup.get()._field_Types;
				auto it = expr.begin();
				_iter_begin_1d4a36159:;
				if (it != expr.end()) {
					jule::I64 _71922_i = it - expr.begin();
					jule::Ptr<_1ddab53cc_TypeKind> _71929_t = *it;
					{
						if (_1c56e6389_shouldInitialized(_71929_t)) {
							_1c56ac65d_indent(_self_.get()._field_oc);
							_1c5669917_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_71922_i));
							_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1c563a9b5_initExpr(_self_.get()._field_oc.get()._field_ec, _71929_t);
							_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1d4a36159:;
					++it;
					_71922_i++;
					goto _iter_begin_1d4a36159;
				}
				_iter_end_1d4a36159:;
			};
		} else if ((_70733_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1c56ac65d_indent(_self_.get()._field_oc);
			_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _70733_f.get()._field_Result));
			_1c5669917_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1c56e6389_shouldInitialized(_70733_f.get()._field_Result)) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c563a9b5_initExpr(_self_.get()._field_oc.get()._field_ec, _70733_f.get()._field_Result);
			};
			_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1c562b16a_scopeStmts(_self_, _70733_f.get()._field_Scope);
	if ((_70733_f.get()._field_Decl.get()._field_Exceptional && _1dd9c7a81_IsVoid(_70733_f.get()._field_Decl.ptr()))) {
		_1c56ac65d_indent(_self_.get()._field_oc);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1c5626462_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c562e107_exprCoder> static__1c562e503_new(jule::Ptr<_1c56d2e7a_ObjectCoder>& _10424_oc) {
	return jule::new_ptr<_1c562e107_exprCoder>(_1c562e107_exprCoder{._field_oc=_10424_oc});;
}



inline void _1c562e778_string(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ad050_Const>& _11027_c) {
	jule::Str _11113_content = _1dd9b0085_ReadStr(_11027_c.ptr());;
	if ((_11113_content.len() == 0LL)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _1dd99d969_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())),10LL);;
	jule::Str _11813_lit = _1c563b6b9_cstrLit(_11613_bytes);;
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c5669917_write(_self_.get()._field_oc, _11813_lit);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1c5669917_write(_self_.get()._field_oc, _11713_len);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c562e9ed_boolean(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Bool _12727_b) {
	if (_12727_b) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1c562ebc9_nilLit(jule::Ptr<_1c562e107_exprCoder> _self_) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1c562eed7_ftoaSpecialCases(jule::Ptr<_1c562e107_exprCoder> _self_, jule::F64& _13937_x) {
	{
		
		if (_1dd962c4c_IsNaN(_13937_x)) {
			_case_begin_1d4a5927b:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1dd962eb1_IsInf(_13937_x,1LL)) {
			_case_begin_1d4a58aa5:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1dd962eb1_IsInf(_13937_x,-1LL)) {
			_case_begin_1d4a58b1b:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1d4a58a3e:;
			{
				return false;;
			}
		}
		_match_end_1d4a58973:;
	};
	return true;;
}



inline void _1c563025c_float32(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ad050_Const>& _15328_c) {
	jule::F64 _15413_x = _1dd9b0a36_AsF64(_15328_c.ptr());;
	if (_1c562eed7_ftoaSpecialCases(_self_, _15413_x)) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1d4a5bb0d:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1d4a5b844:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1d4a5b712:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c563b9c7_ftoa(_15413_x,32LL));
				_1c5669917_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1d4a5b6ac:;
	};
}



inline void _1c56304d2_float64(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ad050_Const>& _17228_c) {
	jule::F64 _17313_x = _1dd9b0a36_AsF64(_17228_c.ptr());;
	if (_1c562eed7_ftoaSpecialCases(_self_, _17313_x)) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1d4a5eabc:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1d4a602c6:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1d4a5e6c1:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c563b9c7_ftoa(_17313_x,64LL));
			}
		}
		_match_end_1d4a5e66b:;
	};
}



inline void _1c5630757_constant(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ad050_Const> _19032_c) {
	{
		
		if (_1dd9b242d_IsStr(_19032_c.ptr())) {
			_case_begin_1d4a6186b:;
			{
				_1c562e778_string(_self_, _19032_c);
			}
		}
		else if (_1dd9b21b9_IsBool(_19032_c.ptr())) {
			_case_begin_1d4a618d2:;
			{
				_1c562e9ed_boolean(_self_, _1dd9aed21_ReadBool(_19032_c.ptr()));
			}
		}
		else if (_1dd9b2692_IsF64(_19032_c.ptr())) {
			_case_begin_1d4a61948:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1d4a64220:;
						{
							_1c563025c_float32(_self_, _19032_c);
						}
					}
					else {
						_case_begin_1d4a63917:;
						{
							_1c56304d2_float64(_self_, _19032_c);
						}
					}
					_match_end_1d4a6384b:;
				};
			}
		}
		else if (_1dd9b1be1_IsI64(_19032_c.ptr())) {
			_case_begin_1d4a619ae:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c563bc6e_itoa(static_cast<jule::I64>(_1dd9ae848_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_1dd9b1e55_IsU64(_19032_c.ptr())) {
			_case_begin_1d4a6230b:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c563c016_utoa(static_cast<jule::U64>(_1dd9aeaac_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_1dd9b2906_IsNil(_19032_c.ptr())) {
			_case_begin_1d4a62372:;
			{
				_1c562ebc9_nilLit(_self_);
			}
		}
		else {
			_case_begin_1d4a61805:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1d4a61739:;
	};
}



inline void _1c5630b20_divByZeroBinary(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_222e62217_Token>& _21436_op, jule::Ptr<_1dd9b8d6e_OperandExprModel>& _21453_l, jule::Ptr<_1dd9b8d6e_OperandExprModel>& _21480_r) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21436_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1d4a67124:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1d4a6718a:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1d4a67058:;
	};
	if ((!(_220b7b906_Production))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c56d3574_locInfo(_self_.get()._field_oc, _21436_op);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c563a4ba_expr(_self_, _21453_l.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c563a4ba_expr(_self_, _21480_r.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5630d95_unsafeBinary(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9b9336_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_1c563cb60_isAny(_23636_m.get()._field_Left.get()._field_Kind)) {
			if (((!(_1ddab6312_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1c563cb60_isAny(_23636_m.get()._field_Right.get()._field_Kind))))) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1c566e015_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_1c5669917_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_24625_i));
				_1c5669917_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1c563a245_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c563a245_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563a245_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c5669917_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c563a245_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c563111a_binary(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9b9336_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1d4a73d23:;
			{
				if ((_1ddab8bb6_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1c5630b20_divByZeroBinary(_self_, _26730_m.get()._field_Op,_26730_m.get()._field_Left,_26730_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1d4a73c8a:;
	};
	_1c5630d95_unsafeBinary(_self_, _26730_m);
}



inline void _1c5631390_var(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dda418db_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_209085db0_Directive> _28117_d = _1c56e5c5c_findDirective(_27927_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1c5669917_write(_self_.get()._field_oc, _1c56d7d2b_concatAllParts(_28117_d.get()._field_Args));
			_1c5669917_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c5669917_write(_self_.get()._field_oc, static__1c564424e_var(_27927_m));
}



inline void _1c5631615_structureIns(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_2090d5c23_StructIns> _29036_m) {
	_1c5669917_write(_self_.get()._field_oc, _1c56dcda8_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1c563188a_unary(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9b96dd_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1d4a78ad6:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1c563a4ba_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1d4a78b5d:;
			{
				if ((_220b7b906_Production || (_1ddab79c8_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1d4a78a3c;
				};
				_1c563a4ba_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1c56d3574_locInfo(_self_.get()._field_oc, _29429_m.get()._field_Op);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1d4a78a3c:;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c5669917_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563a4ba_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1c5631b10_structureLit(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9b9e91_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1c5669917_write(_self_.get()._field_oc, static__1c5643c10_structureIns(_31836_m.get()._field_Strct));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _31836_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1d4a8110a:;
			if (it != expr.end()) {
				jule::I64 _33117_i = it - expr.begin();
				jule::Ptr<_2090d5a36_FieldIns> _33120_f = *it;
				{
					{
						auto &expr = _31836_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1d4a81d31:;
						if (it != expr.end()) {
							jule::Ptr<_1dd9b9ad9_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1c5669917_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1c5669917_write(_self_.get()._field_oc, static__1c5643ea7_field(_33229_arg.get()._field_Field.get()._field_Decl));
									_1c5669917_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1c563a4ba_expr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1d4a8110a;
								};
							}
							_iter_next_1d4a81d31:;
							++it;
							goto _iter_begin_1d4a81d31;
						}
						_iter_end_1d4a81d31:;
					};
				}
				_iter_next_1d4a8110a:;
				++it;
				_33117_i++;
				goto _iter_begin_1d4a8110a;
			}
			_iter_end_1d4a8110a:;
		};
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c5631d85_allocStructure(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ba29e_AllocStructLitExprModel> _34938_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c5669917_write(_self_.get()._field_oc, static__1c5643c10_structureIns(_34938_m.get()._field_Lit.get()._field_Strct));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1c5631b10_structureLit(_self_, _34938_m.get()._field_Lit);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c563210a_casting(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ba7ee_CastingExprModel> _35731_m) {
	{
		
		if (_1c563cb60_isAny(_35731_m.get()._field_Kind)) {
			_case_begin_1d4a8792a:;
			{
				if (_1ddab6312_IsNil(_35731_m.get()._field_ExprKind.ptr())) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1ddab8215_TypeEnum(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1c563a245_model(_self_, _35731_m.get()._field_Expr);
					return;;
				};
				jule::I64 _36817_i = _1c566e015_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_ExprKind);;
				_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _35731_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1d4a8b7b9:;
						{
							jule::Ptr<_1ddaba129_Prim> _37221_prim = _1ddab7764_Prim(_35731_m.get()._field_ExprKind.ptr());;
							if (((_37221_prim != nullptr) && _1dd9ac47d_IsInt(_37221_prim.get()._field_Kind))) {
								_1c5669917_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1c5669917_write(_self_.get()._field_oc, _1c56da0d6_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _37221_prim));
								_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1c563a245_model(_self_, _35731_m.get()._field_Expr);
								_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1d4a8c3ad;
							};
							goto _case_begin_1d4a8c413;
						}
					}
					else {
						_case_begin_1d4a8c413:;
						{
							_1c563a245_model(_self_, _35731_m.get()._field_Expr);
						}
					}
					_match_end_1d4a8c3ad:;
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_36817_i));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1ddab7c3c_Ptr(_35731_m.get()._field_ExprKind.ptr()) != nullptr) || (_1ddab7c3c_Ptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d4a87991:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1c563a4ba_expr(_self_, _35731_m.get()._field_Expr);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_1c563cb60_isAny(_35731_m.get()._field_ExprKind)) {
			_case_begin_1d4a87a07:;
			{
				_1c563a245_model(_self_, _35731_m.get()._field_Expr);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1ddab79c8_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1ddab79c8_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_220b7b906_Production))) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c56d3574_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(static_cast<jule::I64>(_1c566e015_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_Kind))));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1ddab8e2a_Trait(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d4a87a6d:;
			{
				_1c563a245_model(_self_, _35731_m.get()._field_Expr);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1ddab79c8_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1ddab79c8_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_220b7b906_Production))) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c56d3574_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(static_cast<jule::I64>(_1c5649c9e_findTypeOffset(_self_.get()._field_oc.ptr(), _1ddab8e2a_Trait(_35731_m.get()._field_ExprKind.ptr()),_35731_m.get()._field_Kind))));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1ddab8e2a_Trait(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d4a89a70:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1c563a4ba_expr(_self_, _35731_m.get()._field_Expr);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(static_cast<jule::I64>(_1c5649c9e_findTypeOffset(_self_.get()._field_oc.ptr(), _1ddab8e2a_Trait(_35731_m.get()._field_Kind.ptr()),_35731_m.get()._field_ExprKind))));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1d4a878b4:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _35731_m.get()._field_Kind));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1c563a4ba_expr(_self_, _35731_m.get()._field_Expr);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d4a877e8:;
	};
}



inline void _1c5632380_args(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Slice<jule::Any> _44828_args) {
	if ((_44828_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _44828_args;
		auto it = expr.begin();
		_iter_begin_1d4aa3a23:;
		if (it != expr.end()) {
			jule::I64 _45214_i = it - expr.begin();
			jule::Any _45221_a = *it;
			{
				_1c563a4ba_expr(_self_, _45221_a);
				if (((_44828_args.len() - _45214_i) > 1LL)) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1d4aa3a23:;
			++it;
			_45214_i++;
			goto _iter_begin_1d4aa3a23;
		}
		_iter_end_1d4aa3a23:;
	};
}



inline void _1c5632605_modelForCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Any _46036_expr) {
	{
		auto &_match_expr{ _46036_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d4aa588d:;
			{
				_1c563597c_funcIns(_self_, _46036_expr.cast_ptr<_1dd9ca2c0_FnIns>(&__jule_any_type8));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d4aa5915:;
			{
				jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _46621_ssie = _46036_expr.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72);;
				if ((_46621_ssie.get()._field_Method != nullptr)) {
					_1c563597c_funcIns(_self_, _46621_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1d4aa57e4:;
	};
	_1c563a245_model(_self_, _46036_expr);
}



inline void _1c563287a_pushCallInf(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel>& _47532_m) {
	if ((_220b7b906_Production || ((!(_47532_m.get()._field_Func.get()._field_Anon)) && (!(_1c563c687_isBuiltinCallHasDebuginf(_47532_m)))))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_47532_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _47532_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_1d4aa8b5a:;
				{
					if (_47532_m.get()._field_Expr.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1d4aa8d47;
				}
			}
			else {
				_case_begin_1d4aa8d47:;
				{
					_1c5669917_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1d4aa8c04:;
		};
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1c56d3574_locInfo(_self_.get()._field_oc, _47532_m.get()._field_Token);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_47532_m.get()._field_Args.len() != 0LL)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1c5632b88_isWrapped(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel>& _50034_m) {
	if ((((!(_1dd9cb656_IsBuiltin(_50034_m.get()._field_Func.ptr()))) && (_50034_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1dd9c640e_IsSelf(_50034_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _50034_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_1d4aac91c:;
				{
					jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _50425_ssie = _50034_m.get()._field_Expr.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72);;
					{
						
						if (_1dd9c6673_IsRef(_50034_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1ddab79c8_Sptr(_50425_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1d4aad214:;
							{
								goto _match_end_1d4aad7a8;
							}
						}
						else {
							_case_begin_1d4aad81e:;
							{
								if ((_1ddab8bb6_Struct(_50425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_50425_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1c5669917_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1c563a245_model(_self_, _50425_ssie.get()._field_Expr.get()._field_Model);
										_1c5669917_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1d4aad7a8:;
					};
				}
			}
			_match_end_1d4aac70d:;
		};
	};
	return false;;
}



inline void _1c5632e0d_pureFuncCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel>& _52437_m) {
	jule::Bool _52513_wrapped = _1c5632b88_isWrapped(_self_, _52437_m);;
	_1c5632605_modelForCall(_self_, _52437_m.get()._field_Expr);
	if ((!(_1dd9cb656_IsBuiltin(_52437_m.get()._field_Func.ptr())))) {
		if ((_52437_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_52437_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1c56e60e2_hasDirective(_52437_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _52437_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1d4ab436e:;
					if (it != expr.end()) {
						jule::I64 _53126_i = it - expr.begin();
						jule::Ptr<_1ddab3ba0_InsGeneric> _53133_g = *it;
						{
							_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _53133_g.get()._field_Kind));
							if (((_52437_m.get()._field_Func.get()._field_Generics.len() - _53126_i) > 1LL)) {
								_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1d4ab436e:;
						++it;
						_53126_i++;
						goto _iter_begin_1d4ab436e;
					}
					_iter_end_1d4ab436e:;
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1c563287a_pushCallInf(_self_, _52437_m);
	jule::Bool _54217_locinfo = false;;
	if ((((!(_1dd9cb656_IsBuiltin(_52437_m.get()._field_Func.ptr()))) && (_52437_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1dd9c640e_IsSelf(_52437_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _52437_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type72) {
				_case_begin_1d4ab7e99:;
				{
					jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _54625_ssie = _52437_m.get()._field_Expr.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72);;
					{
						
						if (_1dd9c6673_IsRef(_52437_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1d4ab9e24:;
							{
								_1c563a245_model(_self_, _54625_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1ddab79c8_Sptr(_54625_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1d4aba82b:;
							{
								_1c563a245_model(_self_, _54625_ssie.get()._field_Expr.get()._field_Model);
								_1c5669917_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_220b7b906_Production))) {
									_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1c56d3574_locInfo(_self_.get()._field_oc, _52437_m.get()._field_Token);
									_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1d4ab8e34:;
							{
								if ((_1ddab8bb6_Struct(_54625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1c5669917_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_52513_wrapped) {
									_1c5669917_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1c563a245_model(_self_, _54625_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1d4ab8dbd:;
					};
					if ((_52437_m.get()._field_Args.len() > 0LL)) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1d4ab8010:;
				{
					_1c563a245_model(_self_, _52437_m.get()._field_Expr.cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71).get()._field_Expr);
					if ((!(_220b7b906_Production))) {
						_54217_locinfo=true;
					};
					if ((_52437_m.get()._field_Args.len() > 0LL)) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1d4ab7c8a:;
		};
	};
	_1c5632380_args(_self_, _52437_m.get()._field_Args);
	if (_54217_locinfo) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1c56d3574_locInfo(_self_.get()._field_oc, _52437_m.get()._field_Token);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_52513_wrapped) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1c5633183_coFuncCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel>& _59635_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	jule::Str _59917_head = jule::Str("std::thread([", 13);;
	if ((_59635_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_59917_head+=jule::Str("_self_", 6);
		if ((_59635_m.get()._field_Args.len() > 0LL)) {
			_59917_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _59635_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1d4ac5704:;
		if (it != expr.end()) {
			jule::I64 _60613_i = it - expr.begin();
			jule::Any _60616_arg = *it;
			{
				if ((_60613_i > 0LL)) {
					_59917_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _60616_arg };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1d4ac7618:;
						{
							jule::Ptr<_1dda418db_Var> _61225_v = _60616_arg.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
							_59917_head+=static__1c564424e_var(_61225_v);
							goto _iter_next_1d4ac5704;
						}
					}
					_match_end_1d4ac6dba:;
				};
				jule::Str _61617_name = (jule::Str("_co_arg_", 8) + _1dd99dc11_Itoa(_60613_i));;
				_59917_head+=_61617_name;
				_1c56ac65d_indent(_self_.get()._field_oc);
				_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _59635_m.get()._field_Func.get()._field_Params[_60613_i].get()._field_Kind));
				_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_59635_m.get()._field_Func.get()._field_Params[_60613_i].get()._field_Decl.get()._field_Reference) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1c5669917_write(_self_.get()._field_oc, _61617_name);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1c563a4ba_expr(_self_, _60616_arg);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _62817_argS = jule::Any(_61617_name, &__jule_any_type6);;
				_59635_m.get()._field_Args[_60613_i]=(*(((jule::Any*)((&(_62817_argS))))));
			}
			_iter_next_1d4ac5704:;
			++it;
			_60613_i++;
			goto _iter_begin_1d4ac5704;
		}
		_iter_end_1d4ac5704:;
	};
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, _59917_head);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5632e0d_pureFuncCall(_self_, _59635_m);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1c56334a2_writeUseExpr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _64637_f, jule::Ptr<_1dda8944a_Data> _64652_d) {
	if ((_1ddab9403_Tup(_64652_d.get()._field_Kind.ptr()) == nullptr)) {
		_1c563a4ba_expr(_self_, _64652_d.get()._field_Model);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1dd9bee96_TupleExprModel> _65217_tup = _64652_d.get()._field_Model.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89);;
	_1c56e395d_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_1ddab9403_Tup(_64637_f.get()._field_Result.ptr()));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto &expr = _65217_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1d4ad39dc:;
		if (it != expr.end()) {
			jule::I64 _65513_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _65516_data = *it;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_65513_i));
				_1c5669917_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1c563a4ba_expr(_self_.get()._field_oc.get()._field_ec, _65516_data.get()._field_Model);
				if (((_65217_tup.get()._field_Datas.len() - _65513_i) > 1LL)) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1d4ad39dc:;
			++it;
			_65513_i++;
			goto _iter_begin_1d4ad39dc;
		}
		_iter_end_1d4ad39dc:;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1c5633727_funcCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb1a1_FnCallExprModel> _66732_m) {
	if (_66732_m.get()._field_IsCo) {
		_1c5633183_coFuncCall(_self_, _66732_m);
		return;;
	};
	if (((_1dd9cb656_IsBuiltin(_66732_m.get()._field_Func.ptr()) || (!(_66732_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_66732_m.get()._field_Except != nullptr) && (_66732_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1c5632e0d_pureFuncCall(_self_, _66732_m);
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1c5632e0d_pureFuncCall(_self_, _66732_m);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	if ((_66732_m.get()._field_Except != nullptr)) {
		if (((_66732_m.get()._field_Func.get()._field_Result == nullptr) || (!(_66732_m.get()._field_Assigned)))) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1c562b3e0_scope(_self_.get()._field_oc.get()._field_sc, _66732_m.get()._field_Except);
			_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _69321_forwarded = _1c563c3bd_isForwarded(_66732_m.get()._field_Except);;
			_1c5669917_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_69321_forwarded) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _69825_stmt = _66732_m.get()._field_Except.get()._field_Stmts[(_66732_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _69825_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1d4addcb1:;
					{
						_66732_m.get()._field_Except.get()._field_Stmts=_66732_m.get()._field_Except.get()._field_Stmts.slice(0LL,(_66732_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1c5669917_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1c56a8add_addIndent(_self_.get()._field_oc);
						_1c562b16a_scopeStmts(_self_.get()._field_oc.get()._field_sc, _66732_m.get()._field_Except);
						_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1c56ac65d_indent(_self_.get()._field_oc);
						_1c56334a2_writeUseExpr(_self_, _66732_m.get()._field_Func,_69825_stmt.cast_ptr<_1dda8944a_Data>(&__jule_any_type24));
						_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1c56a910a_doneIndent(_self_.get()._field_oc);
						_1c56ac65d_indent(_self_.get()._field_oc);
						_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1d4ade685:;
					{
						_1c562b3e0_scope(_self_.get()._field_oc.get()._field_sc, _66732_m.get()._field_Except);
					}
				}
				_match_end_1d4ade630:;
			};
			if (_69321_forwarded) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1c563a9b5_initExpr(_self_, _66732_m.get()._field_Func.get()._field_Result);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1c5669917_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1c56a910a_doneIndent(_self_.get()._field_oc);
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1c56d3574_locInfo(_self_.get()._field_oc, _66732_m.get()._field_Token);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1dd9c7a81_IsVoid(_66732_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1c56ac65d_indent(_self_.get()._field_oc);
			_1c5669917_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1c56a910a_doneIndent(_self_.get()._field_oc);
	};
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c563399c_slice(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb558_SliceExprModel> _73829_m) {
	if ((_73829_m.get()._field_Elems.len() == 0LL)) {
		_1c5669917_write(_self_.get()._field_oc, _1c56dba55_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _73829_m.get()._field_ElemKind));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, _1c56dba55_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _73829_m.get()._field_ElemKind));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1c5632380_args(_self_, _73829_m.get()._field_Elems);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c5633c22_indexing(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bb9cb_IndexingExprModel> _75032_m) {
	_1c563a245_model(_self_, _75032_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_220b7b906_Production || (_1ddab7c3c_Ptr(_75032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1ddab918e_Map(_75032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1c563c8b8_isExprComesFromBind(_75032_m.get()._field_Expr)) {
			_case_begin_1d4aeb4d8:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c563a4ba_expr(_self_, _75032_m.get()._field_Index.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d4aebc8b:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1c56d3574_locInfo(_self_.get()._field_oc, _75032_m.get()._field_Token);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1c563a4ba_expr(_self_, _75032_m.get()._field_Index.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d4aebc25:;
	};
}



inline void _1c5633e97_unsafeIndexing(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1ddb79bbc_UnsafeIndexingExprModel> _77038_m) {
	_1c563a245_model(_self_, _77038_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_220b7b906_Production || (_1ddab7c3c_Ptr(_77038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1ddab918e_Map(_77038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d4b00c6d:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1c563a4ba_expr(_self_, _77038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1d4b015ba:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1c563a4ba_expr(_self_, _77038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1d4b01554:;
	};
}



inline void _1c563421c_anonFunc(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bbd83_AnonFnExprModel> _78732_m) {
	_1c5669917_write(_self_.get()._field_oc, _1c56de52a_func(_self_.get()._field_oc.get()._field_tc.ptr(), _78732_m.get()._field_Func));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1c56d56db_paramsIns(_self_.get()._field_oc, _78732_m.get()._field_Func.get()._field_Params);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1c56dde0e_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_oc.get()._field_Obj,_78732_m.get()._field_Func);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1c562b665_funcScope(_self_.get()._field_oc.get()._field_sc, _78732_m.get()._field_Func);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5634492_mapExpr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bc6ad_MapExprModel> _79831_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _79831_m.get()._field_KeyKind));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _79831_m.get()._field_ValKind));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_79831_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _79831_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1d4b0aa03:;
			if (it != expr.end()) {
				jule::I64 _80518_i = it - expr.begin();
				jule::Ptr<_1dd9bc23a_KeyValPairExprModel> _80525_pair = *it;
				{
					_1c5669917_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1c563a4ba_expr(_self_, _80525_pair.get()._field_Key);
					_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1c563a4ba_expr(_self_, _80525_pair.get()._field_Val);
					_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_79831_m.get()._field_Entries.len() - _80518_i) > 1LL)) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1d4b0aa03:;
				++it;
				_80518_i++;
				goto _iter_begin_1d4b0aa03;
			}
			_iter_end_1d4b0aa03:;
		};
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1c5634717_slicing(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bcbec_SlicingExprModel> _81931_m) {
	_1c563a245_model(_self_, _81931_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_220b7b906_Production))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c56d3574_locInfo(_self_.get()._field_oc, _81931_m.get()._field_Token);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c563a4ba_expr(_self_, _81931_m.get()._field_Left);
	if ((_81931_m.get()._field_Right != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c563a4ba_expr(_self_, _81931_m.get()._field_Right);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c563498c_traitSub(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> _83532_m) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5643429_traitDecl(_83532_m.get()._field_Trt));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1c563a245_model(_self_, _83532_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1c5669917_write(_self_.get()._field_oc, static__1c5642dda_func(_83532_m.get()._field_Method));
}



inline void _1c5634c12_structureSub(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _84436_m) {
	_1c563a245_model(_self_, _84436_m.get()._field_Expr.get()._field_Model);
	if ((_84436_m.get()._field_Field != nullptr)) {
		if ((_1ddab7c3c_Ptr(_84436_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1ddab79c8_Sptr(_84436_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_220b7b906_Production))) {
				_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1c56d3574_locInfo(_self_.get()._field_oc, _84436_m.get()._field_Token);
				_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1c5669917_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1c5669917_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1c5669917_write(_self_.get()._field_oc, static__1c5643ea7_field(_84436_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1c5634e87_commonIdent(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9be638_CommonIdentExprModel> _86431_m) {
	_1c5669917_write(_self_.get()._field_oc, _86431_m.get()._field_Ident);
}



inline void _1c563520c_commonSub(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9beb99_CommonSubIdentExprModel> _86833_m) {
	_1c563a245_model(_self_, _86833_m.get()._field_Expr);
	{
		
		if ((_1ddab7c3c_Ptr(_86833_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d4b19e41:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1ddab79c8_Sptr(_86833_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d4b1a66c:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_220b7b906_Production))) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1c56d3574_locInfo(_self_.get()._field_oc, _86833_m.get()._field_Token);
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1c5669917_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1d4b1a606:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1d4b1a590:;
	};
	_1c5669917_write(_self_.get()._field_oc, _86833_m.get()._field_Ident);
}



inline void _1c5635482_array(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9be34c_ArrayExprModel> _88729_m) {
	_1c5669917_write(_self_.get()._field_oc, _1c56dd1b6_array(_self_.get()._field_oc.get()._field_tc.ptr(), _88729_m.get()._field_Kind));
	if ((_88729_m.get()._field_Elems.len() == 0LL)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_88729_m.get()._field_Elems.len() == 2LL) && (_88729_m.get()._field_Elems[1LL] == nullptr))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c563a4ba_expr(_self_, _88729_m.get()._field_Elems[0LL]);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1c5632380_args(_self_, _88729_m.get()._field_Elems);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1c5635707_funcInsCommon(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _91037_m) {
	_1c5669917_write(_self_.get()._field_oc, _1c56de52a_func(_self_.get()._field_oc.get()._field_tc.ptr(), _91037_m));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563597c_funcIns(_self_, _91037_m);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c563597c_funcIns(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _91731_m) {
	if (((_91731_m.get()._field_Decl != nullptr) && _91731_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_209085db0_Directive> _91917_d = _1c56e5c5c_findDirective(_91731_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_91917_d != nullptr)) {
			_1c5669917_write(_self_.get()._field_oc, _1c56d7d2b_concatAllParts(_91917_d.get()._field_Args));
			_1c5669917_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1c5669917_write(_self_.get()._field_oc, static__1c5643182_funcIns(_91731_m));
}



inline void _1c5635c02_tuple(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bee96_TupleExprModel> _92829_m) {
	{
		auto &expr = _92829_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1d4b27e2c:;
		if (it != expr.end()) {
			jule::I64 _92914_i = it - expr.begin();
			jule::Ptr<_1dda8944a_Data> _92921_d = *it;
			{
				_1c563a4ba_expr(_self_, _92921_d.get()._field_Model);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_92829_m.get()._field_Datas.len() - _92914_i) > 1LL)) {
					_1c5669917_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1c56ac65d_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1d4b27e2c:;
			++it;
			_92914_i++;
			goto _iter_begin_1d4b27e2c;
		}
		_iter_end_1d4b27e2c:;
	};
}



inline void _1c5635e77_newCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c0e64_BuiltinNewCallExprModel> _93931_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _93931_m.get()._field_Kind));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_93931_m.get()._field_Init != nullptr)) {
		_1c563a4ba_expr(_self_, _93931_m.get()._field_Init);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c56361ec_outCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c0370_BuiltinOutCallExprModel> _94931_m) {
	if ((_94931_m.get()._field_Debug && _220b7b906_Production)) {
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1c563a4ba_expr(_self_, _94931_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5636472_outlnCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c075a_BuiltinOutlnCallExprModel> _95833_m) {
	if ((_95833_m.get()._field_Debug && _220b7b906_Production)) {
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c563a4ba_expr(_self_, _95833_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c56366e7_panicCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c134e_BuiltinPanicCallExprModel> _96733_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1c563a4ba_expr(_self_, _96733_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1c56d3574_locInfo(_self_.get()._field_oc, _96733_m.get()._field_Token);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c563696c_assertCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel> _97534_m) {
	if (_220b7b906_Production) {
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1c563a4ba_expr(_self_, _97534_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1c5669917_write(_self_.get()._field_oc, _1c563b6b9_cstrLit(static_cast<jule::Slice<jule::U8>>(_97534_m.get()._field_Log)));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1c56d3574_locInfo(_self_.get()._field_oc, _97534_m.get()._field_Token);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1c5636be2_errorCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c36d6_BuiltinErrorCallExprModel> _98833_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1dd9c7a81_IsVoid(_98833_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _98833_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type9) {
				_case_begin_1d4b3ae95:;
				{
					jule::Ptr<_1dda418db_Var> _99321_v = _98833_m.get()._field_Err.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
					if ((_99321_v.get()._field_Ident == jule::Str("error", 5))) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1d4b3ae40:;
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1c56e409b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_98833_m.get()._field_Func.get()._field_Result);
		{
			auto &_match_expr{ _98833_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type9) {
				_case_begin_1d4b3de21:;
				{
					jule::Ptr<_1dda418db_Var> _100521_v = _98833_m.get()._field_Err.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
					if ((_100521_v.get()._field_Ident == jule::Str("error", 5))) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1d4b3dcbc:;
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1c563a4ba_expr(_self_, _98833_m.get()._field_Err.get()._field_Model);
	jule::I64 _101413_i = _1c566e015_pushAnyType(_self_.get()._field_oc, _98833_m.get()._field_Err.get()._field_Kind);;
	_1c5669917_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_101413_i));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1c5636e67_copyCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c32eb_BuiltinCopyCallExprModel> _102032_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1c563a245_model(_self_, _102032_m.get()._field_Dest.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ddab7764_Prim(_102032_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1c563a245_model(_self_, _102032_m.get()._field_Src.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1ddab7764_Prim(_102032_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c56371dc_lenCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c24b5_BuiltinLenCallExprModel> _103631_m) {
	_1c563a245_model(_self_, _103631_m.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1c5637462_capCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c27d4_BuiltinCapCallExprModel> _104131_m) {
	_1c563a245_model(_self_, _104131_m.get()._field_Expr.get()._field_Model);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1c56376d7_deleteCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel> _104634_m) {
	_1c563a245_model(_self_, _104634_m.get()._field_Dest.get()._field_Model);
	if ((_104634_m.get()._field_Key != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1c563a245_model(_self_, _104634_m.get()._field_Key.get()._field_Model);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1c563795c_makeCallSlice(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>& _105738_m) {
	jule::Ptr<_1ddabe31a_Slc> _105817_slice = _1ddab86dd_Slc(_105738_m.get()._field_Kind.ptr());;
	_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _105738_m.get()._field_Kind));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1c563a4ba_expr(_self_, _105738_m.get()._field_Len);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_105738_m.get()._field_Cap != nullptr)) {
		_1c563a4ba_expr(_self_, _105738_m.get()._field_Cap);
	} else {
		_1c563a4ba_expr(_self_, _105738_m.get()._field_Len);
	};
	if (_1c56e6389_shouldInitialized(_105817_slice.get()._field_Elem)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1c563a9b5_initExpr(_self_, _105817_slice.get()._field_Elem);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5637bd2_makeCallStr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel>& _107536_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1c563a4ba_expr(_self_, _107536_m.get()._field_Len);
	if ((_107536_m.get()._field_Cap != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1c563a4ba_expr(_self_, _107536_m.get()._field_Cap);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5637e57_makeCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel> _108632_m) {
	if ((_1ddab86dd_Slc(_108632_m.get()._field_Kind.ptr()) != nullptr)) {
		_1c563795c_makeCallSlice(_self_, _108632_m);
		return;;
	};
	_1c5637bd2_makeCallStr(_self_, _108632_m);
}



inline void _1c56381cc_pushToSlice(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1ddb7a085_PushToSliceExprModel> _109435_m) {
	jule::I64 _109513_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1c563a245_model(_self_, _109435_m.get()._field_Dest);
	jule::Str _109713_dest = _self_.get()._field_oc.get()._field_Obj.slice(_109513_n);;
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1c5669917_write(_self_.get()._field_oc, _109713_dest);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(static_cast<jule::I64>(_109435_m.get()._field_Elems.get()._field_Elems.len())));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _109435_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1d4b564bb:;
		if (it != expr.end()) {
			jule::Any _110421_e = *it;
			{
				_1c5669917_write(_self_.get()._field_oc, _109713_dest);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1c563a245_model(_self_, _110421_e);
				_1c5669917_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1d4b564bb:;
			++it;
			goto _iter_begin_1d4b564bb;
		}
		_iter_end_1d4b564bb:;
	};
}



inline void _1c5638452_appendCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c2196_BuiltinAppendCallExprModel> _111334_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1c563a245_model(_self_, _111334_m.get()._field_Dest);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1c563a245_model(_self_, _111334_m.get()._field_Elements);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c56386c7_cloneCall(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c0a79_BuiltinCloneCallExprModel> _112133_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1c563a245_model(_self_, _112133_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c563894c_sizeof(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c39d3_SizeofExprModel> _112730_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1c563a245_model(_self_, _112730_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5638bc2_alignof(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c3cbe_AlignofExprModel> _113331_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1c563a245_model(_self_, _113331_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1c5638ed0_runeLit(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c40aa_RuneExprModel> _113927_m) {
	if ((_113927_m.get()._field_Code <= 127LL)) {
		jule::Str _114121_b = _1c563b103_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_113927_m.get()._field_Code)));;
		if ((_114121_b == jule::Str("'", 1))) {
			_114121_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _114121_b) + jule::Str("'", 1));;
	};
	return _1c563bc6e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_113927_m.get()._field_Code)));;
}



inline void _1c5639255_structureStatic(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9bde84_StructStaticIdentExprModel> _115039_m) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5643182_funcIns(_115039_m.get()._field_Method));
}



inline void _1c56394ca_integratedToStr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c43b8_IntegratedToStrExprModel> _115439_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1c563a245_model(_self_, _115439_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1c5639750_backendEmit(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c4781_BackendEmitExprModel> _116035_m) {
	if ((_116035_m.get()._field_Exprs.len() == 0LL)) {
		_1c5669917_write(_self_.get()._field_oc, _116035_m.get()._field_Code);
		return;;
	};
	jule::I64 _116513_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _116617_args = jule::Slice<jule::Any>::alloc(_116035_m.get()._field_Exprs.len(), _116035_m.get()._field_Exprs.len());;
	{
		auto &expr = _116035_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1d4b6231d:;
		if (it != expr.end()) {
			jule::I64 _116714_i = it - expr.begin();
			jule::Any _116721_expr = *it;
			{
				_1c563a4ba_expr(_self_, _116721_expr);
				_116617_args[_116714_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_116513_n), &__jule_any_type6);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_116513_n);
			}
			_iter_next_1d4b6231d:;
			++it;
			_116714_i++;
			goto _iter_begin_1d4b6231d;
		}
		_iter_end_1d4b6231d:;
	};
	_1c5669917_write(_self_.get()._field_oc, _1ddb71345_Format(_116035_m.get()._field_Code,_116617_args));
}



inline void _1c56399c5_free(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dd9c4a6c_FreeExprModel> _117528_m) {
	_1c563a4ba_expr(_self_, _117528_m.get()._field_Expr);
	if (_220b7b263_RC) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1c5639c4a_mutSlicing(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1ddb7a64b_MutSlicingExprModel> _118434_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563a245_model(_self_, _118434_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_220b7b906_Production))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1c56d3574_locInfo(_self_.get()._field_oc, _118434_m.get()._field_Token);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1c563a4ba_expr(_self_, _118434_m.get()._field_Left);
	if ((_118434_m.get()._field_Right != nullptr)) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1c563a4ba_expr(_self_, _118434_m.get()._field_Right);
	};
	_1c5669917_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1c5639ec0_strInsertBegin(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1ddb7a9e2_StrInsertBeginExprModel> _120138_m) {
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1c563a245_model(_self_, _120138_m.get()._field_Dest);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1c563a245_model(_self_, _120138_m.get()._field_Expr);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1c563a245_model(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Any _120929_m) {
	{
		auto &_match_expr{ _120929_m };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1d4b6cd0c:;
			{
				_1c5669917_write(_self_.get()._field_oc, _120929_m.cast<jule::Str>(&__jule_any_type6));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1d4b6d0d7:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _120929_m.cast_ptr<_1ddab53cc_TypeKind>(&__jule_any_type91)));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d4b6d14d:;
			{
				_1c5630757_constant(_self_, _120929_m.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d4b6d1b4:;
			{
				_1c5631390_var(_self_, _120929_m.cast_ptr<_1dda418db_Var>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1d4b6d22a:;
			{
				_1c5631615_structureIns(_self_, _120929_m.cast_ptr<_2090d5c23_StructIns>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d4b6dc53:;
			{
				_1c5635707_funcInsCommon(_self_, _120929_m.cast_ptr<_1dd9ca2c0_FnIns>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1d4b6dcb9:;
			{
				_1c5630d95_unsafeBinary(_self_, _120929_m.cast_ptr<_1ddb7989d_UnsafeBinopExprModel>(&__jule_any_type130).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d4b6dd30:;
			{
				_1c563111a_binary(_self_, _120929_m.cast_ptr<_1dd9b9336_BinopExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1d4b6dd96:;
			{
				_1c563188a_unary(_self_, _120929_m.cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d4b6de0c:;
			{
				_1c5631b10_structureLit(_self_, _120929_m.cast_ptr<_1dd9b9e91_StructLitExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d4b6de73:;
			{
				_1c5631d85_allocStructure(_self_, _120929_m.cast_ptr<_1dd9ba29e_AllocStructLitExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d4b6ded9:;
			{
				_1c563210a_casting(_self_, _120929_m.cast_ptr<_1dd9ba7ee_CastingExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d4b6e050:;
			{
				_1c5633727_funcCall(_self_, _120929_m.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d4b6e0b6:;
			{
				_1c563399c_slice(_self_, _120929_m.cast_ptr<_1dd9bb558_SliceExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d4b6e12c:;
			{
				_1c5635482_array(_self_, _120929_m.cast_ptr<_1dd9be34c_ArrayExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d4b6e193:;
			{
				_1c5633e97_unsafeIndexing(_self_, _120929_m.cast_ptr<_1ddb79bbc_UnsafeIndexingExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d4b6e209:;
			{
				_1c5633c22_indexing(_self_, _120929_m.cast_ptr<_1dd9bb9cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1d4b6e281:;
			{
				_1c563421c_anonFunc(_self_, _120929_m.cast_ptr<_1dd9bbd83_AnonFnExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1d4b6e308:;
			{
				_1c5634492_mapExpr(_self_, _120929_m.cast_ptr<_1dd9bc6ad_MapExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d4b6e380:;
			{
				_1c5634717_slicing(_self_, _120929_m.cast_ptr<_1dd9bcbec_SlicingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d4b6e407:;
			{
				_1c563498c_traitSub(_self_, _120929_m.cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d4b6e47e:;
			{
				_1c5634c12_structureSub(_self_, _120929_m.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1d4b6e506:;
			{
				_1c5634e87_commonIdent(_self_, _120929_m.cast_ptr<_1dd9be638_CommonIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d4b6e57d:;
			{
				_1c563520c_commonSub(_self_, _120929_m.cast_ptr<_1dd9beb99_CommonSubIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d4b6e605:;
			{
				_1c5635c02_tuple(_self_, _120929_m.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d4b6e67c:;
			{
				_1c56361ec_outCall(_self_, _120929_m.cast_ptr<_1dd9c0370_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d4b6e704:;
			{
				_1c5636472_outlnCall(_self_, _120929_m.cast_ptr<_1dd9c075a_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d4b6e77b:;
			{
				_1c5635e77_newCall(_self_, _120929_m.cast_ptr<_1dd9c0e64_BuiltinNewCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d4b6e803:;
			{
				_1c56366e7_panicCall(_self_, _120929_m.cast_ptr<_1dd9c134e_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d4b6e87a:;
			{
				_1c563696c_assertCall(_self_, _120929_m.cast_ptr<_1dd9c1805_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d4b6e902:;
			{
				_1c5636be2_errorCall(_self_, _120929_m.cast_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d4b6e979:;
			{
				_1c5637e57_makeCall(_self_, _120929_m.cast_ptr<_1dd9c1cab_BuiltinMakeCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d4b6ea01:;
			{
				_1c5638452_appendCall(_self_, _120929_m.cast_ptr<_1dd9c2196_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d4b6ea78:;
			{
				_1c56386c7_cloneCall(_self_, _120929_m.cast_ptr<_1dd9c0a79_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1d4b6eb00:;
			{
				_1c5636e67_copyCall(_self_, _120929_m.cast_ptr<_1dd9c32eb_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d4b6eb77:;
			{
				_1c56371dc_lenCall(_self_, _120929_m.cast_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d4b6ebee:;
			{
				_1c5637462_capCall(_self_, _120929_m.cast_ptr<_1dd9c27d4_BuiltinCapCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d4b6ec76:;
			{
				_1c56376d7_deleteCall(_self_, _120929_m.cast_ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d4b6eced:;
			{
				_1c563894c_sizeof(_self_, _120929_m.cast_ptr<_1dd9c39d3_SizeofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1d4b6ed75:;
			{
				_1c5638bc2_alignof(_self_, _120929_m.cast_ptr<_1dd9c3cbe_AlignofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1d4b6edec:;
			{
				_1c5669917_write(_self_.get()._field_oc, _1c5638ed0_runeLit(_self_, _120929_m.cast_ptr<_1dd9c40aa_RuneExprModel>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1d4b6ee74:;
			{
				_1c5639255_structureStatic(_self_, _120929_m.cast_ptr<_1dd9bde84_StructStaticIdentExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1d4b6eeeb:;
			{
				_1c56394ca_integratedToStr(_self_, _120929_m.cast_ptr<_1dd9c43b8_IntegratedToStrExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d4b70073:;
			{
				_1c5639750_backendEmit(_self_, _120929_m.cast_ptr<_1dd9c4781_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d4b700ea:;
			{
				_1c56399c5_free(_self_, _120929_m.cast_ptr<_1dd9c4a6c_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1d4b70172:;
			{
				_1c5639c4a_mutSlicing(_self_, _120929_m.cast_ptr<_1ddb7a64b_MutSlicingExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1d4b701e9:;
			{
				_1c5639ec0_strInsertBegin(_self_, _120929_m.cast_ptr<_1ddb7a9e2_StrInsertBeginExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_1d4b6ce83:;
			{
				_1c5669917_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1d4b6cda6:;
	};
}



inline void _1c563a4ba_expr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Any _131028_e) {
	_1c563a245_model(_self_, _131028_e);
}



inline void _1c563a740_val(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1dda8a4c3_Value> _131427_v) {
	if (_1dda89d0d_IsConst(_131427_v.get()._field_Data.ptr())) {
		_1c5630757_constant(_self_, _131427_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_1c563a4ba_expr(_self_, _131427_v.get()._field_Data.get()._field_Model);
}



inline void _1c563a9b5_initExpr(jule::Ptr<_1c562e107_exprCoder> _self_, jule::Ptr<_1ddab53cc_TypeKind> _132232_t) {
	if (_1ddab6cb3_NilCompatible(_132232_t.ptr())) {
		if ((_1ddab7c3c_Ptr(_132232_t.ptr()) != nullptr)) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132232_t));
			_1c5669917_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ddabed98_Tuple> _133217_tup = _1ddab9403_Tup(_132232_t.ptr());;
	if ((_133217_tup != nullptr)) {
		_1c56e395d_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), _self_.get()._field_oc.get()._field_Obj,_133217_tup);
		_1c5669917_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto &expr = _133217_tup.get()._field_Types;
			auto it = expr.begin();
			_iter_begin_1d4b8c3ae:;
			if (it != expr.end()) {
				jule::I64 _133618_i = it - expr.begin();
				jule::Ptr<_1ddab53cc_TypeKind> _133625_tt = *it;
				{
					if ((!(_1c56e6389_shouldInitialized(_133625_tt)))) {
						goto _iter_next_1d4b8c3ae;
					};
					_1c5669917_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1c5669917_write(_self_.get()._field_oc, _1dd99dc11_Itoa(_133618_i));
					_1c5669917_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1c563a9b5_initExpr(_self_, _133625_tt);
					if (((_133217_tup.get()._field_Types.len() - _133618_i) > 1LL)) {
						_1c5669917_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1d4b8c3ae:;
				++it;
				_133618_i++;
				goto _iter_begin_1d4b8c3ae;
			}
			_iter_end_1d4b8c3ae:;
		};
		_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1dd9db666_Enum> _135117_enm = _1ddab7ea1_Enum(_132232_t.ptr());;
	if ((_135117_enm != nullptr)) {
		_1c563a740_val(_self_, _135117_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _135613_prim = _1ddab7764_Prim(_132232_t.ptr());;
	if ((_135613_prim != nullptr)) {
		if (_1dd9aca44_IsNum(_135613_prim.get()._field_Kind)) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1ddabd0e9_IsBool(_135613_prim.ptr())) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1ddabd35d_IsStr(_135613_prim.ptr())) {
			_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ddab8479_Arr(_132232_t.ptr()) != nullptr)) {
		jule::Ptr<_1ddac14b5_Arr> _136821_arr = _1ddab8479_Arr(_132232_t.ptr());;
		_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132232_t));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c563a9b5_initExpr(_self_, _136821_arr.get()._field_Elem);
		_1c5669917_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_2090d5c23_StructIns> _137517_s = _1ddab8bb6_Struct(_132232_t.ptr());;
	if ((((_137517_s != nullptr) && _137517_s.get()._field_Decl.get()._field_CppLinked) && (_1c56e5c5c_findDirective(_137517_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132232_t));
		_1c5669917_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, _1c56de838_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132232_t));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c562e107_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c563d26a_deriveCoder> static__1c563d644_new(jule::Ptr<_1c56d2e7a_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1c563d26a_deriveCoder>(_1c563d26a_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1c563d952_cloneFuncDecl(_1c563d26a_deriveCoder* _self_, jule::Ptr<_2090d5849_Struct>& _1633_s) {
	jule::Str _1717_obj = _1c56dca9a_structure((*_self_)._field_oc.get()._field_tc.ptr(), _1633_s);;
	_1717_obj+=jule::Str(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1c563dc60_cloneFuncDef(_1c563d26a_deriveCoder* _self_, jule::Ptr<_2090d5849_Struct>& _2232_s) {
	jule::Str _2317_obj = _1c56dca9a_structure((*_self_)._field_oc.get()._field_tc.ptr(), _2232_s);;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	_2317_obj+=jule::Str("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c563d26a_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c563eb40_TestCoder> static__1c56400b3_New(jule::Ptr<_1c56d2e7a_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1c563eb40_TestCoder>(_1c563eb40_TestCoder{._field_oc=_2824_oc});;
}



inline jule::Ptr<_1dda15937_ImportInfo> _1c5640327_findTestingPackage(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d4b9b4ab:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1d4b9b4ab:;
			++it;
			goto _iter_begin_1d4b9b4ab;
		}
		_iter_end_1d4b9b4ab:;
	};
	return nullptr;;
}



inline void _1c564059c_appendTest(jule::Ptr<_1c563eb40_TestCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _4334_f) {
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5640c62_callTmReset(_self_);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1c5669917_write(_self_.get()._field_oc, _1c563b6b9_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, static__1c5643182_funcIns(_4334_f));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1c5640822_appendPackageTests(jule::Ptr<_1c563eb40_TestCoder> _self_, jule::Ptr<_1dda18891_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d4ba1cca:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1d4ba2627:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _6225_f = *it;
						{
							if (_1c56e60e2_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1c564059c_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1d4ba2627:;
						++it;
						goto _iter_begin_1d4ba2627;
					}
					_iter_end_1d4ba2627:;
				};
			}
			_iter_next_1d4ba1cca:;
			++it;
			goto _iter_begin_1d4ba1cca;
		}
		_iter_end_1d4ba1cca:;
	};
}



inline jule::Bool _1c5640a86_readyTestingPackage(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	jule::Ptr<_1dda15937_ImportInfo> _7117_p = _1c5640327_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1dda16d78_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_2090b0d52_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_2090b0d52_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_2090b0d52_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;;
}



inline void _1c5640c62_callTmReset(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5642dda_func(_self_.get()._field_tmReset));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c5640e3d_callTmFailed(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5642dda_func(_self_.get()._field_tmFailed));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c5641119_callTmSkipped(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	_1c5669917_write(_self_.get()._field_oc, static__1c5642dda_func(_self_.get()._field_tmSkipped));
	_1c5669917_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1c56412e5_Serialize(jule::Ptr<_1c563eb40_TestCoder> _self_) {
	_1c56d7501_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1c56d7325_end(_self_.get()._field_oc);
	});;
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	if ((!(_1c5640a86_readyTestingPackage(_self_)))) {
		_1c5669917_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1c56a910a_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1c5669917_write(_self_.get()._field_oc, _1c56da702_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1c56dcda8_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1c5669917_write(_self_.get()._field_oc, _1c56dcda8_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1c5669917_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1c56a8add_addIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1c5640e3d_callTmFailed(_self_);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1c5641119_callTmSkipped(_self_);
	_1c5669917_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1c5640822_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1c56a910a_doneIndent(_self_.get()._field_oc);
	_1c56ac65d_indent(_self_.get()._field_oc);
	_1c5669917_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1c563eb40_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1c5642758_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;;
}



inline jule::Str static__1c5642b43_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1dd99dc11_Itoa(_5423_row);
	_5517_obj+=_1dd99dc11_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;;
}



inline jule::Str static__1c5642dda_func(jule::Ptr<_1dd9c761e_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1d4bba640:;
			{
				return _6521_f.get()._field_Ident;;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1d4bba6a6:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1dd9c7ce5_IsMethod(_6521_f.ptr())) {
			_case_begin_1d4bb9a3a:;
			{
				jule::Str _7221_obj = static__1c5642758_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1d4bb99c4:;
			{
				return static__1c5642758_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
			}
		}
		_match_end_1d4bb992a:;
	};
}



inline jule::Str static__1c5643182_funcIns(jule::Ptr<_1dd9ca2c0_FnIns>& _8424_f) {
	if (_1dd9cb656_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);;
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1c5642dda_func(_8424_f.get()._field_Decl);;
	};
	return static__1c5642758_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));;
}



inline jule::Str static__1c5643429_traitDecl(jule::Ptr<_1dd9d9521_Trait> _9525_t) {
	if (_1dd9da08d_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1c5642758_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1c56436c1_param(jule::Ptr<_1dd9c5cd2_Param>& _10322_p) {
	if ((_222e64c53_IsAnonIdent(_10322_p.get()._field_Ident) || _222e649ab_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1dd9c640e_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);;
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1c5642b43_toLocal(0LL,0LL,_10322_p.get()._field_Ident);;
	};
	return static__1c5642b43_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);;
}



inline jule::Str static__1c5643968_structure(jule::Ptr<_2090d5849_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1c56e60e2_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);;
	};
	return static__1c5642758_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));;
}



inline jule::Str static__1c5643c10_structureIns(jule::Ptr<_2090d5c23_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1c5643968_structure(_12829_s.get()._field_Decl);;
	};
	return static__1c5642758_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));;
}



inline jule::Str static__1c5643ea7_field(jule::Ptr<_2090a98a6_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);;
}



inline jule::Str static__1c564424e_var(jule::Ptr<_1dda418db_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1d4bc555c:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1d4bc48d0:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1d4bc4946:;
			{
				if ((_1ddab79c8_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);;
				};
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1d4bc49ac:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1d4bc4a23:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1dd99dc11_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1d4bc4ca9:;
			{
				return static__1c5642b43_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1d4bc4869:;
			{
				return static__1c5642758_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1d4bc40c7:;
	};
}



inline jule::Str static__1c56444e6_iterBegin(jule::Uintptr _16725_it) {
	jule::Str _16817_obj = jule::Str::alloc(0LL, 30LL);;
	_16817_obj+=jule::Str("_iter_begin_", 12);
	_16817_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16725_it)),15LL);
	return _16817_obj;;
}



inline jule::Str static__1c564478d_iterEnd(jule::Uintptr _17523_it) {
	jule::Str _17617_obj = jule::Str::alloc(0LL, 30LL);;
	_17617_obj+=jule::Str("_iter_end_", 10);
	_17617_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17523_it)),15LL);
	return _17617_obj;;
}



inline jule::Str static__1c5644a35_iterNext(jule::Uintptr _18324_it) {
	jule::Str _18417_obj = jule::Str::alloc(0LL, 30LL);;
	_18417_obj+=jule::Str("_iter_next_", 11);
	_18417_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18324_it)),15LL);
	return _18417_obj;;
}



inline jule::Str static__1c5644ccc_label(jule::Str& _19122_ident) {
	jule::Str _19217_obj = jule::Str::alloc(0LL, 30LL);;
	_19217_obj+=jule::Str("_julec_label_", 13);
	_19217_obj+=_19122_ident;
	return _19217_obj;;
}



inline jule::Str static__1c5645074_matchEnd(jule::Uintptr _19924_m) {
	jule::Str _20017_obj = jule::Str::alloc(0LL, 30LL);;
	_20017_obj+=jule::Str("_match_end_", 11);
	_20017_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19924_m)),15LL);
	return _20017_obj;;
}



inline jule::Str static__1c564531b_caseBegin(jule::Uintptr _20725_c) {
	jule::Str _20817_obj = jule::Str::alloc(0LL, 30LL);;
	_20817_obj+=jule::Str("_case_begin_", 12);
	_20817_obj+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20725_c)),15LL);
	return _20817_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c5642291_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c5674a32_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c564a046_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c56d8cb6_Str(_1c56d89ca_customType* _self_) {
	return (*_self_)._field_kind;;
}



inline jule::Bool _1c56d90c4_Equal(jule::Ptr<_1c56d89ca_customType> _self_, jule::Ptr<_1ddab53cc_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c56d89ca_customType _Src) {
	_Stream << _1c56d8cb6_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c56d947b_typeCoder> static__1c56d99ba_new(jule::Ptr<_1c56d2e7a_ObjectCoder>& _6224_oc) {
	jule::Ptr<_1c56d947b_typeCoder> _6317_tc = jule::new_ptr<_1c56d947b_typeCoder>(_1c56d947b_typeCoder{._field_oc=_6224_oc, });;
	_6317_tc.get()._field_rc=static__1c56e2275_new(_6317_tc);
	return _6317_tc;;
}



inline jule::Str _1c56d9cc8_toType(_1c56d947b_typeCoder* _self_, jule::Str _6929_id) {
	if ((_6929_id != jule::Str("uintptr", 7))) {
		_6929_id=_1dd9a0c13_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1c56da0d6_prim(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddaba129_Prim> _8023_p) {
	return _1c56d9cc8_toType(&(*_self_), _1ddaba48c_Str(_8023_p.ptr()));;
}



inline jule::Str _1c56da3e4_tuple(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddabed98_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _8528_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1d4ccaa19:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab53cc_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1c56de838_kind(&(*_self_), _8721_tk);
				_8617_obj+=jule::Str(",", 1);
			}
			_iter_next_1d4ccaa19:;
			++it;
			goto _iter_begin_1d4ccaa19;
		}
		_iter_end_1d4ccaa19:;
	};
	(_8617_obj).mut_slice(0LL,(_8617_obj.len() - 1LL));;
	_8617_obj+=jule::Str(">", 1);
	return _8617_obj;;
}



inline jule::Str _1c56da702_asSptr(_1c56d947b_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	_9817_obj+=jule::Str(">", 1);
	return _9817_obj;;
}



inline jule::Str _1c56daa10_asPtr(_1c56d947b_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1c56dad1d_sptr(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddabd8ad_Sptr> _11027_sptr) {
	return _1c56da702_asSptr(&(*_self_), _1c56de838_kind(&(*_self_), _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1c56db12b_ptr(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddac1e22_Ptr> _11526_p) {
	;
	if (_1ddac28e5_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1c56de838_kind(&(*_self_), _11526_p.get()._field_Elem);;
	_12017_elem+=jule::Str("*", 1);
	return _12017_elem;;
}



inline jule::Str _1c56db439_enumDecl(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9db666_Enum> _12631_e) {
	return _1c56de838_kind(&(*_self_), _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1c56db747_typeEnumDecl(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9dcc61_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1c56dba55_asSlice(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddab53cc_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1c56de838_kind(&(*_self_), _13530_elem);
	_13617_obj+=jule::Str(">", 1);
	return _13617_obj;;
}



inline jule::Str _1c56dbd63_slice(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddabe31a_Slc> _14328_s) {
	return _1c56dba55_asSlice(&(*_self_), _14328_s.get()._field_Elem);;
}



inline jule::Str _1c56dc171_mapType(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddac08c1_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1c56de838_kind(&(*_self_), _14830_m.get()._field_Key);
	_14917_obj+=jule::Str(",", 1);
	_14917_obj+=_1c56de838_kind(&(*_self_), _14830_m.get()._field_Val);
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str _1c56dc47e_traitIdent(_1c56d947b_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	_15817_obj+=jule::Str(">", 1);
	return _15817_obj;;
}



inline jule::Str _1c56dc78c_traitDecl(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9d9521_Trait> _16528_t) {
	return _1c56dc47e_traitIdent(&(*_self_), static__1c5643429_traitDecl(_16528_t));;
}



inline jule::Str _1c56dca9a_structure(_1c56d947b_typeCoder* _self_, jule::Ptr<_2090d5849_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1c56e60e2_hasDirective(_17028_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_17117_rep+=jule::Str("struct ", 7);
	};
	_17117_rep+=static__1c5643968_structure(_17028_s);
	return _17117_rep;;
}



inline jule::Str _1c56dcda8_structureIns(_1c56d947b_typeCoder* _self_, jule::Ptr<_2090d5c23_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1c5643c10_structureIns(_18035_s);;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			_18221_ident+=jule::Str("<", 1);
			{
				auto &expr = _18035_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1d4cd711e:;
				if (it != expr.end()) {
					jule::Ptr<_1ddab3ba0_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1c56de838_kind(&(*_self_), _18529_g.get()._field_Kind);
						_18221_ident+=jule::Str(",", 1);
					}
					_iter_next_1d4cd711e:;
					++it;
					goto _iter_begin_1d4cd711e;
				}
				_iter_end_1d4cd711e:;
			};
			(_18221_ident).mut_slice(0LL,(_18221_ident.len() - 1LL));;
			_18221_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_209085db0_Directive> _19217_d = _1c56e5c5c_findDirective(_18035_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1c56d7d2b_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1c5643c10_structureIns(_18035_s);;
}



inline jule::Str _1c56dd1b6_array(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddac14b5_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1c56de838_kind(&(*_self_), _20228_a.get()._field_Elem);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_1dd99dc11_Itoa(_20228_a.get()._field_N);
	_20317_obj+=jule::Str(">", 1);
	return _20317_obj;;
}



inline jule::Str _1c56dd7d2_paramIns(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9c9401_ParamIns>& _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if (_22832_p.get()._field_Decl.get()._field_Variadic) {
		_22917_obj+=jule::Str("jule::Slice<", 12);
		_22917_obj+=_1c56de838_kind(&(*_self_), _22832_p.get()._field_Kind);
		_22917_obj+=jule::Str(">", 1);
	} else {
		_22917_obj+=_1c56de838_kind(&(*_self_), _22832_p.get()._field_Kind);
	};
	if (_22832_p.get()._field_Decl.get()._field_Reference) {
		_22917_obj+=jule::Str("&", 1);
	};
	return _22917_obj;;
}



inline void _1c56dde0e_funcInsResult(_1c56d947b_typeCoder* _self_, jule::Str& _25837_s, jule::Ptr<_1dd9ca2c0_FnIns>& _25850_f) {
	if (_1dd9c7a81_IsVoid(_25850_f.get()._field_Decl.ptr())) {
		if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
			_25837_s+=jule::Str("jule::VoidExceptional", 21);
		} else {
			_25837_s+=jule::Str("void", 4);
		};
		return;;
	};
	if (_25850_f.get()._field_Decl.get()._field_Exceptional) {
		_25837_s+=jule::Str("jule::Exceptional<", 18);
		_1c56e409b_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
		_25837_s+=jule::Str(">", 1);
		return;;
	};
	_1c56e409b_codeMut1((*_self_)._field_rc.ptr(), _25837_s,_25850_f.get()._field_Result);
}



inline jule::Str _1c56de21c_anonFunc(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9ca2c0_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_1ddab9403_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1c566d245_pushResultIns((*_self_)._field_oc, _27631_f);
	};
	jule::Str _28017_decl = jule::Str();;
	_1c56dde0e_funcInsResult(&(*_self_), _28017_decl,_27631_f);
	_28017_decl+=jule::Str("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _27631_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1d4ce6639:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c9401_ParamIns> _28425_param = *it;
				{
					if (_1dd9c640e_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_1d4ce6639;
					};
					_28017_decl+=_1c56dd7d2_paramIns(&(*_self_), _28425_param);
					_28017_decl+=jule::Str(",", 1);
				}
				_iter_next_1d4ce6639:;
				++it;
				goto _iter_begin_1d4ce6639;
			}
			_iter_end_1d4ce6639:;
		};
		(_28017_decl).mut_slice(0LL,(_28017_decl.len() - 1LL));;
	} else {
		_28017_decl+=jule::Str("void", 4);
	};
	_28017_decl+=jule::Str(")", 1);
	return _28017_decl;;
}



inline jule::Str _1c56de52a_func(_1c56d947b_typeCoder* _self_, jule::Ptr<_1dd9ca2c0_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1c56de21c_anonFunc(&(*_self_), _30027_f);
	_30117_obj+=jule::Str(">", 1);
	return _30117_obj;;
}



inline jule::Str _1c56de838_kind(_1c56d947b_typeCoder* _self_, jule::Ptr<_1ddab53cc_TypeKind> _30827_k) {
	{
		
		if ((_1ddab8bb6_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce984b:;
			{
				return _1c56dcda8_structureIns(&(*_self_), _1ddab8bb6_Struct(_30827_k.ptr()));;
			}
		}
		else if (_1ddab609d_CppLinked(_30827_k.ptr())) {
			_case_begin_1d4ce98c3:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_1ddab7764_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce994a:;
			{
				return _1c56da0d6_prim(&(*_self_), _1ddab7764_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab9403_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce99c2:;
			{
				return _1c56da3e4_tuple(&(*_self_), _1ddab9403_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab79c8_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9a49:;
			{
				return _1c56dad1d_sptr(&(*_self_), _1ddab79c8_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab7c3c_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9ac1:;
			{
				return _1c56db12b_ptr(&(*_self_), _1ddab7c3c_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab7ea1_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9b48:;
			{
				return _1c56db439_enumDecl(&(*_self_), _1ddab7ea1_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab8215_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9bc0:;
			{
				return _1c56db747_typeEnumDecl(&(*_self_), _1ddab8215_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab86dd_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9c47:;
			{
				return _1c56dbd63_slice(&(*_self_), _1ddab86dd_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab918e_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9cbe:;
			{
				return _1c56dc171_mapType(&(*_self_), _1ddab918e_Map(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab8e2a_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9d46:;
			{
				return _1c56dc78c_traitDecl(&(*_self_), _1ddab8e2a_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab8479_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9dbd:;
			{
				return _1c56dd1b6_array(&(*_self_), _1ddab8479_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_1ddab8952_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_1d4ce9e45:;
			{
				return _1c56de52a_func(&(*_self_), _1ddab8952_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_1d4ce9670:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1d4d02656:;
			{
				return _30827_k.get()._field_Kind.cast_ptr<_1c56d89ca_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_1d4ced223:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1d4d028cb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c56d947b_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c56e1c69_resultCoder> static__1c56e2275_new(jule::Ptr<_1c56d947b_typeCoder>& _36224_tc) {
	return jule::new_ptr<_1c56e1c69_resultCoder>(_1c56e1c69_resultCoder{._field_tc=_36224_tc});;
}



inline void _1c56e2594_ptr(_1c56e1c69_resultCoder* _self_, jule::Str& _36627_s, jule::Ptr<_1ddac1e22_Ptr> _36639_p) {
	_36627_s+=jule::Str("p", 1);
	_1c56e3c7c_codeMut(&(*_self_), _36627_s,_36639_p.get()._field_Elem);
}



inline void _1c56e28b3_sptr(_1c56e1c69_resultCoder* _self_, jule::Str& _37128_s, jule::Ptr<_1ddabd8ad_Sptr> _37140_p) {
	_37128_s+=jule::Str("x", 1);
	_1c56e3c7c_codeMut(&(*_self_), _37128_s,_37140_p.get()._field_Elem);
}



inline void _1c56e2bd2_mapType(_1c56e1c69_resultCoder* _self_, jule::Str& _37631_s, jule::Ptr<_1ddac08c1_Map> _37643_p) {
	_37631_s+=jule::Str("m", 1);
	_1c56e3c7c_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Key);
	_1c56e3c7c_codeMut(&(*_self_), _37631_s,_37643_p.get()._field_Val);
}



inline void _1c56e3001_slice(_1c56e1c69_resultCoder* _self_, jule::Str& _38229_s, jule::Ptr<_1ddabe31a_Slc> _38241_slc) {
	_38229_s+=jule::Str("s", 1);
	_1c56e3c7c_codeMut(&(*_self_), _38229_s,_38241_slc.get()._field_Elem);
}



inline void _1c56e3320_arr(_1c56e1c69_resultCoder* _self_, jule::Str& _38727_s, jule::Ptr<_1ddac14b5_Arr> _38739_arr) {
	_38727_s+=jule::Str("a", 1);
	_38727_s+=_1dd99d969_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)),16LL);
	_1c56e3c7c_codeMut(&(*_self_), _38727_s,_38739_arr.get()._field_Elem);
}



inline void _1c56e363e_func(_1c56e1c69_resultCoder* _self_, jule::Str& _39328_s, jule::Ptr<_1dd9ca2c0_FnIns> _39340_f) {
	_39328_s+=jule::Str("f", 1);
	{
		auto &expr = _39340_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1d4d08629:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					_39328_s+=jule::Str("r", 1);
				};
				_1c56e3c7c_codeMut(&(*_self_), _39328_s,_39521_p.get()._field_Kind);
			}
			_iter_next_1d4d08629:;
			++it;
			goto _iter_begin_1d4d08629;
		}
		_iter_end_1d4d08629:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1c56e3c7c_codeMut(&(*_self_), _39328_s,_39340_f.get()._field_Result);
	};
}



inline void _1c56e395d_tup(_1c56e1c69_resultCoder* _self_, jule::Str& _40627_s, jule::Ptr<_1ddabed98_Tuple> _40639_tup) {
	{
		auto &expr = _40639_tup.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1d4d0a30c:;
		if (it != expr.end()) {
			jule::Ptr<_1ddab53cc_TypeKind> _40721_t = *it;
			{
				_40627_s+=jule::Str("__jule_tuple_", 13);
				_1c56e3c7c_codeMut(&(*_self_), _40627_s,_40721_t);
			}
			_iter_next_1d4d0a30c:;
			++it;
			goto _iter_begin_1d4d0a30c;
		}
		_iter_end_1d4d0a30c:;
	};
}



inline void _1c56e3c7c_codeMut(_1c56e1c69_resultCoder* _self_, jule::Str& _41331_s, jule::Ptr<_1ddab53cc_TypeKind>& _41344_t) {
	{
		auto &_match_expr{ _41344_t.get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1d4d0b451:;
			{
				_1c56e2594_ptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddac1e22_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_1d4d0b72b:;
			{
				_1c56e28b3_sptr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddabd8ad_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1d4d0b792:;
			{
				_1c56e2bd2_mapType(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddac08c1_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_1d4d0b808:;
			{
				_1c56e3001_slice(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddabe31a_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1d4d0b86e:;
			{
				_1c56e3320_arr(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddac14b5_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1d4d0be02:;
			{
				_1c56e363e_func(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1dd9ca2c0_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1d4d0be68:;
			{
				jule::Ptr<_1dd9db666_Enum> _42817_te = _41344_t.get()._field_Kind.cast_ptr<_1dd9db666_Enum>(3);;
				_41331_s+=static__1c5642758_toOut(_42817_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1d4d0bece:;
			{
				jule::Ptr<_1dd9dcc61_TypeEnum> _43117_te = _41344_t.get()._field_Kind.cast_ptr<_1dd9dcc61_TypeEnum>(4);;
				_41331_s+=static__1c5642758_toOut(_43117_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1d4d0c045:;
			{
				jule::Ptr<_2090d5c23_StructIns> _43421_si = _41344_t.get()._field_Kind.cast_ptr<_2090d5c23_StructIns>(0);;
				_41331_s+=static__1c5643c10_structureIns(_43421_si);
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1d4d0c0ab:;
			{
				jule::Ptr<_1dd9d9521_Trait> _43721_trt = _41344_t.get()._field_Kind.cast_ptr<_1dd9d9521_Trait>(2);;
				_41331_s+=static__1c5643429_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_1d4d0c122:;
			{
				_41331_s+=_41344_t.get()._field_Kind.cast_ptr<_1ddaba129_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_1d4d0c188:;
			{
				_1c56e395d_tup(&(*_self_), _41331_s,_41344_t.get()._field_Kind.cast_ptr<_1ddabed98_Tuple>(9));
			}
		}
		else {
			_case_begin_1d4d0b693:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_1d4d0b4d9:;
	};
}



inline void _1c56e409b_codeMut1(_1c56e1c69_resultCoder* _self_, jule::Str& _44832_s, jule::Ptr<_1ddab53cc_TypeKind>& _44845_t) {
	jule::Ptr<_1ddabed98_Tuple> _44917_tup = _1ddab9403_Tup(_44845_t.ptr());;
	if ((_44917_tup != nullptr)) {
		_1c56e395d_tup(&(*_self_), _44832_s,_44917_tup);
	} else {
		_44832_s+=_1c56de838_kind((*_self_)._field_tc.ptr(), _44845_t);
	};
}



inline jule::Str _1c56e4376_code(_1c56e1c69_resultCoder* _self_, jule::Ptr<_1ddab53cc_TypeKind>& _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1c56e3c7c_codeMut(&(*_self_), _45817_s,_45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c56e1c69_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d4d16ea6_Name(_1d4d16b43_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1d4d170d8_What(_1d4d16b43_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1d4d1722b_Reset(_1d4d16b43_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1d4d1736e_Short(_1d4d16b43_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4d16b43_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4d1a40a_Name(_1d4d1a87d_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1d4d1ab69_What(_1d4d1a87d_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1d4d1ac9b_Reset(_1d4d1a87d_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1d4d1adcd_Short(_1d4d1a87d_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4d1a87d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4d1dc27_Name(_1d4d1e19a_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1d4d1e486_What(_1d4d1e19a_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1d4d1e5b8_Reset(_1d4d1e19a_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1d4d1e6ea_Short(_1d4d1e19a_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4d1e19a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4d22588_Name(_1d4d22a0b_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1d4d22ce7_What(_1d4d22a0b_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1d4d22e29_Reset(_1d4d22a0b_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1d4d2305b_Short(_1d4d22a0b_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4d22a0b_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1d4d25da5_Name(_1d4d26328_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1d4d26614_What(_1d4d26328_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1d4d26746_Reset(_1d4d26328_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1d4d26878_Short(_1d4d26328_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d4d26328_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c5730dc9_FlagSet> static__1c57311b5_New(void) {
	return jule::new_ptr<_1c5730dc9_FlagSet>(_1c5730dc9_FlagSet{._field_flags=jule::Slice<jule::Trait<_1c572e45a_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1c572e45a_CommonFlag> _1c5731649_FindFlag(_1c5730dc9_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1d4d31685:;
		if (it != expr.end()) {
			jule::Trait<_1c572e45a_CommonFlag> _7221_flag = *it;
			{
				if ((_1c572e45a_CommonFlag_mptr_data[(_7221_flag).type_offset]._1c56e9920_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1d4d31685:;
			++it;
			goto _iter_begin_1d4d31685;
		}
		_iter_end_1d4d31685:;
	};
	return nullptr;;
}



inline jule::Trait<_1c572e45a_CommonFlag> _1c5731957_FindFlagShort(_1c5730dc9_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1d4d31cb2:;
		if (it != expr.end()) {
			jule::Trait<_1c572e45a_CommonFlag> _8221_flag = *it;
			{
				if ((_1c572e45a_CommonFlag_mptr_data[(_8221_flag).type_offset]._1c56e9a52_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1d4d31cb2:;
			++it;
			goto _iter_begin_1d4d31cb2;
		}
		_iter_end_1d4d31cb2:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1c572e45a_CommonFlag>> _1c5731bbb_Flags(_1c5730dc9_FlagSet* _self_) {
	return (*_self_)._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c5731ec9_Parse(_1c5730dc9_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1c57335a2_argParser _11617_ap = _1c57335a2_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1c573498d_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1c57321a5_Reset(_1c5730dc9_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1d4d33be8:;
		if (it != expr.end()) {
			jule::Trait<_1c572e45a_CommonFlag> _12616_f = *it;
			{
				_1c572e45a_CommonFlag_mptr_data[(_12616_f).type_offset]._1c56e9d0a_Reset(_12616_f);
			}
			_iter_next_1d4d33be8:;
			++it;
			goto _iter_begin_1d4d33be8;
		}
		_iter_end_1d4d33be8:;
	};
}



inline jule::Ptr<_1d4d26328_Flag> _1d4d9829b_addFlagCommon(_1c5730dc9_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1d4d998eb:;
			{
				goto _match_end_1d4d99896;
			}
		}
		_match_end_1d4d99896:;
	};
	if ((_1c5731649_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c5731957_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d4d26328_Flag> _14817_flag = jule::new_ptr<_1d4d26328_Flag>(_1d4d26328_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1c572e45a_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1d4d22a0b_Flag> _1d4da1b9a_addFlagCommon(_1c5730dc9_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1d4da3295:;
			{
				goto _match_end_1d4da31eb;
			}
		}
		_match_end_1d4da31eb:;
	};
	if ((_1c5731649_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1c5731957_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1d4d22a0b_Flag> _14817_flag = jule::new_ptr<_1d4d22a0b_Flag>(_1d4d22a0b_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1c572e45a_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1d4d96222_AddVar(_1c5730dc9_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1d4d26328_Flag> _17617_flag = _1d4d9829b_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1d4d9eb54_AddVar(_1c5730dc9_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1d4d22a0b_Flag> _17617_flag = _1d4da1b9a_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1c5730dc9_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2090ab578_Str(_2090d5c23_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c6a87b25:;
			if (it != expr.end()) {
				jule::Ptr<_1ddab3ba0_InsGeneric> &_25420_g = *it;
				{
					_25017_kind+=_1ddab57c8_Str(_25420_g.get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1c6a87b25:;
				++it;
				goto _iter_begin_1c6a87b25;
			}
			_iter_end_1c6a87b25:;
		};
		(_25017_kind).mut_slice(0LL,(_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _2090ac6cd_Equal(jule::Ptr<_2090d5c23_StructIns> _self_, jule::Ptr<_1ddab53cc_TypeKind> _26521_other) {
	jule::Ptr<_2090d5c23_StructIns> _26613_s = _1ddab8bb6_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1ddab5ad6_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c6a8b277:;
	}
	_iter_end_1c6a8b277:;;
	return true;;
}



inline jule::Bool _2090aea32_Same(_2090d5c23_StructIns* _self_, jule::Ptr<_2090d5c23_StructIns> _29319_s) {
	if ((((*_self_)._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c6a8d6b9:;
		if (it != expr.end()) {
			jule::I64 _29713_i = it - expr.begin();
			jule::Ptr<_1ddab3ba0_InsGeneric> &_29716_g = *it;
			{
				if ((!(_1ddab5ad6_Equal(_29716_g.get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1c6a8d6b9:;
			++it;
			_29713_i++;
			goto _iter_begin_1c6a8d6b9;
		}
		_iter_end_1c6a8d6b9:;
	};
	return true;;
}



inline jule::Ptr<_1dd9c761e_Fn> _2090b0d52_FindMethod(_2090d5c23_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c6a900e4:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1c6a900e4:;
			++it;
			goto _iter_begin_1c6a900e4;
		}
		_iter_end_1c6a900e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_2090d5a36_FieldIns> _209092cbd_FindField(_2090d5c23_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1c6a91326:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5a36_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1c6a91326:;
			++it;
			goto _iter_begin_1c6a91326;
		}
		_iter_end_1c6a91326:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dda418db_Var> _20909dcda_FindStatic(_2090d5c23_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1c6a919db:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1c6a919db:;
			++it;
			goto _iter_begin_1c6a919db;
		}
		_iter_end_1c6a919db:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _2090d5c23_StructIns _Src) {
	_Stream << _2090ab578_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2173a20be_ObjectDeadCode> static__1de4eed9e_new(jule::Ptr<_1dded98cd_IR>& _3424_ir) {
	return jule::new_ptr<_2173a20be_ObjectDeadCode>(_2173a20be_ObjectDeadCode{._field_ir=_3424_ir});;
}



inline jule::Bool _1d47464da_isLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dd9d9521_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1dd9d9521_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d4748278:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1d4747e8c:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d4748960:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1d4748960:;
			++it;
			_5213_i++;
			goto _iter_begin_1d4748960;
		}
		_iter_end_1d4748960:;
	};
	return false;;
}

inline jule::Bool _1d474b523_isLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1dd9ca2c0_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d474d58b:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1d474d4d1:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d474dc2e:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1d474dc2e:;
			++it;
			_5213_i++;
			goto _iter_begin_1d474dc2e;
		}
		_iter_end_1d474dc2e:;
	};
	return false;;
}

inline jule::Bool _1d4753e65_isLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_2090d5c23_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_2090d5c23_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d47570ab:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1d4756d36:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d4757e25:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1d4757e25:;
			++it;
			_5213_i++;
			goto _iter_begin_1d4757e25;
		}
		_iter_end_1d4757e25:;
	};
	return false;;
}

inline jule::Bool _1d4759a92_isLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda418db_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1dda418db_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1d475b621:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1d475b500:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1d475b555:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1d475b555:;
			++it;
			_5213_i++;
			goto _iter_begin_1d475b555;
		}
		_iter_end_1d475b555:;
	};
	return false;;
}



inline void _1d474684d_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dd9d9521_Trait> _6035_t) {
	{
		
{
			_case_begin_1d474a38a:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1d474a038:;
	};
}

inline void _1d474bdd6_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dd9ca2c0_FnIns> _6035_t) {
	{
		
{
			_case_begin_1d4750e1d:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1d4750b98:;
	};
}

inline void _1d475323e_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_2090d5c23_StructIns> _6035_t) {
	{
		
{
			_case_begin_1d4754949:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1d475465d:;
	};
}

inline void _1d4759e05_pushLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda418db_Var> _6035_t) {
	{
		
{
			_case_begin_1d475da74:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1d475d997:;
	};
}



inline void _1de5006a7_setReferencesAsLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dd9cd23a_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1dd9cd856_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1dd9cdb64_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1d4745286:;
					{
						jule::Ptr<_1dd9d9521_Trait> _8225_t = _7921_ref.cast_ptr<_1dd9d9521_Trait>(&__jule_any_type11);;
						if (_1d47464da_isLive(_self_, _8225_t)) {
							goto _iter_next_1d4744609;
						};
						_1d474684d_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1d47462ed:;
							if (it != expr.end()) {
								jule::Ptr<_1dd9c761e_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1d474b886:;
										if (it != expr.end()) {
											jule::Ptr<_1dd9ca2c0_FnIns> _8833_mins = *it;
											{
												if (_1d474b523_isLive(_self_, _8833_mins)) {
													goto _iter_next_1d474b886;
												};
												_1d474bdd6_pushLive(_self_, _8833_mins);
												_1de5006a7_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1d474b886:;
											++it;
											goto _iter_begin_1d474b886;
										}
										_iter_end_1d474b886:;
									};
								}
								_iter_next_1d47462ed:;
								++it;
								goto _iter_begin_1d47462ed;
							}
							_iter_end_1d47462ed:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1d47452ec:;
					{
						jule::Ptr<_1dd9ca2c0_FnIns> _9725_f = _7921_ref.cast_ptr<_1dd9ca2c0_FnIns>(&__jule_any_type8);;
						if (_1d474b523_isLive(_self_, _9725_f)) {
							goto _match_end_1d4745121;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1d4753e65_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1d475323e_pushLive(_self_, _9725_f.get()._field_Owner);
								_1de5006a7_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1d474bdd6_pushLive(_self_, _9725_f);
						_1de5006a7_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1d47453c9:;
					{
						jule::Ptr<_1dda418db_Var> _11025_v = _7921_ref.cast_ptr<_1dda418db_Var>(&__jule_any_type9);;
						if (_1d4759a92_isLive(_self_, _11025_v)) {
							goto _match_end_1d4745121;
						};
						_1d4759e05_pushLive(_self_, _11025_v);
						_1de5006a7_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1d4745440:;
					{
						jule::Ptr<_2090d5c23_StructIns> _11725_s = _7921_ref.cast_ptr<_2090d5c23_StructIns>(&__jule_any_type10);;
						if (_1d4753e65_isLive(_self_, _11725_s)) {
							goto _match_end_1d4745121;
						};
						_1d475323e_pushLive(_self_, _11725_s);
						_1de5006a7_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1d4761c64:;
							if (it != expr.end()) {
								jule::Ptr<_1dd9c761e_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1d4762490:;
										if (it != expr.end()) {
											jule::Ptr<_1dd9ca2c0_FnIns> _12433_mins = *it;
											{
												if (_1d474b523_isLive(_self_, _12433_mins)) {
													goto _iter_next_1d4762490;
												};
												_1d474bdd6_pushLive(_self_, _12433_mins);
												_1de5006a7_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1d4762490:;
											++it;
											goto _iter_begin_1d4762490;
										}
										_iter_end_1d4762490:;
									};
								}
								_iter_next_1d4761c64:;
								++it;
								goto _iter_begin_1d4761c64;
							}
							_iter_end_1d4761c64:;
						};
					}
				}
				_match_end_1d4745121:;
			};
		}
	_iter_next_1d4744609:;
	}
	_iter_end_1d4744609:;;
}



inline void _1de50092c_inits(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda18891_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d474a313:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1d4762b66:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1dd9ca2c0_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1de5006a7_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1d4762b66:;
						++it;
						goto _iter_begin_1d4762b66;
					}
					_iter_end_1d4762b66:;
				};
			}
			_iter_next_1d474a313:;
			++it;
			goto _iter_begin_1d474a313;
		}
		_iter_end_1d474a313:;
	};
}



inline void _1de500ba2_collectLivePackage(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda18891_Package>& _14843_pkg) {
	_1de50092c_inits(_self_, _14843_pkg);
	if (_220b7ae99_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1d4767011:;
			if (it != expr.end()) {
				jule::Ptr<_1dda84621_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1d476782a:;
						if (it != expr.end()) {
							jule::Ptr<_1dd9c761e_Fn> _15529_f = *it;
							{
								if (_1de502bb5_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1dd9ca2c0_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1de5006a7_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1d476782a:;
							++it;
							goto _iter_begin_1d476782a;
						}
						_iter_end_1d476782a:;
					};
				}
				_iter_next_1d4767011:;
				++it;
				goto _iter_begin_1d4767011;
			}
			_iter_end_1d4767011:;
		};
	};
}



inline void _1de500d7d_collectLive(jule::Ptr<_2173a20be_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d4765152:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1de500ba2_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1d4765152:;
			++it;
			goto _iter_begin_1d4765152;
		}
		_iter_end_1d4765152:;
	};
	_1de500ba2_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1dd9c761e_Fn> _17517_main = _1dda1a145_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1dd9ca2c0_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1de5006a7_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1de501103_removeDeadGlobals(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dda418db_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1dda418db_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1d4759a92_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1d476c577;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1d476c577:;
	}
	_iter_end_1d476c577:;;
}



inline void _1de501378_removeDeadFns(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dd9c761e_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1dd9c761e_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1dd9ca2c0_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1d474b523_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1d47709a9;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1d47709a9:;
			}
			_iter_end_1d47709a9:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1d476ca1c;
			};
			(_19417_i)++;
		}
	_iter_next_1d476ca1c:;
	}
	_iter_end_1d476ca1c:;;
}



inline void _1de5015ed_removeDeadStructs(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2090d5849_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_2090d5849_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_2090d5c23_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1de501378_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1d4753e65_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1d4774a35;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1d4774a35:;
			}
			_iter_end_1d4774a35:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1d477279c;
			};
			(_21517_i)++;
		}
	_iter_next_1d477279c:;
	}
	_iter_end_1d477279c:;;
}



inline void _1de501873_removeDeadTraits(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1dd9d9521_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1dd9d9521_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1d47464da_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1d47772c9;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_2090d5849_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1d4779023;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1d4779023:;
			}
			_iter_end_1d4779023:;;
			(_23717_i)++;
		}
	_iter_next_1d47772c9:;
	}
	_iter_end_1d47772c9:;;
}



inline void _1de501ae8_removeDeadsFile(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda84621_SymbolTable>& _25740_file) {
	_1de501378_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1de5015ed_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1de501873_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1de501103_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1de501d6d_removeDeadsPackage(jule::Ptr<_2173a20be_ObjectDeadCode> _self_, jule::Ptr<_1dda18891_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d477d984:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _26521_file = *it;
			{
				_1de501ae8_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1d477d984:;
			++it;
			goto _iter_begin_1d477d984;
		}
		_iter_end_1d477d984:;
	};
}



inline void _1de502049_removeDeads(jule::Ptr<_2173a20be_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d477e204:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1de501d6d_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1d477e204:;
			++it;
			goto _iter_begin_1d477e204;
		}
		_iter_end_1d477e204:;
	};
	_1de501d6d_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1de502225_elimanate(jule::Ptr<_2173a20be_ObjectDeadCode> _self_) {
	_1de500d7d_collectLive(_self_);
	_1de502049_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _2173a20be_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c56d2e7a_ObjectCoder> static__1c564952e_New(jule::Ptr<_1dded98cd_IR>& _8624_ir, _1c5674a32_SerializationInfo _8633_info) {
	jule::Ptr<_1c56d2e7a_ObjectCoder> _8717_oc = jule::new_ptr<_1c56d2e7a_ObjectCoder>(_1c56d2e7a_ObjectCoder{._field_ir=_8624_ir, ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1c562e503_new(_8717_oc);
	_8717_oc.get()._field_sc=static__1c5626a7d_new(_8717_oc);
	_8717_oc.get()._field_tc=static__1c56d99ba_new(_8717_oc);
	_8717_oc.get()._field_dc=static__1c563d644_new(_8717_oc);
	return _8717_oc;;
}



inline void _1c5669917_write(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1c56a8add_addIndent(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1c56a910a_doneIndent(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1c56ac65d_indent(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1c56b3642_findAnyType(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1ddab53cc_TypeKind>& _11736_t) {
	{
		auto &expr = _self_.get()._field_anyTypeMap;
		auto it = expr.begin();
		_iter_begin_1d4bd54b2:;
		if (it != expr.end()) {
			jule::I64 _11814_i = it - expr.begin();
			jule::Ptr<_1ddab53cc_TypeKind> _11821_at = *it;
			{
				if (_1ddab5ad6_Equal(_11821_at, _11736_t)) {
					return _11814_i;;
				};
			}
			_iter_next_1d4bd54b2:;
			++it;
			_11814_i++;
			goto _iter_begin_1d4bd54b2;
		}
		_iter_end_1d4bd54b2:;
	};
	return -1LL;;
}



inline jule::I64 _1c566e015_pushAnyType(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1ddab53cc_TypeKind>& _12636_t) {
	jule::I64 _12717_i = _1c56b3642_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_12636_t);;
	jule::Str _13313_si = _1dd99dc11_Itoa(_12717_i);;
	if ((_1ddab79c8_Sptr(_12636_t.ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1c56de838_kind(_self_.get()._field_tc.ptr(), _1ddab79c8_Sptr(_12636_t.ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1c56da702_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _1ddab67da_Comparable(_12636_t.ptr());;
		jule::Str _16317_kind = _1c56de838_kind(_self_.get()._field_tc.ptr(), _12636_t);;
		if ((_16317_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_1ddab57c8_Str(_12636_t.ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1c566d245_pushResultIns(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _22538_f) {
	jule::Str _22613_s = _1c56e4376_code(_self_.get()._field_tc.get()._field_rc.ptr(), _22538_f.get()._field_Result);;
	jule::Bool _22717_ok = false;;
	_self_.get()._field_resultMap.lookup(_22613_s, nullptr, &(_22717_ok));
	if (_22717_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_22613_s]=false;
	jule::Str _23217_obj = jule::Str::alloc(0LL, 128LL);;
	_23217_obj+=jule::Str("struct ", 7);
	_23217_obj+=_22613_s;
	_23217_obj+=jule::Str(" {\n", 3);
	{
		auto &expr = _1ddab9403_Tup(_22538_f.get()._field_Result.ptr()).get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1d4be8409:;
		if (it != expr.end()) {
			jule::I64 _23614_i = it - expr.begin();
			jule::Ptr<_1ddab53cc_TypeKind> _23621_t = *it;
			{
				_23217_obj+=jule::Str("\t", 1);
				_23217_obj+=_1c56de838_kind(_self_.get()._field_tc.ptr(), _23621_t);
				_23217_obj+=jule::Str(" ", 1);
				_23217_obj+=jule::Str("__jule_result_arg", 17);
				_23217_obj+=_1dd99dc11_Itoa(_23614_i);
				_23217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1d4be8409:;
			++it;
			_23614_i++;
			goto _iter_begin_1d4be8409;
		}
		_iter_end_1d4be8409:;
	};
	_23217_obj+=jule::Str("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23217_obj);;
}



inline void _1c56ab0a7_pushResult(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9c761e_Fn>& _24835_f) {
	if ((_1dd9c7a81_IsVoid(_24835_f.ptr()) || (_24835_f.get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25217_n = _24835_f.get()._field_Instances.len();;
	if ((_24835_f.get()._field_Generics.len() == 0LL)) {
		_25217_n=1LL;
	};
	{
		auto expr = _24835_f.get()._field_Instances.slice(0LL,_25217_n);
		auto it = expr.begin();
		_iter_begin_1d4bec1dd:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _25621_ins = *it;
			{
				_1c566d245_pushResultIns(_self_, _25621_ins);
			}
			_iter_next_1d4bec1dd:;
			++it;
			goto _iter_begin_1d4bec1dd;
		}
		_iter_end_1d4bec1dd:;
	};
}



inline jule::I64 _1c5649c9e_findTypeOffset(_1c56d2e7a_ObjectCoder* _self_, jule::Ptr<_1dd9d9521_Trait> _26129_t, jule::Ptr<_1ddab53cc_TypeKind> _26144_k) {
	if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_2090d5c23_StructIns> _26517_s = nullptr;;
	if ((_1ddab79c8_Sptr(_26144_k.ptr()) != nullptr)) {
		_26144_k=_1ddab79c8_Sptr(_26144_k.ptr()).get()._field_Elem;
	};
	if ((_1ddab8bb6_Struct(_26144_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_26517_s=_1ddab8bb6_Struct(_26144_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d4beee7c:;
		if (it != expr.end()) {
			jule::Ptr<_1c564a046_traitHash> &_27316_hash = *it;
			{
				if (((_27316_hash.get()._field_t == _26129_t) && (_27316_hash.get()._field_s == _26517_s))) {
					return _27316_hash.get()._field_i;;
				};
			}
			_iter_next_1d4beee7c:;
			++it;
			goto _iter_begin_1d4beee7c;
		}
		_iter_end_1d4beee7c:;
	};
	return -1LL;;
}



inline void _1c56d3574_locInfo(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_222e62217_Token>& _28228_t) {
	jule::Str &_28314_loc = _28228_t.get()._field_File.get()._field_Path;;
	if (_220b7b906_Production) {
		{
			
			if (_222a83b08_HasPrefix(_28314_loc,_222b72147_PathStdlib)) {
				_case_begin_1d4c02303:;
				{
					_1c5669917_write(_self_, _1c563b39a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_221b39132_Dir(_222b72147_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_222a83b08_HasPrefix(_28314_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1d4c029c9:;
				{
					_1c5669917_write(_self_, _1c563b39a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc.slice((_221b39132_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1d4c01e5c:;
				{
					_1c5669917_write(_self_, _1c563b39a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
				}
			}
			_match_end_1d4c01d91:;
		};
	} else {
		_1c5669917_write(_self_, _1c563b39a_cstrBytes(static_cast<jule::Slice<jule::U8>>(_28314_loc)));
	};
	_1c5669917_write(_self_, jule::Str(":", 1));
	_1c5669917_write(_self_, _1dd99dc11_Itoa(_28228_t.get()._field_Row));
	_1c5669917_write(_self_, jule::Str(":", 1));
	_1c5669917_write(_self_, _1dd99dc11_Itoa(_28228_t.get()._field_Column));
}



inline void _1c56d36a6_head(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56cb160_Time _30913_time = static__1c56cb704_Now();;
	_1c56ca9bc_AbsTime _31013_abs = _1c56ccd43_Abs(&_30913_time);;
	_1c5669917_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1c5669917_write(_self_, jule::Str("// JuleC version: ", 18));
	_1c5669917_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1c5669917_write(_self_, jule::Str("\n", 1));
	_1c5669917_write(_self_, jule::Str("// Date: ", 9));
	_1c5669917_write(_self_, _1dd99d5d4_FmtUint(_31013_abs._field_Day,10LL));
	_1c5669917_write(_self_, jule::Str("/", 1));
	_1c5669917_write(_self_, _1dd99d5d4_FmtUint(_31013_abs._field_Month,10LL));
	_1c5669917_write(_self_, jule::Str("/", 1));
	_1c5669917_write(_self_, _1dd99d5d4_FmtUint(_31013_abs._field_Year,10LL));
	_1c5669917_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1c5669917_write(_self_, _self_.get()._field_info._field_Compiler);
	_1c5669917_write(_self_, jule::Str(" ", 1));
	_1c5669917_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	if (_220b7b906_Production) {
		_1c5669917_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_220b7b263_RC))) {
		_1c5669917_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_220b7b63c_Safety))) {
		_1c5669917_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1c56d37d8_links(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n#include \"", 12));
	_1c5669917_write(_self_, _222b82564_PathApi);
	_1c5669917_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1c56d37d8_links(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d4c0d166:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _34716_used = *it;
			{
				{
					
					if ((!(_34716_used.get()._field_CppLinked))) {
						_case_begin_1d4c0dbc2:;
						{
							goto _iter_next_1d4c0d166;
						}
					}
					else if (_222b2ba19_IsStdHeaderPath(_34716_used.get()._field_Path)) {
						_case_begin_1d4c0dc49:;
						{
							_1c5669917_write(_self_, jule::Str("#include ", 9));
							_1c5669917_write(_self_, _34716_used.get()._field_Path);
							_1c5669917_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_222b2bc39_IsValidHeaderExt(_221b36a8b_Ext(_34716_used.get()._field_Path))) {
						_case_begin_1d4c0dcc1:;
						{
							_1c5669917_write(_self_, jule::Str("#include \"", 10));
							_1c5669917_write(_self_, _34716_used.get()._field_Path);
							_1c5669917_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1d4c0daa1:;
				};
			}
			_iter_next_1d4c0d166:;
			++it;
			goto _iter_begin_1d4c0d166;
		}
		_iter_end_1d4c0d166:;
	};
}



inline void _1c56d391a_prepareStructure(_1c56d2e7a_ObjectCoder* _self_, jule::Ptr<_2090d5849_Struct>& _36340_s) {
	{
		auto &expr = _36340_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4c10784:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _36421_ins = *it;
			{
				{
					auto &expr = _36421_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1d4c11c08:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _36525_m = *it;
						{
							if (_36525_m.get()._field_Statically) {
								goto _iter_next_1d4c11c08;
							};
							{
								auto &expr = _36525_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1d4c12962:;
								if (it != expr.end()) {
									jule::Ptr<_1dd9ca2c0_FnIns> _36929_mins = *it;
									{
										jule::Ptr<_1dd9c9401_ParamIns> _37029_p = _36929_mins.get()._field_Params[0LL];;
										if ((!(_1dd9c6673_IsRef(_37029_p.get()._field_Decl.ptr())))) {
											_37029_p.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1c56d89ca_customType>(_1c56d89ca_customType{._field_kind=_1c56daa10_asPtr((*_self_)._field_tc.ptr(), _1c56de838_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind))}), 13)});
										} else {
											_37029_p.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1c56d89ca_customType>(_1c56d89ca_customType{._field_kind=_1c56de838_kind((*_self_)._field_tc.ptr(), _37029_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1d4c12962:;
									++it;
									goto _iter_begin_1d4c12962;
								}
								_iter_end_1d4c12962:;
							};
						}
						_iter_next_1d4c11c08:;
						++it;
						goto _iter_begin_1d4c11c08;
					}
					_iter_end_1d4c11c08:;
				};
			}
			_iter_next_1d4c10784:;
			++it;
			goto _iter_begin_1d4c10784;
		}
		_iter_end_1d4c10784:;
	};
}



inline void _1c56d3a4c_prepareStructures(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d4c12544:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _39021_s = *it;
			{
				if ((_39021_s.get()._field_Token != nullptr)) {
					_1c56d391a_prepareStructure(_self_.ptr(), _39021_s);
				};
			}
			_iter_next_1d4c12544:;
			++it;
			goto _iter_begin_1d4c12544;
		}
		_iter_end_1d4c12544:;
	};
}



inline void _1c56d3b7e_iterPackages(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)> _39732_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d4c16548:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _39821_used = *it;
			{
				if ((!(_39821_used.get()._field_CppLinked))) {
					_39732_f(_39821_used.get()._field_Package);
				};
			}
			_iter_next_1d4c16548:;
			++it;
			goto _iter_begin_1d4c16548;
		}
		_iter_end_1d4c16548:;
	};
	_39732_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1c56d3cb1_buildTraitMap(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _40735_pkg) mutable -> void {
		_1c56d7a40_iterFiles(_40735_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _40836_file) mutable -> void {
			{
				auto &expr = _40836_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1d4c197b0:;
				if (it != expr.end()) {
					jule::Ptr<_1dd9d9521_Trait> _40929_t = *it;
					{
						if ((_40929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_40929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c564a046_traitHash>(_1c564a046_traitHash{._field_t=_40929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1d4c197b0;
						};
						jule::I64 _42129_i = 0LL;;
						{
							auto &expr = _40929_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1d4c1a052:;
							if (it != expr.end()) {
								jule::Ptr<_2090d5849_Struct> _42233_s = *it;
								{
									{
										auto &expr = _42233_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1d4c1b718:;
										if (it != expr.end()) {
											jule::Ptr<_2090d5c23_StructIns> _42337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1c564a046_traitHash>(_1c564a046_traitHash{._field_t=_40929_t, ._field_s=_42337_ins, ._field_i=_42129_i}));;
												(_42129_i)++;
											}
											_iter_next_1d4c1b718:;
											++it;
											goto _iter_begin_1d4c1b718;
										}
										_iter_end_1d4c1b718:;
									};
								}
								_iter_next_1d4c1a052:;
								++it;
								goto _iter_begin_1d4c1a052;
							}
							_iter_end_1d4c1a052:;
						};
					}
					_iter_next_1d4c197b0:;
					++it;
					goto _iter_begin_1d4c197b0;
				}
				_iter_end_1d4c197b0:;
			};
		}));
	}));
}



inline void _1c56d3de3_traitDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _43835_pkg) mutable -> void {
		_1c56d7a40_iterFiles(_43835_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _43936_file) mutable -> void {
			{
				auto &expr = _43936_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1d4c1e166:;
				if (it != expr.end()) {
					jule::Ptr<_1dd9d9521_Trait> _44029_t = *it;
					{
						if ((_44029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1c56ac65d_indent(_self_);
						_1c5669917_write(_self_, jule::Str("struct ", 7));
						_1c5669917_write(_self_, static__1c5643429_traitDecl(_44029_t));
						_1c5669917_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1d4c1e166:;
					++it;
					goto _iter_begin_1d4c1e166;
				}
				_iter_end_1d4c1e166:;
			};
		}));
	}));
}



inline void _1c56d4025_structurePlainDecl(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5849_Struct>& _45343_s) {
	{
		auto &expr = _45343_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4c1dc04:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _45421_ins = *it;
			{
				_1c5669917_write(_self_, jule::Str("struct ", 7));
				_1c5669917_write(_self_, static__1c5643c10_structureIns(_45421_ins));
				_1c5669917_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d4c1dc04:;
			++it;
			goto _iter_begin_1d4c1dc04;
		}
		_iter_end_1d4c1dc04:;
	};
}



inline void _1c56d4157_structurePlainDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d4c22114:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _46221_s = *it;
			{
				if ((_46221_s.get()._field_Token != nullptr)) {
					_1c56d4025_structurePlainDecl(_self_, _46221_s);
				};
			}
			_iter_next_1d4c22114:;
			++it;
			goto _iter_begin_1d4c22114;
		}
		_iter_end_1d4c22114:;
	};
}



inline void _1c56d4289_fieldDecl(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5a36_FieldIns>& _46934_f) {
	_1c5669917_write(_self_, _1c56de838_kind(_self_.get()._field_tc.ptr(), _46934_f.get()._field_Kind));
	_1c5669917_write(_self_, jule::Str(" ", 1));
	_1c5669917_write(_self_, static__1c5643ea7_field(_46934_f.get()._field_Decl));
	if ((_46934_f.get()._field_Default == nullptr)) {
		if (_1c56e6389_shouldInitialized(_46934_f.get()._field_Kind)) {
			_1c5669917_write(_self_, jule::Str(" = ", 3));
			_1c563a9b5_initExpr(_self_.get()._field_ec, _46934_f.get()._field_Kind);
		};
	} else {
		_1c5669917_write(_self_, jule::Str(" = ", 3));
		_1c563a4ba_expr(_self_.get()._field_ec, _46934_f.get()._field_Default.get()._field_Model);
	};
	_1c5669917_write(_self_, jule::Str(";", 1));
}



inline void _1c56d43bb_structureDestructor(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _48744_s) {
	;
	jule::Ptr<_1dd9c761e_Fn> _49013_disposeMethod = _2090b0d52_FindMethod(_48744_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _49117_disposed = static__1dda42d0a_Dispose(_49013_disposeMethod);;
	if ((!(_49117_disposed))) {
		return;;
	};
	_1c5669917_write(_self_, jule::Str("~", 1));
	_1c5669917_write(_self_, static__1c5643c10_structureIns(_48744_s));
	_1c5669917_write(_self_, jule::Str("(void) { ", 9));
	_1c5669917_write(_self_, static__1c5642dda_func(_49013_disposeMethod));
	_1c5669917_write(_self_, jule::Str("(this); }", 9));
}



inline void _1c56d44ed_structureDeriveDefsDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _50345_s) {
	if (_20909e879_IsDerives(_50345_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, _1c563d952_cloneFuncDecl(_self_.get()._field_dc.ptr(), _50345_s.get()._field_Decl));
		_1c5669917_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1c56d4630_structureOperatorEq(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Str& _51140_ident, jule::Ptr<_2090d5c23_StructIns>& _51157_s) {
	if ((!(_51157_s.get()._field_Comparable))) {
		return;;
	};
	if ((_51157_s.get()._field_Operators._field_Eq != nullptr)) {
		_1c56d4894_structureOperator(_self_, _51140_ident,_51157_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1c56ac65d_indent(_self_);
	if (_1ddb90397_Inline) {
		_1c5669917_write(_self_, jule::Str("inline ", 7));
	};
	_1c5669917_write(_self_, jule::Str("bool operator==(", 16));
	_1c5669917_write(_self_, _51140_ident);
	_1c5669917_write(_self_, jule::Str(" _other) {", 10));
	if ((_51157_s.get()._field_Fields.len() > 0LL)) {
		_1c56a8add_addIndent(_self_);
		_1c5669917_write(_self_, jule::Str("\n", 1));
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, jule::Str("return ", 7));
		_1c56a8add_addIndent(_self_);
		jule::Bool _53421_writed = false;;
		{
			auto &expr = _51157_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1d4c301bb:;
			if (it != expr.end()) {
				jule::Ptr<_2090d5a36_FieldIns> _53525_f = *it;
				{
					jule::Ptr<_2090d5c23_StructIns> _53721_strct = _1ddab8bb6_Struct(_53525_f.get()._field_Kind.ptr());;
					if ((((_53721_strct != nullptr) && (_53721_strct.get()._field_Decl != nullptr)) && _53721_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1d4c301bb;
					};
					if (_53421_writed) {
						_1c5669917_write(_self_, jule::Str(" &&", 3));
					};
					_53421_writed=true;
					_1c5669917_write(_self_, jule::Str("\n", 1));
					_1c56ac65d_indent(_self_);
					_1c5669917_write(_self_, jule::Str("this->", 6));
					jule::Str _54821_fIdent = static__1c5643ea7_field(_53525_f.get()._field_Decl);;
					_1c5669917_write(_self_, _54821_fIdent);
					_1c5669917_write(_self_, jule::Str(" == _other.", 11));
					_1c5669917_write(_self_, _54821_fIdent);
				}
				_iter_next_1d4c301bb:;
				++it;
				goto _iter_begin_1d4c301bb;
			}
			_iter_end_1d4c301bb:;
		};
		_1c56a910a_doneIndent(_self_);
		if ((!(_53421_writed))) {
			_1c5669917_write(_self_, jule::Str("true", 4));
		};
		_1c5669917_write(_self_, jule::Str(";\n", 2));
		_1c56a910a_doneIndent(_self_);
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, jule::Str("}", 1));
	} else {
		_1c5669917_write(_self_, jule::Str(" return true; }", 15));
	};
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c56d4762_structureOperatorNotEq(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Str& _56743_ident, jule::Ptr<_2090d5c23_StructIns>& _56760_s) {
	if ((!(_56760_s.get()._field_Comparable))) {
		return;;
	};
	_1c56ac65d_indent(_self_);
	if (_1ddb90397_Inline) {
		_1c5669917_write(_self_, jule::Str("inline ", 7));
	};
	_1c5669917_write(_self_, jule::Str("bool operator!=(", 16));
	_1c5669917_write(_self_, _56743_ident);
	_1c5669917_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1c56d4894_structureOperator(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Str& _58138_ident, jule::Ptr<_1dd9ca2c0_FnIns>& _58155_f, jule::Str _58166_op) {
	if ((_58155_f == nullptr)) {
		return;;
	};
	jule::Bool _58613_unary = (_58155_f.get()._field_Params.len() == 1LL);;
	jule::Bool _58713_assignment = _1dd9c7a81_IsVoid(_58155_f.get()._field_Decl.ptr());;
	_1c56ac65d_indent(_self_);
	if (_1ddb90397_Inline) {
		_1c5669917_write(_self_, jule::Str("inline ", 7));
	};
	if (_58713_assignment) {
		_1c5669917_write(_self_, _58138_ident);
		_1c5669917_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1ddab7764_Prim(_58155_f.get()._field_Result.ptr()) == nullptr)) {
			_1c5669917_write(_self_, _58138_ident);
		} else {
			_1c5669917_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1c5669917_write(_self_, jule::Str(" operator", 9));
	_1c5669917_write(_self_, _58166_op);
	_1c5669917_write(_self_, jule::Str("(", 1));
	if ((!(_58613_unary))) {
		jule::Ptr<_1dd9c9401_ParamIns> _60921_p = _58155_f.get()._field_Params[1LL];;
		_1c5669917_write(_self_, _1c56dd7d2_paramIns(_self_.get()._field_tc.ptr(), _60921_p));
		_1c5669917_write(_self_, jule::Str(" _other", 7));
	};
	_1c5669917_write(_self_, jule::Str(") { ", 4));
	if ((!(_58713_assignment))) {
		_1c5669917_write(_self_, jule::Str("return ", 7));
	};
	_1c5669917_write(_self_, static__1c5643182_funcIns(_58155_f));
	if ((!(_58613_unary))) {
		_1c5669917_write(_self_, jule::Str("(this, _other); ", 16));
		if (_58713_assignment) {
			_1c5669917_write(_self_, jule::Str("return *this; ", 14));
		};
		_1c5669917_write(_self_, jule::Str("}", 1));
	} else {
		_1c5669917_write(_self_, jule::Str("(this); }", 9));
	};
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
}



inline void _1c56d49c6_structureOperators(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _63043_s) {
	jule::Str _63113_ident = static__1c5643c10_structureIns(_63043_s);;
	_1c56d4630_structureOperatorEq(_self_, _63113_ident,_63043_s);
	_1c56d4762_structureOperatorNotEq(_self_, _63113_ident,_63043_s);
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1c56d4894_structureOperator(_self_, _63113_ident,_63043_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1c56d4b08_structureInsDecl(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _66941_s) {
	if ((_66941_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _66941_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1d4c4d195:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c761e_Fn> _67125_m = *it;
				{
					_1c56ab0a7_pushResult(_self_, _67125_m);
					_1c56d5213_funcDecl(_self_, _67125_m,false);
				}
				_iter_next_1d4c4d195:;
				++it;
				goto _iter_begin_1d4c4d195;
			}
			_iter_end_1d4c4d195:;
		};
	};
	_1c5669917_write(_self_, jule::Str("struct ", 7));
	jule::Str _67813_outIdent = static__1c5643c10_structureIns(_66941_s);;
	_1c5669917_write(_self_, _67813_outIdent);
	_1c5669917_write(_self_, jule::Str(" {\n", 3));
	_1c56a8add_addIndent(_self_);
	{
		auto &expr = _66941_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1d4c50164:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5a36_FieldIns> _68421_f = *it;
			{
				_1c56ac65d_indent(_self_);
				_1c56d4289_fieldDecl(_self_, _68421_f);
				_1c5669917_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1d4c50164:;
			++it;
			goto _iter_begin_1d4c50164;
		}
		_iter_end_1d4c50164:;
	};
	_1c56ac65d_indent(_self_);
	_1c56d43bb_structureDestructor(_self_, _66941_s);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56ac65d_indent(_self_);
	_1c5669917_write(_self_, _67813_outIdent);
	_1c5669917_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1c56d44ed_structureDeriveDefsDecls(_self_, _66941_s);
	_1c56d49c6_structureOperators(_self_, _66941_s);
	_1c5669917_write(_self_, jule::Str("\n", 1));
	_1c56a910a_doneIndent(_self_);
	_1c56ac65d_indent(_self_);
	_1c5669917_write(_self_, jule::Str("};", 2));
}



inline void _1c56d4c3a_structureDecl(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5849_Struct>& _70938_s) {
	{
		auto &expr = _70938_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4c54267:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _71021_ins = *it;
			{
				_1c56d4b08_structureInsDecl(_self_, _71021_ins);
			}
			_iter_next_1d4c54267:;
			++it;
			goto _iter_begin_1d4c54267;
		}
		_iter_end_1d4c54267:;
	};
}



inline void _1c56d4d6c_structureDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d4c55125:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _71621_s = *it;
			{
				if ((_71621_s.get()._field_Token != nullptr)) {
					_1c56d4c3a_structureDecl(_self_, _71621_s);
					_1c5669917_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1d4c55125:;
			++it;
			goto _iter_begin_1d4c55125;
		}
		_iter_end_1d4c55125:;
	};
}



inline void _1c56d4e9e_paramsDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>& _72436_params) {
	if ((_72436_params.len() == 0LL)) {
		_1c5669917_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c5669917_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _72436_params;
		auto it = expr.begin();
		_iter_begin_1d4c571c1:;
		if (it != expr.end()) {
			jule::I64 _73114_i = it - expr.begin();
			jule::Ptr<_1dd9c9401_ParamIns> _73121_p = *it;
			{
				_1c5669917_write(_self_, _1c56dd7d2_paramIns(_self_.get()._field_tc.ptr(), _73121_p));
				if (((_72436_params.len() - _73114_i) > 1LL)) {
					_1c5669917_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d4c571c1:;
			++it;
			_73114_i++;
			goto _iter_begin_1d4c571c1;
		}
		_iter_end_1d4c571c1:;
	};
	_1c5669917_write(_self_, jule::Str(")", 1));
}



inline void _1c56d50d1_funcHead(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9ca2c0_FnIns>& _74133_f, jule::Bool _74144_ptr) {
	if ((((!(_74144_ptr)) && _1ddb90397_Inline) && (!(_1dd9c8059_IsEntryPoint(_74133_f.get()._field_Decl.ptr()))))) {
		_1c5669917_write(_self_, jule::Str("inline ", 7));
	};
	_1c56dde0e_funcInsResult(_self_.get()._field_tc.ptr(), _self_.get()._field_Obj,_74133_f);
	if (_74144_ptr) {
		_1c5669917_write(_self_, jule::Str("(*", 2));
		_1c5669917_write(_self_, static__1c5643182_funcIns(_74133_f));
		_1c5669917_write(_self_, jule::Str(")", 1));
	} else {
		_1c5669917_write(_self_, jule::Str(" ", 1));
		_1c5669917_write(_self_, static__1c5643182_funcIns(_74133_f));
	};
}



inline void _1c56d5213_funcDecl(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9c761e_Fn>& _75633_f, jule::Bool _75641_ptr) {
	{
		auto &expr = _75633_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4c5c67c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _75721_c = *it;
			{
				_1c56ac65d_indent(_self_);
				_1c56d50d1_funcHead(_self_, _75721_c,_75641_ptr);
				_1c56d4e9e_paramsDecls(_self_, _75721_c.get()._field_Params);
				_1c5669917_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d4c5c67c:;
			++it;
			goto _iter_begin_1d4c5c67c;
		}
		_iter_end_1d4c5c67c:;
	};
}



inline void _1c56d5345_funcDecls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _76635_pkg) mutable -> void {
		_1c56d7a40_iterFiles(_76635_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _76736_file) mutable -> void {
			{
				auto &expr = _76736_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1d4c60b47:;
				if (it != expr.end()) {
					jule::Ptr<_1dd9c761e_Fn> _76829_f = *it;
					{
						if (((!(_76829_f.get()._field_CppLinked)) && (_76829_f.get()._field_Token != nullptr))) {
							_1c56ab0a7_pushResult(_self_, _76829_f);
							_1c56d5213_funcDecl(_self_, _76829_f,false);
						};
					}
					_iter_next_1d4c60b47:;
					++it;
					goto _iter_begin_1d4c60b47;
				}
				_iter_end_1d4c60b47:;
			};
		}));
	}));
}



inline void _1c56d5477_traitDataTypes(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _77935_pkg) mutable -> void {
		_1c56d7a40_iterFiles(_77935_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _78036_file) mutable -> void {
			{
				auto &expr = _78036_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1d4c63b17:;
				if (it != expr.end()) {
					jule::Ptr<_1dd9d9521_Trait> _78129_t = *it;
					{
						if ((_78129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1c5669917_write(_self_, jule::Str("struct ", 7));
						_1c5669917_write(_self_, static__1c5643429_traitDecl(_78129_t));
						_1c5669917_write(_self_, jule::Str("MptrData", 8));
						_1c5669917_write(_self_, jule::Str(" {\n", 3));
						_1c56a8add_addIndent(_self_);
						{
							auto &expr = _78129_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1d4c65a70:;
							if (it != expr.end()) {
								jule::Ptr<_1dd9c761e_Fn> _79033_m = *it;
								{
									jule::Ptr<_1dd9ca2c0_FnIns> _79133_ins = _79033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1dd9c9401_ParamIns> _79233_p = _79133_ins.get()._field_Params[0LL];;
									_79233_p.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_78129_t, 2)});
									{
										auto expr = _79133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1d4c66a1b:;
										if (it != expr.end()) {
											jule::I64 _79630_i = it - expr.begin();
											jule::Ptr<_1dd9c9401_ParamIns> _79637_ip = *it;
											{
												if (_222e64c53_IsAnonIdent(_79637_ip.get()._field_Decl.get()._field_Ident)) {
													_79637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1dd99dc11_Itoa(_79630_i));
												};
											}
											_iter_next_1d4c66a1b:;
											++it;
											_79630_i++;
											goto _iter_begin_1d4c66a1b;
										}
										_iter_end_1d4c66a1b:;
									};
									if ((!(_220b7b906_Production))) {
										_79133_ins.get()._field_Params = jule::alloc_for_append(_79133_ins.get()._field_Params,1);_79133_ins.get()._field_Params.__push(jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1c56d89ca_customType>(_1c56d89ca_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1c56ab0a7_pushResult(_self_, _79033_m);
									_1c56d5213_funcDecl(_self_, _79033_m,true);
								}
								_iter_next_1d4c65a70:;
								++it;
								goto _iter_begin_1d4c65a70;
							}
							_iter_end_1d4c65a70:;
						};
						_1c56a910a_doneIndent(_self_);
						_1c56ac65d_indent(_self_);
						_1c5669917_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1d4c63b17:;
					++it;
					goto _iter_begin_1d4c63b17;
				}
				_iter_end_1d4c63b17:;
			};
		}));
	}));
}



inline void _1c56d55a9_paramIns(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9c9401_ParamIns>& _82433_p) {
	_1c5669917_write(_self_, _1c56dd7d2_paramIns(_self_.get()._field_tc.ptr(), _82433_p));
	_1c5669917_write(_self_, jule::Str(" ", 1));
	_1c5669917_write(_self_, static__1c56436c1_param(_82433_p.get()._field_Decl));
}



inline void _1c56d56db_paramsIns(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>& _83034_params) {
	if ((_83034_params.len() == 0LL)) {
		_1c5669917_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1c5669917_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _83034_params;
		auto it = expr.begin();
		_iter_begin_1d4c6c725:;
		if (it != expr.end()) {
			jule::I64 _83614_i = it - expr.begin();
			jule::Ptr<_1dd9c9401_ParamIns> _83621_p = *it;
			{
				_1c56d55a9_paramIns(_self_, _83621_p);
				if (((_83034_params.len() - _83614_i) > 1LL)) {
					_1c5669917_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1d4c6c725:;
			++it;
			_83614_i++;
			goto _iter_begin_1d4c6c725;
		}
		_iter_end_1d4c6c725:;
	};
	_1c5669917_write(_self_, jule::Str(")", 1));
}



inline void _1c56d581d_varInitExpr(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dda418db_Var>& _84536_v, jule::Fn<void(void)> _84545_init) {
	if (_84536_v.get()._field_Statically) {
		_1c5669917_write(_self_, jule::Str("static ", 7));
	};
	_1c5669917_write(_self_, _1c56de838_kind(_self_.get()._field_tc.ptr(), _84536_v.get()._field_Kind.get()._field_Kind));
	_1c5669917_write(_self_, jule::Str(" ", 1));
	if (_84536_v.get()._field_Reference) {
		_1c5669917_write(_self_, jule::Str("&", 1));
	};
	_1c5669917_write(_self_, static__1c564424e_var(_84536_v));
	if ((_84545_init != nullptr)) {
		_1c5669917_write(_self_, jule::Str(" = ", 3));
		_84545_init();
	};
	_1c5669917_write(_self_, jule::Str(";", 1));
}



inline void _1c56d5950_var(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dda418db_Var> _86327_v) {
	if (_222e649ab_IsIgnoreIdent(_86327_v.get()._field_Ident)) {
		return;;
	};
	if (((_86327_v.get()._field_Value != nullptr) && (_86327_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86327_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1c56d581d_varInitExpr(_self_, _86327_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1c563a740_val(_self_.get()._field_ec, _86327_v.get()._field_Value);
			}));
			return;;
		};
		_1c56d581d_varInitExpr(_self_, _86327_v,nullptr);
		return;;
	};
	if (_1c56e6389_shouldInitialized(_86327_v.get()._field_Kind.get()._field_Kind)) {
		_1c56d581d_varInitExpr(_self_, _86327_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_1c563a9b5_initExpr(_self_.get()._field_ec, _86327_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1c56d581d_varInitExpr(_self_, _86327_v,nullptr);
}



inline void _1c56d5a82_func(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dd9c761e_Fn>& _88229_f) {
	{
		auto &expr = _88229_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4c76d7d:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9ca2c0_FnIns> _88321_ins = *it;
			{
				_1c56d50d1_funcHead(_self_, _88321_ins,false);
				_1c56d56db_paramsIns(_self_, _88321_ins.get()._field_Params);
				_1c5669917_write(_self_, jule::Str(" ", 1));
				_1c562b665_funcScope(_self_.get()._field_sc, _88321_ins);
				if ((_88321_ins.get()._field_Scope != nullptr)) {
					_1c5669917_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1d4c76d7d:;
			++it;
			goto _iter_begin_1d4c76d7d;
		}
		_iter_end_1d4c76d7d:;
	};
}



inline void _1c56d5bb4_traitWrappers(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d4c79226:;
		if (it != expr.end()) {
			jule::Ptr<_1c564a046_traitHash> _89521_hash = *it;
			{
				{
					auto &expr = _89521_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1d4c79864:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _89625_m = *it;
						{
							jule::Str _89721_ident = _89625_m.get()._field_Ident;;
							_89625_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_89625_m.get()._field_Ident=((_89721_ident + jule::Str("_", 1)) + _1dd99dc11_Itoa(_89521_hash.get()._field_i));
							_1c56d5a82_func(_self_, _89625_m);
							_89625_m.get()._field_Ident=_89721_ident;
							if ((_89521_hash.get()._field_s == nullptr)) {
								if (_220b7b906_Production) {
									_1c5669917_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1c5669917_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1d4c79864;
							};
							jule::Bool _91321_ptr = (!(_1dd9c6673_IsRef(_89625_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1dd9c761e_Fn> _91525_sm = _2090b0d52_FindMethod(_89521_hash.get()._field_s.ptr(), _89625_m.get()._field_Ident,false);;
							if (((_91525_sm == nullptr) || (_91525_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1d4c79864;
							};
							_1c56a8add_addIndent(_self_);
							_1c5669917_write(_self_, jule::Str("{\n", 2));
							_1c56ac65d_indent(_self_);
							if ((_91525_sm.get()._field_Exceptional || (!(_1dd9c7a81_IsVoid(_91525_sm.ptr()))))) {
								_1c5669917_write(_self_, jule::Str("return ", 7));
							};
							_1c5669917_write(_self_, static__1c5642dda_func(_91525_sm));
							_1c5669917_write(_self_, jule::Str("(", 1));
							if (_91321_ptr) {
								_1c5669917_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1c5669917_write(_self_, _1c56dcda8_structureIns(_self_.get()._field_tc.ptr(), _89521_hash.get()._field_s));
								_1c5669917_write(_self_, jule::Str(">(", 2));
								if ((!(_220b7b906_Production))) {
									_1c5669917_write(_self_, jule::Str("_00___file", 10));
								};
								_1c5669917_write(_self_, jule::Str(")", 1));
							} else {
								_1c5669917_write(_self_, jule::Str("_self_.data.as<", 15));
								_1c5669917_write(_self_, _1c56dca9a_structure(_self_.get()._field_tc.ptr(), _91525_sm.get()._field_Owner));
								_1c5669917_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _89625_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1d4c83708:;
								if (it != expr.end()) {
									jule::Ptr<_1dd9c5cd2_Param> _94124_mp = *it;
									{
										_1c5669917_write(_self_, jule::Str(", ", 2));
										_1c5669917_write(_self_, static__1c56436c1_param(_94124_mp));
									}
									_iter_next_1d4c83708:;
									++it;
									goto _iter_begin_1d4c83708;
								}
								_iter_end_1d4c83708:;
							};
							_1c5669917_write(_self_, jule::Str(");\n}\n", 5));
							_1c56a910a_doneIndent(_self_);
						}
						_iter_next_1d4c79864:;
						++it;
						goto _iter_begin_1d4c79864;
					}
					_iter_end_1d4c79864:;
				};
			}
			_iter_next_1d4c79226:;
			++it;
			goto _iter_begin_1d4c79226;
		}
		_iter_end_1d4c79226:;
	};
}



inline void _1c56d5ce6_traitDatas(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	jule::Ptr<_1dd9d9521_Trait> _95217_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1d4c794e0:;
		if (it != expr.end()) {
			jule::Ptr<_1c564a046_traitHash> _95321_hash = *it;
			{
				jule::Str _95417_ident = static__1c5643429_traitDecl(_95321_hash.get()._field_t);;
				if ((_95321_hash.get()._field_t != _95217_old)) {
					if ((_95217_old != nullptr)) {
						_1c56a910a_doneIndent(_self_);
						_1c56ac65d_indent(_self_);
						_1c5669917_write(_self_, jule::Str("};\n", 3));
					};
					_1c5669917_write(_self_, jule::Str("static ", 7));
					_1c5669917_write(_self_, _95417_ident);
					_1c5669917_write(_self_, jule::Str("MptrData ", 9));
					_1c5669917_write(_self_, _95417_ident);
					_1c5669917_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_95217_old=_95321_hash.get()._field_t;
					_1c56a8add_addIndent(_self_);
				};
				_1c56ac65d_indent(_self_);
				_1c5669917_write(_self_, jule::Str("{\n", 2));
				_1c56a8add_addIndent(_self_);
				{
					auto &expr = _95321_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1d4c89786:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9c761e_Fn> _97225_m = *it;
						{
							jule::Str _97321_mIdent = static__1c5642dda_func(_97225_m);;
							_1c56ac65d_indent(_self_);
							_1c5669917_write(_self_, jule::Str(".", 1));
							_1c5669917_write(_self_, _97321_mIdent);
							_1c5669917_write(_self_, jule::Str("=", 1));
							_1c5669917_write(_self_, _97321_mIdent);
							_1c5669917_write(_self_, jule::Str("_", 1));
							_1c5669917_write(_self_, _1dd99dc11_Itoa(_95321_hash.get()._field_i));
							_1c5669917_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1d4c89786:;
						++it;
						goto _iter_begin_1d4c89786;
					}
					_iter_end_1d4c89786:;
				};
				_1c56a910a_doneIndent(_self_);
				_1c56ac65d_indent(_self_);
				_1c5669917_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1d4c794e0:;
			++it;
			goto _iter_begin_1d4c794e0;
		}
		_iter_end_1d4c794e0:;
	};
	if ((_95217_old != nullptr)) {
		_1c56a910a_doneIndent(_self_);
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1c56d5e28_globals(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1d4c9375c:;
		if (it != expr.end()) {
			jule::Ptr<_1dda418db_Var> _99521_v = *it;
			{
				_1c5669917_write(_self_, _1c56de838_kind(_self_.get()._field_tc.ptr(), _99521_v.get()._field_Kind.get()._field_Kind));
				_1c5669917_write(_self_, jule::Str(" ", 1));
				if (_99521_v.get()._field_Reference) {
					_1c5669917_write(_self_, jule::Str("&", 1));
				};
				_1c5669917_write(_self_, static__1c564424e_var(_99521_v));
				_1c5669917_write(_self_, jule::Str(" = ", 3));
				_1c563a740_val(_self_.get()._field_ec, _99521_v.get()._field_Value);
				_1c5669917_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1d4c9375c:;
			++it;
			goto _iter_begin_1d4c9375c;
		}
		_iter_end_1d4c9375c:;
	};
}



inline void _1c56d605a_decls(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3de3_traitDecls(_self_);
	_1c56d4157_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1c56d4d6c_structureDecls(_self_);
	_1c56d5345_funcDecls(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56d5477_traitDataTypes(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56d5bb4_traitWrappers(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56d5ce6_traitDatas(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1c56d5e28_globals(_self_);
}



inline void _1c56d618c_structureMethods(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _102541_s) {
	{
		auto &expr = _102541_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1d4c99bc5:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _102621_f = *it;
			{
				_1c56d5a82_func(_self_, _102621_f);
				_1c5669917_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d4c99bc5:;
			++it;
			goto _iter_begin_1d4c99bc5;
		}
		_iter_end_1d4c99bc5:;
	};
}



inline void _1c56d62be_structureDeriveDefs(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _103244_s) {
	if (_20909e879_IsDerives(_103244_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1c5669917_write(_self_, _1c563dc60_cloneFuncDef(_self_.get()._field_dc.ptr(), _103244_s.get()._field_Decl));
		_1c5669917_write(_self_, jule::Str("{\n", 2));
		_1c56a8add_addIndent(_self_);
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, _1c56dcda8_structureIns(_self_.get()._field_tc.ptr(), _103244_s));
		_1c5669917_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _103244_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1d4c9bb1c:;
			if (it != expr.end()) {
				jule::Ptr<_2090d5a36_FieldIns> _104020_f = *it;
				{
					jule::Str _104121_ident = static__1c5643ea7_field(_104020_f.get()._field_Decl);;
					_1c56ac65d_indent(_self_);
					_1c5669917_write(_self_, jule::Str("clone.", 6));
					_1c5669917_write(_self_, _104121_ident);
					_1c5669917_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1c5669917_write(_self_, _104121_ident);
					_1c5669917_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1d4c9bb1c:;
				++it;
				goto _iter_begin_1d4c9bb1c;
			}
			_iter_end_1d4c9bb1c:;
		};
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, jule::Str("return clone;\n", 14));
		_1c56a910a_doneIndent(_self_);
		_1c5669917_write(_self_, jule::Str("}", 1));
	};
}



inline void _1c56d6401_structureOstream(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _105641_s) {
	_1c56ac65d_indent(_self_);
	_1c5669917_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1c5669917_write(_self_, static__1c5643c10_structureIns(_105641_s));
	_1c5669917_write(_self_, jule::Str(" _Src) {\n", 9));
	_1c56a8add_addIndent(_self_);
	_1c56ac65d_indent(_self_);
	jule::Ptr<_1dd9c761e_Fn> _106417_fts = _2090b0d52_FindMethod(_105641_s.ptr(), jule::Str("Str", 3),false);;
	if (static__1dda430a2_Str(_106417_fts)) {
		_1c5669917_write(_self_, jule::Str("_Stream << ", 11));
		_1c5669917_write(_self_, static__1c5642dda_func(_106417_fts));
		_1c5669917_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1c5669917_write(_self_, jule::Str("_Stream << \"", 12));
		_1c5669917_write(_self_, _105641_s.get()._field_Decl.get()._field_Ident);
		_1c5669917_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _105641_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1d4ca520d:;
			if (it != expr.end()) {
				jule::I64 _107418_i = it - expr.begin();
				jule::Ptr<_2090d5a36_FieldIns> _107425_f = *it;
				{
					_1c56ac65d_indent(_self_);
					_1c5669917_write(_self_, jule::Str("_Stream << \"", 12));
					_1c5669917_write(_self_, _107425_f.get()._field_Decl.get()._field_Ident);
					_1c5669917_write(_self_, jule::Str(":", 1));
					jule::Ptr<_2090d5c23_StructIns> _108121_strct = _1ddab8bb6_Struct(_107425_f.get()._field_Kind.ptr());;
					if ((((_108121_strct != nullptr) && (_108121_strct.get()._field_Decl != nullptr)) && _108121_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1c5669917_write(_self_, jule::Str(" cpp.", 5));
						_1c5669917_write(_self_, static__1c5643ea7_field(_107425_f.get()._field_Decl));
						_1c5669917_write(_self_, jule::Str("\"", 1));
					} else {
						_1c5669917_write(_self_, jule::Str("\" << _Src.", 10));
						_1c5669917_write(_self_, static__1c5643ea7_field(_107425_f.get()._field_Decl));
					};
					if (((_107418_i + 1LL) < _105641_s.get()._field_Fields.len())) {
						_1c5669917_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1c5669917_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1d4ca520d:;
				++it;
				_107418_i++;
				goto _iter_begin_1d4ca520d;
			}
			_iter_end_1d4ca520d:;
		};
		_1c56ac65d_indent(_self_);
		_1c5669917_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1c56ac65d_indent(_self_);
	_1c5669917_write(_self_, jule::Str("return _Stream;\n", 16));
	_1c56a910a_doneIndent(_self_);
	_1c5669917_write(_self_, jule::Str("}", 1));
}



inline void _1c56d65bb_structureIns(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5c23_StructIns>& _110737_s) {
	_1c56d618c_structureMethods(_self_, _110737_s);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56d62be_structureDeriveDefs(_self_, _110737_s);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	_1c56d6401_structureOstream(_self_, _110737_s);
}



inline void _1c56d6841_structure(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_2090d5849_Struct>& _111534_s) {
	{
		auto &expr = _111534_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1d4cad05c:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5c23_StructIns> _111621_ins = *it;
			{
				_1c56d65bb_structureIns(_self_, _111621_ins);
				_1c5669917_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1d4cad05c:;
			++it;
			goto _iter_begin_1d4cad05c;
		}
		_iter_end_1d4cad05c:;
	};
}



inline void _1c56d6a1c_structures(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1d4cae28e:;
		if (it != expr.end()) {
			jule::Ptr<_2090d5849_Struct> _112321_s = *it;
			{
				if ((_112321_s.get()._field_Token != nullptr)) {
					_1c56d6841_structure(_self_, _112321_s);
					_1c5669917_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1d4cae28e:;
			++it;
			goto _iter_begin_1d4cae28e;
		}
		_iter_end_1d4cae28e:;
	};
}



inline void _1c56d6be8_funcs(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _113235_pkg) mutable -> void {
		_1c56d7a40_iterFiles(_113235_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _113336_file) mutable -> void {
			{
				auto &expr = _113336_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1d4cb246d:;
				if (it != expr.end()) {
					jule::Ptr<_1dd9c761e_Fn> _113429_f = *it;
					{
						if (((!(_220b7ae99_Test)) && _1c56e60e2_hasDirective(_113429_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1d4cb246d;
						};
						if (((!(_113429_f.get()._field_CppLinked)) && (_113429_f.get()._field_Token != nullptr))) {
							_1c56d5a82_func(_self_, _113429_f);
							_1c5669917_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1d4cb246d:;
					++it;
					goto _iter_begin_1d4cb246d;
				}
				_iter_end_1d4cb246d:;
			};
		}));
	}));
}



inline void _1c56d6e6d_pushInit(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_, jule::Ptr<_1dda18891_Package>& _114733_pkg) {
	_1c56d7a40_iterFiles(_114733_pkg,jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)>([=](jule::Ptr<_1dda84621_SymbolTable>& _114832_file) mutable -> void {
		{
			auto &expr = _114832_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1d4cb4c34:;
			if (it != expr.end()) {
				jule::Ptr<_1dd9c761e_Fn> _114920_f = *it;
				{
					if ((_114920_f.get()._field_Ident == jule::Str("init", 4))) {
						_1c56ac65d_indent(_self_);
						_1c5669917_write(_self_, static__1c5642dda_func(_114920_f));
						_1c5669917_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1d4cb4c34:;
				++it;
				goto _iter_begin_1d4cb4c34;
			}
			_iter_end_1d4cb4c34:;
		};
	}));
}



inline void _1c56d7149_initCaller(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c5669917_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1c56a8add_addIndent(_self_);
	_1c56d3b7e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1dda18891_Package>&)>([=](jule::Ptr<_1dda18891_Package>& _116235_pkg) mutable -> void {
		_1c56d6e6d_pushInit(_self_, _116235_pkg);
	}));
	_1c56a910a_doneIndent(_self_);
	_1c5669917_write(_self_, jule::Str("\n}", 2));
}



inline void _1c56d7325_end(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c5669917_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_220b7ae99_Test) {
		_1c5669917_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1c5669917_write(_self_, jule::Str("entry_point();", 14));
	};
	_1c5669917_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1c56d7501_serializeHead(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d3a4c_prepareStructures(_self_);
	_1c56d3cb1_buildTraitMap(_self_);
	_1c56d36a6_head(_self_);
	_1c5669917_write(_self_, jule::Str("\n", 1));
	_1c56d605a_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _119721_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_headPos);;
		{
			auto &expr = _self_.get()._field_resultDecls;
			auto it = expr.begin();
			_iter_begin_1d4cbb6a8:;
			if (it != expr.end()) {
				jule::Str _119820_decl = *it;
				{
					_119721_head+=_119820_decl;
					_self_.get()._field_declPos+=_119820_decl.len();
				}
				_iter_next_1d4cbb6a8:;
				++it;
				goto _iter_begin_1d4cbb6a8;
			}
			_iter_end_1d4cbb6a8:;
		};
		_119721_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_119721_head;
	};
	_1c5669917_write(_self_, jule::Str("\n", 1));
	_1c56d6a1c_structures(_self_);
	_1c56d6be8_funcs(_self_);
	_1c56d7149_initCaller(_self_);
	_1c5669917_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _121321_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_declPos);;
		_121321_head+=_self_.get()._field_anyObj;
		_121321_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_121321_head;
	};
}



inline void _1c56d76cc_Serialize(jule::Ptr<_1c56d2e7a_ObjectCoder> _self_) {
	_1c56d7501_serializeHead(_self_);
	_1c56d7325_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1c56d2e7a_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1dded98cd_IR__jule_tuple_s_222b38ae2_Log static__1ddc1dec5_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1dded98cd_IR__jule_tuple_s_222b38ae2_Log __jule_func_result;
	jule::Ptr<_1de331450_JuleImporter> _2817_importer = static__1ddd5adae_New(_1de03da86_buildCompileInfo());;
	jule::Slice<jule::Ptr<_209084bc2_Ast>> _2918_files;;
	jule::Slice<_222b38ae2_Log> _2929_logs;;
	({
		__jule_tuple_sx_209084bc2_Ast__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1ddec38a6_ImportPackage(_2817_importer.ptr(), _2721_path,true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1dda18891_Package> _3918_pkg;;
	({
		__jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1ddad284a_AnalyzePackage(_2918_files,jule::Trait<_1dda12cb9_Importer>(_2817_importer, 0),_2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1dded98cd_IR> _4417_ir = jule::new_ptr<_1dded98cd_IR>(_1dded98cd_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1ddd9e474_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1de02c5be_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ddc204b0_appendStructs(_1dded98cd_IR* _self_, jule::Ptr<_1dda18891_Package>& _5633_p, jule::Slice<jule::Ptr<_2090d5849_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d4704234:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1d4704a81:;
					if (it != expr.end()) {
						jule::Ptr<_2090d5849_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1d4704a81:;
						++it;
						goto _iter_begin_1d4704a81;
					}
					_iter_end_1d4704a81:;
				};
			}
			_iter_next_1d4704234:;
			++it;
			goto _iter_begin_1d4704234;
		}
		_iter_end_1d4704234:;
	};
}



inline jule::Slice<jule::Ptr<_2090d5849_Struct>> _1ddc2c302_GetAllStructures(_1dded98cd_IR* _self_) {
	jule::Slice<jule::Ptr<_2090d5849_Struct>> _6917_buffer = nullptr;;
	_1ddc204b0_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1d470472e:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1ddc204b0_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1d470472e:;
			++it;
			goto _iter_begin_1d470472e;
		}
		_iter_end_1d470472e:;
	};
	return _6917_buffer;;
}



inline void _1ddc4a210_appendGlobals(_1dded98cd_IR* _self_, jule::Ptr<_1dda18891_Package>& _7933_p, jule::Slice<jule::Ptr<_1dda418db_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d4707226:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1d4707a51:;
					if (it != expr.end()) {
						jule::Ptr<_1dda418db_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1d4707a51:;
						++it;
						goto _iter_begin_1d4707a51;
					}
					_iter_end_1d4707a51:;
				};
			}
			_iter_next_1d4707226:;
			++it;
			goto _iter_begin_1d4707226;
		}
		_iter_end_1d4707226:;
	};
}



inline jule::Slice<jule::Ptr<_1dda418db_Var>> _1ddc4ac27_GetAllGlobals(_1dded98cd_IR* _self_) {
	jule::Slice<jule::Ptr<_1dda418db_Var>> _9217_buffer = nullptr;;
	_1ddc4a210_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1d47094e2:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1ddc4a210_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1d47094e2:;
			++it;
			goto _iter_begin_1d47094e2;
		}
		_iter_end_1d47094e2:;
	};
	return _9217_buffer;;
}



inline void _1ddc5018d_Order(_1dded98cd_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1ddc2c302_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1ddc4ac27_GetAllGlobals(&(*_self_));
	static__1de073390_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1de202079_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1dded98cd_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1d4d397ae_parseInteger(_1c57335a2_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1d4d3c44e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1d4d3c8b1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1d4d3ca59:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1d4d3c7a1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1d4d3c11e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d4d3c0a8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d4d3bedc:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1d4d428a5_parseInteger(_1c57335a2_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1d4d45501:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1d4d45963:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1d4d45b0b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_222a83b08_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1d4d45853:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1d4d451c1:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d4d4515a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d4d4508e:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c5733d99_getData(_1c57335a2_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();;
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];;
}



inline jule::VoidExceptional _1c57340db_processFlag(_1c57335a2_argParser* _self_, jule::Trait<_1c572e45a_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1d4d36a0e:;
			{
				jule::Ptr<_1d4d22a0b_Flag> _22021_bf = _21735_flag.cast_ptr<_1d4d22a0b_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1d4d36998:;
	};
	jule::Str _22513_data = _1c5733d99_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c572e45a_CommonFlag_mptr_data[(_21735_flag).type_offset]._1c56e9920_Name(_21735_flag)) + jule::Str(": expression missing", 20)), &__jule_any_type6));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1d4d38170:;
			{
				jule::Ptr<_1d4d16b43_Flag> _23221_intf = _21735_flag.cast_ptr<_1d4d16b43_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1d4d397ae_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1dd9917e7_ParseInt(_23370_s,_23378_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c572e45a_CommonFlag_mptr_data[(_21735_flag).type_offset]._1c56e9920_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type6));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1d4d38a55:;
			{
				jule::Ptr<_1d4d1a87d_Flag> _24021_uintf = _21735_flag.cast_ptr<_1d4d1a87d_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d4d428a5_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1dd9916b5_ParseUint(_24171_s,_24179_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c572e45a_CommonFlag_mptr_data[(_21735_flag).type_offset]._1c56e9920_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type6));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1d4d38abb:;
			{
				jule::Ptr<_1d4d1e19a_Flag> _24821_ff = _21735_flag.cast_ptr<_1d4d1e19a_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1dd99461e_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1c572e45a_CommonFlag_mptr_data[(_21735_flag).type_offset]._1c56e9920_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type6));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1d4d38b32:;
			{
				(*(_21735_flag.cast_ptr<_1d4d26328_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1d4d389de:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c5734361_singleDash(_1c57335a2_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional(jule::Any((_25730_arg + jule::Str(": missing argument", 18)), &__jule_any_type6));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1d4d4cbce:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1c572e45a_CommonFlag> _26321_flag = _1c5731957_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)), &__jule_any_type6));
				};
				({
					auto except = _1c57340db_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1d4d4cbce:;
			++it;
			goto _iter_begin_1d4d4cbce;
		}
		_iter_end_1d4d4cbce:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c57345d6_doubleDash(_1c57335a2_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": missing argument", 18)), &__jule_any_type6));
	};
	jule::Trait<_1c572e45a_CommonFlag> _27617_flag = _1c5731649_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": flag is not exist", 19)), &__jule_any_type6));
	};
	({
		auto except = _1c57340db_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c57347b2_tryArg(_1c57335a2_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1c57345d6_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1c5734361_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1c573498d_parse(_1c57335a2_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1c57347b2_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1d4d53696:;
	}
	_iter_end_1d4d53696:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1c57335a2_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2219b08e3_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _2219c5122_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _220c076da_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _2219e33d7_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _2219e37c2_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));;
}



inline jule::U8* _2219e3b13_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));;
}



inline DIR* _2219e40db_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _2219e4383_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _2219e462a_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _2219e4eaa_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));;
}



inline jule::I64 _2219e5252_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _2219e54e9_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _221a06472_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));;
}



inline jule::I64 _221a0685c_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));;
}



inline jule::I64 _221a06bd1_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _221a070bb_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));;
}



inline void _221a072ca_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _221aa4e05_getLastOsError(void) {
	jule::I64 _309_err = _220c076da_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c57b219c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c57b1aa3:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1c57b1b2a:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c57b1ba2:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c57b1dd3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c57b1e49:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c57b1eb0:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1c57b18e9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c57b1894:;
	};
}



inline jule::Slice<jule::Str> _221aa5e28_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _221aa639b_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _221aa6c5e_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _221aa6c5e_getwd(void) {
	jule::U8* _1113_buff = _2219e3b13_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_221aa4e05_getLastOsError(), &__jule_any_type132));
	};
	jule::Str _159_pwd = _2219c5122_BytePtrToStr(_1113_buff);;
	{
		_2219b08e3_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _22294ea4b_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2229aecba__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2229bce60_isExcludingLatin(_222958c31_Letter,_7613_r);;
}



inline jule::Bool _2229bc37c_is16(jule::Slice<_2229ba7ba_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1c5e10e49:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_2229ba7ba_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c5e10e49:;
				++it;
				_19313_i++;
				goto _iter_begin_1c5e10e49;
			}
			_iter_end_1c5e10e49:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_2229ba7ba_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1c5e1091b:;
	}
	_iter_end_1c5e1091b:;;
	return false;;
}



inline jule::Bool _2229bc6bd_is32(jule::Slice<_2229bac3d_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1c5e1c20d:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_2229bac3d_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1c5e1c20d:;
				++it;
				_23013_i++;
				goto _iter_begin_1c5e1c20d;
			}
			_iter_end_1c5e1c20d:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_2229bac3d_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1c5e18ec9:;
	}
	_iter_end_1c5e18ec9:;;
	return false;;
}



inline jule::Bool _2229bce60_isExcludingLatin(jule::Ptr<_2229bb1b1_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_2229ba7ba_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _2229bc37c_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_2229bac3d_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _2229bc6bd_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _2229bd207_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2229aecba__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2229bce60_isExcludingLatin(_222960287_Upper,_29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _222a7cd55_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _222a7bc33_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_222a7c2b6_acceptRange _1969_accept = _222a7c5c4_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _222a7d174_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _222a7bc33_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_222a7c2b6_acceptRange _2439_accept = _222a7c5c4_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _222a7d41b_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_222a7ece1_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1c5e631bb;
			};
		}
	_iter_next_1c5e631bb:;
	}
	_iter_end_1c5e631bb:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _222a7e1b9_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _222a7e50a_appendRuneNonASCII(_40519_p,_40530_r);;
}



inline jule::Slice<jule::U8> _222a7e50a_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1c5e785dd:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1c5e76c29:;
			{
				_41242_r=128LL;
				goto _case_begin_1c5e76c90;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1c5e76c90:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1c5e76289:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1c5e76234:;
	};
}



inline jule::I64 _222a7ea49_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1c5e81b57;
			};
			jule::U8 _48213_x = _222a7bc33_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1c5e81b57;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1c5e81b57;
			};
			_222a7c2b6_acceptRange _49213_accept = _222a7c5c4_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1c5e81b57:;
	}
	_iter_end_1c5e81b57:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _222a7ece1_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _222aa0dcd_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();;
}



inline void _222aa64bb_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _222aa69b6_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1c5eab797:;
	}
	_iter_end_1c5eab797:;;
	return -1LL;;
}



inline jule::I64 _222aa6c3b_FindLastByteStr(jule::Str& _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_222aa69b6_FindLastByte(_222aa0dcd_Stobs(_6921_s),_6929_b));;
}



inline jule::Str _222a844bb_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1c5ec05d0:;
	}
	_iter_end_1c5ec05d0:;;
	return _2013_ss;;
}



inline jule::Bool _222a87876_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1c5ec3638:;
	}
	_iter_end_1c5ec3638:;;
	return true;;
}



inline jule::Bool _222a83b08_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _222a87876_hasPrefix(_4214_s,_4222_sub,0LL);;
}



inline jule::Bool _222aa6da1_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1c5ec565c:;
	}
	_iter_end_1c5ec565c:;;
	return true;;
}



inline jule::Bool _222aa7159_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _222aa6da1_hasSuffix(_6214_s,_6222_sub,0LL);;
}



inline jule::I64 _222aa7544_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_222a87876_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1c5ec973d:;
	}
	_iter_end_1c5ec973d:;;
	return -1LL;;
}



inline jule::I64 _222aa7d80_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1c5ecbc90;
					};
				}
			_iter_next_1c5ecd500:;
			}
			_iter_end_1c5ecd500:;;
			return _9413_j;;
		}
	_iter_next_1c5ecbc90:;
	}
	_iter_end_1c5ecbc90:;;
	return -1LL;;
}



inline jule::I64 _222aa8237_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_222aa7d80_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _222aae75a_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_17114_s.slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1c5ed5ded:;
	}
	_iter_end_1c5ed5ded:;;
	return -1LL;;
}



inline jule::I64 _222ab0096_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_222aa6c3b_FindLastByteStr(_19317_s,_19325_b));;
}



inline jule::I64 _222ab0daa_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _222aa0dcd_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _222aa0dcd_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_222aae75a_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1c5edb684:;
	}
	_iter_end_1c5edb684:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _222ab15d6_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _222aa7544_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1c5ee2a86;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1c5ee2a86:;
	}
	_iter_end_1c5ee2a86:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _222ab1927_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_222aa7544_FindAt(_29013_s,_29021_sub,0LL) != -1LL);;
}



inline jule::Bool _222ab23ea_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_222ab0daa_FindAny(_30616_s,_30624_runes) != -1LL);;
}



inline jule::I64 _222ab273b_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _222aa7544_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1c5ee8141;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1c5ee8141:;
	}
	_iter_end_1c5ee8141:;;
	return _31613_n;;
}



inline jule::Str _222ab2bc0_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _222ab273b_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _222aa7544_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1c5eebe69;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1c5eebe69:;
	}
	_iter_end_1c5eebe69:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _222aaec33_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_38818_s.slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_222aae75a_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1c5eeea82:;
	}
	_iter_end_1c5eeea82:;;
	_38818_s=nullptr;
}



inline jule::Str _222ab3c7b_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _222aa0dcd_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _222aa0dcd_Stobs(_40321_cutset);;
	_222aaec33_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _222ab4034_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7d41b_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_222aae75a_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1c60041e6:;
	}
	_iter_end_1c60041e6:;;
	_41019_s=nullptr;
}



inline jule::Str _222ab46b6_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _222aa0dcd_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _222aa0dcd_Stobs(_43417_cutset);;
	_222aaec33_trimLeft(_43513_bytes,_4369_bcutset);
	_222ab4034_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _222ab4a07_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c6008ae1:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c6008b57:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1c600877d:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1c6009bad:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1c6009bad:;
			++it;
			goto _iter_begin_1c6009bad;
		}
		_iter_end_1c6009bad:;
	};
	return _45113_s;;
}



inline jule::Str _221b136e4_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _222ab50ac_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _222ab4d48_IsPathSep(_1099_originalPath[0LL])) && _222ab4d48_IsPathSep(_1099_originalPath[1LL]))) {
			return _221b3302c_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _222ab4d48_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_221ade318_lazyBuff _12713_out = _221ade318_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_221aed0b3_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_222ab4d48_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1c60187c1:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _222ab4d48_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1c601b494:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _222ab4d48_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1c601b50a:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1c601e3dc:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_222ab4d48_IsPathSep(static_cast<jule::U8>(_221aea786_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1c601ed5a:;
									}
									_iter_end_1c601ed5a:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1c601e453:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_221aed0b3_append(&_12713_out, 47LLU);
									};
									_221aed0b3_append(&_12713_out, '.');
									_221aed0b3_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1c601e057:;
						};
					}
				}
				else {
					_case_begin_1c6016c53:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_221aed0b3_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_222ab4d48_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_221aed0b3_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1c6018282:;
						}
						_iter_end_1c6018282:;;
					}
				}
				_match_end_1c6016a22:;
			};
		}
	_iter_next_1c6016ba9:;
	}
	_iter_end_1c6016ba9:;;
	if ((_12713_out._field_w == 0LL)) {
		_221aed0b3_append(&_12713_out, '.');
	};
	return _221b3302c_FromSlash(_221aee8de_string(&_12713_out));;
}



inline jule::Str _221b3302c_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _221b355c3_Join(jule::Slice<jule::Str> _2259_elem) {
	return _222ab5321_join(_2259_elem);;
}



inline jule::Str _221b36a8b_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_222ab4d48_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1c6023a62:;
	}
	_iter_end_1c6023a62:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _221aeeceb_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _222ab51de_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _221b1ad8e_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _222ab4d48_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1c6026081:;
	}
	_iter_end_1c6026081:;;
	(_25413_path).mut_slice(_221ade505_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_222ab4d48_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1c602789b:;
	}
	_iter_end_1c602789b:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _221b39132_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _221ade505_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_222ab4d48_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1c6029bbc:;
	}
	_iter_end_1c6029bbc:;;
	jule::Str _2919_dir = _221b136e4_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _221ade505_VolumeName(jule::Str _30315_path) {
	return _221b3302c_FromSlash(_30315_path.slice(0LL,_222ab50ac_volumeNameLen(_30315_path)));;
}



inline jule::Bool _222ab4d48_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _222ab4e7a_IsAbs(jule::Str _5310_path) {
	return _222a83b08_HasPrefix(_5310_path,jule::Str("/", 1));;
}



inline jule::I64 _222ab50ac_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _222ab51de_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_222ab4e7a_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _221b136e4_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _221aa639b_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _222ab5321_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _222ab5321_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1c6033885:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _221b136e4_Clean(_222ab4a07_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1c6033885:;
			++it;
			_749_i++;
			goto _iter_begin_1c6033885;
		}
		_iter_end_1c6033885:;
	};
	return jule::Str();;
}



inline jule::I64 _220c31add_getLastFsError(void) {
	jule::I64 _729_err = _220c076da_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c604191a:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c6040d9d:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1c6041310:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c6041376:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c60413dc:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c6041453:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1c6041a3b:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c6041aa2:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c6041b18:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c6041b7e:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c6041c06:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c6041c7d:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c6041d05:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c6041d7c:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c6041e04:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1c6041e7b:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c6042003:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c604207a:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c6042102:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1c6042179:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c6042201:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c6042278:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c6042300:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c6042377:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c60423ee:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1c6042476:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1c60424ed:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1c6042575:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1c6041167:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1c6041112:;
	};
}



inline jule::I64 _222b834ee_getLastProcessError(void) {
	jule::I64 _429_err = _220c076da_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c60683c0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1c6067864:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c6067cb5:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c6067d3c:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c6067db4:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c6067e3b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c6068117:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c606818e:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1c6068216:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1c606828d:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1c60684e1:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else {
			_case_begin_1c6067b1c:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1c6067ab7:;
	};
}



inline jule::Slice<char*> _222b866bc_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1c6079403:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1c6079403:;
			++it;
			_229_i++;
			goto _iter_begin_1c6079403;
		}
		_iter_end_1c6079403:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;;
}



inline jule::I64 _222b86b1d_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _222b866bc_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));;
	};
}



inline jule::I64 _222b87008_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _222b866bc_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _222b866bc_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));;
	};
}



inline void _222b87b1e_Exit(jule::I64 _129_code) {
	_221a072ca_Exit(_129_code);
}



inline jule::Str _222b87d1c_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _222b2ba19_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _222b2bc39_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _220b9606e_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1c60b04e4:;
		if (it != expr.end()) {
			jule::Str &_3212_validExt = *it;
			{
				if ((_3121_ext == _3212_validExt)) {
					return true;;
				};
			}
			_iter_next_1c60b04e4:;
			++it;
			goto _iter_begin_1c60b04e4;
		}
		_iter_end_1c60b04e4:;
	};
	return false;;
}



inline jule::Bool _222b2bed1_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto &expr = _222b29cc0_CppExts;
		auto it = expr.begin();
		_iter_begin_1c60b0d52:;
		if (it != expr.end()) {
			jule::Str &_4512_e = *it;
			{
				if ((_4118_ext == _4512_e)) {
					return true;;
				};
			}
			_iter_next_1c60b0d52:;
			++it;
			goto _iter_begin_1c60b0d52;
		}
		_iter_end_1c60b0d52:;
	};
	{
		auto &expr = _222b2b91a_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1c60b2161:;
		if (it != expr.end()) {
			jule::Str &_5012_e = *it;
			{
				if ((_4118_ext == _5012_e)) {
					return true;;
				};
			}
			_iter_next_1c60b2161:;
			++it;
			goto _iter_begin_1c60b2161;
		}
		_iter_end_1c60b2161:;
	};
	return false;;
}



inline jule::Str _222b39032_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _222b3994a_applyFmt(_3009_fmt,_30022_args);;
}



inline jule::Str _222b3931d_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c60b35b3:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c60b3629:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type133));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c60b33a4:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type2));;
			}
		}
		else {
			_case_begin_1c60b2e75:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1c60b2c88:;
	};
}



inline jule::I64 _222b395b5_findNextFmt(jule::Str _31716_fmt) {
	{
		auto &expr = _31716_fmt;
		auto it = expr.begin();
		_iter_begin_1c60b3cde:;
		if (it != expr.end()) {
			jule::I64 _3189_i = it - expr.begin();
			jule::U8 &_31812_b = *it;
			{
				if ((_31812_b == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1c60b3cde:;
			++it;
			_3189_i++;
			goto _iter_begin_1c60b3cde;
		}
		_iter_end_1c60b3cde:;
	};
	return -1LL;;
}



inline jule::Str _222b3994a_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto &expr = _32627_args;
		auto it = expr.begin();
		_iter_begin_1c60b59e4:;
		if (it != expr.end()) {
			jule::Any &_32812_arg = *it;
			{
				jule::I64 _32913_i = _222b395b5_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1c60b59e4;
				};
				_32713_s+=_32617_fmt.slice(0LL,_32913_i);
				_32713_s+=_222b3931d_argToStr(_32812_arg);
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1c60b59e4:;
			++it;
			goto _iter_begin_1c60b59e4;
		}
		_iter_end_1c60b59e4:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _222b3a9c3_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _222b3be03_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _222b3c1ab_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _222b3c453_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _222b3c772_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _222b3ca19_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _222b3ccb1_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _222b3d058_IsUnix(jule::Str _5511_os) {
	return (_222b3c1ab_IsDarwin(_5511_os) || _222b3c453_IsLinux(_5511_os));;
}



inline jule::Bool _222b3d3cc_Is32Bit(jule::Str _5812_arch) {
	return _222b3c772_IsI386(_5812_arch);;
}



inline jule::Bool _222b3d674_Is64Bit(jule::Str _6112_arch) {
	return (_222b3ca19_IsAmd64(_6112_arch) || _222b3ccb1_IsArm64(_6112_arch));;
}



inline void _222b73214_init(void) {
	jule::Str _2513_path = _222b87d1c_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_222b73be8_PathWd=({
			auto except = _221aa639b_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_222b729c7_PathExec=_221b39132_Dir(_2513_path);
		_222b72147_PathStdlib=_221b355c3_Join(jule::Slice<jule::Str>::make({_222b729c7_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_222b82564_PathApi=_221b355c3_Join(jule::Slice<jule::Str>::make({_222b729c7_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _222e62921_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _222db18c5_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1c610e961:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;;
				};
			}
			_iter_next_1c610e961:;
			++it;
			goto _iter_begin_1c610e961;
		}
		_iter_end_1c610e961:;
	};
	return false;;
}



inline jule::Bool _222e62c0c_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _222db1b28_BinOps;
		auto it = expr.begin();
		_iter_begin_1c610ee06:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;;
				};
			}
			_iter_next_1c610ee06:;
			++it;
			goto _iter_begin_1c610ee06;
		}
		_iter_end_1c610ee06:;
	};
	return false;;
}



inline jule::Bool _222e632c3_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _222e6356a_IsRawStr(_34210_k)));;
}



inline jule::Bool _222e6356a_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _222e63812_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _222e63e2d_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _222e641c5_IsFloat(jule::Str _35812_k) {
	if (_222a83b08_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _222ab23ea_ContainsAny(_35812_k,jule::Str(".pP", 3));;
	};
	return _222ab23ea_ContainsAny(_35812_k,jule::Str(".eE", 3));;
}



inline jule::Bool _222e6446c_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _222e649ab_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _222e64c53_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _222e65292_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _222db16a5_Spaces;
		auto it = expr.begin();
		_iter_begin_1c611885a:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;;
				};
			}
			_iter_next_1c611885a:;
			++it;
			goto _iter_begin_1c611885a;
		}
		_iter_end_1c611885a:;
	};
	return false;;
}



inline jule::Bool _222e656e3_IsLetter(jule::I32 _40713_r) {
	return _22294ea4b_IsLetter(_40713_r);;
}



inline jule::Bool _222e65c32_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _222e65ec9_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _222e66271_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _222e66518_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1c611d61d:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1c611ce47:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1c611cead:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c611cdd1:;
			{
				return false;;
			}
		}
		_match_end_1c611cd15:;
	};
}



inline jule::Bool _222e667b0_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _222e66a57_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _222e5b71c_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1c6121973:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;;
				};
			}
			_iter_next_1c6121973:;
			++it;
			goto _iter_begin_1c6121973;
		}
		_iter_end_1c6121973:;
	};
	return false;;
}



inline jule::Bool _222e66cee_IsAssignOp(jule::Str _47215_kind) {
	if (_222e66a57_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto &expr = _222e5ba19_AssignOps;
		auto it = expr.begin();
		_iter_begin_1c6122b72:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;;
				};
			}
			_iter_next_1c6122b72:;
			++it;
			goto _iter_begin_1c6122b72;
		}
		_iter_end_1c6122b72:;
	};
	return false;;
}



inline jule::Ptr<_222e675a2_File> _222e68ad1_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_222e675a2_File>(_222e675a2_File{._field_Path=_6315_path, });;
}



inline _222b38ae2_Log _222e6a374_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_222e675a2_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_222b39032_Logf(_11143_fmt,_11156_args), };;
}



inline jule::Bool _222e6a709_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1c612ca39:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1c612ca39:;
			++it;
			_1259_i++;
			goto _iter_begin_1c612ca39;
		}
		_iter_end_1c612ca39:;
	};
	return true;;
}



inline jule::Str _222e6aa4a_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return __jule_func_result;;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_222e65c32_IsDecimal(_13913_b))))) {
				goto _iter_end_1c6130ed2;
			};
		}
	_iter_next_1c6130ed2:;
	}
	_iter_end_1c6130ed2:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return __jule_func_result;;
}



inline jule::Str _222e6add0_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _222e6aa4a_floatFmtE(_16715_txt,_16728_i);;
}



inline jule::Str _222e6b221_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _222e65c32_IsDecimal(_17913_b)) {
					_case_begin_1c6133d3c:;
					{
						goto _iter_next_1c61331d2;
					}
				}
				else if (_222e6c9c5_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1c6133da3:;
					{
						return _222e6add0_floatFmtP(_17119_txt,_17136_i);;
					}
				}
				else {
					_case_begin_1c6133cc6:;
					{
						goto _iter_end_1c61331d2;
					}
				}
				_match_end_1c6133c60:;
			};
		}
	_iter_next_1c61331d2:;
	}
	_iter_end_1c61331d2:;;
	return jule::Str();;
}



inline jule::Str _222e6b562_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _222e6aa4a_floatFmtE(_19219_txt,_19236_i);;
}



inline jule::Str _222e6b8a3_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _222e6aa4a_floatFmtE(_19718_txt,_19735_i);;
}



inline jule::Str _222e6bd04_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		__jule_func_result = static_cast<jule::Str>(_20214_txt);
		return __jule_func_result;;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _222e6aa4a_floatFmtE(_20214_txt,_20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_222e65c32_IsDecimal(_21213_b))))) {
				goto _iter_end_1c61366be;
			};
		}
	_iter_next_1c61366be:;
	}
	_iter_end_1c61366be:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return __jule_func_result;;
}



inline jule::Str _222e6c09b_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1c613a63a:;
					{
						__jule_func_result = _222e6bd04_floatNum(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1c613a6b2:;
					{
						goto _iter_next_1c6139947;
					}
				}
				else if (_222e6c684_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1c613a739:;
					{
						__jule_func_result = _222e6aa4a_floatFmtE(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_222e65c32_IsDecimal(_23113_b)))) {
					_case_begin_1c613a7b1:;
					{
						goto _iter_end_1c6139947;
					}
				}
				_match_end_1c613a55d:;
			};
		}
	_iter_next_1c6139947:;
	}
	_iter_end_1c6139947:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return __jule_func_result;;
}



inline jule::Str _222e6c343_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_222e6a709_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_25015_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_222e65ec9_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1c613c043;
			};
		}
	_iter_next_1c613c043:;
	}
	_iter_end_1c613c043:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return __jule_func_result;;
}



inline jule::Bool _222e6c684_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _222e6c9c5_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _222e6cd16_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _222e65c32_IsDecimal(_28713_b)) {
					_case_begin_1c6142e6c:;
					{
						goto _iter_next_1c6141c7e;
					}
				}
				else if (_222e6c9c5_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1c6142ed3:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c6142e06:;
					{
						goto _iter_end_1c6141c7e;
					}
				}
				_match_end_1c6142d90:;
			};
		}
	_iter_next_1c6141c7e:;
	}
	_iter_end_1c6141c7e:;;
	return false;;
}



inline jule::Bool _222e6d157_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1c6144b61:;
			{
				goto _case_begin_1c614448a;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1c614448a:;
			{
				goto _case_begin_1c6144501;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1c6144501:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c6144424:;
			{
				return true;;
			}
		}
		_match_end_1c6144358:;
	};
}



inline jule::Bool _222e6d498_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1c6146e60:;
			{
				goto _case_begin_1c614679a;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1c614679a:;
			{
				goto _case_begin_1c6146811;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1c6146811:;
			{
				goto _case_begin_1c6146877;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1c6146877:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c6146338:;
			{
				return true;;
			}
		}
		_match_end_1c614626c:;
	};
}



inline jule::Str _222e6d8e9_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str __jule_func_result;
	if ((_32914_txt[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_32914_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _222e6bd04_floatNum(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (_222e6c684_isFloatFmtE(_35013_b,_34813_i)) {
				__jule_func_result = _222e6aa4a_floatFmtE(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_222e66271_IsOctal(_35013_b))))) {
				goto _iter_end_1c614aea8;
			};
		}
	_iter_next_1c614aea8:;
	}
	_iter_end_1c614aea8:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return __jule_func_result;;
}



inline jule::Str _222e6db91_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str __jule_func_result;
	if ((_37112_txt.len() < 3LL)) {
		return __jule_func_result;;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_222e6d157_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1c6151ec0:;
					{
						__jule_func_result = _222e6b8a3_floatFmtDotp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_222e6d498_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1c6152047:;
					{
						__jule_func_result = _222e6b562_floatFmtDotfp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_222e6c9c5_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1c61520be:;
					{
						__jule_func_result = _222e6add0_floatFmtP(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_222e6cd16_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1c6152146:;
					{
						__jule_func_result = _222e6b221_floatFmtDotnp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_222e66518_IsHex(_38313_b))))) {
					_case_begin_1c61521bd:;
					{
						goto _iter_end_1c6151211;
					}
				}
				_match_end_1c6151dd2:;
			};
		}
	_iter_next_1c6151211:;
	}
	_iter_end_1c6151211:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return __jule_func_result;;
}



inline jule::Str _222e6ded2_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if ((_40415_txt.len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_222e66518_IsHex(_40415_txt[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c6154896:;
	}
	_iter_end_1c6154896:;;
	__jule_func_result=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return __jule_func_result;;
}



inline jule::Str _222e6e279_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _222e6ded2_hexEscape(_42227_txt,10LL);;
}



inline jule::Str _222e6e543_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _222e6ded2_hexEscape(_42730_txt,6LL);;
}



inline jule::Str _222e6e6ec_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _222e6ded2_hexEscape(_43219_txt,4LL);;
}



inline jule::Str _222e6e983_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str __jule_func_result;
	if ((_43716_txt.len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_222e66271_IsOctal(_43716_txt[1LL]))) || (!(_222e66271_IsOctal(_43716_txt[2LL])))) || (!(_222e66271_IsOctal(_43716_txt[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return __jule_func_result;;
}



inline jule::Slice<_222b38ae2_Log> _222e7447c_Lex(jule::Ptr<_222e675a2_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_222e7016a_lex _83113_lex = _222e7016a_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_222e72c0b_newLine(&_83113_lex);
	_222e70c09_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1dd95459b_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1dd95ba26_Len64(_6119_x)));;
}



inline jule::I64 _1dd9554d1_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1dd95616e_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1dd955dc7_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dd954ba6__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1dd95616e_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1dd95526c__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1dd95b77e_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1dd95ba26_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dd95c6d6_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dd95dd69_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _2174cb814_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2174cbb00_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2174cbd97_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2174cc1b6_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2174ce6a2_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c62cea21:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dd962eb1_IsInf(_4714_f,0LL) || _1dd962c4c_IsNaN(_4714_f)) {
			_case_begin_1c62cea98:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c62ce911:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dd9630e3_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _2174cbd97_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2174cc1b6_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1dd962b1a_NaN(void) {
	return static_cast<jule::F64>(_2174cc1b6_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1dd962c4c_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1dd962d7e_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2174cc1b6_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2174cc1b6_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1dd962eb1_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dd9630e3_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dd9645cd_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dd963eb2_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dd962c4c_IsNaN(_1118_x) || _1dd962eb1_IsInf(_1118_x,1LL)) {
			_case_begin_1c6320b72:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c6320be9:;
			{
				return static_cast<jule::F64>(_1dd962b1a_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c6320c71:;
			{
				return static_cast<jule::F64>(_1dd962d7e_Inf(-1LL));;
			}
		}
		_match_end_1c6320aa6:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2174ce6a2_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1dd9645cd_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2174cc1b6_F64FromBits(static_cast<jule::U64>((_2174cbd97_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dd96837e_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1dd9645cd_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1c6391044:;
		}
		_iter_end_1c6391044:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1dd9687be_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2174ce6a2_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1dd963eb2_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _2173c163d_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_21740e967_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1dd990e01_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));;
}



inline jule::Slice<jule::U8> _21740e967_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_217444606_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1c659c30a:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_2174cb814_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_217444606_floatInfo>)((&(_2173c3ad5_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c659c4d6:;
			{
				_8313_bits=static_cast<jule::U64>(_2174cbd97_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_217444606_floatInfo>)((&(_21745a7b5_f64info))));
			}
		}
		else {
			_case_begin_1c659bbde:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1c659a6b0:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1c65a0b27:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1c65a3069:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1c65a3212:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1c65a2112:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1c65a2046:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c65a1694:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1c659c54c:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1c65a0ac2:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1dd990a5a_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1dd990b8c_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	;
	_1dd9903b7_decimalSlice _13213_digs = _1dd9903b7_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1dd996005_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c65a6c2c:;
				{
					_8258_prec=static_cast<jule::I64>(_1dd990e01_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c65a6ca4:;
				{
					_8258_prec=static_cast<jule::I64>(_1dd990e01_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c65a6d3c:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1c65a60b1:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c65a8965:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c65a8ee8:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1c65a8de9:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1c65a8cb7:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dd994d5b_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1dd99529b_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _21740ec97_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	return _21745cb80_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);;
}



inline jule::Slice<jule::U8> _21740ec97_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _217444606_floatInfo& _18327_flt) {
	_1dd9999ed_decimal _18413_d = _1dd9999ed_decimal{};;
	_1dd999dc7_assign(&_18413_d, _1835_mant);
	_1dd99a14c_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1dd9903b7_decimalSlice _18713_digs = _1dd9903b7_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1dd9905a4_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1dd9903b7_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c65adea9:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c65b1660:;
				{
					_18233_prec=static_cast<jule::I64>(_1dd990e01_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c65b171a:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1c65b1396:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c65b308a:;
				{
					_1dd99a8bc_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c65b3112:;
				{
					_1dd99a8bc_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c65b3189:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1dd99a8bc_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1c65b2e69:;
		};
		_18713_digs=_1dd9903b7_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _21745cb80_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);;
}



inline jule::Slice<jule::U8> _21745cb80_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1dd9903b7_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c65b67ca:;
			{
				return _1dd9906d6_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c65b6841:;
			{
				return _1dd990818_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c65b68a7:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1dd9906d6_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1dd990818_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1dd990e01_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));;
			}
		}
		_match_end_1c65b6687:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1dd9905a4_roundShortest(_1dd9999ed_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _217444606_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1dd9999ed_decimal _28713_upper = _1dd9999ed_decimal{};;
	_1dd999dc7_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1dd99a14c_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1dd9999ed_decimal _30613_lower = _1dd9999ed_decimal{};;
	_1dd999dc7_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1dd99a14c_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1c65c4497;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1c65c9612:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1c65c9689:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1c65c9711:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1c65c9546:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1c65cc901:;
					{
						_1dd99a8bc_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1c65cc978:;
					{
						_1dd99a3c2_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1c65cca00:;
					{
						_1dd99a647_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1c65cc835:;
			};
		}
	_iter_next_1c65c4497:;
	}
	_iter_end_1c65c4497:;;
}



inline jule::Slice<jule::U8> _1dd9906d6_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1dd9903b7_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1dd990cbe_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1c65d0cde:;
		}
		_iter_end_1c65d0cde:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1c65d44da:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1c65d4a7e:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c65d472c:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c65d4919:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1dd990818_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1dd9903b7_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1dd990cbe_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1c65d8d5d:;
		}
		_iter_end_1c65d8d5d:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1c65da535:;
		}
		_iter_end_1c65da535:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1dd990a5a_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _217444606_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd99e805_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd99e805_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1dd990b8c_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _217444606_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1c65dd67b:;
	}
	_iter_end_1c65dd67b:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c65e6101:;
		}
		_iter_end_1c65e6101:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1c65e7982:;
		}
		_iter_end_1c65e7982:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1dd991451_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1c65e4cc0:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1c65e4b9e:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1c66001c6:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1c66003b3:;
	};
	return _50613_dst;;
}



inline jule::I64 _1dd990cbe_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1dd990e01_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1dd991451_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__2096d690b_ConvError _1dd991583_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__2096d690b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1c6607068:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1c6606e47:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1dd991451_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1c6608d6c:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dd991451_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1c6608b80:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1dd991451_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1c6608be6:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c66087d9:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1c660871d:;
					};
				};
			}
		}
		else {
			_case_begin_1c6606254:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c66061dd:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c660da53:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c660d16d:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c660d448:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1c660d2c2:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c660d536:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c660eb97:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c660d778:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1c6610ca8:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1c660ee0b:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1dd991451_lower(_10912_c)) && (_1dd991451_lower(_10912_c) <= 'z'))) {
						_case_begin_1c66120ea:;
						{
							_11017_d=static_cast<jule::U8>(((_1dd991451_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1c6611c21:;
						{
							goto _iter_next_1c6610ca8;
						}
					}
					else {
						_case_begin_1c6611baa:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c6611b44:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1c6610ca8:;
			++it;
			goto _iter_begin_1c6610ca8;
		}
		_iter_end_1c6610ca8:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dd9916b5_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd991583_parseUint(_14618_s,_14630_base,_14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1dd9917e7_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd991583_parseUint(_17217_s,_17225_base,_17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type134));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1dd991c37_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2174cc1b6_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1dd95459b_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_4122_man,_1dd99230e_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_4122_man,_1dd99230e_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2174cc1b6_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dd991d69_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2174cbb00_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1dd95459b_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_11022_man,_1dd99230e_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_11022_man,_1dd99230e_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_2174cbb00_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dd992e25_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1c66388e6:;
	}
	_iter_end_1c66388e6:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dd993057_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c663cca2:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1c663cd29;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c663cd29:;
			{
				jule::I64 _8317_caseN = _1dd992e25_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dd962d7e_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c663cda1:;
			{
				if ((_1dd992e25_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dd962b1a_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c663cbd6:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dd993189_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c6643923:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c664399a:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c66437d0:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1dd991451_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1c6649b16:;
					{
						goto _iter_next_1c6649066;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1c6649b8d:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1c6649066;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1c6649c15:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1c6649066;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c6649066;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1dd991451_lower(_13313_c))) && (_1dd991451_lower(_13313_c) <= 'f'))) {
					_case_begin_1c6649c8c:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dd991451_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c6649066;
					}
				}
				_match_end_1c6649a39:;
			};
			goto _iter_end_1c6649066;
		}
	_iter_next_1c6649066:;
	}
	_iter_end_1c6649066:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1dd991451_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c6654170;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1c6654170:;
		}
		_iter_end_1c6654170:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dd993cc2_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _21745a7b5_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1c665e0d1:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1c665e158:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dd993871_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1dd993871_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1c665e1d0:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1dd993871_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c665e015:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dd993e04_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _2173c3ad5_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1c6663cb7:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1c6663d3e:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dd993a91_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1dd993a91_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1c6663db6:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1dd993a91_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c6663beb:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__2096d690b_ConvError _1dd994036_atofHex(jule::Str _55112_s, _217444606_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__2096d690b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1c6668bbd:;
	}
	_iter_end_1c6668bbd:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c666aa6b:;
	}
	_iter_end_1c666aa6b:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1c666b53e:;
	}
	_iter_end_1c666b53e:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _2173c3ad5_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_2174cbb00_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2174cc1b6_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd994278_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd993057_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd993189_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd994036_atofHex(_61611_s.slice(0LL,__jule_func_result.__jule_result_arg1),_2173c3ad5_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd993e04_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd991d69_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd991d69_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dd9999ed_decimal _66213_d = _1dd9999ed_decimal{};;
	if ((!(_1dd9934db_set(&_66213_d, _61611_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dd99361d_floatBits(&_66213_d, _2173c3ad5_f32info);
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2174cbb00_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd9943aa_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd993057_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd993189_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd994036_atofHex(_67411_s.slice(0LL,__jule_func_result.__jule_result_arg1),_21745a7b5_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd993cc2_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd991c37_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd991c37_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dd9999ed_decimal _71913_d = _1dd9999ed_decimal{};;
	if ((!(_1dd9934db_set(&_71913_d, _67411_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dd99361d_floatBits(&_71913_d, _21745a7b5_f64info);
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2174cc1b6_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError _1dd9944dc_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd994278_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd9943aa_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dd99461e_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__2096d690b_ConvError __jule_assign_result = _1dd9944dc_parseFloatPrefix(_76515_s,_76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1dd994d5b_ryuFtoaFixed32(_1dd9903b7_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_4924_d._field_nd = ___jule_assign_arg;
			_4924_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1dd95b77e_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1dd99629c_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997996_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1dd9981c2_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1dd995a82_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1dd99529b_ryuFtoaFixed64(_1dd9903b7_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_12124_d._field_nd = ___jule_assign_arg;
			_12124_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1dd95ba26_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1dd99629c_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997d81_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1dd9981c2_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1dd995a82_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1dd995a82_formatDecimal(_1dd9903b7_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1dd9955cb_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c66a2553:;
	}
	_iter_end_1c66a2553:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1c66a6007:;
	}
	_iter_end_1c66a6007:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1c66abd32:;
	}
	_iter_end_1c66abd32:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1dd996005_ryuFtoaShortest(_1dd9903b7_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _217444606_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_26125_d._field_nd = ___jule_assign_arg;
			_26125_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dd95616e_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dd996ec3_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dd99692e_computeBounds(_26146_mant,_26157_exp,_26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1dd996ec3_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1dd99629c_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _2173c3ad5_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997996_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997996_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997996_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997d81_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997d81_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd997d81_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1dd9981c2_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1dd9981c2_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1dd9981c2_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1dd996ec3_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1dd99629c_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1dd996544_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dd99692e_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _217444606_floatInfo& _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1dd996ec3_ryuDigits(_1dd9903b7_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd998469_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd998469_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd998469_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1dd9975ab_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1dd9975ab_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1c66cbc97:;
		}
		_iter_end_1c66cbc97:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1dd9975ab_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1c66cc32a:;
	}
	_iter_end_1c66cc32a:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1c66cb99a:;
	}
	_iter_end_1c66cb99a:;;
}



inline void _1dd9975ab_ryuDigits32(_1dd9903b7_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1c66d295c;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c66d295c:;
	}
	_iter_end_1c66d295c:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1c66d9436:;
	}
	_iter_end_1c66d9436:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dd997996_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1dd99230e_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dd996544_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dd997d81_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1dd99230e_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dd996544_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_56220_m,_57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95dd69_Mul64(_56220_m,_57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dd95c6d6_Add64(_57910_l1,_58018_h0,0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dd9981c2_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1c66e8577:;
	}
	_iter_end_1c66e8577:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dd998469_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1dd99b1d6_trim(_1dd9999ed_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1c66ebb41:;
	}
	_iter_end_1c66ebb41:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1dd99b48e_rightShift(_1dd9999ed_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1c670046e:;
				}
				_iter_end_1c670046e:;;
				goto _iter_end_1c66ee0b6;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1c66ee0b6:;
	}
	_iter_end_1c66ee0b6:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1c6702c68:;
	}
	_iter_end_1c6702c68:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1c670473c:;
	}
	_iter_end_1c670473c:;;
	_46320_a._field_nd=_46513_w;
	_1dd99b1d6_trim(_46320_a);
}



inline jule::Bool _1dd99b901_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1c67075ca:;
	}
	_iter_end_1c67075ca:;;
	return false;;
}



inline void _1dd99bb76_leftShift(_1dd9999ed_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1dd999459_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1dd99b901_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1dd999459_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1c670ab83:;
	}
	_iter_end_1c670ab83:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1c670d724:;
	}
	_iter_end_1c670d724:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1dd99b1d6_trim(_53119_a);
}



inline jule::Bool _1dd99beb7_shouldRoundUp(_1dd9999ed_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return (_57819_a._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1dd99d5d4_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1dd99e030_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd99e805_fmtBits(nullptr,_6012_i,_6020_base,false,false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1dd99d969_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1dd99e030_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd99e805_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1dd99dc11_Itoa(jule::I64 _809_i) {
	return _1dd99d969_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);;
}



inline jule::Str _1dd99e030_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1dd99e2c7_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dd99e805_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1c674ba70:;
		}
		_iter_end_1c674ba70:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1dd99e2c7_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1dd9554d1_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1c675534d:;
		}
		_iter_end_1c675534d:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1c675ccc3:;
		}
		_iter_end_1c675ccc3:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1dd9a0c13_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c677713e:;
			{
				return _1dd9a0262_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c67771a5:;
			{
				return _1dd9a052b_SysUint;;
			}
		}
		else {
			_case_begin_1c677753a:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c67779e1:;
	};
}



inline jule::I64 _1dd9a0eaa_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1c6778a03:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1c6778a69:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1c6778591:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1c6778607:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1c677866d:;
			{
				return _1dd99eeed_BitSize;;
			}
		}
		else {
			_case_begin_1c67780b8:;
			{
				return -1LL;;
			}
		}
		_match_end_1c67784e7:;
	};
}



inline jule::Str _1dd9a12c9_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c677a98e:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c677aa05:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c677a7a2:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c677a818:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1c6778c45:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c677a4d8:;
	};
}



inline jule::Str _1dd9a1571_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c677be13:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c677be79:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c677bc15:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c677bc7b:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1c677b781:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c677b64e:;
	};
}



inline jule::Str _1dd9a1818_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c677d387:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c677d3ed:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1c677cc05:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c677cac3:;
	};
}



inline jule::Bool _1dd9a23b8_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1dd99461e_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dd9a2660_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c67833d1:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c6782534:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c678248a:;
	};
}



inline jule::I64 _1dd9a2907_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1c67842b1:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1c6784327:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1c678438d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c67839db:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c6783920:;
	};
}



inline jule::I64 _1dd9a2b9e_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1c67861c5:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1c678623b:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1c67862a2:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c6785614:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c6785229:;
	};
}



inline void _1dd9a2d14_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _222b49b58_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1c678733b:;
				{
					_1dd99eeed_BitSize=64LLU;
					_1dd9a0262_SysInt=jule::Str("i64", 3);
					_1dd9a052b_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1c67873b3:;
				{
					_1dd99eeed_BitSize=32LLU;
					_1dd9a0262_SysInt=jule::Str("i32", 3);
					_1dd9a052b_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1c6787281:;
		};
	};
}



inline void _1dd9a2e79_init(void) {
	_1dd9a2d14_UpdateTarget();
}



inline jule::F64 _1dd9a6cb3_Min(jule::Str _6112_k) {
	_6112_k=_1dd9a0c13_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c6789bce:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c6789c45:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c67896e5:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c678976c:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c67897e4:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c678986b:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c67875e4:;
			{
				return 0LL;;
			}
		}
		_match_end_1c67877ae:;
	};
}



inline jule::F64 _1dd9a709e_Max(jule::Str _8312_k) {
	_8312_k=_1dd9a0c13_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c678a196:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c678b296:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c678b30c:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c678b373:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c678b3ea:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c678b65e:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c678b6c5:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c678b74c:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c678b7c4:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c678b9d3:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c678adbc:;
			{
				return 0LL;;
			}
		}
		_match_end_1c678ad67:;
	};
}



inline jule::Bool _1dd9a7423_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _1dd9a770e_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1dd9a79a6_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _1dd9a7cc5_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _1dd9a806c_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _1dd9a8314_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1dd9a85ab_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1dd9a8930_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _1dd9a8bc7_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _1dd9a8e6e_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _1dd9a92b0_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c6794722:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c6795008:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c679506e:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c67949ec:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1c6794a63:;
			{
				return _1dd9a7423_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c6794ac9:;
			{
				return _1dd9a770e_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c6794b40:;
			{
				return _1dd9a79a6_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c6795118:;
			{
				return _1dd9a7cc5_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1c679517e:;
			{
				return _1dd9a806c_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c67951e5:;
			{
				return _1dd9a8314_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c679525b:;
			{
				return _1dd9a85ab_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c67952c2:;
			{
				return _1dd9a8930_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c6795338:;
			{
				return _1dd9a8bc7_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c67953b0:;
			{
				return _1dd9a8e6e_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1c6795437:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1c67954ae:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1c67948dc:;
			{
				return false;;
			}
		}
		_match_end_1c67947aa:;
	};
}



inline jule::Bool _1dd9a9557_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _1dd9a97ee_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1dd9a9a96_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _1dd9a9d3d_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _1dd9aa28e_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1dd9aa536_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1dd9aa7cd_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _1dd9aaa75_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1dd9aadb6_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1c6795a75:;
			{
				return _1dd9abdea_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1c679d0cc:;
			{
				return _1dd9ac1d6_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1c679d143:;
			{
				return _1dd9ac1d6_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1c679d1a9:;
			{
				return _1dd9a9557_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1c679cd02:;
			{
				return _1dd9a97ee_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1c679cd68:;
			{
				return _1dd9a9a96_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1c679cdce:;
			{
				return _1dd9a9d3d_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1c679ce45:;
			{
				return _1dd9aa28e_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1c679d3da:;
			{
				return _1dd9aa536_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1c679d451:;
			{
				return _1dd9aa7cd_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1c679d4b7:;
			{
				return _1dd9aaa75_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1c679d53e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c679cb8c:;
			{
				return false;;
			}
		}
		_match_end_1c679cae3:;
	};
}



inline jule::Bool _1dd9abdea_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _1dd9ac1d6_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _1dd9ac47d_IsInt(jule::Str _4610_k) {
	return (_1dd9abdea_IsSigInt(_4610_k) || _1dd9ac1d6_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1dd9ac79c_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _1dd9aca44_IsNum(jule::Str _5610_k) {
	return (_1dd9ac47d_IsInt(_5610_k) || _1dd9ac79c_IsFloat(_5610_k));;
}



inline jule::Bool _1dd9accdb_IsSigNum(jule::Str _6113_k) {
	return (_1dd9abdea_IsSigInt(_6113_k) || _1dd9ac79c_IsFloat(_6113_k));;
}



inline void _1dd9b6773_lshiftUnsig(_1dd9ad050_Const& _59021_c, _1dd9ad050_Const& _59032_x) {
	jule::U64 _5919_l = _1dd9b07c2_AsU64(&_59021_c);;
	jule::U64 _5929_r = _1dd9b07c2_AsU64(&_59032_x);;
	_1dd9b1031_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1dd9b6a70_rshiftUnsig(_1dd9ad050_Const& _59621_c, _1dd9ad050_Const& _59632_x) {
	jule::U64 _5979_l = _1dd9b07c2_AsU64(&_59621_c);;
	jule::U64 _5989_r = _1dd9b07c2_AsU64(&_59632_x);;
	_1dd9b1031_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1dda59e32_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1dda5a0a8_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1dda72994_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1dda720e2_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1dda723de_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1dda72cd5_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_222a7e1b9_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1c6819b93:;
	}
	_iter_end_1c6819b93:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1dda72686_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c681e15e:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c681e1c5:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c681e23b:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c681e2a2:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c681e329:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c681e3a1:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c681e428:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c681e4a0:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c681e527:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c681e59e:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c681e03d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1dda72994_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1dda72686_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1c6825220:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1dd9916b5_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c6824ab0:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1dd9916b5_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c6824b26:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dd9916b5_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1c68233b6:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1dd9916b5_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1c68237a1:;
	};
}



inline jule::Slice<jule::U8> _1dda72cd5_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1dda72994_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1ddb69096_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_1022_bytes.slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1c6859584:;
	}
	_iter_end_1c6859584:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ddb6eb90_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7cd55_DecodeRune(_2737_bytes.slice(_2724_i));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1c685c136:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c685c19c:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);;
						};
					}
				}
				_match_end_1c685bd28:;
			};
		}
	_iter_next_1c685b3ee:;
	}
	_iter_end_1c685b3ee:;;
	return nullptr;;
}



inline void _1ddb6ee48_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c685d126:;
			{
				_4722_buf+=_2173c163d_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.cast<jule::F32>(&__jule_any_type135))),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c685ddb3:;
			{
				_4722_buf+=_2173c163d_FmtFloat(static_cast<jule::F64>(_4733_arg.cast<jule::F64>(&__jule_any_type7)),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c685e06c:;
			{
				_4722_buf+=_1dd99d969_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I8>(&__jule_any_type136)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c685d1ae:;
			{
				_4722_buf+=_1dd99d969_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I16>(&__jule_any_type137)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c685d9d9:;
			{
				_4722_buf+=_1dd99d969_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I32>(&__jule_any_type2)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c685da50:;
			{
				_4722_buf+=_1dd99d969_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I64>(&__jule_any_type3)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c685e0e4:;
			{
				_4722_buf+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U8>(&__jule_any_type133)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1c685e15a:;
			{
				_4722_buf+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U16>(&__jule_any_type138)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1c685e1c1:;
			{
				_4722_buf+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U32>(&__jule_any_type139)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c685e237:;
			{
				_4722_buf+=_1dd99d5d4_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U64>(&__jule_any_type4)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c685e29d:;
			{
				_4722_buf+=_4733_arg.cast<jule::Str>(&__jule_any_type6);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c685e314:;
			{
				if (_4733_arg.cast<jule::Bool>(&__jule_any_type5)) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1c685d885:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1c685c620:;
	};
}



inline void _1ddb70322_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_1ddb6ee48_FmtByDefault(_8627_buf,_879_arg);
}



inline void _1ddb7071d_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_1ddb70322_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if ((((((_9418_fmt.len() == 4LL) && (_9418_fmt[0LL] == '{')) && (_9418_fmt[1LL] == '{')) && (_9418_fmt[2LL] == '}')) && (_9418_fmt[3LL] == '}'))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_222aa64bb_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _1ddb70a2b_Format(jule::Str& _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return _11312_fmt;;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _222aa0dcd_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, _11312_fmt.len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1ddb69096_findFormatPrefix(_11713_fmtBytes,_12013_last);;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1ddb69096_findFormatPrefix(_11713_fmtBytes,_12113_i))) {
		{
			_222aa64bb_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last,_12113_i));
			jule::Slice<jule::U8> _12417_format = _1ddb6eb90_getFormatRange(_12113_i,_11713_fmtBytes);;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1c686a95d;
			};
			_1ddb7071d_applyFmt(_12417_format,_11813_buf,_11913_j,_11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_222aa64bb_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1c686a95d;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1c686a95d:;
	}
	_iter_end_1c686a95d:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_222aa64bb_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1ddb71345_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1ddb70a2b_Format(_3011_fmt,_3021_args);;
}



inline jule::Bool _1dd9cc3d2_parameterUsesGenerics(jule::Ptr<_1dd9c9401_ParamIns>& _37431_p, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>& _37446_generics) {
	if (_1dd9c640e_IsSelf(_37431_p.get()._field_Decl.ptr())) {
		return false;;
	};
	return _1ddacc0d6_kindUsesGenerics(_37431_p.get()._field_Kind,_37446_generics);;
}



inline jule::Ptr<_1ddab97aa_TypeSymbol> _1dd9ce901_buildType(jule::Ptr<_2090b9157_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1dda8a4c3_Value> _1dd9cebdc_buildExpr(jule::Ptr<_2090bd678_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dd9cee84_buildTypeAlias(jule::Ptr<_2090d0426_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1dd9ce901_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_2090a98a6_Field> _1dd9d02a3_buildField(jule::Ptr<_2090d3abc_FieldDecl> _12319_decl) {
	return jule::new_ptr<_2090a98a6_Field>(_2090a98a6_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1dd9ce901_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_2090a98a6_Field>> _1dd9d054a_buildFields(jule::Slice<jule::Ptr<_2090d3abc_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_2090a98a6_Field>> _13513_fields = jule::Slice<jule::Ptr<_2090a98a6_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1c6abcbe3:;
		if (it != expr.end()) {
			jule::Ptr<_2090d3abc_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1dd9d02a3_buildField(_13617_decl));;
			}
			_iter_next_1c6abcbe3:;
			++it;
			goto _iter_begin_1c6abcbe3;
		}
		_iter_end_1c6abcbe3:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_2090d5849_Struct> _1dd9d07e2_buildStruct(jule::Ptr<_2090d4370_StructDecl> _14220_decl) {
	return jule::new_ptr<_2090d5849_Struct>(_2090d5849_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1dd9d054a_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1dd9c5cd2_Param> _1dd9d0a89_buildParam(jule::Ptr<_2090c97b6_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1dd9ce901_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1dd9c5cd2_Param>> _1dd9d0e0d_buildParams(jule::Slice<jule::Ptr<_2090c97b6_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1dd9c5cd2_Param>> _16613_params = jule::Slice<jule::Ptr<_1dd9c5cd2_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1c6ac08d8:;
		if (it != expr.end()) {
			jule::Ptr<_2090c97b6_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1dd9d0a89_buildParam(_16717_decl));;
			}
			_iter_next_1c6ac08d8:;
			++it;
			goto _iter_begin_1c6ac08d8;
		}
		_iter_end_1c6ac08d8:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1dd9c560b_RetType> _1dd9d11a5_buildRetType(jule::Ptr<_2090bc26a_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1dd9c560b_RetType>(_1dd9c560b_RetType{._field_Kind=_1dd9ce901_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dd9d144c_buildFn(jule::Ptr<_2090caad6_FnDecl> _18316_decl) {
	return jule::new_ptr<_1dd9c761e_Fn>(_1dd9c761e_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1dd9d11a5_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1dd9d0e0d_buildParams(_18316_decl.get()._field_Params), });;
}



inline jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _1dd9d16e4_buildMethods(jule::Slice<jule::Ptr<_2090caad6_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1dd9c761e_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1dd9c761e_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1c6ac42d2:;
		if (it != expr.end()) {
			jule::Ptr<_2090caad6_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1dd9d144c_buildFn(_20317_decl));;
			}
			_iter_next_1c6ac42d2:;
			++it;
			goto _iter_begin_1c6ac42d2;
		}
		_iter_end_1c6ac42d2:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dd9d198b_buildTrait(jule::Ptr<_2090d497a_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1dd9d9521_Trait>(_1dd9d9521_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1dd9d16e4_buildMethods(_20919_decl.get()._field_Methods), });;
}



inline jule::Ptr<_1dd9dab71_EnumItem> _1dd9d1c33_buildEnumItem(jule::Ptr<_2090d1c85_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1dd9dab71_EnumItem>(_1dd9dab71_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1dd9cebdc_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>> _1dd9d1eca_buildEnumItems(jule::Slice<jule::Ptr<_2090d1c85_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1dd9dab71_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1c6ac6702:;
		if (it != expr.end()) {
			jule::Ptr<_2090d1c85_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1dd9d1c33_buildEnumItem(_22817_decl));;
			}
			_iter_next_1c6ac6702:;
			++it;
			goto _iter_begin_1c6ac6702;
		}
		_iter_end_1c6ac6702:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1dd9db666_Enum> _1dd9d2272_buildEnum(jule::Ptr<_2090d27ad_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1dd9db666_Enum>(_1dd9db666_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1dd9ce901_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1dd9d1eca_buildEnumItems(_23418_decl.get()._field_Items)});;
}



inline jule::Ptr<_1dd9dc69a_TypeEnumItem> _1dd9d26c3_buildTypeEnumItem(jule::Ptr<_2090d32b4_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1dd9dc69a_TypeEnumItem>(_1dd9dc69a_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1dd9ce901_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>> _1dd9d296a_buildTypeEnumItems(jule::Slice<jule::Ptr<_2090d32b4_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1dd9dc69a_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1c6ac8da8:;
		if (it != expr.end()) {
			jule::Ptr<_2090d32b4_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1dd9d26c3_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1c6ac8da8:;
			++it;
			goto _iter_begin_1c6ac8da8;
		}
		_iter_end_1c6ac8da8:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dd9d2c12_buildTypeEnum(jule::Ptr<_2090d38be_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1dd9dcc61_TypeEnum>(_1dd9dcc61_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1dd9d296a_buildTypeEnumItems(_26022_decl.get()._field_Items)});;
}



inline jule::Ptr<_1dda418db_Var> _1dd9d2ea9_buildVar(jule::Ptr<_2090cbab5_VarDecl> _26917_decl) {
	return jule::new_ptr<_1dda418db_Var>(_1dda418db_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1dd9ce901_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1dd9cebdc_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1dd9cd4c1_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1dda418db_Var>> _1dd9d3251_buildVars(jule::Slice<jule::Ptr<_2090cbab5_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1dda418db_Var>> _28713_vars = jule::Slice<jule::Ptr<_1dda418db_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1c6acbd34:;
		if (it != expr.end()) {
			jule::Ptr<_2090cbab5_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1dd9d2ea9_buildVar(_28817_decl));;
			}
			_iter_next_1c6acbd34:;
			++it;
			goto _iter_begin_1c6acbd34;
		}
		_iter_end_1c6acbd34:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1dd9e21c7_Impl> _1dd9d34e8_buildImpl(jule::Ptr<_2090d5085_Impl> _29418_decl) {
	return jule::new_ptr<_1dd9e21c7_Impl>(_1dd9e21c7_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1dd9d16e4_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1dd9d3251_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1dd9e156c_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1ddab53cc_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1c6b34d48:;
			{
				jule::Ptr<_1ddaba129_Prim> _14513_prim = _1ddab7764_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1dd9accdb_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1c6b347d7:;
			{
				jule::Ptr<_1ddaba129_Prim> _15113_prim = _1ddab7764_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1dd9ac1d6_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1c6b34aa1:;
			{
				jule::Ptr<_1ddaba129_Prim> _15713_prim = _1ddab7764_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1dd9ac79c_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1c6b34b28:;
			{
				jule::Ptr<_1ddaba129_Prim> _16313_prim = _1ddab7764_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1dd9aca44_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1c6b34ba0:;
			{
				return _1ddab6a4e_Mutable(_14234_g.ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1c6b34870:;
			{
				return (!(_1ddab6a4e_Mutable(_14234_g.ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1c6b348d6:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1c6b3495d:;
			{
				jule::Ptr<_1ddaba129_Prim> _17513_prim = _1ddab7764_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1dd9aca44_IsNum(_17513_prim.get()._field_Kind) || _1ddabd35d_IsStr(_17513_prim.ptr()));;
				};
				if ((_1ddab7c3c_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_2090d5c23_StructIns> _18213_s = _1ddab8bb6_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1dd9db666_Enum> _18913_enm = _1ddab7ea1_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1dd9aca44_IsNum(_1ddab57c8_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c6b33c04:;
			{
				return false;;
			}
		}
		_match_end_1c6b33b5a:;
	};
}



inline jule::Bool _1dd9e1858_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1dd9de9cc_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1c6b3b756:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;;
				};
			}
			_iter_next_1c6b3b756:;
			++it;
			goto _iter_begin_1c6b3b756;
		}
		_iter_end_1c6b3b756:;
	};
	return false;;
}



inline jule::Ptr<_1dd9edc94_scopeChecker> _1dd9e4262_newScopeCheckerBase(jule::Ptr<_1dda1da83_Sema>& _5829_s, jule::Ptr<_1dd9ca2c0_FnIns> _5843_owner) {
	return jule::new_ptr<_1dd9edc94_scopeChecker>(_1dd9edc94_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1dda84621_SymbolTable>(), });;
}



inline jule::Ptr<_1dd9edc94_scopeChecker> _1dd9e45e7_newScopeChecker(jule::Ptr<_1dda1da83_Sema>& _6625_s, jule::Ptr<_1dd9ca2c0_FnIns> _6639_owner) {
	jule::Ptr<_1dd9edc94_scopeChecker> _6713_base = _1dd9e4262_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1dd9eca0c_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1dd9ece80_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1dd9eca0c_scopeLabel> _1dd9e4938_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1dd9edc94_scopeChecker> _7636_scope) {
	jule::Ptr<_1dd9eca0c_scopeLabel> _7713_label = _1dda0276a_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1dda0276a_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1c6b5366e:;
	}
	_iter_end_1c6b5366e:;;
	return _7713_label;;
}



inline jule::Bool _1dd9e4cbd_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1dd9e7232_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c6b55253:;
			{
				jule::Ptr<_1dd9bb1a1_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6b552b9:;
			{
				jule::Ptr<_1dda8944a_Data> _9813_d = _9021_Model.cast_ptr<_1dda8944a_Data>(&__jule_any_type24);;
				return _1dd9e4cbd_modelIsGotoScope(_9813_d.get()._field_Model,_9034_sc);;
			}
		}
		_match_end_1c6b55077:;
	};
	return false;;
}



inline jule::Bool _1dd9e510e_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_1dd9e7232_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6b576b7:;
			{
				return (_10421_stmt.cast_ptr<_1dd9e7232_Scope>(&__jule_any_type22) == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c6b57453:;
			{
				return (_10421_stmt.cast_ptr<_1dd9e8079_InfIter>(&__jule_any_type37).get()._field_Scope == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6b574b9:;
			{
				jule::Ptr<_1dd9e8dd2_RangeIter> _11113_it = _10421_stmt.cast_ptr<_1dd9e8dd2_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _1dd9e4cbd_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c6b57530:;
			{
				jule::Ptr<_1dd9e84ec_WhileIter> _11413_it = _10421_stmt.cast_ptr<_1dd9e84ec_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _1dd9e4cbd_modelIsGotoScope(_11413_it.get()._field_Expr,_10434_sc)) || _1dd9e4cbd_modelIsGotoScope(_11413_it.get()._field_Next,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c6b5719a:;
			{
				jule::Ptr<_1dd9eae7d_Match> _11913_m = _10421_stmt.cast_ptr<_1dd9eae7d_Match>(&__jule_any_type49);;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1c6b5aae9:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9eb9c8_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1c6b5ba2e:;
								if (it != expr.end()) {
									jule::Ptr<_1dda8944a_Data> &_12420_expr = *it;
									{
										if (_1dd9e4cbd_modelIsGotoScope(_12420_expr.get()._field_Model,_10434_sc)) {
											return true;;
										};
									}
									_iter_next_1c6b5ba2e:;
									++it;
									goto _iter_begin_1c6b5ba2e;
								}
								_iter_end_1c6b5ba2e:;
							};
						}
						_iter_next_1c6b5aae9:;
						++it;
						goto _iter_begin_1c6b5aae9;
					}
					_iter_end_1c6b5aae9:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c6b57211:;
			{
				jule::Ptr<_1dd9e7c8d_Conditional> _13213_c = _10421_stmt.cast_ptr<_1dd9e7c8d_Conditional>(&__jule_any_type36);;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1c6b5d04c:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9e762d_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _1dd9e4cbd_modelIsGotoScope(_13316_elif.get()._field_Expr,_10434_sc))) {
								return true;;
							};
						}
						_iter_next_1c6b5d04c:;
						++it;
						goto _iter_begin_1c6b5d04c;
					}
					_iter_end_1c6b5d04c:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6b57288:;
			{
				jule::Ptr<_1dda8944a_Data> _14013_d = _10421_stmt.cast_ptr<_1dda8944a_Data>(&__jule_any_type24);;
				return _1dd9e4cbd_modelIsGotoScope(_14013_d.get()._field_Model,_10434_sc);;
			}
		}
		else {
			_case_begin_1c6b5563d:;
			{
				return false;;
			}
		}
		_match_end_1c6b555c7:;
	};
}



inline jule::I64 _1dd9e5450_countMatchType(jule::Ptr<_1dd9eae7d_Match>& _14720_m, jule::Ptr<_1ddab53cc_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1ddab57c8_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1c6b6102d:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9eb9c8_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_1c6b6102d;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1c6b61968:;
					if (it != expr.end()) {
						jule::Ptr<_1dda8944a_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_1c6b6102d;
							};
							if ((_1499_kind == _1ddab57c8_Str(_15616_expr.get()._field_Model.cast_ptr<_1ddab53cc_TypeKind>(&__jule_any_type91).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1c6b61968:;
						++it;
						goto _iter_begin_1c6b61968;
					}
					_iter_end_1c6b61968:;
				};
			}
			_iter_next_1c6b6102d:;
			++it;
			goto _iter_begin_1c6b6102d;
		}
		_iter_end_1c6b6102d:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1dda8944a_Data>> _1dd9e56e7_getDatasFromTupleData(jule::Ptr<_1dda8944a_Data>& _17131_d) {
	if ((_1ddab9403_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type89) {
				_case_begin_1c6b659d3:;
				{
					return _17131_d.get()._field_Model.cast_ptr<_1dd9bee96_TupleExprModel>(&__jule_any_type89).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1c6b635c4:;
				{
					jule::Ptr<_1ddabed98_Tuple> _17721_t = _1ddab9403_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1dda8944a_Data>> _17821_r = jule::Slice<jule::Ptr<_1dda8944a_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1c6b64927:;
						if (it != expr.end()) {
							jule::Ptr<_1ddab53cc_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1c6b64927:;
							++it;
							goto _iter_begin_1c6b64927;
						}
						_iter_end_1c6b64927:;
					};
					return _17821_r;;
				}
			}
			_match_end_1c6b6353b:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1dda8944a_Data>>::make({_17131_d});;
	};
}



inline jule::Bool _1dd9e6033_checkMut(jule::Ptr<_1dda1da83_Sema>& _20618_s, jule::Ptr<_1dda8944a_Data>& _20629_left, jule::Ptr<_1dda8944a_Data> _20646_right, jule::Ptr<_222e62217_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_1c6b68ba1:;
			{
				_1dda21745_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1ddab6a4e_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1c6b6850d:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_1ddab8bb6_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1dda21745_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type6)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c6b68497:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c6b683ed:;
	};
}



inline jule::Bool _1dd9e64b7_checkAssign(jule::Ptr<_1dda1da83_Sema>& _22521_s, jule::Ptr<_1dda8944a_Data>& _22536_left, jule::Ptr<_1dda8944a_Data> _22553_right, jule::Ptr<_222e62217_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1dd9ca2c0_FnIns> _2269_f = _1ddab8952_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1dda21745_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1dda89d0d_IsConst(_22536_left.ptr())) {
			_case_begin_1c6b6d7dd:;
			{
				_1dda21745_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1dda2699d_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_1c6b6d15b:;
			{
				_1dda21745_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1dd9e6033_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_1c6b6d1c2:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c6b6d0e5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c6b6cec4:;
	};
}



inline jule::Bool _1dd9e675e_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1c6b6d26b:;
			{
				return (!(_24731_n.cast_ptr<_2090c7ae4_AssignSt>(&__jule_any_type60).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1c6b70559:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c6b703e4:;
			{
				return false;;
			}
		}
		_match_end_1c6b7037d:;
	};
}



inline jule::Bool _1dd9e6a06_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1c6b7155a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6b715c1:;
			{
				{
					auto &_match_expr{ _25824_st.cast_ptr<_1dda8944a_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1c6b71da7:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c6b7225e:;
						{
							return false;;
						}
					}
					_match_end_1c6b71eb7:;
				};
			}
		}
		else {
			_case_begin_1c6b7100a:;
			{
				return false;;
			}
		}
		_match_end_1c6b70ea5:;
	};
}



inline jule::Bool _1dd9e6c9d_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c6b728ad:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c6b7246d:;
			{
				return false;;
			}
		}
		_match_end_1c6b72380:;
	};
}



inline jule::Ptr<_1dda418db_Var> _1dda1314e_findVarInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1c6cc0676:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1dda418db_Var> _4817_v = _1dda85303_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1c6cc0676:;
			++it;
			goto _iter_begin_1c6cc0676;
		}
		_iter_end_1c6cc0676:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1dda1357d_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1c6cc1b3e:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1ddab46d9_TypeAlias> _6017_ta = _1dda856aa_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1c6cc1b3e:;
			++it;
			goto _iter_begin_1c6cc1b3e;
		}
		_iter_end_1c6cc1b3e:;
	};
	return nullptr;;
}



inline jule::Ptr<_2090d5849_Struct> _1dda13968_findStructInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1c6cc30e6:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_2090d5849_Struct> _7217_s = _1dda85a62_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1c6cc30e6:;
			++it;
			goto _iter_begin_1c6cc30e6;
		}
		_iter_end_1c6cc30e6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9c761e_Fn> _1dda13dca_findFnInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1c6cc459d:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1dd9c761e_Fn> _8417_f = _1dda85e19_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1c6cc459d:;
			++it;
			goto _iter_begin_1c6cc459d;
		}
		_iter_end_1c6cc459d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9d9521_Trait> _1dda141d8_findTraitInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1c6cc4b31:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1dd9d9521_Trait> _9617_t = _1dda86227_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1c6cc4b31:;
			++it;
			goto _iter_begin_1c6cc4b31;
		}
		_iter_end_1c6cc4b31:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9db666_Enum> _1dda14529_findEnumInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1c6cc6b44:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1dd9db666_Enum> _10817_e = _1dda86535_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1c6cc6b44:;
			++it;
			goto _iter_begin_1c6cc6b44;
		}
		_iter_end_1c6cc6b44:;
	};
	return nullptr;;
}



inline jule::Ptr<_1dd9dcc61_TypeEnum> _1dda1486a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1c6cc7e0e:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1dd9dcc61_TypeEnum> _12017_e = _1dda86843_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1c6cc7e0e:;
			++it;
			goto _iter_begin_1c6cc7e0e;
		}
		_iter_end_1c6cc7e0e:;
	};
	return nullptr;;
}



inline jule::Any _1dda14d65_defByIdentPackage(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1c6cc93d8:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1dda876bd_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1c6cc93d8:;
			++it;
			goto _iter_begin_1c6cc93d8;
		}
		_iter_end_1c6cc93d8:;
	};
	return nullptr;;
}



inline jule::Bool _1dda1ae6a_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _222a83b08_HasPrefix(_36117_f,_221b355c3_Join(jule::Slice<jule::Str>::make({_222b72147_PathStdlib,_36125_p})));;
}



inline jule::Bool _1dda1bc4b_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c6ce0212:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c6ce0278:;
			{
				jule::Ptr<_1dd9bdadd_StructSubIdentExprModel> _1717_model = _1228_m.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72);;
				return _1dda1bc4b_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c6ce0014:;
			{
				jule::Ptr<_1dd9bd23b_TraitSubIdentExprModel> _2017_model = _1228_m.cast_ptr<_1dd9bd23b_TraitSubIdentExprModel>(&__jule_any_type71);;
				return _1dda1bc4b_isValidModelForRef(_2017_model.get()._field_Expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c6ce007a:;
			{
				jule::Ptr<_1dd9b96dd_UnaryExprModel> _2317_unary = _1228_m.cast_ptr<_1dd9b96dd_UnaryExprModel>(&__jule_any_type75);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_1ddab7c3c_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ddab79c8_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1dda1bc4b_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);;
			}
		}
		else {
			_case_begin_1c6cde5eb:;
			{
				return false;;
			}
		}
		_match_end_1c6cde596:;
	};
}



inline _222b38ae2_Log _1dda1c169_compilerErr(jule::Ptr<_222e62217_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_222b38ae2_Log _4213_log = _222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_222b39032_Logf(_4144_fmt,_4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_222e6877e_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1dda1c4aa_impIsLookupable(jule::Ptr<_1dda15937_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1dda1830d_existIdent(_5521_i.ptr(), _5537_ident);;
		};
	};
	return _5521_i.get()._field_ImportAll;;
}



inline void _1dda1c7a7_appendRetVars(jule::Slice<jule::Ptr<_1dda418db_Var>>& _6723_dest, jule::Ptr<_1dd9ca2c0_FnIns>& _6742_f) {
	if ((_1dd9c7a81_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ddab53cc_TypeKind>> _7213_types = _1dd9cb3e2_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1c6ce82b4:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _7317_ident = *it;
			{
				if ((_222e649ab_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _222e64c53_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1c6ce82b4;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1dda418db_Var>(_1dda418db_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Data=jule::new_ptr<_1dda8944a_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1c6ce82b4:;
			++it;
			_7310_i++;
			goto _iter_begin_1c6ce82b4;
		}
		_iter_end_1c6ce82b4:;
	};
	if (((_6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && (_6723_dest.len() == 1LL))) {
		_6723_dest[(_6723_dest.len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1dda1ca60_appendParamVars(jule::Slice<jule::Ptr<_1dda418db_Var>>& _9725_dest, jule::Ptr<_1dd9ca2c0_FnIns>& _9744_f) {
	if ((_9744_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9744_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1c6cec087:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c9401_ParamIns> _10217_p = *it;
			{
				if ((_222e649ab_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _222e64c53_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1c6cec087;
				};
				jule::Ptr<_1dda418db_Var> _10717_v = jule::new_ptr<_1dda418db_Var>(_1dda418db_Var{._field_Scope=_9744_f.get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(), ._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Data=jule::new_ptr<_1dda8944a_Data>()}), });;
				{
					
					if (_1dd9c640e_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1c6ceea6d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_9744_f.get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1dd9c6673_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1dd9c6673_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabd8ad_Sptr>(_1ddabd8ad_Sptr{._field_Elem=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1c6cee7a4:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabe31a_Slc>(_1ddabe31a_Slc{._field_Elem=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1c6cec73b:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1c6cee683:;
				};
				_9725_dest = jule::alloc_for_append(_9725_dest,1);_9725_dest.__push(_10717_v);;
			}
			_iter_next_1c6cec087:;
			++it;
			goto _iter_begin_1c6cec087;
		}
		_iter_end_1c6cec087:;
	};
}



inline void _1dda1cd3a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ddab46d9_TypeAlias>>& _15734_dest, jule::Ptr<_1dd9ca2c0_FnIns>& _15759_f) {
	jule::I64 _15813_size = _15759_f.get()._field_Generics.len();;
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=_15759_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15759_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1c6d05007:;
		if (it != expr.end()) {
			jule::I64 _16710_i = it - expr.begin();
			jule::Ptr<_1ddab3ba0_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_2090c6450_GenericDecl> _16817_decl = _15759_f.get()._field_Decl.get()._field_Generics[_16710_i];;
				_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1c6d05007:;
			++it;
			_16710_i++;
			goto _iter_begin_1c6d05007;
		}
		_iter_end_1c6d05007:;
	};
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_2090d5c23_StructIns> _18017_owner = _15759_f.get()._field_Owner;;
		{
			auto &expr = _18017_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1c6d07537:;
			if (it != expr.end()) {
				jule::I64 _18114_i = it - expr.begin();
				jule::Ptr<_1ddab3ba0_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_2090c6450_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1c6d07537:;
				++it;
				_18114_i++;
				goto _iter_begin_1c6d07537;
			}
			_iter_end_1c6d07537:;
		};
	};
}



inline jule::Ptr<_1dda84621_SymbolTable> _1dda1d18c_findFile(jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>& _19518_files, jule::Ptr<_222e675a2_File>& _19542_handler) {
	{
		auto &expr = _19518_files;
		auto it = expr.begin();
		_iter_begin_1c6d07d0c:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == _19542_handler)) {
					return _19617_fl;;
				};
			}
			_iter_next_1c6d07d0c:;
			++it;
			goto _iter_begin_1c6d07d0c;
		}
		_iter_end_1c6d07d0c:;
	};
	return nullptr;;
}



inline void _1dda1d5ee_pushSugggestion(_222b38ae2_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_222b39032_Logf(_20442_fmt,_20455_args);
}



inline jule::Bool _1dda5a350_traitHasReferenceReceiver(jule::Ptr<_1dd9d9521_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1c700dcb0:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1c700dcb0;
				};
				jule::Ptr<_1dd9c5cd2_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1dd9c6673_IsRef(_3313_p.ptr()) && _1dd9c640e_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1c700dcb0:;
			++it;
			goto _iter_begin_1c700dcb0;
		}
		_iter_end_1c700dcb0:;
	};
	return false;;
}



inline jule::Bool _1dda5a482_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1dda8944a_Data>& _4132_d) {
	jule::Str _429_value = _2173c163d_FmtFloat(static_cast<jule::F64>(_1dd9b0a36_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1dd9a23b8_CheckBitFloat(_429_value,static_cast<jule::I64>(_1dd9a0eaa_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1dda71d5b_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1dda8944a_Data>& _4630_d) {
	jule::F64 _479_min = _1dd9a6cb3_Min(_4618_kind);;
	jule::F64 _489_max = _1dd9a709e_Max(_4618_kind);;
	{
		
		if (_1dd9b2692_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c7014a52:;
			{
				jule::F64 _5113_x = _1dd9b02e9_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dd96837e_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1dd9b1e55_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c70154c0:;
			{
				jule::F64 _5813_x = _1dd9b0a36_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1dd9b1be1_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1c7015547:;
			{
				jule::F64 _6313_x = _1dd9b0a36_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1c701539e:;
	};
	return false;;
}



inline jule::Bool _1dda71e8d_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1dda8944a_Data>& _6932_d) {
	jule::F64 _709_max = _1dd9a709e_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1dda59e32_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1dd9ae848_ReadI64(_6932_d.get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1dd9b2692_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c701a371:;
			{
				jule::F64 _7713_x = _1dd9b02e9_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dd96837e_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1dd9b1e55_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c701a3e8:;
			{
				jule::F64 _8713_x = _1dd9b0a36_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1dd9b1be1_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1c701a470:;
			{
				jule::F64 _9213_x = _1dd9b0a36_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1c7019bde:;
	};
	return false;;
}



inline jule::Bool _1dda73038_intAssignable(jule::Str _9818_kind, jule::Ptr<_1dda8944a_Data>& _9830_d) {
	{
		
		if (_1dd9abdea_IsSigInt(_9818_kind)) {
			_case_begin_1c701eb7d:;
			{
				return _1dda71d5b_sigAssignable(_9818_kind,_9830_d);;
			}
		}
		else if (_1dd9ac1d6_IsUnsigInt(_9818_kind)) {
			_case_begin_1c701e52e:;
			{
				return _1dda71e8d_unsigAssignable(_9818_kind,_9830_d);;
			}
		}
		else {
			_case_begin_1c701ab57:;
			{
				return false;;
			}
		}
		_match_end_1c701aa8b:;
	};
}



inline jule::Ptr<_1ddab53cc_TypeKind> _1dda83697_lenKind(void) {
	return jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_209085db0_Directive> _1ddaaea7a_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _412323_directives, jule::Str _412354_d) {
	{
		auto &expr = _412323_directives;
		auto it = expr.begin();
		_iter_begin_1c712be22:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _412417_dr = *it;
			{
				if ((_412417_dr.get()._field_Tag.get()._field_Kind == _412354_d)) {
					return _412417_dr;;
				};
			}
			_iter_next_1c712be22:;
			++it;
			goto _iter_begin_1c712be22;
		}
		_iter_end_1c712be22:;
	};
	return nullptr;;
}



inline jule::Any _1ddaaee10_findBuiltinsImport(jule::Str _413223_ident, jule::Ptr<_1dda15937_ImportInfo> _413235_imp) {
	return _1ddadb2c1_findPackageBuiltinDef(_413235_imp.get()._field_LinkPath,_413223_ident);;
}



inline void _1ddab011e_fitBitsize(jule::Ptr<_1dda8944a_Data>& _413920_d) {
	jule::Ptr<_1ddaba129_Prim> _414013_prim = _1ddab7764_Prim(_413920_d.get()._field_Kind.ptr());;
	jule::I64 _41419_z = _1dd9a0eaa_BitsizeOf(_1ddaba48c_Str(_414013_prim.ptr()));;
	if ((_41419_z == 64LLU)) {
		return;;
	};
	jule::I64 _414613_k = 0LL;;
	{
		
		if (_1dd9b1be1_IsI64(_413920_d.get()._field_Constant.ptr())) {
			_case_begin_1c712ea5c:;
			{
				_414613_k=static_cast<jule::I64>(_1dd9a2907_BitsizeOfInt(static_cast<jule::I64>(_1dd9ae848_ReadI64(_413920_d.get()._field_Constant.ptr()))));
				if ((_414613_k > _41419_z)) {
					_414013_prim.get()._field_Kind=_1dd9a12c9_IntFromBits(_414613_k);
				};
			}
		}
		else if (_1dd9b1e55_IsU64(_413920_d.get()._field_Constant.ptr())) {
			_case_begin_1c712ead4:;
			{
				_414613_k=static_cast<jule::I64>(_1dd9a2b9e_BitsizeOfUint(static_cast<jule::U64>(_1dd9aeaac_ReadU64(_413920_d.get()._field_Constant.ptr()))));
				if ((_414613_k > _41419_z)) {
					_414013_prim.get()._field_Kind=_1dd9a1571_UintFromBits(_414613_k);
				};
			}
		}
		else if (_1dd9b2692_IsF64(_413920_d.get()._field_Constant.ptr())) {
			_case_begin_1c712eb5b:;
			{
				_414613_k=static_cast<jule::I64>(_1dd9a2660_BitsizeOfFloat(static_cast<jule::F64>(_1dd9b02e9_ReadF64(_413920_d.get()._field_Constant.ptr()))));
				if ((_414613_k > _41419_z)) {
					_414013_prim.get()._field_Kind=_1dd9a1818_FloatFromBits(_414613_k);
				};
			}
		}
		_match_end_1c712e991:;
	};
}



inline void _1ddab041b_makeStructLitAlloc(jule::Ptr<_1dda8944a_Data>& _416628_d, jule::Ptr<_1dd9b9e91_StructLitExprModel>& _416643_lit) {
	_416628_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabd8ad_Sptr>(_1ddabd8ad_Sptr{._field_Elem=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_416643_lit.get()._field_Strct, 0)})}), 7)});
	_416628_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9ba29e_AllocStructLitExprModel>(_1dd9ba29e_AllocStructLitExprModel{._field_Lit=_416643_lit}), &__jule_any_type119);
}



inline jule::Ptr<_1dda418db_Var> _1ddab075c_buildErrorVar(jule::Ptr<_1dd9e7232_Scope>& _417723_s, jule::Ptr<_2090c265a_FnCallExpr>& _417739_fc) {
	return jule::new_ptr<_1dda418db_Var>(_1dda418db_Var{._field_Scope=_417723_s, ._field_Token=_417739_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1dda8a4c3_Value>(_1dda8a4c3_Value{._field_Data=jule::new_ptr<_1dda8944a_Data>()}), });;
}



inline jule::Any _1ddab0a9d_findBuiltinsSema(jule::Str _419621_ident, jule::Ptr<_1dda1da83_Sema> _419637_s) {
	{
		auto &expr = _419637_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1c713439c:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _419717_imp = *it;
			{
				if ((_419717_imp.get()._field_ImportAll || _1dda1830d_existIdent(_419717_imp.ptr(), _419621_ident))) {
					jule::Any _419921_def = _1ddaaee10_findBuiltinsImport(_419621_ident,_419717_imp);;
					if ((_419921_def != nullptr)) {
						return _419921_def;;
					};
				};
			}
			_iter_next_1c713439c:;
			++it;
			goto _iter_begin_1c713439c;
		}
		_iter_end_1c713439c:;
	};
	jule::Str _420713_ppath = _222e67e98_Dir(_419637_s.get()._field_file.get()._field_File.ptr());;
	if (_222a83b08_HasPrefix(_420713_ppath,_222b72147_PathStdlib)) {
		(_420713_ppath).mut_slice(_222b72147_PathStdlib.len());;
		_420713_ppath=(jule::Str("std", 3) + _222ab2bc0_Replace(_420713_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return _1ddadb2c1_findPackageBuiltinDef(_420713_ppath,_419621_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ddab0d45_isOkForShifting(jule::Ptr<_1dda8944a_Data>& _422125_d) {
	if (_1dda89d0d_IsConst(_422125_d.ptr())) {
		{
			
			if (_1dd9b1be1_IsI64(_422125_d.get()._field_Constant.ptr())) {
				_case_begin_1c7138d63:;
				{
					return (_1dd9ae848_ReadI64(_422125_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1dd9b1e55_IsU64(_422125_d.get()._field_Constant.ptr())) {
				_case_begin_1c713868c:;
				{
					return true;;
				}
			}
			else if (_1dd9b2692_IsF64(_422125_d.get()._field_Constant.ptr())) {
				_case_begin_1c7138703:;
				{
					return (_1dd9b02e9_ReadF64(_422125_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1c7138626:;
				{
					return false;;
				}
			}
			_match_end_1c713855a:;
		};
	};
	jule::Ptr<_1ddaba129_Prim> _42349_prim = _1ddab7764_Prim(_422125_d.get()._field_Kind.ptr());;
	return ((_42349_prim != nullptr) && _1dd9ac47d_IsInt(_1ddaba48c_Str(_42349_prim.ptr())));;
}



inline jule::Bool _1ddab11ec_isInstancedStruct(jule::Ptr<_2090d5c23_StructIns> _423822_s) {
	return (_423822_s.get()._field_Decl.get()._field_Generics.len() == _423822_s.get()._field_Generics.len());;
}



inline jule::Bool _1ddab1560_isPtrArithmeticCompatible(jule::Ptr<_1dda8944a_Data>& _424235_l, jule::Ptr<_1dda8944a_Data>& _424250_r) {
	jule::Ptr<_1ddac1e22_Ptr> _42439_ptr = _1ddab7c3c_Ptr(_424250_r.get()._field_Kind.ptr());;
	if ((_42439_ptr != nullptr)) {
		return _1ddab5ad6_Equal(_1ddab7c3c_Ptr(_424235_l.get()._field_Kind.ptr()).get()._field_Elem, _42439_ptr.get()._field_Elem);;
	};
	if (_1dda89d0d_IsConst(_424250_r.ptr())) {
		return _1dda73038_intAssignable(jule::Str("int", 3),_424250_r);;
	};
	_1dda73214_typeCompatibilityChecker _425013_tcc = _1dda73214_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_424250_r.get()._field_Kind, };;
	return _1dda747ed_check(&_425013_tcc);;
}



inline void _1ddab17a2_applyCastKindModel(jule::Ptr<_1dda8944a_Data>& _425928_d, jule::Ptr<_1ddab53cc_TypeKind>& _425943_t) {
	_425928_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9ba7ee_CastingExprModel>(_1dd9ba7ee_CastingExprModel{._field_Expr=_425928_d.get()._field_Model, ._field_Kind=_425943_t, ._field_ExprKind=_425928_d.get()._field_Kind}), &__jule_any_type101);
}



inline void _1ddab1a5a_applyCastKind(jule::Ptr<_1dda8944a_Data>& _426723_d, jule::Ptr<_1ddab53cc_TypeKind>& _426738_t) {
	_1ddab17a2_applyCastKindModel(_426723_d,_426738_t);
	_426723_d.get()._field_Kind=_426738_t;
}



inline jule::Ptr<_1dda8944a_Data> _1ddab1c58_buildVoidData(void) {
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1ddab2022_checkDataForIntegerIndexing(jule::Ptr<_1dda8944a_Data>& _428037_d) {
	jule::Str __jule_func_result = jule::Str();
	if ((_428037_d == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1ddab7764_Prim(_428037_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1c71410bd:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1dd9ac47d_IsInt(_1ddaba48c_Str(_1ddab7764_Prim(_428037_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1c7141134:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1dda89d0d_IsConst(_428037_d.ptr())) {
			_case_begin_1c714119a:;
			{
				if ((_1dd9b0a36_AsF64(_428037_d.get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ddab7764_Prim(_428037_d.get()._field_Kind.ptr()) == nullptr) || _1dda89d0d_IsConst(_428037_d.ptr()) || (_1dd9a0c13_RealKindOf(_1ddaba48c_Str(_1ddab7764_Prim(_428037_d.get()._field_Kind.ptr()).ptr())) != _1dd9a0c13_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1c7141211:;
			{
				jule::Ptr<_1ddab53cc_TypeKind> _429717_t = jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)});;
				_1ddab1a5a_applyCastKind(_428037_d,_429717_t);
			}
		}
		_match_end_1c7140c05:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1ddab22db_applyCastModelByEnum(jule::Ptr<_1dda8944a_Data>& _430630_d, jule::Ptr<_1dd9db666_Enum> _430644_e) {
	if ((_430644_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _43109_p = _1ddab7764_Prim(_430644_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1ddabd35d_IsStr(_43109_p.ptr())) {
		return;;
	};
	_1ddab17a2_applyCastKindModel(_430630_d,_430644_e.get()._field_Kind.get()._field_Kind);
}



inline void _1ddab2594_castConstByType(jule::Str& _431721_t, jule::Ptr<_1dda8944a_Data>& _431734_d) {
	{
		
		if (_1dd9abdea_IsSigInt(_431721_t)) {
			_case_begin_1c7146469:;
			{
				{
					auto _match_expr{ _1dd9a0eaa_BitsizeOf(_1dd9a0c13_RealKindOf(_431721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c71470b3:;
						{
							_1dd9b0cab_SetI64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1dd9b055d_AsI64(_431734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c714713a:;
						{
							_1dd9b0cab_SetI64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1dd9b055d_AsI64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c71471a1:;
						{
							_1dd9b0cab_SetI64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1dd9b055d_AsI64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c7147217:;
						{
							_1dd9b0cab_SetI64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1dd9b055d_AsI64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c7146700:;
				};
			}
		}
		else if (_1dd9ac1d6_IsUnsigInt(_431721_t)) {
			_case_begin_1c71464e1:;
			{
				{
					auto _match_expr{ _1dd9a0eaa_BitsizeOf(_1dd9a0c13_RealKindOf(_431721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c714a69e:;
						{
							_1dd9b1031_SetU64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1dd9b07c2_AsU64(_431734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c714a737:;
						{
							_1dd9b1031_SetU64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1dd9b07c2_AsU64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c714a79d:;
						{
							_1dd9b1031_SetU64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1dd9b07c2_AsU64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c714a814:;
						{
							_1dd9b1031_SetU64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1dd9b07c2_AsU64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c71468dc:;
				};
			}
		}
		else if (_1dd9ac79c_IsFloat(_431721_t)) {
			_case_begin_1c7146568:;
			{
				{
					auto _match_expr{ _1dd9a0eaa_BitsizeOf(_1dd9a0c13_RealKindOf(_431721_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c714dc9b:;
						{
							_1dd9b17a1_SetF64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1dd9b0a36_AsF64(_431734_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c714dd34:;
						{
							_1dd9b17a1_SetF64(_431734_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1dd9b0a36_AsF64(_431734_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1c714c3d7:;
				};
			}
		}
		_match_end_1c7146348:;
	};
}



inline void _1ddab2aa0_updateModelToGenericIns(jule::Any& _435133_m, jule::Ptr<_1dd9ca2c0_FnIns>& _435152_f) {
	{
		auto &_match_expr{ _435133_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c714ed35:;
			{
				_435133_m=jule::Any(_435152_f, &__jule_any_type8);
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c714ed9b:;
			{
				_435133_m.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Method=_435152_f;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c714ee12:;
			{
				_435133_m.cast_ptr<_1dd9bde84_StructStaticIdentExprModel>(&__jule_any_type104).get()._field_Method=_435152_f;
			}
		}
		_match_end_1c7146b95:;
	};
}



inline jule::Bool _1ddab2ce2_pushSubIdentFromExpr(jule::Any _436229_expr, jule::Ptr<_2090b9d6c_SubIdentTypeDecl>& _436250_t) {
	{
		auto &_match_expr{ _436229_expr };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c7152464:;
			{
				jule::Ptr<_2090c0339_IdentExpr> _436517_e = _436229_expr.cast_ptr<_2090c0339_IdentExpr>(&__jule_any_type87);;
				_436250_t.get()._field_Idents = jule::alloc_for_append(_436250_t.get()._field_Idents,1);_436250_t.get()._field_Idents.__push(jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_436517_e.get()._field_Token, ._field_Ident=_436517_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c71524ca:;
			{
				jule::Ptr<_2090c1acc_SubIdentExpr> _437117_e = _436229_expr.cast_ptr<_2090c1acc_SubIdentExpr>(&__jule_any_type93);;
				if ((!(_1ddab2ce2_pushSubIdentFromExpr(_437117_e.get()._field_Expr.get()._field_Kind,_436250_t)))) {
					return false;;
				};
				_436250_t.get()._field_Idents = jule::alloc_for_append(_436250_t.get()._field_Idents,1);_436250_t.get()._field_Idents.__push(jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_437117_e.get()._field_Ident, ._field_Ident=_437117_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1c7151dc0:;
			{
				return false;;
			}
		}
		_match_end_1c7151d6a:;
	};
	return true;;
}



inline jule::Bool _1ddacc0d6_kindUsesGenerics(jule::Ptr<_1ddab53cc_TypeKind>& _158526_k, jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>& _158541_generics) {
	{
		auto &expr = _158541_generics;
		auto it = expr.begin();
		_iter_begin_208d88751:;
		if (it != expr.end()) {
			jule::Ptr<_2090c6450_GenericDecl> &_158612_g = *it;
			{
				if (static__1ddacbbda_exist(_158612_g.get()._field_Ident,_158526_k)) {
					return true;;
				};
			}
			_iter_next_208d88751:;
			++it;
			goto _iter_begin_208d88751;
		}
		_iter_end_208d88751:;
	};
	return false;;
}



inline jule::Bool _1ddacc46b_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _159522_directives, jule::Str _159553_tag) {
	{
		auto &expr = _159522_directives;
		auto it = expr.begin();
		_iter_begin_208d88aa3:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _159617_dr = *it;
			{
				if ((_159617_dr.get()._field_Tag.get()._field_Kind == _159553_tag)) {
					return true;;
				};
			}
			_iter_next_208d88aa3:;
			++it;
			goto _iter_begin_208d88aa3;
		}
		_iter_end_208d88aa3:;
	};
	return false;;
}



inline jule::Bool _1ddacc713_canGetPtr(jule::Ptr<_1dda8944a_Data>& _160419_d) {
	if (((!(_160419_d.get()._field_Lvalue)) || _1dda89d0d_IsConst(_160419_d.ptr()))) {
		return false;;
	};
	{
		
		if (((_1ddab8952_Fn(_160419_d.get()._field_Kind.ptr()) != nullptr) || (_1ddab7ea1_Enum(_160419_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_209646371:;
			{
				return false;;
			}
		}
		else {
			_case_begin_209645b9a:;
			{
				return true;;
			}
		}
		_match_end_209645b45:;
	};
}



inline jule::Bool _1ddacca32_isValidForSptrType(jule::Ptr<_1ddab53cc_TypeKind>& _161728_t) {
	jule::Ptr<_2090d5c23_StructIns> _161813_s = _1ddab8bb6_Struct(_161728_t.ptr());;
	if ((((_161813_s != nullptr) && (_161813_s.get()._field_Decl != nullptr)) && _161813_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ddacccc9_isValidForRef(jule::Ptr<_1ddab53cc_TypeKind>& _162623_t) {
	return (_1ddab8952_Fn(_162623_t.ptr()) == nullptr);;
}



inline jule::Bool _1ddacd093_isBuiltinStrConvertable(jule::Ptr<_1ddab53cc_TypeKind>& _162933_t) {
	return (((!(_1ddab6576_Void(_162933_t.ptr()))) && (_1ddab8952_Fn(_162933_t.ptr()) == nullptr)) && (_1ddab9403_Tup(_162933_t.ptr()) == nullptr));;
}



inline jule::Str _1ddacd318_buildLinkPathByTokens(jule::Slice<jule::Ptr<_222e62217_Token>>& _163327_tokens) {
	jule::Str _163413_s = _163327_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _163327_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_20964a056:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_163512_token = *it;
			{
				_163413_s+=jule::Str("::", 2);
				_163413_s+=_163512_token.get()._field_Kind;
			}
			_iter_next_20964a056:;
			++it;
			goto _iter_begin_20964a056;
		}
		_iter_end_20964a056:;
	};
	return _163413_s;;
}



inline jule::Ptr<_1ddaba129_Prim> _1ddacd6c0_buildPrimType(jule::Str _164218_kind) {
	return jule::new_ptr<_1ddaba129_Prim>(_1ddaba129_Prim{._field_Kind=_164218_kind});;
}



inline jule::Ptr<_2090d5849_Struct> _1ddacd967_getStructFromKind(jule::Ptr<_1ddab53cc_TypeKind> _164826_k) {
	{
		
		if ((_164826_k == nullptr)) {
			_case_begin_20964b288:;
			{
				return nullptr;;
			}
		}
		else if ((_1ddab8bb6_Struct(_164826_k.ptr()) != nullptr)) {
			_case_begin_20964b2ee:;
			{
				return _1ddab8bb6_Struct(_164826_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1ddab79c8_Sptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20964b365:;
			{
				return _1ddacd967_getStructFromKind(_1ddab79c8_Sptr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1ddab86dd_Slc(_164826_k.ptr()) != nullptr)) {
			_case_begin_20964b3cb:;
			{
				return _1ddacd967_getStructFromKind(_1ddab86dd_Slc(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1ddab8479_Arr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20964b662:;
			{
				return _1ddacd967_getStructFromKind(_1ddab8479_Arr(_164826_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1ddab7c3c_Ptr(_164826_k.ptr()) != nullptr)) {
			_case_begin_20964b6c8:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_20964b222:;
			{
				return nullptr;;
			}
		}
		_match_end_20964a760:;
	};
}



inline jule::Bool _1ddacdc0e_isPrim(jule::Str _167111_kind) {
	return ((((((((((((((((_167111_kind == jule::Str("i8", 2)) || (_167111_kind == jule::Str("i16", 3))) || (_167111_kind == jule::Str("i32", 3))) || (_167111_kind == jule::Str("i64", 3))) || (_167111_kind == jule::Str("u8", 2))) || (_167111_kind == jule::Str("u16", 3))) || (_167111_kind == jule::Str("u32", 3))) || (_167111_kind == jule::Str("u64", 3))) || (_167111_kind == jule::Str("f32", 3))) || (_167111_kind == jule::Str("f64", 3))) || (_167111_kind == jule::Str("int", 3))) || (_167111_kind == jule::Str("uint", 4))) || (_167111_kind == jule::Str("uintptr", 7))) || (_167111_kind == jule::Str("bool", 4))) || (_167111_kind == jule::Str("str", 3))) || (_167111_kind == jule::Str("any", 3)));;
}



inline void _1ddacdeb7_applyImplicitCast(jule::Ptr<_1ddab53cc_TypeKind>& _169027_dest, jule::Ptr<_1dda8944a_Data>& _169049_d) {
	if (_1ddab6312_IsNil(_169049_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ddaba129_Prim> _16949_destPrim = _1ddab7764_Prim(_169027_dest.ptr());;
	jule::Ptr<_1ddaba129_Prim> _16959_prim = _1ddab7764_Prim(_169049_d.get()._field_Kind.ptr());;
	if ((_16949_destPrim != nullptr)) {
		if (_1ddabd5c2_IsAny(_16949_destPrim.ptr())) {
			if (((_16959_prim == nullptr) || (!(_1ddabd5c2_IsAny(_16959_prim.ptr()))))) {
				_1ddab1a5a_applyCastKind(_169049_d,_169027_dest);
			};
			return;;
		};
		if (((((((!(_1ddab609d_CppLinked(_169049_d.get()._field_Kind.ptr()))) && (!(_169049_d.get()._field_Kind.get()._field_Variadic))) && (!(_169049_d.get()._field_Lvalue))) && (!(_1dda89d0d_IsConst(_169049_d.ptr())))) && (_16959_prim != nullptr)) && _1dd9aca44_IsNum(_16959_prim.get()._field_Kind))) {
			_1ddab1a5a_applyCastKind(_169049_d,_169027_dest);
		};
		return;;
	};
	if (((_1ddab8e2a_Trait(_169027_dest.ptr()) != nullptr) && (_1ddab8e2a_Trait(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_1ddab17a2_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
	if (((_1ddab8215_TypeEnum(_169027_dest.ptr()) != nullptr) && (_1ddab8215_TypeEnum(_169049_d.get()._field_Kind.ptr()) == nullptr))) {
		_1ddab17a2_applyCastKindModel(_169049_d,_169027_dest);
		return;;
	};
}



inline __jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log _1ddad2031_buildSymbols(jule::Ptr<_209084bc2_Ast>& _1622_ast, jule::Trait<_1dda12cb9_Importer>& _1638_importer, jule::Ptr<_1dd9d3a48_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log __jule_func_result;
	jule::Ptr<_1dd9d3a48_symbolBuilder> _1713_sb = jule::new_ptr<_1dd9d3a48_symbolBuilder>(_1dd9d3a48_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_1dd9d89e8_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log _1ddad2460_analyzePackage(jule::Slice<jule::Ptr<_209084bc2_Ast>>& _3024_files, jule::Trait<_1dda12cb9_Importer>& _3044_importer, jule::I64& _3065_flags) {
	__jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1dda84621_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1dda84621_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1c7553c83:;
		if (it != expr.end()) {
			jule::Ptr<_209084bc2_Ast> _3317_f = *it;
			{
				jule::Ptr<_1dda84621_SymbolTable> _3418_table;;
				jule::Slice<_222b38ae2_Log> _3429_errors;;
				({
					__jule_tuple_x_1dda84621_SymbolTable__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1ddad2031_buildSymbols(_3317_f,_3044_importer,nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1c7553c83:;
			++it;
			goto _iter_begin_1c7553c83;
		}
		_iter_end_1c7553c83:;
	};
	jule::Ptr<_1dda1da83_Sema> _4113_sema = jule::new_ptr<_1dda1da83_Sema>(_1dda1da83_Sema{._field_flags=_3065_flags});;
	_1dda3d83e_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1dda18891_Package> _4913_pkg = jule::new_ptr<_1dda18891_Package>(_1dda18891_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log _1ddad284a_AnalyzePackage(jule::Slice<jule::Ptr<_209084bc2_Ast>> _7323_files, jule::Trait<_1dda12cb9_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1dda18891_Package> _7714_package;;
	jule::Slice<_222b38ae2_Log> _7727_logs;;
	({
		__jule_tuple_x_1dda18891_Package__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1ddad2460_analyzePackage(_7323_files,_7342_importer,_7362_flags);
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1dd9ca2c0_FnIns> _1ddadd911_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1c755c7e7:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _2620_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb72346_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1c755ceac:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _2920_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb72731_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1c755d09a:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _3220_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb72b1b_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1c755d111:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _3520_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb73006_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1c755cae4:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _3820_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb73622_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1c755cb5a:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _4120_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb73a0c_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1c755cbd2:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _4420_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb74810_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1c755cc59:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _4720_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb75a0e_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1c755d188:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _5020_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb7657b_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1c755d210:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _5320_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb76dea_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1c755d287:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _5620_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb772d5_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1c755d30e:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _5920_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb7789b_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1c755c97e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c755c8d5:;
	};
}



inline jule::Ptr<_1ddab46d9_TypeAlias> _1ddae054a_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1c75658ee:;
			{
				static jule::Ptr<_1ddab46d9_TypeAlias> _6920_t = jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1c7565965:;
			{
				static jule::Ptr<_1ddab46d9_TypeAlias> _7920_t = jule::new_ptr<_1ddab46d9_TypeAlias>(_1ddab46d9_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1ddab97aa_TypeSymbol>(_1ddab97aa_TypeSymbol{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1c7565338:;
			{
				return nullptr;;
			}
		}
		_match_end_1c7564d60:;
	};
}



inline jule::Any _1ddae4e23_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1dd9ca2c0_FnIns> _9413_f = _1ddadd911_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type8);;
	};
	jule::Ptr<_1ddab46d9_TypeAlias> _9813_ta = _1ddae054a_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type68);;
	};
	return nullptr;;
}



inline jule::Any _1ddae40cb_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1c756889c:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _10820_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb792d7_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1c75690a6:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _11120_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb796c2_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_1c756866b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c7568a78:;
	};
}



inline jule::Any _1ddae420d_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1c756a937:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _12120_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb77c0e_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1c756a99d:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _12420_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb7812c_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1c756a75b:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _12720_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb7854a_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_1c7568bbb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c756999c:;
	};
}



inline jule::Any _1ddadb18e_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1c756cc03:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _13720_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb78979_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type8);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1c756cc69:;
			{
				static jule::Ptr<_1dd9ca2c0_FnIns> _14020_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_Decl=jule::new_ptr<_1dd9c761e_Fn>(_1dd9c761e_Fn{._field_Generics=jule::Slice<jule::Ptr<_2090c6450_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb78d97_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type8);;
			}
		}
		else {
			_case_begin_1c756aa14:;
			{
				return nullptr;;
			}
		}
		_match_end_1c756bc68:;
	};
}



inline jule::Any _1ddadb2c1_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1c756eb6c:;
			{
				return _1ddae40cb_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1c756ebd3:;
			{
				return _1ddae420d_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1c756e991:;
			{
				return _1ddadb18e_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1c756e584:;
			{
				return nullptr;;
			}
		}
		_match_end_1c756d64e:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddb71477_builtinCallerCommonPlain(jule::Ptr<_1dda8aeb8_Eval>& _16534_e, jule::Ptr<_2090c265a_FnCallExpr>& _16549_fc, jule::Ptr<_1dda8944a_Data>& _16571_d) {
	jule::Ptr<_1dd9ca2c0_FnIns> _16613_f = _1ddab8952_Fn(_16571_d.get()._field_Kind.ptr());;
	_1dda7b1d9_fnCallArgChecker _16813_fcac = _1dda7b1d9_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1dda7d5a4_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1dd9bb1a1_FnCallExprModel> _17913_model = jule::new_ptr<_1dd9bb1a1_FnCallExprModel>(_1dd9bb1a1_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_1ddab1c58_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=jule::Any(_17913_model, &__jule_any_type35);
	return _16571_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb71730_builtinCallerCommon(jule::Ptr<_1dda8aeb8_Eval>& _19829_e, jule::Ptr<_2090c265a_FnCallExpr>& _19844_fc, jule::Ptr<_1dda8944a_Data>& _19866_d) {
	return _1ddb71477_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb71b1a_builtinCallerCommonMut(jule::Ptr<_1dda8aeb8_Eval>& _20232_e, jule::Ptr<_2090c265a_FnCallExpr>& _20247_fc, jule::Ptr<_1dda8944a_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_1dda8b4c4_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1ddb71730_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb71e5b_builtinCallerError(jule::Ptr<_1dda8aeb8_Eval>& _20928_e, jule::Ptr<_2090c265a_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _21713_expr = _1ddaa68da_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1dda89835_IsNil(_21713_expr.ptr())) {
		_1dda8b4c4_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _22613_d = _1ddab1c58_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c36d6_BuiltinErrorCallExprModel>(_1dd9c36d6_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type23);
	return _22613_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb72346_builtinCallerOut(jule::Ptr<_1dda8aeb8_Eval>& _23126_e, jule::Ptr<_2090c265a_FnCallExpr>& _23141_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_23141_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_23141_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _24013_expr = _1ddaa68da_evalExpr(_23126_e, _23141_fc.get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ddacd093_isBuiltinStrConvertable(_24013_expr.get()._field_Kind)))) {
		_1dda8b4c4_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _25013_d = _1ddab1c58_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c0370_BuiltinOutCallExprModel>(_1dd9c0370_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type28);
	return _25013_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb72731_builtinCallerOutln(jule::Ptr<_1dda8aeb8_Eval>& _25528_e, jule::Ptr<_2090c265a_FnCallExpr>& _25543_fc, jule::Ptr<_1dda8944a_Data>& _25565_d) {
	_25565_d=_1ddb72346_builtinCallerOut(_25528_e,_25543_fc,_25565_d);
	if ((_25565_d == nullptr)) {
		return nullptr;;
	};
	_25565_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c075a_BuiltinOutlnCallExprModel>(_1dd9c075a_BuiltinOutlnCallExprModel{._field_Expr=_25565_d.get()._field_Model.cast_ptr<_1dd9c0370_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return _25565_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb72b1b_builtinCallerNew(jule::Ptr<_1dda8aeb8_Eval>& _26726_e, jule::Ptr<_2090c265a_FnCallExpr>& _26741_fc, jule::Ptr<_1dda8944a_Data>& _26763_d) {
	if ((_26741_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_26741_fc.get()._field_Args.len() > 2LL)) {
		_1dda8b4c4_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _27613_t = _1ddaa62be_evalExprKind(_26726_e, _26741_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1dda8b4c4_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ddacca32_isValidForSptrType(_27613_t.get()._field_Kind)))) {
		jule::Ptr<_2090d5c23_StructIns> _28717_s = _1ddab8bb6_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1dda8b4c4_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	_26763_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(jule::new_ptr<_1ddabd8ad_Sptr>(_1ddabd8ad_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if ((_26741_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1ddab53cc_TypeKind> _30117_old = _26726_e.get()._field_prefix;;
		_26726_e.get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1dda8944a_Data> _30417_init = _1ddaa68da_evalExpr(_26726_e, _26741_fc.get()._field_Args[1LL]);;
		_26726_e.get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_222e62217_Token> _30921_token = _26741_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1dda3139d_checkValidityForInitExpr(_26726_e.get()._field_s, (!(_26726_e.get()._field_immutable)),false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_1dda2d488_checkAssignType(_26726_e.get()._field_s, false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c0e64_BuiltinNewCallExprModel>(_1dd9c0e64_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type120);
		};
	} else {
		_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c0e64_BuiltinNewCallExprModel>(_1dd9c0e64_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type120);
	};
	return _26763_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb73006_builtinCallerPanic(jule::Ptr<_1dda8aeb8_Eval>& _32928_e, jule::Ptr<_2090c265a_FnCallExpr>& _32943_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_32943_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_32943_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _33813_expr = _1ddaa68da_evalExpr(_32928_e, _32943_fc.get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ddab7764_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd35d_IsStr(_1ddab7764_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1dda8b4c4_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _34713_d = _1ddab1c58_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c134e_BuiltinPanicCallExprModel>(_1dd9c134e_BuiltinPanicCallExprModel{._field_Token=_32943_fc.get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type30);
	return _34713_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb73622_builtinCallerMake(jule::Ptr<_1dda8aeb8_Eval>& _35527_e, jule::Ptr<_2090c265a_FnCallExpr>& _35542_fc, jule::Ptr<_1dda8944a_Data>& _35564_d) {
	if ((_35542_fc.get()._field_Args.len() < 2LL)) {
		if ((_35542_fc.get()._field_Args.len() == 1LL)) {
			_1dda8b4c4_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type6)}));
			return nullptr;;
		};
		_1dda8b4c4_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _36513_t = _1ddaa62be_evalExprKind(_35527_e, _35542_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1dda8b4c4_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_35542_fc.get()._field_Args.len() > 3LL)) {
		_1dda8b4c4_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_35564_d.get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1dda8944a_Data> _38113_lenExpr = _1ddaa68da_evalExpr(_1dda2cb80_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1dda94ab5_checkIntegerIndexingByData(_35527_e.ptr(), _38113_lenExpr,_35542_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1dd9c1cab_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1dd9c1cab_BuiltinMakeCallExprModel>(_1dd9c1cab_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	_35564_d.get()._field_Model=jule::Any(_38813_model, &__jule_any_type121);
	if ((_35542_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1dda8944a_Data> _39417_capExpr = _1ddaa68da_evalExpr(_1dda2cb80_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return _35564_d;;
		};
		_1dda94ab5_checkIntegerIndexingByData(_35527_e.ptr(), _39417_capExpr,_35542_fc.get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return _35564_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb73a0c_builtinCallerAppend(jule::Ptr<_1dda8aeb8_Eval>& _40429_e, jule::Ptr<_2090c265a_FnCallExpr>& _40444_fc, jule::Ptr<_1dda8944a_Data>& _40466_d) {
	if ((_40444_fc.get()._field_Args.len() < 2LL)) {
		if ((_40444_fc.get()._field_Args.len() == 1LL)) {
			_1dda8b4c4_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type6)}));
			return nullptr;;
		};
		_1dda8b4c4_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _41413_t = _1ddaa68da_evalExpr(_40429_e, _40444_fc.get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1ddab86dd_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1dda8b4c4_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dd9ca2c0_FnIns> _42413_f = jule::new_ptr<_1dd9ca2c0_FnIns>(_1dd9ca2c0_FnIns{._field_Params=jule::Slice<jule::Ptr<_1dd9c9401_ParamIns>>::make({jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1dd9c9401_ParamIns>(_1dd9c9401_ParamIns{._field_Decl=jule::new_ptr<_1dd9c5cd2_Param>(_1dd9c5cd2_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1ddab86dd_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1dda8944a_Data>(jule::Ptr<_1dda8aeb8_Eval>&,jule::Ptr<_2090c265a_FnCallExpr>&,jule::Ptr<_1dda8944a_Data>&)>(_1ddb71477_builtinCallerCommonPlain), });;
	_40466_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_42413_f, 1)});
	_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9be638_CommonIdentExprModel>(_1dd9be638_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type73);
	_40466_d=_1ddb71477_builtinCallerCommonPlain(_40429_e,_40444_fc,_40466_d);
	if ((_40466_d != nullptr)) {
		jule::Ptr<_1dd9bb1a1_FnCallExprModel> _45217_model = _40466_d.get()._field_Model.cast_ptr<_1dd9bb1a1_FnCallExprModel>(&__jule_any_type35);;
		_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c2196_BuiltinAppendCallExprModel>(_1dd9c2196_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return _40466_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb73e91_callerCopySlice(jule::Ptr<_1dda8944a_Data>& _46125_dest, jule::Ptr<_1dda8aeb8_Eval>& _46143_e, jule::Ptr<_2090c265a_FnCallExpr>& _46158_fc, jule::Ptr<_1dda8944a_Data>& _46180_d) {
	if ((!(_46125_dest.get()._field_Mutable))) {
		_1dda8b4c4_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _46613_src = _1ddaa68da_evalExpr(_46143_e, _46158_fc.get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ddabe31a_Slc> _47013_slc = _1ddab86dd_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1ddab6a4e_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1dda8b4c4_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1ddab5ad6_Equal(_46125_dest.get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1dda8b4c4_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
	} else {
		jule::Ptr<_1ddaba129_Prim> _48013_destPrim = _1ddab7764_Prim(_1ddab86dd_Slc(_46125_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1ddaba129_Prim> _48113_prim = _1ddab7764_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1ddabd35d_IsStr(_48113_prim.ptr())))) || (!(_1ddabb933_IsU8(_48013_destPrim.ptr()))))) {
			_1dda8b4c4_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
		};
	};
	_46180_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)});
	_46180_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c32eb_BuiltinCopyCallExprModel>(_1dd9c32eb_BuiltinCopyCallExprModel{._field_Dest=_46125_dest, ._field_Src=_46613_src}), &__jule_any_type32);
	return _46180_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb74425_callerCopyStr(jule::Ptr<_1dda8944a_Data>& _49523_dest, jule::Ptr<_1dda8aeb8_Eval>& _49541_e, jule::Ptr<_2090c265a_FnCallExpr>& _49556_fc, jule::Ptr<_1dda8944a_Data>& _49578_d) {
	if ((!(_49523_dest.get()._field_Mutable))) {
		_1dda8b4c4_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _50013_src = _1ddaa68da_evalExpr(_49541_e, _49556_fc.get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1ddab7764_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75adb12:;
			{
				if (_1ddabd35d_IsStr(_1ddab7764_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1ddab86dd_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75adb78:;
			{
				jule::Ptr<_1ddabe31a_Slc> _51017_slc = _1ddab86dd_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1ddab7764_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1ddabb933_IsU8(_1ddab7764_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1c75ad8e2:;
	};
	_1dda8b4c4_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_49523_dest.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type6)}));
	_julec_label_end:;
	_49578_d.get()._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("int", 3)), 6)});
	_49578_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c32eb_BuiltinCopyCallExprModel>(_1dd9c32eb_BuiltinCopyCallExprModel{._field_Dest=_49523_dest, ._field_Src=_50013_src}), &__jule_any_type32);
	return _49578_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb74810_builtinCallerCopy(jule::Ptr<_1dda8aeb8_Eval>& _52527_e, jule::Ptr<_2090c265a_FnCallExpr>& _52542_fc, jule::Ptr<_1dda8944a_Data>& _52564_d) {
	if ((_52542_fc.get()._field_Args.len() < 2LL)) {
		if ((_52542_fc.get()._field_Args.len() == 1LL)) {
			_1dda8b4c4_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type6)}));
			return nullptr;;
		};
		_1dda8b4c4_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_52542_fc.get()._field_Args.len() > 2LL)) {
		_1dda8b4c4_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _53813_dest = _1ddaa68da_evalExpr(_52527_e, _52542_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1c75b8ed5:;
			{
				return nullptr;;
			}
		}
		else if ((_1ddab86dd_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75b904b:;
			{
				return _1ddb73e91_callerCopySlice(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else if (((_1ddab7764_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1ddabd35d_IsStr(_1ddab7764_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c75b8d3c:;
			{
				return _1ddb74425_callerCopyStr(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else {
			_case_begin_1c75b805b:;
			{
				_1dda8b4c4_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c75b7ee5:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddb74b51_callerLenSlice(jule::Ptr<_1dda8944a_Data>& _55224_expr, jule::Ptr<_1dda8944a_Data>& _55242_d) {
	_55242_d.get()._field_Kind=_1dda83697_lenKind();
	_55242_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(_1dd9c24b5_BuiltinLenCallExprModel{._field_Expr=_55224_expr}), &__jule_any_type122);
	return _55242_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb74e92_callerLenMap(jule::Ptr<_1dda8944a_Data>& _56022_expr, jule::Ptr<_1dda8944a_Data>& _56040_d) {
	_56040_d.get()._field_Kind=_1dda83697_lenKind();
	_56040_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(_1dd9c24b5_BuiltinLenCallExprModel{._field_Expr=_56022_expr}), &__jule_any_type122);
	return _56040_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb752d3_callerLenArr(jule::Ptr<_1dda8944a_Data>& _56822_expr, jule::Ptr<_1dda8944a_Data>& _56840_d) {
	_56840_d.get()._field_Kind=_1dda83697_lenKind();
	_56840_d.get()._field_Constant=static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ddab8479_Arr(_56822_expr.get()._field_Kind.ptr()).get()._field_N)));
	_56840_d.get()._field_Model=jule::Any(_56840_d.get()._field_Constant, &__jule_any_type48);
	return _56840_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb75624_callerLenStr(jule::Ptr<_1dda8944a_Data>& _57522_expr, jule::Ptr<_1dda8944a_Data>& _57540_d) {
	_57540_d.get()._field_Kind=_1dda83697_lenKind();
	if (_1dda89d0d_IsConst(_57522_expr.ptr())) {
		_57540_d.get()._field_Constant=static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dd9b0085_ReadStr(_57522_expr.get()._field_Constant.ptr()).len())));
		_57540_d.get()._field_Model=jule::Any(_57540_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_57540_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c24b5_BuiltinLenCallExprModel>(_1dd9c24b5_BuiltinLenCallExprModel{._field_Expr=_57522_expr}), &__jule_any_type122);
	};
	return _57540_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb75a0e_builtinCallerLen(jule::Ptr<_1dda8aeb8_Eval>& _58826_e, jule::Ptr<_2090c265a_FnCallExpr>& _58841_fc, jule::Ptr<_1dda8944a_Data>& _58863_d) {
	if ((_58841_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_58841_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _59613_dest = _1ddaa68da_evalExpr(_58826_e, _58841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1c75c3d47:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1c75c3dad:;
			{
				_1dda8b4c4_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ddab86dd_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75c3b9e:;
			{
				return _1ddb74b51_callerLenSlice(_59613_dest,_58863_d);;
			}
		}
		else if ((_1ddab8479_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75c3c26:;
			{
				return _1ddb752d3_callerLenArr(_59613_dest,_58863_d);;
			}
		}
		else if ((_1ddab918e_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75c2e34:;
			{
				return _1ddb74e92_callerLenMap(_59613_dest,_58863_d);;
			}
		}
		else if (((_1ddab7764_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1ddabd35d_IsStr(_1ddab7764_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c75c2e9a:;
			{
				return _1ddb75624_callerLenStr(_59613_dest,_58863_d);;
			}
		}
		else {
			_case_begin_1c75c2dbd:;
			{
				_1dda8b4c4_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c75c2d57:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddb75d50_callerCapSlice(jule::Ptr<_1dda8944a_Data>& _61724_expr, jule::Ptr<_1dda8944a_Data>& _61742_d) {
	_61742_d.get()._field_Kind=_1dda83697_lenKind();
	_61742_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c27d4_BuiltinCapCallExprModel>(_1dd9c27d4_BuiltinCapCallExprModel{._field_Expr=_61724_expr}), &__jule_any_type123);
	return _61742_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb76191_callerCapStr(jule::Ptr<_1dda8944a_Data>& _62522_expr, jule::Ptr<_1dda8944a_Data>& _62540_d) {
	_62540_d.get()._field_Kind=_1dda83697_lenKind();
	if (_1dda89d0d_IsConst(_62522_expr.ptr())) {
		_62540_d.get()._field_Constant=static__1dd9ad4c3_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1dd9b0085_ReadStr(_62522_expr.get()._field_Constant.ptr()).cap())));
		_62540_d.get()._field_Model=jule::Any(_62540_d.get()._field_Constant, &__jule_any_type48);
	} else {
		_62540_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c27d4_BuiltinCapCallExprModel>(_1dd9c27d4_BuiltinCapCallExprModel{._field_Expr=_62522_expr}), &__jule_any_type123);
	};
	return _62540_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb7657b_builtinCallerCap(jule::Ptr<_1dda8aeb8_Eval>& _63826_e, jule::Ptr<_2090c265a_FnCallExpr>& _63841_fc, jule::Ptr<_1dda8944a_Data>& _63863_d) {
	if ((_63841_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_63841_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _64613_dest = _1ddaa68da_evalExpr(_63826_e, _63841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1c75cdb98:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1c75cdc0e:;
			{
				_1dda8b4c4_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ddab86dd_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75cda00:;
			{
				return _1ddb75d50_callerCapSlice(_64613_dest,_63863_d);;
			}
		}
		else if (((_1ddab7764_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1ddabd35d_IsStr(_1ddab7764_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1c75cda66:;
			{
				return _1ddb76191_callerCapStr(_64613_dest,_63863_d);;
			}
		}
		else {
			_case_begin_1c75ccc1e:;
			{
				_1dda8b4c4_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c75ccba8:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddb76a10_callerDeleteMap(jule::Ptr<_1dda8aeb8_Eval>& _66325_e, jule::Ptr<_2090c265a_FnCallExpr>& _66340_fc, jule::Ptr<_1dda8944a_Data>& _66362_expr, jule::Ptr<_1dda8944a_Data>& _66380_d) {
	if ((!(_66362_expr.get()._field_Mutable))) {
		_1dda8b4c4_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66380_d=_1ddab1c58_buildVoidData();
	jule::Ptr<_1dd9c2e88_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1dd9c2e88_BuiltinDeleteCallExprModel>(_1dd9c2e88_BuiltinDeleteCallExprModel{._field_Dest=_66362_expr, });;
	if ((_66340_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1dda8944a_Data> _67217_key = _1ddaa68da_evalExpr(_66325_e, _66340_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1c75d5331:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1c75d3b59:;
				{
					_1dda8b4c4_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c75d3ae3:;
				{
					;
					jule::Ptr<_1ddab53cc_TypeKind> _68121_keyType = _1ddab918e_Map(_66362_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1dda2d488_checkAssignType(_66325_e.get()._field_s, false,_68121_keyType,_67217_key,_66340_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c75d3a7c:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	_66380_d.get()._field_Model=jule::Any(_66813_model, &__jule_any_type33);
	return _66380_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb76dea_builtinCallerDelete(jule::Ptr<_1dda8aeb8_Eval>& _69229_e, jule::Ptr<_2090c265a_FnCallExpr>& _69244_fc, jule::Ptr<_1dda8944a_Data>& _69266_d) {
	if ((_69244_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_69244_fc.get()._field_Args.len() > 2LL)) {
		_1dda8b4c4_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _70013_dest = _1ddaa68da_evalExpr(_69229_e, _69244_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1c75da8ca:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1c75da941:;
			{
				_1dda8b4c4_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ddab918e_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c75da732:;
			{
				return _1ddb76a10_callerDeleteMap(_69229_e,_69244_fc,_70013_dest,_69266_d);;
			}
		}
		else {
			_case_begin_1c75d9951:;
			{
				_1dda8b4c4_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c75d98da:;
	};
}



inline jule::Ptr<_1dda8944a_Data> _1ddb772d5_builtinCallerClone(jule::Ptr<_1dda8aeb8_Eval>& _71528_e, jule::Ptr<_2090c265a_FnCallExpr>& _71543_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_71543_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_71543_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _72413_d = _1ddaa62be_evalExprKind(_71528_e, _71543_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ddab728b_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1ddab86dd_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1ddab918e_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1ddab8479_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1ddab79c8_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c75e0abc:;
				{
					{
						_1dda8b4c4_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6)}));
					};
				}
			}
			else if ((_1ddab8bb6_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1c75e0429:;
				{
					{
						_1dda8b4c4_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					};
				}
			}
			else {
				_case_begin_1c75e03b3:;
				{
					{
						_1dda8b4c4_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1ddab57c8_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type6),jule::Any(jule::Str("Clone", 5), &__jule_any_type76)}));
					};
				}
			}
			_match_end_1c75deeea:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c0a79_BuiltinCloneCallExprModel>(_1dd9c0a79_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type27);
	return _72413_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb7789b_builtinCallerAssert(jule::Ptr<_1dda8aeb8_Eval>& _75729_e, jule::Ptr<_2090c265a_FnCallExpr>& _75744_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_75744_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_75744_fc.get()._field_Args.len() > 2LL)) {
		_1dda8b4c4_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _76613_expr = _1ddaa68da_evalExpr(_75729_e, _75744_fc.get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ddab7764_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd0e9_IsBool(_1ddab7764_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1dda8b4c4_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dd9c1805_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1dd9c1805_BuiltinAssertCallExprModel>(_1dd9c1805_BuiltinAssertCallExprModel{._field_Token=_75744_fc.get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_75744_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1dda8944a_Data> _78317_log = _1ddaa68da_evalExpr(_75729_e, _75744_fc.get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1dda89d0d_IsConst(_78317_log.ptr()))) || (_1ddab7764_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1ddabd35d_IsStr(_1ddab7764_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1dda8b4c4_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type6),jule::Any(_1ddab57c8_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type6)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1dd9b0085_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1dda8944a_Data> _79613_d = _1ddab1c58_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type31);
	return _79613_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb77c0e_builtinCallerStdMemSizeOf(jule::Ptr<_1dda8aeb8_Eval>& _80135_e, jule::Ptr<_2090c265a_FnCallExpr>& _80150_fc, jule::Ptr<_1dda8944a_Data>& ) {
	jule::Ptr<_1dda8944a_Data> _80213_result = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80150_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type6)}));
		return _80213_result;;
	};
	if ((_80150_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _81413_d = _1ddaa62be_evalExprKind(_80135_e, _80150_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c39d3_SizeofExprModel>(_1dd9c39d3_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type124);
	return _80213_result;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb7812c_builtinCallerStdMemAlignOf(jule::Ptr<_1dda8aeb8_Eval>& _82336_e, jule::Ptr<_2090c265a_FnCallExpr>& _82351_fc, jule::Ptr<_1dda8944a_Data>& ) {
	jule::Ptr<_1dda8944a_Data> _82413_result = jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82351_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type6)}));
		return _82413_result;;
	};
	if ((_82351_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _83613_d = _1ddaa62be_evalExprKind(_82336_e, _82351_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c3cbe_AlignofExprModel>(_1dd9c3cbe_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type125);
	return _82413_result;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb7854a_builtinCallerStdMemFree(jule::Ptr<_1dda8aeb8_Eval>& _84533_e, jule::Ptr<_2090c265a_FnCallExpr>& _84548_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_84548_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_84548_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _85413_d = _1ddaa62be_evalExprKind(_84533_e, _84548_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ddab7027_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1dda8b4c4_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _86313_result = _1ddab1c58_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1dd9c4a6c_FreeExprModel>(_1dd9c4a6c_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type34);
	return _86313_result;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb78979_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1dda8aeb8_Eval>& _86845_e, jule::Ptr<_2090c265a_FnCallExpr>& _86860_fc, jule::Ptr<_1dda8944a_Data>& ) {
	if ((_86860_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	if ((_86860_fc.get()._field_Args.len() > 1LL)) {
		_1dda8b4c4_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1dda8944a_Data> _87713_d = _1ddaa62be_evalExprKind(_86845_e, _86860_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ddacd093_isBuiltinStrConvertable(_87713_d.get()._field_Kind)))) {
		_1dda8b4c4_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1dda8944a_Data>(_1dda8944a_Data{._field_Kind=jule::new_ptr<_1ddab53cc_TypeKind>(_1ddab53cc_TypeKind{._field_Kind=jule::Trait<_1ddab4e9d_Kind>(_1ddacd6c0_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1dd9c43b8_IntegratedToStrExprModel>(_1dd9c43b8_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type126), });;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb78d97_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1dda8aeb8_Eval>& _89544_e, jule::Ptr<_2090c265a_FnCallExpr>& _89559_fc, jule::Ptr<_1dda8944a_Data>& _89581_d) {
	if ((!(_1dda8be0e_isUnsafe(_89544_e.ptr())))) {
		_1dda8b4c4_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89559_fc.get()._field_Args.len() < 1LL)) {
		_1dda8b4c4_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type6)}));
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _90513_argd = _1ddaa68da_evalExpr(_89544_e, _89559_fc.get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ddab7764_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1ddabd35d_IsStr(_1ddab7764_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1dda8b4c4_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type100),jule::Any(_1ddab57c8_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type6)}));
		return nullptr;;
	};
	if (((!(_1dda89d0d_IsConst(_90513_argd.ptr()))) || (!(_1dd9b242d_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1dda8b4c4_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1dda8944a_Data> _92013_r = _1ddab1c58_buildVoidData();;
	jule::Ptr<_1dd9ca2c0_FnIns> _92213_f = _1ddab8952_Fn(_89581_d.get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1dd9c4781_BackendEmitExprModel> _92713_model = jule::new_ptr<_1dd9c4781_BackendEmitExprModel>(_1dd9c4781_BackendEmitExprModel{._field_Code=_1dd9b0085_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if ((_89559_fc.get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89559_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89559_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1c7619200:;
			if (it != expr.end()) {
				jule::Ptr<_2090bd678_Expr> _93321_arg = *it;
				{
					_90513_argd=_1ddaa62be_evalExprKind(_89544_e, _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1c7619200:;
				++it;
				goto _iter_begin_1c7619200;
			}
			_iter_end_1c7619200:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type25);
	return _92013_r;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb792d7_builtinCallerStdDebugOut(jule::Ptr<_1dda8aeb8_Eval>& _94634_e, jule::Ptr<_2090c265a_FnCallExpr>& _94649_fc, jule::Ptr<_1dda8944a_Data>& _94671_d) {
	_94671_d=_1ddb72346_builtinCallerOut(_94634_e,_94649_fc,_94671_d);
	if ((_94671_d == nullptr)) {
		return nullptr;;
	};
	_94671_d.get()._field_Model.cast_ptr<_1dd9c0370_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return _94671_d;;
}



inline jule::Ptr<_1dda8944a_Data> _1ddb796c2_builtinCallerStdDebugOutln(jule::Ptr<_1dda8aeb8_Eval>& _95536_e, jule::Ptr<_2090c265a_FnCallExpr>& _95551_fc, jule::Ptr<_1dda8944a_Data>& _95573_d) {
	_95573_d=_1ddb72731_builtinCallerOutln(_95536_e,_95551_fc,_95573_d);
	if ((_95573_d == nullptr)) {
		return nullptr;;
	};
	_95573_d.get()._field_Model.cast_ptr<_1dd9c075a_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return _95573_d;;
}



inline jule::Bool _1ddc75559_FindModuleFile(jule::Slice<jule::Ptr<_220d12cac_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1c761e931:;
		if (it != expr.end()) {
			jule::Ptr<_220d12cac_DirEntry> &_1312_d = *it;
			{
				if (((!(_220c4d17b_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1c761e931:;
			++it;
			goto _iter_begin_1c761e931;
		}
		_iter_end_1c761e931:;
	};
	return false;;
}



inline jule::Str _1ddc75702_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_220d12cac_DirEntry>> _2617_dirents = ({
				auto except = static__221a55d95_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c7620745;
				} jule::Slice<jule::Ptr<_220d12cac_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1ddc75559_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_221b39132_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1c7620745;
			};
		}
	_iter_next_1c7620745:;
	}
	_iter_end_1c7620745:;;
	return jule::Str();;
}



inline jule::Slice<_222b38ae2_Log> _1ddc75999_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__220c2c0e4_Read(_221b355c3_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_222b38ae2_Log>::make({_222b38ae2_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _222ab46b6_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_222b38ae2_Log>::make({_222b38ae2_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1de3b0c60_FileInfo> _1de3b3867_ParseFile(jule::Ptr<_222e675a2_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1de3b0c60_FileInfo> _2713_finf = jule::new_ptr<_1de3b0c60_FileInfo>();;
	({
		__jule_tuple_x_209084bc2_Ast__jule_tuple_s_222b38ae2_Log __jule_assign_result = _1de40a2b5_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_209084bc2_Ast__jule_tuple_s_222b38ae2_Log _1de40a2b5_parseFileset(jule::Ptr<_222e675a2_File> _5521_f) {
	__jule_tuple_x_209084bc2_Ast__jule_tuple_s_222b38ae2_Log __jule_func_result;
	jule::Ptr<_1de428c62_parser> _5613_p = jule::new_ptr<_1de428c62_parser>();;
	_1de438634_parse(_5613_p, _5521_f);
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_2090c90e0_ScopeTree> _1de40ac22_newScope(void) {
	return jule::new_ptr<_2090c90e0_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1de40aeca_isSt(jule::Ptr<_222e62217_Token> _499_current, jule::Ptr<_222e62217_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1de40b31b_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_222e62217_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_222e62217_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _222e62c0c_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1de40b6a1_nextStPos(jule::Slice<jule::Ptr<_222e62217_Token>>& _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_222e62217_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1d436841a:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1d436a84b:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1de40b31b_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de40aeca_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1d4368c12:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de40aeca_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1d4368a47:;
						};
						goto _iter_next_1d4366b22;
					}
				}
				_match_end_1d43683b5:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1d4366b22;
			};
			if ((_7213_i > _7033_start)) {
				if (_1de40b31b_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_1d4366b22;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de40aeca_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1de40aeca_isSt(_7613_tok,_7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1d4366b22;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1d4366b22:;
	}
	_iter_end_1d4366b22:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_222e62217_Token__jule_tuple_bool _1de40b9e2_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_222e62217_Token>> _13228_tokens) {
	__jule_tuple_sx_222e62217_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1de40b6a1_nextStPos(_13228_tokens,_1339_start);
		_13216_i = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_222e62217_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_222e62217_Token__jule_tuple_bool __jule_assign_result = _1de40b9e2_skipSt(_13216_i,_13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1de40bcde_stmt>> _1de40c185_splitStmts(jule::Slice<jule::Ptr<_222e62217_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_1de40bcde_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1de40bcde_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_222e62217_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_222e62217_Token__jule_tuple_bool __jule_assign_result = _1de40b9e2_skipSt(_15613_pos,_15420_tokens);
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1de40bcde_stmt>(_1de40bcde_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1d437349c:;
	}
	_iter_end_1d437349c:;;
	return _15513_stmts;;
}



inline jule::Bool _1de423872_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));;
}



inline jule::Bool _1de423b5d_isTypeRange(jule::Slice<jule::Ptr<_222e62217_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_1d442db84:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_222e62217_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_1d4430009:;
							if (it != expr.end()) {
								jule::Ptr<_222e62217_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1d443168c:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1d4431eea:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1d4430009;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1d4432072:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1d4430009;
														}
													}
													_match_end_1d4431d1e:;
												};
											}
										}
										_match_end_1d443144a:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1de423872_isTypeOp(_90524_lToken.get()._field_Kind);;
									};
								}
								_iter_next_1d4430009:;
								++it;
								goto _iter_begin_1d4430009;
							}
							_iter_end_1d4430009:;
						};
						return true;;
					};
				};
				if ((!(_1de423872_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1d442db84:;
			++it;
			_8979_i++;
			goto _iter_begin_1d442db84;
		}
		_iter_end_1d442db84:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de423e05_getBlockExpr(jule::Slice<jule::Ptr<_222e62217_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_1d44337c1:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1d44345a2:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1d4434629:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1d44353b6:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1d4435509;
										};
										return _93322_tokens.slice(0LL,_9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1d4435a48:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1d4435570:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1d4435509:;
							};
						}
					}
					_match_end_1d4434508:;
				};
			}
			_iter_next_1d44337c1:;
			++it;
			_9369_i++;
			goto _iter_begin_1d44337c1;
		}
		_iter_end_1d44337c1:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token _1de42428a_splitDelim(jule::Slice<jule::Ptr<_222e62217_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_1d44340da:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1d4437c37:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1d4438a29:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1d44340da;
									}
								}
								else {
									_case_begin_1d443862d:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1d4438463:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1d4437cae:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_222e62217_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_222e62217_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1d4437a06:;
				};
			}
			_iter_next_1d44340da:;
			++it;
			_9669_i++;
			goto _iter_begin_1d44340da;
		}
		_iter_end_1d44340da:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1de424532_findLowestPrecOp(jule::Slice<jule::Ptr<_222e62217_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_1d443b334:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1d443c06b:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1d443cbc6:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1d443d402;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1d443d402:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1d443ce5c:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1d443cc92:;
							};
							goto _iter_next_1d443b334;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1d443c0e3:;
						{
							goto _iter_next_1d443b334;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1d443c16a:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1d443b334;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1d443c1e2:;
						{
							goto _iter_next_1d443b334;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1d443c269:;
						{
							goto _iter_next_1d443b334;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1d443c2e1:;
						{
							goto _iter_next_1d443b334;
						}
					}
					_match_end_1d443be17:;
				};
				jule::Ptr<_222e62217_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1d443b334;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_222e62217_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1d443b334;
						};
					};
				};
				jule::U8 _104513_p = _222e625be_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1d443b334:;
			++it;
			_10019_i++;
			goto _iter_begin_1d443b334;
		}
		_iter_end_1d443b334:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_2090c0339_IdentExpr> _1de4247c9_buildIdentExpr(jule::Ptr<_222e62217_Token>& _105424_token) {
	return jule::new_ptr<_2090c0339_IdentExpr>(_2090c0339_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_222e62217_Token__jule_tuple_int _1de424a71_getRangeExprTokens(jule::Slice<jule::Ptr<_222e62217_Token>>& _106228_tokens) {
	__jule_tuple_sx_222e62217_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_222e62217_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1d444b6eb:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1d4446482:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1d4446273:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _106228_tokens.slice(0LL,_106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1d444545e:;
	}
	_iter_end_1d444545e:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1de4257ca_checkAssignTokens(jule::Slice<jule::Ptr<_222e62217_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_222e667b0_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1d44dacda:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d44dc072:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1d44dbb65:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1d44db956:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1d44dacda;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _222e66cee_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1d44dacda:;
			++it;
			goto _iter_begin_1d44dacda;
		}
		_iter_end_1d44dacda:;
	};
	return false;;
}



inline _222b38ae2_Log _1de4269eb_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_222e675a2_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_222b39032_Logf(_5243_fmt,_5256_args), };;
}



inline jule::Slice<jule::Ptr<_222e62217_Token>> _1de426ec4_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_222e62217_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_222e62217_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_222e62217_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1d44e28c4:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1d44e294b:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1d44e2693:;
				};
			};
		}
	_iter_next_1d44e18c3:;
	}
	_iter_end_1d44e18c3:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));;
}



inline __jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token _1de42726b_rangeLast(jule::Slice<jule::Ptr<_222e62217_Token>>& _10319_tokens) {
	__jule_tuple_sx_222e62217_Token__jule_tuple_sx_222e62217_Token __jule_func_result;
	if ((_10319_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_222e62217_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1d44e6be7:;
						{
							(_10913_braceN)++;
							goto _iter_next_1d44e394c;
						}
					}
					else {
						_case_begin_1d44e67da:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1d44e65cb:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _10319_tokens.slice(0LL,_11013_i);
				__jule_func_result.__jule_result_arg1 = _10319_tokens.slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1d44e394c:;
	}
	_iter_end_1d44e394c:;;
	__jule_func_result.__jule_result_arg0 = _10319_tokens;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log _1de427656_partsKind(jule::Slice<jule::Ptr<_222e62217_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_func_result;
	if ((_13219_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _13713_parts = nullptr;;
	jule::Slice<_222b38ae2_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1d44e990e:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d44eb092:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1d44e990e;
							}
						}
						else {
							_case_begin_1d44eab85:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1d44ea976:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1d44e990e;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_222b38ae2_Log _16121_err = _1de4269eb_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1d44e990e:;
			++it;
			_1429_i++;
			goto _iter_begin_1d44e990e;
		}
		_iter_end_1d44e990e:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_222e62217_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log _1de427a41_parts(jule::Slice<jule::Ptr<_222e62217_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_222e62217_Token__jule_tuple_s_222b38ae2_Log __jule_func_result;
	if ((_18415_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_222e62217_Token>>> _18913_parts = nullptr;;
	jule::Slice<_222b38ae2_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1d45010ec:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_222e62217_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1d4502780:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1d45010ec;
							}
						}
						else {
							_case_begin_1d4502373:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1d4502164:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1d45010ec;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_222b38ae2_Log _21321_err = _1de4269eb_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1d45010ec:;
			++it;
			_1949_i++;
			goto _iter_begin_1d45010ec;
		}
		_iter_end_1d45010ec:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_222e62217_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1de427cd8_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1d4505c7d:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1d4505ce4:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1d4505a6e:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1d4504d26:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d4504cc1:;
	};
}



inline _222b38ae2_Log _1de4281c3_compilerErr(jule::Ptr<_222e62217_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_222b39032_Logf(_24333_fmt,_24346_args), ._field_Line=_222e6877e_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };;
}



inline void _1de428602_pushSuggestion(_222b38ae2_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_222b39032_Logf(_25441_fmt,_25454_args);
}



inline jule::Str _1de428899_tokstoa(jule::Slice<jule::Ptr<_222e62217_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1d4508940:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1d4508940:;
			++it;
			goto _iter_begin_1d4508940;
		}
		_iter_end_1d4508940:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1d45090e4:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1d45090e4:;
			++it;
			goto _iter_begin_1d45090e4;
		}
		_iter_end_1d45090e4:;
	};
	return _26313_s;;
}



inline jule::Bool _1de43890e_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _222a7d174_DecodeRuneStr(_203511_ident);
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2229bd207_IsUpper(_203610_r);;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de4392d3_buildVoidType(void) {
	return jule::new_ptr<_2090b9157_TypeDecl>();;
}



inline jule::Ptr<_2090b9157_TypeDecl> _1de4394e2_buildPrimType(jule::Ptr<_222e62217_Token> _2322_t) {
	return jule::new_ptr<_2090b9157_TypeDecl>(_2090b9157_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_2090b971d_IdentTypeDecl>(_2090b971d_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ddc4e742_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1d46a8848:;
			{
				__jule_func_result.__jule_result_arg0=_222b3be03_IsWindows(_222b724cc_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1d46a824e:;
			{
				__jule_func_result.__jule_result_arg0=_222b3c1ab_IsDarwin(_222b724cc_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1d46a82b5:;
			{
				__jule_func_result.__jule_result_arg0=_222b3c453_IsLinux(_222b724cc_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1d46a832b:;
			{
				__jule_func_result.__jule_result_arg0=_222b3d058_IsUnix(_222b724cc_Os);
			}
		}
		else {
			_case_begin_1d46a7a01:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1d46a7e1e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ddc60bd7_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1d46aa6e6:;
			{
				__jule_func_result.__jule_result_arg0=_222b3c772_IsI386(_222b49b58_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1d46aa75c:;
			{
				__jule_func_result.__jule_result_arg0=_222b3ca19_IsAmd64(_222b49b58_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1d46aa7c3:;
			{
				__jule_func_result.__jule_result_arg0=_222b3ccb1_IsArm64(_222b49b58_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1d46aa839:;
			{
				__jule_func_result.__jule_result_arg0=_222b3d674_Is64Bit(_222b49b58_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1d46aa8a0:;
			{
				__jule_func_result.__jule_result_arg0=_222b3d3cc_Is32Bit(_222b49b58_Arch);
			}
		}
		else {
			_case_begin_1d46a9e98:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1d46aa3b6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ddc4996d_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_221b1ad8e_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _221b36a8b_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _222ab0096_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc4e742_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc60bd7_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_222ab0096_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc4e742_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc60bd7_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc60bd7_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc4e742_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ddc4e742_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1ddc6457b_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_222b724cc_Os);;
	if (_222b3d058_IsUnix(_222b724cc_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1ddc647ce_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_222b49b58_Arch);;
	if (_222b3d674_Is64Bit(_222b49b58_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_222b3d3cc_Is32Bit(_222b49b58_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1ddc64a87_initVars(jule::Slice<jule::Str>& _5518_vars, _1ddc6426d_CompileInfo& _5532_info) {
	_1ddc6457b_setOsVars(_5518_vars);
	_1ddc647ce_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d46b69bb:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d46b6a32:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1d46b64b0:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d46b737e:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d46b73e5:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d46b745b:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1d46b7add:;
	};
}



inline jule::Slice<jule::U8> _1ddc7e695_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__220c2c0e4_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_222b87b1e_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _222b38ae2_Log _1ddd556c2_flatCompilerErr(jule::Str _4120_text) {
	return _222b38ae2_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ddc517cc_pushPasses(jule::Ptr<_1dda18891_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d46e88aa:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1d46e9339:;
					if (it != expr.end()) {
						_1dd9ce59e_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1d46e9339;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1d46ea2e6:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1d46e9339;
										};
									}
									_iter_next_1d46ea2e6:;
									++it;
									goto _iter_begin_1d46ea2e6;
								}
								_iter_end_1d46ea2e6:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1d46e9339:;
						++it;
						goto _iter_begin_1d46e9339;
					}
					_iter_end_1d46e9339:;
				};
			}
			_iter_next_1d46e88aa:;
			++it;
			goto _iter_begin_1d46e88aa;
		}
		_iter_end_1d46e88aa:;
	};
}



inline jule::Slice<jule::Str> _1de02c5be_getAllUniquePasses(jule::Ptr<_1dda18891_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1dda15937_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ddc517cc_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1d46eb869:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1ddc517cc_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1d46eb869:;
			++it;
			goto _iter_begin_1d46eb869;
		}
		_iter_end_1d46eb869:;
	};
	return _12913_passes;;
}



inline _1ddc6426d_CompileInfo _1de03da86_buildCompileInfo(void) {
	_1ddc6426d_CompileInfo _14213_info = _1ddc6426d_CompileInfo{._field_Prod=_220b7b906_Production, ._field_Test=_220b7ae99_Test, };;
	{
		auto &_match_expr{ _220abc78c_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d46ecbcd:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d46ecc44:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1d46ecb56:;
	};
	{
		auto &_match_expr{ _220b7a75c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d46ec44c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d46ed0c9:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d46ed140:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1d46ed53b:;
	};
	return _14213_info;;
}



inline void _1de5024de_EliminateDefines(jule::Ptr<_1dded98cd_IR>& _28526_ir) {
	jule::Ptr<_2173a20be_ObjectDeadCode> _28613_ocd = static__1de4eed9e_new(_28526_ir);;
	_1de502225_elimanate(_28613_ocd);
}



inline jule::Ptr<_209085db0_Directive> _1de502874_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1d47422a5:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1d47422a5:;
			++it;
			goto _iter_begin_1d47422a5;
		}
		_iter_end_1d47422a5:;
	};
	return nullptr;;
}



inline jule::Bool _1de502bb5_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1de502874_findDirective(_30118_directives,_30149_tag) != nullptr);;
}



inline void _1de506812_eliminateDeadCodeOfScope(jule::Ptr<_1dd9e7232_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1dd9e9971_Label>> _2429_labels = jule::Slice<jule::Ptr<_1dd9e9971_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1dd9e9c5c_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1dd9e9c5c_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1de50390d_scopeDeadCode> _24413_sdc = jule::new_ptr<_1de50390d_scopeDeadCode>(_1de50390d_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1dd9e9971_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1dd9e9c5c_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1de506526_optimizeStmts(_24413_sdc);
	};
}



inline void _1de506a98_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1dd9c761e_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1d47820e7:;
		if (it != expr.end()) {
			jule::Ptr<_1dd9c761e_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1d47841d7:;
					if (it != expr.end()) {
						jule::Ptr<_1dd9ca2c0_FnIns> _25621_ins = *it;
						{
							_1de506812_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1d47841d7:;
						++it;
						goto _iter_begin_1d47841d7;
					}
					_iter_end_1d47841d7:;
				};
			}
			_iter_next_1d47820e7:;
			++it;
			goto _iter_begin_1d47820e7;
		}
		_iter_end_1d47820e7:;
	};
}



inline void _1de506cda_eliminateFunctionsScopePackage(jule::Ptr<_1dda18891_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d4784649:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _26317_f = *it;
			{
				_1de506a98_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1d4784649:;
			++it;
			goto _iter_begin_1d4784649;
		}
		_iter_end_1d4784649:;
	};
}



inline void _1de507082_eliminateScopePackage(jule::Ptr<_1dda18891_Package>& _26831_pkg) {
	_1de506cda_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1de507291_EliminateScopes(jule::Ptr<_1dded98cd_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1dda15937_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1de507082_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1d4785cee:;
	}
	_iter_end_1d4785cee:;;
	_1de507082_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1ddb8537b_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _222a83b08_HasPrefix(_39817_f,_221b355c3_Join(jule::Slice<jule::Str>::make({_222b72147_PathStdlib,_39825_p})));;
}



inline jule::Bool _1ddb85689_isConstantValidConditionalCase(jule::Ptr<_1dd9e762d_If>& _40236_i) {
	{
		auto &_match_expr{ _40236_i.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d480a44a:;
			{
				jule::Ptr<_1dd9ad050_Const> _40513_c = _40236_i.get()._field_Expr.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
				return (_1dd9b21b9_IsBool(_40513_c.ptr()) && _1dd9aed21_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1d480a2c4:;
	};
	return false;;
}



inline jule::Bool _1ddb85942_isUnreachableExpr(jule::Any& _41123_expr) {
	{
		auto &_match_expr{ _41123_expr };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d480ad85:;
			{
				jule::Ptr<_1dd9ad050_Const> _41413_c = _41123_expr.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48);;
				return (_1dd9b21b9_IsBool(_41413_c.ptr()) && (!(_1dd9aed21_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d480adeb:;
			{
				jule::Ptr<_1dd9b9336_BinopExprModel> _41713_m = _41123_expr.cast_ptr<_1dd9b9336_BinopExprModel>(&__jule_any_type118);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1ddb85942_isUnreachableExpr(_41713_m.get()._field_Left.get()._field_Model) || _1ddb85942_isUnreachableExpr(_41713_m.get()._field_Right.get()._field_Model));;
				};
			}
		}
		_match_end_1d480a505:;
	};
	return false;;
}



inline jule::Bool _1ddb85c83_isConstantValidMatchCase(jule::Ptr<_1dd9eb9c8_Case>& _42630_case) {
	{
		auto &expr = _42630_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1d480d6c3:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> &_42712_expr = *it;
			{
				if (((_1dda89d0d_IsConst(_42712_expr.ptr()) && _1dd9b21b9_IsBool(_42712_expr.get()._field_Constant.ptr())) && _1dd9aed21_ReadBool(_42712_expr.get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1d480d6c3:;
			++it;
			goto _iter_begin_1d480d6c3;
		}
		_iter_end_1d480d6c3:;
	};
	return false;;
}



inline jule::Bool _1ddb8602a_isUnreachableConditionalCase(jule::Ptr<_1dd9e762d_If>& _43534_i) {
	return _1ddb85942_isUnreachableExpr(_43534_i.get()._field_Expr);;
}



inline jule::Bool _1ddb862d3_isUnreachableMatchCase(jule::Ptr<_1dd9eb9c8_Case>& _43928_case) {
	{
		auto &expr = _43928_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1d4810c58:;
		if (it != expr.end()) {
			jule::Ptr<_1dda8944a_Data> &_44012_expr = *it;
			{
				if ((!(_1ddb85942_isUnreachableExpr(_44012_expr.get()._field_Model)))) {
					return false;;
				};
			}
			_iter_next_1d4810c58:;
			++it;
			goto _iter_begin_1d4810c58;
		}
		_iter_end_1d4810c58:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ddb8dbd1_checkForBitShiftOpt(jule::Ptr<_1dd9b8d6e_OperandExprModel>& _45125_l, jule::Ptr<_1dd9b8d6e_OperandExprModel>& _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1dd9ac47d_IsInt(_1ddab57c8_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_1dd9ac47d_IsInt(_1ddab57c8_Str(_45148_r.get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d4848114:;
			{
				goto _match_end_1d4848b09;
			}
		}
		else {
			_case_begin_1d4848c5d:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1d4848b09:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1dd9b07c2_AsU64(_45148_r.get()._field_Model.cast_ptr<_1dd9ad050_Const>(&__jule_any_type48).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _1dd9687be_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _1ddb90c16_PushOptLevel(jule::I64 _3217_level) {
	_1ddb8e42e_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb8e73c_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb8ea06_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb8ed14_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb900cd_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb90397_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb90661_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ddb90a3a_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1de4c7041_detectEnabled(void) {
	_21734a551_exprEnabled=(((_1ddb90661_Ptr || _1ddb8ed14_Math) || _1ddb900cd_Access) || _1ddb90a3a_Cond);
	_21734ba5d_scopeEnabled=((_1ddb90a3a_Cond || _1ddb8ea06_Append) || _1ddb8e42e_Copy);
}



inline void _1de52900a_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_222b87b1e_Exit(1LL);
}



inline jule::U64 _1c56cd0eb_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1c56cd409_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1c56cd78e_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1d48d2027:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d48d21ae:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d48d2225:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d48d228b:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d48d2302:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d48d2368:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1d48d23ce:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1d48d2445:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d48d24ab:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1d48d2522:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d48d2599:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1d48d1ec2:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1c562b9b7_isCopyOptimizable(jule::Ptr<_1dda8944a_Data>& _75423_expr) {
	if ((!(_75423_expr.get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ _75423_expr.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d4980999:;
			{
				return false;;
			}
		}
		_match_end_1d4980944:;
	};
	return true;;
}



inline jule::Bool _1c562bd4c_isIterCopyOptimizable(jule::Ptr<_1dda8944a_Data>& _76527_expr, jule::Ptr<_1dda418db_Var>& _76541_v) {
	if (((!(_76527_expr.get()._field_Lvalue)) && (!(_1ddab6a4e_Mutable(_76527_expr.get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!(_76541_v.get()._field_Mutable)) && (!(_76527_expr.get()._field_Mutable)));;
}



inline jule::Str _1c563ad17_decomposeCommonEsq(jule::U8 _138723_b) {
	{
		auto &_match_expr{ _138723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1d4a3d947:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d4a3dedb:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d4a3e052:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1d4a3e0b8:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1d4a3dbcd:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1d4a3dc44:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1d4a3dcaa:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1d4a3dd21:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1d4a3e30a:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1d4a3e371:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1d4a3da9b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d4a3d9d0:;
	};
}



inline jule::Str _1c563b103_sbtoa(jule::U8 _141410_b) {
	if ((_141410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_141410_b < 128LLU)) {
		jule::Str _141913_seq = _1c563ad17_decomposeCommonEsq(_141410_b);;
		if ((!(_141913_seq.empty()))) {
			return _141913_seq;;
		};
		if (((32LL <= _141410_b) && (_141410_b <= 126LLU))) {
			return static_cast<jule::Str>(_141410_b);;
		};
	};
	jule::Str _14279_seq = _1dd99d5d4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_141410_b)),8LL);;
	if ((_14279_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14279_seq);;
	};
	return (jule::Str("\\", 1) + _14279_seq);;
}



inline jule::Str _1c563b39a_cstrBytes(jule::Slice<jule::U8> _143414_bytes) {
	jule::Str _143513_lit = jule::Str::alloc(0LL, _143414_bytes.len());;
	{
		auto &expr = _143414_bytes;
		auto it = expr.begin();
		_iter_begin_1d4a44dd2:;
		if (it != expr.end()) {
			jule::U8 &_143612_b = *it;
			{
				_143513_lit+=_1c563b103_sbtoa(_143612_b);
			}
			_iter_next_1d4a44dd2:;
			++it;
			goto _iter_begin_1d4a44dd2;
		}
		_iter_end_1d4a44dd2:;
	};
	return _143513_lit;;
}



inline jule::Str _1c563b6b9_cstrLit(jule::Slice<jule::U8> _144212_bytes) {
	return ((jule::Str("\"", 1) + _1c563b39a_cstrBytes(_144212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1c563b9c7_ftoa(jule::F64 _14469_f, jule::I64 _144617_bitsize) {
	if ((_144617_bitsize != 32LL)) {
		if ((_14469_f == static_cast<jule::F64>(static_cast<jule::I64>(_14469_f)))) {
			return _1c563bc6e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14469_f)));;
		};
		if ((_14469_f == static_cast<jule::F64>(static_cast<jule::U64>(_14469_f)))) {
			return _1c563c016_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14469_f)));;
		};
	};
	jule::Str _145513_m = _2173c163d_FmtFloat(_14469_f,'f',-1LL,_144617_bitsize);;
	if ((!(_222ab1927_Contains(_145513_m,jule::Str(".", 1))))) {
		_145513_m+=jule::Str(".0", 2);
	};
	return _145513_m;;
}



inline jule::Str _1c563bc6e_itoa(jule::I64 _14629_x) {
	{
		
		if ((_14629_x == jule::MAX_I64)) {
			_case_begin_1d4a484ac:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_14629_x == jule::MIN_I64)) {
			_case_begin_1d4a48523:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1d4a48369:;
	};
	jule::Str _14709_fmt = _1dd99d969_FmtInt(_14629_x,10LL);;
	if (_222b3d674_Is64Bit(jule::Str("arm64", 5))) {
		return (_14709_fmt + jule::Str("LL", 2));;
	};
	return (_14709_fmt + jule::Str("L", 1));;
}



inline jule::Str _1c563c016_utoa(jule::U64 _14779_x) {
	{
		
		if ((_14779_x == jule::MAX_U64)) {
			_case_begin_1d4a4a17e:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1d4a4a080:;
	};
	jule::Str _14839_fmt = _1dd99d5d4_FmtUint(_14779_x,10LL);;
	if (_222b3d674_Is64Bit(jule::Str("arm64", 5))) {
		return (_14839_fmt + jule::Str("LLU", 3));;
	};
	return (_14839_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1c563c3bd_isForwarded(jule::Ptr<_1dd9e7232_Scope>& _149017_s) {
	jule::Any _14919_last = _149017_s.get()._field_Stmts[(_149017_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _14919_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d4a4b955:;
			{
				{
					auto &_match_expr{ _14919_last.cast_ptr<_1dda8944a_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1d4a4ca00:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1d4a4cdb8:;
						{
							return false;;
						}
					}
					_match_end_1d4a4cb10:;
				};
			}
		}
		else {
			_case_begin_1d4a4c23b:;
			{
				return true;;
			}
		}
		_match_end_1d4a4c15e:;
	};
}



inline jule::Bool _1c563c687_isBuiltinCallHasDebuginf(jule::Ptr<_1dd9bb1a1_FnCallExprModel>& _150530_m) {
	if ((!(_1dd9cb656_IsBuiltin(_150530_m.get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ _150530_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d4a4d160:;
			{
				jule::Ptr<_1dd9beb99_CommonSubIdentExprModel> _151113_csie = _150530_m.get()._field_Expr.cast_ptr<_1dd9beb99_CommonSubIdentExprModel>(&__jule_any_type74);;
				return (_151113_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1d4a4c4c2:;
			{
				return false;;
			}
		}
		_match_end_1d4a4c46c:;
	};
}



inline jule::Bool _1c563c8b8_isExprComesFromBind(jule::Ptr<_1dda8944a_Data>& _151825_d) {
	{
		auto &_match_expr{ _151825_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d4a5045e:;
			{
				return _151825_d.get()._field_Model.cast_ptr<_1dda418db_Var>(&__jule_any_type9).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d4a504c5:;
			{
				return _151825_d.get()._field_Model.cast_ptr<_1dd9bdadd_StructSubIdentExprModel>(&__jule_any_type72).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1d4a4ea9b:;
			{
				return false;;
			}
		}
		_match_end_1d4a4ea46:;
	};
}



inline jule::Bool _1c563cb60_isAny(jule::Ptr<_1ddab53cc_TypeKind>& _153015_t) {
	if ((_1ddab8215_TypeEnum(_153015_t.ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ddaba129_Prim> _15349_prim = _1ddab7764_Prim(_153015_t.ptr());;
	return ((_15349_prim != nullptr) && _1ddabd5c2_IsAny(_15349_prim.ptr()));;
}



inline void _1c56d7a40_iterFiles(jule::Ptr<_1dda18891_Package>& _122619_pkg, jule::Fn<void(jule::Ptr<_1dda84621_SymbolTable>&)> _122634_f) {
	{
		auto &expr = _122619_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1d4bcdd7e:;
		if (it != expr.end()) {
			jule::Ptr<_1dda84621_SymbolTable> _122717_file = *it;
			{
				_122634_f(_122717_file);
			}
			_iter_next_1d4bcdd7e:;
			++it;
			goto _iter_begin_1d4bcdd7e;
		}
		_iter_end_1d4bcdd7e:;
	};
}



inline jule::Str _1c56d7d2b_concatAllParts(jule::Slice<jule::Ptr<_222e62217_Token>> _123319_parts) {
	jule::I64 _123413_n = 0LL;;
	{
		auto &expr = _123319_parts;
		auto it = expr.begin();
		_iter_begin_1d4bd015a:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_123512_part = *it;
			{
				_123413_n+=_123512_part.get()._field_Kind.len();
			}
			_iter_next_1d4bd015a:;
			++it;
			goto _iter_begin_1d4bd015a;
		}
		_iter_end_1d4bd015a:;
	};
	if ((_123413_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _124113_s = jule::Str::alloc(0LL, _123413_n);;
	{
		auto &expr = _123319_parts;
		auto it = expr.begin();
		_iter_begin_1d4bd11c2:;
		if (it != expr.end()) {
			jule::Ptr<_222e62217_Token> &_124212_p = *it;
			{
				_124113_s+=_124212_p.get()._field_Kind;
			}
			_iter_next_1d4bd11c2:;
			++it;
			goto _iter_begin_1d4bd11c2;
		}
		_iter_end_1d4bd11c2:;
	};
	return _124113_s;;
}



inline jule::Ptr<_209085db0_Directive> _1c56e5c5c_findDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _46523_directives, jule::Str _46554_tag) {
	{
		auto &expr = _46523_directives;
		auto it = expr.begin();
		_iter_begin_1d4cc0679:;
		if (it != expr.end()) {
			jule::Ptr<_209085db0_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_1d4cc0679:;
			++it;
			goto _iter_begin_1d4cc0679;
		}
		_iter_end_1d4cc0679:;
	};
	return nullptr;;
}



inline jule::Bool _1c56e60e2_hasDirective(jule::Slice<jule::Ptr<_209085db0_Directive>>& _47518_directives, jule::Str _47549_tag) {
	return (_1c56e5c5c_findDirective(_47518_directives,_47549_tag) != nullptr);;
}



inline jule::Bool _1c56e6389_shouldInitialized(jule::Ptr<_1ddab53cc_TypeKind>& _48227_t) {
	jule::Ptr<_1ddaba129_Prim> _4839_prim = _1ddab7764_Prim(_48227_t.ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_1ddabd5c2_IsAny(_4839_prim.ptr()))) && (!(_1ddabd35d_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_1ddab79c8_Sptr(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc3528:;
			{
				return false;;
			}
		}
		else if ((_1ddab918e_Map(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc2e51:;
			{
				return false;;
			}
		}
		else if ((_1ddab86dd_Slc(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc2ec8:;
			{
				return false;;
			}
		}
		else if ((_1ddab8e2a_Trait(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc3050:;
			{
				return false;;
			}
		}
		else if ((_1ddab8952_Fn(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc3209:;
			{
				return false;;
			}
		}
		else if ((_1ddab8479_Arr(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc3270:;
			{
				jule::Ptr<_1ddac14b5_Arr> _49917_arr = _1ddab8479_Arr(_48227_t.ptr());;
				return _1c56e6389_shouldInitialized(_49917_arr.get()._field_Elem);;
			}
		}
		else if ((_1ddab8bb6_Struct(_48227_t.ptr()) != nullptr)) {
			_case_begin_1d4cc32d6:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1d4cc279c:;
			{
				return true;;
			}
		}
		_match_end_1d4cc2747:;
	};
}



inline void _222b0cb3d_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _222b161da_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _222b0c973_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _222b0c973_HelpMap;
		auto it = expr.begin();
		_iter_begin_1d4d64696:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1d4d64696:;
			++it;
			goto _iter_begin_1d4d64696;
		}
		_iter_end_1d4d64696:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _222b0c973_HelpMap;
		auto it = expr.begin();
		_iter_begin_1d4d6605a:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_222a844bb_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1d4d6605a:;
			++it;
			_519_i++;
			goto _iter_begin_1d4d6605a;
		}
		_iter_end_1d4d6605a:;
	};
	jule::outln(_4913_s);
}



inline void _222b09d5a_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _222b09e8c_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _222b02c54_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _222b02d86_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1d4d6ceeb:;
			{
				_222b09e8c_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1d4d6cc10:;
			{
				_222b02c54_toolDistarch();
			}
		}
		else {
			_case_begin_1d4d6b58d:;
			{
				_222b0cb3d_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1d4d6ca23:;
	};
}



inline void _222b17a9e_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _220abc78c_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _220b7a75c_CppStd));
}



inline void _222b17bd1_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1d4d723da:;
			{
				({
					auto except = static__220d13ab0_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_222b0cb3d_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1d4d70cbd:;
			{
				_222b0cb3d_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1d4d72011:;
	};
}



inline jule::Bool _222b287e6_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1d4d73a18:;
			{
				_222b161da_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1d4d73e47:;
			{
				_222b09d5a_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1d4d73ead:;
			{
				_222b02d86_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1d4d7409b:;
			{
				_222b17a9e_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1d4d74112:;
			{
				_222b17bd1_mod(_15320_args);
			}
		}
		else {
			_case_begin_1d4d735c8:;
			{
				return false;;
			}
		}
		_match_end_1d4d7350c:;
	};
	return true;;
}



inline void _222b28928_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _221aa5e28_Args();;
	if ((_18913_args.len() < 2LL)) {
		_222b28928_showInfo();
		return;;
	};
	if (_222b287e6_processCommand(_18913_args)) {
		return;;
	};
	_1c573562b_compileCommand(_18913_args);
}



inline void _1c56ee98b_init(void) {
	_220abc78c_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_220c4c3de_File> _1c5703077_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _221b39132_Dir(_4316_path);;
	({
		auto except = static__220c2ab5e_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__221a808d6_Create(_449_dir);
				if (!except.ok()) {
					_1de52900a_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__220c2b962_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1de52900a_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c570e1b5_clearObjects(void) {
	({
		auto except = static__220c4e688_Remove(_1c56ea514_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__221a5a74b_Remove(_1c56ea756_OutDir);
}



inline void _1c56ecbba_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_222b83c80_Cmd> _7313_cmd = static__222b841ae_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_222ab15d6_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _222b84423_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type1) == _match_expr) {
					_case_begin_1d4d7b27e:;
					{
						static__1de526920_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type1) == _match_expr) {
					_case_begin_1d4d7aa64:;
					{
						static__1de526920_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL), &__jule_any_type1) == _match_expr) {
					_case_begin_1d4d7acc8:;
					{
						static__1de526920_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type1) == _match_expr) {
					_case_begin_1d4d7ad3e:;
					{
						static__1de526920_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1d4d7ab96:;
					{
						static__1de526920_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1d4d7aaec:;
			};
			_1de52900a_Throw(jule::Str());

			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _220abc78c_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1de526920_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1de52900a_Throw(jule::Str());
	};
	_1c570e1b5_clearObjects();
}



inline jule::Bool _1c571dbca_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _222ab0096_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;;
	};
	return _222b2bed1_IsValidCppExt(_10420_path.slice(_1059_offset));;
}



inline void _1c5722cbc_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _220b7a75c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d4d792e3:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d4d80aad:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d4d80b24:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1d4d8088d:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_220b7b906_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1c56eae82_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _220b7a75c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1d4d81053:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1d4d83352:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d4d833b8:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1d4d83132:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_220b7b906_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1c5700e10_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1dded98cd_IR>& _16436_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str &_16510_compiler = _220b7a53c_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _220abc78c_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d4d85211:;
			{
				_1c56eae82_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d4d862ab:;
			{
				_1c5722cbc_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1d4d86179:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1d4d86b5d:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1d4d86b5d:;
			++it;
			goto _iter_begin_1d4d86b5d;
		}
		_iter_end_1d4d86b5d:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1d4d870c0:;
		if (it != expr.end()) {
			jule::Ptr<_1dda15937_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1c571dbca_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1d4d870c0:;
			++it;
			goto _iter_begin_1d4d870c0;
		}
		_iter_end_1d4d870c0:;
	};
	if ((!(_1c56eabb8_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1c56eabb8_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	__jule_func_result.__jule_result_arg0 = _16510_compiler;
	__jule_func_result.__jule_result_arg1 = _16613_cmd;
	return __jule_func_result;;
}



inline jule::Str _1c56ea514_getCompilePath(void) {
	return _221b355c3_Join(jule::Slice<jule::Str>::make({_1c56ea756_OutDir,_1c56eaa64_OutName}));;
}



inline void _1c5709ed5_applyTargetIndependentOptimizations(jule::Ptr<_1dded98cd_IR>& _20545_ir) {
	jule::Ptr<_21736d94d_Optimizer> _20713_opt = static__21734a199_New(_20545_ir);;
	_2173a5149_Optimize(_20713_opt.ptr());
}



inline void _1c56e9e3c_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _220abc78c_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d4d87ac6:;
			{
				_1de52900a_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1d4d89db4:;
			{
				if (_220b7a53c_CompilerPath.empty()) {
					_220b7a53c_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1d4d89e2a:;
			{
				if (_220b7a53c_CompilerPath.empty()) {
					_220b7a53c_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1d4d89d4d:;
			{
				_1de52900a_Throw((jule::Str("invalid option value for --compiler: ", 37) + _220abc78c_Compiler));
			}
		}
		_match_end_1d4d89b72:;
	};
}



inline void _1c56edc21_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1de52900a_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1c56edd53_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1de52900a_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1c5734bad_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1de52900a_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _222ab15d6_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1de52900a_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os;;
	jule::Str _25414_arch;;
	({
		jule::Str ___jule_assign_arg = _2499_parts[0LL];
		jule::Str _1___jule_assign_arg = _2499_parts[1LL];
		_25410_os = ___jule_assign_arg;
		_25414_arch = _1___jule_assign_arg;
	});
	if ((_25410_os != jule::Str("native", 6))) {
		_1c56edd53_checkTargetOs(_25410_os);
		_222b724cc_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1c56edc21_checkTargetArch(_25414_arch);
		_222b49b58_Arch=_25414_arch;
	};
	_1dd9a2d14_UpdateTarget();
}



inline void _1c5734ce0_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1de52900a_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1d4d9295a:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1d4d92e66:;
			{
				_1ddb90c16_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1d4d92790:;
			{
				_1de52900a_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1d4d9273a:;
	};
}



inline void _1c5735153_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _220b7a75c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1d4d92ecc:;
			{
				goto _match_end_1d4d93d35;
			}
		}
		else {
			_case_begin_1d4d938d4:;
			{
				_1de52900a_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _220b7a75c_CppStd));
			}
		}
		_match_end_1d4d93d35:;
	};
}



inline jule::Slice<jule::Str> _1c5735285_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1c5730dc9_FlagSet> _29613_fs = static__1c57311b5_New();;
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1c56eabb8_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_220b7a97c_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_220b7abd0_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_220abc78c_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_220b7a53c_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_220b7b906_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_220b7b263_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_220b7b63c_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1d4d96222_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_220b7a75c_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb8e42e_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb8e73c_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb8ea06_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb8ed14_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb900cd_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb90397_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb90661_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1d4d9eb54_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ddb90a3a_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1c5731ec9_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1de52900a_Throw(except.error.cast<jule::Str>(&__jule_any_type6));

			nullptr;
		});
	});;
	_1c56e9e3c_checkCompilerFlag();
	_1c5735153_checkCppStdFlag();
	_1c5734bad_checkTargetFlag(_29413_target);
	_1c5734ce0_checkOptFlag(_29313_opt);
	return _31813_content;;
}



inline void _1c57353b7_setupSemaFlags(jule::I64& _33124_flags) {
	if (_220b7a97c_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1dded98cd_IR> _1c57354e9_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1c5735285_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1c57353b7_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1de52900a_Throw(_222b39032_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1de52900a_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _221aeeceb_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1de52900a_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_221a21459_Status> _3549_inf = ({
		auto except = static__220c2ab5e_Of(_222b72147_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1de52900a_Throw(_222b39032_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_221a21459_Status>(nullptr);});
	});;
	if ((!(_220c4d17b_IsDir(_3549_inf.ptr())))) {
		_1de52900a_Throw(_222b39032_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1dded98cd_IR> _36214_ir;;
	jule::Slice<_222b38ae2_Log> _36218_logs;;
	({
		__jule_tuple_x_1dded98cd_IR__jule_tuple_s_222b38ae2_Log __jule_assign_result = static__1ddc1dec5_Build(_34814_path,_34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1de52900a_Throw(_222b39032_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type6)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1de5285d1_PrintLogs(_36218_logs);
		_1de52900a_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1c573562b_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_220b7ae99_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1dded98cd_IR> _38313_ir = _1c57354e9_buildIr(_37724_args);;
	;
	if ((!(_220b7ae99_Test))) {
		jule::Ptr<_1dd9c761e_Fn> _38817_main = _1dda1a145_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1de52900a_Throw(_222b39032_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1c5709ed5_applyTargetIndependentOptimizations(_38313_ir);
	_1ddc5018d_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c5700e10_genCompileCmd(_1c56ea514_getCompilePath(),_38313_ir);
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1c56d2e7a_ObjectCoder> _40113_oc = static__1c564952e_New(_38313_ir,_1c5674a32_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_220b7ae99_Test) {
		jule::Ptr<_1c563eb40_TestCoder> _40617_tc = static__1c56400b3_New(_40113_oc);;
		_1c56412e5_Serialize(_40617_tc);
	} else {
		_1c56d76cc_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1c56ea514_getCompilePath();;
	jule::Ptr<_220c4c3de_File> _41313_file = _1c5703077_openOutput(_4129_path);;
	({
		auto except = _220d5bb3b_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1de52900a_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _220c2b225_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_220b7abd0_Transpilation))) {
		_1c56ecbba_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_222b73214_init();
	_1dd9a2e79_init();
	_1c56ee98b_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}