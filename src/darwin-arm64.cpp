// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 7/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _246880e42_comptimeRangeKind{};
struct _2468c5cbc_Importer{};
struct _2469b3e32_Kind{};
struct _2469d41b6_Lookup{};
struct _2288704b0_CommonFlag{};
struct _24324c1c4_Range16;
struct _24324c702_Range32;
struct _24324cba8_RangeTable;
struct _243359aea_acceptRange;
struct _2433b0c50_StrBuilder;
struct _2433bb596_lazyBuff;
struct _241ede3eb_DirEntry;
struct _241ede660_Directory;
struct _241ee1156_File;
struct _241ee3246_Status;
struct _243573781_cmdAttrs;
struct _24345e617_Log;
struct _243ded814_floatInfo;
struct _2445bb07a_decimalSlice;
struct _2445cd2ce_leftCheat;
struct _2445cdd07_decimal;
struct _2445e359c_Const;
struct _246819d43_Token;
struct _24682060c_File;
struct _246822730_kindPair;
struct _246828846_lex;
struct _24682d472_Ast;
struct _24682e31e_Node;
struct _24682e73c_Directive;
struct _246830320_TypeDecl;
struct _24683092a_IdentTypeDecl;
struct _246830c27_SubIdentTypeDecl;
struct _2468310bd_NamespaceTypeDecl;
struct _2468313ba_SptrTypeDecl;
struct _246831750_SlcTypeDecl;
struct _246831a4c_TupleTypeDecl;
struct _246831d49_PtrTypeDecl;
struct _2468325db_ArrTypeDecl;
struct _246832d39_MapTypeDecl;
struct _246833213_RetTypeDecl;
struct _246834654_Expr;
struct _246834951_RangeExpr;
struct _246835028_UseExpr;
struct _246835325_TupleExpr;
struct _2468356ee_LitExpr;
struct _246835ac8_UnsafeExpr;
struct _24683607e_IdentExpr;
struct _246836711_UnaryExpr;
struct _246836ada_VariadicExpr;
struct _246836eb4_CastExpr;
struct _24683738d_NsSelectionExpr;
struct _246837767_SubIdentExpr;
struct _246837c1d_BinopExpr;
struct _24683837d_FnCallExpr;
struct _246838d73_FieldExprPair;
struct _24683969d_StructLit;
struct _246839b54_BraceLit;
struct _24683a47e_KeyValPair;
struct _24683ab77_SliceExpr;
struct _24683b617_IndexingExpr;
struct _24683bc77_SlicingExpr;
struct _24683c074_Constraint;
struct _24683c52a_GenericDecl;
struct _24683c904_LabelSt;
struct _24683cccd_GotoSt;
struct _24683d0ca_FallSt;
struct _24683d73a_AssignLeft;
struct _24683dcbd_AssignSt;
struct _24683ebd1_Stmt;
struct _246840341_ScopeTree;
struct _246840a7d_ParamDecl;
struct _246841ed0_FnDecl;
struct _2468430ad_VarDecl;
struct _246843487_RetSt;
struct _246843b2a_Iter;
struct _246844455_WhileKind;
struct _246844d5c_RangeKind;
struct _246845236_BreakSt;
struct _246845610_ContSt;
struct _246845ab6_If;
struct _246845e90_Else;
struct _246846446_Conditional;
struct _246846b83_TypeAliasDecl;
struct _246847139_Case;
struct _246847876_MatchCase;
struct _246848190_UseDecl;
struct _246848646_EnumItemDecl;
struct _246849207_EnumDecl;
struct _246849a32_TypeEnumItemDecl;
struct _24684a192_TypeEnumDecl;
struct _24684a45b_FieldDecl;
struct _24684ad52_StructDecl;
struct _24684b58e_TraitDecl;
struct _24684bbee_Impl;
struct _24684d030_Field;
struct _246850010_Operators;
struct _246850e23_Struct;
struct _246853101_FieldIns;
struct _246857aa6_OperandExprModel;
struct _2468580a1_BinopExprModel;
struct _24685847a_UnaryExprModel;
struct _2468589a8_StructArgExprModel;
struct _246858d4e_StructLitExprModel;
struct _24685914b_AllocStructLitExprModel;
struct _2468596ce_CastingExprModel;
struct _24685a081_FnCallExprModel;
struct _24685a45a_SliceExprModel;
struct _24685a911_IndexingExprModel;
struct _24685acda_AnonFnExprModel;
struct _24685b1b4_KeyValPairExprModel;
struct _24685b66a_MapExprModel;
struct _24685bbed_SlicingExprModel;
struct _24685c281_TraitSubIdentExprModel;
struct _24685cb22_StructSubIdentExprModel;
struct _24685d0c8_StructStaticIdentExprModel;
struct _24685d4a2_ArrayExprModel;
struct _24685d79e_TupleExprModel;
struct _24685db78_BuiltinOutCallExprModel;
struct _24685e052_BuiltinOutlnCallExprModel;
struct _24685e42b_BuiltinNewCallExprModel;
struct _24685e805_BuiltinPanicCallExprModel;
struct _24685ecab_BuiltinAssertCallExprModel;
struct _246860262_BuiltinMakeCallExprModel;
struct _24686063b_BuiltinAppendCallExprModel;
struct _246860938_BuiltinLenCallExprModel;
struct _246860c35_BuiltinCapCallExprModel;
struct _24686110e_BuiltinDeleteCallExprModel;
struct _2468614d8_BuiltinCopyCallExprModel;
struct _2468618b2_BuiltinErrorCallExprModel;
struct _24685c46d_SizeofExprModel;
struct _2468620dd_AlignofExprModel;
struct _2468623da_RuneExprModel;
struct _2468626d7_IntegratedToStrExprModel;
struct _246862ab1_BackendEmitExprModel;
struct _246862dad_FreeExprModel;
struct _246863ab2_RetType;
struct _246864343_Param;
struct _246865d17_Fn;
struct _246867c70_ParamIns;
struct _246868c1b_FnIns;
struct _24686bdd9_ReferenceStack;
struct _24686d407_Pass;
struct _246872ebc_symbolBuilder;
struct _2468790e4_Trait;
struct _24687ac83_EnumItem;
struct _24687b800_Enum;
struct _24687c933_TypeEnumItem;
struct _24687d00a_TypeEnum;
struct _24687e946_comptimeMatch;
struct _246881162_comptimeRange;
struct _246881b35_comptimeStructField;
struct _2468837e6_comptimeStructFields;
struct _246884de1_comptimeStatic;
struct _246886aa2_comptimeStatics;
struct _24688819c_comptimeEnumField;
struct _246889544_comptimeEnumFields;
struct _24688ab3e_comptimeParam;
struct _24688cda5_comptimeParams;
struct _24688e4a0_comptimeTypeInfos;
struct _246890a9a_comptimeTypeInfo;
struct _2468970ac_comptimeValue;
struct _24689990b_comptimeFiles;
struct _24689b006_comptimeFile;
struct _2468a02b3_constraintChecker;
struct _2468a2309_Impl;
struct _2468a7760_Scope;
struct _2468a7b7d_If;
struct _2468a7e7a_Else;
struct _2468a8398_Conditional;
struct _2468a8695_InfIter;
struct _2468a8b4b_WhileIter;
struct _2468a9597_RangeIter;
struct _2468a992c_ContSt;
struct _2468a9d06_BreakSt;
struct _2468aa103_Label;
struct _2468aa4cc_GotoSt;
struct _2468aa8a6_Postfix;
struct _2468aad5c_Assign;
struct _2468ab236_MultiAssign;
struct _2468ab896_Match;
struct _2468ac4ce_Case;
struct _2468acac8_FallSt;
struct _2468ace5d_RetSt;
struct _2468ad5bd_scopeLabel;
struct _2468adb51_scopeGoto;
struct _2468aea64_scopeChecker;
struct _2468c2736_directiveChecker;
struct _2468c8bd2_ImportInfo;
struct _2468cbb08_Package;
struct _2468ee521_commonSemaMeta;
struct _246900148_Sema;
struct _24691de8b_missingRetChecker;
struct _24692139a_IterRelation;
struct _246922555_Var;
struct _246923369_FuncPattern;
struct _24696a757_typeCompatibilityChecker;
struct _24696c506_assignTypeChecker;
struct _24696e173_dynamicTypeAnnotation;
struct _246973ed0_fnCallArgChecker;
struct _246976e17_structLitChecker;
struct _246978be9_rangeChecker;
struct _24697b45a_retTypeChecker;
struct _24697d726_SymbolTable;
struct _246983ac2_Data;
struct _246984c16_Value;
struct _2469857b6_Eval;
struct _2469a3edd_unaryEval;
struct _2469a5e79_binaryEval;
struct _2469b2a02_InsGeneric;
struct _2469b35e6_TypeAlias;
struct _2469b43d8_TypeKind;
struct _2469bb852_TypeSymbol;
struct _2469bc259_Prim;
struct _2469c0c85_Sptr;
struct _2469c1758_Slc;
struct _2469c234c_Tuple;
struct _2469c2dec_Map;
struct _2469c3a79_Arr;
struct _2469c454c_Ptr;
struct _2469c554d_referencer;
struct _2469c653d_typeChecker;
struct _2469ce1c2_identTypeLookup;
struct _227b84a06_FileInfo;
struct _227bcd236_stmt;
struct _227bcdac7_scopeParser;
struct _227bdb19a_exprBuilder;
struct _227be863b_assignInfo;
struct _227beba3a_parser;
struct _227c0dc17_typeBuilder;
struct _246c46181_CompileInfo;
struct _246c4765a_directiveEval;
struct _227c17baa_JuleImporter;
struct _227c1cdbe_OrderedDefines;
struct _227c1d133_defineOrderer;
struct _227d452c1_liveTable;
struct _227d7e77d_scopeDeadCode;
struct _227d839d5_exprDeadCode;
struct _246b3710a_SwapExprModel;
struct _246b37528_EmptyCompareExprModel;
struct _246b37825_RefExprModel;
struct _246b37d53_StrCompExprModel;
struct _246b383d6_MutSlicingExprModel;
struct _246b386d3_UnsafeBinopExprModel;
struct _246b389d0_UnsafeIndexingExprModel;
struct _246b38e0e_PushToSliceExprModel;
struct _246b392d8_AppendToSliceExprModel;
struct _246b3a493_scopeOptimizer;
struct _246b41631_exprOptimizer;
struct _227d8aa97_Optimizer;
struct _227db3b14_AnsiEscape;
struct _227db5242_Logger;
struct _2287cc9d3_AbsTime;
struct _2287cd1a9_Time;
struct _22870b34b_scopeCoder;
struct _2287154cb_exprCoder;
struct _228725cb1_TestCoder;
struct _228728a83_identCoder;
struct _2287d5b40_SerializationInfo;
struct _2287d6217_traitHash;
struct _2287d65e1_traitCast;
struct _2287e6cc7_customType;
struct _2287e78bb_typeCoder;
struct _2288009b2_resultCoder;
struct _22c912064_Flag;
struct _22c915bb1_Flag;
struct _22c9193ac_Flag;
struct _22c91caec_Flag;
struct _22c9212e8_Flag;
struct _228872061_FlagSet;
struct _2288749e2_argParser;
struct _2287d7658_ObjectCoder;
struct _227d456ab_ObjectDeadCode;
struct _227c1a66e_IR;
struct _246853ba1_StructIns;
struct _24351d7b4_Cmd;
struct _24324c1c4_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_24324c1c4_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_24324c1c4_Range16 _other) { return !this->operator==(_other); }


};
struct _24324c702_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_24324c702_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_24324c702_Range32 _other) { return !this->operator==(_other); }


};
struct _24324cba8_RangeTable {
	jule::Slice<_24324c1c4_Range16> _field_R16;
	jule::Slice<_24324c702_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _243359aea_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_243359aea_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_243359aea_acceptRange _other) { return !this->operator==(_other); }


};
struct _2433b0c50_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _2433bb596_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _241ede3eb_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_241ee3246_Status> _field_Stat;
	

	inline bool operator==(_241ede3eb_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_241ede3eb_DirEntry _other) { return !this->operator==(_other); }


};
struct _241ede660_Directory {
	

	inline bool operator==(_241ede660_Directory _other) { return true; }

	inline bool operator!=(_241ede660_Directory _other) { return !this->operator==(_other); }


};
struct _241ee1156_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_241ee1156_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_241ee1156_File _other) { return !this->operator==(_other); }


};
struct _241ee3246_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_241ee3246_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_241ee3246_Status _other) { return !this->operator==(_other); }


};
struct _243573781_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_243573781_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_243573781_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _24345e617_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_24345e617_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_24345e617_Log _other) { return !this->operator==(_other); }


};
struct _243ded814_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_243ded814_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_243ded814_floatInfo _other) { return !this->operator==(_other); }


};
struct _2445bb07a_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _2445cd2ce_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_2445cd2ce_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_2445cd2ce_leftCheat _other) { return !this->operator==(_other); }


};
struct _2445cdd07_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_2445cdd07_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_2445cdd07_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _2445e9152_Eq(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445e9493_Lt(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445e97d4_LtEq(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445e9b25_Gt(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445e9e66_GtEq(_2445e359c_Const*, _2445e359c_Const);
struct _2445e359c_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_2445e359c_Const _other) { return _2445e9152_Eq(this, _other); }

	inline bool operator!=(_2445e359c_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2445e359c_Const _other) { return _2445e9b25_Gt(this, _other); }

	inline jule::Bool operator>=(_2445e359c_Const _other) { return _2445e9e66_GtEq(this, _other); }

	inline jule::Bool operator<(_2445e359c_Const _other) { return _2445e9493_Lt(this, _other); }

	inline jule::Bool operator<=(_2445e359c_Const _other) { return _2445e97d4_LtEq(this, _other); }


};
struct _246819d43_Token {
	jule::Ptr<_24682060c_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_246819d43_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_246819d43_Token _other) { return !this->operator==(_other); }


};
struct _24682060c_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Tokens;
	


};
struct _246822730_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_246822730_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_246822730_kindPair _other) { return !this->operator==(_other); }


};
struct _246828846_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_tokens;
	jule::Ptr<_24682060c_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_24345e617_Log> _field_errors;
	


};
struct _24682d472_Ast {
	jule::Ptr<_24682060c_File> _field_File;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_246848190_UseDecl>> _field_UseDecls;
	jule::Slice<_24682e31e_Node> _field_Nodes;
	


};
struct _24682e31e_Node {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_24682e31e_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_24682e31e_Node _other) { return !this->operator==(_other); }


};
struct _24682e73c_Directive {
	jule::Ptr<_246819d43_Token> _field_Tag;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Args;
	


};
struct _246830320_TypeDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_246830320_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246830320_TypeDecl _other) { return !this->operator==(_other); }


};
struct _24683092a_IdentTypeDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _field_Generics;
	


};
struct _246830c27_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> _field_Idents;
	


};
struct _2468310bd_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Idents;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	


};
struct _2468313ba_SptrTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Elem;
	

	inline bool operator==(_2468313ba_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2468313ba_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _246831750_SlcTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Elem;
	

	inline bool operator==(_246831750_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246831750_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _246831a4c_TupleTypeDecl {
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _field_Types;
	


};
struct _246831d49_PtrTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Elem;
	

	inline bool operator==(_246831d49_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_246831d49_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _2468325db_ArrTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Elem;
	jule::Ptr<_246834654_Expr> _field_Size;
	

	inline bool operator==(_2468325db_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_2468325db_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _246832d39_MapTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Key;
	jule::Ptr<_246830320_TypeDecl> _field_Val;
	

	inline bool operator==(_246832d39_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_246832d39_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _246833213_RetTypeDecl {
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Idents;
	


};
struct _246834654_Expr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_246834654_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246834654_Expr _other) { return !this->operator==(_other); }


};
struct _246834951_RangeExpr {
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246834951_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246834951_RangeExpr _other) { return !this->operator==(_other); }


};
struct _246835028_UseExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246835028_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246835028_UseExpr _other) { return !this->operator==(_other); }


};
struct _246835325_TupleExpr {
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Expr;
	


};
struct _2468356ee_LitExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_2468356ee_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_2468356ee_LitExpr _other) { return !this->operator==(_other); }


};
struct _246835ac8_UnsafeExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246835ac8_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246835ac8_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _24683607e_IdentExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_24683607e_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_24683607e_IdentExpr _other) { return !this->operator==(_other); }


};
struct _246836711_UnaryExpr {
	jule::Ptr<_246819d43_Token> _field_Op;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246836711_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246836711_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _246836ada_VariadicExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246836ada_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246836ada_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _246836eb4_CastExpr {
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246836eb4_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246836eb4_CastExpr _other) { return !this->operator==(_other); }


};
struct _24683738d_NsSelectionExpr {
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Ns;
	jule::Ptr<_246819d43_Token> _field_Ident;
	


};
struct _246837767_SubIdentExpr {
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_246819d43_Token> _field_Ident;
	

	inline bool operator==(_246837767_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246837767_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _246837c1d_BinopExpr {
	jule::Ptr<_246834654_Expr> _field_Left;
	jule::Ptr<_246834654_Expr> _field_Right;
	jule::Ptr<_246819d43_Token> _field_Op;
	

	inline bool operator==(_246837c1d_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_246837c1d_BinopExpr _other) { return !this->operator==(_other); }


};
struct _24683837d_FnCallExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Args;
	jule::Ptr<_246840341_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _246838d73_FieldExprPair {
	jule::Ptr<_246819d43_Token> _field_Field;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246838d73_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246838d73_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _24683969d_StructLit {
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Exprs;
	


};
struct _246839b54_BraceLit {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Exprs;
	


};
struct _24683a47e_KeyValPair {
	jule::Ptr<_246834654_Expr> _field_Key;
	jule::Ptr<_246834654_Expr> _field_Val;
	jule::Ptr<_246819d43_Token> _field_Colon;
	

	inline bool operator==(_24683a47e_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_24683a47e_KeyValPair _other) { return !this->operator==(_other); }


};
struct _24683ab77_SliceExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Exprs;
	


};
struct _24683b617_IndexingExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_246834654_Expr> _field_Index;
	

	inline bool operator==(_24683b617_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_24683b617_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _24683bc77_SlicingExpr {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_246834654_Expr> _field_Start;
	jule::Ptr<_246834654_Expr> _field_To;
	

	inline bool operator==(_24683bc77_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_24683bc77_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _24683c074_Constraint {
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _field_Mask;
	


};
struct _24683c52a_GenericDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_24683c074_Constraint> _field_Constraint;
	

	inline bool operator==(_24683c52a_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_24683c52a_GenericDecl _other) { return !this->operator==(_other); }


};
struct _24683c904_LabelSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_24683c904_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_24683c904_LabelSt _other) { return !this->operator==(_other); }


};
struct _24683cccd_GotoSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_Label;
	

	inline bool operator==(_24683cccd_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_24683cccd_GotoSt _other) { return !this->operator==(_other); }


};
struct _24683d0ca_FallSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	

	inline bool operator==(_24683d0ca_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_24683d0ca_FallSt _other) { return !this->operator==(_other); }


};
struct _24683d73a_AssignLeft {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_24683d73a_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24683d73a_AssignLeft _other) { return !this->operator==(_other); }


};
struct _24683dcbd_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_246819d43_Token> _field_Setter;
	jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> _field_Left;
	jule::Ptr<_246834654_Expr> _field_Right;
	


};
struct _24683ebd1_Stmt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_24683ebd1_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_24683ebd1_Stmt _other) { return !this->operator==(_other); }


};
struct _246840341_ScopeTree {
	jule::Ptr<_246840341_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_24683ebd1_Stmt> _field_Stmts;
	jule::Ptr<_246819d43_Token> _field_End;
	


};
struct _246840a7d_ParamDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_246840a7d_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246840a7d_ParamDecl _other) { return !this->operator==(_other); }


};
struct _246841ed0_FnDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_Generics;
	jule::Ptr<_246833213_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> _field_Params;
	


};
struct _2468430ad_VarDecl {
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Ptr<_246834654_Expr> _field_Expr;
	


};
struct _246843487_RetSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246843487_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246843487_RetSt _other) { return !this->operator==(_other); }


};
struct _246843b2a_Iter {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	

	inline bool operator==(_246843b2a_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246843b2a_Iter _other) { return !this->operator==(_other); }


};
struct _246844455_WhileKind {
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_246819d43_Token> _field_NextToken;
	

	inline bool operator==(_246844455_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_246844455_WhileKind _other) { return !this->operator==(_other); }


};
struct _246844d5c_RangeKind {
	jule::Ptr<_246819d43_Token> _field_InToken;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_2468430ad_VarDecl> _field_KeyA;
	jule::Ptr<_2468430ad_VarDecl> _field_KeyB;
	

	inline bool operator==(_246844d5c_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_246844d5c_RangeKind _other) { return !this->operator==(_other); }


};
struct _246845236_BreakSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_Label;
	

	inline bool operator==(_246845236_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_246845236_BreakSt _other) { return !this->operator==(_other); }


};
struct _246845610_ContSt {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_Label;
	

	inline bool operator==(_246845610_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_246845610_ContSt _other) { return !this->operator==(_other); }


};
struct _246845ab6_If {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	

	inline bool operator==(_246845ab6_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246845ab6_If _other) { return !this->operator==(_other); }


};
struct _246845e90_Else {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	

	inline bool operator==(_246845e90_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_246845e90_Else _other) { return !this->operator==(_other); }


};
struct _246846446_Conditional {
	jule::Ptr<_246845ab6_If> _field_Head;
	jule::Slice<jule::Ptr<_246845ab6_If>> _field_Tail;
	jule::Ptr<_246845e90_Else> _field_Default;
	


};
struct _246846b83_TypeAliasDecl {
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	

	inline bool operator==(_246846b83_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246846b83_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _246847139_Case {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_Exprs;
	


};
struct _246847876_MatchCase {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_246847139_Case>> _field_Cases;
	jule::Ptr<_246845e90_Else> _field_Default;
	


};
struct _246848190_UseDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _246848646_EnumItemDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246834654_Expr> _field_Expr;
	

	inline bool operator==(_246848646_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246848646_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _246849207_EnumDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> _field_Items;
	jule::Ptr<_246819d43_Token> _field_End;
	


};
struct _246849a32_TypeEnumItemDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	

	inline bool operator==(_246849a32_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246849a32_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _24684a192_TypeEnumDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_246819d43_Token> _field_End;
	


};
struct _24684a45b_FieldDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_246830320_TypeDecl> _field_Kind;
	jule::Ptr<_246834654_Expr> _field_Default;
	

	inline bool operator==(_24684a45b_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24684a45b_FieldDecl _other) { return !this->operator==(_other); }


};
struct _24684ad52_StructDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24684a45b_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_Generics;
	


};
struct _24684b58e_TraitDecl {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_246841ed0_FnDecl>> _field_Methods;
	


};
struct _24684bbee_Impl {
	jule::Ptr<_246819d43_Token> _field_End;
	jule::Ptr<_246830320_TypeDecl> _field_Base;
	jule::Ptr<_246830320_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_246841ed0_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _field_Statics;
	


};
struct _24684d030_Field {
	jule::Ptr<_246850e23_Struct> _field_Owner;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Ptr<_246834654_Expr> _field_Default;
	

	inline bool operator==(_24684d030_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_24684d030_Field _other) { return !this->operator==(_other); }


};
struct _246850010_Operators {
	jule::Ptr<_246868c1b_FnIns> _field_Eq;
	jule::Ptr<_246868c1b_FnIns> _field_Gt;
	jule::Ptr<_246868c1b_FnIns> _field_GtEq;
	jule::Ptr<_246868c1b_FnIns> _field_Lt;
	jule::Ptr<_246868c1b_FnIns> _field_LtEq;
	jule::Ptr<_246868c1b_FnIns> _field_Shl;
	jule::Ptr<_246868c1b_FnIns> _field_Shr;
	jule::Ptr<_246868c1b_FnIns> _field_Add;
	jule::Ptr<_246868c1b_FnIns> _field_Sub;
	jule::Ptr<_246868c1b_FnIns> _field_Div;
	jule::Ptr<_246868c1b_FnIns> _field_Mul;
	jule::Ptr<_246868c1b_FnIns> _field_Mod;
	jule::Ptr<_246868c1b_FnIns> _field_BitAnd;
	jule::Ptr<_246868c1b_FnIns> _field_BitOr;
	jule::Ptr<_246868c1b_FnIns> _field_BitXor;
	jule::Ptr<_246868c1b_FnIns> _field_Neg;
	jule::Ptr<_246868c1b_FnIns> _field_Pos;
	jule::Ptr<_246868c1b_FnIns> _field_BitNot;
	jule::Ptr<_246868c1b_FnIns> _field_AddAssign;
	jule::Ptr<_246868c1b_FnIns> _field_SubAssign;
	jule::Ptr<_246868c1b_FnIns> _field_DivAssign;
	jule::Ptr<_246868c1b_FnIns> _field_MulAssign;
	jule::Ptr<_246868c1b_FnIns> _field_ModAssign;
	jule::Ptr<_246868c1b_FnIns> _field_ShlAssign;
	jule::Ptr<_246868c1b_FnIns> _field_ShrAssign;
	jule::Ptr<_246868c1b_FnIns> _field_BitOrAssign;
	jule::Ptr<_246868c1b_FnIns> _field_BitAndAssign;
	jule::Ptr<_246868c1b_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_246850010_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_246850010_Operators _other) { return !this->operator==(_other); }


};
struct _246850e23_Struct {
	jule::Ptr<_246900148_Sema> _field_sema;
	jule::Slice<jule::Ptr<_246850e23_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_246850e23_Struct>> _field_Uses;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24684d030_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_246865d17_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_2468790e4_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_246853ba1_StructIns>> _field_Instances;
	


};
struct _246853101_FieldIns {
	jule::Ptr<_24684d030_Field> _field_Decl;
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Ptr<_246983ac2_Data> _field_Default;
	

	inline bool operator==(_246853101_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_246853101_FieldIns _other) { return !this->operator==(_other); }


};
struct _246857aa6_OperandExprModel {
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_246857aa6_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_246857aa6_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _2468580a1_BinopExprModel {
	jule::Ptr<_246857aa6_OperandExprModel> _field_Left;
	jule::Ptr<_246857aa6_OperandExprModel> _field_Right;
	jule::Ptr<_246819d43_Token> _field_Op;
	

	inline bool operator==(_2468580a1_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2468580a1_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _24685847a_UnaryExprModel {
	jule::Ptr<_246983ac2_Data> _field_Expr;
	jule::Ptr<_246819d43_Token> _field_Op;
	

	inline bool operator==(_24685847a_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_24685847a_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _2468589a8_StructArgExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246853101_FieldIns> _field_Field;
	jule::Ptr<_246983ac2_Data> _field_Expr;
	

	inline bool operator==(_2468589a8_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2468589a8_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _246858d4e_StructLitExprModel {
	jule::Ptr<_246853ba1_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_2468589a8_StructArgExprModel>> _field_Args;
	


};
struct _24685914b_AllocStructLitExprModel {
	jule::Ptr<_246858d4e_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_24685914b_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_24685914b_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _2468596ce_CastingExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Ptr<_2469b43d8_TypeKind> _field_ExprKind;
	

	inline bool operator==(_2468596ce_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_2468596ce_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _24685a081_FnCallExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246868c1b_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_2468a7760_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _24685a45a_SliceExprModel {
	jule::Ptr<_2469b43d8_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _24685a911_IndexingExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246983ac2_Data> _field_Expr;
	jule::Ptr<_246983ac2_Data> _field_Index;
	

	inline bool operator==(_24685a911_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_24685a911_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _24685acda_AnonFnExprModel {
	jule::Ptr<_246868c1b_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_24685acda_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_24685acda_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _24685b1b4_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_24685b1b4_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_24685b1b4_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _24685b66a_MapExprModel {
	jule::Ptr<_2469b43d8_TypeKind> _field_KeyKind;
	jule::Ptr<_2469b43d8_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_24685b1b4_KeyValPairExprModel>> _field_Entries;
	


};
struct _24685bbed_SlicingExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_24685bbed_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_24685bbed_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _24685c281_TraitSubIdentExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246865d17_Fn> _field_Method;
	jule::Ptr<_2468790e4_Trait> _field_Trt;
	

	inline bool operator==(_24685c281_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_24685c281_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _24685cb22_StructSubIdentExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Ptr<_246983ac2_Data> _field_Expr;
	jule::Ptr<_246868c1b_FnIns> _field_Method;
	jule::Ptr<_246853101_FieldIns> _field_Field;
	jule::Ptr<_246853ba1_StructIns> _field_Owner;
	

	inline bool operator==(_24685cb22_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_24685cb22_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _24685d0c8_StructStaticIdentExprModel {
	jule::Ptr<_246853ba1_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_246868c1b_FnIns> _field_Method;
	

	inline bool operator==(_24685d0c8_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_24685d0c8_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _24685d4a2_ArrayExprModel {
	jule::Ptr<_2469c3a79_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _24685d79e_TupleExprModel {
	jule::Slice<jule::Ptr<_246983ac2_Data>> _field_Datas;
	


};
struct _24685db78_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_24685db78_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_24685db78_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _24685e052_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_24685e052_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_24685e052_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _24685e42b_BuiltinNewCallExprModel {
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_24685e42b_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_24685e42b_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _24685e805_BuiltinPanicCallExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_24685e805_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24685e805_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _24685ecab_BuiltinAssertCallExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_24685ecab_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_24685ecab_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _246860262_BuiltinMakeCallExprModel {
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_246860262_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_246860262_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _24686063b_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_24686063b_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_24686063b_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _246860938_BuiltinLenCallExprModel {
	jule::Ptr<_246983ac2_Data> _field_Expr;
	

	inline bool operator==(_246860938_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246860938_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _246860c35_BuiltinCapCallExprModel {
	jule::Ptr<_246983ac2_Data> _field_Expr;
	

	inline bool operator==(_246860c35_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246860c35_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _24686110e_BuiltinDeleteCallExprModel {
	jule::Ptr<_246983ac2_Data> _field_Dest;
	jule::Ptr<_246983ac2_Data> _field_Key;
	

	inline bool operator==(_24686110e_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_24686110e_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _2468614d8_BuiltinCopyCallExprModel {
	jule::Ptr<_246983ac2_Data> _field_Dest;
	jule::Ptr<_246983ac2_Data> _field_Src;
	

	inline bool operator==(_2468614d8_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_2468614d8_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _2468618b2_BuiltinErrorCallExprModel {
	jule::Ptr<_246868c1b_FnIns> _field_Func;
	jule::Ptr<_246983ac2_Data> _field_Err;
	

	inline bool operator==(_2468618b2_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_2468618b2_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _24685c46d_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_24685c46d_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_24685c46d_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _2468620dd_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_2468620dd_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2468620dd_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _2468623da_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_2468623da_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_2468623da_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _2468626d7_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_2468626d7_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2468626d7_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _246862ab1_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _246862dad_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_246862dad_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_246862dad_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _246863ab2_RetType {
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Idents;
	


};
struct _246864343_Param {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_246864343_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_246864343_Param _other) { return !this->operator==(_other); }


};
struct _246865d17_Fn {
	jule::Ptr<_246900148_Sema> _field_sema;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_Generics;
	jule::Ptr<_246863ab2_RetType> _field_Result;
	jule::Slice<jule::Ptr<_246864343_Param>> _field_Params;
	jule::Ptr<_246850e23_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_246868c1b_FnIns>> _field_Instances;
	


};
struct _246867c70_ParamIns {
	jule::Ptr<_246864343_Param> _field_Decl;
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	

	inline bool operator==(_246867c70_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_246867c70_ParamIns _other) { return !this->operator==(_other); }


};
struct _246868c1b_FnIns {
	jule::Ptr<_246853ba1_StructIns> _field_Owner;
	jule::Ptr<_246865d17_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_246867c70_ParamIns>> _field_Params;
	jule::Ptr<_2469b43d8_TypeKind> _field_Result;
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	jule::Ptr<_24686bdd9_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _24686bdd9_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _24686d407_Pass {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_24686d407_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_24686d407_Pass _other) { return !this->operator==(_other); }


};
struct _246872ebc_symbolBuilder {
	jule::Ptr<_246872ebc_symbolBuilder> _field_owner;
	jule::Trait<_2468c5cbc_Importer> _field_importer;
	jule::Slice<_24345e617_Log> _field_errors;
	jule::Ptr<_24682d472_Ast> _field_ast;
	jule::Ptr<_24697d726_SymbolTable> _field_table;
	


};
struct _2468790e4_Trait {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_246865d17_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246850e23_Struct>> _field_Implemented;
	


};
struct _24687ac83_EnumItem {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_246984c16_Value> _field_Value;
	

	inline bool operator==(_24687ac83_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_24687ac83_EnumItem _other) { return !this->operator==(_other); }


};
struct _24687b800_Enum {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _field_Items;
	


};
struct _24687c933_TypeEnumItem {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	

	inline bool operator==(_24687c933_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_24687c933_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _24687d00a_TypeEnum {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> _field_Items;
	


};
struct _24687e946_comptimeMatch {
	jule::Ptr<_246983ac2_Data> _field_data;
	jule::Ptr<_246819d43_Token> _field_exprToken;
	

	inline bool operator==(_24687e946_comptimeMatch _other) {
		return 
			this->_field_data == _other._field_data &&
			this->_field_exprToken == _other._field_exprToken;
	}

	inline bool operator!=(_24687e946_comptimeMatch _other) { return !this->operator==(_other); }


};
struct _246881162_comptimeRange {
	jule::Trait<_246880e42_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_246881162_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_246881162_comptimeRange _other) { return !this->operator==(_other); }


};
struct _246881b35_comptimeStructField {
	jule::Ptr<_246853101_FieldIns> _field_field;
	

	inline bool operator==(_246881b35_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_246881b35_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _2468837e6_comptimeStructFields {
	jule::Slice<jule::Ptr<_246853101_FieldIns>> _field_fields;
	


};
struct _246884de1_comptimeStatic {
	jule::Ptr<_246922555_Var> _field_field;
	

	inline bool operator==(_246884de1_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_246884de1_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _246886aa2_comptimeStatics {
	jule::Slice<jule::Ptr<_246922555_Var>> _field_fields;
	


};
struct _24688819c_comptimeEnumField {
	jule::Ptr<_24687ac83_EnumItem> _field_field;
	

	inline bool operator==(_24688819c_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_24688819c_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _246889544_comptimeEnumFields {
	jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _field_fields;
	


};
struct _24688ab3e_comptimeParam {
	jule::Ptr<_246867c70_ParamIns> _field_param;
	

	inline bool operator==(_24688ab3e_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_24688ab3e_comptimeParam _other) { return !this->operator==(_other); }


};
struct _24688cda5_comptimeParams {
	jule::Slice<jule::Ptr<_246867c70_ParamIns>> _field_params;
	


};
struct _24688e4a0_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_246890a9a_comptimeTypeInfo>> _field_types;
	


};
struct _246890a9a_comptimeTypeInfo {
	jule::Ptr<_2469b43d8_TypeKind> _field_base;
	

	inline bool operator==(_246890a9a_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_246890a9a_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _2468970ac_comptimeValue {
	jule::Ptr<_246983ac2_Data> _field_data;
	

	inline bool operator==(_2468970ac_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_2468970ac_comptimeValue _other) { return !this->operator==(_other); }


};
struct _24689990b_comptimeFiles {
	jule::Slice<jule::Ptr<_24697d726_SymbolTable>> _field_files;
	


};
struct _24689b006_comptimeFile {
	jule::Ptr<_24697d726_SymbolTable> _field_file;
	

	inline bool operator==(_24689b006_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_24689b006_comptimeFile _other) { return !this->operator==(_other); }


};
struct _2468a02b3_constraintChecker {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _field_genericsA;
	jule::Ptr<_246868c1b_FnIns> _field_fi;
	jule::Ptr<_246853ba1_StructIns> _field_si;
	jule::Ptr<_246819d43_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _2468a2309_Impl {
	jule::Ptr<_246830320_TypeDecl> _field_Base;
	jule::Ptr<_246830320_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_246865d17_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Statics;
	


};
struct _2468a7760_Scope {
	jule::Ptr<_2468a7760_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _2468a7b7d_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	

	inline bool operator==(_2468a7b7d_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2468a7b7d_If _other) { return !this->operator==(_other); }


};
struct _2468a7e7a_Else {
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	

	inline bool operator==(_2468a7e7a_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2468a7e7a_Else _other) { return !this->operator==(_other); }


};
struct _2468a8398_Conditional {
	jule::Slice<jule::Ptr<_2468a7b7d_If>> _field_Elifs;
	jule::Ptr<_2468a7e7a_Else> _field_Default;
	


};
struct _2468a8695_InfIter {
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	

	inline bool operator==(_2468a8695_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2468a8695_InfIter _other) { return !this->operator==(_other); }


};
struct _2468a8b4b_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	

	inline bool operator==(_2468a8b4b_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_2468a8b4b_WhileIter _other) { return !this->operator==(_other); }


};
struct _2468a9597_RangeIter {
	jule::Ptr<_246983ac2_Data> _field_Expr;
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	jule::Ptr<_246922555_Var> _field_KeyA;
	jule::Ptr<_246922555_Var> _field_KeyB;
	

	inline bool operator==(_2468a9597_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_2468a9597_RangeIter _other) { return !this->operator==(_other); }


};
struct _2468a992c_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_2468a992c_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_2468a992c_ContSt _other) { return !this->operator==(_other); }


};
struct _2468a9d06_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_2468a9d06_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_2468a9d06_BreakSt _other) { return !this->operator==(_other); }


};
struct _2468aa103_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_2468aa103_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_2468aa103_Label _other) { return !this->operator==(_other); }


};
struct _2468aa4cc_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_2468aa103_Label> _field_Label;
	

	inline bool operator==(_2468aa4cc_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_2468aa4cc_GotoSt _other) { return !this->operator==(_other); }


};
struct _2468aa8a6_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_2468aa8a6_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2468aa8a6_Postfix _other) { return !this->operator==(_other); }


};
struct _2468aad5c_Assign {
	jule::Ptr<_246857aa6_OperandExprModel> _field_L;
	jule::Ptr<_246857aa6_OperandExprModel> _field_R;
	jule::Ptr<_246819d43_Token> _field_Op;
	

	inline bool operator==(_2468aad5c_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_2468aad5c_Assign _other) { return !this->operator==(_other); }


};
struct _2468ab236_MultiAssign {
	jule::Slice<jule::Ptr<_246983ac2_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _2468ab896_Match {
	jule::Ptr<_246983ac2_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_2468ac4ce_Case>> _field_Cases;
	jule::Ptr<_2468ac4ce_Case> _field_Default;
	


};
struct _2468ac4ce_Case {
	jule::Ptr<_2468ab896_Match> _field_Owner;
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_246983ac2_Data>> _field_Exprs;
	jule::Ptr<_2468ac4ce_Case> _field_Next;
	


};
struct _2468acac8_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_2468acac8_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_2468acac8_FallSt _other) { return !this->operator==(_other); }


};
struct _2468ace5d_RetSt {
	jule::Ptr<_246868c1b_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_2468ace5d_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2468ace5d_RetSt _other) { return !this->operator==(_other); }


};
struct _2468ad5bd_scopeLabel {
	jule::Ptr<_246819d43_Token> _field_token;
	jule::Ptr<_2468aa103_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_2468aea64_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_2468ad5bd_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_2468ad5bd_scopeLabel _other) { return !this->operator==(_other); }


};
struct _2468adb51_scopeGoto {
	jule::Ptr<_2468aa4cc_GotoSt> _field_st;
	jule::Ptr<_24683cccd_GotoSt> _field_gt;
	jule::Ptr<_2468aea64_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_2468adb51_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_2468adb51_scopeGoto _other) { return !this->operator==(_other); }


};
struct _2468aea64_scopeChecker {
	jule::Ptr<_246819d43_Token> _field_calledFrom;
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Ptr<_246868c1b_FnIns> _field_owner;
	jule::Ptr<_2468aea64_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_24697d726_SymbolTable> _field_table;
	jule::Ptr<_2468a7760_Scope> _field_scope;
	jule::Ptr<_246840341_ScopeTree> _field_tree;
	jule::Ptr<_246868c1b_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_2468ad5bd_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_2468adb51_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_2468aea64_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_2468aea64_scopeChecker _other) { return !this->operator==(_other); }


};
struct _2468c2736_directiveChecker {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_24682e73c_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_2468c2736_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_2468c2736_directiveChecker _other) { return !this->operator==(_other); }


};
struct _2468c8bd2_ImportInfo {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_Selected;
	jule::Ptr<_2468cbb08_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _2468cbb08_Package {
	jule::Slice<jule::Ptr<_24697d726_SymbolTable>> _field_Files;
	


};
struct _2468ee521_commonSemaMeta {
	jule::Slice<jule::Ptr<_246890a9a_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _246900148_Sema {
	jule::Slice<_24345e617_Log> _field_errors;
	jule::Slice<jule::Ptr<_24697d726_SymbolTable>> _field_files;
	jule::Ptr<_24697d726_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_2468ee521_commonSemaMeta> _field_meta;
	


};
struct _24691de8b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _24692139a_IterRelation {
	jule::Ptr<_246922555_Var> _field_Range;
	

	inline bool operator==(_24692139a_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_24692139a_IterRelation _other) { return !this->operator==(_other); }


};
struct _246922555_Var {
	jule::Ptr<_2468a7760_Scope> _field_Scope;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Ptr<_246984c16_Value> _field_Value;
	jule::Ptr<_24686bdd9_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_Directives;
	jule::Ptr<_24692139a_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Depends;
	


};
struct _246923369_FuncPattern {
	


};
struct _24696a757_typeCompatibilityChecker {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Ptr<_2469b43d8_TypeKind> _field_dest;
	jule::Ptr<_2469b43d8_TypeKind> _field_src;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	

	inline bool operator==(_24696a757_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_24696a757_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _24696c506_assignTypeChecker {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Ptr<_2469b43d8_TypeKind> _field_dest;
	jule::Ptr<_246983ac2_Data> _field_d;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	

	inline bool operator==(_24696c506_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_24696c506_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _24696e173_dynamicTypeAnnotation {
	jule::Ptr<_2469857b6_Eval> _field_e;
	jule::Ptr<_246868c1b_FnIns> _field_f;
	jule::Ptr<_246867c70_ParamIns> _field_p;
	jule::Ptr<_246983ac2_Data> _field_a;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	jule::Ptr<_2469b43d8_TypeKind>* _field_k = nullptr;
	jule::Ptr<_246830320_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_ignored;
	


};
struct _246973ed0_fnCallArgChecker {
	jule::Ptr<_2469857b6_Eval> _field_e;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_args;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	jule::Ptr<_246868c1b_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_ignored;
	


};
struct _246976e17_structLitChecker {
	jule::Ptr<_2469857b6_Eval> _field_e;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	jule::Ptr<_246853ba1_StructIns> _field_s;
	jule::Slice<jule::Ptr<_2468589a8_StructArgExprModel>> _field_args;
	


};
struct _246978be9_rangeChecker {
	jule::Ptr<_2468aea64_scopeChecker> _field_sc;
	jule::Ptr<_246844d5c_RangeKind> _field_rang;
	jule::Ptr<_2468a9597_RangeIter> _field_Kind;
	jule::Ptr<_246983ac2_Data> _field_d;
	

	inline bool operator==(_246978be9_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_246978be9_rangeChecker _other) { return !this->operator==(_other); }


};
struct _24697b45a_retTypeChecker {
	jule::Ptr<_2468aea64_scopeChecker> _field_sc;
	jule::Ptr<_246868c1b_FnIns> _field_f;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_246834654_Expr>> _field_exprs;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _24697d726_SymbolTable {
	jule::Ptr<_24682060c_File> _field_File;
	jule::Slice<_24686d407_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_246850e23_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_246865d17_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_2468790e4_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_24687b800_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_24687d00a_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_2468a2309_Impl>> _field_Impls;
	


};
struct _246983ac2_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_2445e359c_Const> _field_Constant;
	

	inline bool operator==(_246983ac2_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_246983ac2_Data _other) { return !this->operator==(_other); }


};
struct _246984c16_Value {
	jule::Ptr<_246834654_Expr> _field_Expr;
	jule::Ptr<_246983ac2_Data> _field_Data;
	

	inline bool operator==(_246984c16_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_246984c16_Value _other) { return !this->operator==(_other); }


};
struct _2469857b6_Eval {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Trait<_2469d41b6_Lookup> _field_lookup;
	jule::Ptr<_2469b43d8_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_246922555_Var> _field_owner;
	jule::Ptr<_246853101_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_2469857b6_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_2469857b6_Eval _other) { return !this->operator==(_other); }


};
struct _2469a3edd_unaryEval {
	jule::Ptr<_2469857b6_Eval> _field_e;
	jule::Ptr<_246983ac2_Data> _field_d;
	jule::Ptr<_246836711_UnaryExpr> _field_u;
	

	inline bool operator==(_2469a3edd_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_2469a3edd_unaryEval _other) { return !this->operator==(_other); }


};
struct _2469a5e79_binaryEval {
	jule::Ptr<_2469857b6_Eval> _field_e;
	jule::Ptr<_246983ac2_Data> _field_l;
	jule::Ptr<_246983ac2_Data> _field_r;
	jule::Ptr<_246819d43_Token> _field_op;
	

	inline bool operator==(_2469a5e79_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_2469a5e79_binaryEval _other) { return !this->operator==(_other); }


};
struct _2469b2a02_InsGeneric {
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_Constraint;
	


};
struct _2469b35e6_TypeAlias {
	jule::Ptr<_246840341_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_2469bb852_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _field_Generics;
	


};
struct _2469b43d8_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_2469b3e32_Kind> _field_Kind;
	

	inline bool operator==(_2469b43d8_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2469b43d8_TypeKind _other) { return !this->operator==(_other); }


};
struct _2469bb852_TypeSymbol {
	jule::Ptr<_246830320_TypeDecl> _field_Decl;
	jule::Ptr<_2469b43d8_TypeKind> _field_Kind;
	

	inline bool operator==(_2469bb852_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2469bb852_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _2469bc259_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_2469bc259_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_2469bc259_Prim _other) { return !this->operator==(_other); }


};
struct _2469c0c85_Sptr {
	jule::Ptr<_2469b43d8_TypeKind> _field_Elem;
	

	inline bool operator==(_2469c0c85_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2469c0c85_Sptr _other) { return !this->operator==(_other); }


};
struct _2469c1758_Slc {
	jule::Ptr<_2469b43d8_TypeKind> _field_Elem;
	

	inline bool operator==(_2469c1758_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2469c1758_Slc _other) { return !this->operator==(_other); }


};
struct _2469c234c_Tuple {
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_Types;
	


};
struct _2469c2dec_Map {
	jule::Ptr<_2469b43d8_TypeKind> _field_Key;
	jule::Ptr<_2469b43d8_TypeKind> _field_Val;
	

	inline bool operator==(_2469c2dec_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_2469c2dec_Map _other) { return !this->operator==(_other); }


};
struct _2469c3a79_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_2469b43d8_TypeKind> _field_Elem;
	

	inline bool operator==(_2469c3a79_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2469c3a79_Arr _other) { return !this->operator==(_other); }


};
struct _2469c454c_Ptr {
	jule::Ptr<_2469b43d8_TypeKind> _field_Elem;
	

	inline bool operator==(_2469c454c_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_2469c454c_Ptr _other) { return !this->operator==(_other); }


};
struct _2469c554d_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_2469c554d_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_2469c554d_referencer _other) { return !this->operator==(_other); }


};
struct _2469c653d_typeChecker {
	jule::Ptr<_246900148_Sema> _field_s;
	jule::Trait<_2469d41b6_Lookup> _field_rootLookup;
	jule::Trait<_2469d41b6_Lookup> _field_lookup;
	jule::Ptr<_2469c554d_referencer> _field_referencer;
	jule::Ptr<_24686bdd9_ReferenceStack> _field_refers;
	jule::Ptr<_246819d43_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_2469b35e6_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _2469ce1c2_identTypeLookup {
	

	inline bool operator==(_2469ce1c2_identTypeLookup _other) { return true; }

	inline bool operator!=(_2469ce1c2_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _227b84a06_FileInfo {
	jule::Ptr<_24682d472_Ast> _field_Ast;
	jule::Slice<_24345e617_Log> _field_Errors;
	


};
struct _227bcd236_stmt {
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _227bcdac7_scopeParser {
	jule::Ptr<_227beba3a_parser> _field_p;
	jule::Ptr<_246840341_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _227bdb19a_exprBuilder {
	jule::Ptr<_227beba3a_parser> _field_p;
	

	inline bool operator==(_227bdb19a_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_227bdb19a_exprBuilder _other) { return !this->operator==(_other); }


};
struct _227be863b_assignInfo {
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_l;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_r;
	jule::Ptr<_246819d43_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _227beba3a_parser {
	jule::Ptr<_24682d472_Ast> _field_ast;
	jule::Slice<jule::Ptr<_24682e73c_Directive>> _field_directives;
	jule::Slice<_24345e617_Log> _field_errors;
	jule::Ptr<_227bdb19a_exprBuilder> _field_ep;
	


};
struct _227c0dc17_typeBuilder {
	jule::Ptr<_227beba3a_parser> _field_p;
	jule::Slice<jule::Ptr<_246819d43_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _246c46181_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_246c46181_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_246c46181_CompileInfo _other) { return !this->operator==(_other); }


};
struct _246c4765a_directiveEval {
	jule::Slice<_24345e617_Log> _field_logs;
	jule::Ptr<_24682e73c_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _227c17baa_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _227c1cdbe_OrderedDefines {
	jule::Slice<jule::Ptr<_246850e23_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Globals;
	


};
struct _227c1d133_defineOrderer {
	

	inline bool operator==(_227c1d133_defineOrderer _other) { return true; }

	inline bool operator!=(_227c1d133_defineOrderer _other) { return !this->operator==(_other); }


};
struct _227d452c1_liveTable {
	jule::Slice<jule::Ptr<_246922555_Var>> _field_vars;
	jule::Slice<jule::Ptr<_246868c1b_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_246853ba1_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_2468790e4_Trait>> _field_traits;
	


};
struct _227d7e77d_scopeDeadCode {
	jule::Ptr<_227d7e77d_scopeDeadCode> _field_parent;
	jule::Ptr<_2468a7760_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_2468aa103_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_2468aa4cc_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_227d7e77d_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_227d7e77d_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _227d839d5_exprDeadCode {
	jule::Ptr<_227d7e77d_scopeDeadCode> _field_s;
	

	inline bool operator==(_227d839d5_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_227d839d5_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _246b3710a_SwapExprModel {
	jule::Ptr<_246983ac2_Data> _field_Left;
	jule::Ptr<_246983ac2_Data> _field_Right;
	

	inline bool operator==(_246b3710a_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_246b3710a_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _246b37528_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_246b37528_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_246b37528_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _246b37825_RefExprModel {
	jule::Ptr<_246922555_Var> _field_Var;
	

	inline bool operator==(_246b37825_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_246b37825_RefExprModel _other) { return !this->operator==(_other); }


};
struct _246b37d53_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_2445e359c_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_246b37d53_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_246b37d53_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _246b383d6_MutSlicingExprModel {
	jule::Ptr<_246819d43_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_246b383d6_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_246b383d6_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _246b386d3_UnsafeBinopExprModel {
	jule::Ptr<_2468580a1_BinopExprModel> _field_Node;
	

	inline bool operator==(_246b386d3_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_246b386d3_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _246b389d0_UnsafeIndexingExprModel {
	jule::Ptr<_24685a911_IndexingExprModel> _field_Node;
	

	inline bool operator==(_246b389d0_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_246b389d0_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _246b38e0e_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_24685a45a_SliceExprModel> _field_Elems;
	

	inline bool operator==(_246b38e0e_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_246b38e0e_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _246b392d8_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_246b392d8_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_246b392d8_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _246b3a493_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_2468a7760_Scope> _field_scope;
	

	inline bool operator==(_246b3a493_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_246b3a493_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _246b41631_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_246b41631_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_246b41631_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _227d8aa97_Optimizer {
	jule::Ptr<_227c1a66e_IR> _field_ir;
	

	inline bool operator==(_227d8aa97_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_227d8aa97_Optimizer _other) { return !this->operator==(_other); }


};
struct _227db3b14_AnsiEscape {
	

	inline bool operator==(_227db3b14_AnsiEscape _other) { return true; }

	inline bool operator!=(_227db3b14_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _227db5242_Logger {
	

	inline bool operator==(_227db5242_Logger _other) { return true; }

	inline bool operator!=(_227db5242_Logger _other) { return !this->operator==(_other); }


};
struct _2287cc9d3_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_2287cc9d3_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_2287cc9d3_AbsTime _other) { return !this->operator==(_other); }


};
struct _2287cd1a9_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_2287cd1a9_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_2287cd1a9_Time _other) { return !this->operator==(_other); }


};
struct _22870b34b_scopeCoder {
	jule::Ptr<_2287d7658_ObjectCoder> _field_oc;
	

	inline bool operator==(_22870b34b_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_22870b34b_scopeCoder _other) { return !this->operator==(_other); }


};
struct _2287154cb_exprCoder {
	jule::Ptr<_2287d7658_ObjectCoder> _field_oc;
	

	inline bool operator==(_2287154cb_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_2287154cb_exprCoder _other) { return !this->operator==(_other); }


};
struct _228725cb1_TestCoder {
	jule::Ptr<_246853ba1_StructIns> _field_t;
	jule::Ptr<_246865d17_Fn> _field_tmReset;
	jule::Ptr<_246865d17_Fn> _field_tmFailed;
	jule::Ptr<_246865d17_Fn> _field_tmSkipped;
	jule::Ptr<_2287d7658_ObjectCoder> _field_oc;
	

	inline bool operator==(_228725cb1_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_228725cb1_TestCoder _other) { return !this->operator==(_other); }


};
struct _228728a83_identCoder {
	

	inline bool operator==(_228728a83_identCoder _other) { return true; }

	inline bool operator!=(_228728a83_identCoder _other) { return !this->operator==(_other); }


};
struct _2287d5b40_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_2287d5b40_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_2287d5b40_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _2287d6217_traitHash {
	jule::Ptr<_2468790e4_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_246853ba1_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_2287d6217_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_2287d6217_traitHash _other) { return !this->operator==(_other); }


};
struct _2287d65e1_traitCast {
	jule::Ptr<_2468790e4_Trait> _field_t1;
	jule::Ptr<_2468790e4_Trait> _field_t2;
	

	inline bool operator==(_2287d65e1_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_2287d65e1_traitCast _other) { return !this->operator==(_other); }


};
struct _2287e6cc7_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_2287e6cc7_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_2287e6cc7_customType _other) { return !this->operator==(_other); }


};
struct _2287e78bb_typeCoder {
	jule::Ptr<_2287d7658_ObjectCoder> _field_oc;
	jule::Ptr<_2288009b2_resultCoder> _field_rc;
	

	inline bool operator==(_2287e78bb_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_2287e78bb_typeCoder _other) { return !this->operator==(_other); }


};
struct _2288009b2_resultCoder {
	jule::Ptr<_2287e78bb_typeCoder> _field_tc;
	

	inline bool operator==(_2288009b2_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_2288009b2_resultCoder _other) { return !this->operator==(_other); }


};
struct _22c912064_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_22c912064_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22c912064_Flag _other) { return !this->operator==(_other); }


};struct _22c915bb1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_22c915bb1_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22c915bb1_Flag _other) { return !this->operator==(_other); }


};struct _22c9193ac_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_22c9193ac_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22c9193ac_Flag _other) { return !this->operator==(_other); }


};struct _22c91caec_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_22c91caec_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22c91caec_Flag _other) { return !this->operator==(_other); }


};struct _22c9212e8_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_22c9212e8_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_22c9212e8_Flag _other) { return !this->operator==(_other); }


};
struct _228872061_FlagSet {
	jule::Slice<jule::Trait<_2288704b0_CommonFlag>> _field_flags;
	


};
struct _2288749e2_argParser {
	_228872061_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _2287d7658_ObjectCoder {
	_2433b0c50_StrBuilder _field_Buf;
	_2433b0c50_StrBuilder _field_resultDecls;
	_2433b0c50_StrBuilder _field_anyObj;
	jule::Ptr<_227c1a66e_IR> _field_ir;
	_2287d5b40_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_2287d6217_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _field_anyTypeMap;
	jule::Slice<_2287d65e1_traitCast> _field_traitCastMap;
	jule::Ptr<_2287154cb_exprCoder> _field_ec;
	jule::Ptr<_22870b34b_scopeCoder> _field_sc;
	jule::Ptr<_2287e78bb_typeCoder> _field_tc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _227d456ab_ObjectDeadCode {
	_227d452c1_liveTable _field_live;
	jule::Ptr<_227c1a66e_IR> _field_ir;
	


};
struct _227c1a66e_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_2468cbb08_Package> _field_Main;
	jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _field_Used;
	_227c1cdbe_OrderedDefines _field_Ordered;
	


};
struct _246853ba1_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_246850e23_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_246853101_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_246922555_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_246865d17_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_24686bdd9_ReferenceStack> _field_Refers;
	_246850010_Operators _field_Operators;
	


};
struct _24351d7b4_Cmd {
	_243573781_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_246983ac2_Data__jule_tuple_x_246983ac2_Data {
	jule::Ptr<_246983ac2_Data> __jule_result_arg0;
	jule::Ptr<_246983ac2_Data> __jule_result_arg1;
};
struct __jule_tuple_x_246983ac2_Data__jule_tuple_bool {
	jule::Ptr<_246983ac2_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_246834654_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_246834654_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_246847139_Case__jule_tuple_bool {
	jule::Ptr<_246847139_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_246847139_Case__jule_tuple_x_246845e90_Else {
	jule::Slice<jule::Ptr<_246847139_Case>> __jule_result_arg0;
	jule::Ptr<_246845e90_Else> __jule_result_arg1;
};
struct __jule_tuple__24683e97d_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool {
	jule::Ptr<_24683dcbd_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool {
	jule::Ptr<_246830320_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_246833213_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log {
	jule::Slice<jule::Ptr<_24682d472_Ast>> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_24345e617_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_227c1a66e_IR__jule_tuple_s_24345e617_Log {
	jule::Ptr<_227c1a66e_IR> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__2438d8d27_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__2438d8d27_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__2438d8d27_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log {
	jule::Ptr<_24697d726_SymbolTable> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log {
	jule::Ptr<_2468cbb08_Package> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_x_24682d472_Ast__jule_tuple_s_24345e617_Log {
	jule::Ptr<_24682d472_Ast> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_246819d43_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_246819d43_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token {
	jule::Slice<jule::Ptr<_246819d43_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_246819d43_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_246819d43_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_246819d43_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> __jule_result_arg0;
	jule::Slice<_24345e617_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _2433b0c50_StrBuilder static__2433b1019_New(jule::I64);
inline void _2433b9572_Write(_2433b0c50_StrBuilder*, jule::Slice<jule::U8>);
inline void _2433b982a_WriteStr(_2433b0c50_StrBuilder*, jule::Str);
inline void _2433b9ad3_WriteByte(_2433b0c50_StrBuilder*, jule::U8);
inline jule::Str _2433ba122_Str(_2433b0c50_StrBuilder*);
inline void _2433ba320_Clear(_2433b0c50_StrBuilder*);
inline jule::I64 _2433ba5a6_Len(_2433b0c50_StrBuilder*);
inline jule::Slice<jule::U8> _2433baac3_Buf(_2433b0c50_StrBuilder*);
inline void _2433bad7b_SetBuf(_2433b0c50_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _2433bb9e7_index(_2433bb596_lazyBuff*, jule::I64);
inline void _2433bbca0_append(_2433bb596_lazyBuff*, jule::U8);
inline jule::Str _2433bc036_string(_2433bb596_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>> static__2433c0d4d_Read(jule::Str);
inline jule::VoidExceptional static__2433c107e_Create(jule::Str);
inline jule::VoidExceptional static__2433c12b0_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_241ee1156_File>> static__241edd31d_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__241edd54e_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _241edd9d3_Write(_241ee1156_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _241eddd24_Read(_241ee1156_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_241ee1156_File> static__241ee1574_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_241ee1156_File>> static__241ee183d_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__241ee1b07_Read(jule::Str);
inline jule::VoidExceptional static__241ee1e9d_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _241ee26da_Close(_241ee1156_File*);
inline jule::Exceptional<jule::Ptr<_241ee3246_Status>> static__241ededd0_Of(jule::Str);
inline jule::Bool _241ee3620_IsDir(_241ee3246_Status*);
inline jule::Bool _241ee38a6_IsReg(_241ee3246_Status*);
inline jule::U64 _241ee3b3c_Size(_241ee3246_Status*);
inline jule::Bool _2445c56c2_set(_2445cdd07_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _2445c5a13_floatBits(_2445cdd07_decimal*, _243ded814_floatInfo*);
inline void _2445ce1ae_assign(_2445cdd07_decimal*, jule::U64);
inline void _2445ce467_shift(_2445cdd07_decimal*, jule::I64);
inline void _2445ce720_roundDown(_2445cdd07_decimal*, jule::I64);
inline void _2445ce9c8_roundUp(_2445cdd07_decimal*, jule::I64);
inline void _2445cec81_round(_2445cdd07_decimal*, jule::I64);
inline jule::U64 _2445d0017_roundedInteger(_2445cdd07_decimal*);
inline jule::Ptr<_2445e359c_Const> static__2445e39dc_NewI64(jule::I64);
inline jule::Ptr<_2445e359c_Const> static__2445e3ca6_NewU64(jule::U64);
inline jule::Ptr<_2445e359c_Const> static__2445e4070_NewBool(jule::Bool);
inline jule::Ptr<_2445e359c_Const> static__2445e4339_NewStr(jule::Str);
inline jule::Ptr<_2445e359c_Const> static__2445e4603_NewF64(jule::F64);
inline jule::Ptr<_2445e359c_Const> static__2445e4812_NewNil(void);
inline jule::I64 _2445e4e72_ReadI64(_2445e359c_Const*);
inline jule::U64 _2445e5208_ReadU64(_2445e359c_Const*);
inline jule::Bool _2445e548e_ReadBool(_2445e359c_Const*);
inline jule::Str _2445e5725_ReadStr(_2445e359c_Const*);
inline jule::F64 _2445e59ab_ReadF64(_2445e359c_Const*);
inline jule::I64 _2445e5c42_AsI64(_2445e359c_Const*);
inline jule::U64 _2445e5ec8_AsU64(_2445e359c_Const*);
inline jule::F64 _2445e625e_AsF64(_2445e359c_Const*);
inline void _2445e6517_SetI64(_2445e359c_Const*, jule::I64);
inline void _2445e67c0_SetU64(_2445e359c_Const*, jule::U64);
inline void _2445e6a78_SetBool(_2445e359c_Const*, jule::Bool);
inline void _2445e6d31_SetStr(_2445e359c_Const*, jule::Str);
inline void _2445e70d9_SetF64(_2445e359c_Const*, jule::F64);
inline jule::Bool _2445e756d_IsI64(_2445e359c_Const*);
inline jule::Bool _2445e7804_IsU64(_2445e359c_Const*);
inline jule::Bool _2445e7a8a_IsBool(_2445e359c_Const*);
inline jule::Bool _2445e7d21_IsStr(_2445e359c_Const*);
inline jule::Bool _2445e80a7_IsF64(_2445e359c_Const*);
inline jule::Bool _2445e833d_IsNil(_2445e359c_Const*);
inline jule::Bool _2445e89c0_And(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445e8d11_Or(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445ea2a7_Add(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445ea5e8_Sub(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445ea939_Mul(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445eac7a_Div(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445eb0bb_Mod(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445eb40c_BitwiseAnd(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445eb74d_BitwiseOr(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445eba8e_Xor(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445ebdd0_Lshift(_2445e359c_Const*, _2445e359c_Const);
inline jule::Bool _2445ec221_Rshift(_2445e359c_Const*, _2445e359c_Const);
inline jule::U8 _24681a1b7_Prec(_246819d43_Token*);
inline void _2468209e7_Fill(_24682060c_File*, jule::Slice<jule::U8>);
inline jule::Str _246820c7d_Dir(_24682060c_File*);
inline jule::Str _246821014_Name(_24682060c_File*);
inline jule::Str _2468215db_GetRow(_24682060c_File*, jule::I64);
inline void _246828dc9_pushErr(_246828846_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _24682943a_lex(_246828846_lex*);
inline jule::Str _24682977b_id(_246828846_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _246829a12_resume(_246828846_lex*);
inline void _246829cba_lexLineComment(_246828846_lex*, jule::Ptr<_246819d43_Token>*);
inline void _24682a073_lexRangeComment(_246828846_lex*, jule::Ptr<_246819d43_Token>*);
inline jule::Str _24682a3b4_num(_246828846_lex*, jule::Slice<jule::U8>*);
inline jule::Str _24682a705_escapeSeq(_246828846_lex*, jule::Slice<jule::U8>*);
inline jule::Str _24682ab01_getRune(_246828846_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _24682ae42_lexRune(_246828846_lex*, jule::Slice<jule::U8>*);
inline jule::Str _24682b1c8_lexStr(_246828846_lex*);
inline void _24682b65c_newLine(_246828846_lex*);
inline jule::Bool _24682bbbd_isOp(_246828846_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24682c0b9_lexBasicOps(_246828846_lex*, jule::Slice<jule::U8>, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24682c4b5_lexId(_246828846_lex*, jule::Slice<jule::U8>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24682c8b1_lexNum(_246828846_lex*, jule::Slice<jule::U8>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_246819d43_Token> _24682cb47_token(_246828846_lex*);
inline jule::Bool _2468321ac_IsUnsafe(_246831d49_PtrTypeDecl*);
inline jule::Bool _24683294e_AutoSized(_2468325db_ArrTypeDecl*);
inline jule::Bool _246838702_Unhandled(_24683837d_FnCallExpr*);
inline jule::Bool _246838988_Ignored(_24683837d_FnCallExpr*);
inline jule::Bool _246840e02_IsSelf(_246840a7d_ParamDecl*);
inline jule::Bool _246842343_IsAnon(_246841ed0_FnDecl*);
inline jule::Bool _246843e8d_IsInf(_246843b2a_Iter*);
inline jule::Bool _2468447b8_IsWhileNext(_246844455_WhileKind*);
inline jule::Ptr<_246853101_FieldIns> _24684d3a4_instance(jule::Ptr<_24684d030_Field>);
inline jule::Ptr<_246853ba1_StructIns> _246851385_instance(jule::Ptr<_246850e23_Struct>);
inline jule::Ptr<_246853ba1_StructIns> _246851693_appendInstance(_246850e23_Struct*, jule::Ptr<_246853ba1_StructIns>*);
inline jule::Ptr<_246865d17_Fn> _246851a8e_FindMethod(_246850e23_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_246922555_Var> _246851dd0_FindStatic(_246850e23_Struct*, jule::Str);
inline jule::Ptr<_24684d030_Field> _246852221_FindField(_246850e23_Struct*, jule::Str);
inline jule::Bool _246852562_IsImplements(_246850e23_Struct*, jule::Ptr<_2468790e4_Trait>);
inline jule::Bool _2468528a3_IsUses(_246850e23_Struct*, jule::Ptr<_246850e23_Struct>);
inline jule::Ptr<_246867c70_ParamIns> _2468646c8_instance(jule::Ptr<_246864343_Param>);
inline jule::Bool _24686495e_IsSelf(_246864343_Param*);
inline jule::Bool _246864be5_IsRef(_246864343_Param*);
inline jule::Bool _24686628a_IsVoid(_246865d17_Fn*);
inline jule::Bool _246866521_IsMethod(_246865d17_Fn*);
inline jule::Bool _2468667a7_IsEntryPoint(_246865d17_Fn*);
inline jule::Bool _246866a3d_IsInit(_246865d17_Fn*);
inline jule::Bool _246866cc4_IsAnon(_246865d17_Fn*);
inline jule::Bool _24686705a_AnyVar(_246865d17_Fn*);
inline jule::Ptr<_246868c1b_FnIns> _2468672e1_instanceForce(jule::Ptr<_246865d17_Fn>);
inline jule::Ptr<_246868c1b_FnIns> _246867577_instance(jule::Ptr<_246865d17_Fn>);
inline jule::Ptr<_246868c1b_FnIns> _246867885_appendInstance(_246865d17_Fn*, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Str _2468680d3_Str(_246867c70_ParamIns*);
inline jule::Str _24686905c_Str(_246868c1b_FnIns*);
inline jule::Bool _24686939d_Equal(jule::Ptr<_246868c1b_FnIns>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Bool _246869843_EqualFn(jule::Ptr<_246868c1b_FnIns>, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Bool _246869b84_equalTrait(jule::Ptr<_246868c1b_FnIns>, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _246869e1a_Types(_246868c1b_FnIns*);
inline jule::Bool _24686a1a1_IsBuiltin(_246868c1b_FnIns*);
inline jule::Bool _24686a437_IsAnon(_246868c1b_FnIns*);
inline jule::Bool _24686a778_Same(_246868c1b_FnIns*, jule::Ptr<_246868c1b_FnIns>);
inline jule::Str _24686aab9_GetKindStr(_246868c1b_FnIns*, jule::Bool);
inline jule::Ptr<_24686bdd9_ReferenceStack> static__24686c1d6_new(void);
inline jule::I64 _24686c5d2_Len(_24686bdd9_ReferenceStack*);
inline jule::Any _24686c923_At(_24686bdd9_ReferenceStack*, jule::I64);
inline void _24686cbcb_Push(_24686bdd9_ReferenceStack*, jule::Any);
inline jule::Bool _22b6e7521_Exist(_24686bdd9_ReferenceStack*, jule::Ptr<_246868c1b_FnIns>);
inline jule::Bool _22b70b205_Exist(_24686bdd9_ReferenceStack*, jule::Ptr<_246922555_Var>);
inline jule::Bool _22b7b859d_Exist(_24686bdd9_ReferenceStack*, jule::Ptr<_246853ba1_StructIns>);
inline jule::Bool _22bacccd0_Exist(_24686bdd9_ReferenceStack*, jule::Ptr<_2468790e4_Trait>);
inline void _24687385d_pushErr(_246872ebc_symbolBuilder*, jule::Ptr<_246819d43_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _2468740de_pushSuggestion(_246872ebc_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2468744da_checkCppUseDeclPath(_246872ebc_symbolBuilder*, jule::Ptr<_246848190_UseDecl>*, jule::Str*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468747e8_buildCppHeaderImport(_246872ebc_symbolBuilder*, jule::Ptr<_246848190_UseDecl>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _246874b39_buildStdImport(_246872ebc_symbolBuilder*, jule::Ptr<_246848190_UseDecl>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _246874e7a_buildIdentImport(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_246848190_UseDecl>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468752bb_buildImport(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_246848190_UseDecl>*);
inline jule::Bool _24687560c_checkDuplicateUseDecl(_246872ebc_symbolBuilder*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline void _246875970_implImportSelections(_246872ebc_symbolBuilder*, jule::Ptr<_2468c8bd2_ImportInfo>*, jule::Ptr<_246848190_UseDecl>*);
inline jule::Str _246875cb1_getAsLinkPath(jule::Ptr<_246872ebc_symbolBuilder>, jule::Str);
inline void _2468761ce_pushCycleError(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_246872ebc_symbolBuilder>*, jule::Str, _2433b0c50_StrBuilder*);
inline void _2468765ec_pushCrossCycleError(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_246872ebc_symbolBuilder>*, jule::Ptr<_2468c8bd2_ImportInfo>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _2468769e8_checkImportCycles(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_2468c8bd2_ImportInfo>, jule::Ptr<_246848190_UseDecl>*);
inline void _246876e16_checkPackageAccessibility(_246872ebc_symbolBuilder*, jule::Ptr<_246848190_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _246877312_importPackage(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_2468c8bd2_ImportInfo>*, jule::Ptr<_246848190_UseDecl>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _246877653_importUseDecl(jule::Ptr<_246872ebc_symbolBuilder>, jule::Ptr<_246848190_UseDecl>*);
inline void _246877851_importUseDecls(jule::Ptr<_246872ebc_symbolBuilder>);
inline void _246877b09_appendNode(_246872ebc_symbolBuilder*, _24682e31e_Node*);
inline void _246877d07_appendNodes(_246872ebc_symbolBuilder*);
inline void _2468780b0_pushDirectivePass(_246872ebc_symbolBuilder*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468782ad_appendTopDirectives(_246872ebc_symbolBuilder*);
inline void _2468784ab_build(jule::Ptr<_246872ebc_symbolBuilder>);
inline jule::Str _2468794ac_Str(_2468790e4_Trait*);
inline jule::Bool _2468797ed_Equal(jule::Ptr<_2468790e4_Trait>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246865d17_Fn> _246879c93_FindMethod(_2468790e4_Trait*, jule::Str);
inline jule::Ptr<_246865d17_Fn> _24687a425_findMethodInherit(_2468790e4_Trait*, jule::Str*);
inline jule::Bool _24687b13a_AutoExpr(_24687ac83_EnumItem*);
inline jule::Str _24687bb74_Str(_24687b800_Enum*);
inline jule::Bool _24687beb5_Equal(jule::Ptr<_24687b800_Enum>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_24687ac83_EnumItem> _24687c3e4_FindItem(_24687b800_Enum*, jule::Str);
inline jule::Str _24687d34b_Str(_24687d00a_TypeEnum*);
inline jule::Bool _24687d68c_Equal(jule::Ptr<_24687d00a_TypeEnum>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_24687c933_TypeEnumItem> _24687dabb_FindItem(_24687d00a_TypeEnum*, jule::Str);
inline jule::Str _24687ed0e_Str(_24687e946_comptimeMatch*);
inline jule::Bool _246880150_Equal(jule::Ptr<_24687e946_comptimeMatch>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2468814d6_Str(_246881162_comptimeRange*);
inline jule::Bool _246881827_Equal(jule::Ptr<_246881162_comptimeRange>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _246881eed_Str(_246881b35_comptimeStructField*);
inline jule::Bool _24688233e_Equal(jule::Ptr<_246881b35_comptimeStructField>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _2468828d3__Name(jule::Ptr<_246881b35_comptimeStructField>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246882cce__Type(jule::Ptr<_246881b35_comptimeStructField>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468831ca__Public(jule::Ptr<_246881b35_comptimeStructField>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468834d8_subIdent(jule::Ptr<_246881b35_comptimeStructField>, jule::Str*);
inline jule::Str _246883b6a_Str(_2468837e6_comptimeStructFields*);
inline jule::Bool _246883eab_Equal(jule::Ptr<_2468837e6_comptimeStructFields>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _24688442e_ready(_2468837e6_comptimeStructFields*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _24688484c_step(_2468837e6_comptimeStructFields*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _246884ad3_len(_2468837e6_comptimeStructFields*);
inline jule::Str _246885265_Str(_246884de1_comptimeStatic*);
inline jule::Bool _2468855a6_Equal(jule::Ptr<_246884de1_comptimeStatic>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _246885bd3__Name(jule::Ptr<_246884de1_comptimeStatic>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468860ce__Type(jule::Ptr<_246884de1_comptimeStatic>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468864ca__Public(jule::Ptr<_246884de1_comptimeStatic>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24688681b_subIdent(jule::Ptr<_246884de1_comptimeStatic>, jule::Str*);
inline jule::Str _246886e26_Str(_246886aa2_comptimeStatics*);
inline jule::Bool _246887267_Equal(jule::Ptr<_246886aa2_comptimeStatics>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _2468876da_ready(_246886aa2_comptimeStatics*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _246887b08_step(_246886aa2_comptimeStatics*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _246887d8e_len(_246886aa2_comptimeStatics*);
inline jule::Str _246888631_Str(_24688819c_comptimeEnumField*);
inline jule::Bool _246888972_Equal(jule::Ptr<_24688819c_comptimeEnumField>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _246888de5__Name(jule::Ptr<_24688819c_comptimeEnumField>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246889236_subIdent(jule::Ptr<_24688819c_comptimeEnumField>, jule::Str*);
inline jule::Str _2468898b8_Str(_246889544_comptimeEnumFields*);
inline jule::Bool _246889c09_Equal(jule::Ptr<_246889544_comptimeEnumFields>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _24688a17c_ready(_246889544_comptimeEnumFields*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _24688a59a_step(_246889544_comptimeEnumFields*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _24688a831_len(_246889544_comptimeEnumFields*);
inline jule::Str _24688aeb3_Str(_24688ab3e_comptimeParam*);
inline jule::Bool _24688b304_Equal(jule::Ptr<_24688ab3e_comptimeParam>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _24688ba63__Name(jule::Ptr<_24688ab3e_comptimeParam>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24688be5e__Type(jule::Ptr<_24688ab3e_comptimeParam>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24688c35a__Variadic(jule::Ptr<_24688ab3e_comptimeParam>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24688c756__Reference(jule::Ptr<_24688ab3e_comptimeParam>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24688ca97_subIdent(jule::Ptr<_24688ab3e_comptimeParam>, jule::Str*);
inline jule::Str _24688d229_Str(_24688cda5_comptimeParams*);
inline jule::Bool _24688d56a_Equal(jule::Ptr<_24688cda5_comptimeParams>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _24688d9dd_ready(_24688cda5_comptimeParams*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _24688de0b_step(_24688cda5_comptimeParams*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _24688e192_len(_24688cda5_comptimeParams*);
inline jule::Str _24688e824_Str(_24688e4a0_comptimeTypeInfos*);
inline jule::Bool _24688eb65_Equal(jule::Ptr<_24688e4a0_comptimeTypeInfos>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _2468900d8_ready(_24688e4a0_comptimeTypeInfos*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _246890506_step(_24688e4a0_comptimeTypeInfos*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _24689078c_len(_24688e4a0_comptimeTypeInfos*);
inline jule::Str _246890e1e_Str(_246890a9a_comptimeTypeInfo*);
inline jule::Bool _246891260_Equal(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _2468918ae__Str(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246891caa__Kind(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468921a6__Bits(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468925a2__Elem(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689299d__Size(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246892d99__Key(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246893295__Value(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246893691__Fields(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246893a8c__Statics(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246893e88__Public(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246894384__Binded(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246894780__Ordered(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246894b7b__Comparable(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246895077__Mutable(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246895473__Types(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689586e__Exceptional(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246895c6a__CanNil(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246896166__RC(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246896562__Result(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689695d__Params(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246896c9e_subIdent(jule::Ptr<_246890a9a_comptimeTypeInfo>, jule::Str*);
inline jule::Str _246897431_Str(_2468970ac_comptimeValue*);
inline jule::Bool _246897772_Equal(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _246897cc2__Unwrap(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468981bd__Type(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468985b9__Lvalue(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468989b5__Mutable(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246898db1__Const(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468992ac__Field(jule::Ptr<_2468970ac_comptimeValue>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _2468995ed_subIdent(jule::Ptr<_2468970ac_comptimeValue>, jule::Str*);
inline jule::Str _246899c80_Str(_24689990b_comptimeFiles*);
inline jule::Bool _24689a0c1_Equal(jule::Ptr<_24689990b_comptimeFiles>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _24689a544_ready(_24689990b_comptimeFiles*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline void _24689a962_step(_24689990b_comptimeFiles*, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
inline jule::I64 _24689abe8_len(_24689990b_comptimeFiles*);
inline jule::Str _24689b49b_Str(_24689b006_comptimeFile*);
inline jule::Bool _24689b7dc_Equal(jule::Ptr<_24689b006_comptimeFile>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_246983ac2_Data> _24689bd09__Path(jule::Ptr<_24689b006_comptimeFile>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689c205__Name(jule::Ptr<_24689b006_comptimeFile>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689c601__Dir(jule::Ptr<_24689b006_comptimeFile>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _24689c942_subIdent(jule::Ptr<_24689b006_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)> _2468a06ae_readyFn(jule::Ptr<_2468a02b3_constraintChecker>);
inline jule::Bool _2468a0945_readyFi(jule::Ptr<_2468a02b3_constraintChecker>);
inline jule::Bool _2468a0bcb_readySi(jule::Ptr<_2468a02b3_constraintChecker>);
inline jule::Bool _2468a0e62_ready(jule::Ptr<_2468a02b3_constraintChecker>);
inline jule::Bool _2468a11e8_check(jule::Ptr<_2468a02b3_constraintChecker>);
inline jule::Bool _2468a26c2_IsTraitImpl(_2468a2309_Impl*);
inline jule::Bool _2468a2958_IsStructImpl(_2468a2309_Impl*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468b0009_SelectPackage(_2468aea64_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
inline jule::Ptr<_246922555_Var> _2468b0405_FindVar(_2468aea64_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _2468b0801_FindTypeAlias(_2468aea64_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _2468b0bec_FindStruct(_2468aea64_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _2468b10e8_FindFn(_2468aea64_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _2468b1439_FindTrait(_2468aea64_scopeChecker*, jule::Str);
inline jule::Ptr<_24687b800_Enum> _2468b177a_FindEnum(_2468aea64_scopeChecker*, jule::Str);
inline jule::Ptr<_24687d00a_TypeEnum> _2468b1abb_FindTypeEnum(_2468aea64_scopeChecker*, jule::Str);
inline jule::Bool _2468b1e1d_isUnsafe(jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Bool _2468b21a4_isRoot(_2468aea64_scopeChecker*);
inline void _2468b23a2_stop(_2468aea64_scopeChecker*);
inline jule::Bool _2468b2638_stopped(_2468aea64_scopeChecker*);
inline jule::Bool _2468b28be_isDeferred(jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Ptr<_2468aea64_scopeChecker> _2468b2b55_getRoot(jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Ptr<_2468aea64_scopeChecker> _2468b2ddb_getHardRoot(jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Ptr<_2468aa103_Label> _2468b322c_findLabel(_2468aea64_scopeChecker*, jule::Str*);
inline jule::Ptr<_2468ad5bd_scopeLabel> _2468b356d_findLabelScope(jule::Ptr<_2468aea64_scopeChecker>, jule::Str*);
inline jule::Ptr<_2468ad5bd_scopeLabel> _2468b38ae_findLabelAll(_2468aea64_scopeChecker*, jule::Str*);
inline jule::Bool _2468b3caa_isDuplicatedIdent(_2468aea64_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _2468b4063_checkVarDecl(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468430ad_VarDecl>);
inline void _2468b431b_checkTypeAlias(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2469b35e6_TypeAlias>*);
inline void _2468b45c4_checkTypeAliasDecl(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246846b83_TypeAliasDecl>);
inline jule::Ptr<_2468a7760_Scope> _2468b485a_getChild(_2468aea64_scopeChecker*);
inline void _2468b4c78_checkChildSsc(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246840341_ScopeTree>*, jule::Ptr<_2468a7760_Scope>*, jule::Ptr<_2468aea64_scopeChecker>*);
inline jule::Ptr<_2468a7760_Scope> _2468b5174_checkChildSc(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246840341_ScopeTree>*, jule::Ptr<_2468aea64_scopeChecker>*);
inline jule::Ptr<_2468a7760_Scope> _2468b54b5_checkChild(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246840341_ScopeTree>*);
inline void _2468b576d_checkAnonScope(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246840341_ScopeTree>);
inline void _2468b5ad1_processErrorCall(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel>*, jule::Ptr<_246819d43_Token>);
inline void _2468b5d89_checkExpr(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246834654_Expr>);
inline jule::Ptr<_2468a7b7d_If> _2468b61ca_checkIf(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845ab6_If>);
inline jule::Ptr<_2468a7e7a_Else> _2468b651b_checkElse(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845e90_Else>);
inline void _2468b67c4_checkConditional(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246846446_Conditional>);
inline void _2468b6c9c_checkIterScopeSsc(jule::Ptr<_2468aea64_scopeChecker>, jule::Uintptr, jule::Ptr<_246840341_ScopeTree>, jule::Ptr<_2468a7760_Scope>*, jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Ptr<_2468a7760_Scope> _2468b7253_checkIterScopeSc(jule::Ptr<_2468aea64_scopeChecker>, jule::Uintptr, jule::Ptr<_246840341_ScopeTree>, jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Ptr<_2468a7760_Scope> _2468b764e_checkIterScope(jule::Ptr<_2468aea64_scopeChecker>, jule::Uintptr, jule::Ptr<_246840341_ScopeTree>*);
inline void _2468b7907_checkInfIter(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843b2a_Iter>*);
inline void _2468b7bb0_checkWhileIter(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843b2a_Iter>*);
inline void _2468b80cd_checkComptimeRangeIter(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843b2a_Iter>*, jule::Ptr<_2468a9597_RangeIter>*, jule::Ptr<_246983ac2_Data>*);
inline void _2468b8386_checkRangeIter(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843b2a_Iter>*);
inline void _2468b863e_checkIter(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843b2a_Iter>);
inline jule::Bool _2468b8980_checkValidContLabel(jule::Ptr<_2468aea64_scopeChecker>, jule::Uintptr);
inline jule::Bool _2468b8cc1_checkValidBreakLabel(jule::Ptr<_2468aea64_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_2468a992c_ContSt> _2468b9112_checkContValidScope(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845610_ContSt>);
inline void _2468b93ba_checkCont(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845610_ContSt>);
inline void _2468b9673_checkLabel(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683c904_LabelSt>);
inline void _2468b992b_pushGoto(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683cccd_GotoSt>);
inline void _2468b9bd4_checkPostfix(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683dcbd_AssignSt>);
inline jule::Bool _2468ba025_isNewAssignIdent(_2468aea64_scopeChecker*, jule::Str);
inline void _2468ba2cd_removeInteriorMutRisk(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2468ba784_checkStructureAssignOp(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_24683dcbd_AssignSt>*, jule::Ptr<_246983ac2_Data>*);
inline void _2468baa3c_checkSingleAssign(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683dcbd_AssignSt>*);
inline void _2468bb0c0_processEndPartOfMultiAssign(_2468aea64_scopeChecker*, jule::Ptr<_2468ab236_MultiAssign>*, jule::Ptr<_24683dcbd_AssignSt>*, jule::Ptr<_24683d73a_AssignLeft>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline void _2468bb378_checkMultiAssign(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683dcbd_AssignSt>*);
inline void _2468bb631_singleDeclAssign(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683dcbd_AssignSt>*);
inline void _2468bb8d9_checkAssignSt(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683dcbd_AssignSt>);
inline jule::Ptr<_2468a7760_Scope> _2468bbcd5_checkCaseScope(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468ac4ce_Case>*, jule::Ptr<_246840341_ScopeTree>*);
inline jule::Ptr<_2468ac4ce_Case> _2468bc346_checkCase(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468ab896_Match>, jule::I64, jule::Ptr<_246847139_Case>, jule::Ptr<_246983ac2_Data>);
inline void _2468bc764_checkCases(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246847876_MatchCase>*, jule::Ptr<_2468ab896_Match>, jule::Ptr<_246983ac2_Data>);
inline jule::Ptr<_2468ac4ce_Case> _2468bcb60_checkDefault(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468ab896_Match>, jule::Ptr<_246845e90_Else>);
inline void _2468bcec3_checkComptimePanic(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246819d43_Token>, jule::Ptr<_2468a7760_Scope>*);
inline void _2468bd336_processConstMatch(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_2468ab896_Match>*, jule::Ptr<_246847876_MatchCase>*);
inline void _2468bd5de_checkTypeMatch(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246847876_MatchCase>*);
inline void _2468bd897_checkCommonMatch(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246847876_MatchCase>*);
inline void _2468bdb50_checkMatch(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246847876_MatchCase>);
inline void _2468bde08_checkFall(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_24683d0ca_FallSt>);
inline jule::Ptr<_2468a9d06_BreakSt> _2468be249_checkBreakWithLabel(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845236_BreakSt>);
inline jule::Ptr<_2468a9d06_BreakSt> _2468be58a_checkPlainBreak(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845236_BreakSt>);
inline void _2468be843_checkBreak(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246845236_BreakSt>);
inline void _2468beaeb_checkRet(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246843487_RetSt>);
inline void _2468beda4_checkUseExpr(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246835028_UseExpr>);
inline void _2468c015c_checkNode(jule::Ptr<_2468aea64_scopeChecker>, jule::Any*);
inline void _2468c035a_checkResult(jule::Ptr<_2468aea64_scopeChecker>);
inline void _2468c0558_checkTree(jule::Ptr<_2468aea64_scopeChecker>);
inline void _2468c08bb_checkGoto(_2468aea64_scopeChecker*, jule::Ptr<_2468adb51_scopeGoto>*, jule::Ptr<_2468ad5bd_scopeLabel>*);
inline void _2468c0ab9_checkGotos(_2468aea64_scopeChecker*);
inline void _2468c0cb7_checkLabels(_2468aea64_scopeChecker*);
inline void _2468c0eb5_checkVars(_2468aea64_scopeChecker*);
inline void _2468c11b3_checkAliases(_2468aea64_scopeChecker*);
inline void _2468c1526_check(jule::Ptr<_2468aea64_scopeChecker>, jule::Ptr<_246840341_ScopeTree>*, jule::Ptr<_2468a7760_Scope>*);
inline jule::Ptr<_2468aea64_scopeChecker> _2468c17ac_newChildChecker(jule::Ptr<_2468aea64_scopeChecker>);
inline void _2468c2b43_checkCdef(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c2deb_checkTypedef(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c31a4_checkNamespace(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c345c_checkDeprecated(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c3715_checkTest(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c39bd_checkDirective(_2468c2736_directiveChecker*, jule::Ptr<_24682e73c_Directive>*);
inline void _2468c3bbb_check(_2468c2736_directiveChecker*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468c91bb_SelectPackage(_2468c8bd2_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
inline jule::Ptr<_246922555_Var> _2468c95b7_FindVar(_2468c8bd2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _2468c99b3_FindTypeAlias(_2468c8bd2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _2468c9dae_FindStruct(_2468c8bd2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _2468ca2aa_FindFn(_2468c8bd2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _2468ca5eb_FindTrait(_2468c8bd2_ImportInfo*, jule::Str);
inline jule::Ptr<_24687b800_Enum> _2468ca93c_FindEnum(_2468c8bd2_ImportInfo*, jule::Str);
inline jule::Ptr<_24687d00a_TypeEnum> _2468cac7d_FindTypeEnum(_2468c8bd2_ImportInfo*, jule::Str);
inline jule::Bool _2468cb223_isLookupable(_2468c8bd2_ImportInfo*, jule::Str*);
inline jule::Bool _2468cb564_existIdent(_2468c8bd2_ImportInfo*, jule::Str);
inline jule::Bool _2468cb7ea_isAccessibleViaSelection(_2468c8bd2_ImportInfo*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468cc09d_SelectPackage(_2468cbb08_Package*, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
inline jule::Ptr<_246922555_Var> _2468cc499_FindVar(_2468cbb08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _2468cc895_FindTypeAlias(_2468cbb08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _2468ccc91_FindStruct(_2468cbb08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _2468cd18c_FindFn(_2468cbb08_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _2468cd4cd_FindTrait(_2468cbb08_Package*, jule::Str);
inline jule::Ptr<_24687b800_Enum> _2468cd81e_FindEnum(_2468cbb08_Package*, jule::Str);
inline jule::Ptr<_24687d00a_TypeEnum> _2468cdb60_FindTypeEnum(_2468cbb08_Package*, jule::Str);
inline jule::Ptr<_246890a9a_comptimeTypeInfo> _2468ee983_pushComptimeTypeInfo(_2468ee521_commonSemaMeta*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469005dd_SelectPackage(_246900148_Sema*, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
inline jule::Ptr<_246922555_Var> _2469009d9_FindVar(_246900148_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _246900dd5_FindTypeAlias(_246900148_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _2469012d1_FindStruct(_246900148_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _2469016cc_FindFn(_246900148_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _246901a1d_FindTrait(_246900148_Sema*, jule::Str);
inline jule::Ptr<_24687b800_Enum> _246901d5e_FindEnum(_246900148_Sema*, jule::Str);
inline jule::Ptr<_24687d00a_TypeEnum> _2469021a0_FindTypeEnum(_246900148_Sema*, jule::Str);
inline jule::Bool _2469025ac_isFlag(_246900148_Sema*, jule::I64);
inline void _246902865_setCurrentFile(_246900148_Sema*, jule::Ptr<_24697d726_SymbolTable>);
inline void _246902c83_pushErr(_246900148_Sema*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2469030e6_pushSuggestion(_246900148_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2469034e2_isAccessibleDefine(_246900148_Sema*, jule::Bool, jule::Ptr<_246819d43_Token>);
inline jule::Bool _246903998_isDuplicatedIdent(_246900148_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _246903d0b_checkDirectives(jule::Ptr<_246900148_Sema>, jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Any);
inline jule::Bool _2469042b2_checkGenericQuantity(_246900148_Sema*, jule::I64, jule::I64, jule::Ptr<_246819d43_Token>);
inline jule::Bool _2469046ad_isDuplicatedImportSelection(_246900148_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _246904aa9_getImportDef(_246900148_Sema*, jule::Str*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline jule::Bool _22b2cd69b_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246922555_Var>*);
inline jule::Bool _22b2d266c_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_2469b35e6_TypeAlias>*);
inline jule::Bool _22b2d65e9_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246850e23_Struct>*);
inline jule::Bool _22b2da70d_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _22b2de68a_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_24687b800_Enum>*);
inline jule::Bool _22b2e3617_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_24687d00a_TypeEnum>*);
inline jule::Bool _22b2e7594_checkImportSelection(_246900148_Sema*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _2469052e6_checkImportSelectedSelections(_246900148_Sema*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline jule::Bool _22b2ebc6e_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_246922555_Var>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b2ecdb3_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b3004e2_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_246850e23_Struct>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b302abb_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_246865d17_Fn>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b305140_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_2468790e4_Trait>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b307791_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_24687b800_Enum>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _22b309d26_checkImportsAllSelectionsFromCollection(_246900148_Sema*, jule::Slice<jule::Ptr<_24687d00a_TypeEnum>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _246905a33_checkImportAllSelections(_246900148_Sema*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline jule::Bool _246905d74_checkImportSelections(_246900148_Sema*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline jule::Bool _2469061b5_isUseAliasDuplication(_246900148_Sema*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline jule::Bool _246906506_checkImport(_246900148_Sema*, jule::Ptr<_2468c8bd2_ImportInfo>*);
inline void _246906704_checkImports(_246900148_Sema*);
inline void _246906902_implFileImpls(jule::Ptr<_246900148_Sema>);
inline void _246906b00_implImpls(jule::Ptr<_246900148_Sema>);
inline void _246906ced_checkEnums(jule::Ptr<_246900148_Sema>);
inline void _246906eeb_checkFileInherits(jule::Ptr<_246900148_Sema>);
inline void _2469071e9_checkInherits(jule::Ptr<_246900148_Sema>);
inline _2469c653d_typeChecker _2469076a0_typeChecker(jule::Ptr<_246900148_Sema>, jule::Trait<_2469d41b6_Lookup>, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>, jule::Ptr<_2469c554d_referencer>);
inline jule::Ptr<_2469b43d8_TypeKind> _246907c11_buildTypeWithRefers(jule::Ptr<_246900148_Sema>, jule::Ptr<_246830320_TypeDecl>*, jule::Trait<_2469d41b6_Lookup>, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>, jule::Ptr<_2469c554d_referencer>);
inline jule::Bool _246908272_checkTypeWithRefers(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469bb852_TypeSymbol>*, jule::Trait<_2469d41b6_Lookup>, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>, jule::Ptr<_2469c554d_referencer>);
inline jule::Ptr<_2468a02b3_constraintChecker> _246908508_constraintChecker(jule::Ptr<_246900148_Sema>);
inline jule::Bool _246908904_checkType(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469bb852_TypeSymbol>*, jule::Trait<_2469d41b6_Lookup>);
inline jule::Ptr<_2469b43d8_TypeKind> _246908daa_buildTypeWithGenerics(jule::Ptr<_246900148_Sema>, jule::Ptr<_246830320_TypeDecl>*, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>, jule::Ptr<_24686bdd9_ReferenceStack>);
inline jule::Ptr<_2469b43d8_TypeKind> _24690953c_selectType(jule::Ptr<_246900148_Sema>, jule::Ptr<_246830320_TypeDecl>*);
inline jule::Ptr<_2469857b6_Eval> _2469099e3_evalpd(jule::Ptr<_246900148_Sema>, jule::Trait<_2469d41b6_Lookup>, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246922555_Var>);
inline jule::Ptr<_2469857b6_Eval> _246909dde_evalp(jule::Ptr<_246900148_Sema>, jule::Trait<_2469d41b6_Lookup>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_2469857b6_Eval> _24690a230_eval(jule::Ptr<_246900148_Sema>, jule::Trait<_2469d41b6_Lookup>);
inline jule::Bool _24690a791_checkAssignType(jule::Ptr<_246900148_Sema>, jule::Bool, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>);
inline jule::Bool _24690ac47_checkTypeCompatibility(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_2469b43d8_TypeKind> _24690b1ed_buildNonGenericTypeKind(jule::Ptr<_246900148_Sema>, jule::Ptr<_246830320_TypeDecl>*, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>*, jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>*);
inline jule::Bool _24690b5e9_buildFnNonGenericTypeKinds(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>*, jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>*);
inline jule::Ptr<_246868c1b_FnIns> _24690b93a_getTraitCheckFnKind(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _24690bde1_checkConstraintsFn(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246868c1b_FnIns>);
inline jule::Bool _24690c397_checkConstraintsStruct(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246853ba1_StructIns>);
inline jule::Bool _24690c793_fnEnvironment(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)>);
inline void _24690ca4b_checkFnParamKind(jule::Ptr<_246900148_Sema>, jule::Ptr<_246867c70_ParamIns>*);
inline jule::Bool _24690cd8c_reloadFnInsTypes(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>);
inline jule::Bool _24690d343_checkRefValidityForInitExpr(jule::Ptr<_246900148_Sema>, jule::Bool, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24690d684_isMutRiskyStruct(_246900148_Sema*, jule::Ptr<_246853ba1_StructIns>*);
inline jule::Bool _24690dca0_checkValidityForInitExpr(jule::Ptr<_246900148_Sema>, jule::Bool, jule::Bool, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24690e19b_checkTypeAliasDeclKind(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469b35e6_TypeAlias>*, jule::Trait<_2469d41b6_Lookup>);
inline void _24690e50e_checkTypeAliasDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469b35e6_TypeAlias>*, jule::Trait<_2469d41b6_Lookup>);
inline void _24690e7b7_checkTypeAliasDeclDup(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469b35e6_TypeAlias>*);
inline jule::Bool _24690ea4d_checkTypeAliasDecls(jule::Ptr<_246900148_Sema>);
inline void _22b3a7203_checkEnumItemsDup(_246900148_Sema*, jule::Slice<jule::Ptr<_24687ac83_EnumItem>>);
inline void _22b3b4045_checkEnumItemsDup(_246900148_Sema*, jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>>);
inline void _2469100ae_checkEnumItemsStr(jule::Ptr<_246900148_Sema>, jule::Ptr<_24687b800_Enum>*);
inline void _22b3884c0_checkEnumItemInt(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24687b800_Enum>*, jule::Ptr<_2469bc259_Prim>*, jule::Ptr<_24687ac83_EnumItem>*, jule::U64*);
inline void _22b397db4_checkEnumItemInt(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24687b800_Enum>*, jule::Ptr<_2469bc259_Prim>*, jule::Ptr<_24687ac83_EnumItem>*, jule::I64*);
inline void _22b384b81_checkEnumItemsInt1(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469bc259_Prim>*, jule::Ptr<_24687b800_Enum>*);
inline void _22b395565_checkEnumItemsInt1(jule::Ptr<_246900148_Sema>, jule::Ptr<_2469bc259_Prim>*, jule::Ptr<_24687b800_Enum>*);
inline void _246910c5d_checkEnumItemsInt(jule::Ptr<_246900148_Sema>, jule::Ptr<_24687b800_Enum>*);
inline void _246911016_checkEnumDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_24687b800_Enum>*);
inline void _2469112be_checkTypeEnumDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_24687d00a_TypeEnum>*);
inline jule::Bool _246911555_checkEnumDecls(jule::Ptr<_246900148_Sema>);
inline jule::Bool _2469117db_checkTypeEnumDecls(jule::Ptr<_246900148_Sema>);
inline jule::Bool _246911b2c_checkDeclGenerics(_246900148_Sema*, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>*);
inline jule::Bool _246911e6d_checkFnDeclParamsDup(_246900148_Sema*, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _2469122ae_checkFnDeclResultDup(_246900148_Sema*, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _246912600_checkFnVariadicParam(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline void _2469128a8_checkFnDeclPrototype(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _246912d5e_catchTraitInheritCycle(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_2468790e4_Trait>, _2433b0c50_StrBuilder*);
inline jule::Bool _2469131a0__checkTraitDeclInherits(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468790e4_Trait>*);
inline void _246913458_checkTraitDeclInherits(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468790e4_Trait>*);
inline void _246913711_checkTraitDeclMethod(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline void _2469139b9_checkTraitDeclMethods(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468790e4_Trait>*);
inline void _246913c72_checkTraitDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _246914008_checkTraitDecls(jule::Ptr<_246900148_Sema>);
inline jule::Bool _246914404_checkTraitImplMethods(_246900148_Sema*, jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_2468a2309_Impl>*);
inline jule::Bool _246914800_implToStruct(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*, jule::Ptr<_2468a2309_Impl>*);
inline void _246914aa8_implTrait(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468a2309_Impl>*);
inline void _246914d61_implStruct(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468a2309_Impl>*);
inline void _246915119_implImpl(jule::Ptr<_246900148_Sema>, jule::Ptr<_2468a2309_Impl>*);
inline void _24691547c_checkVarDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246922555_Var>*, jule::Trait<_2469d41b6_Lookup>);
inline void _246915735_checkGlobalVarDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246922555_Var>*);
inline jule::Bool _2469159bb_checkGlobalDecls(jule::Ptr<_246900148_Sema>);
inline jule::Bool _246915db7_checkStructTraitImpl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _246916208_checkStructImpls(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*);
inline jule::Bool _246916549_checkStructFields(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*);
inline void _246916802_checkStructDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*);
inline jule::Bool _246916a88_checkStructDecls(jule::Ptr<_246900148_Sema>);
inline void _246916d41_checkAnonFuncDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline void _2469170e9_checkFuncDecl(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _24691743a_checkFuncDeclsBy(jule::Ptr<_246900148_Sema>, jule::Slice<jule::Ptr<_246865d17_Fn>>*);
inline jule::Bool _2469176c1_checkFuncDecls(jule::Ptr<_246900148_Sema>);
inline void _246917ade_pushCycleError(_246900148_Sema*, jule::Str*, jule::Str*, _2433b0c50_StrBuilder*);
inline void _246918293_checkPackageDecls(jule::Ptr<_246900148_Sema>);
inline void _246918606_checkDataForTypeInference(_246900148_Sema*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline void _2469188ae_checkVarValue(jule::Ptr<_246900148_Sema>, jule::Ptr<_246922555_Var>*);
inline void _246918c22_evalVarValue(jule::Ptr<_246900148_Sema>, jule::Ptr<_246922555_Var>*, jule::Trait<_2469d41b6_Lookup>);
inline void _246919085_checkVar(jule::Ptr<_246900148_Sema>, jule::Ptr<_246922555_Var>*, jule::Trait<_2469d41b6_Lookup>);
inline void _246919283_checkGlobals(jule::Ptr<_246900148_Sema>);
inline jule::Ptr<_246868c1b_FnIns> _24691967e_readyToCheckFn(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246865d17_Fn>*);
inline void _2469199e2_checkTypeMethod(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246865d17_Fn>*);
inline jule::Ptr<_246868c1b_FnIns> _246919e98_checkStructInsOp(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246865d17_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_246865d17_Fn>)>);
inline jule::Bool _24691a394_checkStructEnv(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246819d43_Token>);
inline jule::Bool _24691a790_precheckStructIns(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246819d43_Token>);
inline void _24691aa48_checkStructIns(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>*);
inline void _24691ad01_checkTypeStruct(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*);
inline void _24691aeee_checkStructTypes(jule::Ptr<_246900148_Sema>);
inline void _24691b2a7_checkStructInsOperators(jule::Ptr<_246900148_Sema>, jule::Ptr<_246853ba1_StructIns>);
inline void _24691b560_precheckStructType(jule::Ptr<_246900148_Sema>, jule::Ptr<_246850e23_Struct>*);
inline void _24691b75d_precheckStructTypes(jule::Ptr<_246900148_Sema>);
inline void _24691ba16_checkRets(_246900148_Sema*, jule::Ptr<_246868c1b_FnIns>*);
inline void _24691bd79_checkFnInsSc(_246900148_Sema*, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_2468aea64_scopeChecker>*);
inline void _24691c1dc_checkFnInsCaller(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246819d43_Token>);
inline void _24691c495_checkFnIns(jule::Ptr<_246900148_Sema>, jule::Ptr<_246868c1b_FnIns>*);
inline void _24691c74d_checkFunc(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline void _24691ca06_checkTestFn(_246900148_Sema*, jule::Ptr<_246868c1b_FnIns>*);
inline void _24691ccae_precheckFunc(jule::Ptr<_246900148_Sema>, jule::Ptr<_246865d17_Fn>*);
inline void _24691ceac_precheckFuncs(jule::Ptr<_246900148_Sema>);
inline void _24691d1aa_checkFuncs(jule::Ptr<_246900148_Sema>);
inline void _24691d3a8_checkPackageTypes(jule::Ptr<_246900148_Sema>);
inline void _24691d5a6_setFileSemaFields(jule::Ptr<_246900148_Sema>);
inline void _24691d7a4_setSemaFields(jule::Ptr<_246900148_Sema>);
inline void _24691da5c_check(jule::Ptr<_246900148_Sema>, jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*);
inline _24691de8b_missingRetChecker static__24691e354_new(void);
inline jule::Bool _24691e662_checkConditional(_24691de8b_missingRetChecker*, jule::Ptr<_2468a8398_Conditional>);
inline jule::Bool _24691e9a3_checkMatch(_24691de8b_missingRetChecker*, jule::Ptr<_2468ab896_Match>);
inline jule::Bool _24691ece4_checkInfIter(_24691de8b_missingRetChecker*, jule::Ptr<_2468a8695_InfIter>);
inline jule::Bool _246920135_checkScope(_24691de8b_missingRetChecker*, jule::Ptr<_2468a7760_Scope>);
inline jule::Bool _246920476_check(_24691de8b_missingRetChecker*, jule::Ptr<_2468a7760_Scope>);
inline jule::Bool _2469228da_IsInitialized(_246922555_Var*);
inline jule::Bool _246922b71_IsTypeInferred(_246922555_Var*);
inline jule::Bool _246922e07_untypedConstant(_246922555_Var*);
inline jule::Bool static__2469239a7_Dispose(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246923c71_Str(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469240e5_logical(jule::Ptr<_246865d17_Fn>*, jule::Str);
inline jule::Bool static__2469243ae_Eq(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246924678_Gt(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246924942_GtEq(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246924c0b_Lt(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246924ec5_LtEq(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246925349_result(jule::Ptr<_246865d17_Fn>*, jule::Str);
inline jule::Bool static__246925613_Shl(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469258cc_Shr(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246925b96_Add(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246925e60_Sub(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246926229_Div(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469264e3_Mul(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469267ac_Mod(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246926a76_BitAnd(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246926d40_BitOr(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246927109_BitXor(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__24692747d_unary(jule::Ptr<_246865d17_Fn>*, jule::Str);
inline jule::Bool static__246927747_Neg(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246927a11_Pos(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246927cca_BitNot(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__24692814e_assign(jule::Ptr<_246865d17_Fn>*, jule::Str);
inline jule::Bool static__246928418_AddAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469286d2_SubAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__24692899b_DivAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246928c65_MulAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__24692902e_ModAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469292e8_ShlAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__2469295b2_ShrAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__24692987b_BitOrAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246929b45_BitAndAssign(jule::Ptr<_246865d17_Fn>);
inline jule::Bool static__246929e0e_BitXorAssign(jule::Ptr<_246865d17_Fn>);
inline void _24696ac52_pushErr(_24696a757_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _24696aed8_checkTrait(_24696a757_typeCompatibilityChecker*);
inline jule::Bool _24696b26e_checkPtr(_24696a757_typeCompatibilityChecker*);
inline jule::Bool _24696b505_checkPrim(_24696a757_typeCompatibilityChecker*);
inline jule::Bool _24696b901_typeEnum(_24696a757_typeCompatibilityChecker*, jule::Ptr<_24687d00a_TypeEnum>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24696bb87_checkTypeEnum(_24696a757_typeCompatibilityChecker*);
inline jule::Bool _24696be1d_check(_24696a757_typeCompatibilityChecker*);
inline void _24696c99b_pushErr(_24696c506_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _24696cc32_checkValidity(_24696c506_assignTypeChecker*);
inline jule::Bool _24696ceb8_checkConst(_24696c506_assignTypeChecker*);
inline jule::Bool _24696d24e_isPrim(_24696c506_assignTypeChecker*);
inline jule::Bool _24696d4d5_checkCompatibility(_24696c506_assignTypeChecker*);
inline jule::Bool _24696d76b_check(_24696c506_assignTypeChecker*);
inline jule::Bool _22b584985_annotateConstraintElem(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _22b5842e2_annotateConstraintElem(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _22b58648c_annotateConstraintElem(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _22b58ca59_annotateConstraintElem(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24696ea69_annotateConstraintMap(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24696edaa_annotateConstraintTup(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2469701eb_annotateConstraintFn(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24697053c_annotateConstraintIdent(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24697087d_annotateConstraint(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _246970be1_pushGeneric(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*, jule::I64);
inline jule::Bool _246971032_annotatePrim(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246971373_annotateArr(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2469716b4_annotateSlc(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246971ab0_checkMapKey(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246971e01_annotateMap(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246972242_annotateFn(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246972583_annotatePtr(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2469728c4_annotateSptr(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246972c15_annotateStruct(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246973056_annotateAny(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _246973397_annotateKind(_24696e173_dynamicTypeAnnotation*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _24697362d_annotate(_24696e173_dynamicTypeAnnotation*);
inline void _246974574_pushErrToken(_246973ed0_fnCallArgChecker*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2469748d7_pushErr(_246973ed0_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_246867c70_ParamIns>> _246974b6d_getParams(_246973ed0_fnCallArgChecker*);
inline jule::Bool _246974e7b_checkCounts(_246973ed0_fnCallArgChecker*, jule::Slice<jule::Ptr<_246867c70_ParamIns>>*);
inline jule::Bool _246975432_checkArg(_246973ed0_fnCallArgChecker*, jule::Ptr<_246867c70_ParamIns>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline jule::Bool _24697582d_push(_246973ed0_fnCallArgChecker*, jule::Ptr<_246867c70_ParamIns>*, jule::Ptr<_246834654_Expr>);
inline jule::Bool _246975c29_pushVariadic(_246973ed0_fnCallArgChecker*, jule::Ptr<_246867c70_ParamIns>*, jule::I64);
inline jule::Bool _24697606a_checkArgs(_246973ed0_fnCallArgChecker*, jule::Slice<jule::Ptr<_246867c70_ParamIns>>*);
inline jule::Bool _246976301_checkDynamicTypeAnnotation(_246973ed0_fnCallArgChecker*);
inline jule::Bool _246976587_check(_246973ed0_fnCallArgChecker*);
inline void _246977467_pushErr(_246976e17_structLitChecker*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2469777ca_pushSuggestion(_246976e17_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _246977be8_pushMatch(_246976e17_structLitChecker*, jule::Ptr<_246853101_FieldIns>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline void _24697805b_checkPair(_246976e17_structLitChecker*, jule::Ptr<_246838d73_FieldExprPair>*, jule::Slice<jule::Ptr<_246834654_Expr>>*);
inline jule::Bool _24697839c_readyExprs(_246976e17_structLitChecker*, jule::Slice<jule::Ptr<_246834654_Expr>>*);
inline void _246978655_check(_246976e17_structLitChecker*, jule::Slice<jule::Ptr<_246834654_Expr>>*);
inline jule::Ptr<_246922555_Var> _2469791d3_buildVar(_246978be9_rangeChecker*, jule::Ptr<_2468430ad_VarDecl>*);
inline void _2469793d1_setSizeKey(_246978be9_rangeChecker*);
inline void _2469797ee_checkRangeExprValidity(_246978be9_rangeChecker*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246922555_Var>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _2469799ec_checkSlice(_246978be9_rangeChecker*);
inline void _246979bea_checkArray(_246978be9_rangeChecker*);
inline void _246979de8_checkMapKeyA(_246978be9_rangeChecker*);
inline void _24697a0e6_checkMapKeyB(_246978be9_rangeChecker*);
inline void _24697a2e4_checkMap(_246978be9_rangeChecker*);
inline void _24697a4e2_checkStr(_246978be9_rangeChecker*);
inline void _24697a6e0_checkComptime(_246978be9_rangeChecker*);
inline jule::Bool _24697a976_checkComptimeRange(_246978be9_rangeChecker*);
inline jule::Bool _24697ac0c_check(_246978be9_rangeChecker*);
inline void _24697b878_prepareTypes(_24697b45a_retTypeChecker*);
inline void _24697bb31_prepareExprs(_24697b45a_retTypeChecker*, jule::Ptr<_246834654_Expr>*);
inline void _24697bd2e_checkExprs(_24697b45a_retTypeChecker*);
inline jule::Bool _24697c170_check(_24697b45a_retTypeChecker*, jule::Ptr<_246834654_Expr>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _24697dc10_SelectPackage(_24697d726_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
inline jule::Ptr<_246922555_Var> _24697e10b_FindVar(_24697d726_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _24697e507_FindTypeAlias(_24697d726_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _24697e903_FindStruct(_24697d726_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _24697ecee_FindFn(_24697d726_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _246980140_FindTrait(_24697d726_SymbolTable*, jule::Str);
inline jule::Ptr<_24687b800_Enum> _246980481_FindEnum(_24697d726_SymbolTable*, jule::Str);
inline jule::Ptr<_24687d00a_TypeEnum> _2469807c2_FindTypeEnum(_24697d726_SymbolTable*, jule::Str);
inline jule::Ptr<_246922555_Var> _246980ddd_findVar(_24697d726_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _246981394_findTypeAlias(_24697d726_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _246981790_defByIdent(_24697d726_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _246981c46_isDuplicatedIdent(_24697d726_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _246983e79_IsNil(_246983ac2_Data*);
inline jule::Bool _246984210_IsVoid(_246983ac2_Data*);
inline jule::Bool _246984496_IsConst(_246983ac2_Data*);
inline jule::Bool _2469847d7_GoodOperand(_246983ac2_Data*, jule::Ptr<_246983ac2_Data>*);
inline void _246985d16_pushErr(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _246986179_pushSuggestion(_2469857b6_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _246986377_allowBuiltin(_2469857b6_Eval*);
inline void _246986575_disallowBuiltin(_2469857b6_Eval*);
inline jule::Bool _24698680b_isUnsafe(_2469857b6_Eval*);
inline jule::Bool _246986a92_isGlobal(_2469857b6_Eval*);
inline jule::Bool _246986da0_applyNumericPrefix(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _2469871e1_litStr(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>*);
inline jule::Ptr<_246983ac2_Data> _246987532_litRune(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>*);
inline jule::Ptr<_246983ac2_Data> _246987873_litFloat(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>*);
inline jule::Ptr<_246983ac2_Data> _246987bb4_litInt(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>*);
inline jule::Ptr<_246983ac2_Data> _246988005_litNum(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>*);
inline jule::Ptr<_246983ac2_Data> _246988346_evalLit(_2469857b6_Eval*, jule::Ptr<_2468356ee_LitExpr>);
inline jule::Any _246988687_findBuiltins(_2469857b6_Eval*, jule::Str*);
inline jule::Any _246988a83_getDef(_2469857b6_Eval*, jule::Str*, jule::Bool);
inline jule::Ptr<_24686bdd9_ReferenceStack> _246988d19_getOwnerRefers(_2469857b6_Eval*);
inline void _22b6e53a9_pushReference(_2469857b6_Eval*, jule::Ptr<_246868c1b_FnIns>*);
inline void _22b709104_pushReference(_2469857b6_Eval*, jule::Ptr<_246922555_Var>*);
inline void _22b7b6436_pushReference(_2469857b6_Eval*, jule::Ptr<_246853ba1_StructIns>*);
inline jule::Ptr<_246983ac2_Data> _246989413__evalEnum(_2469857b6_Eval*, jule::Ptr<_24687b800_Enum>);
inline jule::Ptr<_246983ac2_Data> _24698980e_evalEnum(_2469857b6_Eval*, jule::Ptr<_24687b800_Enum>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _246989b50__evalTypeEnum(_2469857b6_Eval*, jule::Ptr<_24687d00a_TypeEnum>);
inline jule::Ptr<_246983ac2_Data> _24698a04b_evalTypeEnum(_2469857b6_Eval*, jule::Ptr<_24687d00a_TypeEnum>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698a38c__evalStruct(_2469857b6_Eval*, jule::Ptr<_246853ba1_StructIns>);
inline jule::Ptr<_246983ac2_Data> _24698a788_evalStruct(_2469857b6_Eval*, jule::Ptr<_246853ba1_StructIns>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698aac9_evalFnIns(_2469857b6_Eval*, jule::Ptr<_246868c1b_FnIns>);
inline void _24698ae3c_checkDeprecated(_2469857b6_Eval*, jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698b338_evalFn(_2469857b6_Eval*, jule::Ptr<_246865d17_Fn>, jule::Ptr<_246819d43_Token>);
inline void _24698b756_pushIllegalCycleError(_2469857b6_Eval*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*, _2433b0c50_StrBuilder*);
inline jule::Bool _24698bb52_checkCrossCycle(_2469857b6_Eval*, jule::Ptr<_246922555_Var>*, _2433b0c50_StrBuilder*);
inline jule::Bool _24698c04d_checkIllegalCycles(_2469857b6_Eval*, jule::Ptr<_246922555_Var>*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698c449_evalVar(_2469857b6_Eval*, jule::Ptr<_246922555_Var>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698c845_evalTypeAlias(_2469857b6_Eval*, jule::Ptr<_2469b35e6_TypeAlias>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698cc41_evalDef(_2469857b6_Eval*, jule::Any*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24698d082_evalIdent(_2469857b6_Eval*, jule::Ptr<_24683607e_IdentExpr>);
inline jule::Ptr<_246983ac2_Data> _24698d3c3_evalUnary(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246836711_UnaryExpr>);
inline jule::Ptr<_246983ac2_Data> _24698d714_evalVariadic(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246836ada_VariadicExpr>);
inline jule::Ptr<_246983ac2_Data> _24698da55_evalUnsafe(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246835ac8_UnsafeExpr>);
inline jule::Ptr<_246983ac2_Data> _24698dd96_evalArr(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683ab77_SliceExpr>);
inline jule::Ptr<_246983ac2_Data> _24698e34c_evalExpSlc(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683ab77_SliceExpr>, jule::Ptr<_2469b43d8_TypeKind>, jule::Any);
inline jule::Ptr<_246983ac2_Data> _24698e68d_evalSliceExpr(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683ab77_SliceExpr>);
inline void _24698ea01_checkIntegerIndexingByData(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>);
inline void _24698ee1e_indexingPtr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline void _24699033c_indexingArr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline void _24699075a_indexingSlc(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline void _246990b78_indexingMap(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline void _246991096_indexingStr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline void _2469914b4_toIndexing(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline jule::Bool _24699196a_pushGenericsFromExprSubIdent(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246837767_SubIdentExpr>*, jule::Slice<jule::Ptr<_246830320_TypeDecl>>*, jule::Ptr<_246834654_Expr>*);
inline jule::Bool _246991d66_pushGenericsFromData(jule::Ptr<_2469857b6_Eval>, jule::Slice<jule::Ptr<_246830320_TypeDecl>>*, jule::Ptr<_246834654_Expr>*);
inline void _2469921c9_evalIdentDeclFromIndexing(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline jule::Bool _246992680_checkGenericFn(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246819d43_Token>*, jule::Any*);
inline void _2469929e3_evalFnGenericFromIndexing(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683b617_IndexingExpr>*);
inline jule::Ptr<_246983ac2_Data> _246992d34_evalIndexing(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683b617_IndexingExpr>);
inline __jule_tuple_x_246983ac2_Data__jule_tuple_x_246983ac2_Data _246993175_evalSlicingExprs(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683bc77_SlicingExpr>*);
inline void _24699342d_slicingArr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*);
inline void _24699384b_slicingStr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline void _246993d24_checkSlicing(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24683bc77_SlicingExpr>*);
inline jule::Ptr<_246983ac2_Data> _246994165_evalSlicing(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683bc77_SlicingExpr>);
inline void _246994583_castPtr(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _2469949a1_castStruct(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _246994dbe_castRef(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _2469952dc_castSlc(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _246995650_castStr(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _246995a6d_castInt(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _246995e8b_castNum(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _2469963a9_castPrim(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline void _24699671c_castConstant(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*);
inline void _246996b3a_castTypeEnum(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline void _246997058_castTypeEnumT(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_246983ac2_Data> _24699750e_evalCastByTypeNData(_2469857b6_Eval*, jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _2469979b5_evalCastT(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246834654_Expr>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_246983ac2_Data> _246997d06_evalCast(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246836eb4_CastExpr>);
inline jule::Ptr<_246983ac2_Data> _246998147_evalNsSelection(_2469857b6_Eval*, jule::Ptr<_24683738d_NsSelectionExpr>);
inline jule::Ptr<_246983ac2_Data> _2469985ed_evalStructLitExplicit(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246853ba1_StructIns>, jule::Slice<jule::Ptr<_246834654_Expr>>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699893e_evalStructLit(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683969d_StructLit>);
inline _2469c653d_typeChecker _246998bc5_typeChecker(_2469857b6_Eval*);
inline jule::Ptr<_246983ac2_Data> _246999016_evalType(_2469857b6_Eval*, jule::Ptr<_246830320_TypeDecl>);
inline void _246999379_callTypeFn(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline void _2469996dc_callBuiltinFn(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline void _246999a50_checkFnOfConcurrentCall(_2469857b6_Eval*, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246819d43_Token>);
inline void _246999e6d_processExceptionalHandler(_2469857b6_Eval*, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline void _24699a2d1_callFn(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _24699a622_evalFnCall(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_24683837d_FnCallExpr>);
inline jule::Ptr<_246983ac2_Data> _24699aa1d_evalEnumStatic(_2469857b6_Eval*, jule::Ptr<_24687b800_Enum>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699ae19_evalTypeEnumStatic(_2469857b6_Eval*, jule::Ptr<_24687d00a_TypeEnum>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699b315_evalStructStatic(_2469857b6_Eval*, jule::Ptr<_246853ba1_StructIns>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699b7bb_evalTraitSubIdent(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699bd2c_evalStructSubIdentField(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246853101_FieldIns>*);
inline jule::Ptr<_246983ac2_Data> _24699c38d_evalStructSubIdent(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246853ba1_StructIns>, jule::Ptr<_246837767_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_246983ac2_Data> _24699c6ce_evalIntTypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699ca20_evalUintTypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699cd61_evalI8TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699d1a2_evalI16TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699d4e3_evalI32TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699d834_evalI64TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699db75_evalU8TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699deb6_evalU16TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699e307_evalU32TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699e648_evalU64TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699e989_evalF32TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _24699ecca_evalF64TypeStatic(_2469857b6_Eval*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _2469a01c6_evalPrimStatic(_2469857b6_Eval*, jule::Str, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_246983ac2_Data> _2469a05c2_evalTypeStatic(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246837767_SubIdentExpr>);
inline jule::Ptr<_246983ac2_Data> _22b8d04d9_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_246890a9a_comptimeTypeInfo>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8d4796_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_246881b35_comptimeStructField>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8d8a0e_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_24688819c_comptimeEnumField>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8dccbb_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_24688ab3e_comptimeParam>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8e2177_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_246884de1_comptimeStatic>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8e63e0_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_2468970ac_comptimeValue>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline jule::Ptr<_246983ac2_Data> _22b8ea658_comptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_24689b006_comptimeFile>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>*);
inline __jule_tuple_x_246983ac2_Data__jule_tuple_bool _2469a0e74_tryComptimeObjSubIdent(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246837767_SubIdentExpr>);
inline jule::Ptr<_246983ac2_Data> _2469a1370_evalObjSubIdent(_2469857b6_Eval*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246837767_SubIdentExpr>);
inline jule::Ptr<_246983ac2_Data> _2469a16b1_evalSubIdent(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246837767_SubIdentExpr>);
inline jule::Ptr<_246983ac2_Data> _2469a1a02_evalTuple(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246835325_TupleExpr>);
inline jule::Ptr<_246983ac2_Data> _2469a1ded_evalMap(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_2469c2dec_Map>, jule::Ptr<_246839b54_BraceLit>);
inline jule::Ptr<_246983ac2_Data> _2469a223e_evalBraceLit(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246839b54_BraceLit>);
inline jule::Ptr<_246983ac2_Data> _2469a2580_evalAnonFunc(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246841ed0_FnDecl>);
inline jule::Ptr<_246983ac2_Data> _2469a28c1_evalBinop(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246837c1d_BinopExpr>);
inline jule::Ptr<_246983ac2_Data> _2469a2c12_evalExprKind(jule::Ptr<_2469857b6_Eval>, jule::Any);
inline jule::Ptr<_246983ac2_Data> _2469a3053_eval1(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246834654_Expr>);
inline jule::Ptr<_246983ac2_Data> _2469a3394_eval(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246834654_Expr>);
inline jule::Ptr<_246983ac2_Data> _2469a36d5_evalExpr1(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246834654_Expr>);
inline jule::Ptr<_246983ac2_Data> _2469a3a26_evalExpr(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246834654_Expr>);
inline _2469a3edd_unaryEval static__2469a442d_new(jule::Ptr<_2469857b6_Eval>);
inline void _2469a462b_minus(_2469a3edd_unaryEval*);
inline void _2469a4829_plus(_2469a3edd_unaryEval*);
inline void _2469a4a27_caret(_2469a3edd_unaryEval*);
inline void _2469a4c25_excl(_2469a3edd_unaryEval*);
inline void _2469a4e23_star(_2469a3edd_unaryEval*);
inline void _2469a5121_amper(_2469a3edd_unaryEval*);
inline void _2469a531e_typeDecl(_2469a3edd_unaryEval*);
inline void _2469a551c_evalData(_2469a3edd_unaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a585d_eval(_2469a3edd_unaryEval*, jule::Ptr<_246836711_UnaryExpr>);
inline _2469a5e79_binaryEval static__2469a6562_newPlain(jule::Ptr<_2469857b6_Eval>);
inline _2469a5e79_binaryEval static__2469a68a3_new(jule::Ptr<_2469857b6_Eval>, jule::Ptr<_246819d43_Token>);
inline jule::Bool _2469a6b39_checkTypeCompatibility(_2469a5e79_binaryEval*);
inline jule::Bool _2469a6dc0_checkStructCommonOperatorCompatibility(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a7156_evalComptimeTypeInfo(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a73dc_evalNil(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a7673_evalEnum(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a7909_evalTypeEnum(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a7b90_evalSptr(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a7e26_evalPtr(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a81ac_evalArr(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a8443_evalSlc(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a86c9_evalStruct(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a8960_evalTrait(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a8be6_evalAny(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a8e7c_evalBool(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469a9213_evalStr(_2469a5e79_binaryEval*);
inline void _2469a9411_setTypeToGreater(_2469a5e79_binaryEval*);
inline void _2469a96b9_checkModData(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*);
inline void _2469a98b7_mod(_2469a5e79_binaryEval*);
inline jule::Bool _2469a9cb3_numbersAreCompatibile(_2469a5e79_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_246983ac2_Data> _2469aa049_evalFloat(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469aa2d0_evalInt(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469aa566_evalPrim(_2469a5e79_binaryEval*);
inline void _2469aa764_checkSpecialCases(_2469a5e79_binaryEval*);
inline jule::Ptr<_246983ac2_Data> _2469aa9ea_evalOp(_2469a5e79_binaryEval*);
inline void _2469aaca3_evalConst(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*);
inline void _2469ab05b_checkData(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*);
inline void _2469ab259_checkDatas(_2469a5e79_binaryEval*);
inline void _2469ab512_setModel(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*);
inline void _2469ab7ba_postEval(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _2469abbb6_solveExplicit(_2469a5e79_binaryEval*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _2469ac007_eval(_2469a5e79_binaryEval*, jule::Ptr<_246837c1d_BinopExpr>*);
inline jule::Str _2469b47a1_Str(_2469b43d8_TypeKind*);
inline jule::Bool _2469b4ae2_Equal(jule::Ptr<_2469b43d8_TypeKind>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Bool _2469b5241_Binded(_2469b43d8_TypeKind*);
inline jule::Bool _2469b54c7_IsNil(_2469b43d8_TypeKind*);
inline jule::Bool _2469b575d_Void(_2469b43d8_TypeKind*);
inline jule::Bool _2469b59e4_Comparable(_2469b43d8_TypeKind*);
inline jule::Bool _2469b5c7a_Mutable(_2469b43d8_TypeKind*);
inline jule::Bool _2469b6011_Ordered(_2469b43d8_TypeKind*);
inline jule::Bool _2469b6297_NilCompatible(_2469b43d8_TypeKind*);
inline jule::Bool _2469b652d_PerformsRC(_2469b43d8_TypeKind*);
inline jule::Bool _2469b67b4_Variadicable(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469bc259_Prim> _2469b6a4a_Prim(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c0c85_Sptr> _2469b6cd1_Sptr(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c454c_Ptr> _2469b7067_Ptr(_2469b43d8_TypeKind*);
inline jule::Ptr<_24687b800_Enum> _2469b72ed_Enum(_2469b43d8_TypeKind*);
inline jule::Ptr<_24687d00a_TypeEnum> _2469b7584_TypeEnum(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c3a79_Arr> _2469b781a_Arr(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c1758_Slc> _2469b7aa1_Slc(_2469b43d8_TypeKind*);
inline jule::Ptr<_246868c1b_FnIns> _2469b7d37_Fn(_2469b43d8_TypeKind*);
inline jule::Ptr<_246853ba1_StructIns> _2469b80bd_Struct(_2469b43d8_TypeKind*);
inline jule::Ptr<_2468790e4_Trait> _2469b8354_Trait(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c2dec_Map> _2469b85da_Map(_2469b43d8_TypeKind*);
inline jule::Ptr<_2469c234c_Tuple> _2469b8871_Tup(_2469b43d8_TypeKind*);
inline jule::Bool _2469b8b07_comptime(_2469b43d8_TypeKind*);
inline jule::Ptr<_2468837e6_comptimeStructFields> _2469b8d8d_comptimeStructFields(_2469b43d8_TypeKind*);
inline jule::Ptr<_246881b35_comptimeStructField> _2469b9124_comptimeStructField(_2469b43d8_TypeKind*);
inline jule::Ptr<_246889544_comptimeEnumFields> _2469b93aa_comptimeEnumFields(_2469b43d8_TypeKind*);
inline jule::Ptr<_24688819c_comptimeEnumField> _2469b9641_comptimeEnumField(_2469b43d8_TypeKind*);
inline jule::Ptr<_24688cda5_comptimeParams> _2469b98c7_comptimeParams(_2469b43d8_TypeKind*);
inline jule::Ptr<_24688ab3e_comptimeParam> _2469b9b5d_comptimeParam(_2469b43d8_TypeKind*);
inline jule::Ptr<_246881162_comptimeRange> _2469b9de4_comptimeRange(_2469b43d8_TypeKind*);
inline jule::Ptr<_24687e946_comptimeMatch> _2469ba17a_comptimeMatch(_2469b43d8_TypeKind*);
inline jule::Ptr<_24688e4a0_comptimeTypeInfos> _2469ba411_comptimeTypeInfos(_2469b43d8_TypeKind*);
inline jule::Ptr<_246890a9a_comptimeTypeInfo> _2469ba697_comptimeTypeInfo(_2469b43d8_TypeKind*);
inline jule::Ptr<_246886aa2_comptimeStatics> _2469ba92d_comptimeStatics(_2469b43d8_TypeKind*);
inline jule::Ptr<_246884de1_comptimeStatic> _2469babb4_comptimeStatic(_2469b43d8_TypeKind*);
inline jule::Ptr<_2468970ac_comptimeValue> _2469bae4a_comptimeValue(_2469b43d8_TypeKind*);
inline jule::Ptr<_24689b006_comptimeFile> _2469bb1d1_comptimeFile(_2469b43d8_TypeKind*);
inline jule::Ptr<_24689990b_comptimeFiles> _2469bb467_comptimeFiles(_2469b43d8_TypeKind*);
inline jule::Bool _2469bbbc6_checked(_2469bb852_TypeSymbol*);
inline jule::Str _2469bc59a_Str(_2469bc259_Prim*);
inline jule::Bool _2469bc8db_Equal(jule::Ptr<_2469bc259_Prim>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Bool _2469bcd81_IsConstraint(_2469bc259_Prim*);
inline jule::Bool _2469bd117_IsI8(_2469bc259_Prim*);
inline jule::Bool _2469bd39d_IsI16(_2469bc259_Prim*);
inline jule::Bool _2469bd634_IsI32(_2469bc259_Prim*);
inline jule::Bool _2469bd8ba_IsI64(_2469bc259_Prim*);
inline jule::Bool _2469bdb51_IsU8(_2469bc259_Prim*);
inline jule::Bool _2469bddd7_IsU16(_2469bc259_Prim*);
inline jule::Bool _2469be16d_IsU32(_2469bc259_Prim*);
inline jule::Bool _2469be404_IsU64(_2469bc259_Prim*);
inline jule::Bool _2469be68a_IsF32(_2469bc259_Prim*);
inline jule::Bool _2469be921_IsF64(_2469bc259_Prim*);
inline jule::Bool _2469beba7_IsInt(_2469bc259_Prim*);
inline jule::Bool _2469bee3d_IsUint(_2469bc259_Prim*);
inline jule::Bool _2469c01c4_IsUintptr(_2469bc259_Prim*);
inline jule::Bool _2469c045a_IsBool(_2469bc259_Prim*);
inline jule::Bool _2469c06e1_IsStr(_2469bc259_Prim*);
inline jule::Bool _2469c0977_IsAny(_2469bc259_Prim*);
inline jule::Str _2469c1109_Str(_2469c0c85_Sptr*);
inline jule::Bool _2469c144a_Equal(jule::Ptr<_2469c0c85_Sptr>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2469c1bdc_Str(_2469c1758_Slc*);
inline jule::Bool _2469c202d_Equal(jule::Ptr<_2469c1758_Slc>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2469c26c1_Str(_2469c234c_Tuple*);
inline jule::Bool _2469c2a12_Equal(jule::Ptr<_2469c234c_Tuple>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2469c3271_Str(_2469c2dec_Map*);
inline jule::Bool _2469c35b2_Equal(jule::Ptr<_2469c2dec_Map>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2469c3ded_Str(_2469c3a79_Arr*);
inline jule::Bool _2469c423e_Equal(jule::Ptr<_2469c3a79_Arr>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Str _2469c48c1_Str(_2469c454c_Ptr*);
inline jule::Bool _2469c4c12_Equal(jule::Ptr<_2469c454c_Ptr>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Bool _2469c5086_IsUnsafe(_2469c454c_Ptr*);
inline void _2469c6c7a_pushErr(_2469c653d_typeChecker*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _2469c6e78_allowBuiltin(_2469c653d_typeChecker*);
inline void _2469c7176_disallowBuiltin(_2469c653d_typeChecker*);
inline void _22bac8825_pushReference(_2469c653d_typeChecker*, jule::Ptr<_246853ba1_StructIns>*);
inline void _22bacb064_pushReference(_2469c653d_typeChecker*, jule::Ptr<_2468790e4_Trait>*);
inline void _2469c76d7_pushReferenceByKind(_2469c653d_typeChecker*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _2469c7b05_pushCycleError(_2469c653d_typeChecker*, jule::Any, jule::Any, _2433b0c50_StrBuilder*);
inline jule::Bool _2469c8001_checkCrossCycle(_2469c653d_typeChecker*, jule::Any, _2433b0c50_StrBuilder*);
inline jule::Bool _2469c83ec_checkIllegalCycles(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_2469b3e32_Kind> _2469c87e8_fromTypeAlias(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_2469b35e6_TypeAlias>*);
inline jule::Ptr<_24687b800_Enum> _2469c8be4_fromEnum(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_24687b800_Enum>*);
inline jule::Ptr<_24687d00a_TypeEnum> _2469c90e0_fromTypeEnum(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_24687d00a_TypeEnum>*);
inline jule::Ptr<_2468790e4_Trait> _2469c94db_fromTrait(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _2469c98d7_checkStructIns(_2469c653d_typeChecker*, jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246819d43_Token>*);
inline void _2469c9b90_appendUsedStructReference(_2469c653d_typeChecker*, jule::Ptr<_246850e23_Struct>*);
inline jule::Ptr<_246853ba1_StructIns> _2469ca08b_buildStructInstance(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_246850e23_Struct>*);
inline jule::Ptr<_246853ba1_StructIns> _2469ca487_fromStruct(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*, jule::Ptr<_246850e23_Struct>*);
inline jule::Trait<_2469b3e32_Kind> _2469ca7c8_getDef(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>*);
inline jule::Trait<_2469b3e32_Kind> _2469cab19_buildIdent(_2469c653d_typeChecker*, jule::Ptr<_24683092a_IdentTypeDecl>);
inline jule::Trait<_2469b3e32_Kind> _2469cae5a_buildSubIdent(_2469c653d_typeChecker*, jule::Ptr<_246830c27_SubIdentTypeDecl>);
inline jule::Ptr<_2469c0c85_Sptr> _2469cb29b_buildSptrFromType(_2469c653d_typeChecker*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_2469c0c85_Sptr> _2469cb5dc_buildSptr(_2469c653d_typeChecker*, jule::Ptr<_2468313ba_SptrTypeDecl>);
inline jule::Ptr<_2469c454c_Ptr> _2469cb92d_buildPtrFromType(_2469c653d_typeChecker*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_2469c454c_Ptr> _2469cbc6e_buildPtr(_2469c653d_typeChecker*, jule::Ptr<_246831d49_PtrTypeDecl>);
inline jule::Ptr<_2469c1758_Slc> _2469cc0b0_buildSlc(_2469c653d_typeChecker*, jule::Ptr<_246831750_SlcTypeDecl>);
inline jule::Ptr<_2469c3a79_Arr> _2469cc401_buildArr(_2469c653d_typeChecker*, jule::Ptr<_2468325db_ArrTypeDecl>);
inline jule::Ptr<_2469c2dec_Map> _2469cc742_buildMap(_2469c653d_typeChecker*, jule::Ptr<_246832d39_MapTypeDecl>);
inline jule::Ptr<_2469c234c_Tuple> _2469cca83_buildTuple(_2469c653d_typeChecker*, jule::Ptr<_246831a4c_TupleTypeDecl>);
inline jule::Bool _2469ccdc4_checkFuncTypes(_2469c653d_typeChecker*, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Ptr<_246868c1b_FnIns> _2469cd215_buildFunc(_2469c653d_typeChecker*, jule::Ptr<_246841ed0_FnDecl>);
inline jule::Trait<_2469b3e32_Kind> _2469cd556_buildByNamespace(_2469c653d_typeChecker*, jule::Ptr<_2468310bd_NamespaceTypeDecl>);
inline jule::Ptr<_2469b43d8_TypeKind> _2469cd897_build(_2469c653d_typeChecker*, jule::Any*);
inline jule::Ptr<_2469b43d8_TypeKind> _2469cdbd8_checkDecl(_2469c653d_typeChecker*, jule::Ptr<_246830320_TypeDecl>*);
inline jule::Bool static__2469ce634_prim(jule::Str*, jule::Ptr<_2469bc259_Prim>);
inline jule::Bool static__2469ce9a8_exist(jule::Str*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _227bce237_stop(_227bcdac7_scopeParser*);
inline jule::Bool _227bce4bd_stopped(_227bcdac7_scopeParser*);
inline jule::Bool _227bce754_finished(_227bcdac7_scopeParser*);
inline jule::Bool _227bce9da_isLastSt(_227bcdac7_scopeParser*);
inline void _227bced4d_pushErr(_227bcdac7_scopeParser*, jule::Ptr<_246819d43_Token>, jule::Str);
inline void _227bd01b1_pushSuggestion(_227bcdac7_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _227bd0469_insertAsNext(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_227bcd236_stmt> _227bd0700_next(_227bcdac7_scopeParser*);
inline jule::Ptr<_246840341_ScopeTree> _227bd0aeb_buildScope(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_2468430ad_VarDecl> _227bd0e3c_buildVarSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246843487_RetSt> _227bd127d_buildRetSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246843b2a_Iter> _227bd15be_buildWhileNextIter(_227bcdac7_scopeParser*, jule::Ptr<_227bcd236_stmt>*);
inline jule::Ptr<_246844455_WhileKind> _227bd1910_buildWhileIterKind(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227bd1c51_getRangeKindKeysTokens(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_2468430ad_VarDecl> _227bd2092_buildRangeKindKey(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _227bd23d3_buildRangeKindKeys(_227bcdac7_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>*);
inline void _227bd2746_setupRangeKindKeysPlain(_227bcdac7_scopeParser*, jule::Ptr<_246844d5c_RangeKind>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227bd2aa9_setupRangeKindKeysExplicit(_227bcdac7_scopeParser*, jule::Ptr<_246844d5c_RangeKind>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227bd2e1c_setupRangeKindKeys(_227bcdac7_scopeParser*, jule::Ptr<_246844d5c_RangeKind>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246844d5c_RangeKind> _227bd33c3_buildRangeIterKind(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Any _227bd37be_buildCommonIterKind(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_246843b2a_Iter> _227bd3b10_buildCommonIter(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246843b2a_Iter> _227bd3e51_buildIterSt(_227bcdac7_scopeParser*, jule::Ptr<_227bcd236_stmt>*);
inline jule::Ptr<_246845236_BreakSt> _227bd4292_buildBreakSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246845610_ContSt> _227bd45d3_buildContSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246845ab6_If> _227bd4924_buildIf(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246845e90_Else> _227bd4c65_buildElse(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246846446_Conditional> _227bd50a6_buildIfElseChain(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246834654_Expr> _227bd53e7_buildCoCallSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683cccd_GotoSt> _227bd5738_buildGotoSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24683d0ca_FallSt> _227bd5a79_buildFallSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246846b83_TypeAliasDecl> _227bd5dba_buildTypeAliasSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227bd6393_pushCaseExpr(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Ptr<_246819d43_Token>, jule::Bool, jule::Slice<jule::Ptr<_246834654_Expr>>*);
inline __jule_tuple_sx_246834654_Expr__jule_tuple_bool _227bd6849_buildCaseExprs(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>*, jule::Bool);
inline jule::Ptr<_246840341_ScopeTree> _227bd6b8a_buildCaseScope(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline __jule_tuple_x_246847139_Case__jule_tuple_bool _227bd7086_buildCase(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Bool);
inline __jule_tuple_sx_246847139_Case__jule_tuple_x_246845e90_Else _227bd7482_buildCases(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Bool);
inline jule::Ptr<_246847876_MatchCase> _227bd77c3_buildMatchCase(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246840341_ScopeTree> _227bd7b14_buildScopeSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683c904_LabelSt> _227bd7e55_buildLabelSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline __jule_tuple__24683e97d_StmtData__jule_tuple_bool _227bd8296_buildIdSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_227be863b_assignInfo> _227bd85d7_buildAssignInfo(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24683d73a_AssignLeft> _227bd8928_buildAssignL(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> _227bd8c69_buildAssignLs(_227bcdac7_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>*);
inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd90aa_buildPlainAssign(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Bool _227bd94a6_buildDeclAssign1(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_24683dcbd_AssignSt>*);
inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd97e7_buildDeclAssign(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd9b38_buildAssignSt(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246835028_UseExpr> _227bd9e79_buildUseExpr(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227bda2ba_buildSt(_227bcdac7_scopeParser*, jule::Ptr<_227bcd236_stmt>*);
inline void _227bda62d_build(_227bcdac7_scopeParser*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246840341_ScopeTree>*);
inline void _227bdb981_pushErr(_227bdb19a_exprBuilder*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _227bdbce4_pushSuggestion(_227bdb19a_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_246835325_TupleExpr> _227bdc135_buildTuple(_227bdb19a_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>*);
inline jule::Ptr<_2468356ee_LitExpr> _227bdc476_buildLit(_227bdb19a_exprBuilder*, jule::Ptr<_246819d43_Token>);
inline jule::Any _227bdcb08_buildSingle(_227bdb19a_exprBuilder*, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_24683607e_IdentExpr> _227bdce49_buildBindIdent(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246836711_UnaryExpr> _227bdd28a_buildUnary(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246837767_SubIdentExpr> _227bdd5cb_buildObjSubIdent(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683738d_NsSelectionExpr> _227bdd91c_buildNsSubIdent(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246830320_TypeDecl> _227bddc5d_buildType(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227bde09e_buildSubIdent(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246836ada_VariadicExpr> _227bde3e0_buildVariadic(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246834951_RangeExpr> _227bde731_buildBetweenParentheses(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246836eb4_CastExpr> _227bdea72_tryBuildCast(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227bdee90_pushArg(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246834654_Expr>>*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Ptr<_246819d43_Token>);
inline jule::Slice<jule::Ptr<_246834654_Expr>> _227be02d1_buildArgs(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683837d_FnCallExpr> _227be0ac8_buildFnCall(_227bdb19a_exprBuilder*, jule::Ptr<_246819d43_Token>*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be0e19_buildParenthesesRange(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246835ac8_UnsafeExpr> _227be125a_buildUnsafeExpr(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246841ed0_FnDecl> _227be159b_buildAnonFn(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be18dc_buildUnsafe(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227be1d0a_pushRangeLitPart(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Ptr<_246819d43_Token>, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227be214b_getBraceRangeLitExprParts(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246838d73_FieldExprPair> _227be248c_buildFieldExprPair(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246834654_Expr> _227be27cd_buildStructLitExpr(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_246834654_Expr>> _227be2b1e_buildStructLitExprs(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24683969d_StructLit> _227be2e60_buildTypedStructLiteral(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246834654_Expr> _227be32a1_buildBraceLitPart(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246839b54_BraceLit> _227be35e2_buildBraceLit(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be3933_buildBraceRange(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227be3c74_getEnumerableParts(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683ab77_SliceExpr> _227be40b5_buildSlice(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683b617_IndexingExpr> _227be456b_buildIndexing(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Ptr<_246819d43_Token>);
inline jule::Ptr<_24683bc77_SlicingExpr> _227be4b87_buildSlicing(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246819d43_Token>);
inline jule::Any _227be4ec8_buildBracketRange(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Any _227be5319_buildExclRight(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be565a_buildData(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be5a56_buildBinop(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64);
inline jule::Any _227be5d97_build(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227be61d8_buildKind(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246834654_Expr> _227be6529_buildFromTokens(_227bdb19a_exprBuilder*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227bebd37_stop(_227beba3a_parser*);
inline jule::Bool _227bec0bd_stopped(_227beba3a_parser*);
inline void _227bec4db_pushErr(_227beba3a_parser*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _227bec84e_pushSuggestion(_227beba3a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_246834654_Expr> _227becb90_buildExpr(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24682e73c_Directive> _227beced1_buildDirective(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227bed289_pushDirective(_227beba3a_parser*, jule::Ptr<_24682e73c_Directive>);
inline jule::Ptr<_246840341_ScopeTree> _227bed685_buildScope(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>);
inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227bedb3b__buildType(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227bee0e2_buildType(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_246846b83_TypeAliasDecl> _227bee433_buildTypeAliasDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227bee796_buildVarTypeAndExpr(jule::Ptr<_227beba3a_parser>, jule::Ptr<_2468430ad_VarDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227beeb09_buildVarCommon(jule::Ptr<_227beba3a_parser>, jule::Ptr<_2468430ad_VarDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c00027_buildVarBegin(_227beba3a_parser*, jule::Ptr<_2468430ad_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_2468430ad_VarDecl> _227c00368_buildVar(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24683c52a_GenericDecl> _227c006a9_buildGeneric(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _227c00aa5_buildGenerics(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Ptr<_246819d43_Token>*);
inline jule::Ptr<_246840a7d_ParamDecl> _227c00de6_buildSelfParam(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c01314_paramTypeBegin(_227beba3a_parser*, jule::Ptr<_246840a7d_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c01677_buildParamType(jule::Ptr<_227beba3a_parser>, jule::Ptr<_246840a7d_ParamDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c019da_buildParamBody(jule::Ptr<_227beba3a_parser>, jule::Ptr<_246840a7d_ParamDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246840a7d_ParamDecl> _227c01d2b_buildParam(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c020d4_checkParams(_227beba3a_parser*, jule::Slice<jule::Ptr<_246840a7d_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> _227c024d0_buildParams(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Bool);
inline __jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool _227c028cb_buildMultiRetType(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*);
inline __jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool _227c02cc7_buildRetType(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*);
inline jule::Ptr<_246841ed0_FnDecl> _227c0327d_buildFnPrototype(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_246841ed0_FnDecl> _227c03734_buildFn(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_246819d43_Token>> _227c03a75_getUseDeclSelectors(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c03dd8_buildBindUseDecl(_227beba3a_parser*, jule::Ptr<_246848190_UseDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Str _227c04229_useDeclTokstoa(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c0458c_buildStdUseDecl(_227beba3a_parser*, jule::Ptr<_246848190_UseDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c04900_buildIdentUseDecl(_227beba3a_parser*, jule::Ptr<_246848190_UseDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline void _227c04c63_parseUseDecl(_227beba3a_parser*, jule::Ptr<_246848190_UseDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246848190_UseDecl> _227c0515e_buildUseDecl(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>, jule::Bool);
inline jule::Ptr<_246830320_TypeDecl> _227c0555a_buildTypeEnumItemKind(jule::Ptr<_227beba3a_parser>, jule::I64*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>> _227c0589b_buildTypeEnumItems(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24684a192_TypeEnumDecl> _227c05bdc_buildTypeEnumDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246834654_Expr> _227c060d8_buildEnumItemExpr(jule::Ptr<_227beba3a_parser>, jule::I64*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> _227c06429_buildEnumItems(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246849207_EnumDecl> _227c0676a_buildEnumDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Any _227c06aab_buildNodeEnumDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24684a45b_FieldDecl> _227c06dec_buildField(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Slice<jule::Ptr<_24684a45b_FieldDecl>> _227c0723d_buildStructDeclFields(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24684ad52_StructDecl> _227c0757e_buildStructDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c07837_checkMethodReceiver(_227beba3a_parser*, jule::Ptr<_246841ed0_FnDecl>*);
inline void _227c07b9a_buildTraitBody(jule::Ptr<_227beba3a_parser>, jule::Ptr<_24684b58e_TraitDecl>*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24684b58e_TraitDecl> _227c07edb_buildTraitDecl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246841ed0_FnDecl> _227c0832c_buildBindFn(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_2468430ad_VarDecl> _227c0866d_buildBindVar(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_24684ad52_StructDecl> _227c089ae_buildBindStruct(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246846b83_TypeAliasDecl> _227c08d00_buildBindTypeAlias(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Ptr<_246848190_UseDecl> _227c09141_buildBindUse(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Any _227c09482_buildBind(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_246841ed0_FnDecl> _227c097c3_getMethod(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c09b36_parseImplBody(jule::Ptr<_227beba3a_parser>, jule::Ptr<_24684bbee_Impl>*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24684bbee_Impl> _227c09e77_buildImpl(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Any _227c0a2b8_buildNodeData(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c0a571_applyFnMeta(_227beba3a_parser*, jule::Ptr<_246841ed0_FnDecl>*);
inline void _227c0a829_applyMeta(_227beba3a_parser*, _24682e31e_Node*);
inline void _227c0aad2_pushUseDecl(jule::Ptr<_227beba3a_parser>, jule::Ptr<_246848190_UseDecl>*);
inline jule::Bool _227c0ae23_pushMetaNodes(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline _24682e31e_Node _227c0b264_parseNode(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c0b51c_appendNode(jule::Ptr<_227beba3a_parser>, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c0b9e5_removeRange(_227beba3a_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::I64>*);
inline void _227c0be13_pushWrongOrderCloseErr(_227beba3a_parser*, jule::Ptr<_246819d43_Token>*, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::I64>*);
inline void _227c0c3db_pushRangeClose(_227beba3a_parser*, jule::Ptr<_246819d43_Token>, jule::U64, jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::Slice<jule::I64>*);
inline void _227c0c694_checkRanges(_227beba3a_parser*, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline void _227c0c94c_parse(jule::Ptr<_227beba3a_parser>, jule::Ptr<_24682060c_File>*);
inline void _227c0e2ab_pushErr(_227c0dc17_typeBuilder*, jule::Ptr<_246819d43_Token>, jule::Str);
inline void _227c0e61e_pushSuggestion(_227c0dc17_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_246830320_TypeDecl> _227c0e8a5_buildNamespace(_227c0dc17_typeBuilder*);
inline jule::Slice<jule::Ptr<_246830320_TypeDecl>> _227c0eb3b_buildGenerics(_227c0dc17_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227c0edc2_identGenerics(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c10158_buildIdent(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c103de_buildCppLink(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c10675_buildFn(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c1090b_buildPtr(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c10b92_buildSptr(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c10e28_buildSlc(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c111ae_buildArr(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c11445_buildMap(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c116cb_buildEnumerable(_227c0dc17_typeBuilder*);
inline jule::Ptr<_246830320_TypeDecl> _227c11962_step(_227c0dc17_typeBuilder*);
inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227c11be8_build(_227c0dc17_typeBuilder*);
inline void _246c47baa_pushErr(_246c4765a_directiveEval*, jule::Ptr<_246819d43_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _246c480a6_splitOperans(_246c4765a_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Bool _246c483e7_evalDirectiveIdent(_246c4765a_directiveEval*, jule::Str);
inline jule::Bool _246c48738_evalDirectivePart(_246c4765a_directiveEval*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Bool _246c489be_eval(_246c4765a_directiveEval*);
inline jule::Ptr<_227c17baa_JuleImporter> static__227c180a6_New(_246c46181_CompileInfo);
inline jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _227c1833c_AllPackages(_227c17baa_JuleImporter*);
inline void _227c1877c_SetModPath(_227c17baa_JuleImporter*, jule::Str);
inline jule::Str _227c18a13_GetModPath(_227c17baa_JuleImporter*);
inline jule::Str _227c18d54_ModById(_227c17baa_JuleImporter*, jule::I64);
inline jule::Ptr<_2468c8bd2_ImportInfo> _227c19195_GetImport(_227c17baa_JuleImporter*, jule::Str);
inline __jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log _227c19591_ImportPackage(_227c17baa_JuleImporter*, jule::Str, jule::Bool);
inline void _227c19849_Imported(_227c17baa_JuleImporter*, jule::Ptr<_2468c8bd2_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_24345e617_Log _227c19c78_isPassBuildDirectives(_227c17baa_JuleImporter*, jule::Ptr<_24682d472_Ast>*);
inline jule::Bool _22c1a5e13_isCommonOrdered(jule::Slice<jule::Ptr<_246850e23_Struct>>, jule::Ptr<_246850e23_Struct>);
inline jule::Bool _22c1aa92e_isCommonOrdered(jule::Slice<jule::Ptr<_246922555_Var>>, jule::Ptr<_246922555_Var>);
inline void _22c1a2a25_orderCommon(jule::Slice<jule::Ptr<_246850e23_Struct>>*);
inline void _22c1a67a4_orderCommon(jule::Slice<jule::Ptr<_246922555_Var>>*);
inline void static__227c1da29_orderStructures(jule::Slice<jule::Ptr<_246850e23_Struct>>*);
inline void static__227c1dc5a_orderVars(jule::Slice<jule::Ptr<_246922555_Var>>*);
inline void _227d7ec34_optimizeChild(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a7760_Scope>*);
inline void _227d7eedc_optimizeBodyChildExceptional(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a7760_Scope>*);
inline void _227d80295_optimizeBodyChild(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a7760_Scope>*);
inline void _227d8054d_optimizeExprModel(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Any*);
inline void _227d8074b_eliminateFollowed(_227d7e77d_scopeDeadCode*);
inline void _227d80a04_pushGoto(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468aa4cc_GotoSt>);
inline void _227d80cac_pushLabel(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468aa103_Label>);
inline void _227d81065_optimizeRangeIter(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a9597_RangeIter>);
inline void _227d8131d_optimizeWhileIter(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a8b4b_WhileIter>);
inline void _227d815c6_optimizeInfIter(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a8695_InfIter>);
inline void _227d8187e_optimizeConditional(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468a8398_Conditional>);
inline void _227d81b37_optimizeMatch(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468ab896_Match>);
inline void _227d81de0_optimizeAssign(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468aad5c_Assign>);
inline void _227d82198_optimizeMultiAssign(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Ptr<_2468ab236_MultiAssign>);
inline void _227d82451_optimizeStmt(jule::Ptr<_227d7e77d_scopeDeadCode>, jule::Any);
inline void _227d8264e_optimizeStmts(jule::Ptr<_227d7e77d_scopeDeadCode>);
inline _227d839d5_exprDeadCode static__227d84123_new(jule::Ptr<_227d7e77d_scopeDeadCode>*);
inline void _227d843cb_binary(_227d839d5_exprDeadCode*, jule::Ptr<_2468580a1_BinopExprModel>);
inline void _227d84684_unary(_227d839d5_exprDeadCode*, jule::Ptr<_24685847a_UnaryExprModel>);
inline void _227d8493c_structureLit(_227d839d5_exprDeadCode*, jule::Ptr<_246858d4e_StructLitExprModel>);
inline void _227d84be5_allocStructure(_227d839d5_exprDeadCode*, jule::Ptr<_24685914b_AllocStructLitExprModel>);
inline void _227d84e9d_casting(_227d839d5_exprDeadCode*, jule::Ptr<_2468596ce_CastingExprModel>);
inline void _227d85256_args(_227d839d5_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _227d8550e_funcCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685a081_FnCallExprModel>);
inline void _227d857b7_slice(_227d839d5_exprDeadCode*, jule::Ptr<_24685a45a_SliceExprModel>);
inline void _227d85a70_array(_227d839d5_exprDeadCode*, jule::Ptr<_24685d4a2_ArrayExprModel>);
inline void _227d85d28_indexing(_227d839d5_exprDeadCode*, jule::Ptr<_24685a911_IndexingExprModel>);
inline void _227d860d1_anonFunc(_227d839d5_exprDeadCode*, jule::Ptr<_24685acda_AnonFnExprModel>);
inline void _227d86389_mapExpr(_227d839d5_exprDeadCode*, jule::Ptr<_24685b66a_MapExprModel>);
inline void _227d86642_slicing(_227d839d5_exprDeadCode*, jule::Ptr<_24685bbed_SlicingExprModel>);
inline void _227d868ea_traitSub(_227d839d5_exprDeadCode*, jule::Ptr<_24685c281_TraitSubIdentExprModel>);
inline void _227d86ba3_structureSub(_227d839d5_exprDeadCode*, jule::Ptr<_24685cb22_StructSubIdentExprModel>);
inline void _227d86e5b_tuple(_227d839d5_exprDeadCode*, jule::Ptr<_24685d79e_TupleExprModel>);
inline void _227d87214_newCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685e42b_BuiltinNewCallExprModel>);
inline void _227d874bc_outCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685db78_BuiltinOutCallExprModel>);
inline void _227d87775_outlnCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel>);
inline void _227d87a2d_panicCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685e805_BuiltinPanicCallExprModel>);
inline void _227d87cd6_assertCall(_227d839d5_exprDeadCode*, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel>);
inline void _227d8808e_errorCall(_227d839d5_exprDeadCode*, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel>);
inline void _227d88347_makeCall(_227d839d5_exprDeadCode*, jule::Ptr<_246860262_BuiltinMakeCallExprModel>);
inline void _227d88600_appendCall(_227d839d5_exprDeadCode*, jule::Ptr<_24686063b_BuiltinAppendCallExprModel>);
inline void _227d888a8_lenCall(_227d839d5_exprDeadCode*, jule::Ptr<_246860938_BuiltinLenCallExprModel>);
inline void _227d88b61_capCall(_227d839d5_exprDeadCode*, jule::Ptr<_246860c35_BuiltinCapCallExprModel>);
inline void _227d88e19_deleteCall(_227d839d5_exprDeadCode*, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel>);
inline void _227d891c2_sizeof(_227d839d5_exprDeadCode*, jule::Ptr<_24685c46d_SizeofExprModel>);
inline void _227d8947a_alignof(_227d839d5_exprDeadCode*, jule::Ptr<_2468620dd_AlignofExprModel>);
inline void _227d89733_integratedToStr(_227d839d5_exprDeadCode*, jule::Ptr<_2468626d7_IntegratedToStrExprModel>);
inline void _227d899db_free(_227d839d5_exprDeadCode*, jule::Ptr<_246862dad_FreeExprModel>);
inline void _227d89c94_backendEmit(_227d839d5_exprDeadCode*, jule::Ptr<_246862ab1_BackendEmitExprModel>);
inline void _227d8a04c_optimize(_227d839d5_exprDeadCode*, jule::Any*);
inline jule::Ptr<_246b3a493_scopeOptimizer> static__246b3a9d2_new(jule::Ptr<_2468a7760_Scope>);
inline void _246b3ac8a_setCurrentStmt(_246b3a493_scopeOptimizer*, jule::Any);
inline void _246b3ae88_removeCurrent(_246b3a493_scopeOptimizer*);
inline void _246b3b241_optimizeData(_246b3a493_scopeOptimizer*, jule::Ptr<_246983ac2_Data>);
inline void _246b3b4e9_optimizeVar(_246b3a493_scopeOptimizer*, jule::Ptr<_246922555_Var>);
inline void _246b3b7a2_optimizeConditional(_246b3a493_scopeOptimizer*, jule::Ptr<_2468a8398_Conditional>);
inline void _246b3bbc0_buildDefaultConstantTrueCase(_246b3a493_scopeOptimizer*, jule::Ptr<_2468ac4ce_Case>, jule::I64*, jule::Ptr<_2468ab896_Match>*);
inline void _246b3be78_optimizeMatch(_246b3a493_scopeOptimizer*, jule::Ptr<_2468ab896_Match>);
inline void _246b3c231_optimizeRangeIter(_246b3a493_scopeOptimizer*, jule::Ptr<_2468a9597_RangeIter>);
inline void _246b3c4d9_optimizeWhileIter(_246b3a493_scopeOptimizer*, jule::Ptr<_2468a8b4b_WhileIter>);
inline jule::Bool _246b3c82a_substr(_246b3a493_scopeOptimizer*, jule::Ptr<_2468aad5c_Assign>);
inline jule::Bool _246b3cb6b_strAssign(_246b3a493_scopeOptimizer*, jule::Ptr<_2468aad5c_Assign>);
inline jule::Bool _246b3ceac_sliceAssign(_246b3a493_scopeOptimizer*, jule::Ptr<_2468aad5c_Assign>);
inline void _246b3d265_optimizeAssign(_246b3a493_scopeOptimizer*, jule::Ptr<_2468aad5c_Assign>);
inline jule::Bool _246b3d5a6_tryOptimizeSwap(_246b3a493_scopeOptimizer*, jule::Ptr<_2468ab236_MultiAssign>*);
inline void _246b3d85e_optimizeMultiAssign(_246b3a493_scopeOptimizer*, jule::Ptr<_2468ab236_MultiAssign>);
inline void _246b3db17_optimizeRet(_246b3a493_scopeOptimizer*, jule::Ptr<_2468ace5d_RetSt>);
inline void _246b3ddc0_optimizeStmt(_246b3a493_scopeOptimizer*, jule::Any);
inline void _246b3e178_optimizeChild(_246b3a493_scopeOptimizer*, jule::Ptr<_2468a7760_Scope>);
inline void _246b3e376_optimize(_246b3a493_scopeOptimizer*);
inline void static__246b41bc5_optimize(jule::Any*);
inline jule::Bool _246b42016_strCond(_246b41631_exprOptimizer*, jule::Ptr<_2468580a1_BinopExprModel>);
inline void _246b422be_binary(_246b41631_exprOptimizer*, jule::Ptr<_2468580a1_BinopExprModel>);
inline void _246b42577_unary(_246b41631_exprOptimizer*, jule::Ptr<_24685847a_UnaryExprModel>);
inline void _246b42830_structureLit(_246b41631_exprOptimizer*, jule::Ptr<_246858d4e_StructLitExprModel>);
inline void _246b42ad8_allocStructure(_246b41631_exprOptimizer*, jule::Ptr<_24685914b_AllocStructLitExprModel>);
inline void _246b42d91_casting(_246b41631_exprOptimizer*, jule::Ptr<_2468596ce_CastingExprModel>);
inline void _246b43149_args(_246b41631_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _246b43402_scope(_246b41631_exprOptimizer*, jule::Ptr<_2468a7760_Scope>*);
inline void _246b436aa_funcCall(_246b41631_exprOptimizer*, jule::Ptr<_24685a081_FnCallExprModel>);
inline void _246b43963_slice(_246b41631_exprOptimizer*, jule::Ptr<_24685a45a_SliceExprModel>);
inline void _246b43c1b_array(_246b41631_exprOptimizer*, jule::Ptr<_24685d4a2_ArrayExprModel>);
inline void _246b43ec4_indexing(_246b41631_exprOptimizer*, jule::Ptr<_24685a911_IndexingExprModel>);
inline void _246b4427c_anonFunc(_246b41631_exprOptimizer*, jule::Ptr<_24685acda_AnonFnExprModel>);
inline void _246b44535_mapExpr(_246b41631_exprOptimizer*, jule::Ptr<_24685b66a_MapExprModel>);
inline void _246b447dd_slicing(_246b41631_exprOptimizer*, jule::Ptr<_24685bbed_SlicingExprModel>);
inline void _246b44a96_traitSub(_246b41631_exprOptimizer*, jule::Ptr<_24685c281_TraitSubIdentExprModel>);
inline void _246b44d4e_structureSub(_246b41631_exprOptimizer*, jule::Ptr<_24685cb22_StructSubIdentExprModel>);
inline void _246b45107_tuple(_246b41631_exprOptimizer*, jule::Ptr<_24685d79e_TupleExprModel>);
inline void _246b453b0_newCall(_246b41631_exprOptimizer*, jule::Ptr<_24685e42b_BuiltinNewCallExprModel>);
inline void _246b45668_outCall(_246b41631_exprOptimizer*, jule::Ptr<_24685db78_BuiltinOutCallExprModel>);
inline void _246b45921_outlnCall(_246b41631_exprOptimizer*, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel>);
inline void _246b45bc9_panicCall(_246b41631_exprOptimizer*, jule::Ptr<_24685e805_BuiltinPanicCallExprModel>);
inline void _246b45e82_assertCall(_246b41631_exprOptimizer*, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel>);
inline void _246b4623a_errorCall(_246b41631_exprOptimizer*, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel>);
inline void _246b464e3_makeCall(_246b41631_exprOptimizer*, jule::Ptr<_246860262_BuiltinMakeCallExprModel>);
inline void _246b4679b_appendCall(_246b41631_exprOptimizer*, jule::Ptr<_24686063b_BuiltinAppendCallExprModel>);
inline void _246b46a54_lenCall(_246b41631_exprOptimizer*, jule::Ptr<_246860938_BuiltinLenCallExprModel>);
inline void _246b46d0c_capCall(_246b41631_exprOptimizer*, jule::Ptr<_246860c35_BuiltinCapCallExprModel>);
inline void _246b470b5_deleteCall(_246b41631_exprOptimizer*, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel>);
inline void _246b4736d_sizeof(_246b41631_exprOptimizer*, jule::Ptr<_24685c46d_SizeofExprModel>);
inline void _246b47626_alignof(_246b41631_exprOptimizer*, jule::Ptr<_2468620dd_AlignofExprModel>);
inline void _246b478ce_integratedToStr(_246b41631_exprOptimizer*, jule::Ptr<_2468626d7_IntegratedToStrExprModel>);
inline void _246b47b87_free(_246b41631_exprOptimizer*, jule::Ptr<_246862dad_FreeExprModel>);
inline void _246b47e40_backendEmit(_246b41631_exprOptimizer*, jule::Ptr<_246862ab1_BackendEmitExprModel>);
inline void _246b4813d_do(_246b41631_exprOptimizer*);
inline jule::Ptr<_227d8aa97_Optimizer> static__227d8b01a_New(jule::Ptr<_227c1a66e_IR>*);
inline void _227d8b2c3_optimizeGlobal(_227d8aa97_Optimizer*, jule::Ptr<_246922555_Var>*);
inline void _227d8b57b_optimizeFunction(_227d8aa97_Optimizer*, jule::Ptr<_246865d17_Fn>*);
inline void _227d8b834_optimizeStruct(_227d8aa97_Optimizer*, jule::Ptr<_246850e23_Struct>*);
inline void _227d8badc_optimizeGlobals(_227d8aa97_Optimizer*, jule::Ptr<_2468cbb08_Package>*);
inline void _227d8bd95_optimizeFunctions(_227d8aa97_Optimizer*, jule::Ptr<_2468cbb08_Package>*);
inline void _227d8c14d_optimizeStructs(_227d8aa97_Optimizer*, jule::Ptr<_2468cbb08_Package>*);
inline void _227d8c406_optimizePackage(_227d8aa97_Optimizer*, jule::Ptr<_2468cbb08_Package>*);
inline void _227d8c604_Optimize(_227d8aa97_Optimizer*);
inline void static__227db2a03_Reset(void);
inline void static__227d8cc75_Print(jule::Str, jule::Str);
inline void static__227db550b_LogFlat(_24345e617_Log*);
inline void static__227db573c_LogError(_24345e617_Log*);
inline void static__227db596d_Log(_24345e617_Log*);
inline void static__227db5b9e_PrintLogs(jule::Slice<_24345e617_Log>*);
inline _2287cd1a9_Time static__2287cd561_Unix(jule::U64);
inline _2287cd1a9_Time static__2287cd770_Now(void);
inline _2287cc9d3_AbsTime _2287cee58_Abs(_2287cd1a9_Time*);
inline jule::Ptr<_22870b34b_scopeCoder> static__22870b967_new(jule::Ptr<_2287d7658_ObjectCoder>*);
inline void _22c45e298_iterHead(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a9597_RangeIter>*, jule::Bool*, jule::Str);
inline void _22870c13d_rangeIndexIter(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a9597_RangeIter>*);
inline void _22870c3e6_rangeHashmapIter(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a9597_RangeIter>*);
inline void _22870c69e_ifCase(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a7b7d_If>);
inline void _22870c957_conditional(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a8398_Conditional>);
inline void _22870cc10_infIter(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a8695_InfIter>);
inline void _22870ceb8_whileIter(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a8b4b_WhileIter>);
inline void _22870d271_rangeIter(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a9597_RangeIter>);
inline void _22870d529_cont(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a992c_ContSt>);
inline void _22870d7d2_label(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468aa103_Label>);
inline void _22870da8a_gotoSt(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468aa4cc_GotoSt>);
inline void _22870dd43_postfix(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468aa8a6_Postfix>);
inline void _22870e0eb_assign(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468aad5c_Assign>);
inline void _22870e3a4_mapLookupAssign(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab236_MultiAssign>*);
inline void _22870e65c_multiAssignTup(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab236_MultiAssign>*);
inline void _22870e915_multiAssignFn(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab236_MultiAssign>*);
inline void _22870ebbd_multiAssign(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab236_MultiAssign>);
inline jule::Fn<void(void)> _22871000e_matchExpr(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab896_Match>);
inline void _228710372_case(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab896_Match>, jule::Ptr<_2468ac4ce_Case>);
inline void _22871062a_matchSt(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ab896_Match>);
inline void _2287108d3_fallSt(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468acac8_FallSt>);
inline void _228710b8b_breakSt(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a9d06_BreakSt>);
inline void _228710e44_setResult(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ace5d_RetSt>);
inline void _2287111ec_retSt(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468ace5d_RetSt>);
inline void _2287114a5_var(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_246922555_Var>);
inline void _22871175d_mutSlicing(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_246b383d6_MutSlicingExprModel>);
inline void _228711a16_swap(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_246b3710a_SwapExprModel>);
inline void _228711cbe_st(jule::Ptr<_22870b34b_scopeCoder>, jule::Any);
inline void _228712077_scopeStmts(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a7760_Scope>*);
inline void _228712330_scope(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_2468a7760_Scope>);
inline void _2287125d8_funcScope(jule::Ptr<_22870b34b_scopeCoder>, jule::Ptr<_246868c1b_FnIns>);
inline jule::Ptr<_2287154cb_exprCoder> static__228715894_new(jule::Ptr<_2287d7658_ObjectCoder>*);
inline void _228715b4c_string(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2445e359c_Const>*);
inline void _228715e05_boolean(jule::Ptr<_2287154cb_exprCoder>, jule::Bool);
inline void _228716103_nilLit(jule::Ptr<_2287154cb_exprCoder>);
inline jule::Bool _228716444_ftoaSpecialCases(jule::Ptr<_2287154cb_exprCoder>, jule::F64*);
inline void _2287166ec_float32(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2445e359c_Const>*);
inline void _2287169a5_float64(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2445e359c_Const>*);
inline void _228716c5d_constant(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2445e359c_Const>);
inline void _22871717b_divByZeroBinary(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246819d43_Token>*, jule::Ptr<_246857aa6_OperandExprModel>*, jule::Ptr<_246857aa6_OperandExprModel>*);
inline void _228717434_unsafeBinary(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468580a1_BinopExprModel>);
inline void _2287176dc_binary(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468580a1_BinopExprModel>);
inline void _228717995_var(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246922555_Var>);
inline void _228717c4d_structureIns(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246853ba1_StructIns>);
inline void _228718006_unary(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685847a_UnaryExprModel>);
inline void _2287182ae_structureLit(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246858d4e_StructLitExprModel>);
inline void _228718567_allocStructure(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685914b_AllocStructLitExprModel>);
inline void _228718820_possibleRefExpr(jule::Ptr<_2287154cb_exprCoder>, jule::Any);
inline void _228718c3d_castTraitFromTrait(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468596ce_CastingExprModel>*, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_2468790e4_Trait>);
inline void _228718ee6_casting(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468596ce_CastingExprModel>);
inline void _22871929e_models(jule::Ptr<_2287154cb_exprCoder>, jule::Slice<jule::Any>);
inline void _228719557_args(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>*);
inline void _228719810_modelForCall(jule::Ptr<_2287154cb_exprCoder>, jule::Any);
inline void _228719ab8_pushCallInf(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>*);
inline jule::Bool _228719e09_isWrapped(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>*);
inline void _22871a1b2_pureFuncCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>*);
inline void _22871a46a_coFuncCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>*);
inline void _22871a7cd_writeUseExpr(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246983ac2_Data>);
inline void _22871aa86_funcCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a081_FnCallExprModel>);
inline void _22871ad3e_slice(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a45a_SliceExprModel>);
inline void _22871b0e7_indexing(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685a911_IndexingExprModel>);
inline void _22871b3a0_unsafeIndexing(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246b389d0_UnsafeIndexingExprModel>);
inline void _22871b658_anonFunc(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685acda_AnonFnExprModel>);
inline void _22871b911_mapExpr(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685b66a_MapExprModel>);
inline void _22871bbb9_slicing(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685bbed_SlicingExprModel>);
inline void _22871be72_traitSub(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685c281_TraitSubIdentExprModel>);
inline void _22871c22a_structureSub(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685cb22_StructSubIdentExprModel>);
inline void _22871c4d3_array(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685d4a2_ArrayExprModel>);
inline void _22871c78b_funcInsCommon(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246868c1b_FnIns>);
inline void _22871ca44_funcIns(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246868c1b_FnIns>);
inline void _22871ccec_tuple(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685d79e_TupleExprModel>);
inline void _22871d0a5_newCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685e42b_BuiltinNewCallExprModel>);
inline void _22871d35d_outCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685db78_BuiltinOutCallExprModel>);
inline void _22871d616_outlnCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel>);
inline void _22871d8be_panicCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685e805_BuiltinPanicCallExprModel>);
inline void _22871db77_assertCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel>);
inline void _22871de30_errorCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel>);
inline void _22871e1d8_copyCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468614d8_BuiltinCopyCallExprModel>);
inline void _22871e491_lenCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246860938_BuiltinLenCallExprModel>);
inline void _22871e749_capCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246860c35_BuiltinCapCallExprModel>);
inline void _22871ea02_deleteCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel>);
inline void _22871ecaa_makeCallSlice(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246860262_BuiltinMakeCallExprModel>*);
inline void _228720063_makeCallStr(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246860262_BuiltinMakeCallExprModel>*);
inline void _22872031b_makeCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246860262_BuiltinMakeCallExprModel>);
inline void _2287205c4_pushToSlice(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246b38e0e_PushToSliceExprModel>);
inline void _22872087c_appendToSlice(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246b392d8_AppendToSliceExprModel>);
inline void _228720b35_appendCall(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24686063b_BuiltinAppendCallExprModel>);
inline void _228720ddd_sizeof(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685c46d_SizeofExprModel>);
inline void _228721196_alignof(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468620dd_AlignofExprModel>);
inline void _22872144e_runeLit(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468623da_RuneExprModel>);
inline void _228721707_structureStatic(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_24685d0c8_StructStaticIdentExprModel>);
inline void _2287219b0_integratedToStr(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2468626d7_IntegratedToStrExprModel>);
inline void _228721c68_backendEmit(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246862ab1_BackendEmitExprModel>);
inline void _228722021_free(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246862dad_FreeExprModel>);
inline void _2287222c9_strComp(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246b37d53_StrCompExprModel>);
inline void _228722582_emptyCompare(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_246b37528_EmptyCompareExprModel>);
inline void _22872283a_model(jule::Ptr<_2287154cb_exprCoder>, jule::Any);
inline void _228722ae3_initExpr(jule::Ptr<_2287154cb_exprCoder>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_228725cb1_TestCoder> static__228726201_New(jule::Ptr<_2287d7658_ObjectCoder>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _228726487_findTestingPackage(jule::Ptr<_228725cb1_TestCoder>);
inline void _228726740_appendTest(jule::Ptr<_228725cb1_TestCoder>, jule::Ptr<_246868c1b_FnIns>);
inline void _2287269e8_appendPackageTests(jule::Ptr<_228725cb1_TestCoder>, jule::Ptr<_2468cbb08_Package>*);
inline jule::Bool _228726c7e_readyTestingPackage(jule::Ptr<_228725cb1_TestCoder>);
inline void _228726e7c_callTmReset(jule::Ptr<_228725cb1_TestCoder>);
inline void _22872717a_callTmFailed(jule::Ptr<_228725cb1_TestCoder>);
inline void _228727378_callTmSkipped(jule::Ptr<_228725cb1_TestCoder>);
inline void _228727576_Serialize(jule::Ptr<_228725cb1_TestCoder>);
inline void static__2287290b1_writeIdentTo(_2433b0c50_StrBuilder*, jule::Str*);
inline void static__228729457_toOut(_2433b0c50_StrBuilder*, jule::Str, jule::Uintptr);
inline void static__2287298a8_toLocal(_2433b0c50_StrBuilder*, jule::I64, jule::I64, jule::Str*);
inline void static__228729b94_func(_2433b0c50_StrBuilder*, jule::Ptr<_246865d17_Fn>*);
inline void static__228729e80_funcIns(_2433b0c50_StrBuilder*, jule::Ptr<_246868c1b_FnIns>*);
inline void static__22872a26b_traitDecl(_2433b0c50_StrBuilder*, jule::Ptr<_2468790e4_Trait>);
inline void static__22872a557_param(_2433b0c50_StrBuilder*, jule::Ptr<_246864343_Param>*);
inline void static__22872a843_structure(_2433b0c50_StrBuilder*, jule::Ptr<_246850e23_Struct>*);
inline void static__22872ab2e_structureIns(_2433b0c50_StrBuilder*, jule::Ptr<_246853ba1_StructIns>*);
inline void static__22872ae1a_field(_2433b0c50_StrBuilder*, jule::Ptr<_24684d030_Field>*);
inline void static__22872b206_var(_2433b0c50_StrBuilder*, jule::Ptr<_246922555_Var>);
inline void static__22872b4e2_iterBegin(_2433b0c50_StrBuilder*, jule::Uintptr);
inline void static__22872b7cd_iterEnd(_2433b0c50_StrBuilder*, jule::Uintptr);
inline void static__22872bab9_iterNext(_2433b0c50_StrBuilder*, jule::Uintptr);
inline void static__22872bda5_label(_2433b0c50_StrBuilder*, jule::Uintptr);
inline void static__22872c191_matchEnd(_2433b0c50_StrBuilder*, jule::Uintptr);
inline void static__22872c47c_caseBegin(_2433b0c50_StrBuilder*, jule::Uintptr);
inline jule::Str _2287e714b_Str(_2287e6cc7_customType*);
inline jule::Bool _2287e748c_Equal(jule::Ptr<_2287e6cc7_customType>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_2287e78bb_typeCoder> static__2287e7e0a_new(jule::Ptr<_2287d7658_ObjectCoder>*);
inline void _2287e826d_toType(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Str);
inline void _2287e85d1_prim(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469bc259_Prim>);
inline void _2287e8944_tuple(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c234c_Tuple>);
inline void _2287e8ca7_asSptr(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Slice<jule::U8>);
inline void _2287e911a_sptr(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c0c85_Sptr>);
inline void _2287e947d_ptr(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c454c_Ptr>);
inline void _2287e97e1_enumDecl(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_24687b800_Enum>);
inline void _2287e9b54_typeEnumDecl(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_24687d00a_TypeEnum>);
inline void _2287e9eb7_asSlice(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469b43d8_TypeKind>);
inline void _2287ea32a_slice(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c1758_Slc>);
inline void _2287ea68d_mapType(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c2dec_Map>);
inline void _2287ead64_traitDecl(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2468790e4_Trait>);
inline void _2287eb1c7_structure(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246850e23_Struct>);
inline void _2287eb53a_structureIns(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246853ba1_StructIns>);
inline void _2287eb89d_array(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c3a79_Arr>);
inline void _2287ec074_paramIns(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246867c70_ParamIns>*);
inline void _2287ec74a_funcInsResult(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246868c1b_FnIns>*);
inline void _2287ecaad_anonFunc(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246868c1b_FnIns>);
inline void _2287ece21_func(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246868c1b_FnIns>);
inline void _2287ed284_kind(_2287e78bb_typeCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Ptr<_2288009b2_resultCoder> static__228800e8a_new(jule::Ptr<_2287e78bb_typeCoder>*);
inline void _2288012ed_ptr(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c454c_Ptr>);
inline void _228801661_sptr(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c0c85_Sptr>);
inline void _2288019c4_mapType(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c2dec_Map>);
inline void _228801d37_slice(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c1758_Slc>);
inline void _22880219a_arr(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c3a79_Arr>);
inline void _22880250d_func(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_246868c1b_FnIns>);
inline void _228802871_tup(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469c234c_Tuple>);
inline void _228802bd4_codeMut(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _228803047_codeMut1(_2288009b2_resultCoder*, _2433b0c50_StrBuilder*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Slice<jule::U8> _228803355_code(_2288009b2_resultCoder*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Str _22c912482_Name(_22c912064_Flag*);
inline jule::Str _22c9125d6_What(_22c912064_Flag*);
inline void _22c91273a_Reset(_22c912064_Flag*);
inline jule::I32 _22c91288e_Short(_22c912064_Flag*);
inline jule::Str _22c9157e8_Name(_22c915bb1_Flag*);
inline jule::Str _22c91593b_What(_22c915bb1_Flag*);
inline void _22c915e9c_Reset(_22c915bb1_Flag*);
inline jule::I32 _22c9160e0_Short(_22c915bb1_Flag*);
inline jule::Str _22c918ee4_Name(_22c9193ac_Flag*);
inline jule::Str _22c919137_What(_22c9193ac_Flag*);
inline void _22c919698_Reset(_22c9193ac_Flag*);
inline jule::I32 _22c9197db_Short(_22c9193ac_Flag*);
inline jule::Str _22c91c734_Name(_22c91caec_Flag*);
inline jule::Str _22c91c877_What(_22c91caec_Flag*);
inline void _22c91cdd8_Reset(_22c91caec_Flag*);
inline jule::I32 _22c91d02b_Short(_22c91caec_Flag*);
inline jule::Str _22c920e30_Name(_22c9212e8_Flag*);
inline jule::Str _22c921073_What(_22c9212e8_Flag*);
inline void _22c9215d4_Reset(_22c9212e8_Flag*);
inline jule::I32 _22c921727_Short(_22c9212e8_Flag*);
inline jule::Ptr<_228872061_FlagSet> static__22887234c_New(void);
inline jule::Trait<_2288704b0_CommonFlag> _2288727c0_FindFlag(_228872061_FlagSet*, jule::Str);
inline jule::Trait<_2288704b0_CommonFlag> _228872b11_FindFlagShort(_228872061_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _2288731d8_Parse(_228872061_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_22c9212e8_Flag> _22c9886a1_addFlagCommon(_228872061_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_22c91caec_Flag> _22c99039a_addFlagCommon(_228872061_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _22c986649_AddVar(_228872061_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _22c98d387_AddVar(_228872061_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _22c933b9b_parseInteger(_2288749e2_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _22c93b3ce_parseInteger(_2288749e2_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _22887530b_getData(_2288749e2_argParser*);
inline jule::VoidExceptional _228875581_processFlag(_2288749e2_argParser*, jule::Trait<_2288704b0_CommonFlag>*);
inline jule::VoidExceptional _228875839_singleDash(_2288749e2_argParser*, jule::Str*);
inline jule::VoidExceptional _228875ae2_doubleDash(_2288749e2_argParser*, jule::Str*);
inline jule::VoidExceptional _228875ce0_tryArg(_2288749e2_argParser*);
inline jule::VoidExceptional _228875edd_parse(_2288749e2_argParser*);
inline jule::Ptr<_2287d7658_ObjectCoder> static__2287d7a54_New(jule::Ptr<_227c1a66e_IR>*, _2287d5b40_SerializationInfo);
inline void _2287d7d0c_write(jule::Ptr<_2287d7658_ObjectCoder>, jule::Str);
inline void _2287d80b5_writeBytes(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::U8>);
inline void _2287d82b3_addIndent(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287d84b1_doneIndent(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287d86ae_indent(jule::Ptr<_2287d7658_ObjectCoder>);
inline jule::I64 _2287d8a00_findAnyType(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::I64 _2287d8d41_pushAnyType(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _2287d90e9_pushResultIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246868c1b_FnIns>*);
inline void _2287d93a2_pushResult(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246865d17_Fn>*);
inline jule::I64 _2287d979d_findTypeOffsetS(_2287d7658_ObjectCoder*, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_246853ba1_StructIns>);
inline jule::I64 _2287d9b99_findTypeOffset(_2287d7658_ObjectCoder*, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_2469b43d8_TypeKind>);
inline void _2287da00c_pushAndWriteMaskMapper(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2468790e4_Trait>, jule::Ptr<_2468790e4_Trait>);
inline void _2287da2b5_locInfo(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246819d43_Token>*);
inline void _2287da4b3_head(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287da6b1_links(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287da969_prepareStructure(_2287d7658_ObjectCoder*, jule::Ptr<_246850e23_Struct>*);
inline void _2287dab67_prepareStructures(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287dae20_iterPackages(jule::Ptr<_2287d7658_ObjectCoder>, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>);
inline void _2287db11d_buildTraitMap(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287db31b_traitDecls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287db5c4_structurePlainDecl(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246850e23_Struct>*);
inline void _2287db7c2_structurePlainDecls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287dba7a_fieldDecl(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853101_FieldIns>*);
inline void _2287dbd33_structureDestructor(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287dc196_structureOperatorEq(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287dc509_structureOperatorNotEq(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287dc927_structureOperator(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::U8>, jule::Ptr<_246868c1b_FnIns>*, jule::Str);
inline void _2287dcbd0_structureOperators(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287dce88_structureInsDecl(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287dd241_structureDecl(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246850e23_Struct>*);
inline void _2287dd43e_structureDecls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287dd63c_structureMethodDecls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287dd8e5_paramsDecls(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::Ptr<_246867c70_ParamIns>>*);
inline void _2287ddc58_funcHead(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246868c1b_FnIns>*, jule::Bool);
inline void _2287de0bb_funcDeclIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246868c1b_FnIns>*, jule::Bool);
inline void _2287de42e_funcDecl(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246865d17_Fn>*, jule::Bool);
inline void _2287de84c_funcDeclTrait(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_246865d17_Fn>*, jule::Bool);
inline void _2287dea4a_funcDecls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287dedad_traitDataTypeMethods(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_2468790e4_Trait>*);
inline void _2287e00ab_traitDataTypes(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e0364_paramIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246867c70_ParamIns>*);
inline void _2287e061c_paramsIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Slice<jule::Ptr<_246867c70_ParamIns>>*);
inline void _2287e0980_varInitExpr(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246922555_Var>*, jule::Fn<void(void)>);
inline void _2287e0c38_var(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246922555_Var>);
inline void _2287e0ee1_funcIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246868c1b_FnIns>*);
inline void _2287e1299_func(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246865d17_Fn>*);
inline void _2287e160c_funcTrait(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2287d6217_traitHash>*, jule::Ptr<_246865d17_Fn>*);
inline void _2287e1970_traitWrapper(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246865d17_Fn>*, jule::Ptr<_2287d6217_traitHash>*);
inline void _2287e1b6d_traitWrappers(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e1ed1_traitDataMethods(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_2287d6217_traitHash>*);
inline void _2287e2344_traitData(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2287d6217_traitHash>*, jule::Ptr<_2468790e4_Trait>*);
inline void _2287e2542_traitDatas(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e2740_globals(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e293d_decls(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e2be6_structureMethods(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287e2e9e_structureOstream(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287e3257_structureIns(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246853ba1_StructIns>*);
inline void _2287e3510_structure(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_246850e23_Struct>*);
inline void _2287e370d_structures(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e390b_funcs(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e3bb4_pushInit(jule::Ptr<_2287d7658_ObjectCoder>, jule::Ptr<_2468cbb08_Package>*);
inline void _2287e3db2_initCaller(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e40b0_end(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e42ad_serializeHead(jule::Ptr<_2287d7658_ObjectCoder>);
inline void _2287e44ab_Serialize(jule::Ptr<_2287d7658_ObjectCoder>);
inline jule::Ptr<_227d456ab_ObjectDeadCode> static__227d7a46b_new(jule::Ptr<_227c1a66e_IR>*);
inline jule::Bool _22c1d314e_isLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _22c1d8bd2_isLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Bool _22c1e125b_isLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246853ba1_StructIns>*);
inline jule::Bool _22c1e6a36_isLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246922555_Var>*);
inline void _22c1d3517_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_2468790e4_Trait>);
inline void _22c1d9034_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246868c1b_FnIns>);
inline void _22c1dede7_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246853ba1_StructIns>);
inline void _22c1e6dee_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_246922555_Var>);
inline void _227d7aca7_setReferencesAsLive(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_24686bdd9_ReferenceStack>*);
inline void _227d7b060_inits(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_2468cbb08_Package>*);
inline void _227d7b318_collectLivePackage(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_2468cbb08_Package>*);
inline void _227d7b516_collectLive(jule::Ptr<_227d456ab_ObjectDeadCode>);
inline void _227d7b7be_removeDeadGlobals(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Slice<jule::Ptr<_246922555_Var>>*);
inline void _227d7ba77_removeDeadFns(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Slice<jule::Ptr<_246865d17_Fn>>*);
inline void _227d7bd30_removeDeadStructs(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Slice<jule::Ptr<_246850e23_Struct>>*);
inline void _227d7c0d8_removeDeadTraits(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Slice<jule::Ptr<_2468790e4_Trait>>*);
inline void _227d7c391_removeDeadsFile(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_24697d726_SymbolTable>*);
inline void _227d7c649_removeDeadsPackage(jule::Ptr<_227d456ab_ObjectDeadCode>, jule::Ptr<_2468cbb08_Package>*);
inline void _227d7c847_removeDeads(jule::Ptr<_227d456ab_ObjectDeadCode>);
inline void _227d7ca45_elimanate(jule::Ptr<_227d456ab_ObjectDeadCode>);
inline __jule_tuple_x_227c1a66e_IR__jule_tuple_s_24345e617_Log static__227c1aad1_Build(jule::Str, jule::I64);
inline void _227c1b0ba_appendStructs(_227c1a66e_IR*, jule::Ptr<_2468cbb08_Package>*, jule::Slice<jule::Ptr<_246850e23_Struct>>*);
inline jule::Slice<jule::Ptr<_246850e23_Struct>> _227c1b351_GetAllStructures(_227c1a66e_IR*);
inline void _227c1b6b4_appendGlobals(_227c1a66e_IR*, jule::Ptr<_2468cbb08_Package>*, jule::Slice<jule::Ptr<_246922555_Var>>*);
inline jule::Slice<jule::Ptr<_246922555_Var>> _227c1b94a_GetAllGlobals(_227c1a66e_IR*);
inline void _227c1bb48_Order(_227c1a66e_IR*);
inline jule::Str _246854025_Str(_246853ba1_StructIns*);
inline jule::Bool _246854366_Equal(jule::Ptr<_246853ba1_StructIns>, jule::Ptr<_2469b43d8_TypeKind>);
inline jule::Bool _24685481c_Same(_246853ba1_StructIns*, jule::Ptr<_246853ba1_StructIns>);
inline jule::Ptr<_246865d17_Fn> _246854c18_FindMethod(_246853ba1_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_246853101_FieldIns> _246855059_FindField(_246853ba1_StructIns*, jule::Str);
inline jule::Ptr<_246922555_Var> _24685539a_FindStatic(_246853ba1_StructIns*, jule::Str);
inline jule::Ptr<_24351d7b4_Cmd> static__24351dbd2_New(jule::Str);
inline jule::VoidExceptional _24351ddd0_Spawn(_24351d7b4_Cmd*);
inline jule::Exceptional<jule::I64> _24351e364_Wait(_24351d7b4_Cmd*);
inline jule::VoidExceptional _243574441_spawn(_24351d7b4_Cmd*);
inline jule::Exceptional<jule::I64> _2435748c5_wait(_24351d7b4_Cmd*);
inline void _241e6d4bd_Free(void*);
inline jule::Str _241e9e389_BytePtrToStr(jule::U8*);
inline jule::I64 _240e913b0_GetLastErrno(void);
inline jule::I64 _241eadb5c_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _241eaded1_Stat(jule::U8*, struct stat*);
inline jule::I64 _241eae410_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _241eae784_Getcwd(jule::U8*, jule::U64);
inline DIR* _241eaec7e_Opendir(jule::U8*);
inline struct dirent* _241eb0048_Readdir(DIR*);
inline jule::I64 _241eb0312_Closedir(DIR*);
inline jule::I64 _241eb0c19_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _241eb0ed3_Rmdir(jule::U8*);
inline jule::I64 _241eb129c_Unlink(jule::U8*);
inline jule::I64 _241ec207c_Read(jule::I64, void*, jule::U64);
inline jule::I64 _241ec2423_Close(jule::I64);
inline jule::I64 _241ec2852_Write(jule::I64, void*, jule::U64);
inline void _241ec2a83_Exit(jule::I64);
inline jule::Str _242099495_Str(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _2288edcd0_Slice(jule::U8*, jule::I64);
inline jule::Slice<jule::U8> _2420a67c1_StrBytes(jule::Str);
inline jule::Str _2420a6a8a_BytesStr(jule::Slice<jule::U8>);
inline jule::Str _2420a6d54_StrFromBytes(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _2420a711d_BytesFromStr(jule::Str);
inline jule::I64 _2420d0388_getLastOsError(void);
inline jule::Slice<jule::Str> _2420d1422_Args(void);
inline jule::Exceptional<jule::Str> _2420d18b7_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2420d2313_getwd(void);
inline jule::Bool _2431d63a0_IsLetter(jule::I32);
inline jule::Bool _24324de62_is16(jule::Slice<_24324c1c4_Range16>, jule::U16);
inline jule::Bool _24324e2d6_is32(jule::Slice<_24324c702_Range32>, jule::U32);
inline jule::Bool _24324eade_isExcludingLatin(jule::Ptr<_24324cba8_RangeTable>, jule::I32);
inline jule::Bool _24324eda8_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _24335a711_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _24335aa52_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _24335ad1b_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _24335bb74_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _24335bee8_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _24335c57b_RuneCountStr(jule::Str);
inline jule::Bool _24335c845_RuneStart(jule::U8);
inline jule::I64 _243387b7d_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _24339a4a9_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _24339a850_FindByteStr(jule::Str, jule::U8);
inline jule::I64 _24339abc4_FindLastByteStr(jule::Str, jule::U8);
inline jule::Str _24339ae7c_Repeat(jule::Str, jule::I64);
inline jule::Bool _24339b400_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _24339b774_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _24339bc2a_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _24339c06b_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _24339c49a_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _24339cd5d_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _24339d1d2_FindLast(jule::Str, jule::Str);
inline jule::I64 _24339e931_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _24339ee5e_FindRune(jule::Str, jule::I32);
inline jule::I64 _2433a0657_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2433a0e0a_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _2433a127e_Contains(jule::Str, jule::Str);
inline jule::Bool _2433a1ceb_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _2433a2170_Count(jule::Str, jule::Str);
inline jule::Str _2433a2659_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _2433a334c_trimLeft(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _2433a36c1_TrimLeft(jule::Str, jule::Str);
inline void _24339eaeb_trimRight(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _2433a42d7_Trim(jule::Str, jule::Str);
inline jule::Str _2433a465b_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _2433bc3ee_Clean(jule::Str);
inline jule::Str _2433bc9c6_FromSlash(jule::Str);
inline jule::Str _2433bcd17_Join(jule::Slice<jule::Str>);
inline jule::Str _2433bd0d1_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2433bd39a_Abs(jule::Str);
inline jule::Str _2433bd664_Base(jule::Str);
inline jule::Str _2433bda0a_Dir(jule::Str);
inline jule::Str _2433bdcc4_VolumeName(jule::Str);
inline jule::Bool _2433beb1b_IsPathSep(jule::U8);
inline jule::Bool _2433bee29_IsAbs(jule::Str);
inline jule::I64 _2433c01e3_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _2433c0534_abs(jule::Str);
inline jule::Str _2433c07ed_join(jule::Slice<jule::Str>);
inline jule::I64 _241edc97c_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _243565d06_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _243570052_Itoa(jule::I64);
inline jule::Str _243570360_Utoa(jule::U64);
inline void _243570591_rev(jule::Slice<jule::U8>*);
inline jule::Slice<char*> _243573b38_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _243573eac_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _2435741dd_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _243575167_processErrorFromCode(jule::I64);
inline jule::I64 _2435753ba_getLastProcessError(void);
inline void _243575bd4_Exit(jule::I64);
inline jule::Str _243575de3_Executable(void);
inline jule::Bool _2434523eb_IsStdHeaderPath(jule::Str);
inline jule::Bool _2434526c6_IsValidHeaderExt(jule::Str);
inline jule::Bool _243452990_IsValidCppExt(jule::Str);
inline jule::Str _24345ea79_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _24345ed87_argToStr(jule::Any);
inline jule::I64 _243460151_findNextFmt(jule::Str);
inline jule::Str _243460519_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _243461383_IsTopDirective(jule::Str);
inline jule::Bool _2434627d5_IsWindows(jule::Str);
inline jule::Bool _243462ab0_IsDarwin(jule::Str);
inline jule::Bool _243462d79_IsLinux(jule::Str);
inline jule::Bool _2434631ba_IsI386(jule::Str);
inline jule::Bool _243463484_IsAmd64(jule::Str);
inline jule::Bool _24346374d_IsArm64(jule::Str);
inline jule::Bool _243463a17_IsUnix(jule::Str);
inline jule::Bool _243463dad_Is32Bit(jule::Str);
inline jule::Bool _243464177_Is64Bit(jule::Str);
inline void _2435771be_init(void);
inline jule::I64 _244574a06_LeadingZeros64(jule::U64);
inline jule::I64 _24457595d_TrailingZeros(jule::U64);
inline jule::I64 _2445763ba_TrailingZeros32(jule::U32);
inline jule::I64 _244576684_TrailingZeros64(jule::U64);
inline jule::I64 _24457c13a_Len32(jule::U32);
inline jule::I64 _24457c404_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _24457d191_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _24457e99a_Mul64(jule::U64, jule::U64);
inline jule::U32 _24447eba8_F32Bits(jule::F32);
inline jule::F32 _24447eeb6_F32FromBits(jule::U32);
inline jule::U64 _244480280_F64Bits(jule::F64);
inline jule::F64 _2444805c1_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _244482b78_Frexp(jule::F64);
inline jule::F64 _244586c8d_NaN(void);
inline jule::Bool _24458709b_IsNaN(jule::F64);
inline jule::F64 _244587365_Inf(jule::I64);
inline jule::Bool _2445876a6_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _244587970_normalize(jule::F64);
inline jule::F64 _244589444_Log(jule::F64);
inline jule::F64 _244589d29_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _244591a23_Modf(jule::F64);
inline jule::F64 _24459232b_Log2(jule::F64);
inline jule::Str _2445bb60d_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2445bbbe6_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _2445bc400_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _243ded814_floatInfo*);
inline jule::Slice<jule::U8> _2445bcac6_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _2445bb07a_decimalSlice, jule::I64, jule::U8);
inline void _2445bd027_roundShortest(_2445cdd07_decimal*, jule::U64, jule::I64, _243ded814_floatInfo*);
inline jule::Slice<jule::U8> _2445bd5bb_fmtE(jule::Slice<jule::U8>, jule::Bool, _2445bb07a_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _2445bdaa5_fmtF(jule::Slice<jule::U8>, jule::Bool, _2445bb07a_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2445be226_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _243ded814_floatInfo*);
inline jule::Slice<jule::U8> _2445be930_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _243ded814_floatInfo*);
inline jule::I64 _2445beca4_min(jule::I64, jule::I64);
inline jule::I64 _2445c0128_max(jule::I64, jule::I64);
inline jule::U8 _2445c0b73_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__2438d8d27_ConvError _2445c10e6_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _2445c1525_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _2445c19cb_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _2445c26be_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2445c2b0e_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2445c4957_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2445c4c65_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2445c502e_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _2445c6aad_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2445c6edc_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__2438d8d27_ConvError _2445c7581_atofHex(_243ded814_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c795a_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c7c24_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c8098_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _2445c841c_ParseFloat(jule::Str, jule::I64);
inline void _2445c8c25_ryuFtoaFixed32(_2445bb07a_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _2445c91ba_ryuFtoaFixed64(_2445bb07a_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _2445c9a17_formatDecimal(_2445bb07a_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2445c9ee0_ryuFtoaShortest(_2445bb07a_decimalSlice*, jule::U64, jule::I64, _243ded814_floatInfo*);
inline jule::I64 _2445ca2a9_mulByLog2Log10(jule::I64);
inline jule::I64 _2445ca573_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2445ca9a2_computeBounds(jule::U64, jule::I64, _243ded814_floatInfo*);
inline void _2445cb0bd_ryuDigits(_2445bb07a_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _2445cb73e_ryuDigits32(_2445bb07a_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2445cbb6d_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2445cc09c_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _2445cc421_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _2445cc6da_divmod1e9(jule::U64);
inline void _2445d0655_trim(_2445cdd07_decimal*);
inline void _2445d0941_rightShift(_2445cdd07_decimal*, jule::U64);
inline jule::Bool _2445d0de7_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _2445d11a0_leftShift(_2445cdd07_decimal*, jule::U64);
inline jule::Bool _2445d1524_shouldRoundUp(_2445cdd07_decimal*, jule::I64);
inline jule::Str _2445d2ba7_FmtUint(jule::U64, jule::I64);
inline jule::Str _2445d3070_FmtInt(jule::I64, jule::I64);
inline jule::Str _2445d3339_Itoa(jule::I64);
inline jule::Str _2445d367a_small(jule::I64);
inline jule::Bool _2445d3944_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _2445d3ed8_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _2445d53d5_RealKindOf(jule::Str);
inline jule::I64 _2445d569e_BitsizeOf(jule::Str);
inline jule::Str _2445d59e0_IntFromBits(jule::I64);
inline jule::Str _2445d5ca9_UintFromBits(jule::I64);
inline jule::Str _2445d6073_FloatFromBits(jule::I64);
inline jule::Bool _2445d6bbc_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _2445d6e86_BitsizeOfFloat(jule::F64);
inline jule::I64 _2445d7250_BitsizeOfInt(jule::I64);
inline jule::I64 _2445d7519_BitsizeOfUint(jule::U64);
inline void _2445d7690_UpdateTarget(void);
inline void _2445d7816_init(void);
inline jule::I64 _2445db5c8_MinI(jule::Str);
inline jule::I64 _2445db8d6_MaxI(jule::Str);
inline jule::U64 _2445dbba0_MaxU(jule::Str);
inline jule::F64 _2445dbdd1_Min(jule::Str);
inline jule::F64 _2445dc19a_Max(jule::Str);
inline jule::Bool _2445dc61d_IsI8Compatible(jule::Str);
inline jule::Bool _2445dc92b_IsI16Compatible(jule::Str);
inline jule::Bool _2445dcbe5_IsI32Compatible(jule::Str);
inline jule::Bool _2445dd036_IsI64Compatible(jule::Str);
inline jule::Bool _2445dd300_IsU8Compatible(jule::Str);
inline jule::Bool _2445dd5b9_IsU16Compatible(jule::Str);
inline jule::Bool _2445dd883_IsU32Compatible(jule::Str);
inline jule::Bool _2445ddc29_IsU64Compatible(jule::Str);
inline jule::Bool _2445ddee3_IsF32Compatible(jule::Str);
inline jule::Bool _2445de2ac_IsF64Compatible(jule::Str);
inline jule::Bool _2445de631_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _2445de8ea_IsI16Greater(jule::Str);
inline jule::Bool _2445debb4_IsI32Greater(jule::Str);
inline jule::Bool _2445dee7d_IsI64Greater(jule::Str);
inline jule::Bool _2445e0247_IsU16Greater(jule::Str);
inline jule::Bool _2445e06ba_IsU32Greater(jule::Str);
inline jule::Bool _2445e0984_IsU64Greater(jule::Str);
inline jule::Bool _2445e0c4d_IsF32Greater(jule::Str);
inline jule::Bool _2445e1017_IsF64Greater(jule::Str);
inline jule::Bool _2445e138b_IsGreater(jule::Str, jule::Str);
inline jule::Bool _2445e23e2_IsSigInt(jule::Str);
inline jule::Bool _2445e2700_IsUnsigInt(jule::Str);
inline jule::Bool _2445e29b9_IsInt(jule::Str);
inline jule::Bool _2445e2d0a_IsFloat(jule::Str);
inline jule::Bool _2445e30c4_IsNum(jule::Str);
inline jule::Bool _2445e338d_IsSigNum(jule::Str);
inline void _2445ec5b7_lshiftUnsig(_2445e359c_Const*, _2445e359c_Const*);
inline void _2445ec8e7_rshiftUnsig(_2445e359c_Const*, _2445e359c_Const*);
inline jule::Bool _24681a580_IsUnaryOp(jule::U64);
inline jule::Bool _24681a88d_IsBinOp(jule::U64);
inline jule::Bool _24681ae98_IsStr(jule::Str);
inline jule::Bool _24681b262_IsRawStr(jule::Str);
inline jule::Bool _24681b52b_IsRune(jule::Str);
inline jule::Bool _24681be55_IsFloat(jule::Str);
inline jule::Bool _24681c21e_IsNum(jule::Str);
inline jule::Bool _24681c7a2_IsIgnoreIdent(jule::Str);
inline jule::Bool _24681ca6b_IsAnonIdent(jule::Str);
inline jule::Bool _24681d0ee_IsSpace(jule::I32);
inline jule::Bool _24681d572_IsLetter(jule::I32);
inline jule::Bool _24681db05_IsDecimal(jule::U8);
inline jule::Bool _24681ddbe_IsBinary(jule::U8);
inline jule::Bool _24681e188_IsOctal(jule::U8);
inline jule::Bool _24681e452_IsHex(jule::U8);
inline jule::Bool _24681e71b_IsAssign(jule::U64);
inline jule::Bool _24681e9d5_IsPostfixOp(jule::U64);
inline jule::Bool _24681ec9e_IsAssignOp(jule::U64);
inline jule::Ptr<_24682060c_File> _2468219a4_NewFileSet(jule::Str);
inline _24345e617_Log _246823500_makeErr(jule::I64, jule::I64, jule::Ptr<_24682060c_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2468238b8_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _246823c3c_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246824105_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246824479_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2468247ed_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246824b72_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246825106_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _2468253c0_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _246825689_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _246825a0d_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _246825d82_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _246826206_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _24682657a_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _2468268ee_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246826d72_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _24682713b_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _2468274b0_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _246827779_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _246827a43_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _246827d0c_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _2468280c6_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_24345e617_Log> _24682d0ba_Lex(jule::Ptr<_24682060c_File>, jule::I64);
inline jule::Bool _2468eb342_FindModuleFile(jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>*);
inline jule::Str _2468eb5ea_FindModuleFileDeep(jule::Str);
inline jule::Slice<_24345e617_Log> _2468eb8b4_CheckModuleFile(jule::Str*);
inline jule::Bool _2468ec244_IsPub(jule::Str);
inline jule::Bool _24694a759_IsAscii(jule::I32);
inline jule::I32 _2469679eb_ToRune(jule::Str);
inline jule::Str _246967ca4_ToRawStr(jule::Str);
inline jule::Str _2469680e5_ToStr(jule::Str);
inline __jule_tuple_u8__jule_tuple_bool _2469683ae_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _246968700_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _246968a74_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _246b20324_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64);
inline jule::Slice<jule::U8> _246b20698_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _246b20984_FmtByDefault(_2433b0c50_StrBuilder*, jule::Any*);
inline void _246b20da2_applyFmtByDefault(_2433b0c50_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _246b21303_applyFmt(jule::Slice<jule::U8>*, _2433b0c50_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Slice<jule::U8> _246b21644_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _246b23712_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _24686aee8_parameterUsesGenerics(jule::Ptr<_246867c70_ParamIns>*, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>*);
inline jule::Ptr<_2469bb852_TypeSymbol> _24686d76a_buildType(jule::Ptr<_246830320_TypeDecl>);
inline jule::Ptr<_246984c16_Value> _24686da78_buildExpr(jule::Ptr<_246834654_Expr>);
inline jule::Ptr<_2469b35e6_TypeAlias> _24686dd42_buildTypeAlias(jule::Ptr<_246846b83_TypeAliasDecl>);
inline jule::Ptr<_24684d030_Field> _24686e183_buildField(jule::Ptr<_24684a45b_FieldDecl>);
inline jule::Slice<jule::Ptr<_24684d030_Field>> _24686e44c_buildFields(jule::Slice<jule::Ptr<_24684a45b_FieldDecl>>*);
inline jule::Ptr<_246850e23_Struct> _24686e716_buildStruct(jule::Ptr<_24684ad52_StructDecl>);
inline jule::Ptr<_246864343_Param> _24686e9d0_buildParam(jule::Ptr<_246840a7d_ParamDecl>);
inline jule::Slice<jule::Ptr<_246864343_Param>> _24686ed76_buildParams(jule::Slice<jule::Ptr<_246840a7d_ParamDecl>>*);
inline jule::Ptr<_246863ab2_RetType> _246870140_buildRetType(jule::Ptr<_246833213_RetTypeDecl>);
inline jule::Ptr<_246865d17_Fn> _246870409_buildFunc(jule::Ptr<_246841ed0_FnDecl>);
inline jule::Slice<jule::Ptr<_246865d17_Fn>> _2468706c3_buildMethods(jule::Slice<jule::Ptr<_246841ed0_FnDecl>>*);
inline jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>> _24687098c_buildTraitInherits(jule::Slice<jule::Ptr<_246830320_TypeDecl>>*);
inline jule::Ptr<_2468790e4_Trait> _246870c56_buildTrait(jule::Ptr<_24684b58e_TraitDecl>);
inline jule::Ptr<_24687ac83_EnumItem> _246871020_buildEnumItem(jule::Ptr<_246848646_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _2468712d9_buildEnumItems(jule::Slice<jule::Ptr<_246848646_EnumItemDecl>>*);
inline jule::Ptr<_24687b800_Enum> _24687175c_buildEnum(jule::Ptr<_246849207_EnumDecl>);
inline jule::Ptr<_24687c933_TypeEnumItem> _246871a26_buildTypeEnumItem(jule::Ptr<_246849a32_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> _246871ce0_buildTypeEnumItems(jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>>*);
inline jule::Ptr<_24687d00a_TypeEnum> _2468720a9_buildTypeEnum(jule::Ptr<_24684a192_TypeEnumDecl>);
inline jule::Ptr<_246922555_Var> _246872373_buildVar(jule::Ptr<_2468430ad_VarDecl>);
inline jule::Slice<jule::Ptr<_246922555_Var>> _24687263c_buildVars(jule::Slice<jule::Ptr<_2468430ad_VarDecl>>);
inline jule::Ptr<_2468a2309_Impl> _246872906_buildImpl(jule::Ptr<_24684bbee_Impl>);
inline jule::Ptr<_246983ac2_Data> _24689ccb6_buildAsComptimeMethodData(jule::Ptr<_246868c1b_FnIns>*);
inline jule::Ptr<_2468c8bd2_ImportInfo> _24689d0c4_findComptimePackage(jule::Ptr<_246900148_Sema>*);
inline jule::Ptr<_246983ac2_Data> _24689d448_buildComptimeTypeInfoData(jule::Ptr<_246900148_Sema>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_246983ac2_Data> _24689d679_buildComptimeValue(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2468a166b_matchConstraint(jule::Str*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2468a1979_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_2468aea64_scopeChecker> _2468a453c_newScopeCheckerBase(jule::Ptr<_246900148_Sema>*, jule::Ptr<_246868c1b_FnIns>);
inline jule::Ptr<_2468aea64_scopeChecker> _2468a4905_newScopeChecker(jule::Ptr<_246900148_Sema>*, jule::Ptr<_246868c1b_FnIns>);
inline jule::Ptr<_2468ad5bd_scopeLabel> _2468a4c79_findLabelParent(jule::Str*, jule::Ptr<_2468aea64_scopeChecker>);
inline jule::Bool _2468a5142_modelIsGotoScope(jule::Any, jule::Ptr<_2468a7760_Scope>*);
inline jule::Bool _2468a54b6_stmtIsGotoScope(jule::Any*, jule::Ptr<_2468a7760_Scope>*);
inline jule::I64 _2468a583a_countMatchType(jule::Ptr<_2468ab896_Match>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Slice<jule::Ptr<_246983ac2_Data>> _2468a5b04_getDatasFromTupleData(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2468a64b7_checkMut(jule::Ptr<_246900148_Sema>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline jule::Bool _2468a69a1_checkAssign(jule::Ptr<_246900148_Sema>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>, jule::Ptr<_246819d43_Token>);
inline jule::Bool _2468a6c6a_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _2468a7034_isValidStForNextSt(jule::Any*);
inline jule::Bool _2468a72ed_stmtIsDef(jule::Any*);
inline jule::U64 _2468c1b31_removeEqFromOp(jule::U64);
inline jule::Ptr<_246922555_Var> _2468c61b8_findVarInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_2469b35e6_TypeAlias> _2468c663b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_246850e23_Struct> _2468c6a6a_findStructInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_246865d17_Fn> _2468c7021_findFnInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_2468790e4_Trait> _2468c7362_findTraitInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_24687b800_Enum> _2468c76d6_findEnumInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_24687d00a_TypeEnum> _2468c7a5a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*);
inline jule::Any _2468c8099_defByIdentPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _2468ce0d3_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _2468ec794_isValidModelForRef(jule::Any*);
inline _24345e617_Log _2468ecc8e_compilerErr(jule::Ptr<_246819d43_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2468ed113_impIsLookupable(jule::Ptr<_2468c8bd2_ImportInfo>*, jule::Str*);
inline void _2468ed443_appendRetVars(jule::Slice<jule::Ptr<_246922555_Var>>*, jule::Ptr<_246868c1b_FnIns>*);
inline void _2468ed72e_appendParamVars(jule::Slice<jule::Ptr<_246922555_Var>>*, jule::Ptr<_246868c1b_FnIns>*);
inline void _2468eda1a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Ptr<_24697d726_SymbolTable> _2468edd8e_findFile(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>*, jule::Ptr<_24682060c_File>*);
inline void _2468ee345_pushSuggestion(_24345e617_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _24692081c_pushImplemented(jule::Ptr<_2468790e4_Trait>, jule::Ptr<_246850e23_Struct>*);
inline void _246920b08_pushImplements(jule::Ptr<_246850e23_Struct>*, jule::Ptr<_2468790e4_Trait>);
inline jule::Bool _246969327_traitHasReferenceReceiver(jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _2469696ac_floatAssignable(jule::Str*, jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _246969a31_sigAssignable(jule::Str, jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _246969de9_unsigAssignable(jule::Str, jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _24696a26d_intAssignable(jule::Str, jule::Ptr<_246983ac2_Data>*);
inline void _24697692d_checkMutRiskOfStructLit(jule::Ptr<_246900148_Sema>*, jule::Ptr<_246858d4e_StructLitExprModel>*);
inline jule::Ptr<_2469b43d8_TypeKind> _24697c4c2_lenKind(void);
inline jule::Bool _24697c824_isGoodValueToInfer(jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_24682e73c_Directive> _2469ac436_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Any _2469ac7ee_findBuiltinsImport(jule::Str*, jule::Ptr<_2468c8bd2_ImportInfo>);
inline void _2469aca30_fitBitsize(jule::Ptr<_246983ac2_Data>*);
inline void _2469acd60_makeStructLitAlloc(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246858d4e_StructLitExprModel>*);
inline jule::Ptr<_246922555_Var> _2469ad1d4_buildErrorVar(jule::Ptr<_2468a7760_Scope>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Any _2469ad558_findBuiltinsSema(jule::Str*, jule::Ptr<_246900148_Sema>);
inline jule::Bool _2469ad822_isOkForShifting(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2469adbeb_isInstancedStruct(jule::Ptr<_246853ba1_StructIns>);
inline jule::Bool _2469ae070_isPtrArithmeticCompatible(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline void _2469ae35b_applyCastKindModel(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline void _2469ae647_applyCastKind(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_246983ac2_Data> _2469ae856_buildVoidData(void);
inline jule::Str _2469aeb20_checkDataForIntegerIndexing(jule::Ptr<_246983ac2_Data>*);
inline void _2469aee0b_applyCastModelByEnum(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_24687b800_Enum>);
inline void _2469b01e7_castConstByType(jule::Str*, jule::Ptr<_246983ac2_Data>*);
inline void _2469b068c_updateModelToGenericIns(jule::Any*, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Bool _2469b0a11_pushSubIdentFromExpr(jule::Any, jule::Ptr<_246830c27_SubIdentTypeDecl>*);
inline jule::Str _2469b0cca_constoa(jule::Ptr<_2445e359c_Const>*);
inline jule::Ptr<_246983ac2_Data> _2469b114e_evalEnumStatic(jule::Ptr<_24687b800_Enum>*, jule::Ptr<_24687ac83_EnumItem>*);
inline jule::Ptr<_246858d4e_StructLitExprModel> _2469b1418_isLitBased(jule::Any*);
inline void _2469b1704_makeImplicitDeref(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246819d43_Token>);
inline void _22b783b84_updateRefer(jule::Ptr<_24686bdd9_ReferenceStack>, jule::Ptr<_246868c1b_FnIns>*, jule::Ptr<_246868c1b_FnIns>*);
inline jule::Bool _2469cedd7_kindUsesGenerics(jule::Ptr<_2469b43d8_TypeKind>*, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>*);
inline jule::Bool _2469d02a0_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Bool _2469d0569_canGetPtr(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2469d08aa_isValidForSptrType(jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2469d0b74_isValidForRef(jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Bool _2469d0e3d_isBuiltinStrConvertable(jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Str _2469d1207_buildLinkPathByTokens(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_2469bc259_Prim> _2469d159d_buildPrimType(jule::Str);
inline void _2469d1b53_applyImplicitCast(jule::Ptr<_2469b43d8_TypeKind>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _2469d1e1c_validTypeForXof(jule::Ptr<_2469b43d8_TypeKind>*);
inline __jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log _2469d4ea8_buildSymbols(jule::Ptr<_24682d472_Ast>*, jule::Trait<_2468c5cbc_Importer>*, jule::Ptr<_246872ebc_symbolBuilder>);
inline __jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log _2469d542b_analyzePackage(jule::Slice<jule::Ptr<_24682d472_Ast>>*, jule::Trait<_2468c5cbc_Importer>*, jule::I64*);
inline __jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log _2469d585a_AnalyzePackage(jule::Slice<jule::Ptr<_24682d472_Ast>>, jule::Trait<_2468c5cbc_Importer>, jule::I64);
inline jule::Ptr<_246868c1b_FnIns> _246b24218_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_2469b35e6_TypeAlias> _246b24526_primTypeAlias(jule::Ptr<_2469b43d8_TypeKind>*);
inline jule::Ptr<_246922555_Var> _246b2812e_findBuiltinVar(jule::Str*);
inline jule::Ptr<_2469b35e6_TypeAlias> _246b28360_findBuiltinTypeAlias(jule::Str);
inline jule::Any _246b28629_findBuiltinDef(jule::Str*);
inline jule::Any _246b288e3_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _246b28bac_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _246b29053_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _246b2931c_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _246b29691_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_246983ac2_Data> _246b29ac0_builtinCallerCommonPlain(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b29e44_builtinCallerError(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*);
inline jule::Ptr<_246983ac2_Data> _246b2a373_builtinCallerOut(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2a7a2_builtinCallerOutln(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2abd1_builtinCallerNew(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2b2b9_builtinCallerPanic(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2b6e8_builtinCallerMake(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2bb27_builtinCallerAppend(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2c111_callerCopySlice(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2c540_builtinCallerCopy(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2c8b4_callerLenSlice(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2cc38_callerLenMap(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2d0ac_callerLenArr(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2d431_callerLenStr(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2d7a5_callerLenComptime(jule::Ptr<_246983ac2_Data>*, jule::I64);
inline jule::Ptr<_246983ac2_Data> _246b2dbd4_builtinCallerLen(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2e058_callerCapSlice(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2e487_builtinCallerCap(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2e971_callerDeleteMap(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b2eda0_builtinCallerDelete(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b302ce_builtinCallerAssert(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b308a6_builtinCallerStdComptimeTypeOf(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b30c6e_builtinCallerStdComptimeValueOf(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b3119d_builtinCallerStdComptimeMatch(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>);
inline jule::Ptr<_246983ac2_Data> _246b31896_builtinCallerStdComptimeRange(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b31cc5_builtinCallerStdComptimeLine(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b32204_builtinCallerStdComptimeFile(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b32633_builtinCallerStdComptimeFiles(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b32a62_builtinCallerStdComptimeTypeAlias(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b32e91_builtinCallerStdMemSizeOf(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b333c0_builtinCallerStdMemAlignOf(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b337ee_builtinCallerStdMemFree(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b33c2d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b3415c_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b3458b_builtinCallerStdDebugOut(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_246983ac2_Data> _246b349ba_builtinCallerStdDebugOutln(jule::Ptr<_2469857b6_Eval>*, jule::Ptr<_24683837d_FnCallExpr>*, jule::Ptr<_246983ac2_Data>*);
inline jule::Ptr<_227b84a06_FileInfo> _227bcae48_ParseFile(jule::Ptr<_24682060c_File>);
inline __jule_tuple_x_24682d472_Ast__jule_tuple_s_24345e617_Log _227bcb520_parseFileset(jule::Ptr<_24682060c_File>);
inline jule::Ptr<_246840341_ScopeTree> _227bcbeb0_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _227bcc345_isSt(jule::Ptr<_246819d43_Token>, jule::Ptr<_246819d43_Token>);
inline jule::Bool _227bcc6b9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _227bcca82_nextStPos(jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::I64);
inline __jule_tuple_sx_246819d43_Token__jule_tuple_bool _227bcce06_skipSt(jule::I64*, jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Slice<jule::Ptr<_227bcd236_stmt>> _227bcd5dd_splitStmts(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Bool _227be68e2_isTypeOp(jule::U64*);
inline jule::Bool _227be6c00_isTypeRange(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Slice<jule::Ptr<_246819d43_Token>> _227be6eb9_getBlockExpr(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline __jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token _227be7382_splitDelim(jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::U64);
inline jule::I64 _227be764b_findLowestPrecOp(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Ptr<_24683607e_IdentExpr> _227be7915_buildIdentExpr(jule::Ptr<_246819d43_Token>*);
inline __jule_tuple_sx_246819d43_Token__jule_tuple_int _227be7bce_getRangeExprTokens(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline jule::Bool _227be89e3_checkAssignTokens(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline _24345e617_Log _227be9be2_makeErr(jule::I64, jule::I64, jule::Ptr<_24682060c_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_246819d43_Token>> _227bea1dc_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline __jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token _227bea4a6_rangeLast(jule::Slice<jule::Ptr<_246819d43_Token>>*);
inline __jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log _227bea95c_parts(jule::Slice<jule::Ptr<_246819d43_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _227beac26_getCloseOfBrace(jule::U64);
inline _24345e617_Log _227beb155_compilerErr(jule::Ptr<_246819d43_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _227beb4eb_pushSuggestion(_24345e617_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_246830320_TypeDecl> _227c0d453_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _246c29c25_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _246c29d68_checkArch(jule::Str);
inline jule::Bool _246c45328_isPassFileAnnotation(jule::Str);
inline void _246c464a0_setOsVars(jule::Slice<jule::Str>*);
inline void _246c46725_setArchVars(jule::Slice<jule::Str>*);
inline void _246c46a11_initVars(jule::Slice<jule::Str>*, _246c46181_CompileInfo*);
inline jule::Slice<jule::U8> _227c173e6_readBuff(jule::Str);
inline _24345e617_Log _227c176c1_flatCompilerErr(jule::Str);
inline void _227c1bede_pushPasses(jule::Ptr<_2468cbb08_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _227c1c3a7_getAllUniquePasses(jule::Ptr<_2468cbb08_Package>*, jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>>);
inline _246c46181_CompileInfo _227c1c5b6_buildCompileInfo(void);
inline void _227d7cd75_EliminateDefines(jule::Ptr<_227c1a66e_IR>*);
inline jule::Ptr<_24682e73c_Directive> _227d7d23d_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Bool _227d7d5b2_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Bool _227d7d97a_isTraitMethod(jule::Ptr<_246853ba1_StructIns>*, jule::Ptr<_246868c1b_FnIns>*);
inline void _227d8297e_eliminateDeadCodeOfScope(jule::Ptr<_2468a7760_Scope>);
inline void _227d82c04_eliminateScopeFunctions(jule::Slice<jule::Ptr<_246865d17_Fn>>*);
inline void _227d82e35_eliminateFunctionsScopePackage(jule::Ptr<_2468cbb08_Package>*);
inline void _227d831dd_eliminateScopePackage(jule::Ptr<_2468cbb08_Package>*);
inline void _227d8341e_EliminateScopes(jule::Ptr<_227c1a66e_IR>*);
inline jule::Uintptr _246b34d1c_typeData(jule::Any*);
inline jule::Bool _246b351d5_equalConst(jule::Ptr<_2445e359c_Const>, jule::Ptr<_2445e359c_Const>);
inline jule::Bool _246b35559_equalCasting(jule::Ptr<_2468596ce_CastingExprModel>, jule::Ptr<_2468596ce_CastingExprModel>);
inline jule::Bool _246b35922_equalUnary(jule::Ptr<_24685847a_UnaryExprModel>, jule::Ptr<_24685847a_UnaryExprModel>);
inline jule::Bool _246b35c96_equalIndexing(jule::Ptr<_24685a911_IndexingExprModel>, jule::Ptr<_24685a911_IndexingExprModel>);
inline jule::Bool _246b3611a_equalBinary(jule::Ptr<_2468580a1_BinopExprModel>, jule::Ptr<_2468580a1_BinopExprModel>);
inline jule::Bool _246b3648e_equalModels(jule::Any, jule::Any);
inline jule::Bool _246b3e7e9_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _246b3eb07_isConstantValidConditionalCase(jule::Ptr<_2468a7b7d_If>*);
inline jule::Bool _246b3edc1_isUnreachableExpr(jule::Any*);
inline jule::Bool _246b40212_isConstantValidMatchCase(jule::Ptr<_2468ac4ce_Case>*);
inline jule::Bool _246b404cb_isUnreachableConditionalCase(jule::Ptr<_2468a7b7d_If>*);
inline jule::Bool _246b40795_isUnreachableMatchCase(jule::Ptr<_2468ac4ce_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _246b485b1_checkForBitShiftOpt(jule::Ptr<_246857aa6_OperandExprModel>*, jule::Ptr<_246857aa6_OperandExprModel>*);
inline jule::Bool _246b48979_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _246b4b295_PushOptLevel(jule::I64);
inline void _227d8c879_detectEnabled(void);
inline void _227db6672_Throw(jule::Str);
inline jule::U64 _2287d0299_unix(void);
inline jule::Bool _2287129a1_isCopyOptimizable(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _228712d69_isIterCopyOptimizable(jule::Ptr<_246983ac2_Data>*, jule::Ptr<_246922555_Var>*);
inline jule::Str _228722eab_decomposeCommonEsq(jule::U8);
inline jule::Str _2287232b9_sbtoa(jule::U8);
inline void _2287235a5_cstrBytes(_2433b0c50_StrBuilder*, jule::Str);
inline void _2287238d5_cstrLit(_2433b0c50_StrBuilder*, jule::Str);
inline void _228723c7b_ftoa(_2433b0c50_StrBuilder*, jule::F64, jule::I64);
inline void _228724067_itoa(_2433b0c50_StrBuilder*, jule::I64);
inline void _228724353_utoa(_2433b0c50_StrBuilder*, jule::U64);
inline jule::Bool _22872472c_isForwarded(jule::Ptr<_2468a7760_Scope>*);
inline jule::Bool _2287249e6_isExprComesFromBind(jule::Ptr<_246983ac2_Data>*);
inline jule::Bool _228724cb0_isAny(jule::Ptr<_2469b43d8_TypeKind>*);
inline void _2287e4896_iterFiles(jule::Ptr<_2468cbb08_Package>*, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>);
inline jule::Slice<jule::U8> _2287e4ba4_concatAllParts(jule::Slice<jule::Ptr<_246819d43_Token>>);
inline jule::Bool _2287e5028_containsTraitMethod(jule::Ptr<_2468790e4_Trait>*, jule::Str*);
inline void _2287e5358_pushMethodsFromInherit(jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_2468790e4_Trait>*);
inline void _2287e5644_pushMethodsFromInherits(jule::Ptr<_2468790e4_Trait>*, jule::Ptr<_2468790e4_Trait>*);
inline jule::Bool _2287e590d_isOpMethod(jule::Ptr<_246865d17_Fn>*);
inline jule::Bool _2287e5bc7_isHeadDecl(jule::Ptr<_246865d17_Fn>*);
inline jule::Ptr<_24682e73c_Directive> _228804cb3_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Bool _22880517b_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>*, jule::Str);
inline jule::Bool _228805445_shouldInitialized(jule::Ptr<_2469b43d8_TypeKind>*);
inline void _24357a1d3_printErrorMessage(jule::Str);
inline void _24357a458_help(jule::Slice<jule::Str>*);
inline void _24357a689_version(jule::Slice<jule::Str>*);
inline void _24357a887_toolDistos(void);
inline void _24357aa0d_toolDistarch(void);
inline void _24357ac3e_tool(jule::Slice<jule::Str>*);
inline void _24357ae70_julenv(jule::Slice<jule::Str>*);
inline void _24357b27d_mod(jule::Slice<jule::Str>*);
inline jule::Bool _24357b547_processCommand(jule::Slice<jule::Str>*);
inline void _24357b6bd_showInfo(void);
void entry_point(void);
inline void _22887772b_init(void);
inline jule::Ptr<_241ee1156_File> _228877a06_openOutput(jule::Str*);
inline void _228877b7c_clearObjects(void);
inline void _228877eac_compileIr(jule::Str, jule::Str);
inline jule::Bool _228878276_isCppSourceFile(jule::Str);
inline void _2288784a7_pushCompCmdClang(_2433b0c50_StrBuilder*);
inline void _2288786d8_pushCompCmdGcc(_2433b0c50_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _228878b6c_genCompileCmd(jule::Str, jule::Ptr<_227c1a66e_IR>*);
inline jule::Str _228878d7b_getCompilePath(void);
inline void _2288790ac_applyTargetIndependentOptimizations(jule::Ptr<_227c1a66e_IR>*);
inline void _228879233_checkCompilerFlag(void);
inline void _228879464_checkTargetArch(jule::Str);
inline void _228879695_checkTargetOs(jule::Str);
inline void _2288798c6_checkTargetFlag(jule::Str*);
inline void _228879b07_checkOptFlag(jule::Str*);
inline void _228879e8c_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _22887a201_checkFlags(jule::Slice<jule::Str>*);
inline void _22887a432_setupSemaFlags(jule::I64*);
inline jule::Ptr<_227c1a66e_IR> _22887a6eb_buildIr(jule::Slice<jule::Str>*);
inline void _22887a92c_compileCommand(jule::Slice<jule::Str>*);


struct _246880e42_comptimeRangeKindMptrData {
	void(*_246880639_ready)(jule::Trait<_246880e42_comptimeRangeKind>, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
	void(*_246880a57_step)(jule::Trait<_246880e42_comptimeRangeKind>, jule::I64, jule::Ptr<_246922555_Var>*, jule::Ptr<_246922555_Var>*);
	jule::I64(*_246880cdd_len)(jule::Trait<_246880e42_comptimeRangeKind>);
};

struct _2468c5cbc_ImporterMptrData {
	void(*_2468c4a9b_SetModPath)(jule::Trait<_2468c5cbc_Importer>, jule::Str);
	jule::Str(*_2468c4d32_GetModPath)(jule::Trait<_2468c5cbc_Importer>);
	jule::Str(*_2468c5173_ModById)(jule::Trait<_2468c5cbc_Importer>, jule::I64);
	jule::Ptr<_2468c8bd2_ImportInfo>(*_2468c54b4_GetImport)(jule::Trait<_2468c5cbc_Importer>, jule::Str);
	__jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log(*_2468c58b0_ImportPackage)(jule::Trait<_2468c5cbc_Importer>, jule::Str, jule::Bool);
	void(*_2468c5b68_Imported)(jule::Trait<_2468c5cbc_Importer>, jule::Ptr<_2468c8bd2_ImportInfo>);
};

struct _2469b3e32_KindMptrData {
	jule::Str(*_2469b398c_Str)(jule::Trait<_2469b3e32_Kind>);
	jule::Bool(*_2469b3ccd_Equal)(jule::Trait<_2469b3e32_Kind>, jule::Ptr<_2469b43d8_TypeKind>);
};

struct _2469d41b6_LookupMptrData {
	jule::Ptr<_2468c8bd2_ImportInfo>(*_2469d24a0_SelectPackage)(jule::Trait<_2469d41b6_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>);
	jule::Ptr<_246922555_Var>(*_2469d289b_FindVar)(jule::Trait<_2469d41b6_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2469b35e6_TypeAlias>(*_2469d2c97_FindTypeAlias)(jule::Trait<_2469d41b6_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246850e23_Struct>(*_2469d3193_FindStruct)(jule::Trait<_2469d41b6_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_246865d17_Fn>(*_2469d358e_FindFn)(jule::Trait<_2469d41b6_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_2468790e4_Trait>(*_2469d38d0_FindTrait)(jule::Trait<_2469d41b6_Lookup>, jule::Str);
	jule::Ptr<_24687b800_Enum>(*_2469d3c21_FindEnum)(jule::Trait<_2469d41b6_Lookup>, jule::Str);
	jule::Ptr<_24687d00a_TypeEnum>(*_2469d4062_FindTypeEnum)(jule::Trait<_2469d41b6_Lookup>, jule::Str);
};

struct _2288704b0_CommonFlagMptrData {
	jule::Str(*_22883d769_Name)(jule::Trait<_2288704b0_CommonFlag>);
	jule::I32(*_22883d912_Short)(jule::Trait<_2288704b0_CommonFlag>);
	jule::Str(*_228870229_What)(jule::Trait<_2288704b0_CommonFlag>);
	void(*_22887036c_Reset)(jule::Trait<_2288704b0_CommonFlag>);
};



inline void _246880639_ready_comptimeRangeKind_0(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_24688442e_ready(_self_.safe_ptr<_2468837e6_comptimeStructFields>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_0(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_24688484c_step(_self_.safe_ptr<_2468837e6_comptimeStructFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_0(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _246884ad3_len(_self_.safe_ptr<_2468837e6_comptimeStructFields>());
}
inline void _246880639_ready_comptimeRangeKind_1(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_2468876da_ready(_self_.safe_ptr<_246886aa2_comptimeStatics>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_1(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_246887b08_step(_self_.safe_ptr<_246886aa2_comptimeStatics>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_1(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _246887d8e_len(_self_.safe_ptr<_246886aa2_comptimeStatics>());
}
inline void _246880639_ready_comptimeRangeKind_2(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_24688a17c_ready(_self_.safe_ptr<_246889544_comptimeEnumFields>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_2(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_24688a59a_step(_self_.safe_ptr<_246889544_comptimeEnumFields>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_2(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _24688a831_len(_self_.safe_ptr<_246889544_comptimeEnumFields>());
}
inline void _246880639_ready_comptimeRangeKind_3(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_24688d9dd_ready(_self_.safe_ptr<_24688cda5_comptimeParams>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_3(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_24688de0b_step(_self_.safe_ptr<_24688cda5_comptimeParams>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_3(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _24688e192_len(_self_.safe_ptr<_24688cda5_comptimeParams>());
}
inline void _246880639_ready_comptimeRangeKind_4(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_2468900d8_ready(_self_.safe_ptr<_24688e4a0_comptimeTypeInfos>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_4(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_246890506_step(_self_.safe_ptr<_24688e4a0_comptimeTypeInfos>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_4(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _24689078c_len(_self_.safe_ptr<_24688e4a0_comptimeTypeInfos>());
}
inline void _246880639_ready_comptimeRangeKind_5(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::Ptr<_246922555_Var>* _2429_keyA, jule::Ptr<_246922555_Var>* _2446_keyB) {
	_24689a544_ready(_self_.safe_ptr<_24689990b_comptimeFiles>(), _2429_keyA, _2446_keyB);
}
inline void _246880a57_step_comptimeRangeKind_5(jule::Trait<_246880e42_comptimeRangeKind> _self_, jule::I64 _2523_i, jule::Ptr<_246922555_Var>* _2536_keyA, jule::Ptr<_246922555_Var>* _2553_keyB) {
	_24689a962_step(_self_.safe_ptr<_24689990b_comptimeFiles>(), _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I64 _246880cdd_len_comptimeRangeKind_5(jule::Trait<_246880e42_comptimeRangeKind> _self_) {
	return _24689abe8_len(_self_.safe_ptr<_24689990b_comptimeFiles>());
}
inline void _2468c4a9b_SetModPath_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_, jule::Str _1729_path) {
	_227c1877c_SetModPath(_self_.safe_ptr<_227c17baa_JuleImporter>(), _1729_path);
}
inline jule::Str _2468c4d32_GetModPath_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_) {
	return _227c18a13_GetModPath(_self_.safe_ptr<_227c17baa_JuleImporter>());
}
inline jule::Str _2468c5173_ModById_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_, jule::I64 _2522_id) {
	return _227c18d54_ModById(_self_.safe_ptr<_227c17baa_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2468c54b4_GetImport_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_, jule::Str _3128_path) {
	return _227c19195_GetImport(_self_.safe_ptr<_227c17baa_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log _2468c58b0_ImportPackage_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _227c19591_ImportPackage(_self_.safe_ptr<_227c17baa_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _2468c5b68_Imported_Importer_0(jule::Trait<_2468c5cbc_Importer> _self_, jule::Ptr<_2468c8bd2_ImportInfo> _4131__0) {
	_227c19849_Imported(_self_.safe_ptr<_227c17baa_JuleImporter>(), _4131__0);
}
inline jule::Str _2469b398c_Str_Kind_0(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246854025_Str(_self_.safe_ptr<_246853ba1_StructIns>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_0(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246854366_Equal(_self_.data.as<_246853ba1_StructIns>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_1(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24686905c_Str(_self_.safe_ptr<_246868c1b_FnIns>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_1(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24686939d_Equal(_self_.data.as<_246868c1b_FnIns>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_2(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2468794ac_Str(_self_.safe_ptr<_2468790e4_Trait>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_2(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2468797ed_Equal(_self_.data.as<_2468790e4_Trait>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_3(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24687bb74_Str(_self_.safe_ptr<_24687b800_Enum>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_3(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24687beb5_Equal(_self_.data.as<_24687b800_Enum>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_4(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24687d34b_Str(_self_.safe_ptr<_24687d00a_TypeEnum>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_4(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24687d68c_Equal(_self_.data.as<_24687d00a_TypeEnum>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_5(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24687ed0e_Str(_self_.safe_ptr<_24687e946_comptimeMatch>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_5(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246880150_Equal(_self_.data.as<_24687e946_comptimeMatch>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_6(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2468814d6_Str(_self_.safe_ptr<_246881162_comptimeRange>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_6(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246881827_Equal(_self_.data.as<_246881162_comptimeRange>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_7(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246881eed_Str(_self_.safe_ptr<_246881b35_comptimeStructField>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_7(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24688233e_Equal(_self_.data.as<_246881b35_comptimeStructField>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_8(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246883b6a_Str(_self_.safe_ptr<_2468837e6_comptimeStructFields>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_8(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246883eab_Equal(_self_.data.as<_2468837e6_comptimeStructFields>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_9(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246885265_Str(_self_.safe_ptr<_246884de1_comptimeStatic>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_9(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2468855a6_Equal(_self_.data.as<_246884de1_comptimeStatic>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_10(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246886e26_Str(_self_.safe_ptr<_246886aa2_comptimeStatics>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_10(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246887267_Equal(_self_.data.as<_246886aa2_comptimeStatics>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_11(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246888631_Str(_self_.safe_ptr<_24688819c_comptimeEnumField>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_11(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246888972_Equal(_self_.data.as<_24688819c_comptimeEnumField>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_12(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2468898b8_Str(_self_.safe_ptr<_246889544_comptimeEnumFields>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_12(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246889c09_Equal(_self_.data.as<_246889544_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_13(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24688aeb3_Str(_self_.safe_ptr<_24688ab3e_comptimeParam>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_13(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24688b304_Equal(_self_.data.as<_24688ab3e_comptimeParam>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_14(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24688d229_Str(_self_.safe_ptr<_24688cda5_comptimeParams>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_14(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24688d56a_Equal(_self_.data.as<_24688cda5_comptimeParams>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_15(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24688e824_Str(_self_.safe_ptr<_24688e4a0_comptimeTypeInfos>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_15(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24688eb65_Equal(_self_.data.as<_24688e4a0_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_16(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246890e1e_Str(_self_.safe_ptr<_246890a9a_comptimeTypeInfo>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_16(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246891260_Equal(_self_.data.as<_246890a9a_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_17(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246897431_Str(_self_.safe_ptr<_2468970ac_comptimeValue>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_17(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _246897772_Equal(_self_.data.as<_2468970ac_comptimeValue>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_18(jule::Trait<_2469b3e32_Kind> _self_) {
	return _246899c80_Str(_self_.safe_ptr<_24689990b_comptimeFiles>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_18(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24689a0c1_Equal(_self_.data.as<_24689990b_comptimeFiles>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_19(jule::Trait<_2469b3e32_Kind> _self_) {
	return _24689b49b_Str(_self_.safe_ptr<_24689b006_comptimeFile>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_19(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _24689b7dc_Equal(_self_.data.as<_24689b006_comptimeFile>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_20(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469b47a1_Str(_self_.safe_ptr<_2469b43d8_TypeKind>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_20(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469b4ae2_Equal(_self_.data.as<_2469b43d8_TypeKind>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_21(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469bc59a_Str(_self_.safe_ptr<_2469bc259_Prim>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_21(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469bc8db_Equal(_self_.data.as<_2469bc259_Prim>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_22(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c1109_Str(_self_.safe_ptr<_2469c0c85_Sptr>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_22(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c144a_Equal(_self_.data.as<_2469c0c85_Sptr>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_23(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c1bdc_Str(_self_.safe_ptr<_2469c1758_Slc>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_23(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c202d_Equal(_self_.data.as<_2469c1758_Slc>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_24(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c26c1_Str(_self_.safe_ptr<_2469c234c_Tuple>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_24(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c2a12_Equal(_self_.data.as<_2469c234c_Tuple>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_25(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c3271_Str(_self_.safe_ptr<_2469c2dec_Map>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_25(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c35b2_Equal(_self_.data.as<_2469c2dec_Map>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_26(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c3ded_Str(_self_.safe_ptr<_2469c3a79_Arr>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_26(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c423e_Equal(_self_.data.as<_2469c3a79_Arr>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_27(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2469c48c1_Str(_self_.safe_ptr<_2469c454c_Ptr>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_27(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2469c4c12_Equal(_self_.data.as<_2469c454c_Ptr>(), _5621_other);
}
inline jule::Str _2469b398c_Str_Kind_28(jule::Trait<_2469b3e32_Kind> _self_) {
	return _2287e714b_Str(_self_.safe_ptr<_2287e6cc7_customType>());
}
inline jule::Bool _2469b3ccd_Equal_Kind_28(jule::Trait<_2469b3e32_Kind> _self_, jule::Ptr<_2469b43d8_TypeKind> _5621_other) {
	return _2287e748c_Equal(_self_.data.as<_2287e6cc7_customType>(), _5621_other);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469d24a0_SelectPackage_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _932_selector) {
	return _2468b0009_SelectPackage(_self_.safe_ptr<_2468aea64_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_246922555_Var> _2469d289b_FindVar_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _2468b0405_FindVar(_self_.safe_ptr<_2468aea64_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2469b35e6_TypeAlias> _2469d2c97_FindTypeAlias_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _2468b0801_FindTypeAlias(_self_.safe_ptr<_2468aea64_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_246850e23_Struct> _2469d3193_FindStruct_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2468b0bec_FindStruct(_self_.safe_ptr<_2468aea64_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_246865d17_Fn> _2469d358e_FindFn_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _2468b10e8_FindFn(_self_.safe_ptr<_2468aea64_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_2468790e4_Trait> _2469d38d0_FindTrait_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2928_ident) {
	return _2468b1439_FindTrait(_self_.safe_ptr<_2468aea64_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_24687b800_Enum> _2469d3c21_FindEnum_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3327_ident) {
	return _2468b177a_FindEnum(_self_.safe_ptr<_2468aea64_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_24687d00a_TypeEnum> _2469d4062_FindTypeEnum_Lookup_0(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3731_ident) {
	return _2468b1abb_FindTypeEnum(_self_.safe_ptr<_2468aea64_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469d24a0_SelectPackage_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _932_selector) {
	return _2468c91bb_SelectPackage(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_246922555_Var> _2469d289b_FindVar_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _2468c95b7_FindVar(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2469b35e6_TypeAlias> _2469d2c97_FindTypeAlias_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _2468c99b3_FindTypeAlias(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_246850e23_Struct> _2469d3193_FindStruct_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2468c9dae_FindStruct(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_246865d17_Fn> _2469d358e_FindFn_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _2468ca2aa_FindFn(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_2468790e4_Trait> _2469d38d0_FindTrait_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2928_ident) {
	return _2468ca5eb_FindTrait(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_24687b800_Enum> _2469d3c21_FindEnum_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3327_ident) {
	return _2468ca93c_FindEnum(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_24687d00a_TypeEnum> _2469d4062_FindTypeEnum_Lookup_1(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3731_ident) {
	return _2468cac7d_FindTypeEnum(_self_.safe_ptr<_2468c8bd2_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469d24a0_SelectPackage_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _932_selector) {
	return _2468cc09d_SelectPackage(_self_.safe_ptr<_2468cbb08_Package>(), _932_selector);
}
inline jule::Ptr<_246922555_Var> _2469d289b_FindVar_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _2468cc499_FindVar(_self_.safe_ptr<_2468cbb08_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2469b35e6_TypeAlias> _2469d2c97_FindTypeAlias_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _2468cc895_FindTypeAlias(_self_.safe_ptr<_2468cbb08_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_246850e23_Struct> _2469d3193_FindStruct_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2468ccc91_FindStruct(_self_.safe_ptr<_2468cbb08_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_246865d17_Fn> _2469d358e_FindFn_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _2468cd18c_FindFn(_self_.safe_ptr<_2468cbb08_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_2468790e4_Trait> _2469d38d0_FindTrait_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2928_ident) {
	return _2468cd4cd_FindTrait(_self_.safe_ptr<_2468cbb08_Package>(), _2928_ident);
}
inline jule::Ptr<_24687b800_Enum> _2469d3c21_FindEnum_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3327_ident) {
	return _2468cd81e_FindEnum(_self_.safe_ptr<_2468cbb08_Package>(), _3327_ident);
}
inline jule::Ptr<_24687d00a_TypeEnum> _2469d4062_FindTypeEnum_Lookup_2(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3731_ident) {
	return _2468cdb60_FindTypeEnum(_self_.safe_ptr<_2468cbb08_Package>(), _3731_ident);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469d24a0_SelectPackage_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _932_selector) {
	return _2469005dd_SelectPackage(_self_.safe_ptr<_246900148_Sema>(), _932_selector);
}
inline jule::Ptr<_246922555_Var> _2469d289b_FindVar_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _2469009d9_FindVar(_self_.safe_ptr<_246900148_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2469b35e6_TypeAlias> _2469d2c97_FindTypeAlias_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _246900dd5_FindTypeAlias(_self_.safe_ptr<_246900148_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_246850e23_Struct> _2469d3193_FindStruct_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _2469012d1_FindStruct(_self_.safe_ptr<_246900148_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_246865d17_Fn> _2469d358e_FindFn_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _2469016cc_FindFn(_self_.safe_ptr<_246900148_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_2468790e4_Trait> _2469d38d0_FindTrait_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2928_ident) {
	return _246901a1d_FindTrait(_self_.safe_ptr<_246900148_Sema>(), _2928_ident);
}
inline jule::Ptr<_24687b800_Enum> _2469d3c21_FindEnum_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3327_ident) {
	return _246901d5e_FindEnum(_self_.safe_ptr<_246900148_Sema>(), _3327_ident);
}
inline jule::Ptr<_24687d00a_TypeEnum> _2469d4062_FindTypeEnum_Lookup_3(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3731_ident) {
	return _2469021a0_FindTypeEnum(_self_.safe_ptr<_246900148_Sema>(), _3731_ident);
}
inline jule::Ptr<_2468c8bd2_ImportInfo> _2469d24a0_SelectPackage_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _932_selector) {
	return _24697dc10_SelectPackage(_self_.safe_ptr<_24697d726_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_246922555_Var> _2469d289b_FindVar_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _24697e10b_FindVar(_self_.safe_ptr<_24697d726_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_2469b35e6_TypeAlias> _2469d2c97_FindTypeAlias_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _24697e507_FindTypeAlias(_self_.safe_ptr<_24697d726_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_246850e23_Struct> _2469d3193_FindStruct_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _24697e903_FindStruct(_self_.safe_ptr<_24697d726_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_246865d17_Fn> _2469d358e_FindFn_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _24697ecee_FindFn(_self_.safe_ptr<_24697d726_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_2468790e4_Trait> _2469d38d0_FindTrait_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _2928_ident) {
	return _246980140_FindTrait(_self_.safe_ptr<_24697d726_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_24687b800_Enum> _2469d3c21_FindEnum_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3327_ident) {
	return _246980481_FindEnum(_self_.safe_ptr<_24697d726_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_24687d00a_TypeEnum> _2469d4062_FindTypeEnum_Lookup_4(jule::Trait<_2469d41b6_Lookup> _self_, jule::Str _3731_ident) {
	return _2469807c2_FindTypeEnum(_self_.safe_ptr<_24697d726_SymbolTable>(), _3731_ident);
}
inline jule::Str _22883d769_Name_CommonFlag_0(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c912482_Name(_self_.safe_ptr<_22c912064_Flag>());
}
inline jule::I32 _22883d912_Short_CommonFlag_0(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c91288e_Short(_self_.safe_ptr<_22c912064_Flag>());
}
inline jule::Str _228870229_What_CommonFlag_0(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c9125d6_What(_self_.safe_ptr<_22c912064_Flag>());
}
inline void _22887036c_Reset_CommonFlag_0(jule::Trait<_2288704b0_CommonFlag> _self_) {
	_22c91273a_Reset(_self_.safe_ptr<_22c912064_Flag>());
}
inline jule::Str _22883d769_Name_CommonFlag_1(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c9157e8_Name(_self_.safe_ptr<_22c915bb1_Flag>());
}
inline jule::I32 _22883d912_Short_CommonFlag_1(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c9160e0_Short(_self_.safe_ptr<_22c915bb1_Flag>());
}
inline jule::Str _228870229_What_CommonFlag_1(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c91593b_What(_self_.safe_ptr<_22c915bb1_Flag>());
}
inline void _22887036c_Reset_CommonFlag_1(jule::Trait<_2288704b0_CommonFlag> _self_) {
	_22c915e9c_Reset(_self_.safe_ptr<_22c915bb1_Flag>());
}
inline jule::Str _22883d769_Name_CommonFlag_2(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c918ee4_Name(_self_.safe_ptr<_22c9193ac_Flag>());
}
inline jule::I32 _22883d912_Short_CommonFlag_2(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c9197db_Short(_self_.safe_ptr<_22c9193ac_Flag>());
}
inline jule::Str _228870229_What_CommonFlag_2(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c919137_What(_self_.safe_ptr<_22c9193ac_Flag>());
}
inline void _22887036c_Reset_CommonFlag_2(jule::Trait<_2288704b0_CommonFlag> _self_) {
	_22c919698_Reset(_self_.safe_ptr<_22c9193ac_Flag>());
}
inline jule::Str _22883d769_Name_CommonFlag_3(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c91c734_Name(_self_.safe_ptr<_22c91caec_Flag>());
}
inline jule::I32 _22883d912_Short_CommonFlag_3(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c91d02b_Short(_self_.safe_ptr<_22c91caec_Flag>());
}
inline jule::Str _228870229_What_CommonFlag_3(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c91c877_What(_self_.safe_ptr<_22c91caec_Flag>());
}
inline void _22887036c_Reset_CommonFlag_3(jule::Trait<_2288704b0_CommonFlag> _self_) {
	_22c91cdd8_Reset(_self_.safe_ptr<_22c91caec_Flag>());
}
inline jule::Str _22883d769_Name_CommonFlag_4(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c920e30_Name(_self_.safe_ptr<_22c9212e8_Flag>());
}
inline jule::I32 _22883d912_Short_CommonFlag_4(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c921727_Short(_self_.safe_ptr<_22c9212e8_Flag>());
}
inline jule::Str _228870229_What_CommonFlag_4(jule::Trait<_2288704b0_CommonFlag> _self_) {
	return _22c921073_What(_self_.safe_ptr<_22c9212e8_Flag>());
}
inline void _22887036c_Reset_CommonFlag_4(jule::Trait<_2288704b0_CommonFlag> _self_) {
	_22c9215d4_Reset(_self_.safe_ptr<_22c9212e8_Flag>());
}


static _246880e42_comptimeRangeKindMptrData _246880e42_comptimeRangeKind_mptr_data[] = {
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_0,
		._246880a57_step=_246880a57_step_comptimeRangeKind_0,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_0,
	},
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_1,
		._246880a57_step=_246880a57_step_comptimeRangeKind_1,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_1,
	},
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_2,
		._246880a57_step=_246880a57_step_comptimeRangeKind_2,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_2,
	},
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_3,
		._246880a57_step=_246880a57_step_comptimeRangeKind_3,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_3,
	},
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_4,
		._246880a57_step=_246880a57_step_comptimeRangeKind_4,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_4,
	},
	{
		._246880639_ready=_246880639_ready_comptimeRangeKind_5,
		._246880a57_step=_246880a57_step_comptimeRangeKind_5,
		._246880cdd_len=_246880cdd_len_comptimeRangeKind_5,
	},
};
static _2468c5cbc_ImporterMptrData _2468c5cbc_Importer_mptr_data[] = {
	{
		._2468c4a9b_SetModPath=_2468c4a9b_SetModPath_Importer_0,
		._2468c4d32_GetModPath=_2468c4d32_GetModPath_Importer_0,
		._2468c5173_ModById=_2468c5173_ModById_Importer_0,
		._2468c54b4_GetImport=_2468c54b4_GetImport_Importer_0,
		._2468c58b0_ImportPackage=_2468c58b0_ImportPackage_Importer_0,
		._2468c5b68_Imported=_2468c5b68_Imported_Importer_0,
	},
};
static _2469b3e32_KindMptrData _2469b3e32_Kind_mptr_data[] = {
	{
		._2469b398c_Str=_2469b398c_Str_Kind_0,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_0,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_1,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_1,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_2,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_2,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_3,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_3,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_4,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_4,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_5,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_5,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_6,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_6,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_7,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_7,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_8,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_8,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_9,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_9,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_10,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_10,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_11,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_11,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_12,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_12,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_13,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_13,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_14,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_14,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_15,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_15,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_16,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_16,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_17,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_17,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_18,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_18,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_19,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_19,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_20,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_20,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_21,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_21,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_22,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_22,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_23,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_23,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_24,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_24,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_25,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_25,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_26,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_26,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_27,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_27,
	},
	{
		._2469b398c_Str=_2469b398c_Str_Kind_28,
		._2469b3ccd_Equal=_2469b3ccd_Equal_Kind_28,
	},
};
static _2469d41b6_LookupMptrData _2469d41b6_Lookup_mptr_data[] = {
	{
		._2469d24a0_SelectPackage=_2469d24a0_SelectPackage_Lookup_0,
		._2469d289b_FindVar=_2469d289b_FindVar_Lookup_0,
		._2469d2c97_FindTypeAlias=_2469d2c97_FindTypeAlias_Lookup_0,
		._2469d3193_FindStruct=_2469d3193_FindStruct_Lookup_0,
		._2469d358e_FindFn=_2469d358e_FindFn_Lookup_0,
		._2469d38d0_FindTrait=_2469d38d0_FindTrait_Lookup_0,
		._2469d3c21_FindEnum=_2469d3c21_FindEnum_Lookup_0,
		._2469d4062_FindTypeEnum=_2469d4062_FindTypeEnum_Lookup_0,
	},
	{
		._2469d24a0_SelectPackage=_2469d24a0_SelectPackage_Lookup_1,
		._2469d289b_FindVar=_2469d289b_FindVar_Lookup_1,
		._2469d2c97_FindTypeAlias=_2469d2c97_FindTypeAlias_Lookup_1,
		._2469d3193_FindStruct=_2469d3193_FindStruct_Lookup_1,
		._2469d358e_FindFn=_2469d358e_FindFn_Lookup_1,
		._2469d38d0_FindTrait=_2469d38d0_FindTrait_Lookup_1,
		._2469d3c21_FindEnum=_2469d3c21_FindEnum_Lookup_1,
		._2469d4062_FindTypeEnum=_2469d4062_FindTypeEnum_Lookup_1,
	},
	{
		._2469d24a0_SelectPackage=_2469d24a0_SelectPackage_Lookup_2,
		._2469d289b_FindVar=_2469d289b_FindVar_Lookup_2,
		._2469d2c97_FindTypeAlias=_2469d2c97_FindTypeAlias_Lookup_2,
		._2469d3193_FindStruct=_2469d3193_FindStruct_Lookup_2,
		._2469d358e_FindFn=_2469d358e_FindFn_Lookup_2,
		._2469d38d0_FindTrait=_2469d38d0_FindTrait_Lookup_2,
		._2469d3c21_FindEnum=_2469d3c21_FindEnum_Lookup_2,
		._2469d4062_FindTypeEnum=_2469d4062_FindTypeEnum_Lookup_2,
	},
	{
		._2469d24a0_SelectPackage=_2469d24a0_SelectPackage_Lookup_3,
		._2469d289b_FindVar=_2469d289b_FindVar_Lookup_3,
		._2469d2c97_FindTypeAlias=_2469d2c97_FindTypeAlias_Lookup_3,
		._2469d3193_FindStruct=_2469d3193_FindStruct_Lookup_3,
		._2469d358e_FindFn=_2469d358e_FindFn_Lookup_3,
		._2469d38d0_FindTrait=_2469d38d0_FindTrait_Lookup_3,
		._2469d3c21_FindEnum=_2469d3c21_FindEnum_Lookup_3,
		._2469d4062_FindTypeEnum=_2469d4062_FindTypeEnum_Lookup_3,
	},
	{
		._2469d24a0_SelectPackage=_2469d24a0_SelectPackage_Lookup_4,
		._2469d289b_FindVar=_2469d289b_FindVar_Lookup_4,
		._2469d2c97_FindTypeAlias=_2469d2c97_FindTypeAlias_Lookup_4,
		._2469d3193_FindStruct=_2469d3193_FindStruct_Lookup_4,
		._2469d358e_FindFn=_2469d358e_FindFn_Lookup_4,
		._2469d38d0_FindTrait=_2469d38d0_FindTrait_Lookup_4,
		._2469d3c21_FindEnum=_2469d3c21_FindEnum_Lookup_4,
		._2469d4062_FindTypeEnum=_2469d4062_FindTypeEnum_Lookup_4,
	},
};
static _2288704b0_CommonFlagMptrData _2288704b0_CommonFlag_mptr_data[] = {
	{
		._22883d769_Name=_22883d769_Name_CommonFlag_0,
		._22883d912_Short=_22883d912_Short_CommonFlag_0,
		._228870229_What=_228870229_What_CommonFlag_0,
		._22887036c_Reset=_22887036c_Reset_CommonFlag_0,
	},
	{
		._22883d769_Name=_22883d769_Name_CommonFlag_1,
		._22883d912_Short=_22883d912_Short_CommonFlag_1,
		._228870229_What=_228870229_What_CommonFlag_1,
		._22887036c_Reset=_22887036c_Reset_CommonFlag_1,
	},
	{
		._22883d769_Name=_22883d769_Name_CommonFlag_2,
		._22883d912_Short=_22883d912_Short_CommonFlag_2,
		._228870229_What=_228870229_What_CommonFlag_2,
		._22887036c_Reset=_22887036c_Reset_CommonFlag_2,
	},
	{
		._22883d769_Name=_22883d769_Name_CommonFlag_3,
		._22883d912_Short=_22883d912_Short_CommonFlag_3,
		._228870229_What=_228870229_What_CommonFlag_3,
		._22887036c_Reset=_22887036c_Reset_CommonFlag_3,
	},
	{
		._22883d769_Name=_22883d769_Name_CommonFlag_4,
		._22883d912_Short=_22883d912_Short_CommonFlag_4,
		._228870229_What=_228870229_What_CommonFlag_4,
		._22887036c_Reset=_22887036c_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246868c1b_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_246868c1b_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246922555_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_246922555_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246853ba1_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_246853ba1_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468790e4_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_2468790e4_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24684bbee_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_24684bbee_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246846b83_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_246846b83_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24684ad52_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_24684ad52_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246841ed0_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_246841ed0_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24684b58e_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_24684b58e_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468430ad_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_2468430ad_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246849207_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_246849207_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24684a192_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_24684a192_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2445e359c_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2445e359c_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683092a_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_24683092a_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468aa103_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_2468aa103_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a7760_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_2468a7760_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468618b2_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246983ac2_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_246983ac2_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246862ab1_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_246862ab1_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24686063b_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_24686063b_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685db78_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_24685db78_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685e052_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_24685e052_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685e805_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_24685e805_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685ecab_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_24685ecab_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468614d8_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_2468614d8_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24686110e_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_24686110e_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246862dad_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_246862dad_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685a081_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_24685a081_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a8398_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_2468a8398_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a8695_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_2468a8695_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246844455_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_246844455_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a8b4b_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_2468a8b4b_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246844d5c_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_246844d5c_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a9597_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_2468a9597_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a992c_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_2468a992c_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468aa4cc_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_2468aa4cc_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468aa8a6_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_2468aa8a6_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468aad5c_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_2468aad5c_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685a911_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_24685a911_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468ab236_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_2468ab236_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468ab896_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_2468ab896_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468acac8_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_2468acac8_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468a9d06_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_2468a9d06_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468ace5d_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_2468ace5d_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246840341_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_246840341_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246834654_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_246834654_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246846446_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_246846446_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246843b2a_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_246843b2a_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246845610_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_246845610_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683c904_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_24683c904_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683cccd_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_24683cccd_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683dcbd_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_24683dcbd_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246847876_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_246847876_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683d0ca_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_24683d0ca_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246845236_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_246845236_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246843487_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_246843487_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246835028_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_246835028_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246865d17_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_246865d17_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246850e23_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_246850e23_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2469b35e6_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_2469b35e6_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24687b800_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_24687b800_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24687d00a_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_24687d00a_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468325db_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_2468325db_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246831750_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_246831750_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246831d49_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_246831d49_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468313ba_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_2468313ba_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246832d39_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_246832d39_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246831a4c_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_246831a4c_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246836ada_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_246836ada_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685a45a_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_24685a45a_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246838d73_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_246838d73_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683a47e_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_24683a47e_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683607e_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_24683607e_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246835325_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_246835325_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685d79e_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_24685d79e_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468623da_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_2468623da_RuneExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2469b43d8_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_2469b43d8_TypeKind> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685d4a2_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_24685d4a2_ArrayExprModel> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246837767_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_246837767_SubIdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246830c27_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_246830c27_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246836711_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_246836711_UnaryExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246830320_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_246830320_TypeDecl> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683738d_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_24683738d_NsSelectionExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468310bd_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_2468310bd_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685bbed_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_24685bbed_SlicingExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468596ce_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_2468596ce_CastingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683ab77_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_24683ab77_SliceExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246858d4e_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_246858d4e_StructLitExprModel> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685d0c8_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_24685d0c8_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685c281_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_24685c281_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685cb22_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_24685cb22_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685b66a_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_24685b66a_MapExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685acda_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_24685acda_AnonFnExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246834951_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_246834951_RangeExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468356ee_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_2468356ee_LitExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246835ac8_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_246835ac8_UnsafeExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683b617_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_24683b617_IndexingExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683bc77_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_24683bc77_SlicingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246836eb4_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_246836eb4_CastExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683969d_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_24683969d_StructLit> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24683837d_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_24683837d_FnCallExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246839b54_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_246839b54_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246837c1d_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_246837c1d_BinopExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685847a_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_24685847a_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468580a1_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_2468580a1_BinopExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685914b_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_24685914b_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685e42b_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_24685e42b_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246860262_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_246860262_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246860938_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_246860938_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246860c35_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_246860c35_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_24685c46d_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_24685c46d_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468620dd_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_2468620dd_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2468626d7_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_2468626d7_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b383d6_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_246b383d6_MutSlicingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b38e0e_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_246b38e0e_PushToSliceExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b392d8_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_246b392d8_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b3710a_SwapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_246b3710a_SwapExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b37528_EmptyCompareExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_246b37528_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b37d53_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_246b37d53_StrCompExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b386d3_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_246b386d3_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b37825_RefExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_246b37825_RefExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_246b389d0_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_246b389d0_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type129_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type129_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=__jule_any_type129_eq, .to_str=__jule_any_type129_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type129 && __jule_any_type129_eq(any.data.alloc, (void*)&other); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _243579ee6_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _228876ebc_OutDir = jule::Str::lit("dist", 4);
jule::Str _2288772a8_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _228877572_Out = jule::Str();
jule::Str _240e8d3ce_Compiler = jule::Str();
jule::Str _240e8e6bb_CompilerPath = jule::Str();
jule::Str _240e8e91e_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _240e8eba5_Shadowing = false;
jule::Bool _240e8ee6e_Transpilation = false;
jule::Bool _240e90238_Test = false;
jule::Bool _240e90502_RC = true;
jule::Bool _240e908cb_Safety = true;
jule::Bool _240e90b95_Production = false;
jule::Ptr<_24324cba8_RangeTable> _2431d846d__L = jule::new_ptr<_24324cba8_RangeTable>(_24324cba8_RangeTable{._field_R16=jule::Slice<_24324c1c4_Range16>::make({_24324c1c4_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_24324c1c4_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_24324c1c4_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_24324c1c4_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_24324c1c4_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_24324c1c4_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_24324c1c4_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_24324c1c4_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_24324c1c4_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_24324c1c4_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_24324c1c4_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_24324c1c4_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_24324c1c4_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_24324c1c4_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_24324c1c4_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_24324c1c4_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_24324c1c4_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_24324c1c4_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_24324c1c4_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_24324c1c4_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_24324c1c4_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_24324c1c4_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_24324c1c4_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_24324c1c4_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_24324c1c4_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_24324c1c4_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_24324c1c4_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_24324c1c4_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_24324c1c4_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_24324c1c4_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_24324c1c4_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_24324c1c4_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_24324c1c4_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_24324c1c4_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_24324c1c4_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_24324c1c4_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_24324c1c4_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_24324c702_Range32>::make({_24324c702_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_24324c702_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_24324c702_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_24324c702_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_24324c702_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_24324c702_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_24324c702_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_24324c702_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_24324c702_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_24324c702_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_24324c702_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_24324c702_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_24324c702_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_24324c702_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_24324c702_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_24324c702_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_24324c702_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_24324c702_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_24324c702_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_24324c702_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_24324c702_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_24324c702_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_24324c702_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_24324c702_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_24324cba8_RangeTable> _2431d945d__LU = jule::new_ptr<_24324cba8_RangeTable>(_24324cba8_RangeTable{._field_R16=jule::Slice<_24324c1c4_Range16>::make({_24324c1c4_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_24324c1c4_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_24324c1c4_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_24324c1c4_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_24324c1c4_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_24324c1c4_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_24324c1c4_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_24324c1c4_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_24324c1c4_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_24324c1c4_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_24324c1c4_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_24324c1c4_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_24324c702_Range32>::make({_24324c702_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_24324c702_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_24324c702_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_24324c702_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_24324c702_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_24324c702_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _2432464dc__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _243359567_first = jule::Array<jule::U8,256>({});
jule::Array<_243359aea_acceptRange,16> _243359e08_acceptRanges = jule::Array<_243359aea_acceptRange,16>({_243359aea_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_243359aea_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_243359aea_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_243359aea_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_243359aea_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _2433c1c2d_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _24345055e_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _243450828_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _2435761e0_PathStdlib = jule::Str();
jule::Str _243576443_PathExec = jule::Str();
jule::Str _2435766eb_PathWd = jule::Str();
jule::Str _243576a09_PathApi = jule::Str();
jule::Str _243576cc3_Os = jule::Str::lit("darwin", 6);
jule::Str _24357708c_Arch = jule::Str::lit("arm64", 5);
jule::Array<jule::U8,32> _244575122__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _2445756d8__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_243ded814_floatInfo _2445ba7d8_f32info = _243ded814_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_243ded814_floatInfo _2445baad5_f64info = _243ded814_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2445c3527_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _2445c5381_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2445c5e53_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _2445c6294_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _2445c950b_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_2445cd2ce_leftCheat> _2445cd70d_leftCheats = jule::Slice<_2445cd2ce_leftCheat>::make({_2445cd2ce_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_2445cd2ce_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_2445cd2ce_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_2445cd2ce_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_2445cd2ce_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_2445cd2ce_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_2445cd2ce_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_2445cd2ce_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_2445cd2ce_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_2445cd2ce_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_2445cd2ce_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_2445cd2ce_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_2445cd2ce_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_2445cd2ce_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_2445cd2ce_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_2445cd2ce_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_2445cd2ce_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_2445cd2ce_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_2445cd2ce_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_2445cd2ce_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_2445cd2ce_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_2445cd2ce_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_2445cd2ce_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_2445cd2ce_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_2445cd2ce_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_2445cd2ce_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_2445cd2ce_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_2445cd2ce_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_2445cd2ce_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_2445cd2ce_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_2445cd2ce_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_2445cd2ce_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_2445cd2ce_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_2445cd2ce_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_2445cd2ce_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_2445cd2ce_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_2445cd2ce_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_2445cd2ce_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_2445cd2ce_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_2445cd2ce_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_2445cd2ce_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_2445cd2ce_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_2445cd2ce_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_2445cd2ce_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_2445cd2ce_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_2445cd2ce_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_2445cd2ce_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_2445cd2ce_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_2445cd2ce_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_2445cd2ce_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_2445cd2ce_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_2445cd2ce_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_2445cd2ce_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_2445cd2ce_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_2445cd2ce_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_2445cd2ce_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_2445cd2ce_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_2445cd2ce_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_2445cd2ce_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_2445cd2ce_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_2445cd2ce_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I64 _2445d45d2_BitSize = 0LL;
jule::Str _2445d48ce_SysInt = jule::Str();
jule::Str _2445d4b98_SysUint = jule::Str();
jule::Array<jule::I32,5> _246767c5d_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _246767e7d_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _246768225_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _246814304_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _246814601_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_246822730_kindPair,28> _246822b5e_keywords = jule::Array<_246822730_kindPair,28>({_246822730_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_246822730_kindPair,46> _246822ea0_basicOps = jule::Array<_246822730_kindPair,46>({_246822730_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_246822730_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_246822730_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Slice<jule::Str> _24689e966_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_2469b43d8_TypeKind> _246b24834_primNil = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=nullptr});
jule::Ptr<_2469b43d8_TypeKind> _246b24b42_primVoid = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("void", 4)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b24e0b_primAny = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("any", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b25219_primStr = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("str", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b254d3_primBool = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("bool", 4)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b2579c_primUintptr = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("uintptr", 7)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b25a66_primUint = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("uint", 4)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b25e40_primInt = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("int", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b26209_primI8 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("i8", 2)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b264c3_primI16 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("i16", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b2678c_primI32 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("i32", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b26a56_primI64 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("i64", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b26d20_primU8 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("u8", 2)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b270d9_primU16 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("u16", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b273a3_primU32 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("u32", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b27826_primU64 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("u64", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b27ae0_primF32 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("f32", 3)), 21)});
jule::Ptr<_2469b43d8_TypeKind> _246b27da9_primF64 = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType(jule::Str::lit("f64", 3)), 21)});
jule::Bool _246b49150_Copy = false;
jule::Bool _246b4945d_Deadcode = false;
jule::Bool _246b49727_Append = false;
jule::Bool _246b49a35_Math = false;
jule::Bool _246b49cee_Access = false;
jule::Bool _246b4a0b8_Inline = false;
jule::Bool _246b4a382_Ptr = false;
jule::Bool _246b4a75b_Cond = false;
jule::Bool _246b4aa25_Str = false;
jule::Bool _246b4acde_Slice = false;
jule::Bool _246b4b0a8_Assign = false;
jule::Bool _227d8a57a_exprEnabled = false;
jule::Bool _227d8a888_scopeEnabled = false;
jule::Array<jule::U64,12> _2287cbeaa_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _22870ac1e_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_24324cba8_RangeTable> _2431e6b63_Upper = _2431d945d__LU;
jule::Ptr<_24324cba8_RangeTable> _2431e060c_Letter = _2431d846d__L;



std::ostream &operator<<(std::ostream &_Stream, _24324c1c4_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24324c702_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24324cba8_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _243359aea_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _2433b0c50_StrBuilder static__2433b1019_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _2433b0c50_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _2433b9572_Write(_2433b0c50_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _2433b982a_WriteStr(_2433b0c50_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_2420a67c1_StrBytes(_3027_s));;
}



inline void _2433b9ad3_WriteByte(_2433b0c50_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _2433ba122_Str(_2433b0c50_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _2433ba320_Clear(_2433b0c50_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _2433ba5a6_Len(_2433b0c50_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _2433baac3_Buf(_2433b0c50_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2433bad7b_SetBuf(_2433b0c50_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _2433b0c50_StrBuilder _Src) {
	_Stream << _2433ba122_Str(&_Src);
	return _Stream;
}



inline jule::U8 _2433bb9e7_index(_2433bb596_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _2433bbca0_append(_2433bb596_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)).fake_slice());
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2433bc036_string(_2433bb596_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _2420a6a8a_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _2433bb596_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _241ede3eb_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>> static__2433c0d4d_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_241ede3eb_DirEntry>> __jule_func_result;
	DIR* _1613_dir = _241eaec7e_Opendir((&(_1520_path[0LL])));;
	if ((_1613_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>>(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2113_dirent = _241eb0048_Readdir(_1613_dir);;
			if ((_2113_dirent == nullptr)) {
				goto _iter_end_229701906;
			};
			jule::Str _2513_name = _241e9e389_BytePtrToStr(((jule::U8*)((*(_2113_dirent)).d_name)));;
			jule::Ptr<_241ee3246_Status> _2617_stat = ({
				auto except = static__241ededd0_Of(_2433bcd17_Join(jule::Slice<jule::Str>::make({_1520_path,_2513_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>>(except.error);
				} jule::Ptr<_241ee3246_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_241ede3eb_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_241ede3eb_DirEntry>(_241ede3eb_DirEntry{._field_Name=_2513_name, ._field_Stat=_2617_stat})); };
		}
	_iter_next_229701906:;
	}
	_iter_end_229701906:;;
	_241eb0312_Closedir(_1613_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__2433c107e_Create(jule::Str _3922_path) {
	if ((_241eb0c19_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__2433c12b0_Remove(jule::Str _5122_path) {
	if ((_241eb0ed3_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _241ede660_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_241ee1156_File>> static__241edd31d_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _199_handle = _241eae410_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_199_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_241ee1156_File>>(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_241ee1156_File>>(jule::Any(), static__241ee1574_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_199_handle))));;
}



inline jule::VoidExceptional static__241edd54e_Remove(jule::Str _3022_path) {
	if ((_241eb129c_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _241edd9d3_Write(_241ee1156_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_241ec2852_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _241eddd24_Read(_241ee1156_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_241ec207c_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_241ee1156_File> static__241ee1574_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_241ee1156_File>(_241ee1156_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_241ee1156_File>> static__241ee183d_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_241ee1156_File>>(jule::Any(), ({
		auto except = static__241edd31d_Open(_5522_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_241ee1156_File>>(except.error);
		} jule::Ptr<_241ee1156_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__241ee1b07_Read(jule::Str _6720_path) {
	jule::Ptr<_241ee3246_Status> _689_s = ({
		auto except = static__241ededd0_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_241ee3246_Status>(nullptr);});
	});;
	if ((!(_241ee38a6_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_241ee3b3c_Size(_689_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_241ee1156_File> _7813_f = ({
		auto except = static__241edd31d_Open(_6720_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_241ee1156_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _241ee26da_Close(_7813_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_241ee3b3c_Size(_689_s.ptr())), static_cast<jule::I64>(_241ee3b3c_Size(_689_s.ptr())), 0);;
	jule::I64 _829_n = ({
		auto except = _241eddd24_Read(_7813_f.ptr(), _8113_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8113_buff.slice(0LL, _829_n));;
}



inline jule::VoidExceptional static__241ee1e9d_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_241ee1156_File> _9213_f = ({
		auto except = static__241edd31d_Open(_9121_path, static_cast<jule::I64>(1537LL), _9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_241ee1156_File>(nullptr);});
	});;
	({
		auto except = _241edd9d3_Write(_9213_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _241ee26da_Close(_9213_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _241ee26da_Close(_241ee1156_File* _self_) {
	if ((_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _241ee1156_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_241ee3246_Status>> static__241ededd0_Of(jule::Str _1118_path) {
	if ((_1118_path).empty()) {
		return jule::Exceptional<jule::Ptr<_241ee3246_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1513_handle = (struct stat){};;
	jule::I64 _169_code = _241eaded1_Stat((&(_1118_path[0LL])), (&(_1513_handle)));;
	if ((_169_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_241ee3246_Status>>(jule::Any(_241edc97c_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_241ee3246_Status> _2013_stat = jule::new_ptr<_241ee3246_Status>();;
	(*(_2013_stat))._field_size=_1513_handle.st_size;
	if (((_1513_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1513_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*(_2013_stat))._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_241ee3246_Status>>(jule::Any(), _2013_stat);;
}



inline jule::Bool _241ee3620_IsDir(_241ee3246_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _241ee38a6_IsReg(_241ee3246_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _241ee3b3c_Size(_241ee3246_Status* _self_) {
	return (*(_self_))._field_size;;
}





std::ostream &operator<<(std::ostream &_Stream, _241ee3246_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _243573781_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24345e617_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _243ded814_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2445bb07a_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2445cd2ce_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2445c56c2_set(_2445cdd07_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_22a87ca4d:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_22a87cc29:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_22a87cb2a:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_22a87e3ce:;
					{
						goto _iter_next_22a87cc90;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_22a87e456:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_22a87cc90;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_22a87e4cd:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_22a87cc90;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_22a87cc90;
					}
				}
				_match_end_22a87e2be:;
			};
			goto _iter_end_22a87cc90;
		}
	_iter_next_22a87cc90:;
	}
	_iter_end_22a87cc90:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_2445c0b73_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_22a884d96;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=static_cast<jule::I64>((((_31217_e * 10LL) + static_cast<jule::I64>(_23822_s[_23913_i])) - '0'));
				};
			}
		_iter_next_22a884d96:;
		}
		_iter_end_22a884d96:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _2445c5a13_floatBits(_2445cdd07_decimal* _self_, _243ded814_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_22a893c51;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_22a88a9b2;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_22a893c51;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _2445c5381_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_2445c5381_powtab[(*(_self_))._field_dp];
			};
			_2445ce467_shift(_self_, static_cast<jule::I64>((-(_35917_n))));
			_33313_exp+=_35917_n;
		}
	_iter_next_22a88a4ea:;
	}
	_iter_end_22a88a4ea:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _2445c5381_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_2445c5381_powtab[(-((*(_self_))._field_dp))];
			};
			_2445ce467_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_22a88ba29:;
	}
	_iter_end_22a88ba29:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_2445ce467_shift(_self_, static_cast<jule::I64>((-(_38613_n))));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_22a88a9b2;
	};
	_2445ce467_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33413_mant=static_cast<jule::U64>(_2445d0017_roundedInteger(_self_));
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_22a88a9b2;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_22a893c51;
	_julec_label_22a88a9b2:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_22a893c51:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _2445ce1ae_assign(_2445cdd07_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I64 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_22a8973d6:;
	}
	_iter_end_22a8973d6:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_22a897b78:;
	}
	_iter_end_22a897b78:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_2445d0655_trim(_self_);
}



inline void _2445ce467_shift(_2445cdd07_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_22a899b7a:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_22a899c02:;
			{
				while ((_17628_k > 60LL)) {
					{
						_2445d11a0_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_22a89a84b:;
				}
				_iter_end_22a89a84b:;;
				_2445d11a0_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_22a899c79:;
			{
				while ((_17628_k < -60LL)) {
					{
						_2445d0941_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_22a89a7c4:;
				}
				_iter_end_22a89a7c4:;;
				_2445d0941_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_22a899a59:;
	};
}



inline void _2445ce720_roundDown(_2445cdd07_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_2445d0655_trim(_self_);
}



inline void _2445ce9c8_roundUp(_2445cdd07_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21113_i + 1LL));
				return;;
			};
		}
	_iter_next_22a89db5c:;
	}
	_iter_end_22a89db5c:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _2445cec81_round(_2445cdd07_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_2445d1524_shouldRoundUp(_self_, _23224_nd)) {
		_2445ce9c8_roundUp(_self_, _23224_nd);
	} else {
		_2445ce720_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _2445d0017_roundedInteger(_2445cdd07_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=static_cast<jule::U64>(((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0'))));
		}
	_iter_next_22a8a1951:;
	}
	_iter_end_22a8a1951:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_22a8a2a0c:;
	}
	_iter_end_22a8a2a0c:;;
	if (_2445d1524_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _2445cdd07_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2445e359c_Const> static__2445e39dc_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_2445e359c_Const> static__2445e3ca6_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_2445e359c_Const> static__2445e4070_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_2445e359c_Const> static__2445e4339_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_2445e359c_Const> static__2445e4603_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_2445e359c_Const> static__2445e4812_NewNil(void) {
	return jule::new_ptr<_2445e359c_Const>(_2445e359c_Const{._field_data=nullptr});;
}



inline jule::I64 _2445e4e72_ReadI64(_2445e359c_Const* _self_) {
	if ((!(_2445e756d_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
}



inline jule::U64 _2445e5208_ReadU64(_2445e359c_Const* _self_) {
	if ((!(_2445e7804_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
}



inline jule::Bool _2445e548e_ReadBool(_2445e359c_Const* _self_) {
	if ((!(_2445e7a8a_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _2445e5725_ReadStr(_2445e359c_Const* _self_) {
	if ((!(_2445e7d21_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _2445e59ab_ReadF64(_2445e359c_Const* _self_) {
	if ((!(_2445e80a7_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
}



inline jule::I64 _2445e5c42_AsI64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_22a923c37:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_22a923e68:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_22a923ece:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_22a923e02:;
			{
				return 0LL;;
			}
		}
		_match_end_22a9237d6:;
	};
}



inline jule::U64 _2445e5ec8_AsU64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_22a9248e7:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_22a92580a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_22a925871:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_22a92470a:;
			{
				return 0LLU;;
			}
		}
		_match_end_22a9246a5:;
	};
}



inline jule::F64 _2445e625e_AsF64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_22a9275cb:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_22a926179:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_22a92708c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2)));;
			}
		}
		else {
			_case_begin_22a925e8c:;
			{
				return 0LL;;
			}
		}
		_match_end_22a925e37:;
	};
}



inline void _2445e6517_SetI64(_2445e359c_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _2445e67c0_SetU64(_2445e359c_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _2445e6a78_SetBool(_2445e359c_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _2445e6d31_SetStr(_2445e359c_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _2445e70d9_SetF64(_2445e359c_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _2445e756d_IsI64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_22a92ad1b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a92b0a2:;
			{
				return false;;
			}
		}
		_match_end_22a92b04c:;
	};
}



inline jule::Bool _2445e7804_IsU64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_22a92b712:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a92b965:;
			{
				return false;;
			}
		}
		_match_end_22a92b910:;
	};
}



inline jule::Bool _2445e7a8a_IsBool(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_22a92c16e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a92c3c2:;
			{
				return false;;
			}
		}
		_match_end_22a92c36c:;
	};
}



inline jule::Bool _2445e7d21_IsStr(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_22a92cacb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a92cd2e:;
			{
				return false;;
			}
		}
		_match_end_22a92ccc9:;
	};
}



inline jule::Bool _2445e80a7_IsF64(_2445e359c_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_22a92d538:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a92d78b:;
			{
				return false;;
			}
		}
		_match_end_22a92d736:;
	};
}



inline jule::Bool _2445e833d_IsNil(_2445e359c_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _2445e89c0_And(_2445e359c_Const* _self_, _2445e359c_Const _23818_x) {
	{
		
		if ((_2445e7a8a_IsBool(_self_) && _2445e7a8a_IsBool(&_23818_x))) {
			_case_begin_22a932a8c:;
			{
				return (_2445e548e_ReadBool(_self_) && _2445e548e_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_22a9329d2:;
			{
				return false;;
			}
		}
		_match_end_22a9325e7:;
	};
}



inline jule::Bool _2445e8d11_Or(_2445e359c_Const* _self_, _2445e359c_Const _24917_x) {
	{
		
		if ((_2445e7a8a_IsBool(_self_) && _2445e7a8a_IsBool(&_24917_x))) {
			_case_begin_22a933d9b:;
			{
				return (_2445e548e_ReadBool(_self_) || _2445e548e_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_22a93353d:;
			{
				return false;;
			}
		}
		_match_end_22a933494:;
	};
}



inline jule::Bool _2445e9152_Eq(_2445e359c_Const* _self_, _2445e359c_Const _26017_x) {
	{
		
		if (_2445e833d_IsNil(_self_)) {
			_case_begin_22a9351cc:;
			{
				return _2445e833d_IsNil(&_26017_x);;
			}
		}
		else if (_2445e7a8a_IsBool(_self_)) {
			_case_begin_22a935254:;
			{
				return (_2445e7a8a_IsBool(&_26017_x) && (_2445e548e_ReadBool(_self_) == _2445e548e_ReadBool(&_26017_x)));;
			}
		}
		else if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a9354c9:;
			{
				return (_2445e7d21_IsStr(&_26017_x) && (_2445e5725_ReadStr(_self_) == _2445e5725_ReadStr(&_26017_x)));;
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a935540:;
			{
				return (_2445e4e72_ReadI64(_self_) == _2445e5c42_AsI64(&_26017_x));;
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a9355a6:;
			{
				return (_2445e5208_ReadU64(_self_) == _2445e5ec8_AsU64(&_26017_x));;
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a93561c:;
			{
				return (_2445e59ab_ReadF64(_self_) == _2445e625e_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_22a934819:;
			{
				return false;;
			}
		}
		_match_end_22a934770:;
	};
}



inline jule::Bool _2445e9493_Lt(_2445e359c_Const* _self_, _2445e359c_Const _28717_x) {
	{
		
		if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a938d90:;
			{
				return (_2445e7d21_IsStr(&_28717_x) && (_2445e5725_ReadStr(_self_) < _2445e5725_ReadStr(&_28717_x)));;
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a938e06:;
			{
				return (_2445e4e72_ReadI64(_self_) < _2445e5c42_AsI64(&_28717_x));;
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a938e7d:;
			{
				return (_2445e5208_ReadU64(_self_) < _2445e5ec8_AsU64(&_28717_x));;
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a9391ae:;
			{
				return (_2445e59ab_ReadF64(_self_) < _2445e625e_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_22a935ab2:;
			{
				return false;;
			}
		}
		_match_end_22a9359e6:;
	};
}



inline jule::Bool _2445e97d4_LtEq(_2445e359c_Const* _self_, _2445e359c_Const _31019_x) {
	{
		
		if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a93ba52:;
			{
				return (_2445e7d21_IsStr(&_31019_x) && (_2445e5725_ReadStr(_self_) <= _2445e5725_ReadStr(&_31019_x)));;
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a93bab8:;
			{
				return (_2445e4e72_ReadI64(_self_) <= _2445e5c42_AsI64(&_31019_x));;
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a93bb40:;
			{
				return (_2445e5208_ReadU64(_self_) <= _2445e5ec8_AsU64(&_31019_x));;
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a93bd71:;
			{
				return (_2445e59ab_ReadF64(_self_) <= _2445e625e_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_22a9396ed:;
			{
				return false;;
			}
		}
		_match_end_22a939632:;
	};
}



inline jule::Bool _2445e9b25_Gt(_2445e359c_Const* _self_, _2445e359c_Const _33317_x) {
	{
		
		if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a93e714:;
			{
				return (_2445e7d21_IsStr(&_33317_x) && (_2445e5725_ReadStr(_self_) > _2445e5725_ReadStr(&_33317_x)));;
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a93e77a:;
			{
				return (_2445e4e72_ReadI64(_self_) > _2445e5c42_AsI64(&_33317_x));;
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a93e802:;
			{
				return (_2445e5208_ReadU64(_self_) > _2445e5ec8_AsU64(&_33317_x));;
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a93ea33:;
			{
				return (_2445e59ab_ReadF64(_self_) > _2445e625e_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_22a93c3b0:;
			{
				return false;;
			}
		}
		_match_end_22a93c2e4:;
	};
}



inline jule::Bool _2445e9e66_GtEq(_2445e359c_Const* _self_, _2445e359c_Const _35619_x) {
	{
		
		if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a9423c6:;
			{
				return (_2445e7d21_IsStr(&_35619_x) && (_2445e5725_ReadStr(_self_) >= _2445e5725_ReadStr(&_35619_x)));;
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a94243c:;
			{
				return (_2445e4e72_ReadI64(_self_) >= _2445e5c42_AsI64(&_35619_x));;
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a9424b4:;
			{
				return (_2445e5208_ReadU64(_self_) >= _2445e5ec8_AsU64(&_35619_x));;
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a9426e5:;
			{
				return (_2445e59ab_ReadF64(_self_) >= _2445e625e_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_22a940072:;
			{
				return false;;
			}
		}
		_match_end_22a93eea6:;
	};
}



inline jule::Bool _2445ea2a7_Add(_2445e359c_Const* _self_, _2445e359c_Const _37722_x) {
	{
		
		if (_2445e7d21_IsStr(_self_)) {
			_case_begin_22a945088:;
			{
				if ((!(_2445e7d21_IsStr(&_37722_x)))) {
					return false;;
				};
				_2445e6d31_SetStr(_self_, (_2445e5725_ReadStr(_self_) + _2445e5725_ReadStr(&_37722_x)));
			}
		}
		else if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a9450ee:;
			{
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e59ab_ReadF64(_self_) + _2445e625e_AsF64(&_37722_x))));
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a945176:;
			{
				if (_2445e80a7_IsF64(&_37722_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) + _2445e59ab_ReadF64(&_37722_x))));
				} else {
					_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) + _2445e5c42_AsI64(&_37722_x))));
				};
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a9453a7:;
			{
				if (_2445e80a7_IsF64(&_37722_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) + _2445e59ab_ReadF64(&_37722_x))));
				} else {
					_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) + _2445e5ec8_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_22a942c34:;
			{
				return false;;
			}
		}
		_match_end_22a942b68:;
	};
	return true;;
}



inline jule::Bool _2445ea5e8_Sub(_2445e359c_Const* _self_, _2445e359c_Const _40622_x) {
	{
		
		if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a949eb1:;
			{
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e59ab_ReadF64(_self_) - _2445e625e_AsF64(&_40622_x))));
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a94a038:;
			{
				if (_2445e80a7_IsF64(&_40622_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) - _2445e59ab_ReadF64(&_40622_x))));
				} else {
					_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) - _2445e5c42_AsI64(&_40622_x))));
				};
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a94a0b0:;
			{
				if (_2445e80a7_IsF64(&_40622_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) - _2445e59ab_ReadF64(&_40622_x))));
				} else {
					_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) - _2445e5ec8_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_22a949785:;
			{
				return false;;
			}
		}
		_match_end_22a9496b9:;
	};
	return true;;
}



inline jule::Bool _2445ea939_Mul(_2445e359c_Const* _self_, _2445e359c_Const _43022_x) {
	{
		
		if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a94e05e:;
			{
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e59ab_ReadF64(_self_) * _2445e625e_AsF64(&_43022_x))));
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a94e0d6:;
			{
				if (_2445e80a7_IsF64(&_43022_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) * _2445e59ab_ReadF64(&_43022_x))));
				} else {
					_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) * _2445e5c42_AsI64(&_43022_x))));
				};
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a94e15d:;
			{
				if (_2445e80a7_IsF64(&_43022_x)) {
					_2445e70d9_SetF64(_self_, static_cast<jule::F64>((_2445e625e_AsF64(_self_) * _2445e59ab_ReadF64(&_43022_x))));
				} else {
					_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) * _2445e5ec8_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_22a94d6e0:;
			{
				return false;;
			}
		}
		_match_end_22a94d624:;
	};
	return true;;
}



inline jule::Bool _2445eac7a_Div(_2445e359c_Const* _self_, _2445e359c_Const _45822_x) {
	{
		
		if (_2445e80a7_IsF64(_self_)) {
			_case_begin_22a95310c:;
			{
				jule::F64 _46113_l = _2445e625e_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>(jule::div(_2445e59ab_ReadF64(_self_),_46113_l)));
			}
		}
		else if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a953184:;
			{
				jule::F64 _46713_l = _2445e625e_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>(jule::div(_2445e625e_AsF64(_self_),_46713_l)));
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a95320b:;
			{
				jule::F64 _47313_l = _2445e625e_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_2445e70d9_SetF64(_self_, static_cast<jule::F64>(jule::div(_2445e625e_AsF64(_self_),_47313_l)));
			}
		}
		else {
			_case_begin_22a95278d:;
			{
				return false;;
			}
		}
		_match_end_22a9526c2:;
	};
	return true;;
}



inline jule::Bool _2445eb0bb_Mod(_2445e359c_Const* _self_, _2445e359c_Const _48722_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a956d69:;
			{
				jule::I64 _49013_l = _2445e5c42_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_2445e6517_SetI64(_self_, static_cast<jule::I64>(jule::mod(_2445e4e72_ReadI64(_self_),_49013_l)));
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a956de1:;
			{
				jule::U64 _49613_l = _2445e5ec8_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_2445e67c0_SetU64(_self_, static_cast<jule::U64>(jule::mod(_2445e5208_ReadU64(_self_),_49613_l)));
			}
		}
		else {
			_case_begin_22a956cae:;
			{
				return false;;
			}
		}
		_match_end_22a956c15:;
	};
	return true;;
}



inline jule::Bool _2445eb40c_BitwiseAnd(_2445e359c_Const* _self_, _2445e359c_Const _50929_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a959993:;
			{
				_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) & _2445e5c42_AsI64(&_50929_x))));
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a959a1a:;
			{
				_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) & _2445e5ec8_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_22a9598d8:;
			{
				return false;;
			}
		}
		_match_end_22a95983e:;
	};
	return true;;
}



inline jule::Bool _2445eb74d_BitwiseOr(_2445e359c_Const* _self_, _2445e359c_Const _52328_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a95b81e:;
			{
				_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) | _2445e5c42_AsI64(&_52328_x))));
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a95b896:;
			{
				_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) | _2445e5ec8_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_22a95b753:;
			{
				return false;;
			}
		}
		_match_end_22a95b687:;
	};
	return true;;
}



inline jule::Bool _2445eba8e_Xor(_2445e359c_Const* _self_, _2445e359c_Const _53722_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a95d69a:;
			{
				_2445e6517_SetI64(_self_, static_cast<jule::I64>((_2445e4e72_ReadI64(_self_) ^ _2445e5c42_AsI64(&_53722_x))));
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a95d722:;
			{
				_2445e67c0_SetU64(_self_, static_cast<jule::U64>((_2445e5208_ReadU64(_self_) ^ _2445e5ec8_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_22a95d5ce:;
			{
				return false;;
			}
		}
		_match_end_22a95d513:;
	};
	return true;;
}



inline jule::Bool _2445ebdd0_Lshift(_2445e359c_Const* _self_, _2445e359c_Const _55125_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a960526:;
			{
				jule::I64 _55413_l = _2445e5c42_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _2445e5ec8_AsU64(&_55125_x);;
					_2445e6517_SetI64(_self_, static_cast<jule::I64>((_55413_l << _55617_r)));
				} else {
					_2445ec5b7_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a96059d:;
			{
				_2445ec5b7_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_22a96045a:;
			{
				return false;;
			}
		}
		_match_end_22a96038e:;
	};
	return true;;
}



inline jule::Bool _2445ec221_Rshift(_2445e359c_Const* _self_, _2445e359c_Const _57125_x) {
	{
		
		if (_2445e756d_IsI64(_self_)) {
			_case_begin_22a962803:;
			{
				jule::I64 _57413_l = _2445e5c42_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _2445e5ec8_AsU64(&_57125_x);;
					_2445e6517_SetI64(_self_, static_cast<jule::I64>((_57413_l >> _57617_r)));
				} else {
					_2445ec8e7_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_2445e7804_IsU64(_self_)) {
			_case_begin_22a96287a:;
			{
				_2445ec8e7_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_22a962737:;
			{
				return false;;
			}
		}
		_match_end_22a96268d:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _2445e359c_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _24681a1b7_Prec(_246819d43_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22a9bb9e4:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22a9bbb7b:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_22a9bbbe2:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_22a9bbc69:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_22a9bbce1:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_22a9bb373:;
			{
				return 0LLU;;
			}
		}
		_match_end_22a9bb2c9:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246819d43_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _2468209e7_Fill(_24682060c_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _246820c7d_Dir(_24682060c_File* _self_) {
	return _2433bda0a_Dir((*(_self_))._field_Path);;
}



inline jule::Str _246821014_Name(_24682060c_File* _self_) {
	return _2433bd664_Base((*(_self_))._field_Path);;
}



inline jule::Str _2468215db_GetRow(_24682060c_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3913_n = 0LL;;
	jule::I64 _4013_lineStart = 0LL;;
	jule::I64 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_22a9c1ce6;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=static_cast<jule::I64>((_4113_i + 1LL));
		}
	_iter_next_22a9c1ce6:;
	}
	_iter_end_22a9c1ce6:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _24682060c_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246822730_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _246828dc9_pushErr(_246828846_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_24345e617_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_246823500_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _24682943a_lex(_246828846_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_24682b65c_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_246819d43_Token> _46217_token = _24682cb47_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_22aa03ce5:;
	}
	_iter_end_22aa03ce5:;;
}



inline jule::Str _24682977b_id(_246828846_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r = 0;;
	jule::I64 _47516_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_24681d572_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr = 0;;
			jule::I64 _48117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_24681db05_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48113_pr)))))) && (!(_24681d572_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_22aa074be:;
	}
	_iter_end_22aa074be:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _246829a12_resume(_246828846_lex* _self_) {
	jule::I64 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_49613_i]);;
			if (_24681d0ee_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_22aa0b2e7:;
						{
							_24682b65c_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_22aa0b35d:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_22aa0abba:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_22aa0ac53:;
				};
				goto _iter_next_22aa071c2;
			};
			jule::I64 _51317_j = _49613_i;;
			for (; (_51317_j < (*((*(_self_))._field_file))._field_Data.len()); (_51317_j)++) {
				{
					if (((*((*(_self_))._field_file))._field_Data[_51317_j] == '\n')) {
						goto _iter_end_22aa0a35c;
					};
				}
			_iter_next_22aa0a35c:;
			}
			_iter_end_22aa0a35c:;;
			return (*((*(_self_))._field_file))._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_22aa071c2:;
	}
	_iter_end_22aa071c2:;;
	return nullptr;;
}



inline void _246829cba_lexLineComment(_246828846_lex* _self_, jule::Ptr<_246819d43_Token>* _52438_token) {
	jule::I64 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_22aa0da7a;
			};
		}
	_iter_next_22aa0da7a:;
	}
	_iter_end_22aa0da7a:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _24682a073_lexRangeComment(_246828846_lex* _self_, jule::Ptr<_246819d43_Token>* _53939_token) {
	jule::I64 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_22aa11cc0;
			};
			if ((_54313_r == '\n')) {
				_24682b65c_newLine(_self_);
				goto _iter_next_22aa11cc0;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*((*(_self_))._field_file))._field_Data.len()) && (_54313_r == '*')) && ((*((*(_self_))._field_file))._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*((*(_self_))._field_file))._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_22aa11cc0:;
	}
	_iter_end_22aa11cc0:;;
	_246828dc9_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _24682a3b4_num(_246828846_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_24682713b_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_22aa19415;
	};
	__jule_func_result=_246826d72_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_22aa19415;
	};
	__jule_func_result=_246825689_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_22aa19415;
	};
	__jule_func_result=_2468253c0_commonNum(_56723_txt);
	_julec_label_22aa19415:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _24682a705_escapeSeq(_246828846_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_22aa1d66c;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_22aa1b26e:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_22aa1b2d5:;
			{
				_59013_seq=_246827779_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_22aa1b35c:;
			{
				_59013_seq=_246827a43_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_22aa1aeb6:;
			{
				_59013_seq=_246827d0c_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_22aa1a845:;
			{
				_59013_seq=_2468280c6_byteEscape(_58929_txt);
			}
		}
		_match_end_22aa1ada6:;
	};
	_julec_label_22aa1d66c:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_246828dc9_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _24682ab01_getRune(_246828846_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _24682a705_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r = 0;;
	jule::I64 _62312_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _24682ae42_lexRune(_246828846_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_2433b0c50_StrBuilder _62913_run = static__2433b1019_New(8LL);;
	_2433b9ad3_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63213_n = 0LL;;
	jule::I64 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_22aa22088;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_246828dc9_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_24682b65c_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _24682ab01_getRune(_self_, &(_64513_part), false);;
			_2433b982a_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_24335c57b_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_22aa22088;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_22aa22088:;
	}
	_iter_end_22aa22088:;;
	if ((_63213_n == 0LL)) {
		_246828dc9_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_246828dc9_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _2433ba122_Str(&_62913_run);;
}



inline jule::Str _24682b1c8_lexStr(_246828846_lex* _self_) {
	_2433b0c50_StrBuilder _66913_s = static__2433b1019_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_2433b9ad3_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_22aa26b09;
			};
			if ((_67713_ch == '\n')) {
				_24682b65c_newLine(_self_);
				if ((!(_6729_raw))) {
					_246828dc9_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*((*(_self_))._field_file))._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _24682ab01_getRune(_self_, &(_68917_part), _6729_raw);;
			_2433b982a_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_24335c57b_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_22aa26b09;
			};
		}
	_iter_next_22aa26b09:;
	}
	_iter_end_22aa26b09:;;
	return _2433ba122_Str(&_66913_s);;
}



inline void _24682b65c_newLine(_246828846_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _24682bbbd_isOp(_246828846_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_246819d43_Token>* _71066_t) {
	if ((!(_2468238b8_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _24682c0b9_lexBasicOps(_246828846_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_246819d43_Token>* _72048_tok) {
	{
		auto expr = &(_246822ea0_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22aa2d506:;
		if (it != expr_end) {
			_246822730_kindPair *_72116_pair = it;
			{
				if (_24682bbbd_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_22aa2d506:;
			++it;
			goto _iter_begin_22aa2d506;
		}
		_iter_end_22aa2d506:;
	};
	return false;;
}



inline jule::Bool _24682c4b5_lexId(_246828846_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_246819d43_Token>* _72943_t) {
	jule::Str _7309_lex = _24682977b_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _24682c8b1_lexNum(_246828846_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_246819d43_Token>* _73944_t) {
	jule::Str _7409_lex = _24682a3b4_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_246819d43_Token> _24682cb47_token(_246828846_lex* _self_) {
	jule::Ptr<_246819d43_Token> _75113_t = jule::new_ptr<_246819d43_Token>(_246819d43_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _246829a12_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*(_75113_t))._field_Row=(*(_self_))._field_row;
	{
		
		if (_24682c8b1_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_22aa34e8b:;
			{
				goto _match_end_22aa32d8a;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_22aa34540:;
			{
				(*(_75113_t))._field_Kind=_24682ae42_lexRune(_self_, &(_7569_txt));
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_22aa345a6:;
			{
				(*(_75113_t))._field_Kind=_24682b1c8_lexStr(_self_);
				(*(_75113_t))._field_Id=static_cast<jule::U64>(4LLU);
				return _75113_t;;
			}
		}
		else if (_2468238b8_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_22aa3461c:;
			{
				_246829cba_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_2468238b8_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_22aa339b2:;
			{
				_24682a073_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_24682c0b9_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_22aa33a28:;
			{
				goto _match_end_22aa32d8a;
			}
		}
		else if (_24682c4b5_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_22aa33a8e:;
			{
				{
					auto expr = &(_246822b5e_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22aa388da:;
					if (it != expr_end) {
						_246822730_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*(_75113_t))._field_Kind)) {
								(*(_75113_t))._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_22aa388da;
							};
						}
						_iter_next_22aa388da:;
						++it;
						goto _iter_begin_22aa388da;
					}
					_iter_end_22aa388da:;
				};
			}
		}
		else {
			_case_begin_22aa3394b:;
			{
				jule::I32 _79513_r = 0;;
				jule::I64 _79516_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_246828dc9_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_22aa32d8a:;
	};
	(*(_self_))._field_column+=_24335c57b_RuneCountStr((*(_75113_t))._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _246828846_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24682d472_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24682e31e_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24682e73c_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246830320_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683092a_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246830c27_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468310bd_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468313ba_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246831750_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246831a4c_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2468321ac_IsUnsafe(_246831d49_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _246831d49_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24683294e_AutoSized(_2468325db_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _2468325db_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246832d39_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246833213_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246834654_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246834951_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246835028_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246835325_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468356ee_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246835ac8_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683607e_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246836711_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246836ada_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246836eb4_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683738d_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246837767_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246837c1d_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246838702_Unhandled(_24683837d_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _246838988_Ignored(_24683837d_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _24683837d_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246838d73_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683969d_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246839b54_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683a47e_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683ab77_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683b617_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683bc77_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683c074_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683c52a_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683c904_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683cccd_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683d0ca_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683d73a_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683dcbd_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24683ebd1_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246840341_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246840e02_IsSelf(_246840a7d_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _246840a7d_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246842343_IsAnon(_246841ed0_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _246841ed0_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468430ad_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246843487_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246843e8d_IsInf(_246843b2a_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _246843b2a_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2468447b8_IsWhileNext(_246844455_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _246844455_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246844d5c_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246845236_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246845610_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246845ab6_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246845e90_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246846446_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246846b83_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246847139_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246847876_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246848190_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246848646_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246849207_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246849a32_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24684a192_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24684a45b_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24684ad52_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24684b58e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24684bbee_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246853101_FieldIns> _24684d3a4_instance(jule::Ptr<_24684d030_Field> _self_) {
	return jule::new_ptr<_246853101_FieldIns>(_246853101_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _24684d030_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246850010_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246853ba1_StructIns> _246851385_instance(jule::Ptr<_246850e23_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_246853ba1_StructIns> _10013_ins = jule::new_ptr<_246853ba1_StructIns>(_246853ba1_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_246853101_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_246922555_Var>>::alloc(0LL, (*(_self_))._field_Statics.len()), ._field_Refers=static__24686c1d6_new(), });;
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad32dc1:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*(_10013_ins))._field_Statics; __jule_push_dest.push(jule::new_ptr<_246922555_Var>((*(_10721_s)))); };
			}
			_iter_next_22ad32dc1:;
			++it;
			goto _iter_begin_22ad32dc1;
		}
		_iter_end_22ad32dc1:;
	};
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad34466:;
		if (it != expr_end) {
			jule::Ptr<_24684d030_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_246853101_FieldIns>> &__jule_push_dest = (*(_10013_ins))._field_Fields; __jule_push_dest.push(_24684d3a4_instance(_11121_f)); };
				if ((((!((*(_11121_f))._field_Mutable)) && ((*((*(_11121_f))._field_Kind))._field_Kind != nullptr)) && _2469b5c7a_Mutable((*((*(_11121_f))._field_Kind))._field_Kind.ptr()))) {
					(*(_10013_ins))._field_Mutable=true;
				};
			}
			_iter_next_22ad34466:;
			++it;
			goto _iter_begin_22ad34466;
		}
		_iter_end_22ad34466:;
	};
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		(*(_10013_ins))._field_Methods=(*(_self_))._field_Methods;
	} else {
		(*(_10013_ins))._field_Methods=jule::Slice<jule::Ptr<_246865d17_Fn>>::alloc(0LL, (*(_self_))._field_Methods.len());
		{
			auto expr = &((*(_self_))._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22ad376cd:;
			if (it != expr_end) {
				jule::Ptr<_246865d17_Fn> _12225_f = *it;
				{
					jule::Ptr<_246865d17_Fn> _12321_fins = jule::new_ptr<_246865d17_Fn>((*(_12225_f)));;
					(*(_12321_fins))._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_246865d17_Fn>> &__jule_push_dest = (*(_10013_ins))._field_Methods; __jule_push_dest.push(_12321_fins); };
				}
				_iter_next_22ad376cd:;
				++it;
				goto _iter_begin_22ad376cd;
			}
			_iter_end_22ad376cd:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_246853ba1_StructIns> _246851693_appendInstance(_246850e23_Struct* _self_, jule::Ptr<_246853ba1_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad38091:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _14021_ains = *it;
			{
				if (_24685481c_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_22ad38091:;
			++it;
			goto _iter_begin_22ad38091;
		}
		_iter_end_22ad38091:;
	};
	{ jule::Slice<jule::Ptr<_246853ba1_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_246865d17_Fn> _246851a8e_FindMethod(_246850e23_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad3b33b:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*(_15321_f))._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_22ad3b33b:;
			++it;
			goto _iter_begin_22ad3b33b;
		}
		_iter_end_22ad3b33b:;
	};
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _246851dd0_FindStatic(_246850e23_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad3c65b:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_22ad3c65b:;
			++it;
			goto _iter_begin_22ad3c65b;
		}
		_iter_end_22ad3c65b:;
	};
	return nullptr;;
}



inline jule::Ptr<_24684d030_Field> _246852221_FindField(_246850e23_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad3cd32:;
		if (it != expr_end) {
			jule::Ptr<_24684d030_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_22ad3cd32:;
			++it;
			goto _iter_begin_22ad3cd32;
		}
		_iter_end_22ad3cd32:;
	};
	return nullptr;;
}



inline jule::Bool _246852562_IsImplements(_246850e23_Struct* _self_, jule::Ptr<_2468790e4_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad3dd33:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_22ad3dd33:;
			++it;
			goto _iter_begin_22ad3dd33;
		}
		_iter_end_22ad3dd33:;
	};
	return false;;
}



inline jule::Bool _2468528a3_IsUses(_246850e23_Struct* _self_, jule::Ptr<_246850e23_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad40483:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_22ad40c7a:;
				}
				_iter_end_22ad40c7a:;;
			}
			_iter_next_22ad40483:;
			++it;
			goto _iter_begin_22ad40483;
		}
		_iter_end_22ad40483:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _246850e23_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246853101_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246857aa6_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468580a1_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685847a_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468589a8_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246858d4e_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685914b_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468596ce_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685a081_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685a45a_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685a911_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685acda_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685b1b4_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685b66a_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685bbed_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685c281_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685cb22_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685d0c8_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685d4a2_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685d79e_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685db78_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685e052_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685e42b_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685e805_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685ecab_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246860262_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24686063b_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246860938_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246860c35_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24686110e_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468614d8_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468618b2_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24685c46d_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468620dd_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468623da_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468626d7_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246862ab1_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246862dad_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246863ab2_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246867c70_ParamIns> _2468646c8_instance(jule::Ptr<_246864343_Param> _self_) {
	return jule::new_ptr<_246867c70_ParamIns>(_246867c70_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _24686495e_IsSelf(_246864343_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _246864be5_IsRef(_246864343_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _246864343_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _24686628a_IsVoid(_246865d17_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _246866521_IsMethod(_246865d17_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _2468667a7_IsEntryPoint(_246865d17_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _246866a3d_IsInit(_246865d17_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _246866cc4_IsAnon(_246865d17_Fn* _self_) {
	return _24681ca6b_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _24686705a_AnyVar(_246865d17_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*((*(_self_))._field_Result))._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_246868c1b_FnIns> _2468672e1_instanceForce(jule::Ptr<_246865d17_Fn> _self_) {
	jule::Ptr<_246868c1b_FnIns> _10113_ins = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_2468a7760_Scope>(), ._field_Refers=static__24686c1d6_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_246867c70_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*(_self_))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad56d90:;
		if (it != expr_end) {
			jule::Ptr<_246864343_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_246867c70_ParamIns>> &__jule_push_dest = (*(_10113_ins))._field_Params; __jule_push_dest.push(_2468646c8_instance(_10821_p)); };
			}
			_iter_next_22ad56d90:;
			++it;
			goto _iter_begin_22ad56d90;
		}
		_iter_end_22ad56d90:;
	};
	if (((*((*(_10113_ins))._field_Decl))._field_Result != nullptr)) {
		(*(_10113_ins))._field_Result=(*((*((*((*(_10113_ins))._field_Decl))._field_Result))._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_246868c1b_FnIns> _246867577_instance(jule::Ptr<_246865d17_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _2468672e1_instanceForce(_self_);;
}



inline jule::Ptr<_246868c1b_FnIns> _246867885_appendInstance(_246865d17_Fn* _self_, jule::Ptr<_246868c1b_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad5c093:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _14521_ains = *it;
			{
				if (_24686a778_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_22ad5c093:;
			++it;
			goto _iter_begin_22ad5c093;
		}
		_iter_end_22ad5c093:;
	};
	{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _246865d17_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2468680d3_Str(_246867c70_ParamIns* _self_) {
	_2433b0c50_StrBuilder _16713_s = static__2433b1019_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2433b982a_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		_2433b982a_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_24686495e_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_246864be5_IsRef((*(_self_))._field_Decl.ptr())) {
			_2433b9ad3_WriteByte(&_16713_s, '&');
		};
		_2433b982a_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _2433ba122_Str(&_16713_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		_2433b982a_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2433b982a_WriteStr(&_16713_s, _2469b47a1_Str((*(_self_))._field_Kind.ptr()));
	};
	return _2433ba122_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _246867c70_ParamIns _Src) {
	_Stream << _2468680d3_Str(&_Src);
	return _Stream;
}



inline jule::Str _24686905c_Str(_246868c1b_FnIns* _self_) {
	;
	return _24686aab9_GetKindStr(_self_, false);;
}



inline jule::Bool _24686939d_Equal(jule::Ptr<_246868c1b_FnIns> _self_, jule::Ptr<_2469b43d8_TypeKind> _21821_other) {
	jule::Ptr<_246868c1b_FnIns> _2199_f = _2469b7d37_Fn(_21821_other.ptr());;
	if ((_2199_f == nullptr)) {
		return false;;
	};
	return _246869843_EqualFn(_self_, &(_2199_f));;
}



inline jule::Bool _246869843_EqualFn(jule::Ptr<_246868c1b_FnIns> _self_, jule::Ptr<_246868c1b_FnIns>* _22924_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*((*((*(_22924_f))))._field_Decl))._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*((*((*(_22924_f))))._field_Decl))._field_Unsafety)) {
		return false;;
	};
	if ((_24686628a_IsVoid((*(_self_))._field_Decl.ptr()) != _24686628a_IsVoid((*((*(_22924_f))))._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_246867c70_ParamIns>,jule::Ptr<_246867c70_ParamIns>)> _2399_checkParams = jule::Fn<jule::Bool(jule::Ptr<_246867c70_ParamIns>,jule::Ptr<_246867c70_ParamIns>)>([=](jule::Ptr<_246867c70_ParamIns> _23927_p1, jule::Ptr<_246867c70_ParamIns> _23942_p2) mutable -> jule::Bool {
		if (((*((*(_23927_p1))._field_Decl))._field_Mutable != (*((*(_23942_p2))._field_Decl))._field_Mutable)) {
			return false;;
		};
		if (_24686495e_IsSelf((*(_23927_p1))._field_Decl.ptr())) {
			if ((!(_24686495e_IsSelf((*(_23942_p2))._field_Decl.ptr())))) {
				return false;;
			};
			if ((_246864be5_IsRef((*(_23927_p1))._field_Decl.ptr()) != _246864be5_IsRef((*(_23942_p2))._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Reference != (*((*(_23942_p2))._field_Decl))._field_Reference)) {
			return false;;
		};
		if (((*((*(_23927_p1))._field_Decl))._field_Variadic != (*((*(_23942_p2))._field_Decl))._field_Variadic)) {
			return false;;
		};
		return _2469b4ae2_Equal((*(_23927_p1))._field_Kind, (*(_23942_p2))._field_Kind);;
	});;
	if (((*((*(_22924_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I64 _27113_i = 0LL;;
	for (; (_27113_i < (*(_self_))._field_Params.len()); (_27113_i)++) {
		{
			if ((!(_2399_checkParams((*(_self_))._field_Params[_27113_i], (*((*(_22924_f))))._field_Params[_27113_i])))) {
				return false;;
			};
		}
	_iter_next_22ad6d1a3:;
	}
	_iter_end_22ad6d1a3:;;
	if ((!(_24686628a_IsVoid((*(_self_))._field_Decl.ptr())))) {
		if ((!(_2469b4ae2_Equal((*(_self_))._field_Result, (*((*(_22924_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _246869b84_equalTrait(jule::Ptr<_246868c1b_FnIns> _self_, jule::Ptr<_246868c1b_FnIns>* _28827_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*((*((*(_28827_other))))._field_Decl))._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*((*((*(_28827_other))))._field_Decl))._field_Ident)) {
		return false;;
	};
	if ((!(_246869843_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*((*((*(_28827_other))))._field_Decl))._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _246869e1a_Types(_246868c1b_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_22ad7386d:;
			{
				return nullptr;;
			}
		}
		else if ((_2469b8871_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_22ad738d4:;
			{
				return jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_22ad73807:;
			{
				return (*(_2469b8871_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_22ad7373b:;
	};
}



inline jule::Bool _24686a1a1_IsBuiltin(_246868c1b_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _24686a437_IsAnon(_246868c1b_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _246866cc4_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _24686a778_Same(_246868c1b_FnIns* _self_, jule::Ptr<_246868c1b_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != (*(_33119_f))._field_Decl) || ((*(_33119_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad76651:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_2469b2a02_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_2469b2a02_InsGeneric> _33713_g2 = (*(_33119_f))._field_Generics[_33613_i];;
				if ((((*((*((*(_33616_g))))._field_Kind))._field_BindIdent != (*((*(_33713_g2))._field_Kind))._field_BindIdent) || (!(_2469b4ae2_Equal((*((*(_33616_g))))._field_Kind, (*(_33713_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_22ad76651:;
			++it;
			_33613_i++;
			goto _iter_begin_22ad76651;
		}
		_iter_end_22ad76651:;
	};
	return true;;
}



inline jule::Str _24686aab9_GetKindStr(_246868c1b_FnIns* _self_, jule::Bool _34825_ident) {
	_2433b0c50_StrBuilder _34913_s = static__2433b1019_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_2433b982a_WriteStr(&_34913_s, jule::Str::lit("unsafe ", 7));
	};
	_2433b982a_WriteStr(&_34913_s, jule::Str::lit("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2433b9ad3_WriteByte(&_34913_s, ' ');
		_2433b982a_WriteStr(&_34913_s, (*((*(_self_))._field_Decl))._field_Ident);
	};
	_2433b9ad3_WriteByte(&_34913_s, '(');
	jule::I64 _3639_n = (*(_self_))._field_Params.len();;
	if ((_3639_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22ad7c0d5:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_246867c70_ParamIns> *_36520_p = it;
				{
					_2433b982a_WriteStr(&_34913_s, _2468680d3_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2433b9ad3_WriteByte(&_34913_s, ',');
					};
				}
				_iter_next_22ad7c0d5:;
				++it;
				_36517_i++;
				goto _iter_begin_22ad7c0d5;
			}
			_iter_end_22ad7c0d5:;
		};
	};
	_2433b9ad3_WriteByte(&_34913_s, ')');
	if ((*((*(_self_))._field_Decl))._field_Exceptional) {
		_2433b9ad3_WriteByte(&_34913_s, '!');
	};
	if ((!(_24686628a_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_2433b9ad3_WriteByte(&_34913_s, ':');
		_2433b982a_WriteStr(&_34913_s, _2469b47a1_Str((*(_self_))._field_Result.ptr()));
	};
	return _2433ba122_Str(&_34913_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _246868c1b_FnIns _Src) {
	_Stream << _24686905c_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_24686bdd9_ReferenceStack> static__24686c1d6_new(void) {
	return jule::new_ptr<_24686bdd9_ReferenceStack>(_24686bdd9_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _24686c5d2_Len(_24686bdd9_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _24686c923_At(_24686bdd9_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _24686cbcb_Push(_24686bdd9_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _22b6e7521_Exist(_24686bdd9_ReferenceStack* _self_, jule::Ptr<_246868c1b_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b6e8720:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_22b6e8720:;
			++it;
			goto _iter_begin_22b6e8720;
		}
		_iter_end_22b6e8720:;
	};
	return false;;
}

inline jule::Bool _22b70b205_Exist(_24686bdd9_ReferenceStack* _self_, jule::Ptr<_246922555_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b70c3b0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_22b70c3b0:;
			++it;
			goto _iter_begin_22b70c3b0;
		}
		_iter_end_22b70c3b0:;
	};
	return false;;
}

inline jule::Bool _22b7b859d_Exist(_24686bdd9_ReferenceStack* _self_, jule::Ptr<_246853ba1_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b7b979c:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_22b7b979c:;
			++it;
			goto _iter_begin_22b7b979c;
		}
		_iter_end_22b7b979c:;
	};
	return false;;
}

inline jule::Bool _22bacccd0_Exist(_24686bdd9_ReferenceStack* _self_, jule::Ptr<_2468790e4_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bacde57:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_22bacde57:;
			++it;
			goto _iter_begin_22bacde57;
		}
		_iter_end_22bacde57:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _24686bdd9_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24686d407_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _24687385d_pushErr(_246872ebc_symbolBuilder* _self_, jule::Ptr<_246819d43_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_24345e617_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2468ecc8e_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _2468740de_pushSuggestion(_246872ebc_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_2468ee345_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _2468744da_checkCppUseDeclPath(_246872ebc_symbolBuilder* _self_, jule::Ptr<_246848190_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _2433bd0d1_Ext((*(_34556_path)));;
	if (((!(_2434526c6_IsValidHeaderExt(_3469_ext))) && (!(_243452990_IsValidCppExt(_3469_ext))))) {
		_24687385d_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_241ee3246_Status> _3539_info = ({
		auto except = static__241ededd0_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_24687385d_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_241ee3246_Status>(nullptr);});
	});;
	if (_241ee3620_IsDir(_3539_info.ptr())) {
		_24687385d_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2468747e8_buildCppHeaderImport(_246872ebc_symbolBuilder* _self_, jule::Ptr<_246848190_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_2434523eb_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_2433bcd17_Join(jule::Slice<jule::Str>::make({_246820c7d_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _2468744da_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433bd39a_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_24687385d_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_2468c8bd2_ImportInfo>(_2468c8bd2_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _246874b39_buildStdImport(_246872ebc_symbolBuilder* _self_, jule::Ptr<_246848190_UseDecl>* _39338_decl) {
	jule::Str _39413_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39413_path=_2433a2659_Replace(_39413_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_39413_path=_2433bcd17_Join(jule::Slice<jule::Str>::make({_2435761e0_PathStdlib,_39413_path}));
	jule::Bool _39715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433bd39a_Abs(_39413_path);
		_39413_path = __jule_assign_result.__jule_result_arg0;
		_39715_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39715_ok))) {
		_24687385d_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_241ee3246_Status> _4049_info = ({
		auto except = static__241ededd0_Of(_39413_path);
		(except.ok()) ? (except.result) : ({{
			_24687385d_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_241ee3246_Status>(nullptr);});
	});;
	if ((!(_241ee3620_IsDir(_4049_info.ptr())))) {
		_24687385d_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4149_i = (_24339d1d2_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4159_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4149_i);;
	return jule::new_ptr<_2468c8bd2_ImportInfo>(_2468c8bd2_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39413_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4159_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_2468cbb08_Package>(_2468cbb08_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _246874e7a_buildIdentImport(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_246848190_UseDecl>* _43241_decl) {
	jule::Str _4339_modPath = _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4d32_GetModPath((*(_self_))._field_importer);;
	if ((_4339_modPath.len() == 0LL)) {
		_24687385d_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_2468740de_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44013_path = (*((*(_43241_decl))))._field_LinkPath;;
	_44013_path=_2433a2659_Replace(_44013_path, jule::Str::lit("::", 2), jule::Str::lit("/", 1), -1LL);
	_44013_path=_2433bcd17_Join(jule::Slice<jule::Str>::make({_4339_modPath,_44013_path}));
	jule::Bool _44415_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433bd39a_Abs(_44013_path);
		_44013_path = __jule_assign_result.__jule_result_arg0;
		_44415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44415_ok))) {
		_24687385d_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_241ee3246_Status> _4519_info = ({
		auto except = static__241ededd0_Of(_44013_path);
		(except.ok()) ? (except.result) : ({{
			_24687385d_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_241ee3246_Status>(nullptr);});
	});;
	if ((!(_241ee3620_IsDir(_4519_info.ptr())))) {
		_24687385d_pushErr(_self_.ptr(), &((*((*(_43241_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43241_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _4619_i = (_24339d1d2_FindLast((*((*(_43241_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4629_ident = (*((*(_43241_decl))))._field_LinkPath.slice(_4619_i);;
	return jule::new_ptr<_2468c8bd2_ImportInfo>(_2468c8bd2_ImportInfo{._field_Token=(*((*(_43241_decl))))._field_Token, ._field_Path=_44013_path, ._field_LinkPath=(*((*(_43241_decl))))._field_LinkPath, ._field_Ident=_4629_ident, ._field_Alias=(*((*(_43241_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43241_decl))))._field_Full, ._field_Package=jule::new_ptr<_2468cbb08_Package>(_2468cbb08_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2468752bb_buildImport(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_246848190_UseDecl>* _47936_decl) {
	{
		
		if ((*((*(_47936_decl))))._field_Binded) {
			_case_begin_22adb840c:;
			{
				return _2468747e8_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*((*(_47936_decl))))._field_Std) {
			_case_begin_22adb7cbe:;
			{
				return _246874b39_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_22adb7c58:;
			{
				return _246874e7a_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_22adb7b8c:;
	};
}



inline jule::Bool _24687560c_checkDuplicateUseDecl(_246872ebc_symbolBuilder* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2468c8bd2_ImportInfo> _4929_lpkg = _24697dc10_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>([=](jule::Ptr<_2468c8bd2_ImportInfo> _49245_spkg) mutable -> jule::Bool {
		return ((*((*(_49041_pkg))))._field_Path == (*(_49245_spkg))._field_Path);;
	}));;
	if ((_4929_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_24687385d_pushErr(_self_, &((*((*(_49041_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49041_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_2468740de_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _246875970_implImportSelections(_246872ebc_symbolBuilder* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _50444_imp, jule::Ptr<_246848190_UseDecl>* _50467_decl) {
	(*((*(_50444_imp))))._field_Selected=(*((*(_50467_decl))))._field_Selected;
	{
		auto expr = &((*((*(_50444_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22adbc675:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> _50616_item = *it;
			{
				{
					auto expr = &((*((*(_50444_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22adbd2e1:;
					if (it != expr_end) {
						jule::Ptr<_246819d43_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_22adbd2e1;
							} else if (((*(_50616_item))._field_Kind == (*(_50720_citem))._field_Kind)) {
								_24687385d_pushErr(_self_, &(_50616_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*(_50616_item))._field_Kind, &__jule_any_type4)}));
								_2468740de_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_22adbd2e1;
							};
						}
						_iter_next_22adbd2e1:;
						++it;
						goto _iter_begin_22adbd2e1;
					}
					_iter_end_22adbd2e1:;
				};
			}
			_iter_next_22adbc675:;
			++it;
			goto _iter_begin_22adbc675;
		}
		_iter_end_22adbc675:;
	};
}



inline jule::Str _246875cb1_getAsLinkPath(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_24339b774_HasPrefix(_51937_path, _2435761e0_PathStdlib)) {
		(_51937_path).mut_slice(_2435761e0_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _2433a2659_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5259_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433bd39a_Abs(_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4d32_GetModPath((*(_self_))._field_importer));
		_5259_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_5259_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _2433a2659_Replace(_51937_path, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _2468761ce_pushCycleError(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_246872ebc_symbolBuilder>* _53335_sb, jule::Str _53355_path, _2433b0c50_StrBuilder* _53371_message) {
	;
	jule::Str _5359_refersTo = _24345ea79_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_246875cb1_getAsLinkPath(_self_, _246820c7d_Dir((*((*((*(_53335_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_246875cb1_getAsLinkPath(_self_, _53355_path), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5399_buf = _2433baac3_Buf(_53371_message);;
	_2433b982a_WriteStr(_53371_message, _24339ae7c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2433b982a_WriteStr(_53371_message, _5359_refersTo);
	_2433b9ad3_WriteByte(_53371_message, '\n');
	_2433b9572_Write(_53371_message, _5399_buf);
}



inline void _2468765ec_pushCrossCycleError(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_246872ebc_symbolBuilder>* _54640_target, jule::Ptr<_2468c8bd2_ImportInfo>* _54665_imp, jule::Ptr<_246819d43_Token>* _54684_errorToken) {
	_2433b0c50_StrBuilder _54713_message = static__2433b1019_New(32LL);;
	_2468761ce_pushCycleError(_self_, &(_self_), (*((*(_54665_imp))))._field_Path, &(_54713_message));
	jule::Ptr<_246872ebc_symbolBuilder> _55113_owner = (*(_self_))._field_owner;;
	jule::Ptr<_246872ebc_symbolBuilder> _55213_old = _self_;;
	while (((*(_55113_owner))._field_owner != nullptr)) {
		{
			_2468761ce_pushCycleError(_self_, &((*(_55213_old))._field_owner), _246820c7d_Dir((*((*(_55213_old))._field_table))._field_File.ptr()), &(_54713_message));
			if (((*(_55113_owner))._field_owner == (*(_54640_target)))) {
				_2468761ce_pushCycleError(_self_, _54640_target, _246820c7d_Dir((*((*(_55113_owner))._field_table))._field_File.ptr()), &(_54713_message));
				goto _iter_end_22adc687c;
			};
			_55213_old=_55113_owner;
			_55113_owner=(*(_55113_owner))._field_owner;
		}
	_iter_next_22adc687c:;
	}
	_iter_end_22adc687c:;;
	_24687385d_pushErr(_self_.ptr(), _54684_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_2433ba122_Str(&_54713_message), &__jule_any_type4)}));
}



inline jule::Bool _2468769e8_checkImportCycles(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_2468c8bd2_ImportInfo> _56937_imp, jule::Ptr<_246848190_UseDecl>* _56956_decl) {
	if (((*(_56937_imp))._field_Path == _246820c7d_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_24687385d_pushErr(_self_.ptr(), &((*((*(_56956_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_246875cb1_getAsLinkPath(_self_, (*(_56937_imp))._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_246872ebc_symbolBuilder> _57913_owner = (*(_self_))._field_owner;;
	_julec_label_22adcbed1:;
	if ((_246820c7d_Dir((*((*(_57913_owner))._field_table))._field_File.ptr()) == (*(_56937_imp))._field_Path)) {
		_2468765ec_pushCrossCycleError(_self_, &(_57913_owner), &(_56937_imp), &((*((*(_56956_decl))))._field_Token));
		return false;;
	};
	if (((*(_57913_owner))._field_owner != nullptr)) {
		_57913_owner=(*(_57913_owner))._field_owner;
		goto _julec_label_22adcbed1;
	};
	return true;;
}



inline void _246876e16_checkPackageAccessibility(_246872ebc_symbolBuilder* _self_, jule::Ptr<_246848190_UseDecl>* _60045_decl, jule::Str* _60062_mod, jule::Str* _60073_path) {
	if (((_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4d32_GetModPath((*(_self_))._field_importer) != (*(_60062_mod))) && _2433a127e_Contains((*(_60073_path)), jule::Str::lit("internal", 8)))) {
		_24687385d_pushErr(_self_, &((*((*(_60045_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _246877312_importPackage(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _60638_imp, jule::Ptr<_246848190_UseDecl>* _60661_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_60638_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2468c8bd2_ImportInfo> _61113_port = _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c54b4_GetImport((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path);;
	if ((_61113_port != nullptr)) {
		(*((*(_60638_imp))))._field_Package=(*(_61113_port))._field_Package;
		(*((*(_60638_imp))))._field_Duplicate=true;
		jule::Str _61613_oldMod = _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4d32_GetModPath((*(_self_))._field_importer);;
		_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4a9b_SetModPath((*(_self_))._field_importer, _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c5173_ModById((*(_self_))._field_importer, (*((*(_60638_imp))))._field_ModId));
		_246876e16_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_61613_oldMod), &((*(_61113_port))._field_Path));
		_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4a9b_SetModPath((*(_self_))._field_importer, _61613_oldMod);
	} else {
		if ((!(_2468769e8_checkImportCycles(_self_, (*(_60638_imp)), _60661_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62513_oldMod = _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4d32_GetModPath((*(_self_))._field_importer);;
		__JULE_DEFER({
			_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4a9b_SetModPath((*(_self_))._field_importer, _62513_oldMod);
		});;
		if ((*((*(_60638_imp))))._field_Std) {
			_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c4a9b_SetModPath((*(_self_))._field_importer, _2435761e0_PathStdlib);
		};
		jule::Slice<jule::Ptr<_24682d472_Ast>> _63017_asts;;
		jule::Slice<_24345e617_Log> _63027_errors;;
		({
			__jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log __jule_assign_result = _2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c58b0_ImportPackage((*(_self_))._field_importer, (*((*(_60638_imp))))._field_Path, (!((*((*(_60638_imp))))._field_Std)));
			_63017_asts = __jule_assign_result.__jule_result_arg0;
			_63027_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63027_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_63027_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_246876e16_checkPackageAccessibility(_self_.ptr(), _60661_decl, &(_62513_oldMod), &((*((*(_60638_imp))))._field_Path));
		{
			auto expr = &(_63017_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22add7926:;
			if (it != expr_end) {
				jule::Ptr<_24682d472_Ast> _63825_ast = *it;
				{
					jule::Ptr<_24697d726_SymbolTable> _63925_table = nullptr;;
					({
						__jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log __jule_assign_result = _2469d4ea8_buildSymbols(&(_63825_ast), &((*(_self_))._field_importer), _self_);
						_63925_table = __jule_assign_result.__jule_result_arg0;
						_63027_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63027_errors.len() > 0LL)) {
						((*(_self_))._field_errors).append(_63027_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_24697d726_SymbolTable>> &__jule_push_dest = (*((*((*(_60638_imp))))._field_Package))._field_Files; __jule_push_dest.push(_63925_table); };
				}
				_iter_next_22add7926:;
				++it;
				goto _iter_begin_22add7926;
			}
			_iter_end_22add7926:;
		};
	};
	_246875970_implImportSelections(_self_.ptr(), _60638_imp, _60661_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _246877653_importUseDecl(jule::Ptr<_246872ebc_symbolBuilder> _self_, jule::Ptr<_246848190_UseDecl>* _65338_decl) {
	jule::Ptr<_2468c8bd2_ImportInfo> _65413_imp = _2468752bb_buildImport(_self_, _65338_decl);;
	if ((_65413_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66013_ok = _24687560c_checkDuplicateUseDecl(_self_.ptr(), &(_65413_imp));;
	if ((!(_66013_ok))) {
		return nullptr;;
	};
	_66013_ok=_246877312_importPackage(_self_, &(_65413_imp), _65338_decl);
	{ jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Imports; __jule_push_dest.push(_65413_imp); };
	if (_66013_ok) {
		_2468c5cbc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._2468c5b68_Imported((*(_self_))._field_importer, _65413_imp);
		return _65413_imp;;
	};
	return nullptr;;
}



inline void _246877851_importUseDecls(jule::Ptr<_246872ebc_symbolBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22addc62e:;
		if (it != expr_end) {
			jule::Ptr<_246848190_UseDecl> _67521_decl = *it;
			{
				_246877653_importUseDecl(_self_, &(_67521_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					goto _iter_end_22addc62e;
				};
			}
			_iter_next_22addc62e:;
			++it;
			goto _iter_begin_22addc62e;
		}
		_iter_end_22addc62e:;
	};
}



inline void _246877b09_appendNode(_246872ebc_symbolBuilder* _self_, _24682e31e_Node* _68434_node) {
	{
		auto &_match_expr{ (*(_68434_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_22adde93e:;
			{
				{ jule::Slice<jule::Ptr<_2468a2309_Impl>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Impls; __jule_push_dest.push(_246872906_buildImpl((*(_68434_node))._field_Data.cast_ptr<_24684bbee_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_22addeb92:;
			{
				jule::Ptr<_2469b35e6_TypeAlias> _68917_ta = _24686dd42_buildTypeAlias((*(_68434_node))._field_Data.cast_ptr<_246846b83_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push(_68917_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_22addec08:;
			{
				jule::Ptr<_246850e23_Struct> _69217_srct = _24686e716_buildStruct((*(_68434_node))._field_Data.cast_ptr<_24684ad52_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_246850e23_Struct>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Structs; __jule_push_dest.push(_69217_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_22addec6e:;
			{
				jule::Ptr<_246865d17_Fn> _69517_f = _246870409_buildFunc((*(_68434_node))._field_Data.cast_ptr<_246841ed0_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_246865d17_Fn>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Funcs; __jule_push_dest.push(_69517_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_22addecd5:;
			{
				jule::Ptr<_2468790e4_Trait> _69817_t = _246870c56_buildTrait((*(_68434_node))._field_Data.cast_ptr<_24684b58e_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_2468790e4_Trait>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Traits; __jule_push_dest.push(_69817_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_22ade0555:;
			{
				jule::Ptr<_246922555_Var> _70117_v = _246872373_buildVar((*(_68434_node))._field_Data.cast_ptr<_2468430ad_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_70117_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_22ade05bb:;
			{
				jule::Ptr<_24687b800_Enum> _70417_e = _24687175c_buildEnum((*(_68434_node))._field_Data.cast_ptr<_246849207_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_24687b800_Enum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Enums; __jule_push_dest.push(_70417_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_22ade0632:;
			{
				jule::Ptr<_24687d00a_TypeEnum> _70717_e = _2468720a9_buildTypeEnum((*(_68434_node))._field_Data.cast_ptr<_24684a192_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_24687d00a_TypeEnum>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeEnums; __jule_push_dest.push(_70717_e); };
			}
		}
		else {
			_case_begin_22addeb2b:;
			{
				_24687385d_pushErr(_self_, &((*(_68434_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_22adddc6d:;
	};
}



inline void _246877d07_appendNodes(_246872ebc_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ade070e:;
		if (it != expr_end) {
			_24682e31e_Node _71521_node = *it;
			{
				_246877b09_appendNode(_self_, &(_71521_node));
			}
			_iter_next_22ade070e:;
			++it;
			goto _iter_begin_22ade070e;
		}
		_iter_end_22ade070e:;
	};
}



inline void _2468780b0_pushDirectivePass(_246872ebc_symbolBuilder* _self_, jule::Ptr<_24682e73c_Directive>* _72041_d) {
	if (((*((*(_72041_d))))._field_Args.len() == 0LL)) {
		_24687385d_pushErr(_self_, &((*((*(_72041_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72041_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_246819d43_Token> _72513_arg = (*((*(_72041_d))))._field_Args[1LL];;
		_24687385d_pushErr(_self_, &(_72513_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72041_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_246819d43_Token> _7299_arg = (*((*(_72041_d))))._field_Args[0LL];;
	if (((*(_7299_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_24687385d_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7299_arg))._field_Kind[0LL] != '\"')) {
		_24687385d_pushErr(_self_, &(_7299_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_24686d407_Pass> &__jule_push_dest = (*((*(_self_))._field_table))._field_Passes; __jule_push_dest.push(_24686d407_Pass{._field_Token=(*((*(_72041_d))))._field_Tag, ._field_Text=(*(_7299_arg))._field_Kind.slice(1LL, ((*(_7299_arg))._field_Kind.len() - 1LL))}); };
}



inline void _2468782ad_appendTopDirectives(_246872ebc_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22adeacd0:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _74721_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_74721_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_22ae008a6:;
						{
							_2468780b0_pushDirectivePass(_self_, &(_74721_d));
						}
					}
					_match_end_22ae007eb:;
				};
			}
			_iter_next_22adeacd0:;
			++it;
			goto _iter_begin_22adeacd0;
		}
		_iter_end_22adeacd0:;
	};
}



inline void _2468784ab_build(jule::Ptr<_246872ebc_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_24697d726_SymbolTable>(_24697d726_SymbolTable{._field_File=(*((*(_self_))._field_ast))._field_File, });
	_2468782ad_appendTopDirectives(_self_.ptr());
	_246877851_importUseDecls(_self_);
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	_246877d07_appendNodes(_self_.ptr());
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246872ebc_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2468794ac_Str(_2468790e4_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _2468797ed_Equal(jule::Ptr<_2468790e4_Trait> _self_, jule::Ptr<_2469b43d8_TypeKind> _2521_other) {
	jule::Ptr<_2468790e4_Trait> _269_trt = _2469b8354_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_246865d17_Fn> _246879c93_FindMethod(_2468790e4_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ae04547:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_22ae04547:;
			++it;
			goto _iter_begin_22ae04547;
		}
		_iter_end_22ae04547:;
	};
	return _24687a425_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_246865d17_Fn> _24687a425_findMethodInherit(_2468790e4_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ae0c033:;
		if (it != expr_end) {
			jule::Ptr<_2469bb852_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_22ae0c033;
				};
				jule::Ptr<_2468790e4_Trait> _6017_t = _2469b8354_Trait((*(_5621_i))._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_246865d17_Fn> _6221_f2 = _246879c93_FindMethod(_6017_t.ptr(), (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_22ae0c033:;
			++it;
			goto _iter_begin_22ae0c033;
		}
		_iter_end_22ae0c033:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _2468790e4_Trait _Src) {
	_Stream << _2468794ac_Str(&_Src);
	return _Stream;
}



inline jule::Bool _24687b13a_AutoExpr(_24687ac83_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _24687ac83_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _24687bb74_Str(_24687b800_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _24687beb5_Equal(jule::Ptr<_24687b800_Enum> _self_, jule::Ptr<_2469b43d8_TypeKind> _3821_other) {
	jule::Ptr<_24687b800_Enum> _399_enm = _2469b72ed_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_24687ac83_EnumItem> _24687c3e4_FindItem(_24687b800_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ae10982:;
		if (it != expr_end) {
			jule::Ptr<_24687ac83_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_22ae10982:;
			++it;
			goto _iter_begin_22ae10982;
		}
		_iter_end_22ae10982:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _24687b800_Enum _Src) {
	_Stream << _24687bb74_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24687c933_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _24687d34b_Str(_24687d00a_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _24687d68c_Equal(jule::Ptr<_24687d00a_TypeEnum> _self_, jule::Ptr<_2469b43d8_TypeKind> _8021_other) {
	jule::Ptr<_24687d00a_TypeEnum> _819_tenm = _2469b7584_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_24687c933_TypeEnumItem> _24687dabb_FindItem(_24687d00a_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ae12b0a:;
		if (it != expr_end) {
			jule::Ptr<_24687c933_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_22ae12b0a:;
			++it;
			goto _iter_begin_22ae12b0a;
		}
		_iter_end_22ae12b0a:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _24687d00a_TypeEnum _Src) {
	_Stream << _24687d34b_Str(&_Src);
	return _Stream;
}



inline jule::Str _24687ed0e_Str(_24687e946_comptimeMatch* _self_) {
	return jule::Str::lit("comptimeMatch", 13);;
}



inline jule::Bool _246880150_Equal(jule::Ptr<_24687e946_comptimeMatch> _self_, jule::Ptr<_2469b43d8_TypeKind> _2021_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _24687e946_comptimeMatch _Src) {
	_Stream << _24687ed0e_Str(&_Src);
	return _Stream;
}



inline jule::Str _2468814d6_Str(_246881162_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _246881827_Equal(jule::Ptr<_246881162_comptimeRange> _self_, jule::Ptr<_2469b43d8_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _246881162_comptimeRange _Src) {
	_Stream << _2468814d6_Str(&_Src);
	return _Stream;
}



inline jule::Str _246881eed_Str(_246881b35_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _24688233e_Equal(jule::Ptr<_246881b35_comptimeStructField> _self_, jule::Ptr<_2469b43d8_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _2468828d3__Name(jule::Ptr<_246881b35_comptimeStructField> _self_, jule::Ptr<_2469857b6_Eval>* _5026_e, jule::Ptr<_24683837d_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _5513_constant = static__2445e4339_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246882cce__Type(jule::Ptr<_246881b35_comptimeStructField> _self_, jule::Ptr<_2469857b6_Eval>* _6330_e, jule::Ptr<_24683837d_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_246983ac2_Data> _2468831ca__Public(jule::Ptr<_246881b35_comptimeStructField> _self_, jule::Ptr<_2469857b6_Eval>* _7132_e, jule::Ptr<_24683837d_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _7613_constant = static__2445e4070_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_246983ac2_Data> _2468834d8_subIdent(jule::Ptr<_246881b35_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_22ae1ed8c:;
			{
				jule::Ptr<_246868c1b_FnIns> _8717_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _8833_e, jule::Ptr<_24683837d_FnCallExpr>* _8848_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468828d3__Name(_self_, _8833_e, _8848_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_22ae1ee03:;
			{
				jule::Ptr<_246868c1b_FnIns> _9417_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _9533_e, jule::Ptr<_24683837d_FnCallExpr>* _9548_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468831ca__Public(_self_, _9533_e, _9548_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_22ae1ee69:;
			{
				jule::Ptr<_246868c1b_FnIns> _10117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _10233_e, jule::Ptr<_24683837d_FnCallExpr>* _10248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246882cce__Type(_self_, _10233_e, _10248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_22ae1ed26:;
			{
				return nullptr;;
			}
		}
		_match_end_22ae1ec9e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246881b35_comptimeStructField _Src) {
	_Stream << _246881eed_Str(&_Src);
	return _Stream;
}



inline jule::Str _246883b6a_Str(_2468837e6_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _246883eab_Equal(jule::Ptr<_2468837e6_comptimeStructFields> _self_, jule::Ptr<_2469b43d8_TypeKind> _12021_other) {
	return false;;
}



inline void _24688442e_ready(_2468837e6_comptimeStructFields* _self_, jule::Ptr<_246922555_Var>* _12429_keyA, jule::Ptr<_246922555_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_12429_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_12429_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246881b35_comptimeStructField>(), 7)})});
	};
}



inline void _24688484c_step(_2468837e6_comptimeStructFields* _self_, jule::I64 _14623_i, jule::Ptr<_246922555_Var>* _14636_keyA, jule::Ptr<_246922555_Var>* _14653_keyB) {
	if (((*(_14636_keyA)) != nullptr)) {
		(*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_14623_i)));
		(*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_14636_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_14653_keyB)) != nullptr)) {
		(*(_2469b9124_comptimeStructField((*((*((*(_14653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14623_i];
	};
}



inline jule::I64 _246884ad3_len(_2468837e6_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _2468837e6_comptimeStructFields _Src) {
	_Stream << _246883b6a_Str(&_Src);
	return _Stream;
}



inline jule::Str _246885265_Str(_246884de1_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _2468855a6_Equal(jule::Ptr<_246884de1_comptimeStatic> _self_, jule::Ptr<_2469b43d8_TypeKind> _17021_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _246885bd3__Name(jule::Ptr<_246884de1_comptimeStatic> _self_, jule::Ptr<_2469857b6_Eval>* _17426_e, jule::Ptr<_24683837d_FnCallExpr>* _17441_fc) {
	if (((*((*(_17441_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_17426_e)).ptr(), (*((*((*(_17441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _17913_constant = static__2445e4339_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_17913_constant, &__jule_any_type19), ._field_Constant=_17913_constant});;
}



inline jule::Ptr<_246983ac2_Data> _2468860ce__Type(jule::Ptr<_246884de1_comptimeStatic> _self_, jule::Ptr<_2469857b6_Eval>* _18730_e, jule::Ptr<_24683837d_FnCallExpr>* _18745_fc) {
	if (((*((*(_18745_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_18730_e)).ptr(), (*((*((*(_18745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_18730_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_246983ac2_Data> _2468864ca__Public(jule::Ptr<_246884de1_comptimeStatic> _self_, jule::Ptr<_2469857b6_Eval>* _19532_e, jule::Ptr<_24683837d_FnCallExpr>* _19547_fc) {
	if (((*((*(_19547_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_19532_e)).ptr(), (*((*((*(_19547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _20013_constant = static__2445e4070_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_20013_constant, &__jule_any_type19), ._field_Constant=_20013_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24688681b_subIdent(jule::Ptr<_246884de1_comptimeStatic> _self_, jule::Str* _20829_ident) {
	{
		auto &_match_expr{ (*(_20829_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_22ae35820:;
			{
				jule::Ptr<_246868c1b_FnIns> _21117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _21233_e, jule::Ptr<_24683837d_FnCallExpr>* _21248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246885bd3__Name(_self_, _21233_e, _21248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_21117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_22ae35886:;
			{
				jule::Ptr<_246868c1b_FnIns> _21817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _21933_e, jule::Ptr<_24683837d_FnCallExpr>* _21948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468864ca__Public(_self_, _21933_e, _21948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_21817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_22ae358ec:;
			{
				jule::Ptr<_246868c1b_FnIns> _22517_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _22633_e, jule::Ptr<_24683837d_FnCallExpr>* _22648_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468860ce__Type(_self_, _22633_e, _22648_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_22517_method));;
			}
		}
		else {
			_case_begin_22ae357a9:;
			{
				return nullptr;;
			}
		}
		_match_end_22ae35732:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246884de1_comptimeStatic _Src) {
	_Stream << _246885265_Str(&_Src);
	return _Stream;
}



inline jule::Str _246886e26_Str(_246886aa2_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _246887267_Equal(jule::Ptr<_246886aa2_comptimeStatics> _self_, jule::Ptr<_2469b43d8_TypeKind> _24421_other) {
	return false;;
}



inline void _2468876da_ready(_246886aa2_comptimeStatics* _self_, jule::Ptr<_246922555_Var>* _24829_keyA, jule::Ptr<_246922555_Var>* _24846_keyB) {
	if (((*(_24829_keyA)) != nullptr)) {
		(*((*(_24829_keyA))))._field_Constant=true;
		(*((*(_24829_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_24829_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_24829_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24846_keyB)) != nullptr)) {
		(*((*(_24846_keyB))))._field_Constant=true;
		(*((*(_24846_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_24846_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246884de1_comptimeStatic>(), 9)})});
	};
}



inline void _246887b08_step(_246886aa2_comptimeStatics* _self_, jule::I64 _27023_i, jule::Ptr<_246922555_Var>* _27036_keyA, jule::Ptr<_246922555_Var>* _27053_keyB) {
	if (((*(_27036_keyA)) != nullptr)) {
		(*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_27023_i)));
		(*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_27036_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_27053_keyB)) != nullptr)) {
		(*(_2469babb4_comptimeStatic((*((*((*(_27053_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_27023_i];
	};
}



inline jule::I64 _246887d8e_len(_246886aa2_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _246886aa2_comptimeStatics _Src) {
	_Stream << _246886e26_Str(&_Src);
	return _Stream;
}



inline jule::Str _246888631_Str(_24688819c_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _246888972_Equal(jule::Ptr<_24688819c_comptimeEnumField> _self_, jule::Ptr<_2469b43d8_TypeKind> _29421_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _246888de5__Name(jule::Ptr<_24688819c_comptimeEnumField> _self_, jule::Ptr<_2469857b6_Eval>* _29826_e, jule::Ptr<_24683837d_FnCallExpr>* _29841_fc) {
	if (((*((*(_29841_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_29826_e)).ptr(), (*((*((*(_29841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _30313_constant = static__2445e4339_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_30313_constant, &__jule_any_type19), ._field_Constant=_30313_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246889236_subIdent(jule::Ptr<_24688819c_comptimeEnumField> _self_, jule::Str* _31129_ident) {
	{
		auto &_match_expr{ (*(_31129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_22ae46732:;
			{
				jule::Ptr<_246868c1b_FnIns> _31417_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _31533_e, jule::Ptr<_24683837d_FnCallExpr>* _31548_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246888de5__Name(_self_, _31533_e, _31548_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_31417_method));;
			}
		}
		else {
			_case_begin_22ae466bb:;
			{
				return nullptr;;
			}
		}
		_match_end_22ae46644:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _24688819c_comptimeEnumField _Src) {
	_Stream << _246888631_Str(&_Src);
	return _Stream;
}



inline jule::Str _2468898b8_Str(_246889544_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _246889c09_Equal(jule::Ptr<_246889544_comptimeEnumFields> _self_, jule::Ptr<_2469b43d8_TypeKind> _33321_other) {
	return false;;
}



inline void _24688a17c_ready(_246889544_comptimeEnumFields* _self_, jule::Ptr<_246922555_Var>* _33729_keyA, jule::Ptr<_246922555_Var>* _33746_keyB) {
	if (((*(_33729_keyA)) != nullptr)) {
		(*((*(_33729_keyA))))._field_Constant=true;
		(*((*(_33729_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_33729_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_33729_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33746_keyB)) != nullptr)) {
		(*((*(_33746_keyB))))._field_Constant=true;
		(*((*(_33746_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_33746_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24688819c_comptimeEnumField>(), 11)})});
	};
}



inline void _24688a59a_step(_246889544_comptimeEnumFields* _self_, jule::I64 _35923_i, jule::Ptr<_246922555_Var>* _35936_keyA, jule::Ptr<_246922555_Var>* _35953_keyB) {
	if (((*(_35936_keyA)) != nullptr)) {
		(*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_35923_i)));
		(*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_35936_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_35953_keyB)) != nullptr)) {
		(*(_2469b9641_comptimeEnumField((*((*((*(_35953_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35923_i];
	};
}



inline jule::I64 _24688a831_len(_246889544_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _246889544_comptimeEnumFields _Src) {
	_Stream << _2468898b8_Str(&_Src);
	return _Stream;
}



inline jule::Str _24688aeb3_Str(_24688ab3e_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _24688b304_Equal(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Ptr<_2469b43d8_TypeKind> _38321_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _24688ba63__Name(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Ptr<_2469857b6_Eval>* _38726_e, jule::Ptr<_24683837d_FnCallExpr>* _38741_fc) {
	if (((*((*(_38741_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_38726_e)).ptr(), (*((*((*(_38741_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _39213_constant = static__2445e4339_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_39213_constant, &__jule_any_type19), ._field_Constant=_39213_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24688be5e__Type(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Ptr<_2469857b6_Eval>* _40030_e, jule::Ptr<_24683837d_FnCallExpr>* _40045_fc) {
	if (((*((*(_40045_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_40030_e)).ptr(), (*((*((*(_40045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_40030_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_246983ac2_Data> _24688c35a__Variadic(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Ptr<_2469857b6_Eval>* _40834_e, jule::Ptr<_24683837d_FnCallExpr>* _40849_fc) {
	if (((*((*(_40849_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_40834_e)).ptr(), (*((*((*(_40849_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _41313_constant = static__2445e4070_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_41313_constant, &__jule_any_type19), ._field_Constant=_41313_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24688c756__Reference(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Ptr<_2469857b6_Eval>* _42135_e, jule::Ptr<_24683837d_FnCallExpr>* _42150_fc) {
	if (((*((*(_42150_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_42135_e)).ptr(), (*((*((*(_42150_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _42613_constant = static__2445e4070_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_42613_constant, &__jule_any_type19), ._field_Constant=_42613_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24688ca97_subIdent(jule::Ptr<_24688ab3e_comptimeParam> _self_, jule::Str* _43429_ident) {
	{
		auto &_match_expr{ (*(_43429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_22ae5b02c:;
			{
				jule::Ptr<_246868c1b_FnIns> _43717_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _43833_e, jule::Ptr<_24683837d_FnCallExpr>* _43848_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24688ba63__Name(_self_, _43833_e, _43848_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_43717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_22ae5b093:;
			{
				jule::Ptr<_246868c1b_FnIns> _44417_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _44533_e, jule::Ptr<_24683837d_FnCallExpr>* _44548_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24688c35a__Variadic(_self_, _44533_e, _44548_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_44417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_22ae5b11a:;
			{
				jule::Ptr<_246868c1b_FnIns> _45117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _45233_e, jule::Ptr<_24683837d_FnCallExpr>* _45248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24688c756__Reference(_self_, _45233_e, _45248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_45117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_22ae5b192:;
			{
				jule::Ptr<_246868c1b_FnIns> _45817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _45933_e, jule::Ptr<_24683837d_FnCallExpr>* _45948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24688be5e__Type(_self_, _45933_e, _45948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_45817_method));;
			}
		}
		else {
			_case_begin_22ae5aeb6:;
			{
				return nullptr;;
			}
		}
		_match_end_22ae5ae3e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _24688ab3e_comptimeParam _Src) {
	_Stream << _24688aeb3_Str(&_Src);
	return _Stream;
}



inline jule::Str _24688d229_Str(_24688cda5_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _24688d56a_Equal(jule::Ptr<_24688cda5_comptimeParams> _self_, jule::Ptr<_2469b43d8_TypeKind> _47721_other) {
	return false;;
}



inline void _24688d9dd_ready(_24688cda5_comptimeParams* _self_, jule::Ptr<_246922555_Var>* _48129_keyA, jule::Ptr<_246922555_Var>* _48146_keyB) {
	if (((*(_48129_keyA)) != nullptr)) {
		(*((*(_48129_keyA))))._field_Constant=true;
		(*((*(_48129_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_48129_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_48129_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_48146_keyB)) != nullptr)) {
		(*((*(_48146_keyB))))._field_Constant=true;
		(*((*(_48146_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_48146_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24688ab3e_comptimeParam>(), 13)})});
	};
}



inline void _24688de0b_step(_24688cda5_comptimeParams* _self_, jule::I64 _50323_i, jule::Ptr<_246922555_Var>* _50336_keyA, jule::Ptr<_246922555_Var>* _50353_keyB) {
	if (((*(_50336_keyA)) != nullptr)) {
		(*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_50323_i)));
		(*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_50336_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_50353_keyB)) != nullptr)) {
		(*(_2469b9b5d_comptimeParam((*((*((*(_50353_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_50323_i];
	};
}



inline jule::I64 _24688e192_len(_24688cda5_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _24688cda5_comptimeParams _Src) {
	_Stream << _24688d229_Str(&_Src);
	return _Stream;
}



inline jule::Str _24688e824_Str(_24688e4a0_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _24688eb65_Equal(jule::Ptr<_24688e4a0_comptimeTypeInfos> _self_, jule::Ptr<_2469b43d8_TypeKind> _52721_other) {
	return false;;
}



inline void _2468900d8_ready(_24688e4a0_comptimeTypeInfos* _self_, jule::Ptr<_246922555_Var>* _53129_keyA, jule::Ptr<_246922555_Var>* _53146_keyB) {
	if (((*(_53129_keyA)) != nullptr)) {
		(*((*(_53129_keyA))))._field_Constant=true;
		(*((*(_53129_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_53129_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_53129_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_53146_keyB)) != nullptr)) {
		(*((*(_53146_keyB))))._field_Constant=true;
		(*((*(_53146_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_53146_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246890a9a_comptimeTypeInfo>(), 16)})});
	};
}



inline void _246890506_step(_24688e4a0_comptimeTypeInfos* _self_, jule::I64 _55323_i, jule::Ptr<_246922555_Var>* _55336_keyA, jule::Ptr<_246922555_Var>* _55353_keyB) {
	if (((*(_55336_keyA)) != nullptr)) {
		(*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_55323_i)));
		(*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_55336_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_55353_keyB)) != nullptr)) {
		(*((*((*((*(_55353_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_self_))._field_types[_55323_i], 16);
	};
}



inline jule::I64 _24689078c_len(_24688e4a0_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _24688e4a0_comptimeTypeInfos _Src) {
	_Stream << _24688e824_Str(&_Src);
	return _Stream;
}



inline jule::Str _246890e1e_Str(_246890a9a_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _2469b47a1_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _246891260_Equal(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469b43d8_TypeKind> _57721_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _2468918ae__Str(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _58125_e, jule::Ptr<_24683837d_FnCallExpr>* _58140_fc) {
	if (((*((*(_58140_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_58125_e)).ptr(), (*((*((*(_58140_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _58613_constant = static__2445e4339_NewStr(_2469b47a1_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_58613_constant, &__jule_any_type19), ._field_Constant=_58613_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246891caa__Kind(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _59430_e, jule::Ptr<_24683837d_FnCallExpr>* _59445_fc) {
	if (((*((*(_59445_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_59430_e)).ptr(), (*((*((*(_59445_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_24687b800_Enum> _59913_enm = _2468ca93c_FindEnum(_24689d0c4_findComptimePackage(&((*((*(_59430_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_24687ac83_EnumItem> _60017_item = nullptr;;
	{
		
		if (_2469b575d_Void((*(_self_))._field_base.ptr())) {
			_case_begin_22ae78e29:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_2469b80bd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae78d4c:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_2469b8354_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae7907d:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_2469b7067_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae78b3d:;
			{
				if (_2469c5086_IsUnsafe(_2469b7067_Ptr((*(_self_))._field_base.ptr()).ptr())) {
					_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_2469b6cd1_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae78ba4:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_2469b72ed_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae79721:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_2469b85da_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae79787:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_2469b7aa1_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae797ed:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_2469b781a_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae79875:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_2469b7d37_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae798ec:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_2469b8871_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae79974:;
			{
				_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_2469b6a4a_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22ae799eb:;
			{
				jule::Ptr<_2469bc259_Prim> _62913_prim = _2469b6a4a_Prim((*(_self_))._field_base.ptr());;
				{
					
					if (_2469c0977_IsAny(_62913_prim.ptr())) {
						_case_begin_22ae859d5:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_2469c045a_IsBool(_62913_prim.ptr())) {
						_case_begin_22ae85782:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_2469c06e1_IsStr(_62913_prim.ptr())) {
						_case_begin_22ae85584:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_2469be68a_IsF32(_62913_prim.ptr())) {
						_case_begin_22ae86178:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_2469be921_IsF64(_62913_prim.ptr())) {
						_case_begin_22ae861de:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_2469bd117_IsI8(_62913_prim.ptr())) {
						_case_begin_22ae86255:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_2469bd39d_IsI16(_62913_prim.ptr())) {
						_case_begin_22ae862bb:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_2469bd634_IsI32(_62913_prim.ptr())) {
						_case_begin_22ae86332:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_2469bd8ba_IsI64(_62913_prim.ptr())) {
						_case_begin_22ae86398:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_2469bdb51_IsU8(_62913_prim.ptr())) {
						_case_begin_22ae8640e:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_2469bddd7_IsU16(_62913_prim.ptr())) {
						_case_begin_22ae86475:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_2469be16d_IsU32(_62913_prim.ptr())) {
						_case_begin_22ae864db:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_2469be404_IsU64(_62913_prim.ptr())) {
						_case_begin_22ae86552:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_2469beba7_IsInt(_62913_prim.ptr())) {
						_case_begin_22ae865b8:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_2469bee3d_IsUint(_62913_prim.ptr())) {
						_case_begin_22ae8662e:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_2469c01c4_IsUintptr(_62913_prim.ptr())) {
						_case_begin_22ae86695:;
						{
							_60017_item=_24687c3e4_FindItem(_59913_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_22ae853db:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _2469b47a1_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:664:17"));;
						}
					}
					_match_end_22ae85386:;
				};
			}
		}
		else {
			_case_begin_22ae789d9:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _2469b47a1_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:667:13"));;
			}
		}
		_match_end_22ae78665:;
	};
	return _2469b114e_evalEnumStatic(&(_59913_enm), &(_60017_item));;
}



inline jule::Ptr<_246983ac2_Data> _2468921a6__Bits(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _67230_e, jule::Ptr<_24683837d_FnCallExpr>* _67245_fc) {
	if (((*((*(_67245_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_67230_e)).ptr(), (*((*((*(_67245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469bc259_Prim> _6779_prim = _2469b6a4a_Prim((*(_self_))._field_base.ptr());;
	if ((_6779_prim == nullptr)) {
		_246985d16_pushErr((*(_67230_e)).ptr(), (*((*(_67245_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _6829_n = _2445d569e_BitsizeOf((*(_6779_prim))._field_Kind);;
	if ((_6829_n == -1LL)) {
		_246985d16_pushErr((*(_67230_e)).ptr(), (*((*(_67245_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _68713_constant = static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_6829_n)));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_68713_constant, &__jule_any_type19), ._field_Constant=_68713_constant});;
}



inline jule::Ptr<_246983ac2_Data> _2468925a2__Elem(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _69530_e, jule::Ptr<_24683837d_FnCallExpr>* _69545_fc) {
	if (((*((*(_69545_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_69530_e)).ptr(), (*((*((*(_69545_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c454c_Ptr> _70013_ptr = _2469b7067_Ptr((*(_self_))._field_base.ptr());;
	if ((_70013_ptr != nullptr)) {
		if (_2469c5086_IsUnsafe(_70013_ptr.ptr())) {
			_246985d16_pushErr((*(_69530_e)).ptr(), (*((*(_69545_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_70013_ptr))._field_Elem));;
	};
	jule::Ptr<_2469c0c85_Sptr> _70813_sptr = _2469b6cd1_Sptr((*(_self_))._field_base.ptr());;
	if ((_70813_sptr != nullptr)) {
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_70813_sptr))._field_Elem));;
	};
	jule::Ptr<_2469c1758_Slc> _71213_slice = _2469b7aa1_Slc((*(_self_))._field_base.ptr());;
	if ((_71213_slice != nullptr)) {
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_71213_slice))._field_Elem));;
	};
	jule::Ptr<_2469c3a79_Arr> _71613_array = _2469b781a_Arr((*(_self_))._field_base.ptr());;
	if ((_71613_array != nullptr)) {
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*(_71613_array))._field_Elem));;
	};
	jule::Ptr<_24687b800_Enum> _72013_enm = _2469b72ed_Enum((*(_self_))._field_base.ptr());;
	if ((_72013_enm != nullptr)) {
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_69530_e))))._field_s), &((*((*(_72013_enm))._field_Kind))._field_Kind));;
	};
	_246985d16_pushErr((*(_69530_e)).ptr(), (*((*(_69545_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_246983ac2_Data> _24689299d__Size(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _72830_e, jule::Ptr<_24683837d_FnCallExpr>* _72845_fc) {
	if (((*((*(_72845_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_72830_e)).ptr(), (*((*((*(_72845_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c3a79_Arr> _73313_arr = _2469b781a_Arr((*(_self_))._field_base.ptr());;
	if ((_73313_arr == nullptr)) {
		_246985d16_pushErr((*(_72830_e)).ptr(), (*((*(_72845_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _73813_constant = static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_73313_arr))._field_N)));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25e40_primInt, ._field_Model=jule::Any(_73813_constant, &__jule_any_type19), ._field_Constant=_73813_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246892d99__Key(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _74629_e, jule::Ptr<_24683837d_FnCallExpr>* _74644_fc) {
	if (((*((*(_74644_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_74629_e)).ptr(), (*((*((*(_74644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c2dec_Map> _75113_m = _2469b85da_Map((*(_self_))._field_base.ptr());;
	if ((_75113_m == nullptr)) {
		_246985d16_pushErr((*(_74629_e)).ptr(), (*((*(_74644_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_74629_e))))._field_s), &((*(_75113_m))._field_Key));;
}



inline jule::Ptr<_246983ac2_Data> _246893295__Value(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _75931_e, jule::Ptr<_24683837d_FnCallExpr>* _75946_fc) {
	if (((*((*(_75946_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_75931_e)).ptr(), (*((*((*(_75946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c2dec_Map> _76413_m = _2469b85da_Map((*(_self_))._field_base.ptr());;
	if ((_76413_m == nullptr)) {
		_246985d16_pushErr((*(_75931_e)).ptr(), (*((*(_75946_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_75931_e))))._field_s), &((*(_76413_m))._field_Val));;
}



inline jule::Ptr<_246983ac2_Data> _246893691__Fields(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _77232_e, jule::Ptr<_24683837d_FnCallExpr>* _77247_fc) {
	if (((*((*(_77247_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_77232_e)).ptr(), (*((*((*(_77247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246853ba1_StructIns> _77713_s = _2469b80bd_Struct((*(_self_))._field_base.ptr());;
	if ((_77713_s != nullptr)) {
		return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2468837e6_comptimeStructFields>(_2468837e6_comptimeStructFields{._field_fields=(*(_77713_s))._field_Fields}), 8)}), });;
	};
	jule::Ptr<_24687b800_Enum> _78713_enm = _2469b72ed_Enum((*(_self_))._field_base.ptr());;
	if ((_78713_enm != nullptr)) {
		return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246889544_comptimeEnumFields>(_246889544_comptimeEnumFields{._field_fields=(*(_78713_enm))._field_Items}), 12)}), });;
	};
	_246985d16_pushErr((*(_77232_e)).ptr(), (*((*(_77247_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_246983ac2_Data> _246893a8c__Statics(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _80133_e, jule::Ptr<_24683837d_FnCallExpr>* _80148_fc) {
	if (((*((*(_80148_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_80133_e)).ptr(), (*((*((*(_80148_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246853ba1_StructIns> _80613_s = _2469b80bd_Struct((*(_self_))._field_base.ptr());;
	if ((_80613_s == nullptr)) {
		_246985d16_pushErr((*(_80133_e)).ptr(), (*((*(_80148_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246886aa2_comptimeStatics>(_246886aa2_comptimeStatics{._field_fields=(*(_80613_s))._field_Statics}), 10)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246893e88__Public(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _82032_e, jule::Ptr<_24683837d_FnCallExpr>* _82047_fc) {
	if (((*((*(_82047_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_82032_e)).ptr(), (*((*((*(_82047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82513_public = false;;
	{
		
		if ((_2469b80bd_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22aeb72ca:;
			{
				_82513_public=(*((*(_2469b80bd_Struct((*(_self_))._field_base.ptr())))._field_Decl))._field_Public;
			}
		}
		else if ((_2469b8354_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22aeb62a7:;
			{
				_82513_public=(*(_2469b8354_Trait((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_2469b72ed_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22aeb631d:;
			{
				_82513_public=(*(_2469b72ed_Enum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else if ((_2469b7584_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_22aeb6384:;
			{
				_82513_public=(*(_2469b7584_TypeEnum((*(_self_))._field_base.ptr())))._field_Public;
			}
		}
		else {
			_case_begin_22aeb5e44:;
			{
				_246985d16_pushErr((*(_82032_e)).ptr(), (*((*(_82047_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22aeb5d23:;
	};
	jule::Ptr<_2445e359c_Const> _83913_constant = static__2445e4070_NewBool(_82513_public);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_83913_constant, &__jule_any_type19), ._field_Constant=_83913_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246894384__Binded(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _84732_e, jule::Ptr<_24683837d_FnCallExpr>* _84747_fc) {
	if (((*((*(_84747_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_84732_e)).ptr(), (*((*((*(_84747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _85213_constant = static__2445e4070_NewBool(_2469b5241_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_85213_constant, &__jule_any_type19), ._field_Constant=_85213_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246894780__Ordered(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _86029_e, jule::Ptr<_24683837d_FnCallExpr>* _86044_fc) {
	if (((*((*(_86044_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_86029_e)).ptr(), (*((*((*(_86044_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _86513_constant = static__2445e4070_NewBool(_2469b6011_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_86513_constant, &__jule_any_type19), ._field_Constant=_86513_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246894b7b__Comparable(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _87332_e, jule::Ptr<_24683837d_FnCallExpr>* _87347_fc) {
	if (((*((*(_87347_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_87332_e)).ptr(), (*((*((*(_87347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _87813_constant = static__2445e4070_NewBool(_2469b59e4_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_87813_constant, &__jule_any_type19), ._field_Constant=_87813_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246895077__Mutable(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _88629_e, jule::Ptr<_24683837d_FnCallExpr>* _88644_fc) {
	if (((*((*(_88644_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_88629_e)).ptr(), (*((*((*(_88644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _89113_constant = static__2445e4070_NewBool(_2469b5c7a_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_89113_constant, &__jule_any_type19), ._field_Constant=_89113_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246895473__Types(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _89931_e, jule::Ptr<_24683837d_FnCallExpr>* _89946_fc) {
	if (((*((*(_89946_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_89931_e)).ptr(), (*((*((*(_89946_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c234c_Tuple> _90413_tup = _2469b8871_Tup((*(_self_))._field_base.ptr());;
	if ((_90413_tup == nullptr)) {
		_246985d16_pushErr((*(_89931_e)).ptr(), (*((*(_89946_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_24688e4a0_comptimeTypeInfos> _90913_infos = jule::new_ptr<_24688e4a0_comptimeTypeInfos>(_24688e4a0_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_246890a9a_comptimeTypeInfo>>::alloc(0LL, (*(_90413_tup))._field_Types.len())});;
	{
		auto expr = &((*(_90413_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22aeca530:;
		if (it != expr_end) {
			jule::Ptr<_2469b43d8_TypeKind> _91221_t = *it;
			{
				{ jule::Slice<jule::Ptr<_246890a9a_comptimeTypeInfo>> &__jule_push_dest = (*(_90913_infos))._field_types; __jule_push_dest.push(_2468ee983_pushComptimeTypeInfo((*((*((*(_89931_e))))._field_s))._field_meta.ptr(), &(_91221_t))); };
			}
			_iter_next_22aeca530:;
			++it;
			goto _iter_begin_22aeca530;
		}
		_iter_end_22aeca530:;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_90913_infos, 15)}), });;
}



inline jule::Ptr<_246983ac2_Data> _24689586e__Exceptional(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _92237_e, jule::Ptr<_24683837d_FnCallExpr>* _92252_fc) {
	if (((*((*(_92252_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_92237_e)).ptr(), (*((*((*(_92252_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _92713_f = _2469b7d37_Fn((*(_self_))._field_base.ptr());;
	if ((_92713_f == nullptr)) {
		_246985d16_pushErr((*(_92237_e)).ptr(), (*((*(_92252_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _93213_constant = static__2445e4070_NewBool((((*(_92713_f))._field_Decl != nullptr) && (*((*(_92713_f))._field_Decl))._field_Exceptional));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_93213_constant, &__jule_any_type19), ._field_Constant=_93213_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246895c6a__CanNil(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _94032_e, jule::Ptr<_24683837d_FnCallExpr>* _94047_fc) {
	if (((*((*(_94047_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_94032_e)).ptr(), (*((*((*(_94047_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _94513_constant = static__2445e4070_NewBool(_2469b6297_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_94513_constant, &__jule_any_type19), ._field_Constant=_94513_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246896166__RC(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _95328_e, jule::Ptr<_24683837d_FnCallExpr>* _95343_fc) {
	if (((*((*(_95343_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_95328_e)).ptr(), (*((*((*(_95343_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _95813_constant = static__2445e4070_NewBool(_2469b652d_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_95813_constant, &__jule_any_type19), ._field_Constant=_95813_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246896562__Result(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _96632_e, jule::Ptr<_24683837d_FnCallExpr>* _96647_fc) {
	if (((*((*(_96647_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_96632_e)).ptr(), (*((*((*(_96647_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _97113_f = _2469b7d37_Fn((*(_self_))._field_base.ptr());;
	if ((_97113_f == nullptr)) {
		_246985d16_pushErr((*(_96632_e)).ptr(), (*((*(_96647_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_97113_f))._field_Result == nullptr)) {
		return _24689d448_buildComptimeTypeInfoData(&((*((*(_96632_e))))._field_s), &(_246b24b42_primVoid));;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_96632_e))))._field_s), &((*(_97113_f))._field_Result));;
}



inline jule::Ptr<_246983ac2_Data> _24689695d__Params(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Ptr<_2469857b6_Eval>* _98232_e, jule::Ptr<_24683837d_FnCallExpr>* _98247_fc) {
	if (((*((*(_98247_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_98232_e)).ptr(), (*((*((*(_98247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _98713_f = _2469b7d37_Fn((*(_self_))._field_base.ptr());;
	if ((_98713_f == nullptr)) {
		_246985d16_pushErr((*(_98232_e)).ptr(), (*((*(_98247_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24688cda5_comptimeParams>(_24688cda5_comptimeParams{._field_params=(*(_98713_f))._field_Params}), 14)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246896c9e_subIdent(jule::Ptr<_246890a9a_comptimeTypeInfo> _self_, jule::Str* _99929_ident) {
	{
		auto &_match_expr{ (*(_99929_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_22aede368:;
			{
				jule::Ptr<_246868c1b_FnIns> _100217_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _100333_e, jule::Ptr<_24683837d_FnCallExpr>* _100348_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468918ae__Str(_self_, _100333_e, _100348_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_100217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_22aede8eb:;
			{
				jule::Ptr<_246868c1b_FnIns> _100917_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _101033_e, jule::Ptr<_24683837d_FnCallExpr>* _101048_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468921a6__Bits(_self_, _101033_e, _101048_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_100917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_22aede962:;
			{
				jule::Ptr<_246868c1b_FnIns> _101617_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _101733_e, jule::Ptr<_24683837d_FnCallExpr>* _101748_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468925a2__Elem(_self_, _101733_e, _101748_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_101617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_22aede9c8:;
			{
				jule::Ptr<_246868c1b_FnIns> _102317_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _102433_e, jule::Ptr<_24683837d_FnCallExpr>* _102448_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689299d__Size(_self_, _102433_e, _102448_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_102317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_22aedea3e:;
			{
				jule::Ptr<_246868c1b_FnIns> _103017_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _103133_e, jule::Ptr<_24683837d_FnCallExpr>* _103148_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246892d99__Key(_self_, _103133_e, _103148_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_103017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_22aedeb4e:;
			{
				jule::Ptr<_246868c1b_FnIns> _103717_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _103833_e, jule::Ptr<_24683837d_FnCallExpr>* _103848_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246893295__Value(_self_, _103833_e, _103848_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_103717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_22aedebb5:;
			{
				jule::Ptr<_246868c1b_FnIns> _104417_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _104533_e, jule::Ptr<_24683837d_FnCallExpr>* _104548_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246893691__Fields(_self_, _104533_e, _104548_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_104417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_22aedec2b:;
			{
				jule::Ptr<_246868c1b_FnIns> _105117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _105233_e, jule::Ptr<_24683837d_FnCallExpr>* _105248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246893a8c__Statics(_self_, _105233_e, _105248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_105117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_22aedec92:;
			{
				jule::Ptr<_246868c1b_FnIns> _105817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _105933_e, jule::Ptr<_24683837d_FnCallExpr>* _105948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689695d__Params(_self_, _105933_e, _105948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_105817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_22aeded08:;
			{
				jule::Ptr<_246868c1b_FnIns> _106517_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _106633_e, jule::Ptr<_24683837d_FnCallExpr>* _106648_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246895473__Types(_self_, _106633_e, _106648_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_106517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_22aeded6e:;
			{
				jule::Ptr<_246868c1b_FnIns> _107217_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _107333_e, jule::Ptr<_24683837d_FnCallExpr>* _107348_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246893e88__Public(_self_, _107333_e, _107348_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_107217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_22aededd5:;
			{
				jule::Ptr<_246868c1b_FnIns> _107917_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _108033_e, jule::Ptr<_24683837d_FnCallExpr>* _108048_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246894384__Binded(_self_, _108033_e, _108048_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_107917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_22aedee5c:;
			{
				jule::Ptr<_246868c1b_FnIns> _108617_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _108733_e, jule::Ptr<_24683837d_FnCallExpr>* _108748_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246894780__Ordered(_self_, _108733_e, _108748_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_108617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_22aedeed4:;
			{
				jule::Ptr<_246868c1b_FnIns> _109317_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _109433_e, jule::Ptr<_24683837d_FnCallExpr>* _109448_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246894b7b__Comparable(_self_, _109433_e, _109448_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_109317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_22aee005b:;
			{
				jule::Ptr<_246868c1b_FnIns> _110017_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _110133_e, jule::Ptr<_24683837d_FnCallExpr>* _110148_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246895077__Mutable(_self_, _110133_e, _110148_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_110017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_22aee00d3:;
			{
				jule::Ptr<_246868c1b_FnIns> _110717_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _110833_e, jule::Ptr<_24683837d_FnCallExpr>* _110848_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689586e__Exceptional(_self_, _110833_e, _110848_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_110717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_22aee015a:;
			{
				jule::Ptr<_246868c1b_FnIns> _111417_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _111533_e, jule::Ptr<_24683837d_FnCallExpr>* _111548_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246895c6a__CanNil(_self_, _111533_e, _111548_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_111417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_22aee01d2:;
			{
				jule::Ptr<_246868c1b_FnIns> _112117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _112233_e, jule::Ptr<_24683837d_FnCallExpr>* _112248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246896166__RC(_self_, _112233_e, _112248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_112117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_22aee0259:;
			{
				jule::Ptr<_246868c1b_FnIns> _112817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _112933_e, jule::Ptr<_24683837d_FnCallExpr>* _112948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246896562__Result(_self_, _112933_e, _112948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_112817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_22aee02d1:;
			{
				jule::Ptr<_246868c1b_FnIns> _113517_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _113633_e, jule::Ptr<_24683837d_FnCallExpr>* _113648_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246891caa__Kind(_self_, _113633_e, _113648_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_113517_method));;
			}
		}
		else {
			_case_begin_22aede4cd:;
			{
				return nullptr;;
			}
		}
		_match_end_22aede1ae:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246890a9a_comptimeTypeInfo _Src) {
	_Stream << _246890e1e_Str(&_Src);
	return _Stream;
}



inline jule::Str _246897431_Str(_2468970ac_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _246897772_Equal(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469b43d8_TypeKind> _115421_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _246897cc2__Unwrap(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _115832_e, jule::Ptr<_24683837d_FnCallExpr>* _115847_fc) {
	if (((*((*(_115847_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_115832_e)).ptr(), (*((*((*(_115847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_246983ac2_Data> _2468981bd__Type(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _116630_e, jule::Ptr<_24683837d_FnCallExpr>* _116645_fc) {
	if (((*((*(_116645_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_116630_e)).ptr(), (*((*((*(_116645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_116630_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_246983ac2_Data> _2468985b9__Lvalue(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _117432_e, jule::Ptr<_24683837d_FnCallExpr>* _117447_fc) {
	if (((*((*(_117447_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_117432_e)).ptr(), (*((*((*(_117447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _117913_constant = static__2445e4070_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_117913_constant, &__jule_any_type19), ._field_Constant=_117913_constant});;
}



inline jule::Ptr<_246983ac2_Data> _2468989b5__Mutable(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _118733_e, jule::Ptr<_24683837d_FnCallExpr>* _118748_fc) {
	if (((*((*(_118748_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_118733_e)).ptr(), (*((*((*(_118748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _119213_constant = static__2445e4070_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_119213_constant, &__jule_any_type19), ._field_Constant=_119213_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246898db1__Const(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _120031_e, jule::Ptr<_24683837d_FnCallExpr>* _120046_fc) {
	if (((*((*(_120046_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_120031_e)).ptr(), (*((*((*(_120046_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _120513_constant = static__2445e4070_NewBool(_246984496_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_120513_constant, &__jule_any_type19), ._field_Constant=_120513_constant});;
}



inline jule::Ptr<_246983ac2_Data> _2468992ac__Field(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Ptr<_2469857b6_Eval>* _121331_e, jule::Ptr<_24683837d_FnCallExpr>* _121346_fc) {
	if (((*((*(_121346_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_121331_e)).ptr(), (*((*((*(_121346_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246853ba1_StructIns> _121813_s = _2469b80bd_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121813_s == nullptr)) {
		_246985d16_pushErr((*(_121331_e)).ptr(), (*((*(_121346_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246834654_Expr> _122313_arg = (*((*(_121346_fc))))._field_Args[0LL];;
	jule::Ptr<_246983ac2_Data> _122413_d = _2469a3a26_evalExpr((*(_121331_e)), _122313_arg);;
	if ((_122413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_246984496_IsConst(_122413_d.ptr())))) {
		_246985d16_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2469bc259_Prim> _12329_prim = _2469b6a4a_Prim((*(_122413_d))._field_Kind.ptr());;
	if (((_12329_prim == nullptr) || (!(_2469c06e1_IsStr(_12329_prim.ptr()))))) {
		_246985d16_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_122413_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12379_ident = _2445e5725_ReadStr((*(_122413_d))._field_Constant.ptr());;
	jule::Ptr<_246853101_FieldIns> _123813_f = _246855059_FindField(_121813_s.ptr(), _12379_ident);;
	if ((_123813_f == nullptr)) {
		_246985d16_pushErr((*(_121331_e)).ptr(), (*(_122313_arg))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121813_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12379_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_122413_d=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_data)));
	_122413_d=_24699bd2c_evalStructSubIdentField((*(_121331_e)).ptr(), &(_122413_d), &(_121813_s), &((*(_122313_arg))._field_Token), &(_123813_f));
	return _24689d679_buildComptimeValue(&(_122413_d));;
}



inline jule::Ptr<_246983ac2_Data> _2468995ed_subIdent(jule::Ptr<_2468970ac_comptimeValue> _self_, jule::Str* _124829_ident) {
	{
		auto &_match_expr{ (*(_124829_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_22b02dde1:;
			{
				jule::Ptr<_246868c1b_FnIns> _125117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _125233_e, jule::Ptr<_24683837d_FnCallExpr>* _125248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246897cc2__Unwrap(_self_, _125233_e, _125248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_125117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_22b02de68:;
			{
				jule::Ptr<_246868c1b_FnIns> _125817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _125933_e, jule::Ptr<_24683837d_FnCallExpr>* _125948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468981bd__Type(_self_, _125933_e, _125948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_125817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_22b02dee0:;
			{
				jule::Ptr<_246868c1b_FnIns> _126517_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _126633_e, jule::Ptr<_24683837d_FnCallExpr>* _126648_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468985b9__Lvalue(_self_, _126633_e, _126648_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_126517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_22b02e067:;
			{
				jule::Ptr<_246868c1b_FnIns> _127217_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _127333_e, jule::Ptr<_24683837d_FnCallExpr>* _127348_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468989b5__Mutable(_self_, _127333_e, _127348_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_127217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_22b02e2ba:;
			{
				jule::Ptr<_246868c1b_FnIns> _127917_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _128033_e, jule::Ptr<_24683837d_FnCallExpr>* _128048_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _246898db1__Const(_self_, _128033_e, _128048_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_127917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_22b02e342:;
			{
				jule::Ptr<_246868c1b_FnIns> _128617_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _128733_e, jule::Ptr<_24683837d_FnCallExpr>* _128748_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _2468992ac__Field(_self_, _128733_e, _128748_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_128617_method));;
			}
		}
		else {
			_case_begin_22b02dd69:;
			{
				return nullptr;;
			}
		}
		_match_end_22b02dce2:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2468970ac_comptimeValue _Src) {
	_Stream << _246897431_Str(&_Src);
	return _Stream;
}



inline jule::Str _246899c80_Str(_24689990b_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _24689a0c1_Equal(jule::Ptr<_24689990b_comptimeFiles> _self_, jule::Ptr<_2469b43d8_TypeKind> _130521_other) {
	return false;;
}



inline void _24689a544_ready(_24689990b_comptimeFiles* _self_, jule::Ptr<_246922555_Var>* _130929_keyA, jule::Ptr<_246922555_Var>* _130946_keyB) {
	if (((*(_130929_keyA)) != nullptr)) {
		(*((*(_130929_keyA))))._field_Constant=true;
		(*((*(_130929_keyA))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*((*((*(_130929_keyA))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*((*(_130929_keyA))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130946_keyB)) != nullptr)) {
		(*((*(_130946_keyB))))._field_Constant=true;
		(*((*(_130946_keyB))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		(*((*(_130946_keyB))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24689b006_comptimeFile>(), 19)})});
	};
}



inline void _24689a962_step(_24689990b_comptimeFiles* _self_, jule::I64 _133123_i, jule::Ptr<_246922555_Var>* _133136_keyA, jule::Ptr<_246922555_Var>* _133153_keyB) {
	if (((*(_133136_keyA)) != nullptr)) {
		(*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_133123_i)));
		(*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_133136_keyA))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	};
	if (((*(_133153_keyB)) != nullptr)) {
		(*((*((*((*((*(_133153_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_24689b006_comptimeFile>(19)))._field_file=(*(_self_))._field_files[_133123_i];
	};
}



inline jule::I64 _24689abe8_len(_24689990b_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}





std::ostream &operator<<(std::ostream &_Stream, _24689990b_comptimeFiles _Src) {
	_Stream << _246899c80_Str(&_Src);
	return _Stream;
}



inline jule::Str _24689b49b_Str(_24689b006_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _24689b7dc_Equal(jule::Ptr<_24689b006_comptimeFile> _self_, jule::Ptr<_2469b43d8_TypeKind> _135521_other) {
	return false;;
}



inline jule::Ptr<_246983ac2_Data> _24689bd09__Path(jule::Ptr<_24689b006_comptimeFile> _self_, jule::Ptr<_2469857b6_Eval>* _135930_e, jule::Ptr<_24683837d_FnCallExpr>* _135945_fc) {
	if (((*((*(_135945_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_135930_e)).ptr(), (*((*((*(_135945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _136413_constant = static__2445e4339_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_136413_constant, &__jule_any_type19), ._field_Constant=_136413_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24689c205__Name(jule::Ptr<_24689b006_comptimeFile> _self_, jule::Ptr<_2469857b6_Eval>* _137230_e, jule::Ptr<_24683837d_FnCallExpr>* _137245_fc) {
	if (((*((*(_137245_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_137230_e)).ptr(), (*((*((*(_137245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _137713_constant = static__2445e4339_NewStr(_246821014_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_137713_constant, &__jule_any_type19), ._field_Constant=_137713_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24689c601__Dir(jule::Ptr<_24689b006_comptimeFile> _self_, jule::Ptr<_2469857b6_Eval>* _138529_e, jule::Ptr<_24683837d_FnCallExpr>* _138544_fc) {
	if (((*((*(_138544_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_138529_e)).ptr(), (*((*((*(_138544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2445e359c_Const> _139013_constant = static__2445e4339_NewStr(_246820c7d_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(_139013_constant, &__jule_any_type19), ._field_Constant=_139013_constant});;
}



inline jule::Ptr<_246983ac2_Data> _24689c942_subIdent(jule::Ptr<_24689b006_comptimeFile> _self_, jule::Str* _139829_ident) {
	{
		auto &_match_expr{ (*(_139829_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_22b04adec:;
			{
				jule::Ptr<_246868c1b_FnIns> _140117_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _140233_e, jule::Ptr<_24683837d_FnCallExpr>* _140248_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689bd09__Path(_self_, _140233_e, _140248_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_140117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_22b04ae63:;
			{
				jule::Ptr<_246868c1b_FnIns> _140817_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _140933_e, jule::Ptr<_24683837d_FnCallExpr>* _140948_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689c205__Name(_self_, _140933_e, _140948_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_140817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_22b04aec9:;
			{
				jule::Ptr<_246868c1b_FnIns> _141517_method = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>([=](jule::Ptr<_2469857b6_Eval>* _141633_e, jule::Ptr<_24683837d_FnCallExpr>* _141648_fc, jule::Ptr<_246983ac2_Data>* ) mutable -> jule::Ptr<_246983ac2_Data> {
					return _24689c601__Dir(_self_, _141633_e, _141648_fc);;
				}), });;
				return _24689ccb6_buildAsComptimeMethodData(&(_141517_method));;
			}
		}
		else {
			_case_begin_22b04ad86:;
			{
				return nullptr;;
			}
		}
		_match_end_22b04ad0e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _24689b006_comptimeFile _Src) {
	_Stream << _24689b49b_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)> _2468a06ae_readyFn(jule::Ptr<_2468a02b3_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)>([=](jule::Ptr<_246900148_Sema>* _6321_sema, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &((*(_self_))._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b059b31:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_24683c52a_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_2469b2a02_InsGeneric> _6521_generic = (*(_self_))._field_generics[_6418_i];;
					if ((((*(_6425_g))._field_Constraint == nullptr) || ((*((*(_6425_g))._field_Constraint))._field_Mask.len() == 0LL))) {
						goto _iter_next_22b059b31;
					};
					(*(_6521_generic))._field_Constraint=jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>::alloc(0LL, (*((*(_6425_g))._field_Constraint))._field_Mask.len());
					{
						auto expr = &((*((*(_6425_g))._field_Constraint))._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b05ad0d:;
						if (it != expr_end) {
							jule::Ptr<_246830320_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7121_n = (*((*(_6321_sema))))._field_errors.len();;
								jule::Ptr<_2469b43d8_TypeKind> _7225_kind = _246907c11_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_2469d41b6_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7225_kind == nullptr)) {
									{
										auto &_match_expr{ (*(_7029_mask))._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_22b05e4b5:;
											{
												jule::Ptr<_24683092a_IdentTypeDecl> _7633_itd = (*(_7029_mask))._field_Kind.cast_ptr<_24683092a_IdentTypeDecl>(&__jule_any_type20);;
												if ((((*(_7633_itd))._field_Generics.len() == 0LL) && _2468a1979_isBuiltinConstraint(&((*(_7633_itd))._field_Ident)))) {
													_7225_kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType((*(_7633_itd))._field_Ident), 21)});
													(*((*(_6321_sema))))._field_errors=(*((*(_6321_sema))))._field_errors.slice(0LL, _7121_n);
													goto _julec_label_22b0604e9;
												};
											}
										}
										_match_end_22b05e460:;
									};
									return false;;
								};
								_julec_label_22b0604e9:;
								{ jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> &__jule_push_dest = (*(_6521_generic))._field_Constraint; __jule_push_dest.push(_7225_kind); };
							}
							_iter_next_22b05ad0d:;
							++it;
							goto _iter_begin_22b05ad0d;
						}
						_iter_end_22b05ad0d:;
					};
				}
				_iter_next_22b059b31:;
				++it;
				_6418_i++;
				goto _iter_begin_22b059b31;
			}
			_iter_end_22b059b31:;
		};
		return true;;
	});;
}



inline jule::Bool _2468a0945_readyFi(jule::Ptr<_2468a02b3_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_fi))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_fi))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _24690c793_fnEnvironment((*(_self_))._field_s, &((*(_self_))._field_fi), _2468a06ae_readyFn(_self_)));;
}



inline jule::Bool _2468a0bcb_readySi(jule::Ptr<_2468a02b3_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*(_self_))._field_si))._field_Decl))._field_Generics;
	(*(_self_))._field_generics=(*((*(_self_))._field_si))._field_Generics;
	return ((!((*(_self_))._field_uniq)) || _2468a06ae_readyFn(_self_)(&((*(_self_))._field_s), &((*(_self_))._field_genericsA)));;
}



inline jule::Bool _2468a0e62_ready(jule::Ptr<_2468a02b3_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _2468a0945_readyFi(_self_);;
	};
	return _2468a0bcb_readySi(_self_);;
}



inline jule::Bool _2468a11e8_check(jule::Ptr<_2468a02b3_constraintChecker> _self_) {
	if ((!(_2468a0e62_ready(_self_)))) {
		return false;;
	};
	_julec_label_22b06cb00:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b06d2a4:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_2469b2a02_InsGeneric> _11921_g = *it;
			{
				if (((*(_11921_g))._field_Constraint == nullptr)) {
					goto _iter_next_22b06d2a4;
				};
				{
					auto expr = &((*(_11921_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b06e393:;
					if (it != expr_end) {
						jule::Ptr<_2469b43d8_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_2469bc259_Prim> _12421_prim = _2469b6a4a_Prim(_12325_c2.ptr());;
							if (((_12421_prim != nullptr) && _2469bcd81_IsConstraint(_12421_prim.ptr()))) {
								if (_2468a166b_matchConstraint(&((*(_12421_prim))._field_Kind), &((*(_11921_g))._field_Kind))) {
									goto _iter_next_22b06d2a4;
								};
								goto _iter_next_22b06e393;
							};
							if (_2469b4ae2_Equal(_12325_c2, (*(_11921_g))._field_Kind)) {
								goto _iter_next_22b06d2a4;
							};
						}
						_iter_next_22b06e393:;
						++it;
						goto _iter_begin_22b06e393;
					}
					_iter_end_22b06e393:;
				};
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_et, jule::Str::lit("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_11921_g))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*(_self_))._field_genericsD[_11914_i]))._field_Ident, &__jule_any_type4)}));
				return false;;
			}
			_iter_next_22b06d2a4:;
			++it;
			_11914_i++;
			goto _iter_begin_22b06d2a4;
		}
		_iter_end_22b06d2a4:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a02b3_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2468a26c2_IsTraitImpl(_2468a2309_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _2468a2958_IsStructImpl(_2468a2309_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a2309_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a7760_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a7b7d_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a7e7a_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a8398_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a8695_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a8b4b_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a9597_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a992c_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468a9d06_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468aa103_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468aa4cc_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468aa8a6_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468aad5c_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ab236_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ab896_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ac4ce_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468acac8_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ace5d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ad5bd_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2468adb51_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2468b0009_SelectPackage(_2468aea64_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _45832_selector) {
	return _2469005dd_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_246922555_Var> _2468b0405_FindVar(_2468aea64_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_246922555_Var> _47213_v = _246980ddd_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47213_v != nullptr)) {
		return _47213_v;;
	};
	jule::Ptr<_2468aea64_scopeChecker> _47713_parent = (*(_self_))._field_parent;;
	while ((_47713_parent != nullptr)) {
		{
			_47213_v=_246980ddd_findVar((*(_47713_parent))._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47213_v != nullptr)) {
				return _47213_v;;
			};
			_47713_parent=(*(_47713_parent))._field_parent;
		}
	_iter_next_22b09e11a:;
	}
	_iter_end_22b09e11a:;;
	return _2469009d9_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _2468b0801_FindTypeAlias(_2468aea64_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_2469b35e6_TypeAlias> _49913_ta = _246981394_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49913_ta != nullptr)) {
		return _49913_ta;;
	};
	jule::Ptr<_2468aea64_scopeChecker> _50413_parent = (*(_self_))._field_parent;;
	while ((_50413_parent != nullptr)) {
		{
			_49913_ta=_246981394_findTypeAlias((*(_50413_parent))._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49913_ta != nullptr)) {
				return _49913_ta;;
			};
			_50413_parent=(*(_50413_parent))._field_parent;
		}
	_iter_next_22b0a1d32:;
	}
	_iter_end_22b0a1d32:;;
	return _246900dd5_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_246850e23_Struct> _2468b0bec_FindStruct(_2468aea64_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _2469012d1_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_246865d17_Fn> _2468b10e8_FindFn(_2468aea64_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _2469016cc_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_2468790e4_Trait> _2468b1439_FindTrait(_2468aea64_scopeChecker* _self_, jule::Str _53928_ident) {
	return _246901a1d_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_24687b800_Enum> _2468b177a_FindEnum(_2468aea64_scopeChecker* _self_, jule::Str _54827_ident) {
	return _246901d5e_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2468b1abb_FindTypeEnum(_2468aea64_scopeChecker* _self_, jule::Str _55731_ident) {
	return _2469021a0_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _2468b1e1d_isUnsafe(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	jule::Ptr<_2468aea64_scopeChecker> _56513_scope = _self_;;
	_julec_label_22b0a6144:;
	if ((*((*(_56513_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_56513_scope))._field_parent != nullptr)) {
		_56513_scope=(*(_56513_scope))._field_parent;
		goto _julec_label_22b0a6144;
	};
	return false;;
}



inline jule::Bool _2468b21a4_isRoot(_2468aea64_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _2468b23a2_stop(_2468aea64_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _2468b2638_stopped(_2468aea64_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _2468b28be_isDeferred(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	jule::Ptr<_2468aea64_scopeChecker> _59813_scope = _self_;;
	_julec_label_22b0a98ea:;
	if ((*((*(_59813_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_59813_scope))._field_parent != nullptr)) {
		_59813_scope=(*(_59813_scope))._field_parent;
		goto _julec_label_22b0a98ea;
	};
	return false;;
}



inline jule::Ptr<_2468aea64_scopeChecker> _2468b2b55_getRoot(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	jule::Ptr<_2468aea64_scopeChecker> _61613_root = _self_;;
	while ((((*(_61613_root))._field_parent != nullptr) && ((*(_61613_root))._field_owner == nullptr))) {
		{
			_61613_root=(*(_61613_root))._field_parent;
		}
	_iter_next_22b0ab699:;
	}
	_iter_end_22b0ab699:;;
	return _61613_root;;
}



inline jule::Ptr<_2468aea64_scopeChecker> _2468b2ddb_getHardRoot(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	jule::Ptr<_2468aea64_scopeChecker> _62613_root = _self_;;
	while (((*(_62613_root))._field_parent != nullptr)) {
		{
			_62613_root=(*(_62613_root))._field_parent;
		}
	_iter_next_22b0ac8a9:;
	}
	_iter_end_22b0ac8a9:;;
	return _62613_root;;
}



inline jule::Ptr<_2468aa103_Label> _2468b322c_findLabel(_2468aea64_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b0ad844:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_22b0ae47c:;
						{
							jule::Ptr<_2468aa103_Label> _64021_label = _63721_st.cast_ptr<_2468aa103_Label>(&__jule_any_type21);;
							if (((*(_64021_label))._field_Ident == (*(_63629_ident)))) {
								return _64021_label;;
							};
						}
					}
					_match_end_22b0ae427:;
				};
			}
			_iter_next_22b0ad844:;
			++it;
			goto _iter_begin_22b0ad844;
		}
		_iter_end_22b0ad844:;
	};
	return nullptr;;
}



inline jule::Ptr<_2468ad5bd_scopeLabel> _2468b356d_findLabelScope(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_2468ad5bd_scopeLabel> _65313_label = _2468b38ae_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65313_label != nullptr) && ((*(_65313_label))._field_scope == _self_))) {
		return _65313_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_2468ad5bd_scopeLabel> _2468b38ae_findLabelAll(_2468aea64_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b0b1539:;
		if (it != expr_end) {
			jule::Ptr<_2468ad5bd_scopeLabel> _66521_lbl = *it;
			{
				if (((*((*(_66521_lbl))._field_label))._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_22b0b1539:;
			++it;
			goto _iter_begin_22b0b1539;
		}
		_iter_end_22b0b1539:;
	};
	return nullptr;;
}



inline jule::Bool _2468b3caa_isDuplicatedIdent(_2468aea64_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_246922555_Var> _6779_v = _2468b0405_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_6779_v != nullptr) && (static_cast<jule::Uintptr>(_6779_v) != _67636_itself))) {
		if (((*(_6779_v))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6779_v))._field_Scope == (*(_self_))._field_scope) || (!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_2469b35e6_TypeAlias> _6859_ta = _2468b0801_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_6859_ta != nullptr) && (static_cast<jule::Uintptr>(_6859_ta) != _67636_itself))) {
		if (((*(_6859_ta))._field_Scope == nullptr)) {
			return false;;
		};
		return (((*(_6859_ta))._field_Scope == (*(_self_))._field_tree) || (!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _2468b4063_checkVarDecl(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468430ad_VarDecl> _69636_decl) {
	jule::Ptr<_246922555_Var> _69713_v = _246872373_buildVar(_69636_decl);;
	(*(_69713_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_69713_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_69713_v, &__jule_any_type8)); };
	});;
	if (_2468b3caa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69713_v)), &((*(_69713_v))._field_Ident))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_69713_v))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_69713_v))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_2468b23a2_stop(_self_.ptr());
		return;;
	};
	_24691547c_checkVarDecl((*(_self_))._field_s, &(_69713_v), jule::Trait<_2469d41b6_Lookup>(_self_, 0));
	if (((!(_246922b71_IsTypeInferred(_69713_v.ptr()))) && (((*(_69713_v))._field_Kind == nullptr) || ((*((*(_69713_v))._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_246918c22_evalVarValue((*(_self_))._field_s, &(_69713_v), jule::Trait<_2469d41b6_Lookup>(_self_, 0));
	if (((!(_2469228da_IsInitialized(_69713_v.ptr()))) || ((*((*(_69713_v))._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_2468ba2cd_removeInteriorMutRisk(_self_, &((*((*(_69713_v))._field_Value))._field_Data));
	_2469188ae_checkVarValue((*(_self_))._field_s, &(_69713_v));
}



inline void _2468b431b_checkTypeAlias(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2469b35e6_TypeAlias>* _72739_ta) {
	if (_2468b3caa_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_72739_ta)))), &((*((*(_72739_ta))))._field_Ident))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_72739_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_72739_ta))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_2468b23a2_stop(_self_.ptr());
		return;;
	};
	_24690e50e_checkTypeAliasDecl((*(_self_))._field_s, _72739_ta, jule::Trait<_2469d41b6_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_table))._field_TypeAliases; __jule_push_dest.push((*(_72739_ta))); };
	if (((*((*((*(_72739_ta))))._field_Kind))._field_Kind == nullptr)) {
		_2468b23a2_stop(_self_.ptr());
	};
}



inline void _2468b45c4_checkTypeAliasDecl(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246846b83_TypeAliasDecl> _74342_decl) {
	jule::Ptr<_2469b35e6_TypeAlias> _74413_ta = _24686dd42_buildTypeAlias(_74342_decl);;
	_2468b431b_checkTypeAlias(_self_, &(_74413_ta));
}



inline jule::Ptr<_2468a7760_Scope> _2468b485a_getChild(_2468aea64_scopeChecker* _self_) {
	return jule::new_ptr<_2468a7760_Scope>(_2468a7760_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _2468b4c78_checkChildSsc(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246840341_ScopeTree>* _75438_tree, jule::Ptr<_2468a7760_Scope>* _75461_s, jule::Ptr<_2468aea64_scopeChecker>* _75477_ssc) {
	(*((*(_75477_ssc))))._field_parent=_self_;
	_2468c1526_check((*(_75477_ssc)), _75438_tree, _75461_s);
}



inline jule::Ptr<_2468a7760_Scope> _2468b5174_checkChildSc(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246840341_ScopeTree>* _75937_tree, jule::Ptr<_2468aea64_scopeChecker>* _75960_ssc) {
	jule::Ptr<_2468a7760_Scope> _76013_s = _2468b485a_getChild(_self_.ptr());;
	_2468b4c78_checkChildSsc(_self_, _75937_tree, &(_76013_s), _75960_ssc);
	return _76013_s;;
}



inline jule::Ptr<_2468a7760_Scope> _2468b54b5_checkChild(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246840341_ScopeTree>* _76535_tree) {
	jule::Ptr<_2468aea64_scopeChecker> _76613_ssc = _2468c17ac_newChildChecker(_self_);;
	return _2468b5174_checkChildSc(_self_, _76535_tree, &(_76613_ssc));;
}



inline void _2468b576d_checkAnonScope(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246840341_ScopeTree> _77038_tree) {
	jule::Ptr<_2468a7760_Scope> _77113_s = _2468b54b5_checkChild(_self_, &(_77038_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_77113_s, &__jule_any_type22)); };
}



inline void _2468b5ad1_processErrorCall(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel>* _77541_m, jule::Ptr<_246819d43_Token> _77572_err) {
	if (_2468b28be_isDeferred(_self_)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2468aea64_scopeChecker> _78013_root = _2468b2b55_getRoot(_self_);;
	if ((!((*((*((*(_78013_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _77572_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_77541_m))))._field_Func=(*(_78013_root))._field_owner;
}



inline void _2468b5d89_checkExpr(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246834654_Expr> _78833_expr) {
	jule::Ptr<_2469857b6_Eval> _78913_eval = _24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0));;
	(*(_78913_eval))._field_ignored=true;
	jule::Ptr<_246983ac2_Data> _79113_d = _2469a3a26_evalExpr(_78913_eval, _78833_expr);;
	if (((_79113_d == nullptr) || ((*(_79113_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_79113_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_22b0ccc2b:;
			{
				jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> _80017_m = (*(_79113_d))._field_Model.cast_ptr<_2468618b2_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_2468b5ad1_processErrorCall(_self_, &(_80017_m), (*(_78833_expr))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_22b0cd6dd:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_79113_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_22b0cd37a:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_78833_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_22b0cd325:;
	};
}



inline jule::Ptr<_2468a7b7d_If> _2468b61ca_checkIf(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845ab6_If> _81931_i) {
	jule::Ptr<_2468a7760_Scope> _82013_s = _2468b54b5_checkChild(_self_, &((*(_81931_i))._field_Scope));;
	jule::Ptr<_246983ac2_Data> _82213_d = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*(_81931_i))._field_Expr);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2469bc259_Prim> _82713_prim = _2469b6a4a_Prim((*(_82213_d))._field_Kind.ptr());;
	if (((_82713_prim == nullptr) || (!(_2469c045a_IsBool(_82713_prim.ptr()))))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_81931_i))._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_2468a7b7d_If>(_2468a7b7d_If{._field_Expr=(*(_82213_d))._field_Model, ._field_Scope=_82013_s});;
}



inline jule::Ptr<_2468a7e7a_Else> _2468b651b_checkElse(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845e90_Else> _83933_e) {
	return jule::new_ptr<_2468a7e7a_Else>(_2468a7e7a_Else{._field_Scope=_2468b54b5_checkChild(_self_, &((*(_83933_e))._field_Scope))});;
}



inline void _2468b67c4_checkConditional(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246846446_Conditional> _84540_conditional) {
	jule::Ptr<_2468a8398_Conditional> _84613_c = jule::new_ptr<_2468a8398_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_84613_c, &__jule_any_type35)); };
	(*(_84613_c))._field_Elifs=jule::Slice<jule::Ptr<_2468a7b7d_If>>::alloc(0LL, ((*(_84540_conditional))._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_2468a7b7d_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_2468b61ca_checkIf(_self_, (*(_84540_conditional))._field_Head)); };
	{
		auto expr = &((*(_84540_conditional))._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b0d971b:;
		if (it != expr_end) {
			jule::Ptr<_246845ab6_If> _85221_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_2468a7b7d_If>> &__jule_push_dest = (*(_84613_c))._field_Elifs; __jule_push_dest.push(_2468b61ca_checkIf(_self_, _85221_elif)); };
			}
			_iter_next_22b0d971b:;
			++it;
			goto _iter_begin_22b0d971b;
		}
		_iter_end_22b0d971b:;
	};
	if (((*(_84540_conditional))._field_Default != nullptr)) {
		(*(_84613_c))._field_Default=_2468b651b_checkElse(_self_, (*(_84540_conditional))._field_Default);
	};
}



inline void _2468b6c9c_checkIterScopeSsc(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Uintptr _86137_it, jule::Ptr<_246840341_ScopeTree> _86154_tree, jule::Ptr<_2468a7760_Scope>* _86177_s, jule::Ptr<_2468aea64_scopeChecker> _86192_ssc) {
	(*(_86192_ssc))._field_it=_86137_it;
	_2468b4c78_checkChildSsc(_self_, &(_86154_tree), _86177_s, &(_86192_ssc));
}



inline jule::Ptr<_2468a7760_Scope> _2468b7253_checkIterScopeSc(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Uintptr _86636_it, jule::Ptr<_246840341_ScopeTree> _86653_tree, jule::Ptr<_2468aea64_scopeChecker> _86675_ssc) {
	jule::Ptr<_2468a7760_Scope> _86713_scope = _2468b485a_getChild(_self_.ptr());;
	_2468b6c9c_checkIterScopeSsc(_self_, _86636_it, _86653_tree, &(_86713_scope), _86675_ssc);
	return _86713_scope;;
}



inline jule::Ptr<_2468a7760_Scope> _2468b764e_checkIterScope(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Uintptr _87234_it, jule::Ptr<_246840341_ScopeTree>* _87252_tree) {
	jule::Ptr<_2468aea64_scopeChecker> _87313_ssc = _2468c17ac_newChildChecker(_self_);;
	return _2468b7253_checkIterScopeSc(_self_, _87234_it, (*(_87252_tree)), _87313_ssc);;
}



inline void _2468b7907_checkInfIter(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843b2a_Iter>* _87737_it) {
	jule::Ptr<_2468a8695_InfIter> _87813_kind = jule::new_ptr<_2468a8695_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_87813_kind, &__jule_any_type36)); };
	(*(_87813_kind))._field_Scope=_2468b764e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87813_kind)), &((*((*(_87737_it))))._field_Scope));
}



inline void _2468b7bb0_checkWhileIter(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843b2a_Iter>* _88339_it) {
	jule::Ptr<_246844455_WhileKind> _88413_wh = (*((*(_88339_it))))._field_Kind.cast_ptr<_246844455_WhileKind>(&__jule_any_type37);;
	if ((((*(_88413_wh))._field_Expr == nullptr) && ((*(_88413_wh))._field_Next == nullptr))) {
		_2468b7907_checkInfIter(_self_, _88339_it);
		return;;
	};
	jule::Ptr<_2468a8b4b_WhileIter> _89013_kind = jule::new_ptr<_2468a8b4b_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_89013_kind, &__jule_any_type38)); };
	(*(_89013_kind))._field_Scope=_2468b764e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_89013_kind)), &((*((*(_88339_it))))._field_Scope));
	if (((*(_88413_wh))._field_Expr != nullptr)) {
		jule::Ptr<_246983ac2_Data> _89517_d = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*(_88413_wh))._field_Expr);;
		if ((_89517_d == nullptr)) {
			return;;
		};
		jule::Ptr<_2469bc259_Prim> _90013_prim = _2469b6a4a_Prim((*(_89517_d))._field_Kind.ptr());;
		if ((_90013_prim == nullptr)) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_2469c045a_IsBool(_90013_prim.ptr())))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_88339_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*(_89013_kind))._field_Expr=(*(_89517_d))._field_Model;
	};
	if (_2468447b8_IsWhileNext(_88413_wh.ptr())) {
		if ((!(_2468a6c6a_isValidAstStForNextSt(&((*(_88413_wh))._field_Next))))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _92013_n = (*((*(_self_))._field_scope))._field_Stmts.len();;
		_2468c015c_checkNode(_self_, &((*(_88413_wh))._field_Next));
		if ((_92013_n < (*((*(_self_))._field_scope))._field_Stmts.len())) {
			jule::Any _92321_st = (*((*(_self_))._field_scope))._field_Stmts[_92013_n];;
			(*((*(_self_))._field_scope))._field_Stmts=(*((*(_self_))._field_scope))._field_Stmts.slice(0LL, _92013_n);
			if ((!(_2468a7034_isValidStForNextSt(&(_92321_st))))) {
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_88413_wh))._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*(_89013_kind))._field_Next=_92321_st;
		};
	};
}



inline void _2468b80cd_checkComptimeRangeIter(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843b2a_Iter>* _93347_it, jule::Ptr<_2468a9597_RangeIter>* _93363_kind, jule::Ptr<_246983ac2_Data>* _93386_d) {
	if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
		if (((!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2468b3caa_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyA))._field_Ident)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
		if (((!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2468b3caa_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*((*(_93363_kind))))._field_KeyB))._field_Ident)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_93363_kind))))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_93363_kind))))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_246881162_comptimeRange> _94713_comptime = _2469b9de4_comptimeRange((*((*(_93386_d))))._field_Kind.ptr());;
	_246880e42_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._246880639_ready((*(_94713_comptime))._field_kind, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
	jule::I64 _94913_i = 0LL;;
	jule::I64 _9509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_94913_i < _246880e42_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._246880cdd_len((*(_94713_comptime))._field_kind)); (_94913_i)++) {
		{
			jule::Ptr<_2468aea64_scopeChecker> _95217_ssc = _2468c17ac_newChildChecker(_self_);;
			jule::Ptr<_2468a7760_Scope> _95317_scope = _2468b485a_getChild(_self_.ptr());;
			if (((*((*(_93363_kind))))._field_KeyA != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyA))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyA); };
			};
			if (((*((*(_93363_kind))))._field_KeyB != nullptr)) {
				(*((*((*(_93363_kind))))._field_KeyB))._field_Scope=_95317_scope;
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_95217_ssc))._field_table))._field_Vars; __jule_push_dest.push((*((*(_93363_kind))))._field_KeyB); };
			};
			_246880e42_comptimeRangeKind_mptr_data[((*(_94713_comptime))._field_kind).type_offset]._246880a57_step((*(_94713_comptime))._field_kind, _94913_i, &((*((*(_93363_kind))))._field_KeyA), &((*((*(_93363_kind))))._field_KeyB));
			_2468b4c78_checkChildSsc(_self_, &((*((*(_93347_it))))._field_Scope), &(_95317_scope), &(_95217_ssc));
			if ((_9509_errors != (*((*(_self_))._field_s))._field_errors.len())) {
				goto _iter_end_22b1052d6;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_95317_scope, &__jule_any_type22)); };
		}
	_iter_next_22b1052d6:;
	}
	_iter_end_22b1052d6:;;
}



inline void _2468b8386_checkRangeIter(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843b2a_Iter>* _97239_it) {
	jule::Ptr<_246844d5c_RangeKind> _97313_rang = (*((*(_97239_it))))._field_Kind.cast_ptr<_246844d5c_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_246983ac2_Data> _97513_d = _2469a36d5_evalExpr1(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*(_97313_rang))._field_Expr);;
	if ((_97513_d == nullptr)) {
		return;;
	};
	jule::Ptr<_2468a9597_RangeIter> _98013_kind = jule::new_ptr<_2468a9597_RangeIter>(_2468a9597_RangeIter{._field_Expr=_97513_d, });;
	_246978be9_rangeChecker _98413_rc = _246978be9_rangeChecker{._field_sc=_self_, ._field_rang=_97313_rang, ._field_Kind=_98013_kind, ._field_d=_97513_d};;
	jule::Bool _9909_ok = _24697ac0c_check(&_98413_rc);;
	if ((!(_9909_ok))) {
		return;;
	};
	jule::Ptr<_246881162_comptimeRange> _99513_comptimeRange = _2469b9de4_comptimeRange((*(_97513_d))._field_Kind.ptr());;
	if ((_99513_comptimeRange != nullptr)) {
		_2468b80cd_checkComptimeRangeIter(_self_, _97239_it, &(_98013_kind), &(_97513_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_98013_kind, &__jule_any_type40)); };
	jule::Ptr<_2468aea64_scopeChecker> _100313_ssc = _2468c17ac_newChildChecker(_self_);;
	jule::Ptr<_2468a7760_Scope> _100413_scope = _2468b485a_getChild(_self_.ptr());;
	if (((*(_98013_kind))._field_KeyA != nullptr)) {
		if (((!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2468b3caa_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyA))._field_Ident)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyA))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyA))._field_Ident, &__jule_any_type4)}));
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyA))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyA); };
	};
	if (((*(_98013_kind))._field_KeyB != nullptr)) {
		if (((!(_2469025ac_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _2468b3caa_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_98013_kind))._field_KeyB))._field_Ident)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_98013_kind))._field_KeyB))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_98013_kind))._field_KeyB))._field_Ident, &__jule_any_type4)}));
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*((*(_98013_kind))._field_KeyB))._field_Scope=_100413_scope;
		{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_100313_ssc))._field_table))._field_Vars; __jule_push_dest.push((*(_98013_kind))._field_KeyB); };
	};
	_2468b6c9c_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_98013_kind)), (*((*(_97239_it))))._field_Scope, &(_100413_scope), _100313_ssc);
	(*(_98013_kind))._field_Scope=_100413_scope;
}



inline void _2468b863e_checkIter(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843b2a_Iter> _102833_it) {
	if (_246843e8d_IsInf(_102833_it.ptr())) {
		_2468b7907_checkInfIter(_self_, &(_102833_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_102833_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_22b11ac14:;
			{
				_2468b7bb0_checkWhileIter(_self_, &(_102833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_22b11b96d:;
			{
				_2468b8386_checkRangeIter(_self_, &(_102833_it));
			}
		}
		else {
			_case_begin_22b11b495:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_22b11b440:;
	};
}



inline jule::Bool _2468b8980_checkValidContLabel(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Uintptr _104439_it) {
	jule::Ptr<_2468aea64_scopeChecker> _104513_scope = _self_;;
	_julec_label_22b11cb8e:;
	if (((*(_104513_scope))._field_it == _104439_it)) {
		return true;;
	};
	if (((*(_104513_scope))._field_parent != nullptr)) {
		_104513_scope=(*(_104513_scope))._field_parent;
		goto _julec_label_22b11cb8e;
	};
	return false;;
}



inline jule::Bool _2468b8cc1_checkValidBreakLabel(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Uintptr _106040_ptr) {
	jule::Ptr<_2468aea64_scopeChecker> _106113_scope = _self_;;
	_julec_label_22b11eac5:;
	if (((*(_106113_scope))._field_it == _106040_ptr)) {
		return true;;
	};
	if (((*(_106113_scope))._field_cse != 0LLU)) {
		jule::Uintptr _106913_mtch = static_cast<jule::Uintptr>((*(((_2468ac4ce_Case*)((*(_106113_scope))._field_cse))))._field_Owner);;
		if ((_106913_mtch == _106040_ptr)) {
			return true;;
		};
	};
	if (((*(_106113_scope))._field_parent != nullptr)) {
		_106113_scope=(*(_106113_scope))._field_parent;
		goto _julec_label_22b11eac5;
	};
	return false;;
}



inline jule::Ptr<_2468a992c_ContSt> _2468b9112_checkContValidScope(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845610_ContSt> _108339_c) {
	if (_2468b28be_isDeferred(_self_)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_108339_c))._field_Label != nullptr)) {
		return jule::new_ptr<_2468a992c_ContSt>();;
	};
	jule::Ptr<_2468aea64_scopeChecker> _109313_scope = _self_;;
	_julec_label_22b123ba6:;
	{
		
		if (((((*(_109313_scope))._field_it == 0LLU) && ((*(_109313_scope))._field_parent != nullptr)) && ((*(_109313_scope))._field_owner == nullptr))) {
			_case_begin_22b124426:;
			{
				_109313_scope=(*(_109313_scope))._field_parent;
				goto _julec_label_22b123ba6;
			}
		}
		else if (((*(_109313_scope))._field_it != 0LLU)) {
			_case_begin_22b12449d:;
			{
				return jule::new_ptr<_2468a992c_ContSt>(_2468a992c_ContSt{._field_It=(*(_109313_scope))._field_it});;
			}
		}
		_match_end_22b12436b:;
	};
	_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_108339_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2468b93ba_checkCont(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845610_ContSt> _110729_c) {
	jule::Ptr<_2468a992c_ContSt> _110813_cont = _2468b9112_checkContValidScope(_self_, _110729_c);;
	if ((_110813_cont == nullptr)) {
		return;;
	};
	if (((*(_110729_c))._field_Label != nullptr)) {
		jule::Ptr<_2468ad5bd_scopeLabel> _111417_label = _2468a4c79_findLabelParent(&((*((*(_110729_c))._field_Label))._field_Kind), (*(_self_))._field_parent);;
		if ((_111417_label == nullptr)) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_111417_label))._field_used=true;
		if ((((*(_111417_label))._field_pos + 1LL) >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I64 _112713_i = ((*(_111417_label))._field_pos + 1LL);;
		if ((_112713_i >= (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _113121_st = (*((*((*(_111417_label))._field_scope))._field_scope))._field_Stmts[_112713_i];;
			{
				auto &_match_expr{ _113121_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_22b12e981:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_22b12e6c8:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_22b12e73e:;
					{
						(*(_110813_cont))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113121_st.cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_22b12e662:;
					{
						_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_22b12e60c:;
			};
		};
	};
	if (((*(_110813_cont))._field_It != 0LLU)) {
		if ((!(_2468b8980_checkValidContLabel(_self_, (*(_110813_cont))._field_It)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_110729_c))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_110729_c))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_110813_cont, &__jule_any_type41)); };
}



inline void _2468b9673_checkLabel(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683c904_LabelSt> _115434_l) {
	if ((_2468b322c_findLabel(_self_.ptr(), &((*(_115434_l))._field_Ident)) != nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_115434_l))._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_115434_l))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_2468aa103_Label> _116013_label = jule::new_ptr<_2468aa103_Label>(_2468aa103_Label{._field_Ident=(*(_115434_l))._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_116013_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_2468ad5bd_scopeLabel>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(jule::new_ptr<_2468ad5bd_scopeLabel>(_2468ad5bd_scopeLabel{._field_token=(*(_115434_l))._field_Token, ._field_label=_116013_label, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _2468b992b_pushGoto(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683cccd_GotoSt> _117332_gt) {
	jule::Ptr<_2468aa4cc_GotoSt> _117413_st = jule::new_ptr<_2468aa4cc_GotoSt>(_2468aa4cc_GotoSt{._field_Ident=(*((*(_117332_gt))._field_Label))._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_117413_st, &__jule_any_type42)); };
	{ jule::Slice<jule::Ptr<_2468adb51_scopeGoto>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(jule::new_ptr<_2468adb51_scopeGoto>(_2468adb51_scopeGoto{._field_st=_117413_st, ._field_gt=_117332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>(((*((*(_self_))._field_scope))._field_Stmts.len() - 1LL))})); };
}



inline void _2468b9bd4_checkPostfix(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683dcbd_AssignSt> _118736_a) {
	if (((*(_118736_a))._field_Left.len() > 1LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246834654_Expr> _119313_expr = (*((*(_118736_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_246983ac2_Data> _119413_d = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), _119313_expr);;
	if ((_119413_d == nullptr)) {
		return;;
	};
	_2468a69a1_checkAssign(&((*(_self_))._field_s), &(_119413_d), nullptr, (*(_118736_a))._field_Setter);
	if ((_2469b7067_Ptr((*(_119413_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2469c454c_Ptr> _120217_ptr = _2469b7067_Ptr((*(_119413_d))._field_Kind.ptr());;
		if (_2469c5086_IsUnsafe(_120217_ptr.ptr())) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_2469b6a4a_Prim((*(_119413_d))._field_Kind.ptr()) == nullptr) || (!(_2445e30c4_IsNum((*(_2469b6a4a_Prim((*(_119413_d))._field_Kind.ptr())))._field_Kind))))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_118736_a))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_118736_a))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_119413_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_2468aa8a6_Postfix>(_2468aa8a6_Postfix{._field_Expr=(*(_119413_d))._field_Model, ._field_Op=(*((*(_118736_a))._field_Setter))._field_Kind}), &__jule_any_type43)); };
}



inline jule::Bool _2468ba025_isNewAssignIdent(_2468aea64_scopeChecker* _self_, jule::Str _122035_ident) {
	if ((_24681c7a2_IsIgnoreIdent(_122035_ident) || (_122035_ident).empty())) {
		return false;;
	};
	return (_246981790_defByIdent((*(_self_))._field_table.ptr(), &(_122035_ident), false) == nullptr);;
}



inline void _2468ba2cd_removeInteriorMutRisk(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246983ac2_Data>* _123346_d) {
	jule::Ptr<_246853ba1_StructIns> _12349_s = _2469b80bd_Struct((*((*(_123346_d))))._field_Kind.ptr());;
	if ((_12349_s == nullptr)) {
		return;;
	};
	jule::Ptr<_2468aea64_scopeChecker> _12389_root = _2468b2ddb_getHardRoot(_self_);;
	if (((*((*(_12389_root))._field_owner))._field_Owner != _12349_s)) {
		return;;
	};
	(*((*(_123346_d))))._field_Mutable=true;
}



inline jule::Bool _2468ba784_checkStructureAssignOp(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246853ba1_StructIns>* _124747_s, jule::Ptr<_24683dcbd_AssignSt>* _124767_a, jule::Ptr<_246983ac2_Data>* _124786_r) {
	jule::Ptr<_246868c1b_FnIns> _125017_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_124767_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_22b1490d8:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_22b14acaa:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_22b14ad21:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_22b149726:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_22b14978c:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_22b149803:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_22b149869:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_22b14ae0e:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_22b14ae75:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_22b14aedb:;
			{
				_125017_overload=(*((*(_124747_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_22b1496b0:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_246854025_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_22b14965a:;
	};
	if ((_125017_overload == nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_124767_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_124767_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_246854025_Str((*(_124747_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_246867c70_ParamIns> _128213_p = (*(_125017_overload))._field_Params[1LL];;
	return _24690a791_checkAssignType((*(_self_))._field_s, (*((*(_128213_p))._field_Decl))._field_Reference, &((*(_128213_p))._field_Kind), _124786_r, (*((*(_124767_a))))._field_Setter);;
}



inline void _2468baa3c_checkSingleAssign(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683dcbd_AssignSt>* _128642_a) {
	jule::Ptr<_246983ac2_Data> _128717_l = nullptr;;
	if ((!(_24681c7a2_IsIgnoreIdent((*((*((*(_128642_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_246834654_Expr> _129017_expr = (*((*((*(_128642_a))))._field_Left[0LL]))._field_Expr;;
		_128717_l=_2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), _129017_expr);
		if ((_128717_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_2469857b6_Eval> _129717_eval = nullptr;;
	if ((_128717_l != nullptr)) {
		_129717_eval=_246909dde_evalp((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0), (*(_128717_l))._field_Kind);
	} else {
		_129717_eval=_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0));
	};
	(*(_129717_eval))._field_unsafety=_2468b1e1d_isUnsafe(_self_);
	jule::Ptr<_246983ac2_Data> _130413_r = _2469a3a26_evalExpr(_129717_eval, (*((*(_128642_a))))._field_Right);;
	if ((_130413_r == nullptr)) {
		return;;
	};
	_2468ba2cd_removeInteriorMutRisk(_self_, &(_130413_r));
	if ((_128717_l == nullptr)) {
		if (_2469b575d_Void((*(_130413_r))._field_Kind.ptr())) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_128642_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_130413_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_2468a69a1_checkAssign(&((*(_self_))._field_s), &(_128717_l), _130413_r, (*((*(_128642_a))))._field_Setter)))) {
		return;;
	};
	if ((_2469b8871_Tup((*(_130413_r))._field_Kind.ptr()) != nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_128642_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246857aa6_OperandExprModel> _132813_lm = jule::new_ptr<_246857aa6_OperandExprModel>(_246857aa6_OperandExprModel{._field_Kind=(*(_128717_l))._field_Kind, ._field_Model=(*(_128717_l))._field_Model});;
	jule::Ptr<_246857aa6_OperandExprModel> _133213_rm = jule::new_ptr<_246857aa6_OperandExprModel>(_246857aa6_OperandExprModel{._field_Kind=(*(_130413_r))._field_Kind, ._field_Model=(*(_130413_r))._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_2468aad5c_Assign>(_2468aad5c_Assign{._field_L=_132813_lm, ._field_R=_133213_rm, ._field_Op=(*((*(_128642_a))))._field_Setter}), &__jule_any_type44)); };
	if (((*((*((*(_128642_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_246853ba1_StructIns> _133917_strct = _2469b80bd_Struct((*(_128717_l))._field_Kind.ptr());;
		if ((_133917_strct != nullptr)) {
			_2468ba784_checkStructureAssignOp(_self_, &(_133917_strct), _128642_a, &(_130413_r));
			return;;
		};
		jule::U64 _134413_id = (*((*((*(_128642_a))))._field_Setter))._field_Id;;
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_2468c1b31_removeEqFromOp((*((*((*(_128642_a))))._field_Setter))._field_Id);
		_2469a5e79_binaryEval _134617_solver = static__2469a68a3_new(_129717_eval, (*((*(_128642_a))))._field_Setter);;
		_130413_r=_2469abbb6_solveExplicit(&_134617_solver, &(_128717_l), &(_130413_r));
		(*((*((*(_128642_a))))._field_Setter))._field_Id=_134413_id;
		if ((_130413_r == nullptr)) {
			return;;
		};
		return;;
	};
	_24696c506_assignTypeChecker _135513_checker = _24696c506_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_128717_l))._field_Kind, ._field_d=_130413_r, ._field_errorToken=(*((*(_128642_a))))._field_Setter};;
	if (_24696d76b_check(&_135513_checker)) {
		(*(_133213_rm))._field_Model=(*(_130413_r))._field_Model;
		(*(_132813_lm))._field_Model=(*(_128717_l))._field_Model;
	};
}



inline void _2468bb0c0_processEndPartOfMultiAssign(_2468aea64_scopeChecker* _self_, jule::Ptr<_2468ab236_MultiAssign>* _136751_st, jule::Ptr<_24683dcbd_AssignSt>* _136814_a, jule::Ptr<_24683d73a_AssignLeft>* _136833_lexpr, jule::Ptr<_246983ac2_Data>* _136858_l, jule::Ptr<_246983ac2_Data>* _136873_r) {
	if (((!((*((*(_136833_lexpr))))._field_Reference)) && _24681c7a2_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident))) {
		if (_2469b575d_Void((*((*(_136873_r))))._field_Kind.ptr())) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_136814_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_136814_a))))._field_Declarative && ((*((*(_136833_lexpr))))._field_Reference || _2468ba025_isNewAssignIdent(_self_, (*((*(_136833_lexpr))))._field_Ident)))) {
		if (_2468b3caa_isDuplicatedIdent(_self_, 0LLU, &((*((*(_136833_lexpr))))._field_Ident))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_2468b23a2_stop(_self_);
			return;;
		};
		if (_24681c7a2_IsIgnoreIdent((*((*(_136833_lexpr))))._field_Ident)) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_246922555_Var> _138917_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_136833_lexpr))))._field_Token, ._field_Ident=(*((*(_136833_lexpr))))._field_Ident, ._field_Mutable=(*((*(_136833_lexpr))))._field_Mutable, ._field_Reference=(*((*(_136833_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Expr=(*((*(_136814_a))))._field_Right, ._field_Data=(*(_136873_r))}), });;
		_2469188ae_checkVarValue((*(_self_))._field_s, &(_138917_v));
		(*(_138917_v))._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push(jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*((*(_138917_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_138917_v))._field_Mutable, ._field_Reference=(*(_138917_v))._field_Reference, ._field_Lvalue=(!((*(_138917_v))._field_Constant)), ._field_Model=jule::Any(_138917_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_138917_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_138917_v, &__jule_any_type8)); };
		return;;
	};
	if (((*((*(_136833_lexpr))))._field_Mutable || (*((*(_136833_lexpr))))._field_Reference)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_136833_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_136833_lexpr))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_2468a69a1_checkAssign(&((*(_self_))._field_s), _136858_l, (*(_136873_r)), (*((*(_136833_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_24690dca0_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_136858_l))))._field_Mutable, false, &((*((*(_136858_l))))._field_Kind), _136873_r, &((*((*(_136814_a))))._field_Setter));
	_24696c506_assignTypeChecker _143213_checker = _24696c506_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_136858_l))))._field_Kind, ._field_d=(*(_136873_r)), ._field_errorToken=(*((*(_136814_a))))._field_Setter};;
	_24696d76b_check(&_143213_checker);
	{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*((*(_136751_st))))._field_L; __jule_push_dest.push((*(_136858_l))); };
}



inline void _2468bb378_checkMultiAssign(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683dcbd_AssignSt>* _144241_a) {
	jule::Ptr<_246983ac2_Data> _144313_rd = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*((*(_144241_a))))._field_Right);;
	if ((_144313_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_246983ac2_Data>> _144713_right = _2468a5b04_getDatasFromTupleData(&(_144313_rd));;
	if ((_144713_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_144713_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_22b175ea0:;
				{
					jule::Ptr<_24685a911_IndexingExprModel> _145121_iem = (*(_144713_right[0LL]))._field_Model.cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45);;
					if ((_2469b85da_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_144713_right=jule::Slice<jule::Ptr<_246983ac2_Data>>::make({jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*(_2469b85da_Map((*((*(_145121_iem))._field_Expr))._field_Kind.ptr())))._field_Val, }),jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, })});
					};
				}
			}
			_match_end_22b175e06:;
		};
	};
	{
		
		if (((*((*(_144241_a))))._field_Left.len() > _144713_right.len())) {
			_case_begin_22b17571e:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_144241_a))))._field_Left.len() < _144713_right.len())) {
			_case_begin_22b175785:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_144241_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22b1763ce:;
	};
	jule::Ptr<_2468ab236_MultiAssign> _147013_st = jule::new_ptr<_2468ab236_MultiAssign>(_2468ab236_MultiAssign{._field_R=(*(_144313_rd))._field_Model});;
	{
		auto expr = &((*((*(_144241_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b17a8de:;
		if (it != expr_end) {
			jule::I64 _147313_i = it - expr->begin();
			{
				jule::Ptr<_24683d73a_AssignLeft> _147417_lexpr = (*((*(_144241_a))))._field_Left[_147313_i];;
				jule::Ptr<_246983ac2_Data> _147521_l = nullptr;;
				if (((!(_24681c7a2_IsIgnoreIdent((*(_147417_lexpr))._field_Ident))) && ((!((*((*(_144241_a))))._field_Declarative)) || (!(_2468ba025_isNewAssignIdent(_self_.ptr(), (*(_147417_lexpr))._field_Ident)))))) {
					_147521_l=_2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*(_147417_lexpr))._field_Expr);
					if ((_147521_l == nullptr)) {
						goto _iter_next_22b17a8de;
					};
				};
				jule::Ptr<_246983ac2_Data> _148317_r = _144713_right[_147313_i];;
				_2468ba2cd_removeInteriorMutRisk(_self_, &(_148317_r));
				_2468bb0c0_processEndPartOfMultiAssign(_self_.ptr(), &(_147013_st), _144241_a, &(_147417_lexpr), &(_147521_l), &(_148317_r));
			}
			_iter_next_22b17a8de:;
			++it;
			_147313_i++;
			goto _iter_begin_22b17a8de;
		}
		_iter_end_22b17a8de:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_147013_st, &__jule_any_type46)); };
}



inline void _2468bb631_singleDeclAssign(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683dcbd_AssignSt>* _149041_a) {
	jule::Ptr<_24683d73a_AssignLeft> _149113_lexpr = (*((*(_149041_a))))._field_Left[0LL];;
	if (_2468b3caa_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_149113_lexpr))._field_Ident))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149113_lexpr))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_2468b23a2_stop(_self_.ptr());
		return;;
	};
	if (_24681c7a2_IsIgnoreIdent((*(_149113_lexpr))._field_Ident)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_149113_lexpr))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246983ac2_Data> _150213_r = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*((*(_149041_a))))._field_Right);;
	if ((_150213_r == nullptr)) {
		return;;
	};
	_2468ba2cd_removeInteriorMutRisk(_self_, &(_150213_r));
	jule::Ptr<_246922555_Var> _151013_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_149113_lexpr))._field_Token, ._field_Ident=(*(_149113_lexpr))._field_Ident, ._field_Mutable=(*(_149113_lexpr))._field_Mutable, ._field_Reference=(*(_149113_lexpr))._field_Reference, ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Expr=(*((*(_149041_a))))._field_Right, ._field_Data=_150213_r}), });;
	_2469188ae_checkVarValue((*(_self_))._field_s, &(_151013_v));
	{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_self_))._field_table))._field_Vars; __jule_push_dest.push(_151013_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_151013_v, &__jule_any_type8)); };
}



inline void _2468bb8d9_checkAssignSt(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683dcbd_AssignSt> _152637_a) {
	{
		
		if (_24681e9d5_IsPostfixOp((*((*(_152637_a))._field_Setter))._field_Id)) {
			_case_begin_22b188a2e:;
			{
				_2468b9bd4_checkPostfix(_self_, _152637_a);
			}
		}
		else if (((*(_152637_a))._field_Left.len() == 1LL)) {
			_case_begin_22b187698:;
			{
				if ((*(_152637_a))._field_Declarative) {
					_2468bb631_singleDeclAssign(_self_, &(_152637_a));
				} else {
					_2468baa3c_checkSingleAssign(_self_, &(_152637_a));
				};
			}
		}
		else {
			_case_begin_22b187632:;
			{
				_2468bb378_checkMultiAssign(_self_, &(_152637_a));
			}
		}
		_match_end_22b187566:;
	};
}



inline jule::Ptr<_2468a7760_Scope> _2468bbcd5_checkCaseScope(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468ac4ce_Case>* _154135_c, jule::Ptr<_246840341_ScopeTree>* _154150_tree) {
	jule::Ptr<_2468aea64_scopeChecker> _154213_ssc = _2468c17ac_newChildChecker(_self_);;
	(*(_154213_ssc))._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_154135_c))));
	return _2468b5174_checkChildSc(_self_, _154150_tree, &(_154213_ssc));;
}



inline jule::Ptr<_2468ac4ce_Case> _2468bc346_checkCase(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468ab896_Match> _154733_m, jule::I64 _154744_i, jule::Ptr<_246847139_Case> _154756_c, jule::Ptr<_246983ac2_Data> _154775_expr) {
	jule::Ptr<_2468ac4ce_Case> _154813_case = (*(_154733_m))._field_Cases[_154744_i];;
	(*(_154813_case))._field_Exprs=jule::Slice<jule::Ptr<_246983ac2_Data>>::alloc(0LL, (*(_154756_c))._field_Exprs.len());
	jule::Bool _155013_constMatched = false;;
	jule::Ptr<_2469857b6_Eval> _155113_eval = _24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0));;
	{
		auto expr = &((*(_154756_c))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b18e293:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _155221_e = *it;
			{
				jule::Ptr<_246983ac2_Data> _155317_d = _2469a2c12_evalExprKind(_155113_eval, (*(_155221_e))._field_Kind);;
				if ((_155317_d == nullptr)) {
					goto _iter_next_22b18e293;
				};
				if ((*(_154733_m))._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
					if ((_2468a583a_countMatchType(&(_154733_m), &((*(_155317_d))._field_Kind)) > 1LL)) {
						_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_155317_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*(_154733_m))._field_Comptime) {
						_155013_constMatched=(_155013_constMatched || _2469b4ae2_Equal((*(_154775_expr))._field_Kind, (*(_155317_d))._field_Kind));
					} else {
						if ((_2469b7584_TypeEnum((*(_154775_expr))._field_Kind.ptr()) != nullptr)) {
							_24690ac47_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
						} else {
							jule::Ptr<_2468790e4_Trait> _157225_trt = _2469b8354_Trait((*(_154775_expr))._field_Kind.ptr());;
							if ((_157225_trt != nullptr)) {
								_24690ac47_checkTypeCompatibility((*(_self_))._field_s, &((*(_154775_expr))._field_Kind), &((*(_155317_d))._field_Kind), &((*(_155221_e))._field_Token));
							};
						};
					};
					goto _iter_next_22b18e293;
				};
				if ((*(_155317_d))._field_Decl) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_22b18e293;
				};
				if ((*(_154733_m))._field_Comptime) {
					if (((!(_246984496_IsConst(_155317_d.ptr()))) && (_2469ba697_comptimeTypeInfo((*(_155317_d))._field_Kind.ptr()) == nullptr))) {
						_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_155221_e))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_22b18e293;
					};
					if ((!(_155013_constMatched))) {
						if (_246984496_IsConst(_155317_d.ptr())) {
							_155013_constMatched=(_246984496_IsConst(_154775_expr.ptr()) && _2445e9152_Eq((*(_155317_d))._field_Constant.ptr(), (*((*(_154775_expr))._field_Constant))));
						} else {
							jule::Ptr<_246890a9a_comptimeTypeInfo> _159725_exprCti = _2469ba697_comptimeTypeInfo((*(_154775_expr))._field_Kind.ptr());;
							_155013_constMatched=((_159725_exprCti != nullptr) && _2469b4ae2_Equal((*(_2469ba697_comptimeTypeInfo((*(_155317_d))._field_Kind.ptr())))._field_base, (*(_159725_exprCti))._field_base));
						};
					};
				};
				{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*(_154813_case))._field_Exprs; __jule_push_dest.push(_155317_d); };
				if ((((!((*(_154733_m))._field_Comptime)) || (_2469ba697_comptimeTypeInfo((*(_154775_expr))._field_Kind.ptr()) == nullptr)) || (_2469ba697_comptimeTypeInfo((*(_155317_d))._field_Kind.ptr()) == nullptr))) {
					_24696c506_assignTypeChecker _160721_checker = _24696c506_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_154775_expr))._field_Kind, ._field_d=_155317_d, ._field_errorToken=(*(_155221_e))._field_Token};;
					_24696d76b_check(&_160721_checker);
				};
			}
			_iter_next_22b18e293:;
			++it;
			goto _iter_begin_22b18e293;
		}
		_iter_end_22b18e293:;
	};
	if (((!((*(_154733_m))._field_Comptime)) || _155013_constMatched)) {
		(*(_154813_case))._field_Scope=_2468bbcd5_checkCaseScope(_self_, &(_154813_case), &((*(_154756_c))._field_Scope));
	};
	return _154813_case;;
}



inline void _2468bc764_checkCases(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246847876_MatchCase>* _162235_m, jule::Ptr<_2468ab896_Match> _162254_rm, jule::Ptr<_246983ac2_Data> _162270_expr) {
	(*(_162254_rm))._field_Cases=jule::Slice<jule::Ptr<_2468ac4ce_Case>>::alloc(0LL, (*((*(_162235_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_162235_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b1a1063:;
		if (it != expr_end) {
			jule::I64 _162413_i = it - expr->begin();
			{
				jule::Ptr<_2468ac4ce_Case> _162517_case = jule::new_ptr<_2468ac4ce_Case>(_2468ac4ce_Case{._field_Owner=_162254_rm, });;
				if ((_162413_i > 0LL)) {
					(*((*(_162254_rm))._field_Cases[(_162413_i - 1LL)]))._field_Next=_162517_case;
				};
				{ jule::Slice<jule::Ptr<_2468ac4ce_Case>> &__jule_push_dest = (*(_162254_rm))._field_Cases; __jule_push_dest.push(_162517_case); };
			}
			_iter_next_22b1a1063:;
			++it;
			_162413_i++;
			goto _iter_begin_22b1a1063;
		}
		_iter_end_22b1a1063:;
	};
	if ((((*(_162254_rm))._field_Default != nullptr) && ((*((*(_162235_m))))._field_Cases.len() > 0LL))) {
		(*((*(_162254_rm))._field_Cases[((*(_162254_rm))._field_Cases.len() - 1LL)]))._field_Next=(*(_162254_rm))._field_Default;
	};
	{
		auto expr = &((*((*(_162235_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b1a196a:;
		if (it != expr_end) {
			jule::I64 _163814_i = it - expr->begin();
			jule::Ptr<_246847139_Case> _163821_c = *it;
			{
				_2468bc346_checkCase(_self_, _162254_rm, _163814_i, _163821_c, _162270_expr);
			}
			_iter_next_22b1a196a:;
			++it;
			_163814_i++;
			goto _iter_begin_22b1a196a;
		}
		_iter_end_22b1a196a:;
	};
}



inline jule::Ptr<_2468ac4ce_Case> _2468bcb60_checkDefault(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468ab896_Match> _164336_m, jule::Ptr<_246845e90_Else> _164351_d) {
	jule::Ptr<_2468ac4ce_Case> _164413_def = jule::new_ptr<_2468ac4ce_Case>(_2468ac4ce_Case{._field_Owner=_164336_m, });;
	(*(_164413_def))._field_Scope=_2468bbcd5_checkCaseScope(_self_, &(_164413_def), &((*(_164351_d))._field_Scope));
	return _164413_def;;
}



inline void _2468bcec3_checkComptimePanic(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246819d43_Token> _165142_callToken, jule::Ptr<_2468a7760_Scope>* _165162_s) {
	if (((*((*(_165162_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16559_stmt = (*((*(_165162_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16559_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22b1a7e5a:;
			{
				jule::Ptr<_246983ac2_Data> _165813_d = _16559_stmt.cast_ptr<_246983ac2_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ (*(_165813_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_22b1a8c4c:;
						{
							jule::Ptr<_24685e805_BuiltinPanicCallExprModel> _166121_m = (*(_165813_d))._field_Model.cast_ptr<_24685e805_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ (*(_166121_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_22b1a9c2b:;
									{
										jule::Ptr<_2445e359c_Const> _166421_c = (*(_166121_m))._field_Expr.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
										if ((!(_2445e7d21_IsStr(_166421_c.ptr())))) {
											goto _match_end_22b1a9bc6;
										};
										if ((_165142_callToken == nullptr)) {
											jule::Ptr<_2468aea64_scopeChecker> _166929_root = _2468b2ddb_getHardRoot(_self_);;
											if (((*(_166929_root))._field_calledFrom == nullptr)) {
												_165142_callToken=(*(_166121_m))._field_Token;
											} else {
												_165142_callToken=(*(_166929_root))._field_calledFrom;
											};
										};
										_246902c83_pushErr((*(_self_))._field_s.ptr(), _165142_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_2445e5725_ReadStr(_166421_c.ptr()), &__jule_any_type4)}));
										_2468b23a2_stop(_self_.ptr());
									}
								}
								_match_end_22b1a9bc6:;
							};
						}
					}
					_match_end_22b1a8be7:;
				};
			}
		}
		_match_end_22b1a7e05:;
	};
}



inline void _2468bd336_processConstMatch(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_2468ab896_Match>* _168342_tm, jule::Ptr<_246847876_MatchCase>* _168359_m) {
	{
		auto expr = &((*((*(_168342_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b1a893e:;
		if (it != expr_end) {
			jule::I64 _168414_i = it - expr->begin();
			jule::Ptr<_2468ac4ce_Case> _168421_c = *it;
			{
				if (((*(_168421_c))._field_Scope != nullptr)) {
					jule::Ptr<_246819d43_Token> _168625_token = nullptr;;
					if (((!((*((*(_168342_tm))))._field_TypeMatch)) && ((*((*(_168421_c))._field_Scope))._field_Stmts.len() > 0LL))) {
						_168625_token=(*((*((*((*(_168359_m))))._field_Cases[_168414_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_2468bcec3_checkComptimePanic(_self_, _168625_token, &((*(_168421_c))._field_Scope));
					(*((*(_168342_tm))))._field_Default=_168421_c;
					(*((*(_168342_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_22b1a893e:;
			++it;
			_168414_i++;
			goto _iter_begin_22b1a893e;
		}
		_iter_end_22b1a893e:;
	};
	if (((*((*(_168359_m))))._field_Default != nullptr)) {
		(*((*(_168342_tm))))._field_Cases=nullptr;
		(*((*(_168342_tm))))._field_Default=_2468bcb60_checkDefault(_self_, (*(_168342_tm)), (*((*(_168359_m))))._field_Default);
		if (((*((*(_168342_tm))))._field_Default != nullptr)) {
			jule::Ptr<_246819d43_Token> _170025_token = nullptr;;
			if ((!((*((*(_168342_tm))))._field_TypeMatch))) {
				_170025_token=(*((*((*((*(_168359_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_2468bcec3_checkComptimePanic(_self_, _170025_token, &((*((*((*(_168342_tm))))._field_Default))._field_Scope));
		};
	} else {
		(*((*(_168342_tm))))._field_Cases=nullptr;
	};
}



inline void _2468bd5de_checkTypeMatch(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246847876_MatchCase>* _171239_m) {
	jule::Ptr<_246983ac2_Data> _171313_d = _2469a36d5_evalExpr1(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*((*(_171239_m))))._field_Expr);;
	if ((_171313_d == nullptr)) {
		return;;
	};
	jule::Ptr<_24687e946_comptimeMatch> _171813_comptime = _2469ba17a_comptimeMatch((*(_171313_d))._field_Kind.ptr());;
	if ((_171813_comptime != nullptr)) {
		_171313_d=(*(_171813_comptime))._field_data;
		jule::Ptr<_246890a9a_comptimeTypeInfo> _172117_cti = _2469ba697_comptimeTypeInfo((*(_171313_d))._field_Kind.ptr());;
		if ((_172117_cti != nullptr)) {
			(*(_171313_d))._field_Kind=(*(_172117_cti))._field_base;
		};
	} else if ((!(((((_2469b6a4a_Prim((*(_171313_d))._field_Kind.ptr()) != nullptr) && _2469c0977_IsAny(_2469b6a4a_Prim((*(_171313_d))._field_Kind.ptr()).ptr())) || (_2469b8354_Trait((*(_171313_d))._field_Kind.ptr()) != nullptr)) || (_2469b7584_TypeEnum((*(_171313_d))._field_Kind.ptr()) != nullptr))))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171239_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2468ab896_Match> _173013_tm = jule::new_ptr<_2468ab896_Match>(_2468ab896_Match{._field_Expr=_171313_d, ._field_TypeMatch=true, ._field_Comptime=(_171813_comptime != nullptr), });;
	if (((!((*(_173013_tm))._field_Comptime)) && ((*((*(_171239_m))))._field_Default != nullptr))) {
		(*(_173013_tm))._field_Default=_2468bcb60_checkDefault(_self_, _173013_tm, (*((*(_171239_m))))._field_Default);
	};
	_2468bc764_checkCases(_self_, _171239_m, _173013_tm, _171313_d);
	if ((*(_173013_tm))._field_Comptime) {
		_2468bd336_processConstMatch(_self_, &(_173013_tm), _171239_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_173013_tm, &__jule_any_type47)); };
}



inline void _2468bd897_checkCommonMatch(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246847876_MatchCase>* _175141_m) {
	jule::Ptr<_246983ac2_Data> _175217_d = nullptr;;
	if (((*((*(_175141_m))))._field_Expr == nullptr)) {
		_175217_d=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Constant=static__2445e4070_NewBool(true)});
		(*(_175217_d))._field_Model=jule::Any((*(_175217_d))._field_Constant, &__jule_any_type19);
	} else {
		_175217_d=_2469a36d5_evalExpr1(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*((*(_175141_m))))._field_Expr);
		if ((_175217_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_24687e946_comptimeMatch> _176613_comptime = _2469ba17a_comptimeMatch((*(_175217_d))._field_Kind.ptr());;
	if ((_176613_comptime != nullptr)) {
		_175217_d=(*(_176613_comptime))._field_data;
		if (((!(_246984496_IsConst(_175217_d.ptr()))) && (_2469ba697_comptimeTypeInfo((*(_175217_d))._field_Kind.ptr()) == nullptr))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_176613_comptime))._field_exprToken, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_2469b8b07_comptime((*(_175217_d))._field_Kind.ptr())) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_176613_comptime))._field_exprToken, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2468ab896_Match> _178013_mc = jule::new_ptr<_2468ab896_Match>(_2468ab896_Match{._field_Expr=_175217_d, ._field_Comptime=(_176613_comptime != nullptr), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_178013_mc, &__jule_any_type47)); };
	if (((!((*(_178013_mc))._field_Comptime)) && ((*((*(_175141_m))))._field_Default != nullptr))) {
		(*(_178013_mc))._field_Default=_2468bcb60_checkDefault(_self_, _178013_mc, (*((*(_175141_m))))._field_Default);
	};
	_2468bc764_checkCases(_self_, _175141_m, _178013_mc, _175217_d);
	if ((*(_178013_mc))._field_Comptime) {
		_2468bd336_processConstMatch(_self_, &(_178013_mc), _175141_m);
	};
}



inline void _2468bdb50_checkMatch(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246847876_MatchCase> _180334_m) {
	if ((*(_180334_m))._field_TypeMatch) {
		_2468bd5de_checkTypeMatch(_self_, &(_180334_m));
		return;;
	};
	_2468bd897_checkCommonMatch(_self_, &(_180334_m));
}



inline void _2468bde08_checkFall(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_24683d0ca_FallSt> _181129_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*((*(_self_))._field_scope))._field_Stmts.len())) || _2468b28be_isDeferred(_self_))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_181129_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_2468ac4ce_Case* _181913_case = ((_2468ac4ce_Case*)((*(_self_))._field_cse));;
	if ((*((*(_181913_case))._field_Owner))._field_Comptime) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_181129_f))._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_181913_case))._field_Next == nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_181129_f))._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_2468acac8_FallSt>(_2468acac8_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_181913_case))._field_Next))}), &__jule_any_type48)); };
}



inline jule::Ptr<_2468a9d06_BreakSt> _2468be249_checkBreakWithLabel(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845236_BreakSt> _183439_b) {
	jule::Ptr<_2468a9d06_BreakSt> _183513_brk = _2468be58a_checkPlainBreak(_self_, _183439_b);;
	if ((_183513_brk == nullptr)) {
		return nullptr;;
	};
	(*(_183513_brk))._field_It=0LLU;
	(*(_183513_brk))._field_Mtch=0LLU;
	jule::Ptr<_2468ad5bd_scopeLabel> _184513_label = _2468a4c79_findLabelParent(&((*((*(_183439_b))._field_Label))._field_Kind), (*(_self_))._field_parent);;
	if ((_184513_label == nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_184513_label))._field_used=true;
	if ((((*(_184513_label))._field_pos + 1LL) >= (*((*((*(_184513_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I64 _18589_i = ((*(_184513_label))._field_pos + 1LL);;
	if ((_18589_i >= (*((*((*(_184513_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _186217_st = (*((*((*(_184513_label))._field_scope))._field_scope))._field_Stmts[_18589_i];;
		{
			auto &_match_expr{ _186217_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_22b1dcdb3:;
				{
					(*(_183513_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_186217_st.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_22b1dcb0a:;
				{
					(*(_183513_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_186217_st.cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_22b1dcb71:;
				{
					(*(_183513_brk))._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_186217_st.cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_22b1dcbd7:;
				{
					(*(_183513_brk))._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_186217_st.cast_ptr<_2468ab896_Match>(&__jule_any_type47)));
				}
			}
			else {
				_case_begin_22b1dca94:;
				{
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_22b1dca3e:;
		};
	};
	if (((*(_183513_brk))._field_It != 0LLU)) {
		if ((!(_2468b8cc1_checkValidBreakLabel(_self_, (*(_183513_brk))._field_It)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_183513_brk))._field_Mtch != 0LLU)) {
		if ((!(_2468b8cc1_checkValidBreakLabel(_self_, (*(_183513_brk))._field_Mtch)))) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_183439_b))._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*(_183439_b))._field_Label))._field_Kind, &__jule_any_type4)}));
		};
	};
	return _183513_brk;;
}



inline jule::Ptr<_2468a9d06_BreakSt> _2468be58a_checkPlainBreak(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845236_BreakSt> _189235_b) {
	if (_2468b28be_isDeferred(_self_)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_189235_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2468aea64_scopeChecker> _189813_scope = _self_;;
	_julec_label_22b1e5591:;
	{
		
		if ((((((*(_189813_scope))._field_it == 0LLU) && ((*(_189813_scope))._field_cse == 0LLU)) && ((*(_189813_scope))._field_parent != nullptr)) && ((*(_189813_scope))._field_owner == nullptr))) {
			_case_begin_22b1e5849:;
			{
				_189813_scope=(*(_189813_scope))._field_parent;
				goto _julec_label_22b1e5591;
			}
		}
		else if (((*(_189813_scope))._field_it != 0LLU)) {
			_case_begin_22b1e58c1:;
			{
				return jule::new_ptr<_2468a9d06_BreakSt>(_2468a9d06_BreakSt{._field_It=(*(_189813_scope))._field_it, });;
			}
		}
		else if (((*(_189813_scope))._field_cse != 0LLU)) {
			_case_begin_22b1e5948:;
			{
				return jule::new_ptr<_2468a9d06_BreakSt>(_2468a9d06_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(((_2468ac4ce_Case*)((*(_189813_scope))._field_cse))))._field_Owner))});;
			}
		}
		_match_end_22b1e577d:;
	};
	_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_189235_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _2468be843_checkBreak(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246845236_BreakSt> _191430_b) {
	if (((*(_191430_b))._field_Label != nullptr)) {
		jule::Ptr<_2468a9d06_BreakSt> _191617_brk = _2468be249_checkBreakWithLabel(_self_, _191430_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_191617_brk, &__jule_any_type49)); };
		return;;
	};
	jule::Ptr<_2468a9d06_BreakSt> _192113_brk = _2468be58a_checkPlainBreak(_self_, _191430_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_192113_brk, &__jule_any_type49)); };
}



inline void _2468beaeb_checkRet(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246843487_RetSt> _192532_r) {
	if (_2468b28be_isDeferred(_self_)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_192532_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2468ace5d_RetSt> _193013_rt = jule::new_ptr<_2468ace5d_RetSt>(_2468ace5d_RetSt{._field_Func=(*(_2468b2b55_getRoot(_self_)))._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_193013_rt, &__jule_any_type50)); };
	jule::Ptr<_24697b45a_retTypeChecker> _193513_rtc = jule::new_ptr<_24697b45a_retTypeChecker>(_24697b45a_retTypeChecker{._field_sc=_self_, ._field_f=(*(_193013_rt))._field_Func, ._field_errorToken=(*(_192532_r))._field_Token, });;
	jule::Bool _19409_ok = _24697c170_check(_193513_rtc.ptr(), &((*(_192532_r))._field_Expr));;
	if ((!(_19409_ok))) {
		return;;
	};
	if (((*(_192532_r))._field_Expr != nullptr)) {
		(*(_193013_rt))._field_Expr=(*(_193513_rtc))._field_model;
	};
}



inline void _2468beda4_checkUseExpr(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246835028_UseExpr> _195032_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_195032_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_2468b28be_isDeferred(_self_)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_195032_ue))._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*(_self_))._field_tree))._field_Stmts.len())) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_195032_ue))._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _2468c015c_checkNode(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Any* _196634_node) {
	{
		auto &_match_expr{ (*(_196634_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_22b2055c3:;
			{
				_2468b576d_checkAnonScope(_self_, (*(_196634_node)).cast_ptr<_246840341_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_22b205b34:;
			{
				_2468b4063_checkVarDecl(_self_, (*(_196634_node)).cast_ptr<_2468430ad_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_22b205903:;
			{
				_2468b45c4_checkTypeAliasDecl(_self_, (*(_196634_node)).cast_ptr<_246846b83_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_22b205da9:;
			{
				_2468b5d89_checkExpr(_self_, (*(_196634_node)).cast_ptr<_246834654_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_22b205e20:;
			{
				_2468b67c4_checkConditional(_self_, (*(_196634_node)).cast_ptr<_246846446_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_22b205e86:;
			{
				_2468b863e_checkIter(_self_, (*(_196634_node)).cast_ptr<_246843b2a_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_22b205eec:;
			{
				_2468b93ba_checkCont(_self_, (*(_196634_node)).cast_ptr<_246845610_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_22b206063:;
			{
				_2468b9673_checkLabel(_self_, (*(_196634_node)).cast_ptr<_24683c904_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_22b2060c9:;
			{
				_2468b992b_pushGoto(_self_, (*(_196634_node)).cast_ptr<_24683cccd_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_22b206140:;
			{
				_2468bb8d9_checkAssignSt(_self_, (*(_196634_node)).cast_ptr<_24683dcbd_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_22b2061a6:;
			{
				_2468bdb50_checkMatch(_self_, (*(_196634_node)).cast_ptr<_246847876_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_22b20621c:;
			{
				_2468bde08_checkFall(_self_, (*(_196634_node)).cast_ptr<_24683d0ca_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_22b206283:;
			{
				_2468be843_checkBreak(_self_, (*(_196634_node)).cast_ptr<_246845236_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_22b2062e9:;
			{
				_2468beaeb_checkRet(_self_, (*(_196634_node)).cast_ptr<_246843487_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_22b206360:;
			{
				_2468beda4_checkUseExpr(_self_, (*(_196634_node)).cast_ptr<_246835028_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_22b20576b:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_22b205716:;
	};
}



inline void _2468c035a_checkResult(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	_24683ebd1_Stmt _200413_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*((*(_self_))._field_tree))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _200413_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_22b21015a:;
			{
				jule::Ptr<_246835028_UseExpr> _200717_ue = _200413_stmt._field_Data.cast_ptr<_246835028_UseExpr>(&__jule_any_type63);;
				jule::Ptr<_246983ac2_Data> _200817_d = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), (*(_200717_ue))._field_Expr);;
				if ((_200817_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_200817_d, &__jule_any_type24)); };
				jule::Ptr<_24697b45a_retTypeChecker> _201317_rtc = jule::new_ptr<_24697b45a_retTypeChecker>(_24697b45a_retTypeChecker{._field_sc=_self_, ._field_types=_246869e1a_Types((*(_self_))._field_result.ptr()), ._field_errorToken=(*((*(_200717_ue))._field_Expr))._field_Token, });;
				_24697c170_check(_201317_rtc.ptr(), &((*(_200717_ue))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_22b20e80d:;
			{
				jule::Ptr<_246834654_Expr> _202017_expr = _200413_stmt._field_Data.cast_ptr<_246834654_Expr>(&__jule_any_type52);;
				jule::Ptr<_246983ac2_Data> _202117_d = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, jule::Trait<_2469d41b6_Lookup>(_self_, 0)), _202017_expr);;
				if ((_202117_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_202117_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_22b215182:;
						{
							jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> _202721_m = (*(_202117_d))._field_Model.cast_ptr<_2468618b2_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_2468b5ad1_processErrorCall(_self_, &(_202721_m), (*(_202017_expr))._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = (*((*(_self_))._field_scope))._field_Stmts; __jule_push_dest.push(jule::Any(_202117_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_22b2153a2:;
						{
							return;;
						}
					}
					_match_end_22b21534c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_22b20e874:;
			{
				_2468c015c_checkNode(_self_, &(_200413_stmt._field_Data));
			}
		}
		else {
			_case_begin_22b20e797:;
			{
				_2468c015c_checkNode(_self_, &(_200413_stmt._field_Data));
				return;;
			}
		}
		_match_end_22b20d257:;
	};
	(*(_self_))._field_result=nullptr;
}



inline void _2468c0558_checkTree(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _204913_n = (*((*(_self_))._field_tree))._field_Stmts.len();;
	if (((*(_self_))._field_result != nullptr)) {
		(_204913_n)--;
	};
	for (; ((*(_self_))._field_i < _204913_n); ((*(_self_))._field_i)++) {
		{
			_24683ebd1_Stmt _205717_stmt = (*((*(_self_))._field_tree))._field_Stmts[(*(_self_))._field_i];;
			_2468c015c_checkNode(_self_, &(_205717_stmt._field_Data));
			if (_2468b2638_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_22b218c79:;
	}
	_iter_end_22b218c79:;;
	if ((((*(_self_))._field_result != nullptr) && ((*((*(_self_))._field_tree))._field_Stmts.len() != 0LL))) {
		_2468c035a_checkResult(_self_);
	};
}



inline void _2468c08bb_checkGoto(_2468aea64_scopeChecker* _self_, jule::Ptr<_2468adb51_scopeGoto>* _206833_gt, jule::Ptr<_2468ad5bd_scopeLabel>* _206854_label) {
	jule::Ptr<_2468aea64_scopeChecker> _206913_gtsc = (*((*(_206833_gt))))._field_scope;;
	while ((((*(_206913_gtsc))._field_childIndex - 1LL) > (*((*((*(_206854_label))))._field_scope))._field_childIndex)) {
		{
			_206913_gtsc=(*(_206913_gtsc))._field_parent;
		}
	_iter_next_22b21be8b:;
	}
	_iter_end_22b21be8b:;;
	jule::I64 _207413_n = 0LL;;
	if (((*(_206913_gtsc))._field_scope == (*((*((*(_206854_label))))._field_scope))._field_scope)) {
		if (((*((*(_206833_gt))))._field_pos > (*((*(_206854_label))))._field_pos)) {
			return;;
		};
		_207413_n=(*((*(_206833_gt))))._field_pos;
	};
	jule::I64 _208713_i = ((*((*(_206854_label))))._field_pos - 1LL);;
	if ((_207413_n == 0LL)) {
		{
			auto expr = &((*((*((*((*(_206854_label))))._field_scope))._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b220126:;
			if (it != expr_end) {
				jule::I64 _209017_j = it - expr->begin();
				jule::Any _209020_stmt = *it;
				{
					if (_2468a54b6_stmtIsGotoScope(&(_209020_stmt), &((*(_206913_gtsc))._field_scope))) {
						_207413_n=_209017_j;
						goto _iter_end_22b220126;
					};
				}
				_iter_next_22b220126:;
				++it;
				_209017_j++;
				goto _iter_begin_22b220126;
			}
			_iter_end_22b220126:;
		};
	};
	for (; (_208713_i >= _207413_n); (_208713_i)--) {
		{
			jule::Any _210017_stmt = (*((*((*((*(_206854_label))))._field_scope))._field_scope))._field_Stmts[_208713_i];;
			if (_2468a72ed_stmtIsDef(&(_210017_stmt))) {
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_206833_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*((*((*(_206833_gt))))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_22b221215:;
	}
	_iter_end_22b221215:;;
}



inline void _2468c0ab9_checkGotos(_2468aea64_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b22238c:;
		if (it != expr_end) {
			jule::Ptr<_2468adb51_scopeGoto> _210921_gt = *it;
			{
				jule::Ptr<_2468ad5bd_scopeLabel> _211017_label = _2468b38ae_findLabelAll(_self_, &((*((*((*(_210921_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_211017_label == nullptr)) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_210921_gt))._field_gt))._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_210921_gt))._field_gt))._field_Label))._field_Kind, &__jule_any_type4)}));
					goto _iter_next_22b22238c;
				};
				(*((*(_210921_gt))._field_st))._field_Label=(*(_211017_label))._field_label;
				(*(_211017_label))._field_used=true;
				_2468c08bb_checkGoto(_self_, &(_210921_gt), &(_211017_label));
			}
			_iter_next_22b22238c:;
			++it;
			goto _iter_begin_22b22238c;
		}
		_iter_end_22b22238c:;
	};
}



inline void _2468c0cb7_checkLabels(_2468aea64_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b224dea:;
		if (it != expr_end) {
			jule::Ptr<_2468ad5bd_scopeLabel> _212216_l = *it;
			{
				if ((!((*(_212216_l))._field_used))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_212216_l))._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_212216_l))._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_22b224dea:;
			++it;
			goto _iter_begin_22b224dea;
		}
		_iter_end_22b224dea:;
	};
}



inline void _2468c0eb5_checkVars(_2468aea64_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b22723d:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _213016_v = *it;
			{
				if (((((!((*(_213016_v))._field_Used)) && (!((*(_213016_v))._field_Constant))) && (!(_24681c7a2_IsIgnoreIdent((*(_213016_v))._field_Ident)))) && (!(_24681ca6b_IsAnonIdent((*(_213016_v))._field_Ident))))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_213016_v))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_213016_v))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_22b22723d:;
			++it;
			goto _iter_begin_22b22723d;
		}
		_iter_end_22b22723d:;
	};
}



inline void _2468c11b3_checkAliases(_2468aea64_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b228d00:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> _213816_a = *it;
			{
				if ((((!((*(_213816_a))._field_Used)) && (!(_24681c7a2_IsIgnoreIdent((*(_213816_a))._field_Ident)))) && (!(_24681ca6b_IsAnonIdent((*(_213816_a))._field_Ident))))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_213816_a))._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*(_213816_a))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_22b228d00:;
			++it;
			goto _iter_begin_22b228d00;
		}
		_iter_end_22b228d00:;
	};
}



inline void _2468c1526_check(jule::Ptr<_2468aea64_scopeChecker> _self_, jule::Ptr<_246840341_ScopeTree>* _214630_tree, jule::Ptr<_2468a7760_Scope>* _214653_s) {
	(*((*(_214653_s))))._field_Deferred=(*((*(_214630_tree))))._field_Deferred;
	(*((*(_214653_s))))._field_Unsafety=(*((*(_214630_tree))))._field_Unsafety;
	jule::I64 _21509_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*(_self_))._field_tree=(*(_214630_tree));
	(*(_self_))._field_scope=(*(_214653_s));
	_2468c0558_checkTree(_self_);
	if ((_21509_errors == (*((*(_self_))._field_s))._field_errors.len())) {
		_2468c0eb5_checkVars(_self_.ptr());
		_2468c11b3_checkAliases(_self_.ptr());
		if (_2468b21a4_isRoot(_self_.ptr())) {
			_2468c0ab9_checkGotos(_self_.ptr());
			_2468c0cb7_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_2468aea64_scopeChecker> _2468c17ac_newChildChecker(jule::Ptr<_2468aea64_scopeChecker> _self_) {
	jule::Ptr<_2468aea64_scopeChecker> _217013_base = _2468a453c_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_217013_base))._field_parent=_self_;
	(*(_217013_base))._field_labels=(*(_self_))._field_labels;
	(*(_217013_base))._field_gotos=(*(_self_))._field_gotos;
	(*(_217013_base))._field_childIndex=static_cast<jule::I64>(((*(_self_))._field_childIndex + 1LL));
	return _217013_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _2468aea64_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _2468c2b43_checkCdef(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_22b233931:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_246865d17_Fn>(&__jule_any_type64)))._field_Binded) {
					goto _match_end_22b233b73;
				};
				goto _case_begin_22b233bc8;
			}
		}
		else {
			_case_begin_22b233bc8:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b233b73:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2468c2deb_checkTypedef(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22b236769:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_246850e23_Struct>(&__jule_any_type65)))._field_Binded) {
					goto _match_end_22b2369ab;
				};
				goto _case_begin_22b236a11;
			}
		}
		else {
			_case_begin_22b236a11:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b2369ab:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2468c31a4_checkNamespace(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22b239b68:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_246850e23_Struct>(&__jule_any_type65)))._field_Binded))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_22b2398b0:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_246865d17_Fn>(&__jule_any_type64)))._field_Binded))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b239926:;
			{
				if ((!((*((*(_self_))._field_o.cast_ptr<_246922555_Var>(&__jule_any_type8)))._field_Binded))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_22b239849:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b2397e4:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_246819d43_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_739_arg))._field_Kind[0LL] != '\"')) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*(_739_arg))._field_Kind.slice(1LL, ((*(_739_arg))._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22b244bea:;
			{
				if ((_2469ac436_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_24682e73c_Directive> _9021_typedef = jule::new_ptr<_24682e73c_Directive>(_24682e73c_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					{ jule::Slice<jule::Ptr<_24682e73c_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_9021_typedef); };
				};
			}
		}
		_match_end_22b244b95:;
	};
}



inline void _2468c345c_checkDeprecated(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22b245d2d:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_246850e23_Struct>(&__jule_any_type65)))._field_Binded) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_22b247060:;
			{
				jule::Ptr<_246865d17_Fn> _10617_f = (*(_self_))._field_o.cast_ptr<_246865d17_Fn>(&__jule_any_type64);;
				if ((((*(_10617_f))._field_Binded || _2468667a7_IsEntryPoint(_10617_f.ptr())) || _246866a3d_IsInit(_10617_f.ptr()))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b2470c6:;
			{
				if ((*((*(_self_))._field_o.cast_ptr<_246922555_Var>(&__jule_any_type8)))._field_Binded) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_22b246aed:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b246a98:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_246819d43_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1259_arg))._field_Kind[0LL] != '\"')) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*(_1259_arg))._field_Kind.slice(1LL, ((*(_1259_arg))._field_Kind.len() - 1LL));
}



inline void _2468c3715_checkTest(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_22b24d022:;
			{
				jule::Ptr<_246865d17_Fn> _14213_f = (*(_self_))._field_o.cast_ptr<_246865d17_Fn>(&__jule_any_type64);;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_246866a3d_IsInit(_14213_f.ptr())))) && (!(_2468667a7_IsEntryPoint(_14213_f.ptr()))))) {
					goto _match_end_22b252774;
				};
				if (_246866521_IsMethod(_14213_f.ptr())) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_14213_f))._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_22b252774;
				};
				goto _case_begin_22b2527c9;
			}
		}
		else {
			_case_begin_22b2527c9:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b252774:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _2468c39bd_checkDirective(_2468c2736_directiveChecker* _self_, jule::Ptr<_24682e73c_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_22b257537:;
			{
				_2468c2b43_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_22b2571e6:;
			{
				_2468c2deb_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_22b25725c:;
			{
				_2468c31a4_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_22b2572c3:;
			{
				_2468c345c_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_22b257339:;
			{
				_2468c3715_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_22b258329:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_22b257180:;
			{
				_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_22b257108:;
	};
}



inline void _2468c3bbb_check(_2468c2736_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b25a062:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _18121_d = *it;
			{
				_2468c39bd_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_22b25a062:;
			++it;
			goto _iter_begin_22b25a062;
		}
		_iter_end_22b25a062:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2468c2736_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2468c91bb_SelectPackage(_2468c8bd2_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _2468c95b7_FindVar(_2468c8bd2_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_2468cb223_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _2468c61b8_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _2468c99b3_FindTypeAlias(_2468c8bd2_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_2468cb223_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _2468c663b_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_246850e23_Struct> _2468c9dae_FindStruct(_2468c8bd2_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_2468cb223_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _2468c6a6a_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_246865d17_Fn> _2468ca2aa_FindFn(_2468c8bd2_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_2468cb223_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _2468c7021_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_2468790e4_Trait> _2468ca5eb_FindTrait(_2468c8bd2_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_2468cb223_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _2468c7362_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_24687b800_Enum> _2468ca93c_FindEnum(_2468c8bd2_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_2468cb223_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _2468c76d6_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2468cac7d_FindTypeEnum(_2468c8bd2_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_2468cb223_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _2468c7a5a_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _2468cb223_isLookupable(_2468c8bd2_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _2468cb564_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_2468cb564_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _2468cb564_existIdent(_2468c8bd2_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2705a5:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_22b2705a5:;
			++it;
			goto _iter_begin_22b2705a5;
		}
		_iter_end_22b2705a5:;
	};
	return false;;
}



inline jule::Bool _2468cb7ea_isAccessibleViaSelection(_2468c8bd2_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _2468cb564_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _2468c8bd2_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2468cc09d_SelectPackage(_2468cbb08_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _2468cc499_FindVar(_2468cbb08_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _2468c61b8_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _2468cc895_FindTypeAlias(_2468cbb08_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _2468c663b_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_246850e23_Struct> _2468ccc91_FindStruct(_2468cbb08_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _2468c6a6a_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_246865d17_Fn> _2468cd18c_FindFn(_2468cbb08_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _2468c7021_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_2468790e4_Trait> _2468cd4cd_FindTrait(_2468cbb08_Package* _self_, jule::Str _33828_ident) {
	return _2468c7362_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_24687b800_Enum> _2468cd81e_FindEnum(_2468cbb08_Package* _self_, jule::Str _34427_ident) {
	return _2468c76d6_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2468cdb60_FindTypeEnum(_2468cbb08_Package* _self_, jule::Str _35031_ident) {
	return _2468c7a5a_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _2468cbb08_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246890a9a_comptimeTypeInfo> _2468ee983_pushComptimeTypeInfo(_2468ee521_commonSemaMeta* _self_, jule::Ptr<_2469b43d8_TypeKind>* _21844_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2a16c4:;
		if (it != expr_end) {
			jule::Ptr<_246890a9a_comptimeTypeInfo> _21921_t2 = *it;
			{
				if ((((*((*(_21921_t2))._field_base))._field_BindIdent == (*((*(_21844_t))))._field_BindIdent) && _2469b4ae2_Equal((*(_21921_t2))._field_base, (*(_21844_t))))) {
					return _21921_t2;;
				};
			}
			_iter_next_22b2a16c4:;
			++it;
			goto _iter_begin_22b2a16c4;
		}
		_iter_end_22b2a16c4:;
	};
	jule::Ptr<_246890a9a_comptimeTypeInfo> _22413_t1 = jule::new_ptr<_246890a9a_comptimeTypeInfo>(_246890a9a_comptimeTypeInfo{._field_base=(*(_21844_t))});;
	{ jule::Slice<jule::Ptr<_246890a9a_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22413_t1); };
	return _22413_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _2468ee521_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _2469005dd_SelectPackage(_246900148_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _24732_selector) {
	return _24697dc10_SelectPackage((*(_self_))._field_file.ptr(), _24732_selector);;
}



inline jule::Ptr<_246922555_Var> _2469009d9_FindVar(_246900148_Sema* _self_, jule::Str _25726_ident, jule::Bool _25738_binded) {
	jule::Ptr<_246922555_Var> _25913_v = _2468c61b8_findVarInPackage(&((*(_self_))._field_files), &(_25726_ident), _25738_binded);;
	if ((_25913_v != nullptr)) {
		return _25913_v;;
	};
	if ((!(_2468ec244_IsPub(_25726_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2a5222:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _27021_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_27021_imp), &(_25726_ident))))) {
					goto _iter_next_22b2a5222;
				};
				_25913_v=_2468c95b7_FindVar(_27021_imp.ptr(), _25726_ident, _25738_binded);
				if (((_25913_v != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_25913_v))._field_Public, (*(_25913_v))._field_Token))) {
					return _25913_v;;
				};
			}
			_iter_next_22b2a5222:;
			++it;
			goto _iter_begin_22b2a5222;
		}
		_iter_end_22b2a5222:;
	};
	return nullptr;;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _246900dd5_FindTypeAlias(_246900148_Sema* _self_, jule::Str _28932_ident, jule::Bool _28944_binded) {
	jule::Ptr<_2469b35e6_TypeAlias> _29113_ta = _2468c663b_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28932_ident), _28944_binded);;
	if ((_29113_ta != nullptr)) {
		return _29113_ta;;
	};
	if ((!(_2468ec244_IsPub(_28932_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2a8005:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _30221_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_30221_imp), &(_28932_ident))))) {
					goto _iter_next_22b2a8005;
				};
				_29113_ta=_2468c99b3_FindTypeAlias(_30221_imp.ptr(), _28932_ident, _28944_binded);
				if (((_29113_ta != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_29113_ta))._field_Public, (*(_29113_ta))._field_Token))) {
					return _29113_ta;;
				};
			}
			_iter_next_22b2a8005:;
			++it;
			goto _iter_begin_22b2a8005;
		}
		_iter_end_22b2a8005:;
	};
	return nullptr;;
}



inline jule::Ptr<_246850e23_Struct> _2469012d1_FindStruct(_246900148_Sema* _self_, jule::Str _32129_ident, jule::Bool _32141_binded) {
	jule::Ptr<_246850e23_Struct> _32313_s = _2468c6a6a_findStructInPackage(&((*(_self_))._field_files), &(_32129_ident), _32141_binded);;
	if ((_32313_s != nullptr)) {
		return _32313_s;;
	};
	if ((!(_2468ec244_IsPub(_32129_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2aacd8:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _33421_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_33421_imp), &(_32129_ident))))) {
					goto _iter_next_22b2aacd8;
				};
				_32313_s=_2468c9dae_FindStruct(_33421_imp.ptr(), _32129_ident, _32141_binded);
				if (((_32313_s != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_32313_s))._field_Public, (*(_32313_s))._field_Token))) {
					return _32313_s;;
				};
			}
			_iter_next_22b2aacd8:;
			++it;
			goto _iter_begin_22b2aacd8;
		}
		_iter_end_22b2aacd8:;
	};
	return nullptr;;
}



inline jule::Ptr<_246865d17_Fn> _2469016cc_FindFn(_246900148_Sema* _self_, jule::Str _35225_ident, jule::Bool _35237_binded) {
	jule::Ptr<_246865d17_Fn> _35413_f = _2468c7021_findFnInPackage(&((*(_self_))._field_files), &(_35225_ident), _35237_binded);;
	if ((_35413_f != nullptr)) {
		return _35413_f;;
	};
	if ((!(_2468ec244_IsPub(_35225_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2adabb:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _36521_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_36521_imp), &(_35225_ident))))) {
					goto _iter_next_22b2adabb;
				};
				_35413_f=_2468ca2aa_FindFn(_36521_imp.ptr(), _35225_ident, _35237_binded);
				if (((_35413_f != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_35413_f))._field_Public, (*(_35413_f))._field_Token))) {
					return _35413_f;;
				};
			}
			_iter_next_22b2adabb:;
			++it;
			goto _iter_begin_22b2adabb;
		}
		_iter_end_22b2adabb:;
	};
	return nullptr;;
}



inline jule::Ptr<_2468790e4_Trait> _246901a1d_FindTrait(_246900148_Sema* _self_, jule::Str _38428_ident) {
	jule::Ptr<_2468790e4_Trait> _38613_t = _2468c7362_findTraitInPackage(&((*(_self_))._field_files), &(_38428_ident));;
	if ((_38613_t != nullptr)) {
		return _38613_t;;
	};
	if ((!(_2468ec244_IsPub(_38428_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2b166d:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _39721_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_39721_imp), &(_38428_ident))))) {
					goto _iter_next_22b2b166d;
				};
				_38613_t=_2468ca5eb_FindTrait(_39721_imp.ptr(), _38428_ident);
				if (((_38613_t != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_38613_t))._field_Public, (*(_38613_t))._field_Token))) {
					return _38613_t;;
				};
			}
			_iter_next_22b2b166d:;
			++it;
			goto _iter_begin_22b2b166d;
		}
		_iter_end_22b2b166d:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687b800_Enum> _246901d5e_FindEnum(_246900148_Sema* _self_, jule::Str _41627_ident) {
	jule::Ptr<_24687b800_Enum> _41813_e = _2468c76d6_findEnumInPackage(&((*(_self_))._field_files), &(_41627_ident));;
	if ((_41813_e != nullptr)) {
		return _41813_e;;
	};
	if ((!(_2468ec244_IsPub(_41627_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2b41ed:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _42921_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_42921_imp), &(_41627_ident))))) {
					goto _iter_next_22b2b41ed;
				};
				_41813_e=_2468ca93c_FindEnum(_42921_imp.ptr(), _41627_ident);
				if (((_41813_e != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_41813_e))._field_Public, (*(_41813_e))._field_Token))) {
					return _41813_e;;
				};
			}
			_iter_next_22b2b41ed:;
			++it;
			goto _iter_begin_22b2b41ed;
		}
		_iter_end_22b2b41ed:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2469021a0_FindTypeEnum(_246900148_Sema* _self_, jule::Str _44831_ident) {
	jule::Ptr<_24687d00a_TypeEnum> _45013_e = _2468c7a5a_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44831_ident));;
	if ((_45013_e != nullptr)) {
		return _45013_e;;
	};
	if ((!(_2468ec244_IsPub(_44831_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2b6c7d:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _46121_imp = *it;
			{
				if ((!(_2468ed113_impIsLookupable(&(_46121_imp), &(_44831_ident))))) {
					goto _iter_next_22b2b6c7d;
				};
				_45013_e=_2468cac7d_FindTypeEnum(_46121_imp.ptr(), _44831_ident);
				if (((_45013_e != nullptr) && _2469034e2_isAccessibleDefine(_self_, (*(_45013_e))._field_Public, (*(_45013_e))._field_Token))) {
					return _45013_e;;
				};
			}
			_iter_next_22b2b6c7d:;
			++it;
			goto _iter_begin_22b2b6c7d;
		}
		_iter_end_22b2b6c7d:;
	};
	return nullptr;;
}



inline jule::Bool _2469025ac_isFlag(_246900148_Sema* _self_, jule::I64 _47721_flags) {
	return (((*(_self_))._field_flags & _47721_flags) == _47721_flags);;
}



inline void _246902865_setCurrentFile(_246900148_Sema* _self_, jule::Ptr<_24697d726_SymbolTable> _47937_f) {
	(*(_self_))._field_file=_47937_f;
}



inline void _246902c83_pushErr(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token> _48126_token, jule::Str _48141_fmt, jule::Slice<jule::Any> _48154_args) {
	{ jule::Slice<_24345e617_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2468ecc8e_compilerErr(&(_48126_token), true, _48141_fmt, _48154_args)); };
}



inline void _2469030e6_pushSuggestion(_246900148_Sema* _self_, jule::Str _48633_fmt, jule::Slice<jule::Any> _48646_args) {
	{
		_2468ee345_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48633_fmt, _48646_args);
	};
}



inline jule::Bool _2469034e2_isAccessibleDefine(_246900148_Sema* _self_, jule::Bool _49133_public, jule::Ptr<_246819d43_Token> _49147_token) {
	return ((_49133_public || ((*(_49147_token))._field_File == nullptr)) || (_246820c7d_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _246820c7d_Dir((*(_49147_token))._field_File.ptr())));;
}



inline jule::Bool _246903998_isDuplicatedIdent(_246900148_Sema* _self_, jule::Uintptr _49832_itself, jule::Str* _49850_ident, jule::Bool _49862_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2bd7e0:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> *_49916_f = it;
			{
				if (_246981c46_isDuplicatedIdent((*(_49916_f)).ptr(), _49832_itself, _49850_ident, _49862_binded)) {
					return true;;
				};
				{
					auto expr = &((*((*(_49916_f))))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b2be1d6:;
					if (it != expr_end) {
						jule::Ptr<_2468c8bd2_ImportInfo> *_50420_imp = it;
						{
							{
								auto expr = &((*((*(_50420_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b2c00d8:;
								if (it != expr_end) {
									jule::Ptr<_246819d43_Token> *_50524_selected = it;
									{
										if (((*((*(_50524_selected))))._field_Kind == (*(_49850_ident)))) {
											return true;;
										};
									}
									_iter_next_22b2c00d8:;
									++it;
									goto _iter_begin_22b2c00d8;
								}
								_iter_end_22b2c00d8:;
							};
						}
						_iter_next_22b2be1d6:;
						++it;
						goto _iter_begin_22b2be1d6;
					}
					_iter_end_22b2be1d6:;
				};
			}
			_iter_next_22b2bd7e0:;
			++it;
			goto _iter_begin_22b2bd7e0;
		}
		_iter_end_22b2bd7e0:;
	};
	return false;;
}



inline void _246903d0b_checkDirectives(jule::Ptr<_246900148_Sema> _self_, jule::Slice<jule::Ptr<_24682e73c_Directive>>* _51540_d, jule::Any _51566_o) {
	_2468c2736_directiveChecker _51613_dc = _2468c2736_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_24682e73c_Directive>>>)(_51540_d)), ._field_o=_51566_o};;
	_2468c3bbb_check(&_51613_dc);
}



inline jule::Bool _2469042b2_checkGenericQuantity(_246900148_Sema* _self_, jule::I64 _52439_required, jule::I64 _52454_given, jule::Ptr<_246819d43_Token> _52466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52439_required == 0LL) && (_52454_given > 0LL))) {
			_case_begin_22b2c275b:;
			{
				_246902c83_pushErr(_self_, _52466_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52439_required > 0LL) && (_52454_given == 0LL))) {
			_case_begin_22b2c27d3:;
			{
				_246902c83_pushErr(_self_, _52466_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52439_required < _52454_given)) {
			_case_begin_22b2c285a:;
			{
				_246902c83_pushErr(_self_, _52466_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52439_required > _52454_given)) {
			_case_begin_22b2c2a7a:;
			{
				_246902c83_pushErr(_self_, _52466_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b2c266d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_22b2c25a2:;
	};
}



inline jule::Bool _2469046ad_isDuplicatedImportSelection(_246900148_Sema* _self_, jule::Uintptr _54342_itself, jule::Str* _54360_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2c4d02:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> *_54416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54416_imp))) == _54342_itself)) {
					goto _iter_end_22b2c4d02;
				};
				if (_2468cb564_existIdent((*(_54416_imp)).ptr(), (*(_54360_ident)))) {
					return true;;
				};
			}
			_iter_next_22b2c4d02:;
			++it;
			goto _iter_begin_22b2c4d02;
		}
		_iter_end_22b2c4d02:;
	};
	return false;;
}



inline jule::Any _246904aa9_getImportDef(_246900148_Sema* _self_, jule::Str* _55628_ident, jule::Ptr<_2468c8bd2_ImportInfo>* _55645_imp) {
	if ((_246b29691_findPackageBuiltinDef(&((*((*(_55645_imp))))._field_LinkPath), _55628_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55645_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2c6be4:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _56021_f = *it;
			{
				;
				jule::Any _56317_def = _246981790_defByIdent(_56021_f.ptr(), _55628_ident, false);;
				if ((_56317_def != nullptr)) {
					return _56317_def;;
				};
			}
			_iter_next_22b2c6be4:;
			++it;
			goto _iter_begin_22b2c6be4;
		}
		_iter_end_22b2c6be4:;
	};
	return nullptr;;
}



inline jule::Bool _22b2cd69b_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_246922555_Var>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2d266c_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_2469b35e6_TypeAlias>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2d65e9_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_246850e23_Struct>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2da70d_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_2468790e4_Trait>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2de68a_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_24687b800_Enum>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2e3617_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_24687d00a_TypeEnum>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _22b2e7594_checkImportSelection(_246900148_Sema* _self_, jule::Ptr<_246819d43_Token>* _57143_ident, jule::Ptr<_246865d17_Fn>* _57159_s) {
	if ((!(_2469034e2_isAccessibleDefine(_self_, (*((*(_57159_s))))._field_Public, (*((*(_57159_s))))._field_Token)))) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_57143_ident))))._field_Kind, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_2468c8099_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_57159_s))))._field_Ident), false) != nullptr)) {
		_246902c83_pushErr(_self_, (*(_57143_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_57159_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _2469052e6_checkImportSelectedSelections(_246900148_Sema* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _58553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58553_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2c8db1:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> _58716_ident = *it;
			{
				if ((*(_58716_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_22b2c8db1;
				};
				if (_2469046ad_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58553_imp)))), &((*(_58716_ident))._field_Kind))) {
					_246902c83_pushErr(_self_, _58716_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_58716_ident))._field_Kind, &__jule_any_type4)}));
					_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_22b2c8db1;
				};
				jule::Any _59917_def = _246904aa9_getImportDef(_self_, &((*(_58716_ident))._field_Kind), _58553_imp);;
				{
					auto &_match_expr{ _59917_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_22b2ca28b:;
						{
							goto _iter_next_22b2c8db1;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_22b2cba0c:;
						{
							jule::Ptr<_246922555_Var> _60521_v = _59917_def.cast_ptr<_246922555_Var>(&__jule_any_type8);;
							__jule_func_result=(_22b2cd69b_checkImportSelection(_self_, &(_58716_ident), &(_60521_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_22b2cba73:;
						{
							jule::Ptr<_2469b35e6_TypeAlias> _60821_ta = _59917_def.cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66);;
							__jule_func_result=(_22b2d266c_checkImportSelection(_self_, &(_58716_ident), &(_60821_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_22b2cc656:;
						{
							jule::Ptr<_246850e23_Struct> _61121_s = _59917_def.cast_ptr<_246850e23_Struct>(&__jule_any_type65);;
							__jule_func_result=(_22b2d65e9_checkImportSelection(_self_, &(_58716_ident), &(_61121_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_22b2cc6bc:;
						{
							jule::Ptr<_2468790e4_Trait> _61421_t = _59917_def.cast_ptr<_2468790e4_Trait>(&__jule_any_type10);;
							__jule_func_result=(_22b2da70d_checkImportSelection(_self_, &(_58716_ident), &(_61421_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_22b2cc733:;
						{
							jule::Ptr<_24687b800_Enum> _61721_e = _59917_def.cast_ptr<_24687b800_Enum>(&__jule_any_type67);;
							__jule_func_result=(_22b2de68a_checkImportSelection(_self_, &(_58716_ident), &(_61721_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_22b2cc799:;
						{
							jule::Ptr<_24687d00a_TypeEnum> _62021_e = _59917_def.cast_ptr<_24687d00a_TypeEnum>(&__jule_any_type68);;
							__jule_func_result=(_22b2e3617_checkImportSelection(_self_, &(_58716_ident), &(_62021_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_22b2cc810:;
						{
							jule::Ptr<_246865d17_Fn> _62321_f = _59917_def.cast_ptr<_246865d17_Fn>(&__jule_any_type64);;
							__jule_func_result=(_22b2e7594_checkImportSelection(_self_, &(_58716_ident), &(_62321_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_22b2cb8ec:;
						{
							_246902c83_pushErr(_self_, _58716_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_58716_ident))._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_22b2c8db1;
						}
					}
					_match_end_22b2cb897:;
				};
			}
			_iter_next_22b2c8db1:;
			++it;
			goto _iter_begin_22b2c8db1;
		}
		_iter_end_22b2c8db1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _22b2ebc6e_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_246922555_Var>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2ed59a:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2cd69b_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b2ed59a:;
			++it;
			goto _iter_begin_22b2ed59a;
		}
		_iter_end_22b2ed59a:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b2ecdb3_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b300b85:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2d266c_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b300b85:;
			++it;
			goto _iter_begin_22b300b85;
		}
		_iter_end_22b300b85:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b3004e2_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_246850e23_Struct>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b30325e:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2d65e9_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b30325e:;
			++it;
			goto _iter_begin_22b30325e;
		}
		_iter_end_22b30325e:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b302abb_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_246865d17_Fn>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b30585a:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2e7594_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b30585a:;
			++it;
			goto _iter_begin_22b30585a;
		}
		_iter_end_22b30585a:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b305140_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_2468790e4_Trait>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b307de0:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2da70d_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b307de0:;
			++it;
			goto _iter_begin_22b307de0;
		}
		_iter_end_22b307de0:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b307791_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_24687b800_Enum>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b30a475:;
		if (it != expr_end) {
			jule::Ptr<_24687b800_Enum> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2de68a_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b30a475:;
			++it;
			goto _iter_begin_22b30a475;
		}
		_iter_end_22b30a475:;
	};
	return _63513_ok;;
}

inline jule::Bool _22b309d26_checkImportsAllSelectionsFromCollection(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_24687d00a_TypeEnum>>* _63462_s, jule::Ptr<_246819d43_Token>* _63471_et) {
	jule::Bool _63513_ok = true;;
	{
		auto expr = _63462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b30ca93:;
		if (it != expr_end) {
			jule::Ptr<_24687d00a_TypeEnum> *_63616_d = it;
			{
				if ((*((*(_63616_d))))._field_Public) {
					_63513_ok=(_22b2e3617_checkImportSelection(_self_, _63471_et, _63616_d) && _63513_ok);
				};
			}
			_iter_next_22b30ca93:;
			++it;
			goto _iter_begin_22b30ca93;
		}
		_iter_end_22b30ca93:;
	};
	return _63513_ok;;
}



inline jule::Bool _246905a33_checkImportAllSelections(_246900148_Sema* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _64444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64444_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2ccc1c:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> *_64616_file = it;
			{
				__jule_func_result=(_22b2ebc6e_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_Vars), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b2ecdb3_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_TypeAliases), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b3004e2_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_Structs), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b302abb_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_Funcs), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b305140_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_Traits), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b307791_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_Enums), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_22b309d26_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64616_file))))._field_TypeEnums), &((*((*(_64444_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_22b2ccc1c:;
			++it;
			goto _iter_begin_22b2ccc1c;
		}
		_iter_end_22b2ccc1c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246905d74_checkImportSelections(_246900148_Sema* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _65845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65845_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _2469052e6_checkImportSelectedSelections(_self_, _65845_imp);
		return __jule_func_result;;
	} else if ((*((*(_65845_imp))))._field_ImportAll) {
		__jule_func_result = _246905a33_checkImportAllSelections(_self_, _65845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2469061b5_isUseAliasDuplication(_246900148_Sema* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _66741_imp) {
	if (((*((*(_66741_imp))))._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b30ec2c:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _67221_imp2 = *it;
			{
				if ((_67221_imp2 == (*(_66741_imp)))) {
					goto _iter_end_22b30ec2c;
				};
				if (((*(_67221_imp2))._field_Alias == (*((*(_66741_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*(_67221_imp2))._field_Ident == (*(_67221_imp2))._field_LinkPath) && ((*(_67221_imp2))._field_Ident == (*((*(_66741_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_22b30ec2c:;
			++it;
			goto _iter_begin_22b30ec2c;
		}
		_iter_end_22b30ec2c:;
	};
	return false;;
}



inline jule::Bool _246906506_checkImport(_246900148_Sema* _self_, jule::Ptr<_2468c8bd2_ImportInfo>* _68735_imp) {
	if (((*((*(_68735_imp))))._field_Binded || ((*((*((*(_68735_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68735_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68735_imp))))._field_ImportAll || !((*((*(_68735_imp))))._field_Alias).empty()) || ((*((*(_68735_imp))))._field_Selected.len() > 0LL))) {
			_246902c83_pushErr(_self_, (*((*(_68735_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_2469061b5_isUseAliasDuplication(_self_, _68735_imp)) {
		_246902c83_pushErr(_self_, (*((*(_68735_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_68735_imp))))._field_Alias, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*((*(_68735_imp))))._field_Duplicate))) {
		jule::Ptr<_246900148_Sema> _70617_sema = jule::new_ptr<_246900148_Sema>(_246900148_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_24691da5c_check(_70617_sema, &((*((*((*(_68735_imp))))._field_Package))._field_Files));
		if (((*(_70617_sema))._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*(_70617_sema))._field_errors);;
			(*(_70617_sema))._field_errors=nullptr;
			return false;;
		};
	};
	return _246905d74_checkImportSelections(_self_, _68735_imp);;
}



inline void _246906704_checkImports(_246900148_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3162b6:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _72121_file = *it;
			{
				_246902865_setCurrentFile(_self_, _72121_file);
				{
					auto expr = &((*(_72121_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b319088:;
					if (it != expr_end) {
						jule::Ptr<_2468c8bd2_ImportInfo> _72325_imp = *it;
						{
							jule::Bool _72417_ok = _246906506_checkImport(_self_, &(_72325_imp));;
							if ((!(_72417_ok))) {
								return;;
							};
						}
						_iter_next_22b319088:;
						++it;
						goto _iter_begin_22b319088;
					}
					_iter_end_22b319088:;
				};
			}
			_iter_next_22b3162b6:;
			++it;
			goto _iter_begin_22b3162b6;
		}
		_iter_end_22b3162b6:;
	};
}



inline void _246906902_implFileImpls(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b318ecd:;
		if (it != expr_end) {
			jule::Ptr<_2468a2309_Impl> _73421_imp = *it;
			{
				_246915119_implImpl(_self_, &(_73421_imp));
			}
			_iter_next_22b318ecd:;
			++it;
			goto _iter_begin_22b318ecd;
		}
		_iter_end_22b318ecd:;
	};
}



inline void _246906b00_implImpls(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b31aa6d:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _74021_file = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _74021_file);
				_246906902_implFileImpls(_self_);
			}
			_iter_next_22b31aa6d:;
			++it;
			goto _iter_begin_22b31aa6d;
		}
		_iter_end_22b31aa6d:;
	};
}



inline void _246906ced_checkEnums(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b31b7b6:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _74721_file = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _74721_file);
				{
					
					if ((!(_246911555_checkEnumDecls(_self_)))) {
						_case_begin_22b31d048:;
					}
					else if ((!(_2469117db_checkTypeEnumDecls(_self_)))) {
						_case_begin_22b31d0c0:;
					}
					_match_end_22b31ceb0:;
				};
			}
			_iter_next_22b31b7b6:;
			++it;
			goto _iter_begin_22b31b7b6;
		}
		_iter_end_22b31b7b6:;
	};
}



inline void _246906eeb_checkFileInherits(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b31c663:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _75721_t = *it;
			{
				jule::Bool _75813_ok = _2469131a0__checkTraitDeclInherits(_self_, &(_75721_t));;
				if ((!(_75813_ok))) {
					return;;
				};
			}
			_iter_next_22b31c663:;
			++it;
			goto _iter_begin_22b31c663;
		}
		_iter_end_22b31c663:;
	};
}



inline void _2469071e9_checkInherits(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b31e2be:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _76621_file = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _76621_file);
				_246906eeb_checkFileInherits(_self_);
			}
			_iter_next_22b31e2be:;
			++it;
			goto _iter_begin_22b31e2be;
		}
		_iter_end_22b31e2be:;
	};
}



inline _2469c653d_typeChecker _2469076a0_typeChecker(jule::Ptr<_246900148_Sema> _self_, jule::Trait<_2469d41b6_Lookup> _77235_l, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _77250_generics, jule::Ptr<_2469c554d_referencer> _77313_referencer) {
	_2469c653d_typeChecker _77413_tc = _2469c653d_typeChecker{._field_s=_self_, ._field_rootLookup=_77235_l, ._field_lookup=_77235_l, ._field_referencer=_77313_referencer, ._field_useGenerics=_77250_generics, };;
	{
		auto &_match_expr{ _77235_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22b321d3d:;
			{
				jule::Ptr<_2468aea64_scopeChecker> _78317_hard = _2468b2ddb_getHardRoot(_77235_l.cast_ptr<_2468aea64_scopeChecker>(0));;
				_77413_tc._field_refers=(*((*(_78317_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_22b321cd8:;
	};
	if (((_77313_referencer != nullptr) && ((*(_77313_referencer))._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_77313_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_22b323504:;
				{
					_77413_tc._field_ownerAlias=(*(_77313_referencer))._field_owner.cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66);
				}
			}
			_match_end_22b32349e:;
		};
	};
	return _77413_tc;;
}



inline jule::Ptr<_2469b43d8_TypeKind> _246907c11_buildTypeWithRefers(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246830320_TypeDecl>* _79944_t, jule::Trait<_2469d41b6_Lookup> _79967_l, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _80013_generics, jule::Ptr<_2469c554d_referencer> _80041_referencer) {
	return ({ auto _wrap_copy = _2469076a0_typeChecker(_self_, _79967_l, _80013_generics, _80041_referencer); _2469cdbd8_checkDecl(&_wrap_copy, _79944_t); });;
}



inline jule::Bool _246908272_checkTypeWithRefers(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469bb852_TypeSymbol>* _80644_t, jule::Trait<_2469d41b6_Lookup> _80664_l, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _80713_generics, jule::Ptr<_2469c554d_referencer> _80741_referencer) {
	jule::Bool __jule_func_result = false;
	if (_2469bbbc6_checked((*(_80644_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80644_t))))._field_Kind=_246907c11_buildTypeWithRefers(_self_, &((*((*(_80644_t))))._field_Decl), _80664_l, _80713_generics, _80741_referencer);
	__jule_func_result = _2469bbbc6_checked((*(_80644_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_2468a02b3_constraintChecker> _246908508_constraintChecker(jule::Ptr<_246900148_Sema> _self_) {
	return jule::new_ptr<_2468a02b3_constraintChecker>(_2468a02b3_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _246908904_checkType(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469bb852_TypeSymbol>* _82134_t, jule::Trait<_2469d41b6_Lookup> _82154_l) {
	return _246908272_checkTypeWithRefers(_self_, _82134_t, _82154_l, nullptr, nullptr);;
}



inline jule::Ptr<_2469b43d8_TypeKind> _246908daa_buildTypeWithGenerics(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246830320_TypeDecl>* _82746_t, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _82813_generics, jule::Ptr<_24686bdd9_ReferenceStack> _82841_refers) {
	jule::Ptr<_2469c653d_typeChecker> _82913_tc = jule::new_ptr<_2469c653d_typeChecker>(_2469c653d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_refers=_82841_refers, ._field_useGenerics=_82813_generics, });;
	return _2469cdbd8_checkDecl(_82913_tc.ptr(), _82746_t);;
}



inline jule::Ptr<_2469b43d8_TypeKind> _24690953c_selectType(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246830320_TypeDecl>* _84535_t) {
	jule::Ptr<_2469c653d_typeChecker> _84613_tc = jule::new_ptr<_2469c653d_typeChecker>(_2469c653d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_selection=true, });;
	return _2469cdbd8_checkDecl(_84613_tc.ptr(), _84535_t);;
}



inline jule::Ptr<_2469857b6_Eval> _2469099e3_evalpd(jule::Ptr<_246900148_Sema> _self_, jule::Trait<_2469d41b6_Lookup> _85730_l, jule::Ptr<_2469b43d8_TypeKind> _85745_p, jule::Ptr<_246922555_Var> _85763_owner) {
	jule::Ptr<_2469857b6_Eval> _85813_e = jule::new_ptr<_2469857b6_Eval>(_2469857b6_Eval{._field_s=_self_, ._field_lookup=_85730_l, ._field_owner=_85763_owner, });;
	{
		auto &_match_expr{ _85730_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22b332205:;
			{
				(*(_85813_e))._field_unsafety=_2468b1e1d_isUnsafe(_85730_l.cast_ptr<_2468aea64_scopeChecker>(0));
			}
		}
		_match_end_22b3321a0:;
	};
	(*(_85813_e))._field_prefix=_85745_p;
	return _85813_e;;
}



inline jule::Ptr<_2469857b6_Eval> _246909dde_evalp(jule::Ptr<_246900148_Sema> _self_, jule::Trait<_2469d41b6_Lookup> _87229_l, jule::Ptr<_2469b43d8_TypeKind> _87244_p) {
	return _2469099e3_evalpd(_self_, _87229_l, _87244_p, nullptr);;
}



inline jule::Ptr<_2469857b6_Eval> _24690a230_eval(jule::Ptr<_246900148_Sema> _self_, jule::Trait<_2469d41b6_Lookup> _87728_l) {
	return _246909dde_evalp(_self_, _87728_l, nullptr);;
}



inline jule::Bool _24690a791_checkAssignType(jule::Ptr<_246900148_Sema> _self_, jule::Bool _88135_destIsRef, jule::Ptr<_2469b43d8_TypeKind>* _88157_dest, jule::Ptr<_246983ac2_Data>* _88214_d, jule::Ptr<_246819d43_Token> _88228_errorToken) {
	if ((*((*(_88214_d))))._field_Decl) {
		_246902c83_pushErr(_self_.ptr(), _88228_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_88135_destIsRef) {
		if ((!(_2469b4ae2_Equal((*(_88157_dest)), (*((*(_88214_d))))._field_Kind)))) {
			_246902c83_pushErr(_self_.ptr(), _88228_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_88157_dest)).ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_88214_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_24696c506_assignTypeChecker> _89317_atc = jule::new_ptr<_24696c506_assignTypeChecker>(_24696c506_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_88157_dest)), ._field_d=(*(_88214_d)), ._field_errorToken=_88228_errorToken});;
		jule::Bool _89913_ok = _24696d76b_check(_89317_atc.ptr());;
		if ((!(_89913_ok))) {
			return false;;
		};
	};
	if (((!(_246984496_IsConst((*(_88214_d)).ptr()))) || (_2469b6a4a_Prim((*(_88157_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90913_kind = (*(_2469b6a4a_Prim((*(_88157_dest)).ptr())))._field_Kind;;
	{
		
		if (_2445e23e2_IsSigInt(_90913_kind)) {
			_case_begin_22b3394d7:;
			{
				_2445e6517_SetI64((*((*(_88214_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_88214_d))))._field_Constant.ptr())));
			}
		}
		else if (_2445e2700_IsUnsigInt(_90913_kind)) {
			_case_begin_22b33955e:;
			{
				_2445e67c0_SetU64((*((*(_88214_d))))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_88214_d))))._field_Constant.ptr())));
			}
		}
		else if (_2445e2d0a_IsFloat(_90913_kind)) {
			_case_begin_22b3395d6:;
			{
				_2445e70d9_SetF64((*((*(_88214_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2445e625e_AsF64((*((*(_88214_d))))._field_Constant.ptr())));
			}
		}
		_match_end_22b33941b:;
	};
	return true;;
}



inline jule::Bool _24690ac47_checkTypeCompatibility(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469b43d8_TypeKind>* _92347_dest, jule::Ptr<_2469b43d8_TypeKind>* _92414_src, jule::Ptr<_246819d43_Token>* _92435_errorToken) {
	if (((*(_92414_src)) == nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*(_92435_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_92347_dest)).ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_92414_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	if ((_2469b8871_Tup((*(_92414_src)).ptr()) != nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*(_92435_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_92347_dest)).ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_92414_src)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	_24696a757_typeCompatibilityChecker _93813_tcc = _24696a757_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92347_dest)), ._field_src=(*(_92414_src)), ._field_errorToken=(*(_92435_errorToken))};;
	if (_24696be1d_check(&_93813_tcc)) {
		return true;;
	};
	_246902c83_pushErr(_self_.ptr(), (*(_92435_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_92347_dest)).ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_92414_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline jule::Ptr<_2469b43d8_TypeKind> _24690b1ed_buildNonGenericTypeKind(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246830320_TypeDecl>* _95948_ast, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>* _96014_generics, jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>* _96050_ignored) {
	jule::Ptr<_2469c653d_typeChecker> _96113_tc = jule::new_ptr<_2469c653d_typeChecker>(_2469c653d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_96014_generics)), ._field_ignoredGenerics=_96050_ignored, });;
	return _2469cdbd8_checkDecl(_96113_tc.ptr(), _95948_ast);;
}



inline jule::Bool _24690b5e9_buildFnNonGenericTypeKinds(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns>* _97151_f, jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>* _97167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _97317_generics = nullptr;;
	if (_246866521_IsMethod((*((*(_97151_f))))._field_Decl.ptr())) {
		_97317_generics=jule::append((*((*((*(_97151_f))))._field_Decl))._field_Generics,(*((*((*((*(_97151_f))))._field_Decl))._field_Owner))._field_Generics);
	} else {
		_97317_generics=(*((*((*(_97151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_97151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3444e2:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> _98021_p = *it;
			{
				if ((!(_24686495e_IsSelf((*(_98021_p))._field_Decl.ptr())))) {
					(*(_98021_p))._field_Kind=_24690b1ed_buildNonGenericTypeKind(_self_, &((*((*((*(_98021_p))._field_Decl))._field_Kind))._field_Decl), &(_97317_generics), _97167_ignored);
					__jule_func_result=(__jule_func_result && ((*(_98021_p))._field_Kind != nullptr));
				};
			}
			_iter_next_22b3444e2:;
			++it;
			goto _iter_begin_22b3444e2;
		}
		_iter_end_22b3444e2:;
	};
	if ((!(_24686628a_IsVoid((*((*(_97151_f))))._field_Decl.ptr())))) {
		(*((*(_97151_f))))._field_Result=_24690b1ed_buildNonGenericTypeKind(_self_, &((*((*((*((*((*(_97151_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl), &(_97317_generics), _97167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_97151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_246868c1b_FnIns> _24690b93a_getTraitCheckFnKind(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _99344_f) {
	if (((*((*(_99344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_99344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_246868c1b_FnIns> _99713_ins = _2468672e1_instanceForce((*(_99344_f)));;
	jule::Ptr<_2469c653d_typeChecker> _99913_tc = jule::new_ptr<_2469c653d_typeChecker>(_2469c653d_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_2469d41b6_Lookup>(_self_, 3), });;
	{
		auto expr = &((*(_99713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3492e9:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> _100421_p = *it;
			{
				if ((!(_24686495e_IsSelf((*(_100421_p))._field_Decl.ptr())))) {
					(*(_100421_p))._field_Kind=_2469cdbd8_checkDecl(_99913_tc.ptr(), &((*((*((*(_100421_p))._field_Decl))._field_Kind))._field_Decl));
				};
			}
			_iter_next_22b3492e9:;
			++it;
			goto _iter_begin_22b3492e9;
		}
		_iter_end_22b3492e9:;
	};
	if ((!(_24686628a_IsVoid((*(_99344_f)).ptr())))) {
		(*(_99713_ins))._field_Result=_2469cdbd8_checkDecl(_99913_tc.ptr(), &((*((*((*((*(_99344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _99713_ins;;
}



inline jule::Bool _24690bde1_checkConstraintsFn(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns>* _101643_f, jule::Ptr<_246819d43_Token>* _101659_et, jule::Ptr<_246868c1b_FnIns> _101675_exist) {
	jule::Ptr<_2468a02b3_constraintChecker> _101713_cc = _246908508_constraintChecker(_self_);;
	(*(_101713_cc))._field_et=(*(_101659_et));
	(*(_101713_cc))._field_fi=(*(_101643_f));
	if ((_101675_exist != nullptr)) {
		{
			auto expr = &((*(_101675_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b34eed1:;
			if (it != expr_end) {
				jule::I64 _102118_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> _102125_g = *it;
				{
					(*((*((*(_101643_f))))._field_Generics[_102118_i]))._field_Constraint=(*(_102125_g))._field_Constraint;
				}
				_iter_next_22b34eed1:;
				++it;
				_102118_i++;
				goto _iter_begin_22b34eed1;
			}
			_iter_end_22b34eed1:;
		};
	} else {
		(*(_101713_cc))._field_uniq=true;
	};
	return _2468a11e8_check(_101713_cc);;
}



inline jule::Bool _24690c397_checkConstraintsStruct(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _103047_s, jule::Ptr<_246819d43_Token>* _103067_et, jule::Ptr<_246853ba1_StructIns> _103083_exist) {
	jule::Ptr<_2468a02b3_constraintChecker> _103113_cc = _246908508_constraintChecker(_self_);;
	(*(_103113_cc))._field_et=(*(_103067_et));
	(*(_103113_cc))._field_si=(*(_103047_s));
	if ((_103083_exist != nullptr)) {
		{
			auto expr = &((*(_103083_exist))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b35306c:;
			if (it != expr_end) {
				jule::I64 _103518_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> _103525_g = *it;
				{
					(*((*((*(_103047_s))))._field_Generics[_103518_i]))._field_Constraint=(*(_103525_g))._field_Constraint;
				}
				_iter_next_22b35306c:;
				++it;
				_103518_i++;
				goto _iter_begin_22b35306c;
			}
			_iter_end_22b35306c:;
		};
	} else {
		(*(_103113_cc))._field_uniq=true;
	};
	return _2468a11e8_check(_103113_cc);;
}



inline jule::Bool _24690c793_fnEnvironment(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns>* _104738_f, jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)> _104749_algo) {
	jule::Ptr<_246900148_Sema> _104813_sema = (*((*((*(_104738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_24697d726_SymbolTable> _104913_old = (*((*((*((*(_104738_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_246902865_setCurrentFile((*((*((*(_104738_f))))._field_Decl))._field_sema.ptr(), _104913_old);
	});;
	jule::Ptr<_24697d726_SymbolTable> _105113_file = _2468edd8e_findFile(&((*((*((*((*(_104738_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_104738_f))))._field_Decl))._field_Token))._field_File));;
	if ((_105113_file != nullptr)) {
		_246902865_setCurrentFile((*((*((*(_104738_f))))._field_Decl))._field_sema.ptr(), _105113_file);
	};
	jule::I64 _105613_size = (*((*(_104738_f))))._field_Generics.len();;
	if ((((*((*(_104738_f))))._field_Decl != nullptr) && ((*((*((*(_104738_f))))._field_Decl))._field_Owner != nullptr))) {
		_105613_size+=(*((*((*((*(_104738_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _106113_generics = jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>::alloc(0LL, _105613_size);;
	_2468eda1a_appendGenericTypeAliases(&(_106113_generics), _104738_f);
	jule::Bool _10649_ok = _104749_algo(&(_104813_sema), &(_106113_generics));;
	if ((_104813_sema != _self_)) {
		((*(_self_))._field_errors).append((*(_104813_sema))._field_errors);;
		(*(_104813_sema))._field_errors=nullptr;
	};
	return _10649_ok;;
}



inline void _24690ca4b_checkFnParamKind(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246867c70_ParamIns>* _107441_p) {
	(*((*((*(_107441_p))))._field_Kind))._field_Variadic=(*((*((*(_107441_p))))._field_Decl))._field_Variadic;
	if (((*((*((*(_107441_p))))._field_Decl))._field_Reference && (!(_2469d0b74_isValidForRef(&((*((*(_107441_p))))._field_Kind)))))) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_107441_p))))._field_Decl))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_107441_p))))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Bool _24690cd8c_reloadFnInsTypes(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns> _108140_f) {
	if ((_24686a1a1_IsBuiltin(_108140_f.ptr()) || _24686a437_IsAnon(_108140_f.ptr()))) {
		return true;;
	};
	return _24690c793_fnEnvironment(_self_, &(_108140_f), jule::Fn<jule::Bool(jule::Ptr<_246900148_Sema>*,jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>*)>([=](jule::Ptr<_246900148_Sema>* _108543_sema, jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>* _108561_generics) mutable -> jule::Bool {
		jule::Bool _108617_ok = true;;
		{
			auto expr = &((*(_108140_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b3611ce:;
			if (it != expr_end) {
				jule::Ptr<_246867c70_ParamIns> _108725_p = *it;
				{
					if (_24686495e_IsSelf((*(_108725_p))._field_Decl.ptr())) {
						if (_246864be5_IsRef((*(_108725_p))._field_Decl.ptr())) {
							(*(_108725_p))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c0c85_Sptr>(_2469c0c85_Sptr{._field_Elem=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_108140_f))._field_Owner, 0)})}), 22)});
						} else {
							(*(_108725_p))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_108140_f))._field_Owner, 0)});
						};
					} else {
						(*(_108725_p))._field_Kind=_246908daa_buildTypeWithGenerics((*(_108543_sema)), &((*((*((*(_108725_p))._field_Decl))._field_Kind))._field_Decl), (*(_108561_generics)), (*(_108140_f))._field_Refers);
						if (((*(_108725_p))._field_Kind != nullptr)) {
							_24690ca4b_checkFnParamKind(_self_, &(_108725_p));
						} else {
							_108617_ok=false;
						};
					};
				}
				_iter_next_22b3611ce:;
				++it;
				goto _iter_begin_22b3611ce;
			}
			_iter_end_22b3611ce:;
		};
		if ((!(_24686628a_IsVoid((*(_108140_f))._field_Decl.ptr())))) {
			(*(_108140_f))._field_Result=_246908daa_buildTypeWithGenerics((*(_108543_sema)), &((*((*((*((*(_108140_f))._field_Decl))._field_Result))._field_Kind))._field_Decl), (*(_108561_generics)), (*(_108140_f))._field_Refers);
			_108617_ok=(((*(_108140_f))._field_Result != nullptr) && _108617_ok);
		};
		return _108617_ok;;
	}));;
}



inline jule::Bool _24690d343_checkRefValidityForInitExpr(jule::Ptr<_246900148_Sema> _self_, jule::Bool _111747_leftMut, jule::Ptr<_246983ac2_Data>* _111767_d, jule::Ptr<_246819d43_Token>* _111782_errorToken) {
	if ((!(_2468ec794_isValidModelForRef(&((*((*(_111767_d))))._field_Model))))) {
		_246902c83_pushErr(_self_.ptr(), (*(_111782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_111747_leftMut && (!((*((*(_111767_d))))._field_Mutable)))) {
		_246902c83_pushErr(_self_.ptr(), (*(_111782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _24690d684_isMutRiskyStruct(_246900148_Sema* _self_, jule::Ptr<_246853ba1_StructIns>* _113432_s) {
	{
		auto expr = &((*((*(_113432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3693e6:;
		if (it != expr_end) {
			jule::Ptr<_246853101_FieldIns> *_113516_f = it;
			{
				if ((((*((*((*(_113516_f))))._field_Decl))._field_Mutable && _2469b5c7a_Mutable((*((*(_113516_f))))._field_Kind.ptr())) && _2469034e2_isAccessibleDefine(_self_, (*((*((*(_113516_f))))._field_Decl))._field_Public, (*((*((*(_113516_f))))._field_Decl))._field_Token))) {
					return true;;
				};
			}
			_iter_next_22b3693e6:;
			++it;
			goto _iter_begin_22b3693e6;
		}
		_iter_end_22b3693e6:;
	};
	return false;;
}



inline jule::Bool _24690dca0_checkValidityForInitExpr(jule::Ptr<_246900148_Sema> _self_, jule::Bool _116144_leftMut, jule::Bool _116159_leftRef, jule::Ptr<_2469b43d8_TypeKind>* _116210_leftKind, jule::Ptr<_246983ac2_Data>* _116236_d, jule::Ptr<_246819d43_Token>* _116251_errorToken) {
	if ((_116144_leftMut && (!((*((*(_116236_d))))._field_Mutable)))) {
		if (_2469b5c7a_Mutable((*((*(_116236_d))))._field_Kind.ptr())) {
			_246902c83_pushErr(_self_.ptr(), (*(_116251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_116236_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_246853ba1_StructIns> _117013_s = _2469b80bd_Struct((*((*(_116236_d))))._field_Kind.ptr());;
		if (((_117013_s != nullptr) && _24690d684_isMutRiskyStruct(_self_.ptr(), &(_117013_s)))) {
			_246902c83_pushErr(_self_.ptr(), (*(_116251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_116236_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_116159_leftRef) {
		if ((!(_24690d343_checkRefValidityForInitExpr(_self_, _116144_leftMut, _116236_d, _116251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_24696c506_assignTypeChecker> _118113_atc = jule::new_ptr<_24696c506_assignTypeChecker>(_24696c506_assignTypeChecker{._field_s=_self_, ._field_d=(*(_116236_d)), ._field_errorToken=(*(_116251_errorToken))});;
	return _24696cc32_checkValidity(_118113_atc.ptr());;
}



inline jule::Bool _24690e19b_checkTypeAliasDeclKind(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469b35e6_TypeAlias>* _118947_ta, jule::Trait<_2469d41b6_Lookup> _118967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_24697d726_SymbolTable> _119013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_246902865_setCurrentFile(_self_.ptr(), _119013_old);
	});;
	if (((*((*(_118947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_24697d726_SymbolTable> _119517_file = _2468edd8e_findFile(&((*(_self_))._field_files), &((*((*((*(_118947_ta))))._field_Token))._field_File));;
		if ((_119517_file != nullptr)) {
			_246902865_setCurrentFile(_self_.ptr(), _119517_file);
		};
	};
	__jule_func_result=_246908272_checkTypeWithRefers(_self_, &((*((*(_118947_ta))))._field_Kind), _118967_l, nullptr, jule::new_ptr<_2469c554d_referencer>(_2469c554d_referencer{._field_ident=(*((*(_118947_ta))))._field_Ident, ._field_owner=jule::Any((*(_118947_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_118947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_2469b781a_Arr((*((*((*(_118947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_2469b781a_Arr((*((*((*(_118947_ta))))._field_Kind))._field_Kind.ptr())))._field_Auto)) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*((*(_118947_ta))))._field_Kind))._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _24690e50e_checkTypeAliasDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469b35e6_TypeAlias>* _121243_ta, jule::Trait<_2469d41b6_Lookup> _121263_l) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_121243_ta))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_121243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_24690e19b_checkTypeAliasDeclKind(_self_, _121243_ta, _121263_l);
}



inline void _24690e7b7_checkTypeAliasDeclDup(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469b35e6_TypeAlias>* _122046_ta) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_122046_ta))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_122046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_122046_ta)))), &((*((*(_122046_ta))))._field_Ident), (*((*(_122046_ta))))._field_Binded)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_122046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_122046_ta))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_24690e19b_checkTypeAliasDeclKind(_self_, _122046_ta, jule::Trait<_2469d41b6_Lookup>(_self_, 3));
}



inline jule::Bool _24690ea4d_checkTypeAliasDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b37b4e6:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> _123321_ta = *it;
			{
				_24690e7b7_checkTypeAliasDeclDup(_self_, &(_123321_ta));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b37b4e6:;
			++it;
			goto _iter_begin_22b37b4e6;
		}
		_iter_end_22b37b4e6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _22b3a7203_checkEnumItemsDup(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _124439_items) {
	{
		auto expr = &(_124439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3a84ce:;
		if (it != expr_end) {
			jule::Ptr<_24687ac83_EnumItem> *_124516_item = it;
			{
				if (((*((*(_124516_item))))._field_Ident).empty()) {
					goto _iter_next_22b3a84ce;
				} else if (_24681c7a2_IsIgnoreIdent((*((*(_124516_item))))._field_Ident)) {
					_246902c83_pushErr(_self_, (*((*(_124516_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b3a97cc:;
						if (it != expr_end) {
							jule::Ptr<_24687ac83_EnumItem> *_125124_citem = it;
							{
								if (((*(_124516_item)) == (*(_125124_citem)))) {
									goto _iter_end_22b3a97cc;
								} else if (((*((*(_124516_item))))._field_Ident == (*((*(_125124_citem))))._field_Ident)) {
									_246902c83_pushErr(_self_, (*((*(_124516_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124516_item))))._field_Ident, &__jule_any_type4)}));
									_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_22b3a97cc;
								};
							}
							_iter_next_22b3a97cc:;
							++it;
							goto _iter_begin_22b3a97cc;
						}
						_iter_end_22b3a97cc:;
					};
				};
			}
			_iter_next_22b3a84ce:;
			++it;
			goto _iter_begin_22b3a84ce;
		}
		_iter_end_22b3a84ce:;
	};
}

inline void _22b3b4045_checkEnumItemsDup(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> _124439_items) {
	{
		auto expr = &(_124439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3b52cc:;
		if (it != expr_end) {
			jule::Ptr<_24687c933_TypeEnumItem> *_124516_item = it;
			{
				if (((*((*(_124516_item))))._field_Ident).empty()) {
					goto _iter_next_22b3b52cc;
				} else if (_24681c7a2_IsIgnoreIdent((*((*(_124516_item))))._field_Ident)) {
					_246902c83_pushErr(_self_, (*((*(_124516_item))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_124439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b3b65ca:;
						if (it != expr_end) {
							jule::Ptr<_24687c933_TypeEnumItem> *_125124_citem = it;
							{
								if (((*(_124516_item)) == (*(_125124_citem)))) {
									goto _iter_end_22b3b65ca;
								} else if (((*((*(_124516_item))))._field_Ident == (*((*(_125124_citem))))._field_Ident)) {
									_246902c83_pushErr(_self_, (*((*(_124516_item))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124516_item))))._field_Ident, &__jule_any_type4)}));
									_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_22b3b65ca;
								};
							}
							_iter_next_22b3b65ca:;
							++it;
							goto _iter_begin_22b3b65ca;
						}
						_iter_end_22b3b65ca:;
					};
				};
			}
			_iter_next_22b3b52cc:;
			++it;
			goto _iter_begin_22b3b52cc;
		}
		_iter_end_22b3b52cc:;
	};
}



inline void _2469100ae_checkEnumItemsStr(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_24687b800_Enum>* _126442_e) {
	jule::Ptr<_2469857b6_Eval> _126513_eval = _24690a230_eval(_self_, jule::Trait<_2469d41b6_Lookup>(_self_, 3));;
	{
		auto expr = &((*((*(_126442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b37d2d9:;
		if (it != expr_end) {
			jule::Ptr<_24687ac83_EnumItem> _126621_item = *it;
			{
				if (_24687b13a_AutoExpr(_126621_item.ptr())) {
					(*(_126621_item))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Constant=static__2445e4339_NewStr((*(_126621_item))._field_Ident)})});
					(*((*((*(_126621_item))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*(_126621_item))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_246983ac2_Data> _127521_d = _2469a3a26_evalExpr(_126513_eval, (*((*(_126621_item))._field_Value))._field_Expr);;
					if ((_127521_d == nullptr)) {
						goto _iter_next_22b37d2d9;
					};
					if ((!(_246984496_IsConst(_127521_d.ptr())))) {
						_246902c83_pushErr(_self_.ptr(), (*((*((*(_126621_item))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_24690a791_checkAssignType(_self_, false, &((*((*((*(_126442_e))))._field_Kind))._field_Kind), &(_127521_d), (*(_126621_item))._field_Token);
					(*((*(_126621_item))._field_Value))._field_Data=_127521_d;
				};
			}
			_iter_next_22b37d2d9:;
			++it;
			goto _iter_begin_22b37d2d9;
		}
		_iter_end_22b37d2d9:;
	};
}



inline void _22b3884c0_checkEnumItemInt(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469857b6_Eval>* _129046_eval, jule::Ptr<_24687b800_Enum>* _129064_e, jule::Ptr<_2469bc259_Prim>* _129075_prim, jule::Ptr<_24687ac83_EnumItem>* _129093_item, jule::U64* _1290115_n) {
	if (_24687b13a_AutoExpr((*(_129093_item)).ptr())) {
		(*((*(_129093_item))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		{
			
{
				_case_begin_22b38b407:;
				{
					(*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant=static__2445e3ca6_NewU64((*(_1290115_n)));
				}
			}
			_match_end_22b38b3a2:;
		};
		(*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_246983ac2_Data> _130517_d = _2469a3a26_evalExpr((*(_129046_eval)), (*((*((*(_129093_item))))._field_Value))._field_Expr);;
		if ((_130517_d == nullptr)) {
			return;;
		};
		if ((!(_246984496_IsConst(_130517_d.ptr())))) {
			_246902c83_pushErr(_self_.ptr(), (*((*((*((*(_129093_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_24690a791_checkAssignType(_self_, false, &((*((*((*(_129064_e))))._field_Kind))._field_Kind), &(_130517_d), (*((*(_129093_item))))._field_Token);
		(*((*((*(_129093_item))))._field_Value))._field_Data=_130517_d;
		{
			
{
				_case_begin_22b38d86b:;
				{
					(*(_1290115_n))=static_cast<jule::U64>(_2445e5208_ReadU64((*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_22b391033:;
		};
	};
}

inline void _22b397db4_checkEnumItemInt(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469857b6_Eval>* _129046_eval, jule::Ptr<_24687b800_Enum>* _129064_e, jule::Ptr<_2469bc259_Prim>* _129075_prim, jule::Ptr<_24687ac83_EnumItem>* _129093_item, jule::I64* _1290115_n) {
	if (_24687b13a_AutoExpr((*(_129093_item)).ptr())) {
		(*((*(_129093_item))))._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()});
		{
			
{
				_case_begin_22b39a207:;
				{
					(*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant=static__2445e39dc_NewI64((*(_1290115_n)));
				}
			}
			_match_end_22b39ac52:;
		};
		(*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_246983ac2_Data> _130517_d = _2469a3a26_evalExpr((*(_129046_eval)), (*((*((*(_129093_item))))._field_Value))._field_Expr);;
		if ((_130517_d == nullptr)) {
			return;;
		};
		if ((!(_246984496_IsConst(_130517_d.ptr())))) {
			_246902c83_pushErr(_self_.ptr(), (*((*((*((*(_129093_item))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_24690a791_checkAssignType(_self_, false, &((*((*((*(_129064_e))))._field_Kind))._field_Kind), &(_130517_d), (*((*(_129093_item))))._field_Token);
		(*((*((*(_129093_item))))._field_Value))._field_Data=_130517_d;
		{
			
{
				_case_begin_22b3a0790:;
				{
					(*(_1290115_n))=static_cast<jule::I64>(_2445e4e72_ReadI64((*((*((*((*(_129093_item))))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_22b3a0a6a:;
		};
	};
}



inline void _22b384b81_checkEnumItemsInt1(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469bc259_Prim>* _132544_prim, jule::Ptr<_24687b800_Enum>* _132562_e) {
	jule::U64 _132613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_22b386688:;
			{
				_132613_max=static_cast<jule::U64>(_2445dbba0_MaxU(_2469bc59a_Str((*(_132544_prim)).ptr())));
			}
		}
		_match_end_22b386a62:;
	};
	jule::Ptr<_2469857b6_Eval> _133613_eval = _24690a230_eval(_self_, jule::Trait<_2469d41b6_Lookup>(_self_, 3));;
	jule::U64 _133713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_24687ac83_EnumItem> _133813_first = (*((*(_132562_e))))._field_Items[0LL];;
	_22b3884c0_checkEnumItemInt(_self_, &(_133613_eval), _132562_e, _132544_prim, &(_133813_first), &(_133713_n));
	if (((*((*(_133813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_22b389da6:;
				{
					_133713_n=static_cast<jule::U64>(_2445e5ec8_AsU64((*((*((*(_133813_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_22b386897:;
		};
	};
	{
		auto expr = (*((*(_132562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22b38cdcb:;
		if (it != expr_end) {
			jule::Ptr<_24687ac83_EnumItem> _135021_item = *it;
			{
				if (((_24687b13a_AutoExpr(_135021_item.ptr()) && (_133713_n > 0LLU)) && ((_132613_max - _133713_n) <= 0LLU))) {
					_246902c83_pushErr(_self_.ptr(), (*(_135021_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_22b38cdcb;
				};
				(_133713_n)++;
				_22b3884c0_checkEnumItemInt(_self_, &(_133613_eval), _132562_e, _132544_prim, &(_135021_item), &(_133713_n));
			}
			_iter_next_22b38cdcb:;
			++it;
			goto _iter_begin_22b38cdcb;
		}
		_iter_end_22b38cdcb:;
	};
}

inline void _22b395565_checkEnumItemsInt1(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2469bc259_Prim>* _132544_prim, jule::Ptr<_24687b800_Enum>* _132562_e) {
	jule::I64 _132613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_22b396258:;
			{
				_132613_max=static_cast<jule::I64>(_2445db8d6_MaxI(_2469bc59a_Str((*(_132544_prim)).ptr())));
			}
		}
		_match_end_22b3962be:;
	};
	jule::Ptr<_2469857b6_Eval> _133613_eval = _24690a230_eval(_self_, jule::Trait<_2469d41b6_Lookup>(_self_, 3));;
	jule::I64 _133713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_24687ac83_EnumItem> _133813_first = (*((*(_132562_e))))._field_Items[0LL];;
	_22b397db4_checkEnumItemInt(_self_, &(_133613_eval), _132562_e, _132544_prim, &(_133813_first), &(_133713_n));
	if (((*((*(_133813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_22b399756:;
				{
					_133713_n=static_cast<jule::I64>(_2445e5c42_AsI64((*((*((*(_133813_first))._field_Value))._field_Data))._field_Constant.ptr()));
				}
			}
			_match_end_22b398810:;
		};
	};
	{
		auto expr = (*((*(_132562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22b3a261b:;
		if (it != expr_end) {
			jule::Ptr<_24687ac83_EnumItem> _135021_item = *it;
			{
				if (((_24687b13a_AutoExpr(_135021_item.ptr()) && (_133713_n > 0LL)) && ((_132613_max - _133713_n) <= 0LL))) {
					_246902c83_pushErr(_self_.ptr(), (*(_135021_item))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_22b3a261b;
				};
				(_133713_n)++;
				_22b397db4_checkEnumItemInt(_self_, &(_133613_eval), _132562_e, _132544_prim, &(_135021_item), &(_133713_n));
			}
			_iter_next_22b3a261b:;
			++it;
			goto _iter_begin_22b3a261b;
		}
		_iter_end_22b3a261b:;
	};
}



inline void _246910c5d_checkEnumItemsInt(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_24687b800_Enum>* _136042_e) {
	jule::Ptr<_2469bc259_Prim> _13619_prim = _2469b6a4a_Prim((*((*((*(_136042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_2445e23e2_IsSigInt((*(_13619_prim))._field_Kind)) {
			_case_begin_22b384763:;
			{
				_22b395565_checkEnumItemsInt1(_self_, &(_13619_prim), _136042_e);
			}
		}
		else {
			_case_begin_22b3843bc:;
			{
				_22b384b81_checkEnumItemsInt1(_self_, &(_13619_prim), _136042_e);
			}
		}
		_match_end_22b384356:;
	};
}



inline void _246911016_checkEnumDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_24687b800_Enum>* _137038_e) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_137038_e))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_137038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_137038_e)))), &((*((*(_137038_e))))._field_Ident), false)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_137038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_137038_e))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_137038_e))))._field_Items.len() == 0LL)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_137038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_137038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_22b3a7203_checkEnumItemsDup(_self_.ptr(), (*((*(_137038_e))))._field_Items);
	if (((*((*(_137038_e))))._field_Kind != nullptr)) {
		if ((!(_246908904_checkType(_self_, &((*((*(_137038_e))))._field_Kind), jule::Trait<_2469d41b6_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*((*(_137038_e))))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_2469bc259_Prim> _139413_t = _2469b6a4a_Prim((*((*((*(_137038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_139413_t == nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_137038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_2469c06e1_IsStr(_139413_t.ptr())) {
			_case_begin_22b3adca9:;
			{
				_2469100ae_checkEnumItemsStr(_self_, _137038_e);
			}
		}
		else if (_2445e29b9_IsInt(_2469bc59a_Str(_139413_t.ptr()))) {
			_case_begin_22b3ad9ac:;
			{
				_246910c5d_checkEnumItemsInt(_self_, _137038_e);
			}
		}
		else {
			_case_begin_22b3ad946:;
			{
				_246902c83_pushErr(_self_.ptr(), (*((*(_137038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_22b3ad083:;
	};
}



inline void _2469112be_checkTypeEnumDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_24687d00a_TypeEnum>* _141142_e) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_141142_e))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_141142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_141142_e)))), &((*((*(_141142_e))))._field_Ident), false)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_141142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_141142_e))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_141142_e))))._field_Items.len() == 0LL)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_141142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_141142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_22b3b4045_checkEnumItemsDup(_self_.ptr(), (*((*(_141142_e))))._field_Items);
	{
		auto expr = &((*((*(_141142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3b08e3:;
		if (it != expr_end) {
			jule::Ptr<_24687c933_TypeEnumItem> _142521_item = *it;
			{
				if (((*(_142521_item))._field_Kind == nullptr)) {
					_246902c83_pushErr(_self_.ptr(), (*(_142521_item))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_22b3b08e3;
				};
				jule::Bool _143013_ok = _246908904_checkType(_self_, &((*(_142521_item))._field_Kind), jule::Trait<_2469d41b6_Lookup>(_self_, 3));;
				if ((!(_143013_ok))) {
					goto _iter_next_22b3b08e3;
				};
				jule::Ptr<_2469bc259_Prim> _143413_p = _2469b6a4a_Prim((*((*(_142521_item))._field_Kind))._field_Kind.ptr());;
				if (((_143413_p != nullptr) && _2469c0977_IsAny(_143413_p.ptr()))) {
					_246902c83_pushErr(_self_.ptr(), (*(_142521_item))._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_22b3b08e3:;
			++it;
			goto _iter_begin_22b3b08e3;
		}
		_iter_end_22b3b08e3:;
	};
	if (((*((*(_141142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_24687c933_TypeEnumItem> _144017_item = (*((*(_141142_e))))._field_Items[0LL];;
		_2469b43d8_TypeKind _144113_tk = _2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_141142_e)), 4)};;
		if ((((*((*(_144017_item))._field_Kind))._field_Kind != nullptr) && _2469b4ae2_Equal((*((*(_144017_item))._field_Kind))._field_Kind, ((jule::Ptr<_2469b43d8_TypeKind>)((&(_144113_tk))))))) {
			_246902c83_pushErr(_self_.ptr(), (*(_144017_item))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_24687d34b_Str((*(_141142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _246911555_checkEnumDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3be407:;
		if (it != expr_end) {
			jule::Ptr<_24687b800_Enum> _145221_e = *it;
			{
				_246911016_checkEnumDecl(_self_, &(_145221_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b3be407:;
			++it;
			goto _iter_begin_22b3be407;
		}
		_iter_end_22b3be407:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _2469117db_checkTypeEnumDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3bedec:;
		if (it != expr_end) {
			jule::Ptr<_24687d00a_TypeEnum> _146421_e = *it;
			{
				_2469112be_checkTypeEnumDecl(_self_, &(_146421_e));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b3bedec:;
			++it;
			goto _iter_begin_22b3bedec;
		}
		_iter_end_22b3bedec:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _246911b2c_checkDeclGenerics(_246900148_Sema* _self_, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>* _147437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _147437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3c252b:;
		if (it != expr_end) {
			jule::I64 _147613_i = it - expr->begin();
			jule::Ptr<_24683c52a_GenericDecl> *_147616_g = it;
			{
				if (_24681c7a2_IsIgnoreIdent((*((*(_147616_g))))._field_Ident)) {
					_246902c83_pushErr(_self_, (*((*(_147616_g))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_22b3c252b;
				};
				_julec_label_22b3c3bc0:;
				{
					auto expr = _147437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3c3dbd:;
					if (it != expr_end) {
						jule::I64 _148517_j = it - expr->begin();
						jule::Ptr<_24683c52a_GenericDecl> *_148520_ct = it;
						{
							{
								
								if ((_148517_j >= _147613_i)) {
									_case_begin_22b3c4a06:;
									{
										goto _iter_end_22b3c3dbd;
									}
								}
								else if (((*((*(_147616_g))))._field_Ident == (*((*(_148520_ct))))._field_Ident)) {
									_case_begin_22b3c4a7d:;
									{
										_246902c83_pushErr(_self_, (*((*(_147616_g))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_147616_g))))._field_Ident, &__jule_any_type4)}));
										_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_22b3c3dbd;
									}
								}
								_match_end_22b3c4907:;
							};
						}
						_iter_next_22b3c3dbd:;
						++it;
						_148517_j++;
						goto _iter_begin_22b3c3dbd;
					}
					_iter_end_22b3c3dbd:;
				};
			}
			_iter_next_22b3c252b:;
			++it;
			_147613_i++;
			goto _iter_begin_22b3c252b;
		}
		_iter_end_22b3c252b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246911e6d_checkFnDeclParamsDup(_246900148_Sema* _self_, jule::Ptr<_246865d17_Fn>* _150140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_22b3c574e:;
	{
		auto expr = &((*((*(_150140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3c6d7c:;
		if (it != expr_end) {
			jule::I64 _150413_i = it - expr->begin();
			jule::Ptr<_246864343_Param> *_150416_p = it;
			{
				{
					auto expr = &((*((*(_150140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3c6d27:;
					if (it != expr_end) {
						jule::Ptr<_24683c52a_GenericDecl> *_150620_g = it;
						{
							if (((*((*(_150416_p))))._field_Ident == (*((*(_150620_g))))._field_Ident)) {
								__jule_func_result=false;
								_246902c83_pushErr(_self_, (*((*(_150416_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150416_p))))._field_Ident, &__jule_any_type4)}));
								_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_22b3c6d7c;
							};
						}
						_iter_next_22b3c6d27:;
						++it;
						goto _iter_begin_22b3c6d27;
					}
					_iter_end_22b3c6d27:;
				};
				_julec_label_22b3c79a4:;
				{
					auto expr = &((*((*(_150140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3c8631:;
					if (it != expr_end) {
						jule::I64 _151617_j = it - expr->begin();
						jule::Ptr<_246864343_Param> *_151620_jp = it;
						{
							{
								
								if ((_151617_j >= _150413_i)) {
									_case_begin_22b3ca479:;
									{
										goto _iter_end_22b3c8631;
									}
								}
								else if (_24681c7a2_IsIgnoreIdent((*((*(_150416_p))))._field_Ident) || _24681c7a2_IsIgnoreIdent((*((*(_151620_jp))))._field_Ident) || _24681ca6b_IsAnonIdent((*((*(_150416_p))))._field_Ident) || _24681ca6b_IsAnonIdent((*((*(_151620_jp))))._field_Ident)) {
									_case_begin_22b3ca501:;
									{
										goto _iter_end_22b3c8631;
									}
								}
								else if (((*((*(_150416_p))))._field_Ident == (*((*(_151620_jp))))._field_Ident)) {
									_case_begin_22b3ca578:;
									{
										__jule_func_result=false;
										_246902c83_pushErr(_self_, (*((*(_150416_p))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_150416_p))))._field_Ident, &__jule_any_type4)}));
										_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_22b3c6d7c;
									}
								}
								_match_end_22b3ca369:;
							};
						}
						_iter_next_22b3c8631:;
						++it;
						_151617_j++;
						goto _iter_begin_22b3c8631;
					}
					_iter_end_22b3c8631:;
				};
			}
			_iter_next_22b3c6d7c:;
			++it;
			_150413_i++;
			goto _iter_begin_22b3c6d7c;
		}
		_iter_end_22b3c6d7c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2469122ae_checkFnDeclResultDup(_246900148_Sema* _self_, jule::Ptr<_246865d17_Fn>* _153840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_24686628a_IsVoid((*(_153840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_153840_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3cd900:;
		if (it != expr_end) {
			jule::I64 _154513_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> *_154516_v = it;
			{
				if ((_24681c7a2_IsIgnoreIdent((*((*(_154516_v))))._field_Kind) || _24681ca6b_IsAnonIdent((*((*(_154516_v))))._field_Kind))) {
					goto _iter_next_22b3cd900;
				};
				{
					auto expr = &((*((*(_153840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3cea88:;
					if (it != expr_end) {
						jule::Ptr<_24683c52a_GenericDecl> *_155020_g = it;
						{
							if (((*((*(_154516_v))))._field_Kind == (*((*(_155020_g))))._field_Ident)) {
								goto _julec_label_22b3d11d8;
							};
						}
						_iter_next_22b3cea88:;
						++it;
						goto _iter_begin_22b3cea88;
					}
					_iter_end_22b3cea88:;
				};
				{
					auto expr = &((*((*(_153840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3d154b:;
					if (it != expr_end) {
						jule::Ptr<_246864343_Param> *_155620_p = it;
						{
							if (((*((*(_154516_v))))._field_Kind == (*((*(_155620_p))))._field_Ident)) {
								goto _julec_label_22b3d11d8;
							};
						}
						_iter_next_22b3d154b:;
						++it;
						goto _iter_begin_22b3d154b;
					}
					_iter_end_22b3d154b:;
				};
				_julec_label_22b3d27a0:;
				{
					auto expr = &((*((*((*(_153840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3d26c3:;
					if (it != expr_end) {
						jule::I64 _156417_j = it - expr->begin();
						jule::Ptr<_246819d43_Token> *_156420_jv = it;
						{
							{
								
								if ((_156417_j >= _154513_i)) {
									_case_begin_22b3d3cce:;
									{
										goto _iter_end_22b3d26c3;
									}
								}
								else if (((*((*(_156420_jv))))._field_Kind == (*((*(_154516_v))))._field_Kind)) {
									_case_begin_22b3d3d56:;
									{
										goto _julec_label_22b3d11d8;
									}
								}
								_match_end_22b3d3bbe:;
							};
						}
						_iter_next_22b3d26c3:;
						++it;
						_156417_j++;
						goto _iter_begin_22b3d26c3;
					}
					_iter_end_22b3d26c3:;
				};
				goto _iter_next_22b3cd900;
				_julec_label_22b3d11d8:;
				_246902c83_pushErr(_self_, (*(_154516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_154516_v))))._field_Kind, &__jule_any_type4)}));
				_2469030e6_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_22b3cd900:;
			++it;
			_154513_i++;
			goto _iter_begin_22b3cd900;
		}
		_iter_end_22b3cd900:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246912600_checkFnVariadicParam(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _158345_f) {
	if (((*((*(_158345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_246864343_Param> _158713_param = (*((*(_158345_f))))._field_Params[((*((*(_158345_f))))._field_Params.len() - 1LL)];;
	if (((*(_158713_param))._field_Variadic && (*(_158713_param))._field_Reference)) {
		_246902c83_pushErr(_self_.ptr(), (*(_158713_param))._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _2469128a8_checkFnDeclPrototype(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _159645_f) {
	if (((*((*(_159645_f))))._field_Exceptional && (*((*(_159645_f))))._field_Binded)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_159645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_159645_f))))._field_Exceptional) {
		if (_2468667a7_IsEntryPoint((*(_159645_f)).ptr())) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_159645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_246866a3d_IsInit((*(_159645_f)).ptr())) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_159645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_246911b2c_checkDeclGenerics(_self_.ptr(), &((*((*(_159645_f))))._field_Generics))))) {
			_case_begin_22b3db127:;
		}
		else if ((!(_246911e6d_checkFnDeclParamsDup(_self_.ptr(), _159645_f)))) {
			_case_begin_22b3db19e:;
		}
		else if ((!(_2469122ae_checkFnDeclResultDup(_self_.ptr(), _159645_f)))) {
			_case_begin_22b3db226:;
		}
		else if ((!(_246912600_checkFnVariadicParam(_self_, _159645_f)))) {
			_case_begin_22b3db29d:;
		}
		_match_end_22b3d9796:;
	};
}



inline jule::Bool _246912d5e_catchTraitInheritCycle(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468790e4_Trait> _161842_t1, jule::Ptr<_2468790e4_Trait> _161858_t2, _2433b0c50_StrBuilder* _161875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_161858_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3dd547:;
		if (it != expr_end) {
			jule::Ptr<_2469bb852_TypeSymbol> _162021_i = *it;
			{
				if (((*(_162021_i))._field_Kind == nullptr)) {
					goto _iter_next_22b3dd547;
				};
				jule::Ptr<_2468790e4_Trait> _162417_t3 = _2469b8354_Trait((*(_162021_i))._field_Kind.ptr());;
				if ((_161842_t1 == _162417_t3)) {
					_246917ade_pushCycleError(_self_.ptr(), &((*(_161858_t2))._field_Ident), &((*(_162417_t3))._field_Ident), _161875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_246912d5e_catchTraitInheritCycle(_self_, _161842_t1, _162417_t3, _161875_message)))) {
					_246917ade_pushCycleError(_self_.ptr(), &((*(_161858_t2))._field_Ident), &((*(_162417_t3))._field_Ident), _161875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b3dd547:;
			++it;
			goto _iter_begin_22b3dd547;
		}
		_iter_end_22b3dd547:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2469131a0__checkTraitDeclInherits(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468790e4_Trait>* _163748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_163748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3e1b99:;
		if (it != expr_end) {
			jule::I64 _163914_i = it - expr->begin();
			jule::Ptr<_2469bb852_TypeSymbol> _163921_it = *it;
			{
				if ((!(_246908904_checkType(_self_, &(_163921_it), jule::Trait<_2469d41b6_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_22b3e1b99;
				};
				jule::Ptr<_2468790e4_Trait> _164417_t2 = _2469b8354_Trait((*(_163921_it))._field_Kind.ptr());;
				if ((_164417_t2 == nullptr)) {
					_246902c83_pushErr(_self_.ptr(), (*((*(_163921_it))._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163748_t))))._field_Ident, &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_163921_it))._field_Kind.ptr()), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_22b3e1b99;
				};
				{
					auto expr = &((*((*(_163748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3e3a8b:;
					if (it != expr_end) {
						jule::I64 _165017_j = it - expr->begin();
						jule::Ptr<_2469bb852_TypeSymbol> _165020_it2 = *it;
						{
							if ((_165017_j >= _163914_i)) {
								goto _iter_end_22b3e3a8b;
							};
							if ((((*(_165020_it2))._field_Kind != nullptr) && _2469b4ae2_Equal((*(_163921_it))._field_Kind, (*(_165020_it2))._field_Kind))) {
								_246902c83_pushErr(_self_.ptr(), (*((*(_163921_it))._field_Decl))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_164417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_22b3e3a8b;
							};
						}
						_iter_next_22b3e3a8b:;
						++it;
						_165017_j++;
						goto _iter_begin_22b3e3a8b;
					}
					_iter_end_22b3e3a8b:;
				};
				if (((*(_163748_t)) == _164417_t2)) {
					_246902c83_pushErr(_self_.ptr(), (*((*(_163921_it))._field_Decl))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_163748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_2433b0c50_StrBuilder _166421_message = static__2433b1019_New(64LL);;
					__jule_func_result=(__jule_func_result && _246912d5e_catchTraitInheritCycle(_self_, (*(_163748_t)), _164417_t2, &(_166421_message)));
					if ((_2433ba5a6_Len(&_166421_message) > 0LL)) {
						jule::Str _166725_errMsg = _2433ba122_Str(&_166421_message);;
						_2433ba320_Clear(&_166421_message);
						_246917ade_pushCycleError(_self_.ptr(), &((*((*(_163748_t))))._field_Ident), &((*(_164417_t2))._field_Ident), &(_166421_message));
						_166725_errMsg+=_2433ba122_Str(&_166421_message);
						_246902c83_pushErr(_self_.ptr(), (*((*(_163921_it))._field_Decl))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_166725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_22b3e1b99:;
			++it;
			_163914_i++;
			goto _iter_begin_22b3e1b99;
		}
		_iter_end_22b3e1b99:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _246913458_checkTraitDeclInherits(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468790e4_Trait>* _167847_t) {
	{
		auto expr = &((*((*(_167847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b3e88d7:;
		if (it != expr_end) {
			jule::I64 _167914_i = it - expr->begin();
			jule::Ptr<_2469bb852_TypeSymbol> _167921_it = *it;
			{
				jule::Ptr<_2468790e4_Trait> _168017_t1 = _2469b8354_Trait((*(_167921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_167847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b3ec6dd:;
					if (it != expr_end) {
						jule::I64 _168118_j = it - expr->begin();
						jule::Ptr<_2469bb852_TypeSymbol> _168125_it2 = *it;
						{
							if ((_168118_j == _167914_i)) {
								goto _iter_next_22b3ec6dd;
							};
							jule::Ptr<_2468790e4_Trait> _168521_t2 = _2469b8354_Trait((*(_168125_it2))._field_Kind.ptr());;
							{
								auto expr = &((*(_168017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b3edc83:;
								if (it != expr_end) {
									jule::Ptr<_246865d17_Fn> _168629_t1m = *it;
									{
										jule::Ptr<_246865d17_Fn> _168725_t2m = _246879c93_FindMethod(_168521_t2.ptr(), (*(_168629_t1m))._field_Ident);;
										if ((_168725_t2m == nullptr)) {
											goto _iter_next_22b3edc83;
										};
										jule::Ptr<_246868c1b_FnIns> _169121_t1f = _24690b93a_getTraitCheckFnKind(_self_, &(_168629_t1m));;
										jule::Ptr<_246868c1b_FnIns> _169221_t2f = _24690b93a_getTraitCheckFnKind(_self_, &(_168725_t2m));;
										if ((!(_246869b84_equalTrait(_169121_t1f, &(_169221_t2f))))) {
											_246902c83_pushErr(_self_.ptr(), (*((*(_167921_it))._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_167847_t))))._field_Ident, &__jule_any_type4),jule::Any((*(_168521_t2))._field_Ident, &__jule_any_type4),jule::Any(_24686aab9_GetKindStr(_169121_t1f.ptr(), true), &__jule_any_type4),jule::Any(_24686aab9_GetKindStr(_169221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_22b3edc83:;
									++it;
									goto _iter_begin_22b3edc83;
								}
								_iter_end_22b3edc83:;
							};
						}
						_iter_next_22b3ec6dd:;
						++it;
						_168118_j++;
						goto _iter_begin_22b3ec6dd;
					}
					_iter_end_22b3ec6dd:;
				};
			}
			_iter_next_22b3e88d7:;
			++it;
			_167914_i++;
			goto _iter_begin_22b3e88d7;
		}
		_iter_end_22b3e88d7:;
	};
}



inline void _246913711_checkTraitDeclMethod(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _170345_f) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_170345_f))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_170345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_24681ca6b_IsAnonIdent((*((*(_170345_f))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_170345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_170345_f))))._field_sema=_self_;
	_2469128a8_checkFnDeclPrototype(_self_, _170345_f);
	jule::Ptr<_246868c1b_FnIns> _171113_ins = _246867577_instance((*(_170345_f)));;
	_24690cd8c_reloadFnInsTypes(_self_, _171113_ins);
	(*(_171113_ins))._field_reloaded=true;
	_246867885_appendInstance((*(_170345_f)).ptr(), &(_171113_ins));
}



inline void _2469139b9_checkTraitDeclMethods(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468790e4_Trait>* _171746_t) {
	{
		auto expr = &((*((*(_171746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4056c4:;
		if (it != expr_end) {
			jule::I64 _171814_i = it - expr->begin();
			jule::Ptr<_246865d17_Fn> _171821_f = *it;
			{
				_246913711_checkTraitDeclMethod(_self_, &(_171821_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_24687a425_findMethodInherit((*(_171746_t)).ptr(), &((*(_171821_f))._field_Ident)) != nullptr)) {
					_246902c83_pushErr(_self_.ptr(), (*(_171821_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171821_f))._field_Ident, &__jule_any_type4)}));
					_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_22b4056c4;
				};
				_julec_label_22b408045:;
				{
					auto expr = &((*((*(_171746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b406c25:;
					if (it != expr_end) {
						jule::I64 _173417_j = it - expr->begin();
						jule::Ptr<_246865d17_Fn> _173420_jf = *it;
						{
							{
								
								if ((_173417_j >= _171814_i)) {
									_case_begin_22b40940e:;
									{
										goto _iter_end_22b406c25;
									}
								}
								else if (((*(_171821_f))._field_Ident == (*(_173420_jf))._field_Ident)) {
									_case_begin_22b409486:;
									{
										_246902c83_pushErr(_self_.ptr(), (*(_171821_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_171821_f))._field_Ident, &__jule_any_type4)}));
										_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_22b406c25;
									}
								}
								_match_end_22b4092ee:;
							};
						}
						_iter_next_22b406c25:;
						++it;
						_173417_j++;
						goto _iter_begin_22b406c25;
					}
					_iter_end_22b406c25:;
				};
			}
			_iter_next_22b4056c4:;
			++it;
			_171814_i++;
			goto _iter_begin_22b4056c4;
		}
		_iter_end_22b4056c4:;
	};
}



inline void _246913c72_checkTraitDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468790e4_Trait>* _175339_t) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_175339_t))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_175339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175339_t)))), &((*((*(_175339_t))))._field_Ident), false)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_175339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_175339_t))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_246913458_checkTraitDeclInherits(_self_, _175339_t);
	_2469139b9_checkTraitDeclMethods(_self_, _175339_t);
}



inline jule::Bool _246914008_checkTraitDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b40e26b:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _176721_t = *it;
			{
				_246913c72_checkTraitDecl(_self_, &(_176721_t));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b40e26b:;
			++it;
			goto _iter_begin_22b40e26b;
		}
		_iter_end_22b40e26b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _246914404_checkTraitImplMethods(_246900148_Sema* _self_, jule::Ptr<_2468790e4_Trait>* _177745_base, jule::Ptr<_2468a2309_Impl>* _177760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_177760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b410da5:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> *_177916_f = it;
			{
				if ((_246879c93_FindMethod((*(_177745_base)).ptr(), (*((*(_177916_f))))._field_Ident) == nullptr)) {
					_246902c83_pushErr(_self_, (*((*(_177916_f))))._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_177745_base))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_177916_f))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_22b410da5:;
			++it;
			goto _iter_begin_22b410da5;
		}
		_iter_end_22b410da5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246914800_implToStruct(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _178837_dest, jule::Ptr<_2468a2309_Impl>* _178857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_178857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b413506:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _179221_f = *it;
			{
				if (((_246851a8e_FindMethod((*(_178837_dest)).ptr(), (*(_179221_f))._field_Ident, (*(_179221_f))._field_Statically) != nullptr) || (_246852221_FindField((*(_178837_dest)).ptr(), (*(_179221_f))._field_Ident) != nullptr))) {
					_246902c83_pushErr(_self_.ptr(), (*(_179221_f))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_179221_f))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_22b413506;
				};
				if ((((*((*(_178837_dest))))._field_Generics.len() > 0LL) && ((*(_179221_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*(_179221_f))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b4163e9:;
						if (it != expr_end) {
							jule::Ptr<_24683c52a_GenericDecl> _180024_fg = *it;
							{
								{
									auto expr = &((*((*(_178837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_22b416cbd:;
									if (it != expr_end) {
										jule::Ptr<_24683c52a_GenericDecl> _180128_dg = *it;
										{
											if (((*(_180024_fg))._field_Ident == (*(_180128_dg))._field_Ident)) {
												_246902c83_pushErr(_self_.ptr(), (*(_180024_fg))._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_22b416cbd:;
										++it;
										goto _iter_begin_22b416cbd;
									}
									_iter_end_22b416cbd:;
								};
							}
							_iter_next_22b4163e9:;
							++it;
							goto _iter_begin_22b4163e9;
						}
						_iter_end_22b4163e9:;
					};
				};
				_246903d0b_checkDirectives(_self_, &((*(_179221_f))._field_Directives), jule::Any(_179221_f, &__jule_any_type64));
				(*(_179221_f))._field_sema=_self_;
				(*(_179221_f))._field_Owner=(*(_178837_dest));
				{ jule::Slice<jule::Ptr<_246865d17_Fn>> &__jule_push_dest = (*((*(_178837_dest))))._field_Methods; __jule_push_dest.push(_179221_f); };
			}
			_iter_next_22b413506:;
			++it;
			goto _iter_begin_22b413506;
		}
		_iter_end_22b413506:;
	};
	{
		auto expr = &((*((*(_178857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4133d5:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _181721_v = *it;
			{
				;
				if (((_246851a8e_FindMethod((*(_178837_dest)).ptr(), (*(_181721_v))._field_Ident, true) != nullptr) || (_246851dd0_FindStatic((*(_178837_dest)).ptr(), (*(_181721_v))._field_Ident) != nullptr))) {
					_246902c83_pushErr(_self_.ptr(), (*(_181721_v))._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_178837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*(_181721_v))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_22b4133d5;
				};
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_178837_dest))))._field_Statics; __jule_push_dest.push(_181721_v); };
			}
			_iter_next_22b4133d5:;
			++it;
			goto _iter_begin_22b4133d5;
		}
		_iter_end_22b4133d5:;
	};
	return __jule_func_result;;
}



inline void _246914aa8_implTrait(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468a2309_Impl>* _183034_decl) {
	jule::Ptr<_2469b43d8_TypeKind> _183113_base_t = _24690953c_selectType(_self_, &((*((*(_183034_decl))))._field_Base));;
	if ((_183113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_2468790e4_Trait> _183513_base = _2469b8354_Trait(_183113_base_t.ptr());;
	if ((_183513_base == nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_183034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str(_183113_base_t.ptr()), &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _184213_destT = _24690953c_selectType(_self_, &((*((*(_183034_decl))))._field_Dest));;
	if ((_184213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_246853ba1_StructIns> _184613_destS = _2469b80bd_Struct(_184213_destT.ptr());;
	if ((_184613_destS == nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_183034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str(_184213_destT.ptr()), &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246850e23_Struct> _185313_dest = (*(_184613_destS))._field_Decl;;
	if ((_246820c7d_Dir((*((*(_185313_dest))._field_Token))._field_File.ptr()) != _246820c7d_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_183034_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_24692081c_pushImplemented(_183513_base, &(_185313_dest));
	_246920b08_pushImplements(&(_185313_dest), _183513_base);
	if (((*((*(_183034_decl))))._field_Statics.len() > 0LL)) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_183034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_246914404_checkTraitImplMethods(_self_.ptr(), &(_183513_base), _183034_decl)))) {
			_case_begin_22b42575a:;
		}
		else if ((!(_246914800_implToStruct(_self_, &(_185313_dest), _183034_decl)))) {
			_case_begin_22b4257d2:;
		}
		_match_end_22b422c96:;
	};
}



inline void _246914d61_implStruct(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468a2309_Impl>* _187335_decl) {
	jule::Ptr<_2469b43d8_TypeKind> _187413_destT = _24690953c_selectType(_self_, &((*((*(_187335_decl))))._field_Dest));;
	if ((_187413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_246853ba1_StructIns> _187813_destS = _2469b80bd_Struct(_187413_destT.ptr());;
	if ((_187813_destS == nullptr)) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_187335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str(_187413_destT.ptr()), &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246850e23_Struct> _188513_dest = (*(_187813_destS))._field_Decl;;
	if ((_246820c7d_Dir((*((*(_188513_dest))._field_Token))._field_File.ptr()) != _246820c7d_Dir((*((*(_self_))._field_file))._field_File.ptr()))) {
		_246902c83_pushErr(_self_.ptr(), (*((*((*(_187335_decl))))._field_Dest))._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_246914800_implToStruct(_self_, &(_188513_dest), _187335_decl)))) {
			_case_begin_22b42ad15:;
		}
		_match_end_22b4294ea:;
	};
}



inline void _246915119_implImpl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_2468a2309_Impl>* _189733_decl) {
	{
		
		if (_2468a26c2_IsTraitImpl((*(_189733_decl)).ptr())) {
			_case_begin_22b42b8e8:;
			{
				_246914aa8_implTrait(_self_, _189733_decl);
			}
		}
		else if (_2468a2958_IsStructImpl((*(_189733_decl)).ptr())) {
			_case_begin_22b42b970:;
			{
				_246914d61_implStruct(_self_, _189733_decl);
			}
		}
		_match_end_22b42b7d8:;
	};
}



inline void _24691547c_checkVarDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246922555_Var>* _190837_decl, jule::Trait<_2469d41b6_Lookup> _190853_l) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_190837_decl))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_246922b71_IsTypeInferred((*(_190837_decl)).ptr())) {
		if ((!(_2469228da_IsInitialized((*(_190837_decl)).ptr())))) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_246908904_checkType(_self_, &((*((*(_190837_decl))))._field_Kind), _190853_l);
	};
	if ((*((*(_190837_decl))))._field_Reference) {
		if ((*((*(_190837_decl))))._field_Constant) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_190837_decl))))._field_Statically) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_2469228da_IsInitialized((*(_190837_decl)).ptr())))) {
		if ((*((*(_190837_decl))))._field_Constant) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_190837_decl))))._field_Statically) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_190837_decl))))._field_Reference) {
			_246902c83_pushErr(_self_.ptr(), (*((*(_190837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _246915735_checkGlobalVarDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246922555_Var>* _194543_decl) {
	if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_194543_decl)))), &((*((*(_194543_decl))))._field_Ident), (*((*(_194543_decl))))._field_Binded)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_194543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_194543_decl))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_194543_decl))))._field_Binded && (*((*(_194543_decl))))._field_Constant)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_194543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_194543_decl))))._field_Binded)) && (!((*((*(_194543_decl))))._field_Constant))) && (!((*((*(_194543_decl))))._field_Statically)))) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_194543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_246903d0b_checkDirectives(_self_, &((*((*(_194543_decl))))._field_Directives), jule::Any((*(_194543_decl)), &__jule_any_type8));
	_24691547c_checkVarDecl(_self_, _194543_decl, jule::Trait<_2469d41b6_Lookup>(_self_, 3));
}



inline jule::Bool _2469159bb_checkGlobalDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b43951b:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _196321_decl = *it;
			{
				_246915735_checkGlobalVarDecl(_self_, &(_196321_decl));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b43951b:;
			++it;
			goto _iter_begin_22b43951b;
		}
		_iter_end_22b43951b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _246915db7_checkStructTraitImpl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _197345_strct, jule::Ptr<_2468790e4_Trait>* _197366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_197366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b43b144:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _197421_tf = *it;
			{
				jule::Bool _197517_exist = false;;
				jule::Ptr<_246865d17_Fn> _197617_sf = _246851a8e_FindMethod((*(_197345_strct)).ptr(), (*(_197421_tf))._field_Ident, (*(_197421_tf))._field_Statically);;
				jule::Ptr<_246868c1b_FnIns> _197713_tfK = _24690b93a_getTraitCheckFnKind(_self_, &(_197421_tf));;
				if ((_197617_sf != nullptr)) {
					jule::Ptr<_246868c1b_FnIns> _197921_sfK = _24690b93a_getTraitCheckFnKind(_self_, &(_197617_sf));;
					_197517_exist=_246869b84_equalTrait(_197713_tfK, &(_197921_sfK));
				};
				if (_197517_exist) {
					jule::Ptr<_24682e73c_Directive> _198317_d = _2469ac436_findDirective(&((*(_197617_sf))._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_198317_d != nullptr)) {
						_246902c83_pushErr(_self_.ptr(), (*(_198317_d))._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_246902c83_pushErr(_self_.ptr(), (*((*(_197345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_197366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_24686aab9_GetKindStr(_197713_tfK.ptr(), true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_22b43b144:;
			++it;
			goto _iter_begin_22b43b144;
		}
		_iter_end_22b43b144:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246916208_checkStructImpls(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _199741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_199741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b441512:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _199921_trt = *it;
			{
				__jule_func_result=(_246915db7_checkStructTraitImpl(_self_, _199741_s, &(_199921_trt)) && __jule_func_result);
			}
			_iter_next_22b441512:;
			++it;
			goto _iter_begin_22b441512;
		}
		_iter_end_22b441512:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _246916549_checkStructFields(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _200542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_200542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b442986:;
		if (it != expr_end) {
			jule::Ptr<_24684d030_Field> _200721_f = *it;
			{
				(*(_200721_f))._field_Owner=(*(_200542_st));
				{
					auto expr = &((*((*(_200542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b4436ce:;
					if (it != expr_end) {
						jule::Ptr<_24684d030_Field> _200920_cf = *it;
						{
							if ((_200721_f == _200920_cf)) {
								goto _iter_end_22b4436ce;
							} else if (((*(_200721_f))._field_Ident == (*(_200920_cf))._field_Ident)) {
								_246902c83_pushErr(_self_.ptr(), (*(_200721_f))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_200721_f))._field_Ident, &__jule_any_type4)}));
								_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_22b4436ce:;
						++it;
						goto _iter_begin_22b4436ce;
					}
					_iter_end_22b4436ce:;
				};
			}
			_iter_next_22b442986:;
			++it;
			goto _iter_begin_22b442986;
		}
		_iter_end_22b442986:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _246916802_checkStructDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _202240_s) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_202240_s))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_202240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_202240_s)))), &((*((*(_202240_s))))._field_Ident), (*((*(_202240_s))))._field_Binded)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_202240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_202240_s))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_246903d0b_checkDirectives(_self_, &((*((*(_202240_s))))._field_Directives), jule::Any((*(_202240_s)), &__jule_any_type65));
	{
		
		if ((!(_246911b2c_checkDeclGenerics(_self_.ptr(), &((*((*(_202240_s))))._field_Generics))))) {
			_case_begin_22b44856e:;
		}
		else if ((!(_246916549_checkStructFields(_self_, _202240_s)))) {
			_case_begin_22b4485d5:;
		}
		else if ((!(_246916208_checkStructImpls(_self_, _202240_s)))) {
			_case_begin_22b44864b:;
		}
		else if ((!(_24691743a_checkFuncDeclsBy(_self_, &((*((*(_202240_s))))._field_Methods))))) {
			_case_begin_22b4486c3:;
		}
		_match_end_22b448096:;
	};
}



inline jule::Bool _246916a88_checkStructDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b44a472:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _204221_s = *it;
			{
				_246916802_checkStructDecl(_self_, &(_204221_s));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b44a472:;
			++it;
			goto _iter_begin_22b44a472;
		}
		_iter_end_22b44a472:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _246916d41_checkAnonFuncDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _205242_f) {
	(*((*(_205242_f))))._field_sema=_self_;
	_2469128a8_checkFnDeclPrototype(_self_, _205242_f);
}



inline void _2469170e9_checkFuncDecl(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _205738_f) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_205738_f))))._field_Ident)) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_205738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_246866cc4_IsAnon((*(_205738_f)).ptr())) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_205738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_246903d0b_checkDirectives(_self_, &((*((*(_205738_f))))._field_Directives), jule::Any((*(_205738_f)), &__jule_any_type64));
	_246916d41_checkAnonFuncDecl(_self_, _205738_f);
	if ((((*((*(_205738_f))))._field_Owner == nullptr) && _246903998_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_205738_f)))), &((*((*(_205738_f))))._field_Ident), (*((*(_205738_f))))._field_Binded))) {
		if ((*((*(_205738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_246865d17_Fn> _206917_init = _2469016cc_FindFn(_self_.ptr(), jule::Str::lit("init", 4), false);;
			if ((_206917_init != nullptr)) {
				return;;
			};
		};
		_246902c83_pushErr(_self_.ptr(), (*((*(_205738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_205738_f))))._field_Ident, &__jule_any_type4)}));
		_2469030e6_pushSuggestion(_self_.ptr(), jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _24691743a_checkFuncDeclsBy(jule::Ptr<_246900148_Sema> _self_, jule::Slice<jule::Ptr<_246865d17_Fn>>* _207941_funcs) {
	{
		auto expr = _207941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b45290d:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _208021_f = *it;
			{
				_2469170e9_checkFuncDecl(_self_, &(_208021_f));
				if (((*(_self_))._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_22b45290d:;
			++it;
			goto _iter_begin_22b45290d;
		}
		_iter_end_22b45290d:;
	};
	return true;;
}



inline jule::Bool _2469176c1_checkFuncDecls(jule::Ptr<_246900148_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _24691743a_checkFuncDeclsBy(_self_, &((*((*(_self_))._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _246917ade_pushCycleError(_246900148_Sema* _self_, jule::Str* _209530_st1, jule::Str* _209541_st2, _2433b0c50_StrBuilder* _209556_message) {
	;
	jule::Str _20979_refersTo = _24345ea79_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_209530_st1)), &__jule_any_type4),jule::Any((*(_209541_st2)), &__jule_any_type4)}));;
	jule::Slice<jule::U8> _209813_buf = _2433baac3_Buf(_209556_message);;
	_2433b982a_WriteStr(_209556_message, _24339ae7c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2433b982a_WriteStr(_209556_message, _20979_refersTo);
	_2433b9ad3_WriteByte(_209556_message, '\n');
	_2433b9572_Write(_209556_message, _209813_buf);
}



inline void _246918293_checkPackageDecls(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b457a34:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _212221_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _212221_f);
				if ((!(_24690ea4d_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_22b457a34:;
			++it;
			goto _iter_begin_22b457a34;
		}
		_iter_end_22b457a34:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b45a10d:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _212921_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _212921_f);
				if ((!(_246914008_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_22b45a10d:;
			++it;
			goto _iter_begin_22b45a10d;
		}
		_iter_end_22b45a10d:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4598c1:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _213621_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _213621_f);
				if ((!(_2469159bb_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_22b4598c1:;
			++it;
			goto _iter_begin_22b4598c1;
		}
		_iter_end_22b4598c1:;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b45c099:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _214321_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _214321_f);
				{
					
					if ((!(_2469176c1_checkFuncDecls(_self_)))) {
						_case_begin_22b45cde1:;
					}
					else if ((!(_246916a88_checkStructDecls(_self_)))) {
						_case_begin_22b45ce57:;
					}
					else {
						_case_begin_22b45cd7a:;
						{
							goto _iter_next_22b45c099;
						}
					}
					_match_end_22b45cd25:;
				};
				return;;
			}
			_iter_next_22b45c099:;
			++it;
			goto _iter_begin_22b45c099;
		}
		_iter_end_22b45c099:;
	};
}



inline void _246918606_checkDataForTypeInference(_246900148_Sema* _self_, jule::Ptr<_246983ac2_Data>* _215545_d, jule::Ptr<_246819d43_Token>* _215556_err_token) {
	{
		
		if (_246983e79_IsNil((*(_215545_d)).ptr())) {
			_case_begin_22b45e035:;
			{
				_246902c83_pushErr(_self_, (*(_215556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_246984210_IsVoid((*(_215545_d)).ptr())) {
			_case_begin_22b45e0ac:;
			{
				_246902c83_pushErr(_self_, (*(_215556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_215545_d))))._field_Kind))._field_Variadic) {
			_case_begin_22b45e134:;
			{
				_246902c83_pushErr(_self_, (*(_215556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_22b45de14:;
	};
}



inline void _2469188ae_checkVarValue(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246922555_Var>* _216738_v) {
	if (_246922b71_IsTypeInferred((*(_216738_v)).ptr())) {
		(*((*(_216738_v))))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind});
		_246918606_checkDataForTypeInference(_self_.ptr(), &((*((*((*(_216738_v))))._field_Value))._field_Data), &((*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token));
		_24690dca0_checkValidityForInitExpr(_self_, (*((*(_216738_v))))._field_Mutable, (*((*(_216738_v))))._field_Reference, &((*((*((*(_216738_v))))._field_Kind))._field_Kind), &((*((*((*(_216738_v))))._field_Value))._field_Data), &((*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token));
	} else {
		jule::Ptr<_2469c3a79_Arr> _218017_arr = _2469b781a_Arr((*((*((*(_216738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_218017_arr != nullptr)) {
			if ((*(_218017_arr))._field_Auto) {
				jule::Ptr<_2469c3a79_Arr> _218321_dataArr = _2469b781a_Arr((*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_218321_dataArr != nullptr)) {
					(*(_218017_arr))._field_N=(*(_218321_dataArr))._field_N;
				};
			};
		};
		if (_24690a791_checkAssignType(_self_, (*((*(_216738_v))))._field_Reference, &((*((*((*(_216738_v))))._field_Kind))._field_Kind), &((*((*((*(_216738_v))))._field_Value))._field_Data), (*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token)) {
			_24690dca0_checkValidityForInitExpr(_self_, (*((*(_216738_v))))._field_Mutable, (*((*(_216738_v))))._field_Reference, &((*((*((*(_216738_v))))._field_Kind))._field_Kind), &((*((*((*(_216738_v))))._field_Value))._field_Data), &((*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token));
		};
	};
	if (((*((*(_216738_v))))._field_Reference && (!(_2469d0b74_isValidForRef(&((*((*((*(_216738_v))))._field_Kind))._field_Kind)))))) {
		_246902c83_pushErr(_self_.ptr(), (*((*(_216738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*((*(_216738_v))))._field_Kind))._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_216738_v))))._field_Constant) {
		jule::Bool _220513_comptime = _2469b8b07_comptime((*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
		if (((!(_246984496_IsConst((*((*((*(_216738_v))))._field_Value))._field_Data.ptr()))) && (!(_220513_comptime)))) {
			_246902c83_pushErr(_self_.ptr(), (*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_220513_comptime && ((_2469b9de4_comptimeRange((*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr) || (_2469ba17a_comptimeMatch((*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind.ptr()) != nullptr)))) {
			_246902c83_pushErr(_self_.ptr(), (*((*((*((*(_216738_v))))._field_Value))._field_Expr))._field_Token, jule::Str::lit("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		(*((*((*((*(_216738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
	};
	if ((_2469b8871_Tup((*((*((*(_216738_v))))._field_Kind))._field_Kind.ptr()) != nullptr)) {
		(*((*((*(_216738_v))))._field_Kind))._field_Kind=nullptr;
	};
}



inline void _246918c22_evalVarValue(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246922555_Var>* _222537_decl, jule::Trait<_2469d41b6_Lookup> _222553_l) {
	if ((!(_2469228da_IsInitialized((*(_222537_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_2469857b6_Eval> _223017_eval = nullptr;;
	if (((*((*(_222537_decl))))._field_Kind != nullptr)) {
		_223017_eval=_2469099e3_evalpd(_self_, _222553_l, (*((*((*(_222537_decl))))._field_Kind))._field_Kind, (*(_222537_decl)));
	} else {
		_223017_eval=_2469099e3_evalpd(_self_, _222553_l, nullptr, (*(_222537_decl)));
	};
	(*(_223017_eval))._field_immutable=(!((*((*(_222537_decl))))._field_Mutable));
	(*((*((*(_222537_decl))))._field_Value))._field_Data=_2469a3a26_evalExpr(_223017_eval, (*((*((*(_222537_decl))))._field_Value))._field_Expr);
}



inline void _246919085_checkVar(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246922555_Var>* _224233_decl, jule::Trait<_2469d41b6_Lookup> _224249_l) {
	_246918c22_evalVarValue(_self_, _224233_decl, _224249_l);
	if (((*((*((*(_224233_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_2469188ae_checkVarValue(_self_, _224233_decl);
}



inline void _246919283_checkGlobals(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b477944:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _225221_decl = *it;
			{
				if ((*(_225221_decl))._field_Binded) {
					goto _iter_next_22b477944;
				};
				if (((_2469228da_IsInitialized(_225221_decl.ptr()) && ((*((*(_225221_decl))._field_Value))._field_Data == nullptr)) || (_246922b71_IsTypeInferred(_225221_decl.ptr()) && ((*((*(_225221_decl))._field_Kind))._field_Kind == nullptr)))) {
					_246919085_checkVar(_self_, &(_225221_decl), jule::Trait<_2469d41b6_Lookup>(_self_, 3));
				};
			}
			_iter_next_22b477944:;
			++it;
			goto _iter_begin_22b477944;
		}
		_iter_end_22b477944:;
	};
}



inline jule::Ptr<_246868c1b_FnIns> _24691967e_readyToCheckFn(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _226639_s, jule::Ptr<_246865d17_Fn>* _226659_f) {
	jule::Ptr<_246868c1b_FnIns> _226713_ins = _246867577_instance((*(_226659_f)));;
	if (((*((*(_226659_f))))._field_Instances.len() != 0LL)) {
		return _226713_ins;;
	};
	(*(_226713_ins))._field_Owner=(*(_226639_s));
	_246867885_appendInstance((*(_226659_f)).ptr(), &(_226713_ins));
	(*(_226713_ins))._field_reloaded=true;
	if (_24690cd8c_reloadFnInsTypes(_self_, _226713_ins)) {
		return _226713_ins;;
	};
	return nullptr;;
}



inline void _2469199e2_checkTypeMethod(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _228040_s, jule::Ptr<_246865d17_Fn>* _228060_f) {
	if (((*((*(_228060_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_246868c1b_FnIns> _228513_ins = (*((*(_228060_f))))._field_Instances[0LL];;
	if (((*((*(_228513_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_24691c495_checkFnIns(_self_, &(_228513_ins));
}



inline jule::Ptr<_246868c1b_FnIns> _246919e98_checkStructInsOp(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _229341_s, jule::Ptr<_246865d17_Fn>* _229361_f, jule::Fn<jule::Bool(jule::Ptr<_246865d17_Fn>)> _229369_p) {
	if (((((*(_229361_f)) == nullptr) || ((*((*(_229361_f))))._field_Generics.len() > 0LL)) || (!(_229369_p((*(_229361_f))))))) {
		return nullptr;;
	};
	return (*((*(_229361_f))))._field_Instances[0LL];;
}



inline jule::Bool _24691a394_checkStructEnv(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _230339_s, jule::Ptr<_246819d43_Token> _230358_errorToken) {
	jule::Bool __jule_func_result = false;
	_2469c653d_typeChecker _230413_tc = _2469c653d_typeChecker{._field_s=(*((*((*(_230339_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait<_2469d41b6_Lookup>((*((*((*(_230339_s))))._field_Decl))._field_sema, 3), ._field_lookup=jule::Trait<_2469d41b6_Lookup>((*((*((*(_230339_s))))._field_Decl))._field_sema, 3), ._field_referencer=jule::new_ptr<_2469c554d_referencer>(_2469c554d_referencer{._field_ident=(*((*((*(_230339_s))))._field_Decl))._field_Ident, ._field_owner=jule::Any((*((*(_230339_s))))._field_Decl, &__jule_any_type65), }), ._field_refers=(*((*(_230339_s))))._field_Refers, };;
	if (((*((*(_230339_s))))._field_Generics.len() > 0LL)) {
		_230413_tc._field_useGenerics=jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>::alloc(0LL, (*((*(_230339_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_230339_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b4887ce:;
			if (it != expr_end) {
				jule::I64 _231718_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> _231725_g = *it;
				{
					jule::Ptr<_24683c52a_GenericDecl> _231821_decl = (*((*((*(_230339_s))))._field_Decl))._field_Generics[_231718_i];;
					{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = _230413_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Token=(*(_231821_decl))._field_Token, ._field_Ident=(*(_231821_decl))._field_Ident, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_231725_g))._field_Kind}), })); };
				}
				_iter_next_22b4887ce:;
				++it;
				_231718_i++;
				goto _iter_begin_22b4887ce;
			}
			_iter_end_22b4887ce:;
		};
	};
	jule::Ptr<_24697d726_SymbolTable> _232713_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_246902865_setCurrentFile(_self_.ptr(), _232713_oldFile);
	});;
	if (((*((*(_self_))._field_file))._field_File != (*((*((*((*(_230339_s))))._field_Decl))._field_Token))._field_File)) {
		jule::Ptr<_24697d726_SymbolTable> _233117_file = _2468edd8e_findFile(&((*(_self_))._field_files), &((*((*((*((*(_230339_s))))._field_Decl))._field_Token))._field_File));;
		if ((_233117_file != nullptr)) {
			_246902865_setCurrentFile(_self_.ptr(), _233117_file);
		};
	};
	if (((*((*(_230339_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_2468a02b3_constraintChecker> _233817_cc = _246908508_constraintChecker(_self_);;
		(*(_233817_cc))._field_et=_230358_errorToken;
		(*(_233817_cc))._field_si=(*(_230339_s));
		(*(_233817_cc))._field_genericsA=_230413_tc._field_useGenerics;
		(*(_233817_cc))._field_uniq=true;
		if ((!(_2468a11e8_check(_233817_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_230339_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _235117_n = (*(_self_))._field_errors.len();;
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=jule::append(_230413_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_230339_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b491441:;
			if (it != expr_end) {
				jule::Ptr<_246922555_Var> _235325_v = *it;
				{
					_24691547c_checkVarDecl(_self_, &(_235325_v), jule::Trait<_2469d41b6_Lookup>(_self_, 3));
					_246919085_checkVar(_self_, &(_235325_v), jule::Trait<_2469d41b6_Lookup>(_self_, 3));
					__jule_func_result=((((*(_self_))._field_errors.len() - _235117_n) == 0LL) && __jule_func_result);
				}
				_iter_next_22b491441:;
				++it;
				goto _iter_begin_22b491441;
			}
			_iter_end_22b491441:;
		};
		(*((*(_self_))._field_files[0LL]))._field_TypeAliases=(*((*(_self_))._field_files[0LL]))._field_TypeAliases.slice(_230413_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_2469857b6_Eval> _236413_eval = _24690a230_eval(_self_, jule::Trait<_2469d41b6_Lookup>(_self_, 3));;
	(*((*(_230339_s))))._field_Comparable=(!((*((*((*(_230339_s))))._field_Decl))._field_Binded));
	{
		auto expr = &((*((*(_230339_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b494a3d:;
		if (it != expr_end) {
			jule::Ptr<_246853101_FieldIns> _236621_f = *it;
			{
				jule::Ptr<_2469b43d8_TypeKind> _236717_kind = _2469cdbd8_checkDecl(&_230413_tc, &((*((*((*(_236621_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_236717_kind != nullptr) && __jule_func_result);
				if ((_236717_kind == nullptr)) {
					if (((_self_ != (*((*((*(_230339_s))))._field_Decl))._field_sema) && ((*((*((*((*(_230339_s))))._field_Decl))._field_sema))._field_errors.len() > 0LL))) {
						((*(_self_))._field_errors).append((*((*((*((*(_230339_s))))._field_Decl))._field_sema))._field_errors);;
						(*((*((*((*(_230339_s))))._field_Decl))._field_sema))._field_errors=nullptr;
					};
					goto _iter_next_22b494a3d;
				};
				(*(_236621_f))._field_Kind=_236717_kind;
				(*((*(_230339_s))))._field_Mutable=((*((*(_230339_s))))._field_Mutable || ((!((*((*(_236621_f))._field_Decl))._field_Mutable)) && _2469b5c7a_Mutable((*(_236621_f))._field_Kind.ptr())));
				(*((*(_230339_s))))._field_Comparable=((*((*(_230339_s))))._field_Comparable && _2469b59e4_Comparable((*(_236621_f))._field_Kind.ptr()));
				if (((*((*(_236621_f))._field_Decl))._field_Default == nullptr)) {
					goto _iter_next_22b494a3d;
				};
				(*(_236413_eval))._field_prefix=(*(_236621_f))._field_Kind;
				(*(_236413_eval))._field_field=_236621_f;
				(*(_236621_f))._field_Default=_2469a3a26_evalExpr(_236413_eval, (*((*(_236621_f))._field_Decl))._field_Default);
				if (((*(_236621_f))._field_Default == nullptr)) {
					goto _iter_next_22b494a3d;
				};
				;
				_24690a791_checkAssignType(_self_, false, &((*(_236621_f))._field_Kind), &((*(_236621_f))._field_Default), (*((*((*(_236621_f))._field_Decl))._field_Default))._field_Token);
			}
			_iter_next_22b494a3d:;
			++it;
			goto _iter_begin_22b494a3d;
		}
		_iter_end_22b494a3d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _24691a790_precheckStructIns(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _240042_s, jule::Ptr<_246819d43_Token> _240061_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_24691a394_checkStructEnv(_self_, _240042_s, _240061_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_240042_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4a0032:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _240521_f = *it;
			{
				if (((*(_240521_f))._field_Generics.len() == 0LL)) {
					if ((_24691967e_readyToCheckFn(_self_, _240042_s, &(_240521_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_22b4a0032:;
			++it;
			goto _iter_begin_22b4a0032;
		}
		_iter_end_22b4a0032:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _24691aa48_checkStructIns(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns>* _241539_s) {
	{
		auto expr = &((*((*(_241539_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4a0917:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _241621_f = *it;
			{
				_2469199e2_checkTypeMethod(_self_, _241539_s, &(_241621_f));
			}
			_iter_next_22b4a0917:;
			++it;
			goto _iter_begin_22b4a0917;
		}
		_iter_end_22b4a0917:;
	};
}



inline void _24691ad01_checkTypeStruct(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _242140_s) {
	if ((*((*(_242140_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_242140_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_242140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4a29a2:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _243421_ins = *it;
			{
				_24691aa48_checkStructIns(_self_, &(_243421_ins));
			}
			_iter_next_22b4a29a2:;
			++it;
			goto _iter_begin_22b4a29a2;
		}
		_iter_end_22b4a29a2:;
	};
}



inline void _24691aeee_checkStructTypes(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4a3d7c:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _244021_s = *it;
			{
				_24691ad01_checkTypeStruct(_self_, &(_244021_s));
			}
			_iter_next_22b4a3d7c:;
			++it;
			goto _iter_begin_22b4a3d7c;
		}
		_iter_end_22b4a3d7c:;
	};
}



inline void _24691b2a7_checkStructInsOperators(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246853ba1_StructIns> _244547_s) {
	{
		auto expr = &((*(_244547_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4a53cd:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _244621_m = *it;
			{
				{
					auto &_match_expr{ (*(_244621_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_22b4a6368:;
						{
							(*(_244547_s))._field_Operators._field_Eq=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469243ae_Eq);
							(*(_244547_s))._field_Comparable=((*(_244547_s))._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_22b4a63e0:;
						{
							(*(_244547_s))._field_Operators._field_Gt=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246924678_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_22b4a6467:;
						{
							(*(_244547_s))._field_Operators._field_GtEq=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246924942_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_22b4a64de:;
						{
							(*(_244547_s))._field_Operators._field_Lt=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246924c0b_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_22b4a6566:;
						{
							(*(_244547_s))._field_Operators._field_LtEq=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246924ec5_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_22b4a65dd:;
						{
							(*(_244547_s))._field_Operators._field_Shl=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246925613_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_22b4a6665:;
						{
							(*(_244547_s))._field_Operators._field_Shr=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469258cc_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_22b4a66dc:;
						{
							(*(_244547_s))._field_Operators._field_Add=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246925b96_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_22b4a6764:;
						{
							(*(_244547_s))._field_Operators._field_Sub=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246925e60_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_22b4a67db:;
						{
							(*(_244547_s))._field_Operators._field_Div=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246926229_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_22b4a6863:;
						{
							(*(_244547_s))._field_Operators._field_Mul=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469264e3_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_22b4a68da:;
						{
							(*(_244547_s))._field_Operators._field_Mod=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469267ac_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_22b4a6962:;
						{
							(*(_244547_s))._field_Operators._field_BitAnd=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246926a76_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_22b4a69d9:;
						{
							(*(_244547_s))._field_Operators._field_BitOr=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246926d40_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_22b4a6a61:;
						{
							(*(_244547_s))._field_Operators._field_BitXor=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246927109_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_22b4a6ad8:;
						{
							(*(_244547_s))._field_Operators._field_Neg=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246927747_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_22b4a6b60:;
						{
							(*(_244547_s))._field_Operators._field_Pos=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246927a11_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_22b4a6bd7:;
						{
							(*(_244547_s))._field_Operators._field_BitNot=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246927cca_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_22b4a6c5e:;
						{
							(*(_244547_s))._field_Operators._field_AddAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246928418_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_22b4a6cd6:;
						{
							(*(_244547_s))._field_Operators._field_SubAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469286d2_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_22b4a6d5d:;
						{
							(*(_244547_s))._field_Operators._field_DivAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__24692899b_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_22b4a6dd5:;
						{
							(*(_244547_s))._field_Operators._field_MulAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246928c65_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_22b4a6e5c:;
						{
							(*(_244547_s))._field_Operators._field_ModAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__24692902e_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_22b4a6ed4:;
						{
							(*(_244547_s))._field_Operators._field_ShlAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469292e8_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_22b4a705b:;
						{
							(*(_244547_s))._field_Operators._field_ShrAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__2469295b2_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_22b4a70d3:;
						{
							(*(_244547_s))._field_Operators._field_BitOrAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__24692987b_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_22b4a715a:;
						{
							(*(_244547_s))._field_Operators._field_BitAndAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246929b45_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_22b4a71d2:;
						{
							(*(_244547_s))._field_Operators._field_BitXorAssign=_246919e98_checkStructInsOp(_self_, &(_244547_s), &(_244621_m), static__246929e0e_BitXorAssign);
						}
					}
					_match_end_22b4a60c1:;
				};
			}
			_iter_next_22b4a53cd:;
			++it;
			goto _iter_begin_22b4a53cd;
		}
		_iter_end_22b4a53cd:;
	};
}



inline void _24691b560_precheckStructType(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246850e23_Struct>* _250943_s) {
	if ((*((*(_250943_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_250943_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_250943_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_246853ba1_StructIns> _252017_ins = _246851385_instance((*(_250943_s)));;
		(*(_252017_ins))._field_Checked=true;
		_246851693_appendInstance((*(_250943_s)).ptr(), &(_252017_ins));
		_24691a790_precheckStructIns(_self_, &(_252017_ins), nullptr);
	};
	_24691b2a7_checkStructInsOperators(_self_, (*((*(_250943_s))))._field_Instances[0LL]);
}



inline void _24691b75d_precheckStructTypes(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4bcdda:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _253021_s = *it;
			{
				_24691b560_precheckStructType(_self_, &(_253021_s));
			}
			_iter_next_22b4bcdda:;
			++it;
			goto _iter_begin_22b4bcdda;
		}
		_iter_end_22b4bcdda:;
	};
}



inline void _24691ba16_checkRets(_246900148_Sema* _self_, jule::Ptr<_246868c1b_FnIns>* _253533_f) {
	if (_24686628a_IsVoid((*((*(_253533_f))))._field_Decl.ptr())) {
		return;;
	};
	_24691de8b_missingRetChecker _25399_mrc = static__24691e354_new();;
	jule::Bool _25409_ok = _246920476_check(&_25399_mrc, (*((*(_253533_f))))._field_Scope);;
	if ((!(_25409_ok))) {
		_246902c83_pushErr(_self_, (*((*((*(_253533_f))))._field_Decl))._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _24691bd79_checkFnInsSc(_246900148_Sema* _self_, jule::Ptr<_246868c1b_FnIns>* _254636_f, jule::Ptr<_2468aea64_scopeChecker>* _254652_sc) {
	_2468ed443_appendRetVars(&((*((*((*(_254652_sc))))._field_table))._field_Vars), _254636_f);
	_2468ed72e_appendParamVars(&((*((*((*(_254652_sc))))._field_table))._field_Vars), _254636_f);
	_2468eda1a_appendGenericTypeAliases(&((*((*((*(_254652_sc))))._field_table))._field_TypeAliases), _254636_f);
	_2468c1526_check((*(_254652_sc)), &((*((*((*(_254636_f))))._field_Decl))._field_Scope), &((*((*(_254636_f))))._field_Scope));
	if ((!(_2468b2638_stopped((*(_254652_sc)).ptr())))) {
		_24691ba16_checkRets(_self_, _254636_f);
	};
}



inline void _24691c1dc_checkFnInsCaller(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns>* _255941_f, jule::Ptr<_246819d43_Token> _255956_caller) {
	if ((*((*((*(_255941_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_24697d726_SymbolTable> _256413_old = (*((*((*((*(_255941_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_246902865_setCurrentFile((*((*((*(_255941_f))))._field_Decl))._field_sema.ptr(), _256413_old);
	});;
	jule::Ptr<_24697d726_SymbolTable> _256613_file = _2468edd8e_findFile(&((*((*((*((*(_255941_f))))._field_Decl))._field_sema))._field_files), &((*((*((*((*(_255941_f))))._field_Decl))._field_Token))._field_File));;
	if ((_256613_file != nullptr)) {
		_246902865_setCurrentFile((*((*((*(_255941_f))))._field_Decl))._field_sema.ptr(), _256613_file);
	};
	jule::Ptr<_2468aea64_scopeChecker> _257113_sc = _2468a4905_newScopeChecker(&((*((*((*(_255941_f))))._field_Decl))._field_sema), (*(_255941_f)));;
	(*(_257113_sc))._field_calledFrom=_255956_caller;
	_24691bd79_checkFnInsSc(_self_.ptr(), _255941_f, &(_257113_sc));
	if (((*((*((*(_255941_f))))._field_Decl))._field_sema != _self_)) {
		((*(_self_))._field_errors).append((*((*((*((*(_255941_f))))._field_Decl))._field_sema))._field_errors);;
		(*((*((*((*(_255941_f))))._field_Decl))._field_sema))._field_errors=nullptr;
	};
}



inline void _24691c495_checkFnIns(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246868c1b_FnIns>* _258135_f) {
	_24691c1dc_checkFnInsCaller(_self_, _258135_f, nullptr);
}



inline void _24691c74d_checkFunc(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _258534_f) {
	if ((*((*(_258534_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_258534_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_258534_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4ca436:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _259521_ins = *it;
			{
				_24691c495_checkFnIns(_self_, &(_259521_ins));
			}
			_iter_next_22b4ca436:;
			++it;
			goto _iter_begin_22b4ca436;
		}
		_iter_end_22b4ca436:;
	};
}



inline void _24691ca06_checkTestFn(_246900148_Sema* _self_, jule::Ptr<_246868c1b_FnIns>* _260035_f) {
	if ((*((*((*(_260035_f))))._field_Decl))._field_Public) {
		_246902c83_pushErr(_self_, (*((*((*(_260035_f))))._field_Decl))._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_260035_f))))._field_Decl))._field_Unsafety || (!(_24686628a_IsVoid((*((*(_260035_f))))._field_Decl.ptr())))) || ((*((*((*(_260035_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_260035_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_260035_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_260035_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_246902c83_pushErr(_self_, (*((*((*(_260035_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2469c0c85_Sptr> _261813_sptr = _2469b6cd1_Sptr((*((*((*(_260035_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_261813_sptr == nullptr)) {
		_246902c83_pushErr(_self_, (*((*((*(_260035_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246853ba1_StructIns> _26259_s = _2469b80bd_Struct((*(_261813_sptr))._field_Elem.ptr());;
	if (((_26259_s == nullptr) || (!(_2468ce0d3_isStdPackage(&((*((*((*((*(_26259_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_246902c83_pushErr(_self_, (*((*((*(_260035_f))))._field_Decl))._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_2469030e6_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _24691ccae_precheckFunc(jule::Ptr<_246900148_Sema> _self_, jule::Ptr<_246865d17_Fn>* _263337_f) {
	if ((*((*(_263337_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_263337_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263337_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_246868c1b_FnIns> _264417_ins = _2468672e1_instanceForce((*(_263337_f)));;
		{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*((*(_263337_f))))._field_Instances; __jule_push_dest.push(_264417_ins); };
		jule::Bool _264613_ok = _24690cd8c_reloadFnInsTypes(_self_, _264417_ins);;
		(*(_264417_ins))._field_reloaded=true;
		if ((_264613_ok && _2469d02a0_hasDirective(&((*((*(_263337_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_24691ca06_checkTestFn(_self_.ptr(), &(_264417_ins));
		};
	};
}



inline void _24691ceac_precheckFuncs(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4d87b8:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _265721_decl = *it;
			{
				{
					auto expr = &((*(_265721_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b4d9401:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _265825_m = *it;
						{
							_24691ccae_precheckFunc(_self_, &(_265825_m));
						}
						_iter_next_22b4d9401:;
						++it;
						goto _iter_begin_22b4d9401;
					}
					_iter_end_22b4d9401:;
				};
			}
			_iter_next_22b4d87b8:;
			++it;
			goto _iter_begin_22b4d87b8;
		}
		_iter_end_22b4d87b8:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4d9d91:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _266221_decl = *it;
			{
				_24691ccae_precheckFunc(_self_, &(_266221_decl));
			}
			_iter_next_22b4d9d91:;
			++it;
			goto _iter_begin_22b4d9d91;
		}
		_iter_end_22b4d9d91:;
	};
}



inline void _24691d1aa_checkFuncs(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4da666:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _266921_decl = *it;
			{
				_24691c74d_checkFunc(_self_, &(_266921_decl));
			}
			_iter_next_22b4da666:;
			++it;
			goto _iter_begin_22b4da666;
		}
		_iter_end_22b4da666:;
	};
}



inline void _24691d3a8_checkPackageTypes(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4db568:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _267721_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _267721_f);
				_246919283_checkGlobals(_self_);
				_24691ceac_precheckFuncs(_self_);
				_24691b75d_precheckStructTypes(_self_);
			}
			_iter_next_22b4db568:;
			++it;
			goto _iter_begin_22b4db568;
		}
		_iter_end_22b4db568:;
	};
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4dd36c:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _268821_f = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _268821_f);
				_24691d1aa_checkFuncs(_self_);
				_24691aeee_checkStructTypes(_self_);
			}
			_iter_next_22b4dd36c:;
			++it;
			goto _iter_begin_22b4dd36c;
		}
		_iter_end_22b4dd36c:;
	};
}



inline void _24691d5a6_setFileSemaFields(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4ddd40:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _269621_f = *it;
			{
				(*(_269621_f))._field_sema=_self_;
			}
			_iter_next_22b4ddd40:;
			++it;
			goto _iter_begin_22b4ddd40;
		}
		_iter_end_22b4ddd40:;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4e056c:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _269921_st = *it;
			{
				(*(_269921_st))._field_sema=_self_;
			}
			_iter_next_22b4e056c:;
			++it;
			goto _iter_begin_22b4e056c;
		}
		_iter_end_22b4e056c:;
	};
}



inline void _24691d7a4_setSemaFields(jule::Ptr<_246900148_Sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4e1095:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _270521_file = *it;
			{
				_246902865_setCurrentFile(_self_.ptr(), _270521_file);
				_24691d5a6_setFileSemaFields(_self_);
			}
			_iter_next_22b4e1095:;
			++it;
			goto _iter_begin_22b4e1095;
		}
		_iter_end_22b4e1095:;
	};
}



inline void _24691da5c_check(jule::Ptr<_246900148_Sema> _self_, jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _271130_files) {
	(*(_self_))._field_files=(*(_271130_files));
	_246906704_checkImports(_self_.ptr());
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_24691d7a4_setSemaFields(_self_);
	_2469071e9_checkInherits(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_246906b00_implImpls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_246906ced_checkEnums(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_246918293_checkPackageDecls(_self_);
	if (((*(_self_))._field_errors.len() != 0LL)) {
		return;;
	};
	_24691d3a8_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _246900148_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _24691de8b_missingRetChecker static__24691e354_new(void) {
	return _24691de8b_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _24691e662_checkConditional(_24691de8b_missingRetChecker* _self_, jule::Ptr<_2468a8398_Conditional> _275935_c) {
	{
		auto expr = &((*(_275935_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4e64da:;
		if (it != expr_end) {
			jule::Ptr<_2468a7b7d_If> _276021_elif = *it;
			{
				if ((_276021_elif == nullptr)) {
					return false;;
				};
				if ((!(_246920135_checkScope(_self_, (*(_276021_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_22b4e64da:;
			++it;
			goto _iter_begin_22b4e64da;
		}
		_iter_end_22b4e64da:;
	};
	return (((*(_275935_c))._field_Default != nullptr) && _246920135_checkScope(_self_, (*((*(_275935_c))._field_Default))._field_Scope));;
}



inline jule::Bool _24691e9a3_checkMatch(_24691de8b_missingRetChecker* _self_, jule::Ptr<_2468ab896_Match> _277129_m) {
	{
		auto expr = &((*(_277129_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b4e7a80:;
		if (it != expr_end) {
			jule::Ptr<_2468ac4ce_Case> _277221_c = *it;
			{
				if ((_277221_c == nullptr)) {
					return false;;
				};
				jule::I64 _277613_n = (*(_self_))._field_breaked.len();;
				jule::Bool _277713_ok = _246920135_checkScope(_self_, (*(_277221_c))._field_Scope);;
				{
					
					if ((_277613_n != (*(_self_))._field_breaked.len())) {
						_case_begin_22b4ea5ee:;
						{
							return false;;
						}
					}
					else if ((!(_277713_ok))) {
						_case_begin_22b4ea676:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_22b4ea6ed;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_22b4ea6ed:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_277221_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_22b4e7a80;
						}
					}
					_match_end_22b4ea533:;
				};
			}
			_iter_next_22b4e7a80:;
			++it;
			goto _iter_begin_22b4e7a80;
		}
		_iter_end_22b4e7a80:;
	};
	return (((*(_277129_m))._field_Default != nullptr) && _246920135_checkScope(_self_, (*((*(_277129_m))._field_Default))._field_Scope));;
}



inline jule::Bool _24691ece4_checkInfIter(_24691de8b_missingRetChecker* _self_, jule::Ptr<_2468a8695_InfIter> _279731_it) {
	jule::I64 _27989_n = (*(_self_))._field_breaked.len();;
	if (_246920135_checkScope(_self_, (*(_279731_it))._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27989_n);
		return true;;
	};
	if ((_27989_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _280413_itaddr = static_cast<jule::Uintptr>(_279731_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_27989_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_22b4ee16e:;
			if (it != expr_end) {
				jule::Uintptr _280520_addr = *it;
				{
					if ((_280413_itaddr == _280520_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27989_n);
						return false;;
					};
				}
				_iter_next_22b4ee16e:;
				++it;
				goto _iter_begin_22b4ee16e;
			}
			_iter_end_22b4ee16e:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _27989_n);
	};
	return true;;
}



inline jule::Bool _246920135_checkScope(_24691de8b_missingRetChecker* _self_, jule::Ptr<_2468a7760_Scope> _281629_s) {
	if ((_281629_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_281629_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5006e2:;
		if (it != expr_end) {
			jule::Any _282021_st = *it;
			{
				{
					auto &_match_expr{ _282021_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_22b501506:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_22b50156c:;
						{
							jule::Uintptr _282617_addr = (*(_282021_st.cast_ptr<_2468a9d06_BreakSt>(&__jule_any_type49)))._field_It;;
							if ((_282617_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_282617_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_22b5015d3:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_22b50165a:;
						{
							if (_24691ece4_checkInfIter(_self_, _282021_st.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_22b5016d2:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_22b501759:;
						{
							if (_246920135_checkScope(_self_, _282021_st.cast_ptr<_2468a7760_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_22b5017d1:;
						{
							{
								auto &_match_expr{ (*(_282021_st.cast_ptr<_246983ac2_Data>(&__jule_any_type24)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type23) {
									_case_begin_22b505175:;
									{
										return true;;
									}
								}
								_match_end_22b5050dc:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_22b501858:;
						{
							if (_24691e662_checkConditional(_self_, _282021_st.cast_ptr<_2468a8398_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_22b5018d0:;
						{
							if (_24691e9a3_checkMatch(_self_, _282021_st.cast_ptr<_2468ab896_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_22b5013e6:;
				};
			}
			_iter_next_22b5006e2:;
			++it;
			goto _iter_begin_22b5006e2;
		}
		_iter_end_22b5006e2:;
	};
	return false;;
}



inline jule::Bool _246920476_check(_24691de8b_missingRetChecker* _self_, jule::Ptr<_2468a7760_Scope> _286224_s) {
	return _246920135_checkScope(_self_, _286224_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _24691de8b_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _24692139a_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2469228da_IsInitialized(_246922555_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _246922b71_IsTypeInferred(_246922555_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _246922e07_untypedConstant(_246922555_Var* _self_) {
	return (_246922b71_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _246922555_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__2469239a7_Dispose(jule::Ptr<_246865d17_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*(_1023_f))._field_Owner != nullptr)) && (*(_1023_f))._field_Ident.equal("Dispose", 7)) && (!((*(_1023_f))._field_Statically))) && (!((*(_1023_f))._field_Unsafety))) && _24686628a_IsVoid(_1023_f.ptr())) && ((*(_1023_f))._field_Generics.len() == 0LL)) && ((*(_1023_f))._field_Params.len() == 1LL)) && (*((*(_1023_f))._field_Params[0LL]))._field_Mutable) && (!(_246864be5_IsRef((*(_1023_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__246923c71_Str(jule::Ptr<_246865d17_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _24686628a_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _246864be5_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_2469bc259_Prim> _399_prim = _2469b6a4a_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _2469c06e1_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__2469240e5_logical(jule::Ptr<_246865d17_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _24686628a_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _246864be5_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_2469bc259_Prim> _649_prim = _2469b6a4a_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_2469c045a_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*(_6313_ins))._field_Owner == _2469b80bd_Struct((*((*(_6313_ins))._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__2469243ae_Eq(jule::Ptr<_246865d17_Fn> _7218_f) {
	return static__2469240e5_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__246924678_Gt(jule::Ptr<_246865d17_Fn> _7718_f) {
	return static__2469240e5_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__246924942_GtEq(jule::Ptr<_246865d17_Fn> _8220_f) {
	return static__2469240e5_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__246924c0b_Lt(jule::Ptr<_246865d17_Fn> _8718_f) {
	return static__2469240e5_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__246924ec5_LtEq(jule::Ptr<_246865d17_Fn> _9220_f) {
	return static__2469240e5_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__246925349_result(jule::Ptr<_246865d17_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _24686628a_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _246864be5_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_2469b80bd_Struct((*(_11313_ins))._field_Result.ptr()) == (*(_11313_ins))._field_Owner);;
}



inline jule::Bool static__246925613_Shl(jule::Ptr<_246865d17_Fn> _11819_f) {
	return static__246925349_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__2469258cc_Shr(jule::Ptr<_246865d17_Fn> _12319_f) {
	return static__246925349_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__246925b96_Add(jule::Ptr<_246865d17_Fn> _12819_f) {
	return static__246925349_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__246925e60_Sub(jule::Ptr<_246865d17_Fn> _13319_f) {
	return static__246925349_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__246926229_Div(jule::Ptr<_246865d17_Fn> _13819_f) {
	return static__246925349_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__2469264e3_Mul(jule::Ptr<_246865d17_Fn> _14319_f) {
	return static__246925349_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__2469267ac_Mod(jule::Ptr<_246865d17_Fn> _14819_f) {
	return static__246925349_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__246926a76_BitAnd(jule::Ptr<_246865d17_Fn> _15322_f) {
	return static__246925349_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__246926d40_BitOr(jule::Ptr<_246865d17_Fn> _15821_f) {
	return static__246925349_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__246927109_BitXor(jule::Ptr<_246865d17_Fn> _16322_f) {
	return static__246925349_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__24692747d_unary(jule::Ptr<_246865d17_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _24686628a_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _246864be5_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_2469b80bd_Struct((*(_18213_ins))._field_Result.ptr()) == (*(_18213_ins))._field_Owner);;
}



inline jule::Bool static__246927747_Neg(jule::Ptr<_246865d17_Fn> _18719_f) {
	return static__24692747d_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__246927a11_Pos(jule::Ptr<_246865d17_Fn> _19219_f) {
	return static__24692747d_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__246927cca_BitNot(jule::Ptr<_246865d17_Fn> _19722_f) {
	return static__24692747d_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__24692814e_assign(jule::Ptr<_246865d17_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_24686628a_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _246864be5_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__246928418_AddAssign(jule::Ptr<_246865d17_Fn> _22125_f) {
	return static__24692814e_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__2469286d2_SubAssign(jule::Ptr<_246865d17_Fn> _22625_f) {
	return static__24692814e_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__24692899b_DivAssign(jule::Ptr<_246865d17_Fn> _23125_f) {
	return static__24692814e_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__246928c65_MulAssign(jule::Ptr<_246865d17_Fn> _23625_f) {
	return static__24692814e_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__24692902e_ModAssign(jule::Ptr<_246865d17_Fn> _24125_f) {
	return static__24692814e_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__2469292e8_ShlAssign(jule::Ptr<_246865d17_Fn> _24625_f) {
	return static__24692814e_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__2469295b2_ShrAssign(jule::Ptr<_246865d17_Fn> _25125_f) {
	return static__24692814e_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__24692987b_BitOrAssign(jule::Ptr<_246865d17_Fn> _25627_f) {
	return static__24692814e_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__246929b45_BitAndAssign(jule::Ptr<_246865d17_Fn> _26128_f) {
	return static__24692814e_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__246929e0e_BitXorAssign(jule::Ptr<_246865d17_Fn> _26628_f) {
	return static__24692814e_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _246923369_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _24696ac52_pushErr(_24696a757_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _24696aed8_checkTrait(_24696a757_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2469b54c7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2468790e4_Trait> _12713_trt = _2469b8354_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_2469b6cd1_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_22b545319:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_2469b6cd1_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_2469b80bd_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_22b545391;
			}
		}
		else if ((_2469b80bd_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_22b545391:;
			{
				jule::Ptr<_246853ba1_StructIns> _13813_s = _2469b80bd_Struct((*(_self_))._field_src.ptr());;
				if ((!(_246852562_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _246969327_traitHasReferenceReceiver(&(_12713_trt)))) {
					_24696ac52_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469b8354_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_22b545418:;
			{
				jule::Ptr<_2468790e4_Trait> _14817_base = _2469b8354_Trait((*(_self_))._field_src.ptr());;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_22b549b04:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b549ede:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b54a94b:;
								if (it != expr_end) {
									jule::Ptr<_246850e23_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_22b549ede;
										};
									}
									_iter_next_22b54a94b:;
									++it;
									goto _iter_begin_22b54a94b;
								}
								_iter_end_22b54a94b:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_22b549ede:;
						++it;
						goto _iter_begin_22b549ede;
					}
					_iter_end_22b549ede:;
				};
				{
					auto expr = &((*(_12713_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b549c9c:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_246865d17_Fn> _16221_m2 = _246879c93_FindMethod(_14817_base.ptr(), (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_246868c1b_FnIns> _16617_m1k = _24690b93a_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_246868c1b_FnIns> _16717_m2k = _24690b93a_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_246869b84_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_22b549c9c:;
						++it;
						goto _iter_begin_22b549c9c;
					}
					_iter_end_22b549c9c:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b54525e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_22b545209:;
	};
}



inline jule::Bool _24696b26e_checkPtr(_24696a757_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2469b54c7_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c454c_Ptr> _18213_dest = _2469b7067_Ptr((*(_self_))._field_dest.ptr());;
	if (_2469c5086_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _2469b4ae2_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _24696b505_checkPrim(_24696a757_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_2469bc259_Prim> _19113_prim = _2469b6a4a_Prim((*(_self_))._field_dest.ptr());;
		if (((_19113_prim != nullptr) && _2469c0977_IsAny(_19113_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _2469b4ae2_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _24696b901_typeEnum(_24696a757_typeCompatibilityChecker* _self_, jule::Ptr<_24687d00a_TypeEnum>* _19928_e, jule::Ptr<_2469b43d8_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b55258a:;
		if (it != expr_end) {
			jule::Ptr<_24687c933_TypeEnumItem> _20021_item = *it;
			{
				if (_2469b4ae2_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_24687d00a_TypeEnum> _20417_ke = _2469b7584_TypeEnum((*((*(_20021_item))._field_Kind))._field_Kind.ptr());;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_22b55258a;
				};
				if (_24696b901_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_22b55258a:;
			++it;
			goto _iter_begin_22b55258a;
		}
		_iter_end_22b55258a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _24696bb87_checkTypeEnum(_24696a757_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_2469b4ae2_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_24687d00a_TypeEnum> _21913_e = _2469b7584_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _24696b901_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _24696be1d_check(_24696a757_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_2469b7067_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _24696b26e_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_2469b6297_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_2469b54c7_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_2469b6a4a_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_22b557c99:;
			{
				__jule_func_result = _24696b505_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_2469b7584_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_22b55735e:;
			{
				__jule_func_result = _24696bb87_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_2469b8354_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_22b5573c5:;
			{
				__jule_func_result = _24696aed8_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b5572e8:;
			{
				__jule_func_result = _2469b4ae2_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_22b556a67:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _24696a757_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _24696c99b_pushErr(_24696c506_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _24696cc32_checkValidity(_24696c506_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_2469b7d37_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b55a7d5:;
			{
				jule::Ptr<_246868c1b_FnIns> _26313_f = _2469b7d37_Fn((*((*(_self_))._field_d))._field_Kind.ptr());;
				{
					
					if (_24686a1a1_IsBuiltin(_26313_f.ptr())) {
						_case_begin_22b55be8a:;
						{
							_24696c99b_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_22b55c012:;
						{
							_24696c99b_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _246866521_IsMethod((*(_26313_f))._field_Decl.ptr()))) {
						_case_begin_22b55c089:;
						{
							_24696c99b_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_26313_f))._field_Generics.len() == 0LL))) {
						_case_begin_22b55c111:;
						{
							_24696c99b_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_22b55bdbe:;
				};
			}
		}
		else if ((_2469b8871_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b55a85c:;
			{
				_24696c99b_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_22b55a72a:;
	};
	return _26013_valid;;
}



inline jule::Bool _24696ceb8_checkConst(_24696c506_assignTypeChecker* _self_) {
	if (((((!(_246984496_IsConst((*(_self_))._field_d.ptr()))) || (_2469b6a4a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) == nullptr)) || (!(_2445e30c4_IsNum((*(_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*((*(_self_))._field_d))._field_Model, (*((*(_self_))._field_d))._field_Constant))) {
		return false;;
	};
	jule::Str _3009_kind = (*(_2469b6a4a_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_2445e2d0a_IsFloat(_3009_kind)) {
			_case_begin_22b564a97:;
			{
				if ((!(_2469696ac_floatAssignable(&(_3009_kind), &((*(_self_))._field_d))))) {
					_24696c99b_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3009_kind;
			}
		}
		else if (_2445e29b9_IsInt(_3009_kind)) {
			_case_begin_22b564b1e:;
			{
				if ((!(_24696a26d_intAssignable(_3009_kind, &((*(_self_))._field_d))))) {
					_24696c99b_pushErr(_self_, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3009_kind;
			}
		}
		else {
			_case_begin_22b5649ed:;
			{
				return false;;
			}
		}
		_match_end_22b564998:;
	};
	return true;;
}



inline jule::Bool _24696d24e_isPrim(_24696c506_assignTypeChecker* _self_) {
	if (((*((*(_self_))._field_dest))._field_Variadic || (*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)) {
		return false;;
	};
	if ((_2469b5241_Binded((*(_self_))._field_dest.ptr()) || _2469b5241_Binded((*((*(_self_))._field_d))._field_Kind.ptr()))) {
		return false;;
	};
	return ((_2469b6a4a_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _24696d4d5_checkCompatibility(_24696c506_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_22b569c12:;
			{
				return false;;
			}
		}
		else if ((!(_24696cc32_checkValidity(_self_)))) {
			_case_begin_22b569c89:;
			{
				return false;;
			}
		}
		else if (_24696ceb8_checkConst(_self_)) {
			_case_begin_22b569d11:;
			{
				return true;;
			}
		}
		else if ((_2469b72ed_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b569d88:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _34417_dkind = (*(_self_))._field_dest;;
				if ((_2469b72ed_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34417_dkind=(*((*(_2469b72ed_Enum((*(_self_))._field_dest.ptr())))._field_Kind))._field_Kind;
				} else if ((_2469b6a4a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_22b569ad0;
				};
				if (_2445de631_TypesAreCompatible((*(_2469b6a4a_Prim((*((*(_2469b72ed_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr())))._field_Kind, (*(_2469b6a4a_Prim(_34417_dkind.ptr())))._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_24696d24e_isPrim(_self_)) {
			_case_begin_22b569e10:;
			{
				jule::Ptr<_2469bc259_Prim> _35413_dest = _2469b6a4a_Prim((*(_self_))._field_dest.ptr());;
				if (_2469c0977_IsAny(_35413_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_2469bc259_Prim> _35817_src = _2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_2445de631_TypesAreCompatible((*(_35413_dest))._field_Kind, (*(_35817_src))._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_22b569ad0:;
	};
	return _24690ac47_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*((*(_self_))._field_d))._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _24696d76b_check(_24696c506_assignTypeChecker* _self_) {
	jule::Bool _3679_ok = _24696d4d5_checkCompatibility(_self_);;
	if ((_3679_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_2469d1b53_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _3679_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _24696c506_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22b584985_annotateConstraintElem(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _38749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_22b58614b:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _39021_elem = nullptr;;
				{
					
{
						_case_begin_22b586b74:;
						{
							_39021_elem=(*(_2469b781a_Arr((*(_38749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_22b58705e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_2468325db_ArrTypeDecl>(&__jule_any_type69)))._field_Elem;
				return _24697087d_annotateConstraint(_self_, &(_39021_elem));;
			}
		}
		_match_end_22b5860e6:;
	};
	return false;;
}

inline jule::Bool _22b5842e2_annotateConstraintElem(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _38749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_22b589aab:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _39021_elem = nullptr;;
				{
					
{
						_case_begin_22b58a79e:;
						{
							_39021_elem=(*(_2469b7aa1_Slc((*(_38749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_22b58a9be:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_246831750_SlcTypeDecl>(&__jule_any_type70)))._field_Elem;
				return _24697087d_annotateConstraint(_self_, &(_39021_elem));;
			}
		}
		_match_end_22b589a56:;
	};
	return false;;
}

inline jule::Bool _22b58648c_annotateConstraintElem(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _38749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_22b58d51b:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _39021_elem = nullptr;;
				{
					
{
						_case_begin_22b58e484:;
						{
							_39021_elem=(*(_2469b7067_Ptr((*(_38749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_22b58e42e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_246831d49_PtrTypeDecl>(&__jule_any_type71)))._field_Elem;
				return _24697087d_annotateConstraint(_self_, &(_39021_elem));;
			}
		}
		_match_end_22b58d4b6:;
	};
	return false;;
}

inline jule::Bool _22b58ca59_annotateConstraintElem(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _38749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_22b591b5c:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _39021_elem = nullptr;;
				{
					
{
						_case_begin_22b592b3b:;
						{
							_39021_elem=(*(_2469b6cd1_Sptr((*(_38749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_22b592a70:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.cast_ptr<_2468313ba_SptrTypeDecl>(&__jule_any_type72)))._field_Elem;
				return _24697087d_annotateConstraint(_self_, &(_39021_elem));;
			}
		}
		_match_end_22b591b07:;
	};
	return false;;
}



inline jule::Bool _24696ea69_annotateConstraintMap(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _40745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_22b5738ec:;
			{
				jule::Ptr<_2469c2dec_Map> _41017_m = _2469b85da_Map((*(_40745_k)).ptr());;
				jule::Ptr<_246832d39_MapTypeDecl> _41117_m2 = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_246832d39_MapTypeDecl>(&__jule_any_type73);;
				(*(_self_))._field_c=(*(_41117_m2))._field_Key;
				if ((!(_24697087d_annotateConstraint(_self_, &((*(_41017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*(_41117_m2))._field_Val;
				__jule_func_result = _24697087d_annotateConstraint(_self_, &((*(_41017_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_22b573897:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _24696edaa_annotateConstraintTup(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _42245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_22b5764d2:;
			{
				jule::Ptr<_246831a4c_TupleTypeDecl> _42517_tup = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_246831a4c_TupleTypeDecl>(&__jule_any_type74);;
				jule::Ptr<_2469c234c_Tuple> _42617_tup2 = _2469b8871_Tup((*(_42245_k)).ptr());;
				{
					auto expr = &((*(_42617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b577736:;
					if (it != expr_end) {
						jule::Ptr<_2469b43d8_TypeKind> _42725_t2 = *it;
						{
							{
								auto expr = &((*(_42517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b57726e:;
								if (it != expr_end) {
									jule::Ptr<_246830320_TypeDecl> _42829_t = *it;
									{
										(*(_self_))._field_c=_42829_t;
										if (_24697087d_annotateConstraint(_self_, &(_42725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_22b57726e:;
									++it;
									goto _iter_begin_22b57726e;
								}
								_iter_end_22b57726e:;
							};
						}
						_iter_next_22b577736:;
						++it;
						goto _iter_begin_22b577736;
					}
					_iter_end_22b577736:;
				};
			}
		}
		_match_end_22b57647c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _2469701eb_annotateConstraintFn(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _43944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_22b57898a:;
			{
				jule::Ptr<_246841ed0_FnDecl> _44217_pf = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_246841ed0_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_246868c1b_FnIns> _44317_f = _2469b7d37_Fn((*(_43944_k)).ptr());;
				{
					auto expr = &((*(_44317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b57a34e:;
					if (it != expr_end) {
						jule::I64 _44418_i = it - expr->begin();
						jule::Ptr<_246867c70_ParamIns> _44425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_44217_pf))._field_Params[_44418_i]))._field_Kind;
							if (_24697087d_annotateConstraint(_self_, &((*(_44425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_22b57a34e:;
						++it;
						_44418_i++;
						goto _iter_begin_22b57a34e;
					}
					_iter_end_22b57a34e:;
				};
				if (((*(_44217_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*((*(_44217_pf))._field_Result))._field_Kind;
					if (_24697087d_annotateConstraint(_self_, &((*(_44317_f))._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_22b578935:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _24697053c_annotateConstraintIdent(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _46047_k) {
	jule::Ptr<_24683092a_IdentTypeDecl> _46113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_24683092a_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_246853ba1_StructIns> _46213_s = _2469b80bd_Struct((*(_46047_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b57d6d7:;
		if (it != expr_end) {
			jule::I64 _46313_i = it - expr->begin();
			jule::Ptr<_24683c52a_GenericDecl> _46316_g = *it;
			{
				if (((*(_46316_g))._field_Ident == (*(_46113_ident))._field_Ident)) {
					jule::Ptr<_2469b2a02_InsGeneric> _46521_fg = (*((*(_self_))._field_f))._field_Generics[_46313_i];;
					if ((_46521_fg != nullptr)) {
						return false;;
					};
					_246970be1_pushGeneric(_self_, _46047_k, _46313_i);
					return true;;
				};
				if ((_46213_s == nullptr)) {
					goto _iter_next_22b57d6d7;
				};
				jule::Ptr<_246830320_TypeDecl> _47517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_46113_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b57e63e:;
					if (it != expr_end) {
						jule::Ptr<_246830320_TypeDecl> _47625_ig = *it;
						{
							(*(_self_))._field_c=_47625_ig;
							{
								auto expr = &((*(_46213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b581cd4:;
								if (it != expr_end) {
									jule::Ptr<_2469b2a02_InsGeneric> _47829_sg = *it;
									{
										if (_24697087d_annotateConstraint(_self_, &((*(_47829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_22b581cd4:;
									++it;
									goto _iter_begin_22b581cd4;
								}
								_iter_end_22b581cd4:;
							};
						}
						_iter_next_22b57e63e:;
						++it;
						goto _iter_begin_22b57e63e;
					}
					_iter_end_22b57e63e:;
				};
				(*(_self_))._field_c=_47517_c;
			}
			_iter_next_22b57d6d7:;
			++it;
			_46313_i++;
			goto _iter_begin_22b57d6d7;
		}
		_iter_end_22b57d6d7:;
	};
	return false;;
}



inline jule::Bool _24697087d_annotateConstraint(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _48942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_22b5819c6:;
			{
				return _24697053c_annotateConstraintIdent(_self_, _48942_k);;
			}
		}
		_match_end_22b581971:;
	};
	{
		
		if ((_2469b781a_Arr((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b5831c0:;
			{
				return _22b584985_annotateConstraintElem(_self_, _48942_k);;
			}
		}
		else if ((_2469b7aa1_Slc((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b583247:;
			{
				return _22b5842e2_annotateConstraintElem(_self_, _48942_k);;
			}
		}
		else if ((_2469b7067_Ptr((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b5832be:;
			{
				return _22b58648c_annotateConstraintElem(_self_, _48942_k);;
			}
		}
		else if ((_2469b6cd1_Sptr((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b5839c8:;
			{
				return _22b58ca59_annotateConstraintElem(_self_, _48942_k);;
			}
		}
		else if ((_2469b85da_Map((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b583a3e:;
			{
				return _24696ea69_annotateConstraintMap(_self_, _48942_k);;
			}
		}
		else if ((_2469b7d37_Fn((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b583aa5:;
			{
				return _2469701eb_annotateConstraintFn(_self_, _48942_k);;
			}
		}
		else if ((_2469b8871_Tup((*(_48942_k)).ptr()) != nullptr)) {
			_case_begin_22b583b1b:;
			{
				return _24696edaa_annotateConstraintTup(_self_, _48942_k);;
			}
		}
		else {
			_case_begin_22b5835aa:;
			{
				return false;;
			}
		}
		_match_end_22b583555:;
	};
}



inline void _246970be1_pushGeneric(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _51435_k, jule::I64 _51449_i) {
	(*((*(_self_))._field_f))._field_Generics[_51449_i]=jule::new_ptr<_2469b2a02_InsGeneric>(_2469b2a02_InsGeneric{._field_Kind=(*(_51435_k)), });
	jule::Ptr<_24683c52a_GenericDecl> _51613_gd = (*((*((*(_self_))._field_f))._field_Decl))._field_Generics[_51449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b595a1d:;
		if (it != expr_end) {
			jule::Ptr<_2469b43d8_TypeKind> _51721_ignored = *it;
			{
				if (((*(_51613_gd))._field_Ident == _2469b47a1_Str(_51721_ignored.ptr()))) {
					(*(_51721_ignored))._field_Kind=(*((*(_51435_k))))._field_Kind;
				};
			}
			_iter_next_22b595a1d:;
			++it;
			goto _iter_begin_22b595a1d;
		}
		_iter_end_22b595a1d:;
	};
	if ((((*(_51613_gd))._field_Constraint == nullptr) || ((*((*(_51613_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_51613_gd))._field_Constraint))._field_Mask[0LL];
	_24697087d_annotateConstraint(_self_, _51435_k);
}



inline jule::Bool _246971032_annotatePrim(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _52943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _246973056_annotateAny(_self_, _52943_k);
	return __jule_func_result;;
}



inline jule::Bool _246971373_annotateArr(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _53342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469c3a79_Arr> _53413_parr = _2469b781a_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c3a79_Arr> _53813_arr = _2469b781a_Arr((*(_53342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_53413_parr))._field_Elem));
	__jule_func_result = _246973397_annotateKind(_self_, &((*(_53813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2469716b4_annotateSlc(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _54342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469c1758_Slc> _54413_pslc = _2469b7aa1_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c1758_Slc> _54813_slc = _2469b7aa1_Slc((*(_54342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_54413_pslc))._field_Elem));
	__jule_func_result = _246973397_annotateKind(_self_, &((*(_54813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _246971ab0_checkMapKey(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _55341_k, jule::Ptr<_2469b43d8_TypeKind>* _55361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469b43d8_TypeKind>* _55413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55341_k;
	__jule_func_result=_246973397_annotateKind(_self_, _55361_ck);
	(*(_self_))._field_k=_55413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _246971e01_annotateMap(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _56142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469c2dec_Map> _56213_pmap = _2469b85da_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c2dec_Map> _56613_m = _2469b85da_Map((*(_56142_k)).ptr());;
	__jule_func_result = (_246971ab0_checkMapKey(_self_, (&((*(_56213_pmap))._field_Key)), &((*(_56613_m))._field_Key)) && _246971ab0_checkMapKey(_self_, (&((*(_56213_pmap))._field_Val)), &((*(_56613_m))._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _246972242_annotateFn(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _57141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_246868c1b_FnIns> _57213_pf = _2469b7d37_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_246868c1b_FnIns> _57613_f = _2469b7d37_Fn((*(_57141_k)).ptr());;
	{
		
		if (((*(_57213_pf))._field_Params.len() != (*(_57613_f))._field_Params.len())) {
			_case_begin_22b5a24ec:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_24686628a_IsVoid((*(_57213_pf))._field_Decl.ptr()) != _24686628a_IsVoid((*(_57613_f))._field_Decl.ptr()))) {
			_case_begin_22b5a2574:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_22b5a2486:;
	};
	__jule_func_result=true;
	jule::Ptr<_2469b43d8_TypeKind>* _58513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_57613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5a3be6:;
		if (it != expr_end) {
			jule::I64 _58614_i = it - expr->begin();
			jule::Ptr<_246867c70_ParamIns> _58621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_57213_pf))._field_Params[_58614_i]))._field_Kind));
				__jule_func_result=(_246973397_annotateKind(_self_, &((*(_58621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_22b5a3be6:;
			++it;
			_58614_i++;
			goto _iter_begin_22b5a3be6;
		}
		_iter_end_22b5a3be6:;
	};
	if ((!(_24686628a_IsVoid((*(_57213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_57213_pf))._field_Result));
		__jule_func_result=(_246973397_annotateKind(_self_, &((*(_57613_f))._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _246972583_annotatePtr(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _60042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469c454c_Ptr> _60113_pptr = _2469b7067_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c454c_Ptr> _60513_ptr = _2469b7067_Ptr((*(_60042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_60113_pptr))._field_Elem));
	__jule_func_result = _246973397_annotateKind(_self_, &((*(_60513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _2469728c4_annotateSptr(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _61043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469c0c85_Sptr> _61113_ssptr = _2469b6cd1_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_2469c0c85_Sptr> _61513_sptr = _2469b6cd1_Sptr((*(_61043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_61113_ssptr))._field_Elem));
	__jule_func_result = _246973397_annotateKind(_self_, &((*(_61513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _246972c15_annotateStruct(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _62045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_246853ba1_StructIns> _62113_s = _2469b80bd_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_246853ba1_StructIns> _62513_s2 = _2469b80bd_Struct((*(_62045_k)).ptr());;
	if (((*(_62113_s))._field_Generics.len() != (*(_62513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_62113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5ac392:;
		if (it != expr_end) {
			jule::I64 _62914_i = it - expr->begin();
			jule::Ptr<_2469b2a02_InsGeneric> _62921_g = *it;
			{
				jule::Ptr<_2469b2a02_InsGeneric> _63017_g2 = (*(_62513_s2))._field_Generics[_62914_i];;
				if (_2469b4ae2_Equal((*(_62921_g))._field_Kind, (*(_63017_g2))._field_Kind)) {
					goto _iter_next_22b5ac392;
				};
				(*(_self_))._field_k=(&((*(_62921_g))._field_Kind));
				if ((!(_246973397_annotateKind(_self_, &((*(_63017_g2))._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b5ac392:;
			++it;
			_62914_i++;
			goto _iter_begin_22b5ac392;
		}
		_iter_end_22b5ac392:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _246973056_annotateAny(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _64242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6439_kind = _2469b47a1_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5b06e7:;
		if (it != expr_end) {
			jule::I64 _64413_i = it - expr->begin();
			jule::Ptr<_24683c52a_GenericDecl> _64416_g = *it;
			{
				if ((_6439_kind != (*(_64416_g))._field_Ident)) {
					goto _iter_next_22b5b06e7;
				};
				jule::Ptr<_2469b2a02_InsGeneric> _64813_t = (*((*(_self_))._field_f))._field_Generics[_64413_i];;
				{
					
					if ((_64813_t == nullptr) || ((*(_64813_t))._field_Kind == nullptr)) {
						_case_begin_22b5b23db:;
						{
							_246970be1_pushGeneric(_self_, _64242_k, _64413_i);
						}
					}
					else if ((!(_2469b4ae2_Equal((*(_64813_t))._field_Kind, (*(_64242_k)))))) {
						_case_begin_22b5b2463:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_22b5b22ba:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_64242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_22b5b06e7:;
			++it;
			_64413_i++;
			goto _iter_begin_22b5b06e7;
		}
		_iter_end_22b5b06e7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _246973397_annotateKind(_24696e173_dynamicTypeAnnotation* _self_, jule::Ptr<_2469b43d8_TypeKind>* _66343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_246973056_annotateAny(_self_, _66343_k)) {
			_case_begin_22b5b49c6:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469b6a4a_Prim((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4a4d:;
			{
				__jule_func_result = _246971032_annotatePrim(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b781a_Arr((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4cb2:;
			{
				__jule_func_result = _246971373_annotateArr(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b7aa1_Slc((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4d28:;
			{
				__jule_func_result = _2469716b4_annotateSlc(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b85da_Map((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4d8e:;
			{
				__jule_func_result = _246971e01_annotateMap(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b7d37_Fn((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4e16:;
			{
				__jule_func_result = _246972242_annotateFn(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b7067_Ptr((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b4e8d:;
			{
				__jule_func_result = _246972583_annotatePtr(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b6cd1_Sptr((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b509d:;
			{
				__jule_func_result = _2469728c4_annotateSptr(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else if ((_2469b80bd_Struct((*(_66343_k)).ptr()) != nullptr)) {
			_case_begin_22b5b5114:;
			{
				__jule_func_result = _246972c15_annotateStruct(_self_, _66343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b5b48a5:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_22b5b4410:;
	};
}



inline jule::Bool _24697362d_annotate(_24696e173_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _246973397_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _24696e173_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _246974574_pushErrToken(_246973ed0_fnCallArgChecker* _self_, jule::Ptr<_246819d43_Token> _70831_token, jule::Str _70846_fmt, jule::Slice<jule::Any> _70859_args) {
	_246902c83_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _70831_token, _70846_fmt, _70859_args);
}



inline void _2469748d7_pushErr(_246973ed0_fnCallArgChecker* _self_, jule::Str _71226_fmt, jule::Slice<jule::Any> _71239_args) {
	_246974574_pushErrToken(_self_, (*(_self_))._field_errorToken, _71226_fmt, _71239_args);
}



inline jule::Slice<jule::Ptr<_246867c70_ParamIns>> _246974b6d_getParams(_246973ed0_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _24686495e_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl.ptr()))) {
		return (*((*(_self_))._field_f))._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _246974e7b_checkCounts(_246973ed0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_246867c70_ParamIns>>* _72531_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72613_n = (*(_72531_params)).len();;
	if (((_72613_n > 0LL) && _24686495e_IsSelf((*((*(_72531_params))[0LL]))._field_Decl.ptr()))) {
		(_72613_n)--;
	};
	jule::I64 _73113_diff = (_72613_n - (*(_self_))._field_args.len());;
	jule::Str _73213_log = jule::Str();;
	{
		
		if ((_73113_diff == 0LL)) {
			_case_begin_22b5c14a5:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72613_n > 0LL) && (*((*((*(_72531_params))[(_72613_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_22b5c13c8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73113_diff < 0LL) || (_73113_diff > (*(_72531_params)).len()))) {
			_case_begin_22b5c1098:;
			{
				_73213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_22b5c1032:;
			{
				_73213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_22b5c0ebb:;
	};
	_2433b0c50_StrBuilder _74313_err = static__2433b1019_New(32LL);;
	_2433b982a_WriteStr(&_74313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2433b982a_WriteStr(&_74313_err, jule::Str::lit("\n       wanted (", 16));
	{
		auto expr = _72531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5c33b9:;
		if (it != expr_end) {
			jule::I64 _74613_i = it - expr->begin();
			jule::Ptr<_246867c70_ParamIns> *_74616_p = it;
			{
				_2433b982a_WriteStr(&_74313_err, _2469b47a1_Str((*((*(_74616_p))))._field_Kind.ptr()));
				if ((((*(_72531_params)).len() - _74613_i) > 1LL)) {
					_2433b982a_WriteStr(&_74313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_22b5c33b9:;
			++it;
			_74613_i++;
			goto _iter_begin_22b5c33b9;
		}
		_iter_end_22b5c33b9:;
	};
	_2433b9ad3_WriteByte(&_74313_err, ')');
	_2469748d7_pushErr(_self_, _73213_log, jule::Slice<jule::Any>::make({jule::Any(_2433ba122_Str(&_74313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _246975432_checkArg(_246973ed0_fnCallArgChecker* _self_, jule::Ptr<_246867c70_ParamIns>* _75732_p, jule::Ptr<_246983ac2_Data>* _75751_arg, jule::Ptr<_246819d43_Token>* _75768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _24686aee8_parameterUsesGenerics(_75732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_75732_p))))._field_Decl))._field_Variadic)) && _24697c824_isGoodValueToInfer(_75751_arg));
		if (__jule_func_result) {
			_24696e173_dynamicTypeAnnotation _76221_dta = _24696e173_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75732_p)), ._field_a=(*(_75751_arg)), ._field_errorToken=(*(_75768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_24697362d_annotate(&_76221_dta);
		};
		if ((!(__jule_func_result))) {
			_246974574_pushErrToken(_self_, (*(_75768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_24690dca0_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_75732_p))))._field_Decl))._field_Mutable, (*((*((*(_75732_p))))._field_Decl))._field_Reference, &((*((*(_75732_p))))._field_Kind), _75751_arg, _75768_errorToken)) {
		_24690a791_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*((*(_75732_p))))._field_Decl))._field_Reference, &((*((*(_75732_p))))._field_Kind), _75751_arg, (*(_75768_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _24697582d_push(_246973ed0_fnCallArgChecker* _self_, jule::Ptr<_246867c70_ParamIns>* _78628_p, jule::Ptr<_246834654_Expr> _78646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_2469b43d8_TypeKind> _78713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7889_oldImmut = (*((*(_self_))._field_e))._field_immutable;;
	(*((*(_self_))._field_e))._field_immutable=(!((*((*((*(_78628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*((*((*(_78628_p))))._field_Decl))._field_Variadic)))) {
		(*((*(_self_))._field_e))._field_prefix=(*((*(_78628_p))))._field_Kind;
	} else {
		(*((*(_self_))._field_e))._field_prefix=nullptr;
	};
	jule::Ptr<_246983ac2_Data> _79613_d = _2469a3a26_evalExpr((*(_self_))._field_e, _78646_arg);;
	(*((*(_self_))._field_e))._field_prefix=_78713_old;
	(*((*(_self_))._field_e))._field_immutable=_7889_oldImmut;
	if ((_79613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_246975432_checkArg(_self_, _78628_p, &(_79613_d), &((*(_78646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_79613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _246975c29_pushVariadic(_246973ed0_fnCallArgChecker* _self_, jule::Ptr<_246867c70_ParamIns>* _81036_p, jule::I64 _81054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81213_variadiced = false;;
	jule::Bool _8139_more = ((_81054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_24685a45a_SliceExprModel> _81413_model = jule::new_ptr<_24685a45a_SliceExprModel>(_24685a45a_SliceExprModel{._field_ElemKind=(*((*(_81036_p))))._field_Kind, });;
	jule::Ptr<_2469b43d8_TypeKind> _81813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8239_variadic = (*((*((*(_81036_p))))._field_Kind))._field_Variadic;;
	(*((*((*(_81036_p))))._field_Kind))._field_Variadic=false;
	__JULE_DEFER({
		(*((*((*(_81036_p))))._field_Kind))._field_Variadic=_8239_variadic;
	});;
	for (; (_81054_i < (*(_self_))._field_args.len()); (_81054_i)++) {
		{
			jule::Ptr<_246834654_Expr> _83017_arg = (*(_self_))._field_args[_81054_i];;
			{
				auto &_match_expr{ (*(_83017_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_22b5d4cc1:;
					{
						(*((*(_self_))._field_e))._field_prefix=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c1758_Slc>(_2469c1758_Slc{._field_Elem=(*((*(_81036_p))))._field_Kind}), 23)});
					}
				}
				else {
					_case_begin_22b5d4919:;
					{
						(*((*(_self_))._field_e))._field_prefix=(*((*(_81036_p))))._field_Kind;
					}
				}
				_match_end_22b5d48b4:;
			};
			jule::Ptr<_246983ac2_Data> _84317_d = _2469a3394_eval((*(_self_))._field_e, _83017_arg);;
			if ((_84317_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_22b5d31ed;
			};
			if ((*((*(_84317_d))._field_Kind))._field_Variadic) {
				_81213_variadiced=true;
				(*((*((*(_81036_p))))._field_Kind))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _246975432_checkArg(_self_, _81036_p, &(_84317_d), &((*(_83017_arg))._field_Token)));
				{
					auto &_match_expr{ (*(_84317_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_22b5d8357:;
						{
							_81413_model=(*(_84317_d))._field_Model.cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76);
							(*(_81413_model))._field_ElemKind=(*((*(_81036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_22b5d7e8e:;
						{
							_81413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_84317_d))._field_Model); };
						}
					}
					_match_end_22b5d7e39:;
				};
				(_81054_i)++;
				goto _iter_end_22b5d31ed;
			};
			__jule_func_result=(__jule_func_result && _246975432_checkArg(_self_, _81036_p, &(_84317_d), &((*(_83017_arg))._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81413_model))._field_Elems; __jule_push_dest.push((*(_84317_d))._field_Model); };
		}
	_iter_next_22b5d31ed:;
	}
	_iter_end_22b5d31ed:;;
	(*((*(_self_))._field_e))._field_prefix=_81813_old;
	if ((_81213_variadiced && _8139_more)) {
		_246974574_pushErrToken(_self_, (*((*(_self_))._field_args[_81054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _24697606a_checkArgs(_246973ed0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_246867c70_ParamIns>>* _88633_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8879_arg = (*((*(_self_))._field_e))._field_arg;;
	(*((*(_self_))._field_e))._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89113_i = 0LL;;
	if ((((*(_88633_params)).len() > 0LL) && _24686495e_IsSelf((*((*(_88633_params))[0LL]))._field_Decl.ptr()))) {
		(_89113_i)++;
	};
	_julec_label_22b5dce72:;
	while ((_89113_i < (*(_88633_params)).len())) {
		{
			jule::Ptr<_246867c70_ParamIns> _89817_p = (*(_88633_params))[_89113_i];;
			{
				
				if ((*((*(_89817_p))._field_Decl))._field_Variadic) {
					_case_begin_22b5e46e8:;
					{
						__jule_func_result=(_246975c29_pushVariadic(_self_, &(_89817_p), _89113_i) && __jule_func_result);
						goto _iter_end_22b5dd280;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89113_i)) {
					_case_begin_22b5e47d6:;
					{
						__jule_func_result=false;
						goto _iter_end_22b5dd280;
					}
				}
				else {
					_case_begin_22b5e4352:;
					{
						__jule_func_result=(_24697582d_push(_self_, &(_89817_p), (*(_self_))._field_args[_89113_i]) && __jule_func_result);
					}
				}
				_match_end_22b5e42db:;
			};
			(_89113_i)++;
		}
	_iter_next_22b5dd280:;
	}
	_iter_end_22b5dd280:;;
	(*((*(_self_))._field_e))._field_arg=_8879_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _246976301_checkDynamicTypeAnnotation(_246973ed0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b5e66b7:;
		if (it != expr_end) {
			jule::Ptr<_2469b2a02_InsGeneric> _91816_g = *it;
			{
				if ((_91816_g == nullptr)) {
					_2469748d7_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_22b5e66b7:;
			++it;
			goto _iter_begin_22b5e66b7;
		}
		_iter_end_22b5e66b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _246976587_check(_246973ed0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_246867c70_ParamIns>> _92813_params = _246974b6d_getParams(_self_);;
	__jule_func_result=_246974e7b_checkCounts(_self_, &(_92813_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_24697606a_checkArgs(_self_, &(_92813_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_246976301_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _246973ed0_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _246977467_pushErr(_246976e17_structLitChecker* _self_, jule::Ptr<_246819d43_Token> _96626_token, jule::Str _96641_fmt, jule::Slice<jule::Any> _96654_args) {
	_246985d16_pushErr((*(_self_))._field_e.ptr(), _96626_token, _96641_fmt, _96654_args);
}



inline void _2469777ca_pushSuggestion(_246976e17_structLitChecker* _self_, jule::Str _97133_fmt, jule::Slice<jule::Any> _97146_args) {
	_246986179_pushSuggestion((*(_self_))._field_e.ptr(), _97133_fmt, _97146_args);
}



inline void _246977be8_pushMatch(_246976e17_structLitChecker* _self_, jule::Ptr<_246853101_FieldIns>* _97533_f, jule::Ptr<_246983ac2_Data>* _97552_d, jule::Ptr<_246819d43_Token>* _97567_errorToken) {
	;
	jule::Bool _9819_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_97533_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_24690dca0_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9819_mutable, false, &((*((*(_97533_f))))._field_Kind), _97552_d, _97567_errorToken)) {
		_24690a791_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97533_f))))._field_Kind), _97552_d, (*(_97567_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_2468589a8_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_2468589a8_StructArgExprModel>(_2468589a8_StructArgExprModel{._field_Token=(*(_97567_errorToken)), ._field_Field=(*(_97533_f)), ._field_Expr=(*(_97552_d))})); };
}



inline void _24697805b_checkPair(_246976e17_structLitChecker* _self_, jule::Ptr<_246838d73_FieldExprPair>* _99433_pair, jule::Slice<jule::Ptr<_246834654_Expr>>* _99460_exprs) {
	jule::Ptr<_246853101_FieldIns> _99613_f = _246855059_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99433_pair))))._field_Field))._field_Kind);;
	if ((_99613_f == nullptr)) {
		_246977467_pushErr(_self_, (*((*(_99433_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99433_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_2469034e2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_99613_f))._field_Decl))._field_Public, (*((*(_99613_f))._field_Decl))._field_Token)))) {
		_246977467_pushErr(_self_, (*((*(_99433_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99433_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
		_2469777ca_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_22b60066b:;
	{
		auto expr = _99460_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b603163:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _100821_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100821_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_22b603b14:;
						{
							jule::Ptr<_246838d73_FieldExprPair> _101121_dpair = (*(_100821_expr))._field_Kind.cast_ptr<_246838d73_FieldExprPair>(&__jule_any_type77);;
							{
								
								if (((*(_99433_pair)) == _101121_dpair)) {
									_case_begin_22b604906:;
									{
										goto _iter_end_22b603163;
									}
								}
								else if (((*((*((*(_99433_pair))))._field_Field))._field_Kind == (*((*(_101121_dpair))._field_Field))._field_Kind)) {
									_case_begin_22b60497d:;
									{
										_246977467_pushErr(_self_, (*((*(_99433_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_99433_pair))))._field_Field))._field_Kind, &__jule_any_type4)}));
										goto _iter_end_22b603163;
									}
								}
								_match_end_22b60484b:;
							};
						}
					}
					_match_end_22b603aae:;
				};
			}
			_iter_next_22b603163:;
			++it;
			goto _iter_begin_22b603163;
		}
		_iter_end_22b603163:;
	};
	jule::Ptr<_2469b43d8_TypeKind> _102213_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_102213_prefix;
	});;
	(*((*(_self_))._field_e))._field_prefix=(*(_99613_f))._field_Kind;
	jule::Ptr<_246983ac2_Data> _102613_d = _2469a3a26_evalExpr((*(_self_))._field_e, (*((*(_99433_pair))))._field_Expr);;
	if ((_102613_d == nullptr)) {
		return;;
	};
	_246977be8_pushMatch(_self_, &(_99613_f), &(_102613_d), &((*((*(_99433_pair))))._field_Field));
}



inline jule::Bool _24697839c_readyExprs(_246976e17_structLitChecker* _self_, jule::Slice<jule::Ptr<_246834654_Expr>>* _103334_exprs) {
	jule::Bool _103413_ok = true;;
	{
		auto expr = _103334_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b60882d:;
		if (it != expr_end) {
			jule::I64 _103514_i = it - expr->begin();
			jule::Ptr<_246834654_Expr> _103521_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103521_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_22b6095a9:;
						{
							jule::Ptr<_24683a47e_KeyValPair> _103821_pair = (*(_103521_expr))._field_Kind.cast_ptr<_24683a47e_KeyValPair>(&__jule_any_type78);;
							{
								auto &_match_expr{ (*((*(_103821_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_22b60a236:;
									{
										goto _match_end_22b60a720;
									}
								}
								else {
									_case_begin_22b60a775:;
									{
										_246977467_pushErr(_self_, (*(_103821_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_103413_ok=false;
										goto _iter_next_22b60882d;
									}
								}
								_match_end_22b60a720:;
							};
							(*((*(_103334_exprs))[_103514_i]))._field_Kind=jule::Any(jule::new_ptr<_246838d73_FieldExprPair>(_246838d73_FieldExprPair{._field_Field=(*((*(_103821_pair))._field_Key))._field_Token, ._field_Expr=(*(_103821_pair))._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_22b609554:;
				};
			}
			_iter_next_22b60882d:;
			++it;
			_103514_i++;
			goto _iter_begin_22b60882d;
		}
		_iter_end_22b60882d:;
	};
	return _103413_ok;;
}



inline void _246978655_check(_246976e17_structLitChecker* _self_, jule::Slice<jule::Ptr<_246834654_Expr>>* _105729_exprs) {
	if (((*(_105729_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_24697839c_readyExprs(_self_, _105729_exprs)))) {
		return;;
	};
	jule::Bool _106413_paired = false;;
	{
		auto expr = _105729_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b609279:;
		if (it != expr_end) {
			jule::I64 _106514_i = it - expr->begin();
			jule::Ptr<_246834654_Expr> _106521_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106521_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_22b613a7a:;
						{
							jule::Ptr<_246838d73_FieldExprPair> _106821_pair = (*(_106521_expr))._field_Kind.cast_ptr<_246838d73_FieldExprPair>(&__jule_any_type77);;
							if (((_106514_i > 0LL) && (!(_106413_paired)))) {
								_246977467_pushErr(_self_, (*(_106821_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106413_paired=true;
							_24697805b_checkPair(_self_, &(_106821_pair), _105729_exprs);
						}
					}
					else {
						_case_begin_22b60da42:;
						{
							if (_106413_paired) {
								_246977467_pushErr(_self_, (*(_106521_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106514_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_246977467_pushErr(_self_, (*(_106521_expr))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_22b609279;
							};
							jule::Ptr<_246853101_FieldIns> _108321_field = (*((*(_self_))._field_s))._field_Fields[_106514_i];;
							if ((!(_2469034e2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_108321_field))._field_Decl))._field_Public, (*((*(_108321_field))._field_Decl))._field_Token)))) {
								_246977467_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_2469777ca_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_2469b43d8_TypeKind> _109121_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*((*(_self_))._field_e))._field_prefix=_109121_prefix;
							});;
							(*((*(_self_))._field_e))._field_prefix=(*(_108321_field))._field_Kind;
							jule::Ptr<_246983ac2_Data> _109521_d = _2469a3a26_evalExpr((*(_self_))._field_e, _106521_expr);;
							if ((_109521_d == nullptr)) {
								goto _iter_next_22b609279;
							};
							_246977be8_pushMatch(_self_, &(_108321_field), &(_109521_d), &((*(_106521_expr))._field_Token));
						}
					}
					_match_end_22b60d9dc:;
				};
			}
			_iter_next_22b609279:;
			++it;
			_106514_i++;
			goto _iter_begin_22b609279;
		}
		_iter_end_22b609279:;
	};
	if ((!(_106413_paired))) {
		jule::I64 _110613_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _110717_diff = (_110613_n - (*(_105729_exprs)).len());;
		{
			
			if ((_110717_diff <= 0LL)) {
				_case_begin_22b616231:;
				{
					return;;
				}
			}
			_match_end_22b6160cc:;
		};
		_2433b0c50_StrBuilder _111317_idents = static__2433b1019_New(32LL);;
		for (; (_110717_diff > 0LL); (_110717_diff)--) {
			{
				_2433b982a_WriteStr(&_111317_idents, jule::Str::lit(", ", 2));
				_2433b982a_WriteStr(&_111317_idents, (*((*((*((*(_self_))._field_s))._field_Fields[(_110613_n - _110717_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_22b616990:;
		}
		_iter_end_22b616990:;;
		_246977467_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_2433baac3_Buf(&_111317_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246976e17_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246922555_Var> _2469791d3_buildVar(_246978be9_rangeChecker* _self_, jule::Ptr<_2468430ad_VarDecl>* _113328_decl) {
	jule::Ptr<_246922555_Var> _113413_v = _246872373_buildVar((*(_113328_decl)));;
	return _113413_v;;
}



inline void _2469793d1_setSizeKey(_246978be9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b61b148:;
			{
				(*((*((*(_self_))._field_Kind))._field_KeyA))._field_IterRelation=jule::new_ptr<_24692139a_IterRelation>(_24692139a_IterRelation{._field_Range=(*((*(_self_))._field_d))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8)});
			}
		}
		_match_end_22b61b0e3:;
	};
}



inline void _2469797ee_checkRangeExprValidity(_246978be9_rangeChecker* _self_, jule::Ptr<_246983ac2_Data>* _116046_d, jule::Ptr<_246922555_Var>* _116057_key, jule::Ptr<_2469b43d8_TypeKind>* _116073_k) {
	jule::Bool _116113__mut = (*((*(_116057_key))))._field_Mutable;;
	if ((_116113__mut && (!(_2469b5c7a_Mutable((*(_116073_k)).ptr()))))) {
		_116113__mut=false;
	};
	_24690dca0_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _116113__mut, (*((*(_116057_key))))._field_Reference, &((*((*((*(_116057_key))))._field_Kind))._field_Kind), _116046_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _2469799ec_checkSlice(_246978be9_rangeChecker* _self_) {
	_2469793d1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2469c1758_Slc> _117913_slc = _2469b7aa1_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_117913_slc))._field_Elem});
	_2469797ee_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_117913_slc))._field_Elem));
}



inline void _246979bea_checkArray(_246978be9_rangeChecker* _self_) {
	_2469793d1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2469c3a79_Arr> _119213_arr = _2469b781a_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_119213_arr))._field_Elem});
	_2469797ee_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_119213_arr))._field_Elem));
}



inline void _246979de8_checkMapKeyA(_246978be9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2469c2dec_Map> _120413_m = _2469b85da_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*((*(_self_))._field_Kind))._field_KeyA))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_120413_m))._field_Key});
	jule::Ptr<_246983ac2_Data> _120813_d = jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d)));;
	(*(_120813_d))._field_Kind=(*(_120413_m))._field_Key;
	_2469797ee_checkRangeExprValidity(_self_, &(_120813_d), &((*((*(_self_))._field_Kind))._field_KeyA), &((*(_120413_m))._field_Key));
}



inline void _24697a0e6_checkMapKeyB(_246978be9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_2469c2dec_Map> _121913_m = _2469b85da_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_121913_m))._field_Val});
	jule::Ptr<_246983ac2_Data> _122313_d = jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d)));;
	(*(_122313_d))._field_Kind=(*(_121913_m))._field_Val;
	_2469797ee_checkRangeExprValidity(_self_, &(_122313_d), &((*((*(_self_))._field_Kind))._field_KeyB), &((*(_121913_m))._field_Val));
}



inline void _24697a2e4_checkMap(_246978be9_rangeChecker* _self_) {
	_246979de8_checkMapKeyA(_self_);
	_24697a0e6_checkMapKeyB(_self_);
}



inline void _24697a4e2_checkStr(_246978be9_rangeChecker* _self_) {
	_2469793d1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*((*(_self_))._field_Kind))._field_KeyB))._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _24697a6e0_checkComptime(_246978be9_rangeChecker* _self_) {
	_2469793d1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyA))._field_Mutable)) {
		_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyA))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*((*((*(_self_))._field_rang))._field_KeyB))._field_Mutable)) {
		_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*((*(_self_))._field_rang))._field_KeyB))._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident, &__jule_any_type4)}));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _24681c7a2_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_2469791d3_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _24697a976_checkComptimeRange(_246978be9_rangeChecker* _self_) {
	jule::Ptr<_246881162_comptimeRange> _125813_range = _2469b9de4_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_125813_range))._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_22b6385b6:;
			{
				_24697a6e0_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_22b638264:;
			{
				_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_22b63820e:;
	};
}



inline jule::Bool _24697ac0c_check(_246978be9_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_22b63b0ad:;
		}
		else if ((_2469b7aa1_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b63a244:;
			{
				_2469799ec_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_2469b781a_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b63a2aa:;
			{
				_246979bea_checkArray(_self_);
				return true;;
			}
		}
		else if ((_2469b85da_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b63a321:;
			{
				_24697a2e4_checkMap(_self_);
				return true;;
			}
		}
		else if ((_2469b9de4_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b63a387:;
			{
				return _24697a976_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_22b639b06:;
			{
				jule::Ptr<_2469bc259_Prim> _129013_prim = _2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_129013_prim != nullptr) && _2469c06e1_IsStr(_129013_prim.ptr()))) {
					_24697a4e2_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_22b639a4b:;
	};
	_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _246978be9_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _24697b878_prepareTypes(_24697b45a_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_246869e1a_Types((*(_self_))._field_f.ptr());
	};
}



inline void _24697bb31_prepareExprs(_24697b45a_retTypeChecker* _self_, jule::Ptr<_246834654_Expr>* _131836_e) {
	if (((*(_131836_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_131836_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_22b642119:;
			{
				(*(_self_))._field_exprs=(*((*((*(_131836_e))))._field_Kind.cast_ptr<_246835325_TupleExpr>(&__jule_any_type80)))._field_Expr;
			}
		}
		else {
			_case_begin_22b641c51:;
			{
				{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131836_e))); };
			}
		}
		_match_end_22b641beb:;
	};
}



inline void _24697bd2e_checkExprs(_24697b45a_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_246983ac2_Data>> _133413_datas = jule::Slice<jule::Ptr<_246983ac2_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_2469857b6_Eval> _133513_eval = _24690a230_eval((*((*(_self_))._field_sc))._field_s, jule::Trait<_2469d41b6_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b64257b:;
		if (it != expr_end) {
			jule::I64 _133614_i = it - expr->begin();
			jule::Ptr<_246834654_Expr> _133621_expr = *it;
			{
				if ((_133614_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_22b64257b;
				};
				jule::Ptr<_2469b43d8_TypeKind> _134117_t = (*(_self_))._field_types[_133614_i];;
				(*(_133513_eval))._field_prefix=_134117_t;
				jule::Ptr<_246983ac2_Data> _134417_d = _2469a3a26_evalExpr(_133513_eval, _133621_expr);;
				if ((_134417_d == nullptr)) {
					goto _iter_next_22b64257b;
				};
				{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = _133413_datas; __jule_push_dest.push(_134417_d); };
				if (((!((*(_134417_d))._field_Mutable)) && _2469b5c7a_Mutable((*(_134417_d))._field_Kind.ptr()))) {
					_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_24696c506_assignTypeChecker _135617_ac = _24696c506_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=_134117_t, ._field_d=_134417_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_24696d76b_check(&_135617_ac);
			}
			_iter_next_22b64257b:;
			++it;
			_133614_i++;
			goto _iter_begin_22b64257b;
		}
		_iter_end_22b64257b:;
	};
	if ((_133413_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_24685d79e_TupleExprModel>(_24685d79e_TupleExprModel{._field_Datas=_133413_datas}), &__jule_any_type81);
	} else if ((_133413_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_133413_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _24697c170_check(_24697b45a_retTypeChecker* _self_, jule::Ptr<_246834654_Expr>* _137529_e) {
	_24697b878_prepareTypes(_self_);
	_24697bb31_prepareExprs(_self_, _137529_e);
	jule::I64 _13799_n = (*(_self_))._field_exprs.len();;
	if (((_13799_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_24686705a_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
			_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_13799_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _24686628a_IsVoid((*((*(_self_))._field_f))._field_Decl.ptr()))) {
		_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_13799_n > (*(_self_))._field_types.len())) {
		_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_13799_n < (*(_self_))._field_types.len())) {
		_246902c83_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_24697bd2e_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _24697b45a_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _24697dc10_SelectPackage(_24697d726_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b650644:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_22b650644:;
			++it;
			goto _iter_begin_22b650644;
		}
		_iter_end_22b650644:;
	};
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _24697e10b_FindVar(_24697d726_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _246980ddd_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _24697e507_FindTypeAlias(_24697d726_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _246981394_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_246850e23_Struct> _24697e903_FindStruct(_24697d726_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b652d83:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*(_5421_s))._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_22b652d83:;
			++it;
			goto _iter_begin_22b652d83;
		}
		_iter_end_22b652d83:;
	};
	return nullptr;;
}



inline jule::Ptr<_246865d17_Fn> _24697ecee_FindFn(_24697d726_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b654417:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*(_6521_f))._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_22b654417:;
			++it;
			goto _iter_begin_22b654417;
		}
		_iter_end_22b654417:;
	};
	return nullptr;;
}



inline jule::Ptr<_2468790e4_Trait> _246980140_FindTrait(_24697d726_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b655737:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_22b655737:;
			++it;
			goto _iter_begin_22b655737;
		}
		_iter_end_22b655737:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687b800_Enum> _246980481_FindEnum(_24697d726_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b655e0d:;
		if (it != expr_end) {
			jule::Ptr<_24687b800_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_22b655e0d:;
			++it;
			goto _iter_begin_22b655e0d;
		}
		_iter_end_22b655e0d:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2469807c2_FindTypeEnum(_24697d726_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b656e0e:;
		if (it != expr_end) {
			jule::Ptr<_24687d00a_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_22b656e0e:;
			++it;
			goto _iter_begin_22b656e0e;
		}
		_iter_end_22b656e0e:;
	};
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _246980ddd_findVar(_24697d726_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_246922555_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*(_11221_v))._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_22b6595d7:;
		}
		_iter_end_22b6595d7:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b65962b:;
			if (it != expr_end) {
				jule::Ptr<_246922555_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*(_11825_v))._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_22b65962b:;
				++it;
				goto _iter_begin_22b65962b;
			}
			_iter_end_22b65962b:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _246981394_findTypeAlias(_24697d726_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_2469b35e6_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*(_13121_ta))._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_22b65c6a6:;
		}
		_iter_end_22b65c6a6:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b65c6ea:;
			if (it != expr_end) {
				jule::Ptr<_2469b35e6_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*(_13725_ta))._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_22b65c6ea:;
				++it;
				goto _iter_begin_22b65c6ea;
			}
			_iter_end_22b65c6ea:;
		};
	};
	return nullptr;;
}



inline jule::Any _246981790_defByIdent(_24697d726_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b65e07b:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*(_14921_v))._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_22b65e07b:;
			++it;
			goto _iter_begin_22b65e07b;
		}
		_iter_end_22b65e07b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b660940:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*(_15521_ta))._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type66);;
				};
			}
			_iter_next_22b660940:;
			++it;
			goto _iter_begin_22b660940;
		}
		_iter_end_22b660940:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b66180e:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*(_16121_s))._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type65);;
				};
			}
			_iter_next_22b66180e:;
			++it;
			goto _iter_begin_22b66180e;
		}
		_iter_end_22b66180e:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b66137a:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*(_16721_f))._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type64);;
				};
			}
			_iter_next_22b66137a:;
			++it;
			goto _iter_begin_22b66137a;
		}
		_iter_end_22b66137a:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b662e2b:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_22b662e2b:;
			++it;
			goto _iter_begin_22b662e2b;
		}
		_iter_end_22b662e2b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b662d4e:;
		if (it != expr_end) {
			jule::Ptr<_24687b800_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type67);;
				};
			}
			_iter_next_22b662d4e:;
			++it;
			goto _iter_begin_22b662d4e;
		}
		_iter_end_22b662d4e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b664ee9:;
		if (it != expr_end) {
			jule::Ptr<_24687d00a_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type68);;
				};
			}
			_iter_next_22b664ee9:;
			++it;
			goto _iter_begin_22b664ee9;
		}
		_iter_end_22b664ee9:;
	};
	return nullptr;;
}



inline jule::Bool _246981c46_isDuplicatedIdent(_24697d726_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b66647e:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20216_v))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_22b66647e:;
			++it;
			goto _iter_begin_22b66647e;
		}
		_iter_end_22b66647e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b6671a5:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*((*(_20816_ta))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_22b6671a5:;
			++it;
			goto _iter_begin_22b6671a5;
		}
		_iter_end_22b6671a5:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b6682e9:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*((*(_21416_s))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_22b6682e9:;
			++it;
			goto _iter_begin_22b6682e9;
		}
		_iter_end_22b6682e9:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b667e53:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*((*(_22016_f))))._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_22b667e53:;
			++it;
			goto _iter_begin_22b667e53;
		}
		_iter_end_22b667e53:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b669edd:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_22b669edd:;
			++it;
			goto _iter_begin_22b669edd;
		}
		_iter_end_22b669edd:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b669e11:;
		if (it != expr_end) {
			jule::Ptr<_24687b800_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_22b669e11:;
			++it;
			goto _iter_begin_22b669e11;
		}
		_iter_end_22b669e11:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b66c52e:;
		if (it != expr_end) {
			jule::Ptr<_24687d00a_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_22b66c52e:;
			++it;
			goto _iter_begin_22b66c52e;
		}
		_iter_end_22b66c52e:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _24697d726_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _246983e79_IsNil(_246983ac2_Data* _self_) {
	return _2469b54c7_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _246984210_IsVoid(_246983ac2_Data* _self_) {
	return _2469b575d_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _246984496_IsConst(_246983ac2_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _2469847d7_GoodOperand(_246983ac2_Data* _self_, jule::Ptr<_246983ac2_Data>* _10331_other) {
	if ((_2469b7584_TypeEnum((*((*(_10331_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_2469b6a4a_Prim((*((*(_10331_other))))._field_Kind.ptr()) == nullptr) || (!(_2469c0977_IsAny(_2469b6a4a_Prim((*((*(_10331_other))))._field_Kind.ptr()).ptr())))) && (_2469b8354_Trait((*((*(_10331_other))))._field_Kind.ptr()) == nullptr)) && (!(_2469b54c7_IsNil((*(_self_))._field_Kind.ptr()))));;
}





std::ostream &operator<<(std::ostream &_Stream, _246983ac2_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246984c16_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _246985d16_pushErr(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _13426_token, jule::Str _13441_fmt, jule::Slice<jule::Any> _13454_args) {
	_246902c83_pushErr((*(_self_))._field_s.ptr(), _13426_token, _13441_fmt, _13454_args);
}



inline void _246986179_pushSuggestion(_2469857b6_Eval* _self_, jule::Str _13933_fmt, jule::Slice<jule::Any> _13946_args) {
	_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), _13933_fmt, _13946_args);
}



inline void _246986377_allowBuiltin(_2469857b6_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _246986575_disallowBuiltin(_2469857b6_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _24698680b_isUnsafe(_2469857b6_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _246986a92_isGlobal(_2469857b6_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_22b6ae7d5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22b6aeb9d:;
			{
				return false;;
			}
		}
		_match_end_22b6aeb48:;
	};
}



inline jule::Bool _246986da0_applyNumericPrefix(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _16642_d) {
	if ((((((*(_16642_d)) == nullptr) || (!(_246984496_IsConst((*(_16642_d)).ptr())))) || (_2469b6a4a_Prim((*((*(_16642_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_2469bc259_Prim> _1739_prim = _2469b6a4a_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1739_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_2445e2d0a_IsFloat(_2469bc59a_Str(_1739_prim.ptr()))) {
			_case_begin_22b6b23ed:;
			{
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>((*((*(_self_))._field_prefix)));
				_2445e70d9_SetF64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2445e625e_AsF64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_2445e23e2_IsSigInt(_2469bc59a_Str(_1739_prim.ptr()))) {
			_case_begin_22b6b2464:;
			{
				if ((!(_246969a31_sigAssignable(_2469bc59a_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>((*((*(_self_))._field_prefix)));
				_2445e6517_SetI64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		else if (_2445e2700_IsUnsigInt(_2469bc59a_Str(_1739_prim.ptr()))) {
			_case_begin_22b6b24ca:;
			{
				if ((!(_246969de9_unsigAssignable(_2469bc59a_Str(_1739_prim.ptr()), _16642_d)))) {
					return false;;
				};
				(*((*(_16642_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>((*((*(_self_))._field_prefix)));
				_2445e67c0_SetU64((*((*(_16642_d))))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_16642_d))))._field_Constant.ptr())));
				(*((*((*(_16642_d))))._field_Constant))._field_Kind=(*(_1739_prim))._field_Kind;
			}
		}
		_match_end_22b6b2123:;
	};
	return true;;
}



inline jule::Ptr<_246983ac2_Data> _2469871e1_litStr(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr>* _20122_l) {
	jule::Str _20213_s = jule::Str();;
	if (_24681b262_IsRawStr((*((*(_20122_l))))._field_Value)) {
		_20213_s=_246967ca4_ToRawStr((*((*(_20122_l))))._field_Value);
	} else {
		_20213_s=_2469680e5_ToStr((*((*(_20122_l))))._field_Value);
	};
	jule::Ptr<_2445e359c_Const> _20813_constant = static__2445e4339_NewStr(_20213_s);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20813_constant, &__jule_any_type19), ._field_Constant=_20813_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246987532_litRune(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr>* _21823_l) {
	jule::I32 _2199_r = _2469679eb_ToRune((*((*(_21823_l))))._field_Value);;
	jule::Ptr<_246983ac2_Data> _22013_data = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2199_r)))});;
	jule::Bool _2249_isAscii = _24694a759_IsAscii(_2199_r);;
	if (_2249_isAscii) {
		(*(_22013_data))._field_Kind=_246b26d20_primU8;
	} else {
		(*(_22013_data))._field_Kind=_246b2678c_primI32;
	};
	(*(_22013_data))._field_Mutable=true;
	(*(_22013_data))._field_Model=jule::Any(jule::new_ptr<_2468623da_RuneExprModel>(_2468623da_RuneExprModel{._field_Code=_2199_r}), &__jule_any_type82);
	(*(_22013_data))._field_IsRune=true;
	(*(_22013_data))._field_untyped=true;
	return _22013_data;;
}



inline jule::Ptr<_246983ac2_Data> _246987873_litFloat(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr>* _23824_l) {
	jule::F64 _2399_f = ({
		auto except = _2445c841c_ParseFloat((*((*(_23824_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2445e359c_Const> _24013_constant = static__2445e4603_NewF64(_2399_f);;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_untyped=true, ._field_Kind=_246b27da9_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24013_constant, &__jule_any_type19), ._field_Constant=_24013_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246987bb4_litInt(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr>* _25026_l) {
	;
	jule::Str _25313_lit = (*((*(_25026_l))))._field_Value;;
	jule::I64 _25413_base = 0LL;;
	{
		
		if (_24339b774_HasPrefix(_25313_lit, jule::Str::lit("0x", 2))) {
			_case_begin_22b6c1088:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=16LLU;
			}
		}
		else if (_24339b774_HasPrefix(_25313_lit, jule::Str::lit("0b", 2))) {
			_case_begin_22b6c1176:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=2LLU;
			}
		}
		else if (_24339b774_HasPrefix(_25313_lit, jule::Str::lit("0o", 2))) {
			_case_begin_22b6c0c7a:;
			{
				(_25313_lit).mut_slice(2LL);;
				_25413_base=8LLU;
			}
		}
		else if (((_25313_lit[0LL] == '0') && (_25313_lit.len() > 1LL))) {
			_case_begin_22b6c0ce1:;
			{
				(_25313_lit).mut_slice(1LL);;
				_25413_base=8LLU;
			}
		}
		else {
			_case_begin_22b6c0c14:;
			{
				_25413_base=10LLU;
			}
		}
		_match_end_22b6c0bae:;
	};
	jule::Ptr<_246983ac2_Data> _27413_d = jule::new_ptr<_246983ac2_Data>();;
	jule::Bool _27613_ok = true;;
	jule::I64 _2779_sig = ({
		auto except = _2445c19cb_ParseInt(_25313_lit, _25413_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27613_ok=false;

			0LL;
		});
	});;
	if (_27613_ok) {
		(*(_27413_d))._field_Constant=static__2445e39dc_NewI64(_2779_sig);
		(*(_27413_d))._field_Kind=_246b25e40_primInt;
	} else {
		jule::U64 _28513_unsig = ({
			auto except = _2445c1525_ParseUint(_25313_lit, _25413_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_246985d16_pushErr(_self_, (*((*(_25026_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_246986179_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*(_27413_d))._field_Constant=static__2445e3ca6_NewU64(_28513_unsig);
		(*(_27413_d))._field_Kind=_246b25a66_primUint;
	};
	(*(_27413_d))._field_Model=jule::Any((*(_27413_d))._field_Constant, &__jule_any_type19);
	if ((!(_246986da0_applyNumericPrefix(_self_, &(_27413_d))))) {
		_2469aca30_fitBitsize(&(_27413_d));
	};
	(*(_27413_d))._field_Mutable=true;
	(*(_27413_d))._field_untyped=true;
	return _27413_d;;
}



inline jule::Ptr<_246983ac2_Data> _246988005_litNum(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr>* _30626_l) {
	{
		
		if (_24681be55_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_22b6c82d2:;
			{
				return _246987873_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_22b6c7b2d:;
			{
				return _246987bb4_litInt(_self_, _30626_l);;
			}
		}
		_match_end_22b6c7a84:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246988346_evalLit(_2469857b6_Eval* _self_, jule::Ptr<_2468356ee_LitExpr> _31526_lit) {
	{
		
		if (_24681ae98_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_22b6c8d71:;
			{
				return _2469871e1_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_24681b52b_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_22b6c8de8:;
			{
				return _246987532_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_24681c21e_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_22b6c8e70:;
			{
				return _246988005_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_22b6c8788:;
			{
				return nullptr;;
			}
		}
		_match_end_22b6c86bc:;
	};
}



inline jule::Any _246988687_findBuiltins(_2469857b6_Eval* _self_, jule::Str* _32832_ident) {
	if (_2468ec244_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_22b6cb1a3:;
				{
					jule::Any _33221_def = _2469ac7ee_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_2468c8bd2_ImportInfo>(1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_22b6cb219:;
				{
					jule::Any _33721_def = _2469ad558_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_246900148_Sema>(3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_22b6cb280:;
				{
					jule::Any _34221_def = _2469ad558_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_22b6cb14d:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _246b28629_findBuiltinDef(_32832_ident);;
}



inline jule::Any _246988a83_getDef(_2469857b6_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_246922555_Var> _36013_v = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d289b_FindVar((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_2469b35e6_TypeAlias> _36513_ta = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d2c97_FindTypeAlias((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type66);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_24687b800_Enum> _37117_enm = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d3c21_FindEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type67);;
		};
		jule::Ptr<_24687d00a_TypeEnum> _37617_tenm = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d4062_FindTypeEnum((*(_self_))._field_lookup, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_246865d17_Fn> _38213_f = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d358e_FindFn((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type64);;
	};
	jule::Ptr<_246850e23_Struct> _38713_s = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d3193_FindStruct((*(_self_))._field_lookup, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type65);;
	};
	return _246988687_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_24686bdd9_ReferenceStack> _246988d19_getOwnerRefers(_2469857b6_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22b6d3551:;
			{
				jule::Ptr<_2468aea64_scopeChecker> _39817_sc = _2468b2ddb_getHardRoot((*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_22b6d2e24:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*((*(_self_))._field_owner))._field_Scope == nullptr))) {
					return (*((*(_self_))._field_owner))._field_Refers;;
				};
			}
		}
		_match_end_22b6d2dbe:;
	};
	return nullptr;;
}



inline void _22b6e53a9_pushReference(_2469857b6_Eval* _self_, jule::Ptr<_246868c1b_FnIns>* _41040_ref) {
	jule::Ptr<_24686bdd9_ReferenceStack> _41113_refers = _246988d19_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_22b6e7521_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_24686cbcb_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _22b709104_pushReference(_2469857b6_Eval* _self_, jule::Ptr<_246922555_Var>* _41040_ref) {
	jule::Ptr<_24686bdd9_ReferenceStack> _41113_refers = _246988d19_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_22b70b205_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_24686cbcb_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _22b7b6436_pushReference(_2469857b6_Eval* _self_, jule::Ptr<_246853ba1_StructIns>* _41040_ref) {
	jule::Ptr<_24686bdd9_ReferenceStack> _41113_refers = _246988d19_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_22b7b859d_Exist(_41113_refers.ptr(), (*(_41040_ref))))))) {
		_24686cbcb_Push(_41113_refers.ptr(), jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_246983ac2_Data> _246989413__evalEnum(_2469857b6_Eval* _self_, jule::Ptr<_24687b800_Enum> _41728_enm) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_41728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_246983ac2_Data> _24698980e_evalEnum(_2469857b6_Eval* _self_, jule::Ptr<_24687b800_Enum> _42631_enm, jule::Ptr<_246819d43_Token> _42643_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*(_42631_enm))._field_Token)))) {
		_246985d16_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_42631_enm))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _246989413__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_246983ac2_Data> _246989b50__evalTypeEnum(_2469857b6_Eval* _self_, jule::Ptr<_24687d00a_TypeEnum> _43532_enm) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_43532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_246983ac2_Data> _24698a04b_evalTypeEnum(_2469857b6_Eval* _self_, jule::Ptr<_24687d00a_TypeEnum> _44435_enm, jule::Ptr<_246819d43_Token> _44451_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*(_44435_enm))._field_Token)))) {
		_246985d16_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_44435_enm))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _246989b50__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_246983ac2_Data> _24698a38c__evalStruct(_2469857b6_Eval* _self_, jule::Ptr<_246853ba1_StructIns> _45330_s) {
	jule::Ptr<_246983ac2_Data> _45413_d = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_45330_s, 0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*((*(_45330_s))._field_Decl))._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*((*(_45330_s))._field_Decl))._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_246983ac2_Data> _24698a788_evalStruct(_2469857b6_Eval* _self_, jule::Ptr<_246853ba1_StructIns> _46733_s, jule::Ptr<_246819d43_Token> _46748_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*((*(_46733_s))._field_Decl))._field_Token)))) {
		_246985d16_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_46733_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_24698ae3c_checkDeprecated(_self_, &((*((*(_46733_s))._field_Decl))._field_Directives), _46748_errorToken);
	return _24698a38c__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_246983ac2_Data> _24698aac9_evalFnIns(_2469857b6_Eval* _self_, jule::Ptr<_246868c1b_FnIns> _47728_f) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_47728_f, 1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _24698ae3c_checkDeprecated(_2469857b6_Eval* _self_, jule::Slice<jule::Ptr<_24682e73c_Directive>>* _48639_directives, jule::Ptr<_246819d43_Token> _48670_tok) {
	if (_24698680b_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_24682e73c_Directive> _4919_d = _2469ac436_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*(_4919_d))._field_Args.len() == 0LL)) {
			_246985d16_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_246985d16_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*(_4919_d))._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_246986179_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_246983ac2_Data> _24698b338_evalFn(_2469857b6_Eval* _self_, jule::Ptr<_246865d17_Fn> _50229_f, jule::Ptr<_246819d43_Token> _50237_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*(_50229_f))._field_Token)))) {
		_246985d16_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_50229_f))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_24698ae3c_checkDeprecated(_self_, &((*(_50229_f))._field_Directives), _50237_errorToken);
	jule::Ptr<_246868c1b_FnIns> _51113_ins = _246867577_instance(_50229_f);;
	_22b6e53a9_pushReference(_self_, &(_51113_ins));
	return _24698aac9_evalFnIns(_self_, _51113_ins);;
}



inline void _24698b756_pushIllegalCycleError(_2469857b6_Eval* _self_, jule::Ptr<_246922555_Var>* _51641_v1, jule::Ptr<_246922555_Var>* _51652_v2, _2433b0c50_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _24345ea79_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _2433baac3_Buf(_51667_message);;
	_2433b982a_WriteStr(_51667_message, _24339ae7c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2433b982a_WriteStr(_51667_message, _5189_refers_to);
	_2433b9ad3_WriteByte(_51667_message, '\n');
	_2433b9572_Write(_51667_message, _5199_buf);
}



inline jule::Bool _24698bb52_checkCrossCycle(_2469857b6_Eval* _self_, jule::Ptr<_246922555_Var>* _52635_v, _2433b0c50_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b6ea2d2:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_24698b756_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_24698bb52_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_24698b756_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_22b6ea2d2:;
			++it;
			goto _iter_begin_22b6ea2d2;
		}
		_iter_end_22b6ea2d2:;
	};
	return true;;
}



inline jule::Bool _24698c04d_checkIllegalCycles(_2469857b6_Eval* _self_, jule::Ptr<_246922555_Var>* _54342_v, jule::Ptr<_246819d43_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_246985d16_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2433b0c50_StrBuilder _55613_message = static__2433b1019_New(32LL);;
	if ((!(_24698bb52_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _2433ba122_Str(&_55613_message);;
		_2433ba320_Clear(&_55613_message);
		_24698b756_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_2433ba122_Str(&_55613_message);
		_246985d16_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_246983ac2_Data> _24698c449_evalVar(_2469857b6_Eval* _self_, jule::Ptr<_246922555_Var> _57130_v, jule::Ptr<_246819d43_Token> _57139_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*(_57130_v))._field_Token)))) {
		_246985d16_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_24698ae3c_checkDeprecated(_self_, &((*(_57130_v))._field_Directives), _57139_errorToken);
	if (((*(_57130_v))._field_Token == nullptr)) {
		goto _julec_label_22b711183;
	};
	(*(_57130_v))._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_22b704ae4:;
			{
				jule::Bool _59013_ok = _24698c04d_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_22b704b5a:;
			{
				if (((!((*(_57130_v))._field_Reference)) || _24698680b_isUnsafe(_self_))) {
					goto _match_end_22b704a8e;
				};
				jule::Ptr<_2468aea64_scopeChecker> _59817_s = (*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0);;
				while ((((*(_59817_s))._field_owner == nullptr) && ((*(_59817_s))._field_parent != nullptr))) {
					{
						_59817_s=(*(_59817_s))._field_parent;
					}
				_iter_next_22b7066d9:;
				}
				_iter_end_22b7066d9:;;
				if (((((*(_59817_s))._field_owner != nullptr) && (*((*(_59817_s))._field_owner))._field_Anon) && ((*(_57130_v))._field_Scope != (*((*(_59817_s))._field_owner))._field_Scope))) {
					_246985d16_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*(_57130_v))._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_22b704a8e:;
	};
	if (((*(_57130_v))._field_Scope == nullptr)) {
		_22b709104_pushReference(_self_, &(_57130_v));
	};
	if (((!((*(_57130_v))._field_Binded)) && (((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr)))) {
		if ((*(_57130_v))._field_Constant) {
			_246919085_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait<_2469d41b6_Lookup>((*(_self_))._field_s, 3));
			if ((((*(_57130_v))._field_Value == nullptr) || ((*((*(_57130_v))._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
		if (((*(_57130_v))._field_Scope != nullptr)) {
			return nullptr;;
		};
		_246919085_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*(_57130_v))._field_Kind == nullptr) || ((*((*(_57130_v))._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_22b711183:;
	jule::Ptr<_246983ac2_Data> _64213_d = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*((*(_57130_v))._field_Kind))._field_Kind, ._field_Mutable=(*(_57130_v))._field_Mutable, ._field_Reference=(*(_57130_v))._field_Reference, ._field_Lvalue=(!((*(_57130_v))._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*(_57130_v))._field_Binded)) && _2469228da_IsInitialized(_57130_v.ptr())) && ((*((*(_57130_v))._field_Value))._field_Data != nullptr))) {
		(*(_64213_d))._field_IsRune=(*((*((*(_57130_v))._field_Value))._field_Data))._field_IsRune;
	};
	if (((*(_57130_v))._field_Constant && ((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*(_64213_d))._field_Constant=jule::new_ptr<_2445e359c_Const>((*((*((*((*(_57130_v))._field_Value))._field_Data))._field_Constant)));
		(*(_64213_d))._field_Model=jule::Any((*(_64213_d))._field_Constant, &__jule_any_type19);
		if (_246922e07_untypedConstant(_57130_v.ptr())) {
			_246986da0_applyNumericPrefix(_self_, &(_64213_d));
			(*(_64213_d))._field_untyped=true;
		};
	};
	return _64213_d;;
}



inline jule::Ptr<_246983ac2_Data> _24698c845_evalTypeAlias(_2469857b6_Eval* _self_, jule::Ptr<_2469b35e6_TypeAlias> _66636_ta, jule::Ptr<_246819d43_Token> _66652_errorToken) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66636_ta))._field_Public, (*(_66636_ta))._field_Token)))) {
		_246985d16_pushErr(_self_, _66652_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_66636_ta))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66636_ta))._field_Used=true;
	jule::Trait<_2469b3e32_Kind> _67513_kind = (*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_246983ac2_Data> _67617_d = nullptr;;
	{
		auto &_match_expr{ _67513_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22b71be2a:;
			{
				_67617_d=_24698a38c__evalStruct(_self_, _67513_kind.cast_ptr<_246853ba1_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_22b71bc4e:;
			{
				_67617_d=_246989413__evalEnum(_self_, _67513_kind.cast_ptr<_24687b800_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_22b71a016:;
			{
				_67617_d=_246989b50__evalTypeEnum(_self_, _67513_kind.cast_ptr<_24687d00a_TypeEnum>(4));
			}
		}
		else {
			_case_begin_22b719ea0:;
			{
				_67617_d=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_Kind}), ._field_Decl=true, });
				if ((*(_66636_ta))._field_Binded) {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*(_66636_ta))._field_Ident;
				} else {
					(*((*(_67617_d))._field_Kind))._field_BindIdent=(*((*((*(_66636_ta))._field_Kind))._field_Kind))._field_BindIdent;
				};
				(*(_67617_d))._field_Model=jule::Any((*(_67617_d))._field_Kind, &__jule_any_type83);
			}
		}
		_match_end_22b719e4a:;
	};
	(*((*(_67617_d))._field_Kind))._field_Generic=(*(_66636_ta))._field_Generic;
	return _67617_d;;
}



inline jule::Ptr<_246983ac2_Data> _24698cc41_evalDef(_2469857b6_Eval* _self_, jule::Any* _70231_def, jule::Ptr<_246819d43_Token> _70241_ident) {
	{
		auto &_match_expr{ (*(_70231_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b720280:;
			{
				return _24698c449_evalVar(_self_, (*(_70231_def)).cast_ptr<_246922555_Var>(&__jule_any_type8), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_22b7202e6:;
			{
				return _24698980e_evalEnum(_self_, (*(_70231_def)).cast_ptr<_24687b800_Enum>(&__jule_any_type67), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_22b72035c:;
			{
				return _24698a04b_evalTypeEnum(_self_, (*(_70231_def)).cast_ptr<_24687d00a_TypeEnum>(&__jule_any_type68), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22b7203c3:;
			{
				return _24698a788_evalStruct(_self_, _246851385_instance((*(_70231_def)).cast_ptr<_246850e23_Struct>(&__jule_any_type65)), _70241_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_22b720439:;
			{
				jule::Ptr<_246865d17_Fn> _71317_f = (*(_70231_def)).cast_ptr<_246865d17_Fn>(&__jule_any_type64);;
				if ((!(*(_71317_f))._field_Ident.equal("init", 4))) {
					return _24698b338_evalFn(_self_, _71317_f, _70241_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_22b7204b1:;
			{
				return _24698aac9_evalFnIns(_self_, (*(_70231_def)).cast_ptr<_246868c1b_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_22b720538:;
			{
				return _24698c845_evalTypeAlias(_self_, (*(_70231_def)).cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66), _70241_ident);;
			}
		}
		_match_end_22b72022a:;
	};
	_246985d16_pushErr(_self_, _70241_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70241_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_246983ac2_Data> _24698d082_evalIdent(_2469857b6_Eval* _self_, jule::Ptr<_24683607e_IdentExpr> _72628_ident) {
	jule::Any _72713_def = _246988a83_getDef(_self_, &((*(_72628_ident))._field_Ident), (*(_72628_ident))._field_Binded);;
	return _24698cc41_evalDef(_self_, &(_72713_def), (*(_72628_ident))._field_Token);;
}



inline jule::Ptr<_246983ac2_Data> _24698d3c3_evalUnary(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246836711_UnaryExpr> _73133_u) {
	_2469a3edd_unaryEval _73213_unary = static__2469a442d_new(_self_);;
	return _2469a585d_eval(&_73213_unary, _73133_u);;
}



inline jule::Ptr<_246983ac2_Data> _24698d714_evalVariadic(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246836ada_VariadicExpr> _73636_v) {
	if (((*(_73636_v))._field_Expr == nullptr)) {
		_246985d16_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _74213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_74213_prefix;
	});;
	jule::Ptr<_246983ac2_Data> _74613_d = _2469a3a26_evalExpr(_self_, (*(_73636_v))._field_Expr);;
	if ((_74613_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2469b67b4_Variadicable((*(_74613_d))._field_Kind.ptr())))) {
		_246985d16_pushErr(_self_.ptr(), (*(_73636_v))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_74613_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_2469c1758_Slc> _75613_slc = _2469b7aa1_Slc((*(_74613_d))._field_Kind.ptr());;
	(*(_74613_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_BindIdent=(*((*(_75613_slc))._field_Elem))._field_BindIdent, ._field_Generic=(*((*(_75613_slc))._field_Elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*((*(_75613_slc))._field_Elem))._field_Kind});
	return _74613_d;;
}



inline jule::Ptr<_246983ac2_Data> _24698da55_evalUnsafe(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246835ac8_UnsafeExpr> _76634_u) {
	jule::Bool _7679_unsafety = (*(_self_))._field_unsafety;;
	(*(_self_))._field_unsafety=true;
	jule::Ptr<_246983ac2_Data> _76913_d = _2469a3a26_evalExpr(_self_, (*(_76634_u))._field_Expr);;
	(*(_self_))._field_unsafety=_7679_unsafety;
	return _76913_d;;
}



inline jule::Ptr<_246983ac2_Data> _24698dd96_evalArr(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683ab77_SliceExpr> _77431_s) {
	jule::Ptr<_2469c3a79_Arr> _77613_pt = _2469b781a_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_2469c3a79_Arr> _77813_arr = jule::new_ptr<_2469c3a79_Arr>(_2469c3a79_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77613_pt))._field_Elem});;
	jule::Bool _78413_filled = false;;
	if (((*(_77431_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77431_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_22b7307ce:;
				{
					if (((*((*((*(_77431_s))._field_Exprs[1LL]))._field_Kind.cast_ptr<_246836ada_VariadicExpr>(&__jule_any_type75)))._field_Expr != nullptr)) {
						goto _match_end_22b730735;
					};
					if ((*(_77613_pt))._field_Auto) {
						_246985d16_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78413_filled=true;
					(*(_77431_s))._field_Exprs=(*(_77431_s))._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_22b730735:;
		};
	};
	(*(_77813_arr))._field_N=static_cast<jule::I64>((*(_77431_s))._field_Exprs.len());
	if ((!((*(_77613_pt))._field_Auto))) {
		if (((*(_77813_arr))._field_N > (*(_77613_pt))._field_N)) {
			_246985d16_pushErr(_self_.ptr(), (*(_77431_s))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*(_77813_arr))._field_N < (*(_77613_pt))._field_N)) {
			(*(_77813_arr))._field_N=(*(_77613_pt))._field_N;
		};
	};
	jule::Ptr<_24685d4a2_ArrayExprModel> _81313_model = jule::new_ptr<_24685d4a2_ArrayExprModel>(_24685d4a2_ArrayExprModel{._field_Kind=_77813_arr, });;
	if (_78413_filled) {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_81313_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_77431_s))._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_2469b43d8_TypeKind> _82213_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_77813_arr))._field_Elem;
	{
		auto expr = &((*(_77431_s))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b7358c2:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _82421_elem = *it;
			{
				jule::Ptr<_246983ac2_Data> _82517_d = _2469a3a26_evalExpr(_self_, _82421_elem);;
				if ((_82517_d == nullptr)) {
					goto _iter_next_22b7358c2;
				};
				_24690a791_checkAssignType((*(_self_))._field_s, false, &((*(_77813_arr))._field_Elem), &(_82517_d), (*(_77431_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push((*(_82517_d))._field_Model); };
			}
			_iter_next_22b7358c2:;
			++it;
			goto _iter_begin_22b7358c2;
		}
		_iter_end_22b7358c2:;
	};
	(*(_self_))._field_prefix=_82213_prefix;
	if (_78413_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_81313_model))._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_77813_arr, 26)}), ._field_Mutable=true, ._field_Model=jule::Any(_81313_model, &__jule_any_type84), });;
}



inline jule::Ptr<_246983ac2_Data> _24698e34c_evalExpSlc(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683ab77_SliceExpr> _84834_s, jule::Ptr<_2469b43d8_TypeKind> _84853_t, jule::Any _84871_first) {
	jule::Ptr<_2469c1758_Slc> _84913_slc = jule::new_ptr<_2469c1758_Slc>(_2469c1758_Slc{._field_Elem=_84853_t});;
	jule::I64 _85313_i = 0LL;;
	jule::Ptr<_24685a45a_SliceExprModel> _85413_model = jule::new_ptr<_24685a45a_SliceExprModel>(_24685a45a_SliceExprModel{._field_ElemKind=_84853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84834_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push(_84871_first); };
		_85313_i=1LL;
	};
	jule::Ptr<_2469b43d8_TypeKind> _86313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=(*(_84913_slc))._field_Elem;
	{
		auto expr = (*(_84834_s))._field_Exprs.slice(_85313_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22b73d1e3:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _86521_elem = *it;
			{
				jule::Ptr<_246983ac2_Data> _86617_d = _2469a3a26_evalExpr(_self_, _86521_elem);;
				if ((_86617_d == nullptr)) {
					goto _iter_next_22b73d1e3;
				};
				_24690a791_checkAssignType((*(_self_))._field_s, false, &((*(_84913_slc))._field_Elem), &(_86617_d), (*(_84834_s))._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = (*(_85413_model))._field_Elems; __jule_push_dest.push((*(_86617_d))._field_Model); };
			}
			_iter_next_22b73d1e3:;
			++it;
			goto _iter_begin_22b73d1e3;
		}
		_iter_end_22b73d1e3:;
	};
	(*(_self_))._field_prefix=_86313_prefix;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_84913_slc, 23)}), ._field_Mutable=true, ._field_Model=jule::Any(_85413_model, &__jule_any_type76), });;
}



inline jule::Ptr<_246983ac2_Data> _24698e68d_evalSliceExpr(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683ab77_SliceExpr> _88437_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_2469b781a_Arr((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_22b741b64:;
				{
					return _24698dd96_evalArr(_self_, _88437_s);;
				}
			}
			else if ((_2469b7aa1_Slc((*(_self_))._field_prefix.ptr()) != nullptr)) {
				_case_begin_22b741bdb:;
				{
					jule::Ptr<_2469c1758_Slc> _89021_pt = _2469b7aa1_Slc((*(_self_))._field_prefix.ptr());;
					return _24698e34c_evalExpSlc(_self_, _88437_s, (*(_89021_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_22b741a54:;
		};
	};
	jule::Ptr<_2469b43d8_TypeKind> _89513_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	if (((*(_88437_s))._field_Exprs.len() == 0LL)) {
		_246985d16_pushErr(_self_.ptr(), (*(_88437_s))._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _90313_firstElem = _2469a3a26_evalExpr(_self_, (*(_88437_s))._field_Exprs[0LL]);;
	if ((_90313_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _90813_d = _24698e34c_evalExpSlc(_self_, _88437_s, (*(_90313_firstElem))._field_Kind, (*(_90313_firstElem))._field_Model);;
	(*(_self_))._field_prefix=_89513_prefix;
	return _90813_d;;
}



inline void _24698ea01_checkIntegerIndexingByData(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _91450_d, jule::Ptr<_246819d43_Token> _91460_token) {
	jule::Str _9159_err_key = _2469aeb20_checkDataForIntegerIndexing(_91450_d);;
	{
		auto &_match_expr{ _9159_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_22b747450:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_22b747c7a:;
			{
				_246985d16_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_91450_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_22b74795b:;
			{
				_246985d16_pushErr(_self_, _91460_token, _9159_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_22b747906:;
	};
}



inline void _24698ee1e_indexingPtr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _92635_d, jule::Ptr<_246983ac2_Data>* _92650_index, jule::Ptr<_24683b617_IndexingExpr>* _92665_i) {
	_24698ea01_checkIntegerIndexingByData(_self_, _92650_index, (*((*(_92665_i))))._field_Token);
	(*((*(_92635_d))))._field_Lvalue=true;
	jule::Ptr<_2469c454c_Ptr> _93013_ptr = _2469b7067_Ptr((*((*(_92635_d))))._field_Kind.ptr());;
	{
		
		if (_2469c5086_IsUnsafe(_93013_ptr.ptr())) {
			_case_begin_22b750447:;
			{
				_246985d16_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_24698680b_isUnsafe(_self_)))) {
			_case_begin_22b7504be:;
			{
				_246985d16_pushErr(_self_, (*((*(_92665_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_22b7503e2:;
	};
	(*((*(_92635_d))))._field_Kind=(*(_93013_ptr))._field_Elem;
}



inline void _24699033c_indexingArr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _94235_d, jule::Ptr<_246983ac2_Data>* _94250_index, jule::Ptr<_24683b617_IndexingExpr>* _94265_i) {
	jule::Ptr<_2469c3a79_Arr> _94313_arr = _2469b781a_Arr((*((*(_94235_d))))._field_Kind.ptr());;
	(*((*(_94235_d))))._field_Kind=(*(_94313_arr))._field_Elem;
	_24698ea01_checkIntegerIndexingByData(_self_, _94250_index, (*((*(_94265_i))))._field_Token);
	(*((*(_94235_d))))._field_Lvalue=true;
	if ((_246984496_IsConst((*(_94250_index)).ptr()) && (_2445e625e_AsF64((*((*(_94250_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*(_94313_arr))._field_N)))) {
		_246985d16_pushErr(_self_, (*((*(_94265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _24699075a_indexingSlc(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _95235_d, jule::Ptr<_246983ac2_Data>* _95250_index, jule::Ptr<_24683b617_IndexingExpr>* _95265_i) {
	jule::Ptr<_2469c1758_Slc> _95313_slc = _2469b7aa1_Slc((*((*(_95235_d))))._field_Kind.ptr());;
	(*((*(_95235_d))))._field_Kind=(*(_95313_slc))._field_Elem;
	_24698ea01_checkIntegerIndexingByData(_self_, _95250_index, (*((*(_95265_i))))._field_Token);
	(*((*(_95235_d))))._field_Lvalue=true;
	if ((!(_246984496_IsConst((*(_95250_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95235_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_22b7574e8:;
			{
				jule::Ptr<_24685a45a_SliceExprModel> _96417_m = (*((*(_95235_d))))._field_Model.cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76);;
				jule::F64 _96513_indx = _2445e625e_AsF64((*((*(_95250_index))))._field_Constant.ptr());;
				if ((_96513_indx >= static_cast<jule::F64>((*(_96417_m))._field_Elems.len()))) {
					_246985d16_pushErr(_self_, (*((*(_95265_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95235_d))))._field_Model=(*(_96417_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_96513_indx))];
					(*((*(_95235_d))))._field_Decl=true;
				};
			}
		}
		_match_end_22b757493:;
	};
}



inline void _246990b78_indexingMap(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _97535_d, jule::Ptr<_246983ac2_Data>* _97550_index, jule::Ptr<_24683b617_IndexingExpr>* _97569_i) {
	(*((*(_97535_d))))._field_Lvalue=true;
	if (((*(_97550_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_2469c2dec_Map> _98013_m = _2469b85da_Map((*((*(_97535_d))))._field_Kind.ptr());;
	_24696c506_assignTypeChecker _98113_atc = _24696c506_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98013_m))._field_Key, ._field_d=(*(_97550_index)), ._field_errorToken=(*((*(_97569_i))))._field_Token};;
	_24696d76b_check(&_98113_atc);
	(*((*(_97535_d))))._field_Kind=(*(_98013_m))._field_Val;
}



inline void _246991096_indexingStr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _99135_d, jule::Ptr<_246983ac2_Data>* _99150_index, jule::Ptr<_24683b617_IndexingExpr>* _99165_i) {
	(*((*(_99135_d))))._field_Kind=_246b26d20_primU8;
	(*((*(_99135_d))))._field_Mutable=false;
	(*((*(_99135_d))))._field_Lvalue=true;
	if (((*(_99150_index)) == nullptr)) {
		return;;
	};
	_24698ea01_checkIntegerIndexingByData(_self_, _99150_index, (*((*(_99165_i))))._field_Token);
	if ((!(_246984496_IsConst((*(_99150_index)).ptr())))) {
		(*((*(_99135_d))))._field_Constant=nullptr;
		return;;
	};
	if (_246984496_IsConst((*(_99135_d)).ptr())) {
		jule::Ptr<_246819d43_Token> _100813_errorToken = (*((*(_99165_i))))._field_Token;;
		jule::I64 _100913_j = _2445e5c42_AsI64((*((*(_99150_index))))._field_Constant.ptr());;
		jule::Str _101013_s = _2445e5725_ReadStr((*((*(_99135_d))))._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100913_j) >= _101013_s.len())) {
			_246985d16_pushErr(_self_, _100813_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_2445e67c0_SetU64((*((*(_99135_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101013_s[_100913_j])));
		};
	};
}



inline void _2469914b4_toIndexing(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _101934_d, jule::Ptr<_246983ac2_Data>* _101949_index, jule::Ptr<_24683b617_IndexingExpr>* _101968_i) {
	{
		
		if ((_2469b7067_Ptr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b762c1d:;
			{
				_24698ee1e_indexingPtr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_2469b781a_Arr((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b762c95:;
			{
				_24699033c_indexingArr(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_2469b7aa1_Slc((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b762d1c:;
			{
				_24699075a_indexingSlc(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_2469b85da_Map((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b762d94:;
			{
				_246990b78_indexingMap(_self_, _101934_d, _101949_index, _101968_i);
				return;;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_101934_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b762e1b:;
			{
				jule::Ptr<_2469bc259_Prim> _103413_prim = _2469b6a4a_Prim((*((*(_101934_d))))._field_Kind.ptr());;
				{
					
					if (_2469c06e1_IsStr(_103413_prim.ptr())) {
						_case_begin_22b766e86:;
						{
							_246991096_indexingStr(_self_, _101934_d, _101949_index, _101968_i);
							return;;
						}
					}
					_match_end_22b766ded:;
				};
			}
		}
		_match_end_22b762aca:;
	};
	_246985d16_pushErr(_self_, (*((*(_101968_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_101934_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _24699196a_pushGenericsFromExprSubIdent(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246837767_SubIdentExpr>* _104453_sexpr, jule::Slice<jule::Ptr<_246830320_TypeDecl>>* _104514_generics, jule::Ptr<_246834654_Expr>* _104542_expr) {
	jule::Ptr<_246830c27_SubIdentTypeDecl> _104613_t = jule::new_ptr<_246830c27_SubIdentTypeDecl>();;
	if ((!(_2469b0a11_pushSubIdentFromExpr(jule::Any((*(_104453_sexpr)), &__jule_any_type85), &(_104613_t))))) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_104542_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_104514_generics)); __jule_push_dest.push(jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Kind=jule::Any(_104613_t, &__jule_any_type86)})); };
	return true;;
}



inline jule::Bool _246991d66_pushGenericsFromData(jule::Ptr<_2469857b6_Eval> _self_, jule::Slice<jule::Ptr<_246830320_TypeDecl>>* _105545_generics, jule::Ptr<_246834654_Expr>* _105573_expr) {
	{
		auto &_match_expr{ (*((*(_105573_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_22b76a374:;
			{
				jule::Ptr<_246836711_UnaryExpr> _105817_u = (*((*(_105573_expr))))._field_Kind.cast_ptr<_246836711_UnaryExpr>(&__jule_any_type87);;
				{
					auto &_match_expr{ (*((*(_105817_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_22b76be69:;
						{
							jule::Ptr<_246831d49_PtrTypeDecl> _106121_kind = jule::new_ptr<_246831d49_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_246830320_TypeDecl>> _106221__generics = jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, 1LL);;
							_246991d66_pushGenericsFromData(_self_, &(_106221__generics), &((*(_105817_u))._field_Expr));
							(*(_106121_kind))._field_Elem=_106221__generics[0LL];
							{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_106121_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_22b76d0d0:;
						{
							jule::Ptr<_2468313ba_SptrTypeDecl> _107021_kind = jule::new_ptr<_2468313ba_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_246830320_TypeDecl>> _107121__generics = jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, 1LL);;
							_246991d66_pushGenericsFromData(_self_, &(_107121__generics), &((*(_105817_u))._field_Expr));
							(*(_107021_kind))._field_Elem=_107121__generics[0LL];
							{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*((*(_105573_expr))))._field_Token, ._field_Kind=jule::Any(_107021_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_22b76c4a8:;
						{
							_246985d16_pushErr(_self_.ptr(), (*(_105817_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_22b76c453:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_22b76b2ed:;
			{
				{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push((*((*(_105573_expr))))._field_Kind.cast_ptr<_246830320_TypeDecl>(&__jule_any_type88)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_22b76b364:;
			{
				jule::Ptr<_246837767_SubIdentExpr> _108517_sexpr = (*((*(_105573_expr))))._field_Kind.cast_ptr<_246837767_SubIdentExpr>(&__jule_any_type85);;
				return _24699196a_pushGenericsFromExprSubIdent(_self_, &(_108517_sexpr), _105545_generics, _105573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22b76b3ca:;
			{
				jule::Ptr<_24683607e_IdentExpr> _108817_ident = (*((*(_105573_expr))))._field_Kind.cast_ptr<_24683607e_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_108817_ident))._field_Token, ._field_Ident=(*(_108817_ident))._field_Ident, ._field_Binded=(*(_108817_ident))._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_22b76a73c:;
			{
				{
					auto expr = &((*((*((*(_105573_expr))))._field_Kind.cast_ptr<_246835325_TupleExpr>(&__jule_any_type80)))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b774adc:;
					if (it != expr_end) {
						jule::Ptr<_246834654_Expr> _109725_texpr = *it;
						{
							if ((!(_246991d66_pushGenericsFromData(_self_, _105545_generics, &(_109725_texpr))))) {
								return false;;
							};
						}
						_iter_next_22b774adc:;
						++it;
						goto _iter_begin_22b774adc;
					}
					_iter_end_22b774adc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_22b76a7a3:;
			{
				jule::Ptr<_24683738d_NsSelectionExpr> _110317_ns = (*((*(_105573_expr))))._field_Kind.cast_ptr<_24683738d_NsSelectionExpr>(&__jule_any_type89);;
				jule::Ptr<_24683092a_IdentTypeDecl> _110417_decl = jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_110317_ns))._field_Ident, ._field_Ident=(*((*(_110317_ns))._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*(_105545_generics)); __jule_push_dest.push(jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_2468310bd_NamespaceTypeDecl>(_2468310bd_NamespaceTypeDecl{._field_Idents=(*(_110317_ns))._field_Ns, ._field_Kind=jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*(_110417_decl))._field_Token, ._field_Kind=jule::Any(_110417_decl, &__jule_any_type20)})}), &__jule_any_type90)})); };
			}
		}
		else {
			_case_begin_22b76a6c6:;
			{
				_246985d16_pushErr(_self_.ptr(), (*((*(_105573_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_22b76a671:;
	};
	return true;;
}



inline void _2469921c9_evalIdentDeclFromIndexing(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246983ac2_Data>* _112550_d, jule::Ptr<_24683b617_IndexingExpr>* _112565_i) {
	jule::Ptr<_246853ba1_StructIns> _112613_s = _2469b80bd_Struct((*((*(_112550_d))))._field_Kind.ptr());;
	if ((_112613_s == nullptr)) {
		_246985d16_pushErr(_self_.ptr(), (*((*((*(_112565_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_112550_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		(*(_112550_d))=nullptr;
		return;;
	};
	jule::Ptr<_24683092a_IdentTypeDecl> _113317_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_112565_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22b77a2c9:;
			{
				jule::Ptr<_24683607e_IdentExpr> _113617_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_24683607e_IdentExpr>(&__jule_any_type79);;
				_113317_decl=jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_113617_expr))._field_Token, ._field_Ident=(*(_113617_expr))._field_Ident, ._field_Binded=(*(_113617_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_22b77b550:;
			{
				jule::Ptr<_24683738d_NsSelectionExpr> _114317_expr = (*((*((*(_112565_i))))._field_Expr))._field_Kind.cast_ptr<_24683738d_NsSelectionExpr>(&__jule_any_type89);;
				_113317_decl=jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_114317_expr))._field_Ident, ._field_Ident=(*((*(_114317_expr))._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_22b77a74c:;
			{
				_246985d16_pushErr(_self_.ptr(), (*((*(_112565_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112550_d))=nullptr;
				return;;
			}
		}
		_match_end_22b77a6e7:;
	};
	if ((!(_246991d66_pushGenericsFromData(_self_, &((*(_113317_decl))._field_Generics), &((*((*(_112565_i))))._field_Index))))) {
		(*(_112550_d))=nullptr;
		return;;
	};
	_112613_s=({ auto _wrap_copy = _246998bc5_typeChecker(_self_.ptr()); _2469ca487_fromStruct(&_wrap_copy, &(_113317_decl), &((*(_112613_s))._field_Decl)); });
	if ((_112613_s == nullptr)) {
		(*(_112550_d))=nullptr;
		return;;
	};
	(*((*((*(_112550_d))))._field_Kind))._field_Kind=jule::Trait<_2469b3e32_Kind>(_112613_s, 0);
}



inline jule::Bool _246992680_checkGenericFn(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246868c1b_FnIns>* _116839_f, jule::Ptr<_246819d43_Token>* _116855_et, jule::Any* _116872_model) {
	jule::Bool _11699_ok = _24690cd8c_reloadFnInsTypes((*(_self_))._field_s, (*(_116839_f)));;
	(*((*(_116839_f))))._field_reloaded=true;
	if ((!(_11699_ok))) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _117413_existInstance = _246867885_appendInstance((*((*(_116839_f))))._field_Decl.ptr(), _116839_f);;
	if ((!(_24690bde1_checkConstraintsFn((*(_self_))._field_s, _116839_f, _116855_et, _117413_existInstance)))) {
		return false;;
	};
	if ((_117413_existInstance != nullptr)) {
		_2469b068c_updateModelToGenericIns(_116872_model, &(_117413_existInstance));
		_22b783b84_updateRefer(_246988d19_getOwnerRefers(_self_.ptr()), _116839_f, &(_117413_existInstance));
		(*(_116839_f))=_117413_existInstance;
	} else {
		_24691c1dc_checkFnInsCaller((*(_self_))._field_s, _116839_f, (*(_116855_et)));
	};
	return true;;
}



inline void _2469929e3_evalFnGenericFromIndexing(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246983ac2_Data>* _119750_d, jule::Ptr<_24683b617_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _119813_generics = jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_246991d66_pushGenericsFromData(_self_, &(_119813_generics), &((*((*(_119765_i))))._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_246868c1b_FnIns> _120413_f = _2469b7d37_Fn((*((*(_119750_d))))._field_Kind.ptr());;
	jule::I64 _120513_genericsLen = 0LL;;
	if (((*(_120413_f))._field_Decl != nullptr)) {
		_120513_genericsLen=static_cast<jule::I64>((*((*(_120413_f))._field_Decl))._field_Generics.len());
	};
	if ((!(_2469042b2_checkGenericQuantity((*(_self_))._field_s.ptr(), _120513_genericsLen, static_cast<jule::I64>(_119813_generics.len()), (*((*((*(_119765_i))))._field_Expr))._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	(*(_120413_f))._field_Generics=jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>>::alloc(0LL, (*((*(_120413_f))._field_Decl))._field_Generics.len());
	{
		auto expr = &(_119813_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b78a44e:;
		if (it != expr_end) {
			jule::Ptr<_246830320_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_246983ac2_Data> _121717_k = _246999016_evalType(_self_.ptr(), _121621_g);;
				if ((_121717_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>> &__jule_push_dest = (*(_120413_f))._field_Generics; __jule_push_dest.push(jule::new_ptr<_2469b2a02_InsGeneric>(_2469b2a02_InsGeneric{._field_Kind=(*(_121717_k))._field_Kind, })); };
			}
			_iter_next_22b78a44e:;
			++it;
			goto _iter_begin_22b78a44e;
		}
		_iter_end_22b78a44e:;
	};
	if (_24686a1a1_IsBuiltin(_120413_f.ptr())) {
		return;;
	};
	if (_246992680_checkGenericFn(_self_, &(_120413_f), &((*((*((*(_119765_i))))._field_Expr))._field_Token), &((*((*(_119750_d))))._field_Model))) {
		(*((*((*(_119750_d))))._field_Kind))._field_Kind=jule::Trait<_2469b3e32_Kind>(_120413_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_246983ac2_Data> _246992d34_evalIndexing(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683b617_IndexingExpr> _123636_i) {
	jule::Ptr<_2469b43d8_TypeKind> _123713_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_123713_prefix;
	});;
	jule::Ptr<_246983ac2_Data> _124113_d = _2469a2c12_evalExprKind(_self_, (*((*(_123636_i))._field_Expr))._field_Kind);;
	if ((_124113_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124113_d))._field_Decl) {
		_2469921c9_evalIdentDeclFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	if ((_2469b7d37_Fn((*(_124113_d))._field_Kind.ptr()) != nullptr)) {
		_2469929e3_evalFnGenericFromIndexing(_self_, &(_124113_d), &(_123636_i));
		return _124113_d;;
	};
	_246983ac2_Data _125713_oldData = (*(_124113_d));;
	jule::Ptr<_246983ac2_Data> _125913_index = _2469a3a26_evalExpr(_self_, (*(_123636_i))._field_Index);;
	if ((_125913_index == nullptr)) {
		return nullptr;;
	};
	(*(_124113_d))._field_Decl=false;
	_2469914b4_toIndexing(_self_.ptr(), &(_124113_d), &(_125913_index), &(_123636_i));
	if (_246984496_IsConst(_124113_d.ptr())) {
		(*(_124113_d))._field_Decl=false;
		(*(_124113_d))._field_Model=jule::Any((*(_124113_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124113_d))._field_Decl) {
		(*(_124113_d))._field_Decl=false;
	} else {
		(*(_124113_d))._field_Model=jule::Any(jule::new_ptr<_24685a911_IndexingExprModel>(_24685a911_IndexingExprModel{._field_Token=(*(_123636_i))._field_Token, ._field_Expr=jule::new_ptr<_246983ac2_Data>(_125713_oldData), ._field_Index=_125913_index}), &__jule_any_type45);
	};
	return _124113_d;;
}



inline __jule_tuple_x_246983ac2_Data__jule_tuple_x_246983ac2_Data _246993175_evalSlicingExprs(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683bc77_SlicingExpr>* _129041_s) {
	__jule_tuple_x_246983ac2_Data__jule_tuple_x_246983ac2_Data __jule_func_result;
	jule::Ptr<_2469b43d8_TypeKind> _129113_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_129113_prefix;
	});;
	jule::Ptr<_246983ac2_Data> _129517_l = nullptr;;
	jule::Ptr<_246983ac2_Data> _129617_r = nullptr;;
	if (((*((*(_129041_s))))._field_Start != nullptr)) {
		_129517_l=_2469a3a26_evalExpr(_self_, (*((*(_129041_s))))._field_Start);
		if ((_129517_l != nullptr)) {
			_24698ea01_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25e40_primInt, ._field_Constant=static__2445e39dc_NewI64(0LL)});
		(*((*(_129517_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*(_129517_l))._field_Model=jule::Any((*(_129517_l))._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129041_s))))._field_To != nullptr)) {
		_129617_r=_2469a3a26_evalExpr(_self_, (*((*(_129041_s))))._field_To);
		if ((_129617_r != nullptr)) {
			_24698ea01_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*((*(_129041_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _24699342d_slicingArr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _132630_d) {
	jule::Ptr<_2469b43d8_TypeKind> _132713_elemType = (*(_2469b781a_Arr((*((*(_132630_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132630_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c1758_Slc>(_2469c1758_Slc{._field_Elem=_132713_elemType}), 23)});
	(*((*(_132630_d))))._field_Lvalue=false;
	(*((*(_132630_d))))._field_Mutable=((*((*(_132630_d))))._field_Mutable || (!(_2469b5c7a_Mutable(_132713_elemType.ptr()))));
}



inline void _24699384b_slicingStr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _134130_d, jule::Ptr<_246983ac2_Data>* _134141_l, jule::Ptr<_246983ac2_Data>* _134152_r) {
	(*((*(_134130_d))))._field_Lvalue=false;
	(*((*(_134130_d))))._field_Mutable=true;
	if ((!(_246984496_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*((*(_134130_d))))._field_Constant=nullptr;
		return;;
	};
	if ((_246984496_IsConst((*(_134141_l)).ptr()) && _246984496_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135413_left = _2445e5c42_AsI64((*((*(_134141_l))))._field_Constant.ptr());;
		if ((_135413_left < 0LL)) {
			return;;
		};
		jule::Str _135913_s = _2445e5725_ReadStr((*((*(_134130_d))))._field_Constant.ptr());;
		jule::I64 _136017_right = static_cast<jule::I64>(0LL);;
		if (((*(_134152_r)) == nullptr)) {
			_136017_right=static_cast<jule::I64>(static_cast<jule::I64>(_135913_s.len()));
		} else {
			_136017_right=static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_134152_r))))._field_Constant.ptr()));
		};
		if ((_135413_left > _136017_right)) {
			return;;
		};
		_2445e6d31_SetStr((*((*(_134130_d))))._field_Constant.ptr(), _135913_s.slice(_135413_left, _136017_right));
		(*((*(_134130_d))))._field_Decl=true;
	} else {
		(*((*(_134130_d))))._field_Constant=nullptr;
	};
}



inline void _246993d24_checkSlicing(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _137736_d, jule::Ptr<_246983ac2_Data>* _137747_l, jule::Ptr<_246983ac2_Data>* _137758_r, jule::Ptr<_24683bc77_SlicingExpr>* _137769_s) {
	{
		
		if ((_2469b781a_Arr((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b7a4545:;
			{
				_24699342d_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_2469b7aa1_Slc((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b7a45bc:;
			{
				return;;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_137736_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b7a4644:;
			{
				jule::Ptr<_2469bc259_Prim> _138513_prim = _2469b6a4a_Prim((*((*(_137736_d))))._field_Kind.ptr());;
				{
					
					if (_2469c06e1_IsStr(_138513_prim.ptr())) {
						_case_begin_22b7a6c40:;
						{
							_24699384b_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_22b7a6ba7:;
				};
			}
		}
		_match_end_22b7a4424:;
	};
	_246985d16_pushErr(_self_, (*((*(_137769_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_137736_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_246983ac2_Data> _246994165_evalSlicing(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683bc77_SlicingExpr> _139635_s) {
	jule::Ptr<_246983ac2_Data> _139713_d = _2469a3a26_evalExpr(_self_, (*(_139635_s))._field_Expr);;
	if ((_139713_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _140213_l;;
	jule::Ptr<_246983ac2_Data> _140220_r;;
	({
		__jule_tuple_x_246983ac2_Data__jule_tuple_x_246983ac2_Data __jule_assign_result = _246993175_evalSlicingExprs(_self_, &(_139635_s));
		_140213_l = __jule_assign_result.__jule_result_arg0;
		_140220_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140213_l == nullptr)) {
		return _139713_d;;
	};
	(*(_139713_d))._field_Decl=false;
	_246993d24_checkSlicing(_self_.ptr(), &(_139713_d), &(_140213_l), &(_140220_r), &(_139635_s));
	if (_246984496_IsConst(_139713_d.ptr())) {
		(*(_139713_d))._field_Decl=false;
		(*(_139713_d))._field_Model=jule::Any((*(_139713_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_139713_d))._field_Decl) {
		(*(_139713_d))._field_Decl=false;
	} else {
		jule::Ptr<_24685bbed_SlicingExprModel> _142017_model = jule::new_ptr<_24685bbed_SlicingExprModel>(_24685bbed_SlicingExprModel{._field_Token=(*(_139635_s))._field_Token, ._field_Expr=(*(_139713_d))._field_Model, ._field_Left=(*(_140213_l))._field_Model, });;
		if ((_140220_r != nullptr)) {
			(*(_142017_model))._field_Right=(*(_140220_r))._field_Model;
		};
		(*(_139713_d))._field_Model=jule::Any(_142017_model, &__jule_any_type91);
	};
	return _139713_d;;
}



inline void _246994583_castPtr(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _143330_t, jule::Ptr<_246983ac2_Data> _143348_d, jule::Ptr<_246819d43_Token> _143358_errorToken) {
	(*(_143348_d))._field_Constant=nullptr;
	jule::Ptr<_2469c0c85_Sptr> _14359_sptr = _2469b6cd1_Sptr((*(_143348_d))._field_Kind.ptr());;
	if ((_14359_sptr != nullptr)) {
		if ((!(_2469b4ae2_Equal((*(_2469b7067_Ptr(_143330_t.ptr())))._field_Elem, (*(_14359_sptr))._field_Elem)))) {
			_246985d16_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_143330_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_24698680b_isUnsafe(_self_)))) {
		_246985d16_pushErr(_self_, _143358_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _14489_prim = _2469b6a4a_Prim((*(_143348_d))._field_Kind.ptr());;
	if (((_2469b7067_Ptr((*(_143348_d))._field_Kind.ptr()) == nullptr) && ((_14489_prim == nullptr) || (!(_2445e29b9_IsInt(_2469bc59a_Str(_14489_prim.ptr()))))))) {
		_246985d16_pushErr(_self_, _143358_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_143348_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_143330_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _2469949a1_castStruct(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _145433_t, jule::Ptr<_246983ac2_Data> _145451_d, jule::Ptr<_246819d43_Token> _145461_errorToken) {
	(*(_145451_d))._field_Constant=nullptr;
	jule::Ptr<_2468790e4_Trait> _145613_tr = _2469b8354_Trait((*(_145451_d))._field_Kind.ptr());;
	if ((_145613_tr == nullptr)) {
		_246985d16_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_145433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_246853ba1_StructIns> _146213_s = _2469b80bd_Struct(_145433_t.ptr());;
	_22b7b6436_pushReference(_self_, &(_146213_s));
	if ((!(_246852562_IsImplements((*(_146213_s))._field_Decl.ptr(), _145613_tr)))) {
		_246985d16_pushErr(_self_, _145461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_145451_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_145433_t.ptr()), &__jule_any_type4)}));
	};
}



inline void _246994dbe_castRef(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _147030_t, jule::Ptr<_246983ac2_Data> _147048_d, jule::Ptr<_246819d43_Token> _147058_errorToken) {
	(*(_147048_d))._field_Constant=nullptr;
	jule::Ptr<_2469c0c85_Sptr> _147213_sptr = _2469b6cd1_Sptr(_147030_t.ptr());;
	jule::Ptr<_2469c454c_Ptr> _147413_ptr = _2469b7067_Ptr((*(_147048_d))._field_Kind.ptr());;
	if (((_147413_ptr != nullptr) && _2469b4ae2_Equal((*(_147213_sptr))._field_Elem, (*(_147413_ptr))._field_Elem))) {
		if ((!(_24698680b_isUnsafe(_self_)))) {
			_246985d16_pushErr(_self_, _147058_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_2469b80bd_Struct((*(_147213_sptr))._field_Elem.ptr()) != nullptr)) {
		_2469949a1_castStruct(_self_, (*(_147213_sptr))._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_246985d16_pushErr(_self_, _147058_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_147048_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_147030_t.ptr()), &__jule_any_type4)}));
}



inline void _2469952dc_castSlc(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _149230_t, jule::Ptr<_246983ac2_Data> _149248_d, jule::Ptr<_246819d43_Token> _149258_errorToken) {
	jule::Ptr<_2445e359c_Const> _14939_c = (*(_149248_d))._field_Constant;;
	(*(_149248_d))._field_Constant=nullptr;
	if ((_2469b72ed_Enum((*(_149248_d))._field_Kind.ptr()) != nullptr)) {
		if (((_2469b6a4a_Prim((*((*(_2469b72ed_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_2469c06e1_IsStr(_2469b6a4a_Prim((*((*(_2469b72ed_Enum((*(_149248_d))._field_Kind.ptr())))._field_Kind))._field_Kind.ptr()).ptr()))))) {
			_246985d16_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_149230_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_2469b6a4a_Prim((*(_149248_d))._field_Kind.ptr()) == nullptr) || (!(_2469c06e1_IsStr(_2469b6a4a_Prim((*(_149248_d))._field_Kind.ptr()).ptr()))))) {
		_246985d16_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_149230_t=(*(_2469b7aa1_Slc(_149230_t.ptr())))._field_Elem;
	jule::Ptr<_2469bc259_Prim> _15079_prim = _2469b6a4a_Prim(_149230_t.ptr());;
	if (((_15079_prim == nullptr) || ((!(_2469bdb51_IsU8(_15079_prim.ptr()))) && (!(_2469bd634_IsI32(_15079_prim.ptr())))))) {
		_246985d16_pushErr(_self_, _149258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_149248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_149230_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	if ((_14939_c != nullptr)) {
		{
			
			if (_2469bdb51_IsU8(_15079_prim.ptr())) {
				_case_begin_22b7c89cb:;
				{
					jule::Str _151717_s = _2445e5725_ReadStr(_14939_c.ptr());;
					jule::Ptr<_24685a45a_SliceExprModel> _151821_model = jule::new_ptr<_24685a45a_SliceExprModel>(_24685a45a_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151717_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151717_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b7c9c30:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_2445e359c_Const> _152325_bc = static__2445e3ca6_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								(*(_152325_bc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_151821_model))._field_Elems; __jule_push_dest.push(jule::Any(_152325_bc, &__jule_any_type19)); };
							}
							_iter_next_22b7c9c30:;
							++it;
							goto _iter_begin_22b7c9c30;
						}
						_iter_end_22b7c9c30:;
					};
					(*(_149248_d))._field_Model=jule::Any(_151821_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			else if (_2469bd634_IsI32(_15079_prim.ptr())) {
				_case_begin_22b7c8a53:;
				{
					jule::Slice<jule::I32> _153017_runes = static_cast<jule::Slice<jule::I32>>(_2445e5725_ReadStr(_14939_c.ptr()));;
					jule::Ptr<_24685a45a_SliceExprModel> _153121_model = jule::new_ptr<_24685a45a_SliceExprModel>(_24685a45a_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b7ccb23:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_2445e359c_Const> _153625_rc = static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								(*(_153625_rc))._field_Kind=(*(_15079_prim))._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = (*(_153121_model))._field_Elems; __jule_push_dest.push(jule::Any(_153625_rc, &__jule_any_type19)); };
							}
							_iter_next_22b7ccb23:;
							++it;
							goto _iter_begin_22b7ccb23;
						}
						_iter_end_22b7ccb23:;
					};
					(*(_149248_d))._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*(_149248_d))._field_Decl=true;
				}
			}
			_match_end_22b7c88bb:;
		};
	};
}



inline void _246995650_castStr(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data> _154630_d, jule::Ptr<_246819d43_Token> _154640_errorToken) {
	if ((_2469b72ed_Enum((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_24687b800_Enum> _154817_e = _2469b72ed_Enum((*(_154630_d))._field_Kind.ptr());;
		if (((_2469b6a4a_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _2469c06e1_IsStr(_2469b6a4a_Prim((*((*(_154817_e))._field_Kind))._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2445e359c_Const> _15549_c = (*(_154630_d))._field_Constant;;
	(*(_154630_d))._field_Constant=nullptr;
	if ((_2469b6a4a_Prim((*(_154630_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2469bc259_Prim> _155713_prim = _2469b6a4a_Prim((*(_154630_d))._field_Kind.ptr());;
		if (((!(_2469bdb51_IsU8(_155713_prim.ptr()))) && (!(_2469bd634_IsI32(_155713_prim.ptr()))))) {
			_246985d16_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
			return;;
		};
		if ((_15549_c != nullptr)) {
			{
				
				if (_2469bdb51_IsU8(_155713_prim.ptr())) {
					_case_begin_22b7d4d4a:;
					{
						(*(_154630_d))._field_Constant=static__2445e4339_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_2445e5ec8_AsU64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				else if (_2469bd634_IsI32(_155713_prim.ptr())) {
					_case_begin_22b7d4dc2:;
					{
						(*(_154630_d))._field_Constant=static__2445e4339_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_2445e5c42_AsI64(_15549_c.ptr()))));
						(*(_154630_d))._field_Model=jule::Any((*(_154630_d))._field_Constant, &__jule_any_type19);
						(*(_154630_d))._field_Decl=true;
					}
				}
				_match_end_22b7d4c4b:;
			};
		};
		return;;
	};
	jule::Ptr<_2469c1758_Slc> _157813_s = _2469b7aa1_Slc((*(_154630_d))._field_Kind.ptr());;
	if ((_157813_s == nullptr)) {
		_246985d16_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _158413_t = (*(_157813_s))._field_Elem;;
	jule::Ptr<_2469bc259_Prim> _15859_prim = _2469b6a4a_Prim(_158413_t.ptr());;
	if (((_15859_prim == nullptr) || ((!(_2469bdb51_IsU8(_15859_prim.ptr()))) && (!(_2469bd634_IsI32(_15859_prim.ptr())))))) {
		_246985d16_pushErr(_self_, _154640_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_154630_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
}



inline void _246995a6d_castInt(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _159230_t, jule::Ptr<_246983ac2_Data> _159248_d, jule::Ptr<_246819d43_Token> _159258_errorToken) {
	if (_246984496_IsConst(_159248_d.ptr())) {
		jule::Ptr<_2469bc259_Prim> _159413_prim = _2469b6a4a_Prim(_159230_t.ptr());;
		{
			
			if (_2445e23e2_IsSigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_22b7dc7d1:;
				{
					_2445e6517_SetI64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			else if (_2445e2700_IsUnsigInt((*(_159413_prim))._field_Kind)) {
				_case_begin_22b7dc858:;
				{
					_2445e67c0_SetU64((*(_159248_d))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*(_159248_d))._field_Constant.ptr())));
				}
			}
			_match_end_22b7dc737:;
		};
	} else {
		(*(_159248_d))._field_Constant=nullptr;
	};
	if ((_2469b72ed_Enum((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_24687b800_Enum> _160613_e = _2469b72ed_Enum((*(_159248_d))._field_Kind.ptr());;
		if (_2445e30c4_IsNum(_2469b47a1_Str((*((*(_160613_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_2469b6cd1_Sptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2469bc259_Prim> _161313_prim = _2469b6a4a_Prim(_159230_t.ptr());;
		if ((!(_2469c01c4_IsUintptr(_161313_prim.ptr())))) {
			_246985d16_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_159230_t.ptr()), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_2469b7067_Ptr((*(_159248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_2469bc259_Prim> _162013_prim = _2469b6a4a_Prim(_159230_t.ptr());;
		if (_2469c01c4_IsUintptr(_162013_prim.ptr())) {
		} else if ((!(_24698680b_isUnsafe(_self_)))) {
			_246985d16_pushErr(_self_, _159258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _16299_prim = _2469b6a4a_Prim((*(_159248_d))._field_Kind.ptr());;
	if (((_16299_prim != nullptr) && _2445e30c4_IsNum(_2469bc59a_Str(_16299_prim.ptr())))) {
		return;;
	};
	_246985d16_pushErr(_self_, _159258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_159248_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_159230_t.ptr()), &__jule_any_type4)}));
}



inline void _246995e8b_castNum(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _163730_t, jule::Ptr<_246983ac2_Data> _163748_d, jule::Ptr<_246819d43_Token> _163758_errorToken) {
	if (_246984496_IsConst(_163748_d.ptr())) {
		jule::Ptr<_2469bc259_Prim> _163913_prim = _2469b6a4a_Prim(_163730_t.ptr());;
		{
			
			if (_2445e2d0a_IsFloat((*(_163913_prim))._field_Kind)) {
				_case_begin_22b7e7d2a:;
				{
					_2445e70d9_SetF64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::F64>(_2445e625e_AsF64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_2445e23e2_IsSigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_22b7e7da2:;
				{
					_2445e6517_SetI64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			else if (_2445e2700_IsUnsigInt((*(_163913_prim))._field_Kind)) {
				_case_begin_22b7e7e29:;
				{
					_2445e67c0_SetU64((*(_163748_d))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*(_163748_d))._field_Constant.ptr())));
				}
			}
			_match_end_22b7e7c70:;
		};
	} else {
		(*(_163748_d))._field_Constant=nullptr;
	};
	if ((_2469b72ed_Enum((*(_163748_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_24687b800_Enum> _165313_e = _2469b72ed_Enum((*(_163748_d))._field_Kind.ptr());;
		if (_2445e30c4_IsNum(_2469b47a1_Str((*((*(_165313_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2469bc259_Prim> _16599_prim = _2469b6a4a_Prim((*(_163748_d))._field_Kind.ptr());;
	if (((_16599_prim != nullptr) && _2445e30c4_IsNum(_2469bc59a_Str(_16599_prim.ptr())))) {
		return;;
	};
	_246985d16_pushErr(_self_, _163758_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_163748_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str(_163730_t.ptr()), &__jule_any_type4)}));
}



inline void _2469963a9_castPrim(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _166731_t, jule::Ptr<_246983ac2_Data> _166749_d, jule::Ptr<_246819d43_Token> _166759_errorToken) {
	jule::Ptr<_2469bc259_Prim> _16689_prim = _2469b6a4a_Prim(_166731_t.ptr());;
	{
		
		if (_2469c0977_IsAny(_16689_prim.ptr())) {
			_case_begin_22b800a14:;
			{
				(*(_166749_d))._field_Constant=nullptr;
			}
		}
		else if (_2469c06e1_IsStr(_16689_prim.ptr())) {
			_case_begin_22b800a8b:;
			{
				_246995650_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_2445e29b9_IsInt(_2469bc59a_Str(_16689_prim.ptr()))) {
			_case_begin_22b80067e:;
			{
				_246995a6d_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_2445e30c4_IsNum(_2469bc59a_Str(_16689_prim.ptr()))) {
			_case_begin_22b800706:;
			{
				_246995e8b_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_22b800618:;
			{
				_246985d16_pushErr(_self_, _166759_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str(_166731_t.ptr()), &__jule_any_type4)}));
			}
		}
		_match_end_22b8005b3:;
	};
}



inline void _24699671c_castConstant(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind>* _168436_t, jule::Ptr<_246983ac2_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_246984496_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _16889_prim = _2469b6a4a_Prim((*(_168436_t)).ptr());;
	_2469b01e7_castConstByType(&((*(_16889_prim))._field_Kind), _168455_d);
	(*((*(_168455_d))))._field_Model=jule::Any((*((*(_168455_d))))._field_Constant, &__jule_any_type19);
}



inline void _246996b3a_castTypeEnum(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind>* _169336_t, jule::Ptr<_246983ac2_Data>* _169355_d, jule::Ptr<_246819d43_Token>* _169370_errorToken) {
	jule::I64 _16949_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_24690ac47_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169355_d))))._field_Kind), _169336_t, _169370_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _16949_n);
		_246985d16_pushErr(_self_, (*(_169370_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_169355_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_169336_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_169355_d))))._field_Constant=nullptr;
}



inline void _246997058_castTypeEnumT(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind>* _170237_t, jule::Ptr<_246983ac2_Data>* _170256_d, jule::Ptr<_246819d43_Token>* _170271_errorToken) {
	jule::I64 _17039_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_24690ac47_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*((*(_170256_d))))._field_Kind), _170271_errorToken)))) {
		(*((*(_self_))._field_s))._field_errors=(*((*(_self_))._field_s))._field_errors.slice(0LL, _17039_n);
		_246985d16_pushErr(_self_, (*(_170271_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_170256_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_170237_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_170256_d))))._field_Constant=nullptr;
}



inline jule::Ptr<_246983ac2_Data> _24699750e_evalCastByTypeNData(_2469857b6_Eval* _self_, jule::Ptr<_2469b43d8_TypeKind> _171142_t, jule::Ptr<_246983ac2_Data> _171160_d, jule::Ptr<_246819d43_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && (*(_171160_d))._field_Decl)) {
		_246985d16_pushErr(_self_, _171174_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_246983e79_IsNil(_171160_d.ptr())) {
			_case_begin_22b80c427:;
			{
				if ((!(_2469b6297_NilCompatible(_171142_t.ptr())))) {
					_246985d16_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_2469b47a1_Str(_171142_t.ptr()), &__jule_any_type4)}));
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if (((_2469b6a4a_Prim((*(_171160_d))._field_Kind.ptr()) != nullptr) && _2469c0977_IsAny(_2469b6a4a_Prim((*(_171160_d))._field_Kind.ptr()).ptr()))) {
			_case_begin_22b80c339:;
			{
				if ((_2469b72ed_Enum(_171142_t.ptr()) != nullptr)) {
					_246985d16_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_246986179_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_2469b7584_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_246985d16_pushErr(_self_, _171174_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*(_171160_d))._field_Constant=nullptr;
			}
		}
		else if ((_2469b7584_TypeEnum((*(_171160_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b80c0d6:;
			{
				_246996b3a_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_2469b7584_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80c14c:;
			{
				_246997058_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_2469b7067_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80cd0c:;
			{
				_246994583_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_2469b6cd1_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80cd73:;
			{
				_246994dbe_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_2469b7aa1_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80cdd9:;
			{
				_2469952dc_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_2469b80bd_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80ce50:;
			{
				_2469949a1_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_2469b6a4a_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_22b80ceb6:;
			{
				_2469963a9_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_24699671c_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_22b80beb5:;
			{
				_246985d16_pushErr(_self_, _171174_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str(_171142_t.ptr()), &__jule_any_type4)}));
				_171160_d=nullptr;
			}
		}
		_match_end_22b80b79a:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	(*(_171160_d))._field_Mutable=((*(_171160_d))._field_Mutable || (!(_2469b5c7a_Mutable((*(_171160_d))._field_Kind.ptr()))));
	if (((!((*(_171160_d))._field_Decl)) && ((_2469b72ed_Enum((*(_171160_d))._field_Kind.ptr()) == nullptr) || (!(_2469b4ae2_Equal((*((*(_2469b72ed_Enum((*(_171160_d))._field_Kind.ptr())))._field_Kind))._field_Kind, _171142_t)))))) {
		_2469ae647_applyCastKind(&(_171160_d), &(_171142_t));
		(*((*(_171160_d))._field_Model.cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92)))._field_Token=_171174_errorToken;
	} else {
		(*(_171160_d))._field_Kind=_171142_t;
	};
	(*(_171160_d))._field_Decl=false;
	(*(_171160_d))._field_Lvalue=false;
	(*(_171160_d))._field_untyped=false;
	if (_246984496_IsConst(_171160_d.ptr())) {
		(*((*(_171160_d))._field_Constant))._field_Kind=(*(_2469b6a4a_Prim(_171142_t.ptr())))._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_246983ac2_Data> _2469979b5_evalCastT(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_2469b43d8_TypeKind>* _178234_t, jule::Ptr<_246834654_Expr>* _178253_e, jule::Ptr<_246819d43_Token>* _178268_et) {
	jule::Ptr<_2469b43d8_TypeKind> _178313_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_178313_prefix;
	});;
	if ((_2469b7aa1_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_178253_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_22b81c4ae:;
				{
					(*(_self_))._field_prefix=(*(_178234_t));
				}
			}
			_match_end_22b81c459:;
		};
	};
	jule::Ptr<_246983ac2_Data> _179213_d = _2469a3a26_evalExpr(_self_, (*(_178253_e)));;
	if (((_179213_d == nullptr) || ((*(_self_))._field_prefix != nullptr))) {
		return _179213_d;;
	};
	return _24699750e_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179213_d, (*(_178268_et)));;
}



inline jule::Ptr<_246983ac2_Data> _246997d06_evalCast(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246836eb4_CastExpr> _179932_c) {
	jule::Ptr<_2469bb852_TypeSymbol> _180013_t = _24686d76a_buildType((*(_179932_c))._field_Kind);;
	jule::Bool _18019_ok = _246908904_checkType((*(_self_))._field_s, &(_180013_t), (*(_self_))._field_lookup);;
	if ((!(_18019_ok))) {
		return nullptr;;
	};
	return _2469979b5_evalCastT(_self_, &((*(_180013_t))._field_Kind), &((*(_179932_c))._field_Expr), &((*((*(_179932_c))._field_Kind))._field_Token));;
}



inline jule::Ptr<_246983ac2_Data> _246998147_evalNsSelection(_2469857b6_Eval* _self_, jule::Ptr<_24683738d_NsSelectionExpr> _180834_s) {
	jule::Str _18099_path = _2469d1207_buildLinkPathByTokens(&((*(_180834_s))._field_Ns));;
	jule::Ptr<_2468c8bd2_ImportInfo> _181013_imp = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d24a0_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>([=](jule::Ptr<_2468c8bd2_ImportInfo> _181049_imp) mutable -> jule::Bool {
		if ((((*(_180834_s))._field_Ns.len() == 1LL) && ((*(_181049_imp))._field_Alias == _18099_path))) {
			return true;;
		};
		return (((*(_181049_imp))._field_LinkPath == _18099_path) && _2468cb7ea_isAccessibleViaSelection(_181049_imp.ptr()));;
	}));;
	if ((_181013_imp == nullptr)) {
		_246985d16_pushErr(_self_, (*(_180834_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18099_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait<_2469d41b6_Lookup> _182213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_2469d41b6_Lookup>(_181013_imp, 1);
	;
	_246986575_disallowBuiltin(_self_);
	jule::Any _182713_def = _246988a83_getDef(_self_, &((*((*(_180834_s))._field_Ident))._field_Kind), false);;
	_246986377_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182213_lookup;
	jule::Ptr<_246983ac2_Data> _183013_d = _24698cc41_evalDef(_self_, &(_182713_def), (*(_180834_s))._field_Ident);;
	return _183013_d;;
}



inline jule::Ptr<_246983ac2_Data> _2469985ed_evalStructLitExplicit(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246853ba1_StructIns> _183445_s, jule::Slice<jule::Ptr<_246834654_Expr>> _183513_exprs, jule::Ptr<_246819d43_Token> _183533_errorToken) {
	jule::Bool _18369_ok = _2469042b2_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_183445_s))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_183445_s))._field_Generics.len()), _183533_errorToken);;
	if ((!(_18369_ok))) {
		return nullptr;;
	};
	if ((((*(_self_))._field_field != nullptr) && ((*((*((*(_self_))._field_field))._field_Decl))._field_Owner == (*(_183445_s))._field_Decl))) {
		_246985d16_pushErr(_self_.ptr(), _183533_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_183445_s))._field_Decl))._field_Ident, &__jule_any_type4)}));
	};
	_22b7b6436_pushReference(_self_.ptr(), &(_183445_s));
	_24698ae3c_checkDeprecated(_self_.ptr(), &((*((*(_183445_s))._field_Decl))._field_Directives), _183533_errorToken);
	_246976e17_structLitChecker _184913_slc = _246976e17_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_246978655_check(&_184913_slc, &(_183513_exprs));
	jule::Ptr<_246983ac2_Data> _185613_d = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_183445_s, 0)}), ._field_Mutable=(!((*(_self_))._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_246858d4e_StructLitExprModel>(_246858d4e_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184913_slc._field_args}), &__jule_any_type94), });;
	if ((*((*(_183445_s))._field_Decl))._field_Binded) {
		(*((*(_185613_d))._field_Kind))._field_BindIdent=(*((*(_183445_s))._field_Decl))._field_Ident;
	};
	return _185613_d;;
}



inline jule::Ptr<_246983ac2_Data> _24699893e_evalStructLit(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683969d_StructLit> _187237_lit) {
	jule::Ptr<_2469bb852_TypeSymbol> _187313_t = _24686d76a_buildType((*(_187237_lit))._field_Kind);;
	jule::Bool _18749_ok = _246908904_checkType((*(_self_))._field_s, &(_187313_t), (*(_self_))._field_lookup);;
	if ((!(_18749_ok))) {
		return nullptr;;
	};
	jule::Ptr<_246853ba1_StructIns> _187913_s = _2469b80bd_Struct((*(_187313_t))._field_Kind.ptr());;
	if ((_187913_s == nullptr)) {
		if ((_2469b6cd1_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
			_187913_s=_2469b80bd_Struct((*(_2469b6cd1_Sptr((*(_187313_t))._field_Kind.ptr())))._field_Elem.ptr());
			if ((_187913_s != nullptr)) {
				goto _julec_label_22b8325a1;
			};
		};
		_246985d16_pushErr(_self_.ptr(), (*((*(_187237_lit))._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_22b8325a1:;
	jule::Ptr<_246983ac2_Data> _189213_d = _2469985ed_evalStructLitExplicit(_self_, _187913_s, (*(_187237_lit))._field_Exprs, (*((*(_187237_lit))._field_Kind))._field_Token);;
	if ((_2469b6cd1_Sptr((*(_187313_t))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_246858d4e_StructLitExprModel> _189417_model = (*(_189213_d))._field_Model.cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94);;
		_2469acd60_makeStructLitAlloc(&(_189213_d), &(_189417_model));
	};
	return _189213_d;;
}



inline _2469c653d_typeChecker _246998bc5_typeChecker(_2469857b6_Eval* _self_) {
	return _2469076a0_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_246983ac2_Data> _246999016_evalType(_2469857b6_Eval* _self_, jule::Ptr<_246830320_TypeDecl> _190431_t) {
	jule::Ptr<_2469bb852_TypeSymbol> _190513_tk = _24686d76a_buildType(_190431_t);;
	jule::Bool _19069_ok = _246908904_checkType((*(_self_))._field_s, &(_190513_tk), (*(_self_))._field_lookup);;
	if ((!(_19069_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*(_190513_tk))._field_Kind, ._field_Model=jule::Any((*(_190513_tk))._field_Kind, &__jule_any_type83), ._field_Decl=true, });;
}



inline void _246999379_callTypeFn(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683837d_FnCallExpr>* _191735_fc, jule::Ptr<_246983ac2_Data>* _191757_d) {
	if (((*((*(_191735_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_191735_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr(_self_.ptr(), (*((*((*(_191735_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_191757_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_191735_fc))))._field_IsCo) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*((*(_191735_fc))))._field_Exception != nullptr)) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_191735_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*((*(_191735_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_246834654_Expr> _193317_arg = (*((*(_191735_fc))))._field_Args[0LL];;
		(*(_191757_d))=_2469979b5_evalCastT(_self_, &((*((*(_191757_d))))._field_Kind), &(_193317_arg), &((*(_193317_arg))._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*((*(_191757_d))))._field_Decl=false;
	};
}



inline void _2469996dc_callBuiltinFn(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683837d_FnCallExpr>* _194338_fc, jule::Ptr<_246983ac2_Data>* _194360_d) {
	if ((!(_246838702_Unhandled((*(_194338_fc)).ptr())))) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_194338_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=(*(_2469b7d37_Fn((*((*(_194360_d))))._field_Kind.ptr())))._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*((*(_194360_d))))._field_Mutable=true;
}



inline void _246999a50_checkFnOfConcurrentCall(_2469857b6_Eval* _self_, jule::Ptr<_246868c1b_FnIns>* _195543_f, jule::Ptr<_246819d43_Token> _195554_errorToken) {
	if (_24698680b_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_195543_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b84122a:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> *_195916_p = it;
			{
				if (_24686495e_IsSelf((*((*(_195916_p))))._field_Decl.ptr())) {
					if ((!(_246864be5_IsRef((*((*(_195916_p))))._field_Decl.ptr())))) {
						_246985d16_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_246986179_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_195916_p))))._field_Decl))._field_Reference) {
					_246985d16_pushErr(_self_, _195554_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_246986179_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_22b84122a:;
			++it;
			goto _iter_begin_22b84122a;
		}
		_iter_end_22b84122a:;
	};
}



inline void _246999e6d_processExceptionalHandler(_2469857b6_Eval* _self_, jule::Ptr<_246868c1b_FnIns>* _197449_f, jule::Ptr<_24683837d_FnCallExpr>* _197465_fc, jule::Ptr<_246983ac2_Data>* _197487_d) {
	jule::Bool _19759_resultNeeded = ((!(_24686628a_IsVoid((*((*(_197449_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_2468aea64_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_2468a7760_Scope> _197717_ch = nullptr;;
	jule::Ptr<_24685a081_FnCallExprModel> _197913_model = (*((*(_197487_d))))._field_Model.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_2468aea64_scopeChecker> _198313_sc = (*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0);;
	_197617_csc=_2468c17ac_newChildChecker(_198313_sc);
	if (_19759_resultNeeded) {
		(*(_197617_csc))._field_result=(*(_197449_f));
	};
	_197717_ch=_2468b485a_getChild(_198313_sc.ptr());
	(*((*((*(_197465_fc))))._field_Exception))._field_Parent=(*(_198313_sc))._field_tree;
	{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*((*(_197617_csc))._field_table))._field_Vars; __jule_push_dest.push(_2469ad1d4_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_2468b4c78_checkChildSsc(_198313_sc, &((*((*(_197465_fc))))._field_Exception), &(_197717_ch), &(_197617_csc));
	(*(_197913_model))._field_Assigned=_19759_resultNeeded;
	(*(_197913_model))._field_Except=_197717_ch;
	if ((_19759_resultNeeded && ((*(_197617_csc))._field_result != nullptr))) {
		_246985d16_pushErr(_self_, (*((*(_197465_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _24699a2d1_callFn(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683837d_FnCallExpr>* _200131_fc, jule::Ptr<_246983ac2_Data>* _200153_d) {
	jule::Ptr<_246868c1b_FnIns> _200213_f = _2469b7d37_Fn((*((*(_200153_d))))._field_Kind.ptr());;
	if (_24686a1a1_IsBuiltin(_200213_f.ptr())) {
		_2469996dc_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_246986a92_isGlobal(_self_.ptr()) && (*((*(_200213_f))._field_Decl))._field_Exceptional)) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_246986179_pushSuggestion(_self_.ptr(), jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_246866521_IsMethod((*(_200213_f))._field_Decl.ptr()))) && _2469d02a0_hasDirective(&((*((*(_200213_f))._field_Decl))._field_Directives), jule::Str::lit("test", 4)))) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_200153_d))))._field_Mutable)) && _246866521_IsMethod((*(_200213_f))._field_Decl.ptr())) && (!((*((*(_200213_f))._field_Decl))._field_Statically))) && (*((*((*(_200213_f))._field_Decl))._field_Params[0LL]))._field_Mutable)) {
		if ((!((*(_self_))._field_immutable))) {
			_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_246858d4e_StructLitExprModel> _202817_lit = _2469b1418_isLitBased(&((*((*(_200153_d))))._field_Model));;
			if ((_202817_lit == nullptr)) {
				_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_24697692d_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_202817_lit));
			};
		};
	} else if (((!(_24698680b_isUnsafe(_self_.ptr()))) && (*((*(_200213_f))._field_Decl))._field_Unsafety)) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204013_dynamicAnnotation = ((((*((*(_200213_f))._field_Decl))._field_Generics.len() > 0LL) && ((*(_200213_f))._field_Generics.len() == 0LL)) && ((*(_200213_f))._field_Params.len() > 0LL));;
	if (_204013_dynamicAnnotation) {
		(*(_200213_f))._field_Generics=jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>>::alloc((*((*(_200213_f))._field_Decl))._field_Generics.len(), (*((*(_200213_f))._field_Decl))._field_Generics.len());
	} else if (((*(_200213_f))._field_Generics.len() != (*((*(_200213_f))._field_Decl))._field_Generics.len())) {
		_2469042b2_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_200213_f))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_200213_f))._field_Generics.len()), (*((*(_200131_fc))))._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_246900148_Sema> _204913_old = (*(_self_))._field_s;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		(*(_self_))._field_s=(*((*((*(_200213_f))._field_Decl))._field_Owner))._field_sema;
	};
	__JULE_DEFER({
		if ((_204913_old != (*(_self_))._field_s)) {
			((*(_204913_old))._field_errors).append((*((*(_self_))._field_s))._field_errors);;
			(*((*(_self_))._field_s))._field_errors=nullptr;
		};
		(*(_self_))._field_s=_204913_old;
	});;
	_246973ed0_fnCallArgChecker _206213_fcac = _246973ed0_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_200131_fc))))._field_Args, ._field_errorToken=(*((*(_200131_fc))))._field_Token, ._field_dynamicAnnotation=_204013_dynamicAnnotation, };;
	if ((!(_204013_dynamicAnnotation))) {
		if ((!((*(_200213_f))._field_reloaded))) {
			jule::Bool _207117_ok = _24690cd8c_reloadFnInsTypes((*(_self_))._field_s, _200213_f);;
			(*(_200213_f))._field_reloaded=true;
			if ((!(_207117_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_246868c1b_FnIns> _207817_existInstance = _246867885_appendInstance((*(_200213_f))._field_Decl.ptr(), &(_200213_f));;
		if ((_207817_existInstance != nullptr)) {
			_200213_f=_207817_existInstance;
		};
	} else if ((!(_24690b5e9_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_200213_f), &(_206213_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206213_fcac._field_f=_200213_f;
	jule::Bool _208913_ok = false;;
	if (((*((*(_200213_f))._field_Decl))._field_Owner != nullptr)) {
		std::swap(_204913_old, (*(_self_))._field_s);
		_208913_ok=_246976587_check(&_206213_fcac);
		std::swap(_204913_old, (*(_self_))._field_s);
	} else {
		_208913_ok=_246976587_check(&_206213_fcac);
	};
	if (_204013_dynamicAnnotation) {
		if ((!(_208913_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_246992680_checkGenericFn(_self_, &(_200213_f), &((*((*(_200131_fc))))._field_Token), &((*((*(_200153_d))))._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210913_callModel = (*((*(_200153_d))))._field_Model;;
	if (_24686628a_IsVoid((*(_200213_f))._field_Decl.ptr())) {
		(*(_200153_d))=_2469ae856_buildVoidData();
	} else {
		(*((*(_200153_d))))._field_Kind=(*(_200213_f))._field_Result;
		(*((*(_200153_d))))._field_Lvalue=false;
	};
	jule::Ptr<_24685a081_FnCallExprModel> _211813_model = jule::new_ptr<_24685a081_FnCallExprModel>(_24685a081_FnCallExprModel{._field_Token=(*((*(_200131_fc))))._field_Token, ._field_Func=_200213_f, ._field_IsCo=(*((*(_200131_fc))))._field_IsCo, ._field_Expr=_210913_callModel, ._field_Args=_206213_fcac._field_argModels, });;
	(*((*(_200153_d))))._field_Model=jule::Any(_211813_model, &__jule_any_type34);
	(*((*(_200153_d))))._field_Mutable=true;
	if ((*((*(_200213_f))._field_Decl))._field_Exceptional) {
		if ((*((*(_200131_fc))))._field_IsCo) {
			_246902c83_pushErr((*(_self_))._field_s.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_2469030e6_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_246838702_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_22b865e42:;
				{
					_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_246986179_pushSuggestion(_self_.ptr(), jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_246838988_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_22b865ea8:;
				{
					goto _match_end_22b864935;
				}
			}
			else {
				_case_begin_22b86498a:;
				{
					_246999e6d_processExceptionalHandler(_self_.ptr(), &(_200213_f), _200131_fc, _200153_d);
				}
			}
			_match_end_22b864935:;
		};
	} else if ((!(_246838702_Unhandled((*(_200131_fc)).ptr())))) {
		_246985d16_pushErr(_self_.ptr(), (*((*(_200131_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_200131_fc))))._field_IsCo) {
		_246999a50_checkFnOfConcurrentCall(_self_.ptr(), &((*(_211813_model))._field_Func), (*((*(_200131_fc))))._field_Token);
	};
}



inline jule::Ptr<_246983ac2_Data> _24699a622_evalFnCall(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_24683837d_FnCallExpr> _215334_fc) {
	jule::Ptr<_2469b43d8_TypeKind> _215413_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_215413_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_215334_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22b86a3ca:;
			{
				if ((*((*((*(_215334_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _246b29e44_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_22b86a375:;
	};
	jule::Ptr<_246983ac2_Data> _216713_d = _2469a2c12_evalExprKind(_self_, (*((*(_215334_fc))._field_Expr))._field_Kind);;
	if ((_216713_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_216713_d))._field_Decl) {
		_246999379_callTypeFn(_self_, &(_215334_fc), &(_216713_d));
		return _216713_d;;
	};
	if ((_2469b7d37_Fn((*(_216713_d))._field_Kind.ptr()) == nullptr)) {
		_246985d16_pushErr(_self_.ptr(), (*(_215334_fc))._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_24699a2d1_callFn(_self_, &(_215334_fc), &(_216713_d));
	return _216713_d;;
}



inline jule::Ptr<_246983ac2_Data> _24699aa1d_evalEnumStatic(_2469857b6_Eval* _self_, jule::Ptr<_24687b800_Enum> _218637_enm, jule::Ptr<_246819d43_Token> _218649_ident) {
	jule::Ptr<_24687ac83_EnumItem> _218713_item = _24687c3e4_FindItem(_218637_enm.ptr(), (*(_218649_ident))._field_Kind);;
	if ((_218713_item == nullptr)) {
		_246985d16_pushErr(_self_, _218649_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_218637_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_218649_ident))._field_Kind, &__jule_any_type4)}));
	};
	return _2469b114e_evalEnumStatic(&(_218637_enm), &(_218713_item));;
}



inline jule::Ptr<_246983ac2_Data> _24699ae19_evalTypeEnumStatic(_2469857b6_Eval* _self_, jule::Ptr<_24687d00a_TypeEnum> _219441_enm, jule::Ptr<_246819d43_Token> _219457_ident) {
	jule::Ptr<_24687c933_TypeEnumItem> _219513_item = _24687dabb_FindItem(_219441_enm.ptr(), (*(_219457_ident))._field_Kind);;
	if ((_219513_item == nullptr)) {
		_246985d16_pushErr(_self_, _219457_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_219441_enm))._field_Ident, &__jule_any_type4),jule::Any((*(_219457_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_2469b72ed_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b87312a:;
			{
				return _246989413__evalEnum(_self_, _2469b72ed_Enum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_2469b7584_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b873191:;
			{
				return _246989b50__evalTypeEnum(_self_, _2469b7584_TypeEnum((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else if ((_2469b80bd_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b873207:;
			{
				return _24698a38c__evalStruct(_self_, _2469b80bd_Struct((*((*(_219513_item))._field_Kind))._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_22b87159b:;
			{
				jule::Ptr<_246983ac2_Data> _220817_d = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*((*(_219513_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_220817_d))._field_Model=jule::Any((*(_220817_d))._field_Kind, &__jule_any_type83);
				return _220817_d;;
			}
		}
		_match_end_22b872316:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699b315_evalStructStatic(_2469857b6_Eval* _self_, jule::Ptr<_246853ba1_StructIns> _221739_s, jule::Ptr<_246819d43_Token> _221754_ident) {
	jule::Ptr<_246983ac2_Data> _221813_d = jule::new_ptr<_246983ac2_Data>();;
	;
	jule::Ptr<_246865d17_Fn> _222213_method = _246854c18_FindMethod(_221739_s.ptr(), (*(_221754_ident))._field_Kind, true);;
	if ((_222213_method != nullptr)) {
		if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_222213_method))._field_Public, (*(_222213_method))._field_Token)))) {
			_246985d16_pushErr(_self_, _221754_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
			_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_246868c1b_FnIns> _222917_ins = _246867577_instance(_222213_method);;
		(*(_222917_ins))._field_Owner=_221739_s;
		_22b6e53a9_pushReference(_self_, &(_222917_ins));
		(*(_221813_d))._field_Model=jule::Any(jule::new_ptr<_24685d0c8_StructStaticIdentExprModel>(_24685d0c8_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=(*(_221813_d))._field_Model, ._field_Method=_222917_ins}), &__jule_any_type95);
		(*(_221813_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_222917_ins, 1)});
		return _221813_d;;
	};
	jule::Ptr<_246922555_Var> _224313_sttc = _24685539a_FindStatic(_221739_s.ptr(), (*(_221754_ident))._field_Kind);;
	if ((_224313_sttc != nullptr)) {
		return _24698c449_evalVar(_self_, _224313_sttc, _221754_ident);;
	};
	_246985d16_pushErr(_self_, _221754_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_221739_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(_221754_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_246983ac2_Data> _24699b7bb_evalTraitSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data> _225240_d, jule::Ptr<_2468790e4_Trait> _225254_trt, jule::Ptr<_246819d43_Token> _225271_ident) {
	jule::Ptr<_246865d17_Fn> _225313_f = _246879c93_FindMethod(_225254_trt.ptr(), (*(_225271_ident))._field_Kind);;
	if ((_225313_f == nullptr)) {
		_246985d16_pushErr(_self_, _225271_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_225254_trt))._field_Ident, &__jule_any_type4),jule::Any((*(_225271_ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_246867577_instance(_225313_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_24685c281_TraitSubIdentExprModel>(_24685c281_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=(*(_225240_d))._field_Model, ._field_Method=_225313_f, ._field_Trt=_225254_trt}), &__jule_any_type96), });;
}



inline jule::Ptr<_246983ac2_Data> _24699bd2c_evalStructSubIdentField(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _227247_d, jule::Ptr<_246853ba1_StructIns>* _227262_s, jule::Ptr<_246819d43_Token>* _227282_tok, jule::Ptr<_246853101_FieldIns>* _2272100_f) {
	jule::Ptr<_24685cb22_StructSubIdentExprModel> _227313_model = jule::new_ptr<_24685cb22_StructSubIdentExprModel>(_24685cb22_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*((*(_227247_d))))._field_Model=jule::Any(_227313_model, &__jule_any_type97);
	(*((*(_227247_d))))._field_Kind=(*((*(_2272100_f))))._field_Kind;
	(*((*(_227247_d))))._field_Lvalue=true;
	if (((*((*((*(_2272100_f))))._field_Decl))._field_Mutable && (!((*((*(_227247_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_22b883800:;
				{
					jule::Ptr<_2468aea64_scopeChecker> _228717_scope = _2468b2b55_getRoot((*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0));;
					(*((*(_227247_d))))._field_Mutable=(((*(_228717_scope))._field_owner != nullptr) && ((*((*(_228717_scope))._field_owner))._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_22b88379a:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_246983ac2_Data> _24699c38d_evalStructSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data> _229541_d, jule::Ptr<_246853ba1_StructIns> _229555_s, jule::Ptr<_246837767_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_246853101_FieldIns> _229613_f = _246855059_FindField(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind);;
	if ((_229613_f != nullptr)) {
		if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_229613_f))._field_Decl))._field_Public, (*((*(_229613_f))._field_Decl))._field_Token)))) {
			_246985d16_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_229613_f))._field_Decl))._field_Ident, &__jule_any_type4)}));
			_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _24699bd2c_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &((*(_229574_si))._field_Ident), &(_229613_f));;
	};
	;
	jule::Ptr<_246865d17_Fn> _230613_m = _246854c18_FindMethod(_229555_s.ptr(), (*((*(_229574_si))._field_Ident))._field_Kind, false);;
	if ((_230613_m == nullptr)) {
		_246985d16_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_229555_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*((*(_229574_si))._field_Ident))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_230613_m))._field_Public, (*(_230613_m))._field_Token)))) {
		_246985d16_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_230613_m))._field_Ident, &__jule_any_type4)}));
		_246986179_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_246864be5_IsRef((*(_230613_m))._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_246985d16_pushErr(_self_, (*(_229574_si))._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_24698ae3c_checkDeprecated(_self_, &((*(_230613_m))._field_Directives), (*(_229574_si))._field_Ident);
	jule::Ptr<_246868c1b_FnIns> _232213_ins = _246867577_instance(_230613_m);;
	(*(_232213_ins))._field_Owner=_229555_s;
	_22b6e53a9_pushReference(_self_, &(_232213_ins));
	jule::Ptr<_246983ac2_Data> _232513_model = jule::new_ptr<_246983ac2_Data>((*(_229541_d)));;
	(*(_229541_d))._field_Model=jule::Any(jule::new_ptr<_24685cb22_StructSubIdentExprModel>(_24685cb22_StructSubIdentExprModel{._field_Token=(*(_229574_si))._field_Ident, ._field_Expr=_232513_model, ._field_Method=_232213_ins, ._field_Owner=_229555_s}), &__jule_any_type97);
	(*(_229541_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_232213_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_246983ac2_Data> _24699c6ce_evalIntTypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _233636_ident) {
	;
	{
		auto &_match_expr{ (*(_233636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b891d2a:;
			{
				jule::Ptr<_2445e359c_Const> _234017_c = static__2445e39dc_NewI64(static_cast<jule::I64>(_2445db8d6_MaxI(jule::Str::lit("int", 3))));;
				(*(_234017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25e40_primInt, ._field_Model=jule::Any(_234017_c, &__jule_any_type19), ._field_Constant=_234017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b892688:;
			{
				jule::Ptr<_2445e359c_Const> _234817_c = static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2445dbdd1_Min(jule::Str::lit("int", 3)))));;
				(*(_234817_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25e40_primInt, ._field_Model=jule::Any(_234817_c, &__jule_any_type19), ._field_Constant=_234817_c});;
			}
		}
		else {
			_case_begin_22b8919b7:;
			{
				_246985d16_pushErr(_self_, _233636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_233636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b891962:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699ca20_evalUintTypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _236137_ident) {
	;
	{
		auto &_match_expr{ (*(_236137_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b894e4e:;
			{
				jule::Ptr<_2445e359c_Const> _236517_c = static__2445e3ca6_NewU64(static_cast<jule::U64>(_2445dbba0_MaxU(jule::Str::lit("uint", 4))));;
				(*(_236517_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25a66_primUint, ._field_Model=jule::Any(_236517_c, &__jule_any_type19), ._field_Constant=_236517_c});;
			}
		}
		else {
			_case_begin_22b89523a:;
			{
				_246985d16_pushErr(_self_, _236137_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_236137_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8951d5:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699cd61_evalI8TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _237835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_237835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b89843b:;
			{
				jule::Ptr<_2445e359c_Const> _238417_c = static__2445e39dc_NewI64(127LL);;
				(*(_238417_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b26209_primI8, ._field_Model=jule::Any(_238417_c, &__jule_any_type19), ._field_Constant=_238417_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b898c99:;
			{
				jule::Ptr<_2445e359c_Const> _239217_c = static__2445e39dc_NewI64(-128LL);;
				(*(_239217_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b26209_primI8, ._field_Model=jule::Any(_239217_c, &__jule_any_type19), ._field_Constant=_239217_c});;
			}
		}
		else {
			_case_begin_22b8980c8:;
			{
				_246985d16_pushErr(_self_, _237835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_237835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b898073:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699d1a2_evalI16TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _240536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b89c0cc:;
			{
				jule::Ptr<_2445e359c_Const> _241117_c = static__2445e39dc_NewI64(32767LL);;
				(*(_241117_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b264c3_primI16, ._field_Model=jule::Any(_241117_c, &__jule_any_type19), ._field_Constant=_241117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b89c93a:;
			{
				jule::Ptr<_2445e359c_Const> _241917_c = static__2445e39dc_NewI64(-32768LL);;
				(*(_241917_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b264c3_primI16, ._field_Model=jule::Any(_241917_c, &__jule_any_type19), ._field_Constant=_241917_c});;
			}
		}
		else {
			_case_begin_22b89bc69:;
			{
				_246985d16_pushErr(_self_, _240536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_240536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b89bc14:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699d4e3_evalI32TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _243236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8a0c6d:;
			{
				jule::Ptr<_2445e359c_Const> _243817_c = static__2445e39dc_NewI64(2147483647LL);;
				(*(_243817_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b2678c_primI32, ._field_Model=jule::Any(_243817_c, &__jule_any_type19), ._field_Constant=_243817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b8a15cb:;
			{
				jule::Ptr<_2445e359c_Const> _244617_c = static__2445e39dc_NewI64(-2147483648LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b2678c_primI32, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_22b8a090a:;
			{
				_246985d16_pushErr(_self_, _243236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_243236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8a08a5:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699d834_evalI64TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _245936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_245936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8a490e:;
			{
				jule::Ptr<_2445e359c_Const> _246517_c = static__2445e39dc_NewI64(jule::MAX_I64);;
				(*(_246517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b26a56_primI64, ._field_Model=jule::Any(_246517_c, &__jule_any_type19), ._field_Constant=_246517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b8a526c:;
			{
				jule::Ptr<_2445e359c_Const> _247317_c = static__2445e39dc_NewI64(jule::MIN_I64);;
				(*(_247317_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b26a56_primI64, ._field_Model=jule::Any(_247317_c, &__jule_any_type19), ._field_Constant=_247317_c});;
			}
		}
		else {
			_case_begin_22b8a459b:;
			{
				_246985d16_pushErr(_self_, _245936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_245936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8a4546:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699db75_evalU8TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _248635_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_248635_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8acecd:;
			{
				jule::Ptr<_2445e359c_Const> _249117_c = static__2445e3ca6_NewU64(255LLU);;
				(*(_249117_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b26d20_primU8, ._field_Model=jule::Any(_249117_c, &__jule_any_type19), ._field_Constant=_249117_c});;
			}
		}
		else {
			_case_begin_22b8ac74c:;
			{
				_246985d16_pushErr(_self_, _248635_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_248635_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8acb15:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699deb6_evalU16TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _250436_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8b08c6:;
			{
				jule::Ptr<_2445e359c_Const> _250917_c = static__2445e3ca6_NewU64(65535LLU);;
				(*(_250917_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b270d9_primU16, ._field_Model=jule::Any(_250917_c, &__jule_any_type19), ._field_Constant=_250917_c});;
			}
		}
		else {
			_case_begin_22b8b0145:;
			{
				_246985d16_pushErr(_self_, _250436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_250436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8b050d:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699e307_evalU32TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _252236_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252236_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8b32be:;
			{
				jule::Ptr<_2445e359c_Const> _252717_c = static__2445e3ca6_NewU64(4294967295LLU);;
				(*(_252717_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b273a3_primU32, ._field_Model=jule::Any(_252717_c, &__jule_any_type19), ._field_Constant=_252717_c});;
			}
		}
		else {
			_case_begin_22b8b2a3d:;
			{
				_246985d16_pushErr(_self_, _252236_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_252236_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8b2e06:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699e648_evalU64TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _254036_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8b5bb7:;
			{
				jule::Ptr<_2445e359c_Const> _254517_c = static__2445e3ca6_NewU64(jule::MAX_U64);;
				(*(_254517_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27826_primU64, ._field_Model=jule::Any(_254517_c, &__jule_any_type19), ._field_Constant=_254517_c});;
			}
		}
		else {
			_case_begin_22b8b5436:;
			{
				_246985d16_pushErr(_self_, _254036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_254036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8b57ee:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699e989_evalF32TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _255836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_255836_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8b8d41:;
			{
				jule::Ptr<_2445e359c_Const> _256517_c = static__2445e4603_NewF64(340282346638528860000000000000000000000.0);;
				(*(_256517_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27ae0_primF32, ._field_Model=jule::Any(_256517_c, &__jule_any_type19), ._field_Constant=_256517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b8b969e:;
			{
				jule::Ptr<_2445e359c_Const> _257317_c = static__2445e4603_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_257317_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27ae0_primF32, ._field_Model=jule::Any(_257317_c, &__jule_any_type19), ._field_Constant=_257317_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_22b8b9715:;
			{
				jule::Ptr<_2445e359c_Const> _258117_c = static__2445e4603_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_258117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27ae0_primF32, ._field_Model=jule::Any(_258117_c, &__jule_any_type19), ._field_Constant=_258117_c});;
			}
		}
		else {
			_case_begin_22b8b89cd:;
			{
				_246985d16_pushErr(_self_, _255836_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_255836_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8b8978:;
	};
}



inline jule::Ptr<_246983ac2_Data> _24699ecca_evalF64TypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246819d43_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_22b8bdc14:;
			{
				jule::Ptr<_2445e359c_Const> _260117_c = static__2445e4603_NewF64(jule::MAX_F64);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27da9_primF64, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_22b8be572:;
			{
				jule::Ptr<_2445e359c_Const> _260917_c = static__2445e4603_NewF64(jule::MIN_F64);;
				(*(_260917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27da9_primF64, ._field_Model=jule::Any(_260917_c, &__jule_any_type19), ._field_Constant=_260917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_22b8be5d8:;
			{
				jule::Ptr<_2445e359c_Const> _261717_c = static__2445e4603_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_261717_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b27da9_primF64, ._field_Model=jule::Any(_261717_c, &__jule_any_type19), ._field_Constant=_261717_c});;
			}
		}
		else {
			_case_begin_22b8bd8a1:;
			{
				_246985d16_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8bd84b:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a01c6_evalPrimStatic(_2469857b6_Eval* _self_, jule::Str _263033_kind, jule::Ptr<_246819d43_Token> _263044_ident) {
	{
		auto &_match_expr{ _263033_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_22b8c2b91:;
			{
				return _24699c6ce_evalIntTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_22b8c2586:;
			{
				return _24699ca20_evalUintTypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_22b8c2740:;
			{
				return _24699cd61_evalI8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22b8c27a6:;
			{
				return _24699d1a2_evalI16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22b8c281c:;
			{
				return _24699d4e3_evalI32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22b8c2883:;
			{
				return _24699d834_evalI64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_22b8c3477:;
			{
				return _24699db75_evalU8TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22b8c34dd:;
			{
				return _24699deb6_evalU16TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_22b8c3554:;
			{
				return _24699e307_evalU32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_22b8c35ba:;
			{
				return _24699e648_evalU64TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22b8c3631:;
			{
				return _24699e989_evalF32TypeStatic(_self_, _263044_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22b8c3697:;
			{
				return _24699ecca_evalF64TypeStatic(_self_, _263044_ident);;
			}
		}
		else {
			_case_begin_22b8bdb48:;
			{
				_246985d16_pushErr(_self_, _263044_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_263033_kind, &__jule_any_type4),jule::Any((*(_263044_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8bdae3:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a05c2_evalTypeStatic(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data> _266237_d, jule::Ptr<_246837767_SubIdentExpr> _266251_si) {
	{
		
		if ((_2469b6a4a_Prim((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8c7a64:;
			{
				return _2469a01c6_evalPrimStatic(_self_, _2469bc59a_Str(_2469b6a4a_Prim((*(_266237_d))._field_Kind.ptr()).ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_2469b72ed_Enum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8c878a:;
			{
				return _24699aa1d_evalEnumStatic(_self_, _2469b72ed_Enum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_2469b7584_TypeEnum((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8c8801:;
			{
				return _24699ae19_evalTypeEnumStatic(_self_, _2469b7584_TypeEnum((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else if ((_2469b80bd_Struct((*(_266237_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8c8867:;
			{
				return _24699b315_evalStructStatic(_self_, _2469b80bd_Struct((*(_266237_d))._field_Kind.ptr()), (*(_266251_si))._field_Ident);;
			}
		}
		else {
			_case_begin_22b8c76ac:;
			{
				_246985d16_pushErr(_self_, (*(_266251_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_266237_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b8c7613:;
	};
}



inline jule::Ptr<_246983ac2_Data> _22b8d04d9_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246890a9a_comptimeTypeInfo>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _246896c9e_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8d4796_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246881b35_comptimeStructField>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _2468834d8_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8d8a0e_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_24688819c_comptimeEnumField>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _246889236_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8dccbb_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_24688ab3e_comptimeParam>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _24688ca97_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8e2177_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246884de1_comptimeStatic>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _24688681b_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8e63e0_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_2468970ac_comptimeValue>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _2468995ed_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}

inline jule::Ptr<_246983ac2_Data> _22b8ea658_comptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_24689b006_comptimeFile>* _267857_ct, jule::Ptr<_246983ac2_Data>* _267877_d, jule::Ptr<_246837767_SubIdentExpr>* _267888_si) {
	jule::Ptr<_246983ac2_Data> _267913_cd = _24689c942_subIdent((*(_267857_ct)), &((*((*((*(_267888_si))))._field_Ident))._field_Kind));;
	if ((_267913_cd == nullptr)) {
		_246985d16_pushErr(_self_, (*((*(_267888_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_267877_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*((*(_267888_si))))._field_Ident))._field_Kind, &__jule_any_type4)}));
	};
	return _267913_cd;;
}



inline __jule_tuple_x_246983ac2_Data__jule_tuple_bool _2469a0e74_tryComptimeObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data>* _268646_d, jule::Ptr<_246837767_SubIdentExpr> _268660_si) {
	__jule_tuple_x_246983ac2_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_2469ba697_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cd9b0:;
			{
				jule::Ptr<_246890a9a_comptimeTypeInfo> _268917_ct = _2469ba697_comptimeTypeInfo((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8d04d9_comptimeObjSubIdent(_self_, &(_268917_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469b9124_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cd608:;
			{
				jule::Ptr<_246881b35_comptimeStructField> _269217_ct = _2469b9124_comptimeStructField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8d4796_comptimeObjSubIdent(_self_, &(_269217_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469b9641_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cd66e:;
			{
				jule::Ptr<_24688819c_comptimeEnumField> _269517_ct = _2469b9641_comptimeEnumField((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8d8a0e_comptimeObjSubIdent(_self_, &(_269517_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469b9b5d_comptimeParam((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cd6d5:;
			{
				jule::Ptr<_24688ab3e_comptimeParam> _269817_ct = _2469b9b5d_comptimeParam((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8dccbb_comptimeObjSubIdent(_self_, &(_269817_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469babb4_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cd74b:;
			{
				jule::Ptr<_246884de1_comptimeStatic> _270117_ct = _2469babb4_comptimeStatic((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8e2177_comptimeObjSubIdent(_self_, &(_270117_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469bae4a_comptimeValue((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cdd34:;
			{
				jule::Ptr<_2468970ac_comptimeValue> _270417_ct = _2469bae4a_comptimeValue((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8e63e0_comptimeObjSubIdent(_self_, &(_270417_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_2469bb1d1_comptimeFile((*((*(_268646_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b8cdd9a:;
			{
				jule::Ptr<_24689b006_comptimeFile> _270717_ct = _2469bb1d1_comptimeFile((*((*(_268646_d))))._field_Kind.ptr());;
				__jule_func_result.__jule_result_arg0 = _22b8ea658_comptimeObjSubIdent(_self_, &(_270717_ct), _268646_d, &(_268660_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b8cd592:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_22b8cd4e8:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a1370_evalObjSubIdent(_2469857b6_Eval* _self_, jule::Ptr<_246983ac2_Data> _271438_d, jule::Ptr<_246837767_SubIdentExpr> _271452_si) {
	if (_24681c7a2_IsIgnoreIdent((*((*(_271452_si))._field_Ident))._field_Kind)) {
		_246985d16_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_246983ac2_Data> _272117_compData;;
		jule::Bool _272127_ok = false;;
		({
			__jule_tuple_x_246983ac2_Data__jule_tuple_bool __jule_assign_result = _2469a0e74_tryComptimeObjSubIdent(_self_, &(_271438_d), _271452_si);
			_272117_compData = __jule_assign_result.__jule_result_arg0;
			_272127_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_272127_ok) {
			return _272117_compData;;
		};
	};
	jule::Ptr<_2469b43d8_TypeKind> _272713_kind = (*(_271438_d))._field_Kind;;
	{
		
		if ((_2469b7067_Ptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b90064c:;
			{
				jule::Ptr<_2469c454c_Ptr> _273013_ptr = _2469b7067_Ptr((*(_271438_d))._field_Kind.ptr());;
				if (_2469c5086_IsUnsafe(_273013_ptr.ptr())) {
					goto _match_end_22b9005c5;
				};
				if ((!(_24698680b_isUnsafe(_self_)))) {
					_246985d16_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_272713_kind=(*(_2469b7067_Ptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_2469b1704_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		else if ((_2469b6cd1_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b9006c4:;
			{
				_272713_kind=(*(_2469b6cd1_Sptr((*(_271438_d))._field_Kind.ptr())))._field_Elem;
				_2469b1704_makeImplicitDeref(&(_271438_d), (*(_271452_si))._field_Ident);
			}
		}
		_match_end_22b9005c5:;
	};
	{
		
		if ((_2469b8354_Trait((*(_271438_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b90382b:;
			{
				return _24699b7bb_evalTraitSubIdent(_self_, _271438_d, _2469b8354_Trait((*(_271438_d))._field_Kind.ptr()), (*(_271452_si))._field_Ident);;
			}
		}
		else if ((_2469b80bd_Struct(_272713_kind.ptr()) != nullptr)) {
			_case_begin_22b9038a3:;
			{
				jule::Ptr<_246853ba1_StructIns> _274813_s = _2469b80bd_Struct(_272713_kind.ptr());;
				if (_2469adbeb_isInstancedStruct(_274813_s)) {
					jule::Bool _275021_usedReferenceElem = (_2469b6cd1_Sptr((*(_271438_d))._field_Kind.ptr()) != nullptr);;
					return _24699c38d_evalStructSubIdent(_self_, _271438_d, _2469b80bd_Struct(_272713_kind.ptr()), _271452_si, _275021_usedReferenceElem);;
				};
			}
		}
		_match_end_22b9037c6:;
	};
	_246985d16_pushErr(_self_, (*(_271452_si))._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_271438_d))._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_246983ac2_Data> _2469a16b1_evalSubIdent(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246837767_SubIdentExpr> _275836_si) {
	jule::Ptr<_2469b43d8_TypeKind> _275913_prefix = (*(_self_))._field_prefix;;
	(*(_self_))._field_prefix=nullptr;
	__JULE_DEFER({
		(*(_self_))._field_prefix=_275913_prefix;
	});;
	jule::Ptr<_246983ac2_Data> _276213_d = _2469a2c12_evalExprKind(_self_, (*((*(_275836_si))._field_Expr))._field_Kind);;
	if ((_276213_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_276213_d))._field_Decl) {
		return _2469a05c2_evalTypeStatic(_self_.ptr(), _276213_d, _275836_si);;
	};
	return _2469a1370_evalObjSubIdent(_self_.ptr(), _276213_d, _275836_si);;
}



inline jule::Ptr<_246983ac2_Data> _2469a1a02_evalTuple(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246835325_TupleExpr> _277233_tup) {
	jule::Ptr<_2469c234c_Tuple> _277313_tupT = jule::new_ptr<_2469c234c_Tuple>();;
	(*(_277313_tupT))._field_Types=jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>::alloc(0LL, (*(_277233_tup))._field_Expr.len());
	jule::Ptr<_24685d79e_TupleExprModel> _277613_model = jule::new_ptr<_24685d79e_TupleExprModel>(_24685d79e_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_246983ac2_Data>>::alloc(0LL, (*(_277233_tup))._field_Expr.len())});;
	jule::Bool _278013_ok = true;;
	{
		auto expr = &((*(_277233_tup))._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b90c725:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _278121_expr = *it;
			{
				jule::Ptr<_246983ac2_Data> _278217_d = _2469a3a26_evalExpr(_self_, _278121_expr);;
				if ((_278217_d == nullptr)) {
					_278013_ok=false;
					goto _iter_next_22b90c725;
				};
				{ jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> &__jule_push_dest = (*(_277313_tupT))._field_Types; __jule_push_dest.push((*(_278217_d))._field_Kind); };
				{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = (*(_277613_model))._field_Datas; __jule_push_dest.push(_278217_d); };
			}
			_iter_next_22b90c725:;
			++it;
			goto _iter_begin_22b90c725;
		}
		_iter_end_22b90c725:;
	};
	if ((!(_278013_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_277313_tupT, 24)}), ._field_Model=jule::Any(_277613_model, &__jule_any_type81), });;
}



inline jule::Ptr<_246983ac2_Data> _2469a1ded_evalMap(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_2469c2dec_Map> _280131_m, jule::Ptr<_246839b54_BraceLit> _280144_lit) {
	jule::Ptr<_24685b66a_MapExprModel> _280213_model = jule::new_ptr<_24685b66a_MapExprModel>(_24685b66a_MapExprModel{._field_KeyKind=(*(_280131_m))._field_Key, ._field_ValKind=(*(_280131_m))._field_Val, });;
	{
		auto expr = &((*(_280144_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b911196:;
		if (it != expr_end) {
			jule::Ptr<_246834654_Expr> _280721_expr = *it;
			{
				{
					auto &_match_expr{ (*(_280721_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_22b912230:;
						{
							goto _match_end_22b911d34;
						}
					}
					else {
						_case_begin_22b911d89:;
						{
							_246985d16_pushErr(_self_.ptr(), (*(_280144_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_22b911d34:;
				};
				jule::Ptr<_24683a47e_KeyValPair> _281717_pair = (*(_280721_expr))._field_Kind.cast_ptr<_24683a47e_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_246983ac2_Data> _281917_key = _2469a3a26_evalExpr(_self_, (*(_281717_pair))._field_Key);;
				if ((_281917_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_246983ac2_Data> _282417_val = _2469a3a26_evalExpr(_self_, (*(_281717_pair))._field_Val);;
				if ((_282417_val == nullptr)) {
					return nullptr;;
				};
				_24690a791_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Key), &(_281917_key), (*(_281717_pair))._field_Colon);
				_24690a791_checkAssignType((*(_self_))._field_s, false, &((*(_280131_m))._field_Val), &(_282417_val), (*(_281717_pair))._field_Colon);
				{ jule::Slice<jule::Ptr<_24685b1b4_KeyValPairExprModel>> &__jule_push_dest = (*(_280213_model))._field_Entries; __jule_push_dest.push(jule::new_ptr<_24685b1b4_KeyValPairExprModel>(_24685b1b4_KeyValPairExprModel{._field_Key=(*(_281917_key))._field_Model, ._field_Val=(*(_282417_val))._field_Model})); };
			}
			_iter_next_22b911196:;
			++it;
			goto _iter_begin_22b911196;
		}
		_iter_end_22b911196:;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_280131_m, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_280213_model, &__jule_any_type98), });;
}



inline jule::Ptr<_246983ac2_Data> _2469a223e_evalBraceLit(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246839b54_BraceLit> _284536_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_22b918104:;
			{
				_246985d16_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2469b85da_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_22b91817b:;
			{
				return _2469a1ded_evalMap(_self_, _2469b85da_Map((*(_self_))._field_prefix.ptr()), _284536_lit);;
			}
		}
		else if ((_2469b80bd_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_22b917774:;
			{
				return _2469985ed_evalStructLitExplicit(_self_, _2469b80bd_Struct((*(_self_))._field_prefix.ptr()), (*(_284536_lit))._field_Exprs, (*(_284536_lit))._field_Token);;
			}
		}
		else {
			_case_begin_22b9173bc:;
			{
				_246985d16_pushErr(_self_.ptr(), (*(_284536_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22b911828:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a2580_evalAnonFunc(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246841ed0_FnDecl> _286036_decl) {
	_2469c653d_typeChecker _286113_tc = _2469c653d_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*(_self_))._field_lookup, ._field_lookup=(*(_self_))._field_lookup, };;
	jule::Ptr<_246868c1b_FnIns> _286613_ins = _2469cd215_buildFunc(&_286113_tc, _286036_decl);;
	if ((_286613_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22b91d093:;
			{
				jule::Ptr<_2468aea64_scopeChecker> _287217_sc = (*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0);;
				jule::Ptr<_2468aea64_scopeChecker> _287317_scc = _2468c17ac_newChildChecker(_287217_sc);;
				(*(_287317_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2468ad5bd_scopeLabel>>>(nullptr);
				(*(_287317_scc))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2468adb51_scopeGoto>>>(nullptr);
				(*(_287317_scc))._field_owner=nullptr;
				(*(_287317_scc))._field_childIndex=0LL;
				(*(_287317_scc))._field_it=0LLU;
				(*(_287317_scc))._field_cse=0LLU;
				(*(_287317_scc))._field_owner=_286613_ins;
				_24691bd79_checkFnInsSc((*(_self_))._field_s.ptr(), &(_286613_ins), &(_287317_scc));
			}
		}
		else {
			_case_begin_22b91cc1e:;
			{
				_24691c495_checkFnIns((*(_self_))._field_s, &(_286613_ins));
			}
		}
		_match_end_22b91cb20:;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_286613_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_24685acda_AnonFnExprModel>(_24685acda_AnonFnExprModel{._field_Func=_286613_ins, ._field_Global=_246986a92_isGlobal(_self_.ptr())}), &__jule_any_type99), });;
}



inline jule::Ptr<_246983ac2_Data> _2469a28c1_evalBinop(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246837c1d_BinopExpr> _289533_op) {
	_2469a5e79_binaryEval _289613_bs = static__2469a6562_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_2469bc259_Prim> _289913_prim = _2469b6a4a_Prim((*(_self_))._field_prefix.ptr());;
		if (((_289913_prim == nullptr) || (!(_2445e30c4_IsNum(_2469bc59a_Str(_289913_prim.ptr())))))) {
			jule::Ptr<_2469b43d8_TypeKind> _290121_prefix = (*(_self_))._field_prefix;;
			(*(_self_))._field_prefix=nullptr;
			__JULE_DEFER({
				(*(_self_))._field_prefix=_290121_prefix;
			});;
			return _2469ac007_eval(&_289613_bs, &(_289533_op));;
		};
	};
	return _2469ac007_eval(&_289613_bs, &(_289533_op));;
}



inline jule::Ptr<_246983ac2_Data> _2469a2c12_evalExprKind(jule::Ptr<_2469857b6_Eval> _self_, jule::Any _291036_kind) {
	{
		auto &_match_expr{ _291036_kind };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_22b9258c5:;
			{
				jule::Ptr<_246834951_RangeExpr> _291317_e = _291036_kind.cast_ptr<_246834951_RangeExpr>(&__jule_any_type100);;
				return _2469a2c12_evalExprKind(_self_, (*((*(_291317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_22b925562:;
			{
				return _246988346_evalLit(_self_.ptr(), _291036_kind.cast_ptr<_2468356ee_LitExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22b925b06:;
			{
				return _24698d082_evalIdent(_self_.ptr(), _291036_kind.cast_ptr<_24683607e_IdentExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_22b925b7d:;
			{
				return _24698d3c3_evalUnary(_self_, _291036_kind.cast_ptr<_246836711_UnaryExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_22b925c05:;
			{
				return _24698d714_evalVariadic(_self_, _291036_kind.cast_ptr<_246836ada_VariadicExpr>(&__jule_any_type75));;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_22b925c7c:;
			{
				return _24698da55_evalUnsafe(_self_, _291036_kind.cast_ptr<_246835ac8_UnsafeExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_22b925d59:;
			{
				return _24698e68d_evalSliceExpr(_self_, _291036_kind.cast_ptr<_24683ab77_SliceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_22b925dd1:;
			{
				return _246992d34_evalIndexing(_self_, _291036_kind.cast_ptr<_24683b617_IndexingExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_22b925e58:;
			{
				return _246994165_evalSlicing(_self_, _291036_kind.cast_ptr<_24683bc77_SlicingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_22b925ed0:;
			{
				return _246997d06_evalCast(_self_, _291036_kind.cast_ptr<_246836eb4_CastExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_22b926057:;
			{
				return _246998147_evalNsSelection(_self_.ptr(), _291036_kind.cast_ptr<_24683738d_NsSelectionExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_22b9260ce:;
			{
				return _24699893e_evalStructLit(_self_, _291036_kind.cast_ptr<_24683969d_StructLit>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_22b926156:;
			{
				return _246999016_evalType(_self_.ptr(), _291036_kind.cast_ptr<_246830320_TypeDecl>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_22b9261cd:;
			{
				return _24699a622_evalFnCall(_self_, _291036_kind.cast_ptr<_24683837d_FnCallExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_22b926255:;
			{
				return _2469a16b1_evalSubIdent(_self_, _291036_kind.cast_ptr<_246837767_SubIdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_22b9262cc:;
			{
				return _2469a1a02_evalTuple(_self_, _291036_kind.cast_ptr<_246835325_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_22b926354:;
			{
				return _2469a223e_evalBraceLit(_self_, _291036_kind.cast_ptr<_246839b54_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_22b9263cb:;
			{
				return _2469a2580_evalAnonFunc(_self_, _291036_kind.cast_ptr<_246841ed0_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_22b926453:;
			{
				return _2469a28c1_evalBinop(_self_, _291036_kind.cast_ptr<_246837c1d_BinopExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_22b9256e9:;
			{
				return nullptr;;
			}
		}
		_match_end_22b925694:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a3053_eval1(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246834654_Expr> _295829_expr) {
	jule::Ptr<_246983ac2_Data> _295913_d = _2469a2c12_evalExprKind(_self_, (*(_295829_expr))._field_Kind);;
	if (((_295913_d == nullptr) || ((*(_295913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_2469b7d37_Fn((*(_295913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b931d43:;
			{
				jule::Ptr<_246868c1b_FnIns> _296617_f = _2469b7d37_Fn((*(_295913_d))._field_Kind.ptr());;
				if (_24686a1a1_IsBuiltin(_296617_f.ptr())) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_22b93145d;
				};
				if (((*(_296617_f))._field_Generics.len() != (*((*(_296617_f))._field_Decl))._field_Generics.len())) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!((*((*(_296617_f))._field_Decl))._field_Statically)) && _246866521_IsMethod((*(_296617_f))._field_Decl.ptr()))) {
					_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_295829_expr))._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_22b93145d:;
	};
	return _295913_d;;
}



inline jule::Ptr<_246983ac2_Data> _2469a3394_eval(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246834654_Expr> _298528_expr) {
	jule::Ptr<_246983ac2_Data> _298613_d = _2469a3053_eval1(_self_, _298528_expr);;
	if ((_298613_d == nullptr)) {
		return nullptr;;
	};
	if (((((*(_self_))._field_owner == nullptr) || (!((*((*(_self_))._field_owner))._field_Constant))) && _2469b8b07_comptime((*(_298613_d))._field_Kind.ptr()))) {
		_246902c83_pushErr((*(_self_))._field_s.ptr(), (*(_298528_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _298613_d;;
}



inline jule::Ptr<_246983ac2_Data> _2469a36d5_evalExpr1(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246834654_Expr> _300033_expr) {
	jule::Ptr<_246983ac2_Data> _300113_d = _2469a3053_eval1(_self_, _300033_expr);;
	{
		
		if ((_300113_d == nullptr)) {
			_case_begin_22b939862:;
			{
				return nullptr;;
			}
		}
		else if ((*(_300113_d))._field_Decl) {
			_case_begin_22b9398d9:;
			{
				_246985d16_pushErr(_self_.ptr(), (*(_300033_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_22b939796:;
			{
				return _300113_d;;
			}
		}
		_match_end_22b939730:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a3a26_evalExpr(jule::Ptr<_2469857b6_Eval> _self_, jule::Ptr<_246834654_Expr> _301632_expr) {
	jule::Ptr<_246983ac2_Data> _301713_d = _2469a3394_eval(_self_, _301632_expr);;
	{
		
		if ((_301713_d == nullptr)) {
			_case_begin_22b93b611:;
			{
				return nullptr;;
			}
		}
		else if ((*(_301713_d))._field_Decl) {
			_case_begin_22b93b688:;
			{
				_246985d16_pushErr(_self_.ptr(), (*(_301632_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_22b93b545:;
			{
				return _301713_d;;
			}
		}
		_match_end_22b93b4ce:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2469857b6_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _2469a3edd_unaryEval static__2469a442d_new(jule::Ptr<_2469857b6_Eval> _303723_e) {
	return _2469a3edd_unaryEval{._field_e=_303723_e, };;
}



inline void _2469a462b_minus(_2469a3edd_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_22b93d2a0:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b93ce70:;
			{
				if ((!(_2445e30c4_IsNum(_2469b47a1_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b93ced6:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b93ce09:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b93bec4:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_246984496_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2445e80a7_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b9429d0:;
				{
					_2445e70d9_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((-(_2445e59ab_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2445e756d_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b942a57:;
				{
					_2445e6517_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_2445e4e72_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2445e7804_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b94264a:;
				{
					_2445e6517_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((-(_2445e5c42_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_22b9425d4:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3075:17"));;
				}
			}
			_match_end_22b942529:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _2469a4829_plus(_2469a3edd_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_22b948134:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b947d04:;
			{
				if ((!(_2445e30c4_IsNum(_2469b47a1_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b947d6a:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b947c8d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b947bc2:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_246984496_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2445e80a7_IsF64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b94c864:;
				{
					_2445e70d9_SetF64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::F64>((+(_2445e59ab_ReadF64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2445e756d_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b94c8db:;
				{
					_2445e6517_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_2445e4e72_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2445e7804_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b94c4ce:;
				{
					_2445e6517_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((+(_2445e5c42_AsI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_22b94c468:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3120:17"));;
				}
			}
			_match_end_22b94c3ad:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _2469a4a27_caret(_2469a3edd_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_22b952eb8:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b952b88:;
			{
				if ((!(_2445e29b9_IsInt(_2469b47a1_Str((*((*(_self_))._field_d))._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b952bee:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_22b952b22:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b952a56:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_246984496_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2445e756d_IsI64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b9576d7:;
				{
					_2445e6517_SetI64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::I64>((~(_2445e4e72_ReadI64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else if (_2445e7804_IsU64((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b95775e:;
				{
					_2445e67c0_SetU64((*((*(_self_))._field_d))._field_Constant.ptr(), static_cast<jule::U64>((~(_2445e5208_ReadU64((*((*(_self_))._field_d))._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_22b9572ec:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3163:17"));;
				}
			}
			_match_end_22b957242:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _2469a4c25_excl(_2469a3edd_unaryEval* _self_) {
	jule::Ptr<_2469bc259_Prim> _31779_t = _2469b6a4a_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_31779_t == nullptr) || (!(_2469c045a_IsBool(_31779_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
	if (_246984496_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2445e7a8a_IsBool((*((*(_self_))._field_d))._field_Constant.ptr())) {
				_case_begin_22b95d7a9:;
				{
					_2445e6a78_SetBool((*((*(_self_))._field_d))._field_Constant.ptr(), (!(_2445e548e_ReadBool((*((*(_self_))._field_d))._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_22b95d3d0:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3191:17"));;
				}
			}
			_match_end_22b95d314:;
		};
		return;;
	};
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _2469a4e23_star(_2469a3edd_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_2469b7067_Ptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b9620b5:;
			{
				if ((!(_24698680b_isUnsafe((*(_self_))._field_e.ptr())))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2469c454c_Ptr> _321617_t = _2469b7067_Ptr((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (_2469c5086_IsUnsafe(_321617_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Kind=(*(_321617_t))._field_Elem;
				(*((*(_self_))._field_d))._field_Mutable=true;
			}
		}
		else if ((_2469b6cd1_Sptr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22b961c96:;
			{
				(*((*(_self_))._field_d))._field_Kind=(*(_2469b6cd1_Sptr((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_22b961c30:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b960cb7:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=true;
}



inline void _2469a5121_amper(_2469a3edd_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_22b96a101:;
			{
				jule::Ptr<_246858d4e_StructLitExprModel> _323717_lit = (*((*(_self_))._field_d))._field_Model.cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94);;
				_2469acd60_makeStructLitAlloc(&((*(_self_))._field_d), &(_323717_lit));
			}
		}
		else {
			_case_begin_22b96762b:;
			{
				{
					
					if (_2469d0569_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_22b9671ca:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c454c_Ptr>(_2469c454c_Ptr{._field_Elem=(*((*(_self_))._field_d))._field_Kind}), 27)});
							(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_self_))._field_d))), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_22b967b59:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_22b967a8d:;
				};
			}
		}
		_match_end_22b9675c6:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*((*(_self_))._field_d))._field_Mutable=true;
}



inline void _2469a531e_typeDecl(_2469a3edd_unaryEval* _self_) {
	_2469c653d_typeChecker _326113_tc = _2469c653d_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*((*(_self_))._field_e))._field_lookup, ._field_lookup=(*((*(_self_))._field_e))._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22b96b696:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469cb92d_buildPtrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 27)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22b96ec3d:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2469cb29b_buildSptrFromType(&_326113_tc, &((*((*(_self_))._field_d))._field_Kind)), 22)});
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Kind, &__jule_any_type83);
			}
		}
		else {
			_case_begin_22b96d06b:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_22b96d016:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _2469a551c_evalData(_2469a3edd_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22b97377a:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _328617_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*((*(_self_))._field_e))._field_prefix=nullptr;
				(*(_self_))._field_d=_2469a3394_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*((*(_self_))._field_e))._field_prefix=_328617_prefix;
			}
		}
		else {
			_case_begin_22b973390:;
			{
				(*(_self_))._field_d=_2469a3394_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_22b973318:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a585d_eval(_2469a3edd_unaryEval* _self_, jule::Ptr<_246836711_UnaryExpr> _329527_u) {
	(*(_self_))._field_u=_329527_u;
	_2469a551c_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_2469a531e_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _33069_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_22b977d78:;
			{
				_2469a462b_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_22b977a7b:;
			{
				_2469a4829_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22b977ae2:;
			{
				_2469a4a27_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_22b977b58:;
			{
				_2469a4c25_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22b977bbe:;
			{
				_2469a4e23_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22b9781ca:;
			{
				_2469a5121_amper(_self_);
			}
		}
		else {
			_case_begin_22b977a15:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_22b9779b0:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_22b978241:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_self_))._field_u))._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str(_33069_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_246984496_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_22b9799a1:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_22b97994b:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _2469a3edd_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _2469a5e79_binaryEval static__2469a6562_newPlain(jule::Ptr<_2469857b6_Eval> _334328_e) {
	return _2469a5e79_binaryEval{._field_e=_334328_e, };;
}



inline _2469a5e79_binaryEval static__2469a68a3_new(jule::Ptr<_2469857b6_Eval> _334923_e, jule::Ptr<_246819d43_Token> _334937_op) {
	return _2469a5e79_binaryEval{._field_e=_334923_e, ._field_op=_334937_op};;
}



inline jule::Bool _2469a6b39_checkTypeCompatibility(_2469a5e79_binaryEval* _self_) {
	return _24690ac47_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*((*(_self_))._field_r))._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _2469a6dc0_checkStructCommonOperatorCompatibility(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_246868c1b_FnIns> _336317_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_22b97e8da:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_22b981436:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_22b98149c:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_22b97ee18:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_22b97ee7e:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22b97eee5:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22b98005b:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22b98158a:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_22b981601:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22b981667:;
			{
				_336317_overload=(*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_22b97eda2:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_22b97ed4c:;
	};
	if ((_336317_overload == nullptr)) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_246867c70_ParamIns> _339513_p = (*(_336317_overload))._field_Params[1LL];;
	return _24690a791_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_339513_p))._field_Decl))._field_Reference, &((*(_339513_p))._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_246983ac2_Data> _2469a7156_evalComptimeTypeInfo(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_246890a9a_comptimeTypeInfo> _340013_r = _2469ba697_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_340013_r == nullptr)) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246890a9a_comptimeTypeInfo> _340513_l = _2469ba697_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_22b98e796:;
			{
				jule::Ptr<_2445e359c_Const> _340817_constant = static__2445e4070_NewBool(_2469b4ae2_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base));;
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_340817_constant, &__jule_any_type19), ._field_Constant=_340817_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9909b7:;
			{
				jule::Ptr<_2445e359c_Const> _341517_constant = static__2445e4070_NewBool((!(_2469b4ae2_Equal((*(_340513_l))._field_base, (*(_340013_r))._field_base))));;
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, ._field_Model=jule::Any(_341517_constant, &__jule_any_type19), ._field_Constant=_341517_constant});;
			}
		}
		else {
			_case_begin_22b98e433:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b98e3cd:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a73dc_evalNil(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469b6297_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b993316:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b994922:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9948bc:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a7673_evalEnum(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_24687b800_Enum> _344613_enm = _2469b72ed_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b996c32:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _345017_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_2469b72ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
					_345017_rkind=(*((*(_2469b72ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind))._field_Kind;
				};
				if ((!(_24690ac47_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_344613_enm))._field_Kind))._field_Kind), &(_345017_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		_match_end_22b996bcc:;
	};
	if (((_2469b72ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr) || (_344613_enm != _2469b72ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22b99c3b9:;
			{
				if ((!(_2445e30c4_IsNum(_2469b47a1_Str((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22b99d255:;
			{
				jule::Ptr<_24687ac83_EnumItem> _348013_first = (*(_344613_enm))._field_Items[0LL];;
				{
					
					if (_2445e756d_IsI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_22b9a1434:;
						{
							if ((_2445e4e72_ReadI64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_22b9a5526;
							};
							goto _julec_label_22b9a3c50;
						}
					}
					else if (_2445e7804_IsU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_22b9a14ab:;
						{
							if ((_2445e5208_ReadU64((*((*((*(_348013_first))._field_Value))._field_Data))._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_22b9a5526;
							};
							goto _julec_label_22b9a3c50;
						}
					}
					else {
						_case_begin_22b9a1049:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3493:17"));;
						}
					}
					_match_end_22b9a0ed3:;
				};
				_julec_label_22b9a3c50:;
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_246986179_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_22b9a5526:;
				goto _case_begin_22b99d2bb;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22b99d2bb:;
			{
				if (((_2469b6a4a_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_2445e29b9_IsInt(_2469bc59a_Str(_2469b6a4a_Prim((*((*(_344613_enm))._field_Kind))._field_Kind.ptr()).ptr())))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_22b99c056:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*(_344613_enm))._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b99c001:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a7909_evalTypeEnum(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_24687d00a_TypeEnum> _351313_enm = _2469b7584_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9aab03:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9a9e76:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_24687d34b_Str(_351313_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9aa73a:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a7b90_evalSptr(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9abc7a:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9aca06:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9ac9a1:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a7e26_evalPtr(_2469a5e79_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_22b9aedd2:;
			{
				if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_22b9b1103:;
			{
				if ((_2469b7067_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_2469c5086_IsUnsafe(_2469b7067_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()).ptr())) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				};
				if ((!(_2469ae070_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_22b9ae453:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9ae3cb:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a81ac_evalArr(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9a93b5:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9b700a:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9b6ea5:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a8443_evalSlc(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9b8748:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9b94c4:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9b946e:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a86c9_evalStruct(_2469a5e79_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_22b9bb5a3:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_22b9bb619:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_22b9bb680:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22b9bb707:;
			{
				if (((*(_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9bb77e:;
			{
				if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		_match_end_22b9bad99:;
	};
	if ((!(_2469a6dc0_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_246983ac2_Data> _2469a8960_evalTrait(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9c626c:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9c6a97:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9c6a42:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a8be6_evalAny(_2469a5e79_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22b9c8637:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9c84e4:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9c846c:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a8e7c_evalBool(_2469a5e79_binaryEval* _self_) {
	if ((!(_2469a6b39_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_22b9c9db9:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_22b9cab45:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9caae0:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469a9213_evalStr(_2469a5e79_binaryEval* _self_) {
	jule::Str _371213_rk = _2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_371213_rk.equal("str", 3))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_371213_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_22b9ce73c:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22b9d051d:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		else {
			_case_begin_22b9ce176:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9ce374:;
	};
}



inline void _2469a9411_setTypeToGreater(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_2469bc259_Prim> _37379_lp = _2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_2469bc259_Prim> _37389_rp = _2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr());;
	if (_246984496_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_246984496_IsConst((*(_self_))._field_r.ptr())))) {
			(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
			return;;
		};
		goto _julec_label_22b9d4962;
	};
	if (_246984496_IsConst((*(_self_))._field_r.ptr())) {
		(*((*((*(_self_))._field_r))._field_Constant))._field_Kind=(*(_37379_lp))._field_Kind;
		return;;
	};
	_julec_label_22b9d4962:;
	if (((*((*(_self_))._field_l))._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_246984496_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
		(*((*(_self_))._field_l))._field_untyped=false;
		return;;
	} else if (((!((*((*(_self_))._field_l))._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		return;;
	};
	if (_2445e138b_IsGreater((*(_37389_rp))._field_Kind, (*(_37379_lp))._field_Kind)) {
		(*((*(_self_))._field_l))._field_Kind=(*((*(_self_))._field_r))._field_Kind;
		if (_246984496_IsConst((*(_self_))._field_l.ptr())) {
			(*((*((*(_self_))._field_l))._field_Constant))._field_Kind=(*(_37389_rp))._field_Kind;
		};
	};
}



inline void _2469a96b9_checkModData(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _377036_d) {
	if ((!(_246984496_IsConst((*(_377036_d)).ptr())))) {
		if (((_2469b6a4a_Prim((*((*(_377036_d))))._field_Kind.ptr()) == nullptr) || (!(_2445e29b9_IsInt((*(_2469b6a4a_Prim((*((*(_377036_d))))._field_Kind.ptr())))._field_Kind))))) {
			_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_246969a31_sigAssignable(jule::Str::lit("i64", 3), _377036_d)) {
			_case_begin_22b9dc6c3:;
			{
				_2445e6517_SetI64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else if (_246969de9_unsigAssignable(jule::Str::lit("u64", 3), _377036_d)) {
			_case_begin_22b9dc74a:;
			{
				_2445e67c0_SetU64((*((*(_377036_d))))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_377036_d))))._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_22b9dc34e:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_22b9dc2e9:;
	};
}



inline void _2469a98b7_mod(_2469a5e79_binaryEval* _self_) {
	_2469a96b9_checkModData(_self_, &((*(_self_))._field_l));
	_2469a96b9_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _2469a9cb3_numbersAreCompatibile(_2469a5e79_binaryEval* _self_, jule::Str* _379237_lk, jule::Str* _379247_rk) {
	if ((!(_2445e30c4_IsNum((*(_379247_rk)))))) {
		return false;;
	};
	if ((_246984496_IsConst((*(_self_))._field_l.ptr()) && (*((*(_self_))._field_l))._field_untyped)) {
		return true;;
	};
	if ((*(_379237_lk)).equal("f32", 3)) {
		if ((_246984496_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f32", 3);;
	};
	if ((*(_379237_lk)).equal("f64", 3)) {
		if ((_246984496_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
			return true;;
		};
		return (*(_379247_rk)).equal("f64", 3);;
	};
	if ((_246984496_IsConst((*(_self_))._field_r.ptr()) && (*((*(_self_))._field_r))._field_untyped)) {
		return true;;
	};
	return ((*(_379237_lk)) == (*(_379247_rk)));;
}



inline jule::Ptr<_246983ac2_Data> _2469aa049_evalFloat(_2469a5e79_binaryEval* _self_) {
	jule::Str _38189_lk = (*(_2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38199_rk = (*(_2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	if ((!(_2469a9cb3_numbersAreCompatibile(_self_, &(_38189_lk), &(_38199_rk))))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_22b9e6a40:;
			{
				if (((!(_246984496_IsConst((*(_self_))._field_l.ptr()))) || (!(_24696a26d_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_246984496_IsConst((*(_self_))._field_r.ptr()))) || (!(_24696a26d_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_2445e6517_SetI64((*((*(_self_))._field_l))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_self_))._field_l))._field_Constant.ptr())));
				_2445e67c0_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_self_))._field_r))._field_Constant.ptr())));
				if ((!(_2469ad822_isOkForShifting(&((*(_self_))._field_r))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_22b9e69da:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22b9e70d4:;
			{
				_2469a9411_setTypeToGreater(_self_);
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		_match_end_22b9e8965:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_22b9e5c81:;
			{
				_2469a9411_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22b9ee471:;
			{
				if ((!(_2445e29b9_IsInt(_38199_rk)))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38189_lk, &__jule_any_type4),jule::Any(_38199_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_2469a98b7_mod(_self_);
				_2469a9411_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_22b9eccbb:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22b9ed7b1:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469aa2d0_evalInt(_2469a5e79_binaryEval* _self_) {
	jule::Str _38829_lk = (*(_2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38839_rk = (*(_2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr())))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_22ba028c5:;
			{
				if (((!(_2445e29b9_IsInt(_38829_lk))) || (!(_2445e29b9_IsInt(_38839_rk))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_2469ad822_isOkForShifting(&((*(_self_))._field_r))))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_22ba02c49:;
	};
	if ((!(_2469a9cb3_numbersAreCompatibile(_self_, &(_38829_lk), &(_38839_rk))))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38829_lk, &__jule_any_type4),jule::Any(_38839_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22ba05ee4:;
			{
				return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b254d3_primBool, });;
			}
		}
		_match_end_22ba05e8e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22ba02d8c:;
			{
				_2469a9411_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22ba0816c:;
			{
				_2469a98b7_mod(_self_);
				_2469a9411_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_22ba071e3:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22ba0718d:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469aa566_evalPrim(_2469a5e79_binaryEval* _self_) {
	jule::Ptr<_2469bc259_Prim> _39399_prim = _2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_2469c045a_IsBool(_39399_prim.ptr())) {
			_case_begin_22ba0a45a:;
			{
				return _2469a8e7c_evalBool(_self_);;
			}
		}
		else if (_2469c06e1_IsStr(_39399_prim.ptr())) {
			_case_begin_22ba0a4d2:;
			{
				return _2469a9213_evalStr(_self_);;
			}
		}
		_match_end_22ba0a3b1:;
	};
	if ((_2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) == nullptr)) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469bc59a_Str(_39399_prim.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_2445e2d0a_IsFloat((*(_39399_prim))._field_Kind)) {
			_case_begin_22ba0cd64:;
			{
				return _2469aa049_evalFloat(_self_);;
			}
		}
		else if (_2445e29b9_IsInt((*(_39399_prim))._field_Kind)) {
			_case_begin_22ba0cddb:;
			{
				return _2469aa2d0_evalInt(_self_);;
			}
		}
		else {
			_case_begin_22ba0ccba:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba0a58c:;
	};
}



inline void _2469aa764_checkSpecialCases(_2469a5e79_binaryEval* _self_) {
	if (((!(_2469b59e4_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_2469b54c7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr()))))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if (((!(_2469b59e4_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_2469b54c7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr()))))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_self_))._field_r))._field_Kind.ptr()), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_246983ac2_Data> _2469aa9ea_evalOp(_2469a5e79_binaryEval* _self_) {
	_2469aa764_checkSpecialCases(_self_);
	{
		
		if (_2469b575d_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_22ba1817c:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_2469ba697_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba17a50:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba18325;
			}
		}
		else if ((_2469ba697_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba18325:;
			{
				return _2469a7156_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _2469c0977_IsAny(_2469b6a4a_Prim((*((*(_self_))._field_r))._field_Kind.ptr()).ptr()))) {
			_case_begin_22ba19546:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba195ac;
			}
		}
		else if (_2469b54c7_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_22ba195ac:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba1969a;
			}
		}
		else if (_2469b54c7_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_22ba1969a:;
			{
				return _2469a73dc_evalNil(_self_);;
			}
		}
		else if (((_2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _2469c0977_IsAny(_2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()).ptr()))) {
			_case_begin_22ba19711:;
			{
				return _2469a8be6_evalAny(_self_);;
			}
		}
		else if ((_2469b7584_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19777:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba197dd;
			}
		}
		else if ((_2469b7584_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba197dd:;
			{
				return _2469a7909_evalTypeEnum(_self_);;
			}
		}
		else if ((_2469b72ed_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19854:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba198ba;
			}
		}
		else if ((_2469b72ed_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba198ba:;
			{
				return _2469a7673_evalEnum(_self_);;
			}
		}
		else if ((_2469b6cd1_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19942:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba199b9;
			}
		}
		else if ((_2469b6cd1_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba199b9:;
			{
				return _2469a7b90_evalSptr(_self_);;
			}
		}
		else if ((_2469b7067_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19a41:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba19ab8;
			}
		}
		else if ((_2469b7067_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19ab8:;
			{
				return _2469a7e26_evalPtr(_self_);;
			}
		}
		else if ((_2469b781a_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19b40:;
			{
				return _2469a81ac_evalArr(_self_);;
			}
		}
		else if ((_2469b7aa1_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19bb7:;
			{
				return _2469a8443_evalSlc(_self_);;
			}
		}
		else if ((_2469b8354_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19c3e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_22ba19cb6;
			}
		}
		else if ((_2469b8354_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19cb6:;
			{
				return _2469a8960_evalTrait(_self_);;
			}
		}
		else if ((_2469b80bd_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19d3d:;
			{
				return _2469a86c9_evalStruct(_self_);;
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba19db5:;
			{
				return _2469aa566_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_22ba17e7e:;
			{
				_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_2469b47a1_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22ba17e18:;
	};
}



inline void _2469aaca3_evalConst(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _403033_d) {
	{
		
		if (((*(_403033_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_22ba2caed:;
			{
				return;;
			}
		}
		else if ((!(_246984496_IsConst((*(_self_))._field_l.ptr()))) || (!(_246984496_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_22ba2cd51:;
			{
				(*((*(_403033_d))))._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_22ba2ca21:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_22ba2eeda:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e9152_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22ba30051:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool((!(_2445e9152_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_22ba300b7:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e8d11_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_22ba3012d:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e89c0_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_22ba30194:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e9b25_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_22ba3020a:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e9493_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_22ba30282:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e9e66_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_22ba30309:;
			{
				(*((*(_403033_d))))._field_Constant=static__2445e4070_NewBool(_2445e97d4_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_22ba30381:;
			{
				_2445ea2a7_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_22ba30408:;
			{
				_2445ea5e8_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22ba30480:;
			{
				_2445ea939_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_22ba30507:;
			{
				jule::Bool _406913_ok = _2445eac7a_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_406913_ok)) && (_2445e625e_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
				jule::Ptr<_2469bc259_Prim> _407417_prim = _2469b6a4a_Prim((*((*(_403033_d))))._field_Kind.ptr());;
				{
					
					if (_2445e23e2_IsSigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_22ba40bbb:;
						{
							_2445e6517_SetI64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					else if (_2445e2700_IsUnsigInt((*(_407417_prim))._field_Kind)) {
						_case_begin_22ba40c43:;
						{
							_2445e67c0_SetU64((*((*(_403033_d))))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_403033_d))))._field_Constant.ptr())));
						}
					}
					_match_end_22ba40b22:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22ba3057e:;
			{
				jule::Bool _408213_ok = _2445eb0bb_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_408213_ok)) && (_2445e625e_AsF64((*((*(_self_))._field_r))._field_Constant.ptr()) == 0LL))) {
					_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_22ba30606:;
			{
				_2445eb74d_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22ba3067d:;
			{
				_2445eb40c_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22ba30705:;
			{
				_2445eba8e_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_22ba3077c:;
			{
				_2445ebdd0_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_22ba30804:;
			{
				_2445ec221_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_403033_d))))._field_Constant=(*((*(_self_))._field_l))._field_Constant;
			}
		}
		_match_end_22ba2e79d:;
	};
	(*((*(_403033_d))))._field_Model=jule::Any((*((*(_403033_d))))._field_Constant, &__jule_any_type19);
	_2469aee0b_applyCastModelByEnum(_403033_d, _2469b72ed_Enum((*((*(_403033_d))))._field_Kind.ptr()));
}



inline void _2469ab05b_checkData(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _410733_d) {
	jule::Ptr<_246868c1b_FnIns> _41089_f = _2469b7d37_Fn((*((*(_410733_d))))._field_Kind.ptr());;
	if ((((_41089_f != nullptr) && ((*(_41089_f))._field_Decl != nullptr)) && _246866521_IsMethod((*(_41089_f))._field_Decl.ptr()))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _2469ab259_checkDatas(_2469a5e79_binaryEval* _self_) {
	_2469ab05b_checkData(_self_, &((*(_self_))._field_l));
	_2469ab05b_checkData(_self_, &((*(_self_))._field_r));
}



inline void _2469ab512_setModel(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _411932_d) {
	if (_246984496_IsConst((*(_411932_d)).ptr())) {
		if (((_246984496_IsConst((*(_self_))._field_l.ptr()) && _246984496_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_246983ac2_Data> _412813_l;;
	jule::Ptr<_246983ac2_Data> _412820_r;;
	({
		jule::Ptr<_246983ac2_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_246983ac2_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_412813_l = ___jule_assign_arg;
		_412820_r = _1___jule_assign_arg;
	});
	if ((!(_2469847d7_GoodOperand(_412813_l.ptr(), &(_412820_r))))) {
		std::swap(_412813_l, _412820_r);
	};
	(*((*(_411932_d))))._field_Model=jule::Any(jule::new_ptr<_2468580a1_BinopExprModel>(_2468580a1_BinopExprModel{._field_Left=jule::new_ptr<_246857aa6_OperandExprModel>(_246857aa6_OperandExprModel{._field_Kind=(*(_412813_l))._field_Kind, ._field_Model=(*(_412813_l))._field_Model}), ._field_Right=jule::new_ptr<_246857aa6_OperandExprModel>(_246857aa6_OperandExprModel{._field_Kind=(*(_412820_r))._field_Kind, ._field_Model=(*(_412820_r))._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _2469ab7ba_postEval(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _414632_d) {
	(*((*(_414632_d))))._field_Lvalue=false;
	_2469ab512_setModel(_self_, _414632_d);
}



inline jule::Ptr<_246983ac2_Data> _2469abbb6_solveExplicit(_2469a5e79_binaryEval* _self_, jule::Ptr<_246983ac2_Data>* _415137_l, jule::Ptr<_246983ac2_Data>* _415152_r) {
	({
		jule::Ptr<_246983ac2_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_246983ac2_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_2469ab259_checkDatas(_self_);
	jule::Ptr<_246983ac2_Data> _415613_d = _2469aa9ea_evalOp(_self_);;
	({
		jule::Ptr<_246983ac2_Data> ___jule_assign_arg = (*(_415137_l));
		jule::Ptr<_246983ac2_Data> _1___jule_assign_arg = (*(_415152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_2469aaca3_evalConst(_self_, &(_415613_d));
	if ((_415613_d != nullptr)) {
		(*(_415613_d))._field_Mutable=true;
		_2469ab7ba_postEval(_self_, &(_415613_d));
	};
	return _415613_d;;
}



inline jule::Ptr<_246983ac2_Data> _2469ac007_eval(_2469a5e79_binaryEval* _self_, jule::Ptr<_246837c1d_BinopExpr>* _417128_op) {
	if (((*((*((*(_417128_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_246985d16_pushErr((*(_self_))._field_e.ptr(), (*((*(_417128_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_246986179_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _417813_l = _2469a36d5_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Left);;
	if (((_417813_l == nullptr) || ((*(_417813_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _418313_prefix = (*((*(_self_))._field_e))._field_prefix;;
	(*((*(_self_))._field_e))._field_prefix=(*(_417813_l))._field_Kind;
	__JULE_DEFER({
		(*((*(_self_))._field_e))._field_prefix=_418313_prefix;
	});;
	jule::Ptr<_246983ac2_Data> _418613_r = _2469a36d5_evalExpr1((*(_self_))._field_e, (*((*(_417128_op))))._field_Right);;
	if (((_418613_r == nullptr) || ((*(_418613_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_417128_op))))._field_Op;
	jule::Ptr<_246983ac2_Data> _419313_d = _2469abbb6_solveExplicit(_self_, &(_417813_l), &(_418613_r));;
	if ((((_419313_d != nullptr) && (*(_417813_l))._field_IsRune) && (*(_418613_r))._field_IsRune)) {
		(*(_419313_d))._field_IsRune=true;
	};
	return _419313_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _2469a5e79_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2469b2a02_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2469b35e6_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2469b47a1_Str(_2469b43d8_TypeKind* _self_) {
	if (_2469b54c7_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_2433b0c50_StrBuilder _7413_kind = static__2433b1019_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2433b982a_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_2469b5241_Binded(_self_)) {
		_2433b982a_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_2433b982a_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_2433b982a_WriteStr(&_7413_kind, _2469b3e32_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._2469b398c_Str((*(_self_))._field_Kind));
	};
	return _2433ba122_Str(&_7413_kind);;
}



inline jule::Bool _2469b4ae2_Equal(jule::Ptr<_2469b43d8_TypeKind> _self_, jule::Ptr<_2469b43d8_TypeKind> _9021_other) {
	if (_2469b54c7_IsNil(_self_.ptr())) {
		return _2469b54c7_IsNil(_9021_other.ptr());;
	};
	if (_2469b5241_Binded(_self_.ptr())) {
		return (_2469b5241_Binded(_9021_other.ptr()) && ((*(_self_))._field_BindIdent == (*(_9021_other))._field_BindIdent));;
	};
	return _2469b3e32_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._2469b3ccd_Equal((*(_self_))._field_Kind, _9021_other);;
}



inline jule::Bool _2469b5241_Binded(_2469b43d8_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _2469b54c7_IsNil(_2469b43d8_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _2469b575d_Void(_2469b43d8_TypeKind* _self_) {
	jule::Ptr<_2469bc259_Prim> _1109_prim = _2469b6a4a_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*(_1109_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _2469b59e4_Comparable(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _11717__self = _self_;;
		if ((_2469b80bd_Struct(_11717__self) != nullptr)) {
			return (*(_2469b80bd_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_2469b85da_Map(_11717__self) == nullptr) && (_2469b7aa1_Slc(_11717__self) == nullptr)) && (_2469b7d37_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _2469b5c7a_Mutable(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _12817__self = _self_;;
		if ((_2469b80bd_Struct(_12817__self) != nullptr)) {
			return (*(_2469b80bd_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_2469b8354_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_2469b6a4a_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_2469bc259_Prim> _13617_p = _2469b6a4a_Prim(_12817__self);;
			return _2469c0977_IsAny(_13617_p.ptr());;
		};
		if ((_2469b781a_Arr(_12817__self) != nullptr)) {
			return _2469b5c7a_Mutable((*(_2469b781a_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_2469b7aa1_Slc(_12817__self) != nullptr) || (_2469b7067_Ptr(_12817__self) != nullptr)) || (_2469b6cd1_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _2469b6011_Ordered(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _15117__self = _self_;;
		jule::Ptr<_2469bc259_Prim> _15213_prim = _2469b6a4a_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_2445e30c4_IsNum((*(_15213_prim))._field_Kind) || _2469c06e1_IsStr(_15213_prim.ptr()));;
		};
		if ((_2469b7067_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_246853ba1_StructIns> _15913_s = _2469b80bd_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*(_15913_s))._field_Operators._field_Gt != nullptr) && ((*(_15913_s))._field_Operators._field_GtEq != nullptr)) && ((*(_15913_s))._field_Operators._field_Lt != nullptr)) && ((*(_15913_s))._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_24687b800_Enum> _16613_enm = _2469b72ed_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _2445e30c4_IsNum(_2469b47a1_Str((*((*(_16613_enm))._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _2469b6297_NilCompatible(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _17717__self = _self_;;
		jule::Ptr<_2469bc259_Prim> _17913_prim = _2469b6a4a_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _2469c0977_IsAny(_17913_prim.ptr()))) {
			return true;;
		};
		return (((((((_2469b54c7_IsNil(_17717__self) || (_2469b7d37_Fn(_17717__self) != nullptr)) || (_2469b6cd1_Sptr(_17717__self) != nullptr)) || (_2469b7067_Ptr(_17717__self) != nullptr)) || (_2469b8354_Trait(_17717__self) != nullptr)) || (_2469b7aa1_Slc(_17717__self) != nullptr)) || (_2469b85da_Map(_17717__self) != nullptr)) || (_2469b7584_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _2469b652d_PerformsRC(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _19817__self = _self_;;
		jule::Ptr<_2469bc259_Prim> _19913_prim = _2469b6a4a_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_2469c0977_IsAny(_19913_prim.ptr()) || _2469c06e1_IsStr(_19913_prim.ptr()));;
		};
		return (((_2469b6cd1_Sptr(_19817__self) != nullptr) || (_2469b7aa1_Slc(_19817__self) != nullptr)) || (_2469b8354_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _2469b67b4_Variadicable(_2469b43d8_TypeKind* _self_) {
	{
		_2469b43d8_TypeKind* _21017__self = _self_;;
		return (_2469b7aa1_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_2469bc259_Prim> _2469b6a4a_Prim(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_22ba8bec0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469bc259_Prim>(21);;
			}
		}
		else {
			_case_begin_22ba8c311:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba8c2ab:;
	};
}



inline jule::Ptr<_2469c0c85_Sptr> _2469b6cd1_Sptr(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_22ba8c94e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c0c85_Sptr>(22);;
			}
		}
		else {
			_case_begin_22ba8d1be:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba8d169:;
	};
}



inline jule::Ptr<_2469c454c_Ptr> _2469b7067_Ptr(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_22ba8d9a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c454c_Ptr>(27);;
			}
		}
		else {
			_case_begin_22ba8dda1:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba8dd4b:;
	};
}



inline jule::Ptr<_24687b800_Enum> _2469b72ed_Enum(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_22ba8e687:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24687b800_Enum>(3);;
			}
		}
		else {
			_case_begin_22ba8ea83:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba8ea2d:;
	};
}



inline jule::Ptr<_24687d00a_TypeEnum> _2469b7584_TypeEnum(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_22ba90369:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24687d00a_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_22ba90765:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba90710:;
	};
}



inline jule::Ptr<_2469c3a79_Arr> _2469b781a_Arr(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_22ba9104b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c3a79_Arr>(26);;
			}
		}
		else {
			_case_begin_22ba91447:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba913e2:;
	};
}



inline jule::Ptr<_2469c1758_Slc> _2469b7aa1_Slc(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_22ba91c2d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c1758_Slc>(23);;
			}
		}
		else {
			_case_begin_22ba92129:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba920c4:;
	};
}



inline jule::Ptr<_246868c1b_FnIns> _2469b7d37_Fn(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_22ba92910:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246868c1b_FnIns>(1);;
			}
		}
		else {
			_case_begin_22ba92d0b:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba92ca6:;
	};
}



inline jule::Ptr<_246853ba1_StructIns> _2469b80bd_Struct(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22ba935e2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246853ba1_StructIns>(0);;
			}
		}
		else {
			_case_begin_22ba939dd:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba93988:;
	};
}



inline jule::Ptr<_2468790e4_Trait> _2469b8354_Trait(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_22ba942c4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2468790e4_Trait>(2);;
			}
		}
		else {
			_case_begin_22ba946c0:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9466a:;
	};
}



inline jule::Ptr<_2469c2dec_Map> _2469b85da_Map(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_22ba94ea6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c2dec_Map>(25);;
			}
		}
		else {
			_case_begin_22ba953a2:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9534c:;
	};
}



inline jule::Ptr<_2469c234c_Tuple> _2469b8871_Tup(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_22ba95b88:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2469c234c_Tuple>(24);;
			}
		}
		else {
			_case_begin_22ba96084:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9602e:;
	};
}



inline jule::Bool _2469b8b07_comptime(_2469b43d8_TypeKind* _self_) {
	return (((((((((((((((_2469ba411_comptimeTypeInfos(_self_) != nullptr) || (_2469ba697_comptimeTypeInfo(_self_) != nullptr)) || (_2469b8d8d_comptimeStructFields(_self_) != nullptr)) || (_2469b9124_comptimeStructField(_self_) != nullptr)) || (_2469b93aa_comptimeEnumFields(_self_) != nullptr)) || (_2469b9641_comptimeEnumField(_self_) != nullptr)) || (_2469ba92d_comptimeStatics(_self_) != nullptr)) || (_2469babb4_comptimeStatic(_self_) != nullptr)) || (_2469b98c7_comptimeParams(_self_) != nullptr)) || (_2469b9b5d_comptimeParam(_self_) != nullptr)) || (_2469ba17a_comptimeMatch(_self_) != nullptr)) || (_2469b9de4_comptimeRange(_self_) != nullptr)) || (_2469bae4a_comptimeValue(_self_) != nullptr)) || (_2469bb467_comptimeFiles(_self_) != nullptr)) || (_2469bb1d1_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_2468837e6_comptimeStructFields> _2469b8d8d_comptimeStructFields(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_22ba9ac6a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2468837e6_comptimeStructFields>(8);;
			}
		}
		else {
			_case_begin_22ba9ac04:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9a572:;
	};
}



inline jule::Ptr<_246881b35_comptimeStructField> _2469b9124_comptimeStructField(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_22ba9ae24:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246881b35_comptimeStructField>(7);;
			}
		}
		else {
			_case_begin_22ba9b60b:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9b5a6:;
	};
}



inline jule::Ptr<_246889544_comptimeEnumFields> _2469b93aa_comptimeEnumFields(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_22ba9b694:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246889544_comptimeEnumFields>(12);;
			}
		}
		else {
			_case_begin_22ba9c2dd:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9c288:;
	};
}



inline jule::Ptr<_24688819c_comptimeEnumField> _2469b9641_comptimeEnumField(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_22ba9c376:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24688819c_comptimeEnumField>(11);;
			}
		}
		else {
			_case_begin_22ba9cec0:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9ce6a:;
	};
}



inline jule::Ptr<_24688cda5_comptimeParams> _2469b98c7_comptimeParams(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_22ba9d058:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24688cda5_comptimeParams>(14);;
			}
		}
		else {
			_case_begin_22ba9dba2:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9db4c:;
	};
}



inline jule::Ptr<_24688ab3e_comptimeParam> _2469b9b5d_comptimeParam(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_22ba9e488:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24688ab3e_comptimeParam>(13);;
			}
		}
		else {
			_case_begin_22ba9e884:;
			{
				return nullptr;;
			}
		}
		_match_end_22ba9e82e:;
	};
}



inline jule::Ptr<_246881162_comptimeRange> _2469b9de4_comptimeRange(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_22baa016a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246881162_comptimeRange>(6);;
			}
		}
		else {
			_case_begin_22baa0566:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa0511:;
	};
}



inline jule::Ptr<_24687e946_comptimeMatch> _2469ba17a_comptimeMatch(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_22baa0d4c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24687e946_comptimeMatch>(5);;
			}
		}
		else {
			_case_begin_22baa1248:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa11e3:;
	};
}



inline jule::Ptr<_24688e4a0_comptimeTypeInfos> _2469ba411_comptimeTypeInfos(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_22baa1a2e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24688e4a0_comptimeTypeInfos>(15);;
			}
		}
		else {
			_case_begin_22baa1e2a:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa1dc5:;
	};
}



inline jule::Ptr<_246890a9a_comptimeTypeInfo> _2469ba697_comptimeTypeInfo(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_22baa1eb3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246890a9a_comptimeTypeInfo>(16);;
			}
		}
		else {
			_case_begin_22baa2b0c:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa2aa7:;
	};
}



inline jule::Ptr<_246886aa2_comptimeStatics> _2469ba92d_comptimeStatics(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_22baa2b95:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246886aa2_comptimeStatics>(10);;
			}
		}
		else {
			_case_begin_22baa37de:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa3789:;
	};
}



inline jule::Ptr<_246884de1_comptimeStatic> _2469babb4_comptimeStatic(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_22baa3877:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_246884de1_comptimeStatic>(9);;
			}
		}
		else {
			_case_begin_22baa44c1:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa446b:;
	};
}



inline jule::Ptr<_2468970ac_comptimeValue> _2469bae4a_comptimeValue(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_22baa4ca7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_2468970ac_comptimeValue>(17);;
			}
		}
		else {
			_case_begin_22baa51a3:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa514d:;
	};
}



inline jule::Ptr<_24689b006_comptimeFile> _2469bb1d1_comptimeFile(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_22baa5989:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24689b006_comptimeFile>(19);;
			}
		}
		else {
			_case_begin_22baa5d85:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa5d30:;
	};
}



inline jule::Ptr<_24689990b_comptimeFiles> _2469bb467_comptimeFiles(_2469b43d8_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_22baa666b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_24689990b_comptimeFiles>(18);;
			}
		}
		else {
			_case_begin_22baa6a67:;
			{
				return nullptr;;
			}
		}
		_match_end_22baa6a12:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2469b43d8_TypeKind _Src) {
	_Stream << _2469b47a1_Str(&_Src);
	return _Stream;
}



inline jule::Bool _2469bbbc6_checked(_2469bb852_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _2469bb852_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2469bc59a_Str(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _2469bc8db_Equal(jule::Ptr<_2469bc259_Prim> _self_, jule::Ptr<_2469b43d8_TypeKind> _51721_other) {
	jule::Ptr<_2469bc259_Prim> _5189_prim = _2469b6a4a_Prim(_51721_other.ptr());;
	if ((_5189_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5189_prim))._field_Kind);;
}



inline jule::Bool _2469bcd81_IsConstraint(_2469bc259_Prim* _self_) {
	return ((((!(_2469c06e1_IsStr(_self_))) && (!(_2469c0977_IsAny(_self_)))) && (!(_2469c045a_IsBool(_self_)))) && (!(_2445e30c4_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _2469bd117_IsI8(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _2469bd39d_IsI16(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _2469bd634_IsI32(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _2469bd8ba_IsI64(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _2469bdb51_IsU8(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _2469bddd7_IsU16(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _2469be16d_IsU32(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _2469be404_IsU64(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _2469be68a_IsF32(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _2469be921_IsF64(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _2469beba7_IsInt(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _2469bee3d_IsUint(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _2469c01c4_IsUintptr(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _2469c045a_IsBool(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _2469c06e1_IsStr(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _2469c0977_IsAny(_2469bc259_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _2469bc259_Prim _Src) {
	_Stream << _2469bc59a_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c1109_Str(_2469c0c85_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _2469b47a1_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2469c144a_Equal(jule::Ptr<_2469c0c85_Sptr> _self_, jule::Ptr<_2469b43d8_TypeKind> _59421_other) {
	jule::Ptr<_2469c0c85_Sptr> _5959_sptr = _2469b6cd1_Sptr(_59421_other.ptr());;
	if ((_5959_sptr == nullptr)) {
		return false;;
	};
	return _2469b4ae2_Equal((*(_self_))._field_Elem, (*(_5959_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c0c85_Sptr _Src) {
	_Stream << _2469c1109_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c1bdc_Str(_2469c1758_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _2469b47a1_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2469c202d_Equal(jule::Ptr<_2469c1758_Slc> _self_, jule::Ptr<_2469b43d8_TypeKind> _61321_other) {
	jule::Ptr<_2469c1758_Slc> _6149_slc = _2469b7aa1_Slc(_61321_other.ptr());;
	if ((_6149_slc == nullptr)) {
		return false;;
	};
	return _2469b4ae2_Equal((*(_self_))._field_Elem, (*(_6149_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c1758_Slc _Src) {
	_Stream << _2469c1bdc_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c26c1_Str(_2469c234c_Tuple* _self_) {
	_2433b0c50_StrBuilder _63013_s = static__2433b1019_New(16LL);;
	_2433b9ad3_WriteByte(&_63013_s, '(');
	_2433b982a_WriteStr(&_63013_s, _2469b47a1_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22bab6b32:;
		if (it != expr_end) {
			jule::Ptr<_2469b43d8_TypeKind> *_63316_t = it;
			{
				_2433b9ad3_WriteByte(&_63013_s, ',');
				_2433b982a_WriteStr(&_63013_s, _2469b47a1_Str((*(_63316_t)).ptr()));
			}
			_iter_next_22bab6b32:;
			++it;
			goto _iter_begin_22bab6b32;
		}
		_iter_end_22bab6b32:;
	};
	_2433b9ad3_WriteByte(&_63013_s, ')');
	return _2433ba122_Str(&_63013_s);;
}



inline jule::Bool _2469c2a12_Equal(jule::Ptr<_2469c234c_Tuple> _self_, jule::Ptr<_2469b43d8_TypeKind> _64221_other) {
	jule::Ptr<_2469c234c_Tuple> _6439_tup = _2469b8871_Tup(_64221_other.ptr());;
	if ((_6439_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6439_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _65013_i = 0LL;;
	for (; (_65013_i < (*(_self_))._field_Types.len()); (_65013_i)++) {
		{
			if ((!(_2469b4ae2_Equal((*(_self_))._field_Types[_65013_i], (*(_6439_tup))._field_Types[_65013_i])))) {
				return false;;
			};
		}
	_iter_next_22bab9816:;
	}
	_iter_end_22bab9816:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c234c_Tuple _Src) {
	_Stream << _2469c26c1_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c3271_Str(_2469c2dec_Map* _self_) {
	_2433b0c50_StrBuilder _67013_s = static__2433b1019_New(16LL);;
	_2433b982a_WriteStr(&_67013_s, jule::Str::lit("map[", 4));
	_2433b982a_WriteStr(&_67013_s, _2469b47a1_Str((*(_self_))._field_Key.ptr()));
	_2433b9ad3_WriteByte(&_67013_s, ']');
	_2433b982a_WriteStr(&_67013_s, _2469b47a1_Str((*(_self_))._field_Val.ptr()));
	return _2433ba122_Str(&_67013_s);;
}



inline jule::Bool _2469c35b2_Equal(jule::Ptr<_2469c2dec_Map> _self_, jule::Ptr<_2469b43d8_TypeKind> _67921_other) {
	jule::Ptr<_2469c2dec_Map> _6809_m = _2469b85da_Map(_67921_other.ptr());;
	if ((_6809_m == nullptr)) {
		return false;;
	};
	return (_2469b4ae2_Equal((*(_self_))._field_Key, (*(_6809_m))._field_Key) && _2469b4ae2_Equal((*(_self_))._field_Val, (*(_6809_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c2dec_Map _Src) {
	_Stream << _2469c3271_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c3ded_Str(_2469c3a79_Arr* _self_) {
	_2433b0c50_StrBuilder _69813_s = static__2433b1019_New(16LL);;
	_2433b9ad3_WriteByte(&_69813_s, '[');
	_2433b982a_WriteStr(&_69813_s, _2445d3339_Itoa((*(_self_))._field_N));
	_2433b9ad3_WriteByte(&_69813_s, ']');
	_2433b982a_WriteStr(&_69813_s, _2469b47a1_Str((*(_self_))._field_Elem.ptr()));
	return _2433ba122_Str(&_69813_s);;
}



inline jule::Bool _2469c423e_Equal(jule::Ptr<_2469c3a79_Arr> _self_, jule::Ptr<_2469b43d8_TypeKind> _70721_other) {
	jule::Ptr<_2469c3a79_Arr> _7089_arr = _2469b781a_Arr(_70721_other.ptr());;
	if ((_7089_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7089_arr))._field_N) && _2469b4ae2_Equal((*(_self_))._field_Elem, (*(_7089_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c3a79_Arr _Src) {
	_Stream << _2469c3ded_Str(&_Src);
	return _Stream;
}



inline jule::Str _2469c48c1_Str(_2469c454c_Ptr* _self_) {
	if (_2469c5086_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _2469b47a1_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _2469c4c12_Equal(jule::Ptr<_2469c454c_Ptr> _self_, jule::Ptr<_2469b43d8_TypeKind> _73121_other) {
	jule::Ptr<_2469c454c_Ptr> _7329_ptr = _2469b7067_Ptr(_73121_other.ptr());;
	if ((_7329_ptr == nullptr)) {
		return false;;
	};
	return _2469b4ae2_Equal((*(_self_))._field_Elem, (*(_7329_ptr))._field_Elem);;
}



inline jule::Bool _2469c5086_IsUnsafe(_2469c454c_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c454c_Ptr _Src) {
	_Stream << _2469c48c1_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c554d_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _2469c6c7a_pushErr(_2469c653d_typeChecker* _self_, jule::Ptr<_246819d43_Token> _81726_token, jule::Str _81741_fmt, jule::Slice<jule::Any> _81754_args) {
	_246902c83_pushErr((*(_self_))._field_s.ptr(), _81726_token, _81741_fmt, _81754_args);
}



inline void _2469c6e78_allowBuiltin(_2469c653d_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _2469c7176_disallowBuiltin(_2469c653d_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _22bac8825_pushReference(_2469c653d_typeChecker* _self_, jule::Ptr<_246853ba1_StructIns>* _82940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_22b7b859d_Exist((*(_self_))._field_refers.ptr(), (*(_82940_t)))) {
		return;;
	};
	_24686cbcb_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82940_t)), &__jule_any_type9));
}

inline void _22bacb064_pushReference(_2469c653d_typeChecker* _self_, jule::Ptr<_2468790e4_Trait>* _82940_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_22bacccd0_Exist((*(_self_))._field_refers.ptr(), (*(_82940_t)))) {
		return;;
	};
	_24686cbcb_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82940_t)), &__jule_any_type10));
}



inline void _2469c76d7_pushReferenceByKind(_2469c653d_typeChecker* _self_, jule::Ptr<_2469b43d8_TypeKind>* _83943_k) {
	{
		
		if ((_2469b80bd_Struct((*(_83943_k)).ptr()) != nullptr)) {
			_case_begin_22bac758d:;
			{
				jule::Ptr<_246853ba1_StructIns> _84217_t = _2469b80bd_Struct((*(_83943_k)).ptr());;
				_22bac8825_pushReference(_self_, &(_84217_t));
			}
		}
		else if ((_2469b8354_Trait((*(_83943_k)).ptr()) != nullptr)) {
			_case_begin_22bac7615:;
			{
				jule::Ptr<_2468790e4_Trait> _84517_t = _2469b8354_Trait((*(_83943_k)).ptr());;
				_22bacb064_pushReference(_self_, &(_84517_t));
			}
		}
		_match_end_22bac747d:;
	};
}



inline void _2469c7b05_pushCycleError(_2469c653d_typeChecker* _self_, jule::Any _85029_def1, jule::Any _85040_def2, _2433b0c50_StrBuilder* _85056_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _8529_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _85225_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_85225_def)) };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_22bad0651:;
				{
					return (*((*(_85225_def)).cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66)))._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type65) {
				_case_begin_22bad0c06:;
				{
					return (*((*(_85225_def)).cast_ptr<_246850e23_Struct>(&__jule_any_type65)))._field_Ident;;
				}
			}
			else {
				_case_begin_22bad07e9:;
				{
					return jule::Str();;
				}
			}
			_match_end_22bad0794:;
		};
	});;
	jule::Slice<jule::U8> _8629_buf = _2433baac3_Buf(_85056_message);;
	jule::Str _8639_def1Ident = _8529_getIdent(&(_85029_def1));;
	jule::Str _8649_def2Ident = _8529_getIdent(&(_85040_def2));;
	jule::Str _8659_refersTo = _24345ea79_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8639_def1Ident, &__jule_any_type4),jule::Any(_8649_def2Ident, &__jule_any_type4)}));;
	_2433b982a_WriteStr(_85056_message, _24339ae7c_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2433b982a_WriteStr(_85056_message, _8659_refersTo);
	_2433b9ad3_WriteByte(_85056_message, '\n');
	_2433b9572_Write(_85056_message, _8629_buf);
}



inline jule::Bool _2469c8001_checkCrossCycle(_2469c653d_typeChecker* _self_, jule::Any _87230_decl, _2433b0c50_StrBuilder* _87246_message) {
	{
		auto &_match_expr{ _87230_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_22bad38b8:;
			{
				jule::Ptr<_2469b35e6_TypeAlias> _87513_ta = _87230_decl.cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66);;
				{
					auto expr = &((*(_87513_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22bad404a:;
					if (it != expr_end) {
						jule::Any *_87620_d = it;
						{
							{
								
								if (((*(_87620_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_22bad4e80:;
									{
										_2469c7b05_pushCycleError(_self_, jule::Any(_87513_ta, &__jule_any_type66), (*(_87620_d)), _87246_message);
										return false;;
									}
								}
								else if ((!(_2469c8001_checkCrossCycle(_self_, (*(_87620_d)), _87246_message)))) {
									_case_begin_22bad5007:;
									{
										_2469c7b05_pushCycleError(_self_, jule::Any(_87513_ta, &__jule_any_type66), (*(_87620_d)), _87246_message);
										return false;;
									}
								}
								_match_end_22bad4d70:;
							};
						}
						_iter_next_22bad404a:;
						++it;
						goto _iter_begin_22bad404a;
					}
					_iter_end_22bad404a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22bad392e:;
			{
				jule::Ptr<_246850e23_Struct> _88713_s = _87230_decl.cast_ptr<_246850e23_Struct>(&__jule_any_type65);;
				{
					auto expr = &((*(_88713_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22bad6635:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> *_88820_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88820_d))))) {
									_case_begin_22bad705e:;
									{
										_2469c7b05_pushCycleError(_self_, jule::Any(_88713_s, &__jule_any_type65), jule::Any((*(_88820_d)), &__jule_any_type65), _87246_message);
										return false;;
									}
								}
								else if ((!(_2469c8001_checkCrossCycle(_self_, jule::Any((*(_88820_d)), &__jule_any_type65), _87246_message)))) {
									_case_begin_22bad70d6:;
									{
										_2469c7b05_pushCycleError(_self_, jule::Any(_88713_s, &__jule_any_type65), jule::Any((*(_88820_d)), &__jule_any_type65), _87246_message);
										return false;;
									}
								}
								_match_end_22bad6e4e:;
							};
						}
						_iter_next_22bad6635:;
						++it;
						goto _iter_begin_22bad6635;
					}
					_iter_end_22bad6635:;
				};
			}
		}
		_match_end_22bad3863:;
	};
	return true;;
}



inline jule::Bool _2469c83ec_checkIllegalCycles(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _90638_ident, jule::Any _90665_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90665_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22bad903e:;
			{
				if ((*(_90665_decl.cast_ptr<_246850e23_Struct>(&__jule_any_type65)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_22bad90a5:;
			{
				if ((*(_90665_decl.cast_ptr<_2469b35e6_TypeAlias>(&__jule_any_type66)))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_22bad8ed9:;
	};
	if ((_90665_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_2469c6c7a_pushErr(_self_, (*((*(_90638_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_2433b0c50_StrBuilder _92913_message = static__2433b1019_New(32LL);;
	if ((!(_2469c8001_checkCrossCycle(_self_, _90665_decl, &(_92913_message))))) {
		jule::Str _93217_errMsg = _2433ba122_Str(&_92913_message);;
		_2433ba320_Clear(&_92913_message);
		_2469c7b05_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90665_decl, &(_92913_message));
		_93217_errMsg+=_2433ba122_Str(&_92913_message);
		_2469c6c7a_pushErr(_self_, (*((*(_90638_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_93217_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_22badd41c:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90665_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22badd483:;
			{
				{
					auto &_match_expr{ _90665_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_22bade396:;
						{
							jule::Ptr<_246850e23_Struct> _94821_s = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_246850e23_Struct>(&__jule_any_type65);;
							{ jule::Slice<jule::Ptr<_246850e23_Struct>> &__jule_push_dest = (*(_94821_s))._field_Depends; __jule_push_dest.push(_90665_decl.cast_ptr<_246850e23_Struct>(&__jule_any_type65)); };
						}
					}
					_match_end_22badd807:;
				};
			}
		}
		_match_end_22badd3b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_2469b3e32_Kind> _2469c87e8_fromTypeAlias(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _95633_decl, jule::Ptr<_2469b35e6_TypeAlias>* _95660_ta) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95660_ta))))._field_Public, (*((*(_95660_ta))))._field_Token)))) {
		_2469c6c7a_pushErr(_self_, (*((*(_95633_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95660_ta))))._field_Used=true;
	if (((*((*(_95633_decl))))._field_Generics.len() > 0LL)) {
		_2469c6c7a_pushErr(_self_, (*((*(_95633_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95633_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22bae3961:;
			if (it != expr_end) {
				jule::Ptr<_2469b35e6_TypeAlias> _97320_bg = *it;
				{
					if (((_97320_bg == (*(_95660_ta))) || (((*((*((*(_95660_ta))))._field_Kind))._field_Kind != nullptr) && _2469b4ae2_Equal((*((*((*(_95660_ta))))._field_Kind))._field_Kind, (*((*(_97320_bg))._field_Kind))._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_22bae3961;
					};
				}
				_iter_next_22bae3961:;
				++it;
				goto _iter_begin_22bae3961;
			}
			_iter_end_22bae3961:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22bae4654:;
			if (it != expr_end) {
				jule::Ptr<_2469b35e6_TypeAlias> _98420_bg = *it;
				{
					if ((_98420_bg == (*(_95660_ta)))) {
						_2469c6c7a_pushErr(_self_, (*((*(_95633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95633_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95660_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22bae7426:;
						if (it != expr_end) {
							jule::Ptr<_2469b35e6_TypeAlias> _98924_dg = *it;
							{
								if ((_98420_bg == _98924_dg)) {
									_2469c6c7a_pushErr(_self_, (*((*(_95633_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95633_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_22bae7426:;
							++it;
							goto _iter_begin_22bae7426;
						}
						_iter_end_22bae7426:;
					};
				}
				_iter_next_22bae4654:;
				++it;
				goto _iter_begin_22bae4654;
			}
			_iter_end_22bae4654:;
		};
	};
	jule::Bool _99813_ok = _2469c83ec_checkIllegalCycles(_self_, _95633_decl, jule::Any((*(_95660_ta)), &__jule_any_type66));;
	if ((!(_99813_ok))) {
		return nullptr;;
	};
	if (((*((*((*(_95660_ta))))._field_Kind))._field_Kind == nullptr)) {
		_99813_ok=_24690e19b_checkTypeAliasDeclKind((*(_self_))._field_s, _95660_ta, (*(_self_))._field_lookup);
		if ((!(_99813_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95660_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = (*((*(_self_))._field_ownerAlias))._field_Generics; __jule_push_dest.push((*(_95660_ta))); };
	};
	jule::Ptr<_2469b43d8_TypeKind> _101713_tk = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Generic=(*((*(_95660_ta))))._field_Generic, ._field_Kind=(*((*((*((*(_95660_ta))))._field_Kind))._field_Kind))._field_Kind});;
	_2469c76d7_pushReferenceByKind(_self_, &(_101713_tk));
	if ((*((*(_95660_ta))))._field_Binded) {
		(*(_101713_tk))._field_BindIdent=(*((*(_95660_ta))))._field_Ident;
	} else {
		(*(_101713_tk))._field_BindIdent=(*((*((*((*(_95660_ta))))._field_Kind))._field_Kind))._field_BindIdent;
	};
	return jule::Trait<_2469b3e32_Kind>(_101713_tk, 20);;
}



inline jule::Ptr<_24687b800_Enum> _2469c8be4_fromEnum(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _103028_decl, jule::Ptr<_24687b800_Enum>* _103055_e) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103055_e))))._field_Public, (*((*(_103055_e))))._field_Token)))) {
		_2469c6c7a_pushErr(_self_, (*((*(_103028_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103028_decl))))._field_Generics.len() > 0LL)) {
		_2469c6c7a_pushErr(_self_, (*((*(_103028_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103028_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103055_e));;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2469c90e0_fromTypeEnum(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _104232_decl, jule::Ptr<_24687d00a_TypeEnum>* _104259_e) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104259_e))))._field_Public, (*((*(_104259_e))))._field_Token)))) {
		_2469c6c7a_pushErr(_self_, (*((*(_104232_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104232_decl))))._field_Generics.len() > 0LL)) {
		_2469c6c7a_pushErr(_self_, (*((*(_104232_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104232_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_104259_e));;
}



inline jule::Ptr<_2468790e4_Trait> _2469c94db_fromTrait(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _105429_decl, jule::Ptr<_2468790e4_Trait>* _105456_t) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105456_t))))._field_Public, (*((*(_105456_t))))._field_Token)))) {
		_2469c6c7a_pushErr(_self_, (*((*(_105429_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_105429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_105429_decl))))._field_Generics.len() > 0LL)) {
		_2469c6c7a_pushErr(_self_, (*((*(_105429_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_105429_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_22bacb064_pushReference(_self_, _105456_t);
	return (*(_105456_t));;
}



inline jule::Bool _2469c98d7_checkStructIns(_2469c653d_typeChecker* _self_, jule::Ptr<_246853ba1_StructIns>* _106738_ins, jule::Ptr<_246819d43_Token>* _106760_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106738_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106738_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*((*(_106738_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_24691a790_precheckStructIns((*(_self_))._field_s, _106738_ins, (*(_106760_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106738_ins))))._field_Generics.len() > 0LL)) {
		_24691b2a7_checkStructInsOperators((*(_self_))._field_s, (*(_106738_ins)));
		_24691aa48_checkStructIns((*(_self_))._field_s, _106738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _2469c9b90_appendUsedStructReference(_2469c653d_typeChecker* _self_, jule::Ptr<_246850e23_Struct>* _108849_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_22bb09b86:;
			{
				jule::Ptr<_246850e23_Struct> _109417_refS = (*((*(_self_))._field_referencer))._field_owner.cast_ptr<_246850e23_Struct>(&__jule_any_type65);;
				if ((!(_2468528a3_IsUses(_109417_refS.ptr(), (*(_108849_s)))))) {
					{ jule::Slice<jule::Ptr<_246850e23_Struct>> &__jule_push_dest = (*(_109417_refS))._field_Uses; __jule_push_dest.push((*(_108849_s))); };
				};
			}
		}
		_match_end_22bb09b31:;
	};
}



inline jule::Ptr<_246853ba1_StructIns> _2469ca08b_buildStructInstance(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _110143_decl, jule::Ptr<_246850e23_Struct>* _110170_s) {
	jule::Ptr<_2469c554d_referencer> _110313_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> _110513_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_22bb0c6d3:;
				{
					jule::Ptr<_2468aea64_scopeChecker> _111221_sc = (*(_self_))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0);;
					jule::Ptr<_2468aea64_scopeChecker> _111321_hard = _2468b2ddb_getHardRoot(_111221_sc);;
					if ((((*((*(_111321_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_111321_hard))._field_owner))._field_Owner))._field_Decl != (*(_110170_s))))) {
						goto _match_end_22bb0c67d;
					};
					jule::I64 _111717_n = ((*((*(_111321_hard))._field_owner))._field_Generics.len() + (*((*((*(_111321_hard))._field_owner))._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*(_111321_hard))._field_table))._field_TypeAliases.slice(0LL, _111717_n);
				}
			}
			_match_end_22bb0c67d:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_2469d41b6_Lookup> _112713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_246853ba1_StructIns> _113113_ins = _246851385_instance((*(_110170_s)));;
	(*(_113113_ins))._field_Generics=jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>>::alloc(0LL, (*((*(_110143_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_110143_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb11cae:;
		if (it != expr_end) {
			jule::Ptr<_246830320_TypeDecl> _113321_g = *it;
			{
				jule::Ptr<_2469b43d8_TypeKind> _113417_kind = _2469cd897_build(_self_, &((*(_113321_g))._field_Kind));;
				if ((_113417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_2469b2a02_InsGeneric>> &__jule_push_dest = (*(_113113_ins))._field_Generics; __jule_push_dest.push(jule::new_ptr<_2469b2a02_InsGeneric>(_2469b2a02_InsGeneric{._field_Kind=_113417_kind, })); };
			}
			_iter_next_22bb11cae:;
			++it;
			goto _iter_begin_22bb11cae;
		}
		_iter_end_22bb11cae:;
	};
	(*(_self_))._field_lookup=_112713_lookup;
	(*(_self_))._field_bannedGenerics=_110513_bannedGenerics;
	(*(_self_))._field_referencer=_110313_referencer;
	return _113113_ins;;
}



inline jule::Ptr<_246853ba1_StructIns> _2469ca487_fromStruct(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _114934_decl, jule::Ptr<_246850e23_Struct>* _114961_s) {
	if ((!(_2469034e2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114961_s))))._field_Public, (*((*(_114961_s))))._field_Token)))) {
		_2469c6c7a_pushErr(_self_, (*((*(_114934_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114934_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114934_decl))))._field_Generics.len() > 0LL)) {
			_2469c6c7a_pushErr(_self_, (*((*(_114934_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_246853ba1_StructIns>(_246853ba1_StructIns{._field_Decl=(*(_114961_s)), });;
	};
	jule::Bool _116713_ok = _2469c83ec_checkIllegalCycles(_self_, _114934_decl, jule::Any((*(_114961_s)), &__jule_any_type65));;
	if ((!(_116713_ok))) {
		return nullptr;;
	};
	_2469c9b90_appendUsedStructReference(_self_, _114961_s);
	jule::Ptr<_246853ba1_StructIns> _117313_ins = _2469ca08b_buildStructInstance(_self_, _114934_decl, _114961_s);;
	if ((_117313_ins == nullptr)) {
		return nullptr;;
	};
	_116713_ok=_2469042b2_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>((*((*(_117313_ins))._field_Decl))._field_Generics.len()), static_cast<jule::I64>((*(_117313_ins))._field_Generics.len()), (*((*(_114934_decl))))._field_Token);
	if ((!(_116713_ok))) {
		return nullptr;;
	};
	jule::Ptr<_246853ba1_StructIns> _118313_existInstance = _246851693_appendInstance((*(_114961_s)).ptr(), &(_117313_ins));;
	if ((_118313_existInstance != nullptr)) {
		if ((!(_24690c397_checkConstraintsStruct((*(_self_))._field_s, &(_117313_ins), &((*((*(_114934_decl))))._field_Token), _118313_existInstance)))) {
			return nullptr;;
		};
		_22bac8825_pushReference(_self_, &(_118313_existInstance));
		return _118313_existInstance;;
	};
	if ((!(_2469c98d7_checkStructIns(_self_, &(_117313_ins), &((*((*(_114934_decl))))._field_Token))))) {
		return nullptr;;
	};
	_22bac8825_pushReference(_self_, &(_117313_ins));
	return _117313_ins;;
}



inline jule::Trait<_2469b3e32_Kind> _2469ca7c8_getDef(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl>* _120730_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb1b34b:;
		if (it != expr_end) {
			jule::Ptr<_24683c52a_GenericDecl> _120816_g = *it;
			{
				if (((*(_120816_g))._field_Ident == (*((*(_120730_decl))))._field_Ident)) {
					return jule::Trait<_2469b3e32_Kind>(_2469d159d_buildPrimType((*(_120816_g))._field_Ident), 21);;
				};
			}
			_iter_next_22bb1b34b:;
			++it;
			goto _iter_begin_22bb1b34b;
		}
		_iter_end_22bb1b34b:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb1c65a:;
		if (it != expr_end) {
			jule::Ptr<_2469b35e6_TypeAlias> _121421_g = *it;
			{
				if (((*(_121421_g))._field_Ident == (*((*(_120730_decl))))._field_Ident)) {
					if (((*((*(_120730_decl))))._field_Generics.len() > 0LL)) {
						_2469c6c7a_pushErr(_self_, (*((*(_120730_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120730_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_246853ba1_StructIns> _122021_st = _2469b80bd_Struct((*((*(_121421_g))._field_Kind))._field_Kind.ptr());;
					if ((_122021_st != nullptr)) {
						jule::Bool _122221_ok = _2469c83ec_checkIllegalCycles(_self_, _120730_decl, jule::Any((*(_122021_st))._field_Decl, &__jule_any_type65));;
						if ((!(_122221_ok))) {
							return nullptr;;
						};
					};
					return (*((*((*(_121421_g))._field_Kind))._field_Kind))._field_Kind;;
				};
			}
			_iter_next_22bb1c65a:;
			++it;
			goto _iter_begin_22bb1c65a;
		}
		_iter_end_22bb1c65a:;
	};
	if ((!((*((*(_120730_decl))))._field_Binded))) {
		jule::Ptr<_24687b800_Enum> _123217_e = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d3c21_FindEnum((*(_self_))._field_lookup, (*((*(_120730_decl))))._field_Ident);;
		if ((_123217_e != nullptr)) {
			return jule::Trait<_2469b3e32_Kind>(_2469c8be4_fromEnum(_self_, _120730_decl, &(_123217_e)), 3);;
		};
		jule::Ptr<_24687d00a_TypeEnum> _123717_te = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d4062_FindTypeEnum((*(_self_))._field_lookup, (*((*(_120730_decl))))._field_Ident);;
		if ((_123717_te != nullptr)) {
			return jule::Trait<_2469b3e32_Kind>(_2469c90e0_fromTypeEnum(_self_, _120730_decl, &(_123717_te)), 4);;
		};
		jule::Ptr<_2468790e4_Trait> _124217_t = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d38d0_FindTrait((*(_self_))._field_lookup, (*((*(_120730_decl))))._field_Ident);;
		if ((_124217_t != nullptr)) {
			return jule::Trait<_2469b3e32_Kind>(_2469c94db_fromTrait(_self_, _120730_decl, &(_124217_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_2469c6c7a_pushErr(_self_, (*((*(_120730_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246850e23_Struct> _125113_s = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d3193_FindStruct((*(_self_))._field_lookup, (*((*(_120730_decl))))._field_Ident, (*((*(_120730_decl))))._field_Binded);;
	if ((_125113_s != nullptr)) {
		return jule::Trait<_2469b3e32_Kind>(_2469ca487_fromStruct(_self_, _120730_decl, &(_125113_s)), 0);;
	};
	jule::Ptr<_2469b35e6_TypeAlias> _125613_ta = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d2c97_FindTypeAlias((*(_self_))._field_lookup, (*((*(_120730_decl))))._field_Ident, (*((*(_120730_decl))))._field_Binded);;
	if (((_125613_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_125613_ta=_246b28360_findBuiltinTypeAlias((*((*(_120730_decl))))._field_Ident);
	};
	if ((_125613_ta != nullptr)) {
		return _2469c87e8_fromTypeAlias(_self_, _120730_decl, &(_125613_ta));;
	};
	_2469c6c7a_pushErr(_self_, (*((*(_120730_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120730_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait<_2469b3e32_Kind> _2469cab19_buildIdent(_2469c653d_typeChecker* _self_, jule::Ptr<_24683092a_IdentTypeDecl> _126833_decl) {
	return _2469ca7c8_getDef(_self_, &(_126833_decl));;
}



inline jule::Trait<_2469b3e32_Kind> _2469cae5a_buildSubIdent(_2469c653d_typeChecker* _self_, jule::Ptr<_246830c27_SubIdentTypeDecl> _127236_decl) {
	jule::Trait<_2469b3e32_Kind> _127313_ident = _2469cab19_buildIdent(_self_, (*(_127236_decl))._field_Idents[0LL]);;
	if ((_127313_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _127313_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_22bb28c2c:;
			{
				goto _match_end_22bb28699;
			}
		}
		else {
			_case_begin_22bb286ee:;
			{
				_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bb28699:;
	};
	jule::Ptr<_24687d00a_TypeEnum> _128413_t = _127313_ident.cast_ptr<_24687d00a_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> _128513_idents = (*(_127236_decl))._field_Idents.slice(1LL);;
	{
		auto expr = &(_128513_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb299b9:;
		if (it != expr_end) {
			jule::I64 _128613_i = it - expr->begin();
			jule::Ptr<_24683092a_IdentTypeDecl> _128616_id = *it;
			{
				jule::Ptr<_24687c933_TypeEnumItem> _128717_item = _24687dabb_FindItem(_128413_t.ptr(), (*(_128616_id))._field_Ident);;
				if ((_128717_item == nullptr)) {
					_2469c6c7a_pushErr(_self_, (*(_128616_id))._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*(_128413_t))._field_Ident, &__jule_any_type4),jule::Any((*(_128616_id))._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_128513_idents.len() - _128613_i) == 1LL)) {
					_2469c76d7_pushReferenceByKind(_self_, &((*((*(_128717_item))._field_Kind))._field_Kind));
					return jule::Trait<_2469b3e32_Kind>((*((*(_128717_item))._field_Kind))._field_Kind, 20);;
				};
				_128413_t=_2469b7584_TypeEnum((*((*(_128717_item))._field_Kind))._field_Kind.ptr());
				if ((_128413_t == nullptr)) {
					_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_22bb299b9:;
			++it;
			_128613_i++;
			goto _iter_begin_22bb299b9;
		}
		_iter_end_22bb299b9:;
	};
	return nullptr;;
}



inline jule::Ptr<_2469c0c85_Sptr> _2469cb29b_buildSptrFromType(_2469c653d_typeChecker* _self_, jule::Ptr<_2469b43d8_TypeKind>* _130641_elem) {
	{
		
		if (((*(_130641_elem)) == nullptr)) {
			_case_begin_22bb2e00c:;
			{
				return nullptr;;
			}
		}
		else if ((_2469b80bd_Struct((*(_130641_elem)).ptr()) != nullptr)) {
			_case_begin_22bb2e084:;
			{
				jule::Ptr<_246853ba1_StructIns> _131213_s = _2469b80bd_Struct((*(_130641_elem)).ptr());;
				if ((((*(_131213_s))._field_Decl != nullptr) && (*((*(_131213_s))._field_Decl))._field_Binded)) {
					_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_2469b781a_Arr((*(_130641_elem)).ptr()) != nullptr) && (*(_2469b781a_Arr((*(_130641_elem)).ptr())))._field_Auto)) {
			_case_begin_22bb2e10b:;
			{
				_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bb2a2e4:;
	};
	return jule::new_ptr<_2469c0c85_Sptr>(_2469c0c85_Sptr{._field_Elem=(*(_130641_elem))});;
}



inline jule::Ptr<_2469c0c85_Sptr> _2469cb5dc_buildSptr(_2469c653d_typeChecker* _self_, jule::Ptr<_2468313ba_SptrTypeDecl> _132632_decl) {
	jule::Bool _13279_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13279_cycleRisk;
	});;
	jule::Ptr<_2469b43d8_TypeKind> _133113_elem = _2469cdbd8_checkDecl(_self_, &((*(_132632_decl))._field_Elem));;
	return _2469cb29b_buildSptrFromType(_self_, &(_133113_elem));;
}



inline jule::Ptr<_2469c454c_Ptr> _2469cb92d_buildPtrFromType(_2469c653d_typeChecker* _self_, jule::Ptr<_2469b43d8_TypeKind>* _133540_elem) {
	{
		
		if (((*(_133540_elem)) == nullptr)) {
			_case_begin_22bb33c26:;
			{
				return nullptr;;
			}
		}
		else if (((_2469b781a_Arr((*(_133540_elem)).ptr()) != nullptr) && (*(_2469b781a_Arr((*(_133540_elem)).ptr())))._field_Auto)) {
			_case_begin_22bb33c9d:;
			{
				_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_2469c454c_Ptr>();;
			}
		}
		_match_end_22bb33b16:;
	};
	return jule::new_ptr<_2469c454c_Ptr>(_2469c454c_Ptr{._field_Elem=(*(_133540_elem))});;
}



inline jule::Ptr<_2469c454c_Ptr> _2469cbc6e_buildPtr(_2469c653d_typeChecker* _self_, jule::Ptr<_246831d49_PtrTypeDecl> _135031_decl) {
	jule::Bool _13519_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13519_cycleRisk;
	});;
	jule::Ptr<_2469b43d8_TypeKind> _135517_elem = nullptr;;
	if ((!(_2468321ac_IsUnsafe(_135031_decl.ptr())))) {
		_135517_elem=_2469cdbd8_checkDecl(_self_, &((*(_135031_decl))._field_Elem));
		return _2469cb92d_buildPtrFromType(_self_, &(_135517_elem));;
	};
	return jule::new_ptr<_2469c454c_Ptr>(_2469c454c_Ptr{._field_Elem=_135517_elem});;
}



inline jule::Ptr<_2469c1758_Slc> _2469cc0b0_buildSlc(_2469c653d_typeChecker* _self_, jule::Ptr<_246831750_SlcTypeDecl> _136731_decl) {
	jule::Bool _13689_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13689_cycleRisk;
	});;
	jule::Ptr<_2469b43d8_TypeKind> _137213_elem = _2469cdbd8_checkDecl(_self_, &((*(_136731_decl))._field_Elem));;
	{
		
		if ((_137213_elem == nullptr)) {
			_case_begin_22bb3891d:;
			{
				return nullptr;;
			}
		}
		else if (((_2469b781a_Arr(_137213_elem.ptr()) != nullptr) && (*(_2469b781a_Arr(_137213_elem.ptr())))._field_Auto)) {
			_case_begin_22bb38995:;
			{
				_2469c6c7a_pushErr(_self_, (*((*(_136731_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bb38863:;
	};
	return jule::new_ptr<_2469c1758_Slc>(_2469c1758_Slc{._field_Elem=_137213_elem});;
}



inline jule::Ptr<_2469c3a79_Arr> _2469cc401_buildArr(_2469c653d_typeChecker* _self_, jule::Ptr<_2468325db_ArrTypeDecl> _138831_decl) {
	jule::I64 _138913_n = 0LL;;
	if ((!(_24683294e_AutoSized(_138831_decl.ptr())))) {
		jule::Ptr<_246983ac2_Data> _139217_size = _2469a3a26_evalExpr(_24690a230_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*(_138831_decl))._field_Size);;
		if ((_139217_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_246984496_IsConst(_139217_size.ptr())))) {
			_2469c6c7a_pushErr(_self_, (*((*(_138831_decl))._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_2469b6a4a_Prim((*(_139217_size))._field_Kind.ptr()) == nullptr) || (!(_2445e29b9_IsInt((*(_2469b6a4a_Prim((*(_139217_size))._field_Kind.ptr())))._field_Kind))))) {
			_2469c6c7a_pushErr(_self_, (*((*(_138831_decl))._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138913_n=static_cast<jule::I64>(static_cast<jule::I64>(_2445e5c42_AsI64((*(_139217_size))._field_Constant.ptr())));
		if ((_138913_n < 0LL)) {
			_2469c6c7a_pushErr(_self_, (*((*(_138831_decl))._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _141017_max = _2445db8d6_MaxI(jule::Str::lit("int", 3));;
			if (((_2445d45d2_BitSize != 64LL) && (static_cast<jule::I64>(_138913_n) > _141017_max))) {
				_2469c6c7a_pushErr(_self_, (*((*(_138831_decl))._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_2469b0cca_constoa(&((*(_139217_size))._field_Constant)), &__jule_any_type4),jule::Any(_2445d3070_FmtInt(_141017_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_2469b43d8_TypeKind> _141913_elem = _2469cdbd8_checkDecl(_self_, &((*(_138831_decl))._field_Elem));;
	{
		
		if ((_141913_elem == nullptr)) {
			_case_begin_22bb42c13:;
			{
				return nullptr;;
			}
		}
		else if (((_2469b781a_Arr(_141913_elem.ptr()) != nullptr) && (*(_2469b781a_Arr(_141913_elem.ptr())))._field_Auto)) {
			_case_begin_22bb42c8a:;
			{
				_2469c6c7a_pushErr(_self_, (*((*(_138831_decl))._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bb42b8b:;
	};
	return jule::new_ptr<_2469c3a79_Arr>(_2469c3a79_Arr{._field_Auto=_24683294e_AutoSized(_138831_decl.ptr()), ._field_N=_138913_n, ._field_Elem=_141913_elem});;
}



inline jule::Ptr<_2469c2dec_Map> _2469cc742_buildMap(_2469c653d_typeChecker* _self_, jule::Ptr<_246832d39_MapTypeDecl> _143731_decl) {
	jule::Bool _14389_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14389_cycleRisk;
	});;
	jule::Ptr<_2469b43d8_TypeKind> _144213_key = _2469cdbd8_checkDecl(_self_, &((*(_143731_decl))._field_Key));;
	if ((_144213_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2469b43d8_TypeKind> _144713_val = _2469cdbd8_checkDecl(_self_, &((*(_143731_decl))._field_Val));;
	if ((_144713_val == nullptr)) {
		return nullptr;;
	};
	if ((_2469b72ed_Enum(_144713_val.ptr()) != nullptr)) {
		_2469c6c7a_pushErr(_self_, (*((*(_143731_decl))._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_2469c2dec_Map>(_2469c2dec_Map{._field_Key=_144213_key, ._field_Val=_144713_val});;
}



inline jule::Ptr<_2469c234c_Tuple> _2469cca83_buildTuple(_2469c653d_typeChecker* _self_, jule::Ptr<_246831a4c_TupleTypeDecl> _146133_decl) {
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _146213_types = jule::Slice<jule::Ptr<_2469b43d8_TypeKind>>::alloc(0LL, (*(_146133_decl))._field_Types.len());;
	{
		auto expr = &((*(_146133_decl))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb48620:;
		if (it != expr_end) {
			jule::Ptr<_246830320_TypeDecl> _146321_t = *it;
			{
				jule::Ptr<_2469b43d8_TypeKind> _146417_kind = _2469cdbd8_checkDecl(_self_, &(_146321_t));;
				if ((_146417_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> &__jule_push_dest = _146213_types; __jule_push_dest.push(_146417_kind); };
			}
			_iter_next_22bb48620:;
			++it;
			goto _iter_begin_22bb48620;
		}
		_iter_end_22bb48620:;
	};
	return jule::new_ptr<_2469c234c_Tuple>(_2469c234c_Tuple{._field_Types=_146213_types});;
}



inline jule::Bool _2469ccdc4_checkFuncTypes(_2469c653d_typeChecker* _self_, jule::Ptr<_246868c1b_FnIns>* _147438_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_147438_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb4a05b:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> _147521_p = *it;
			{
				(*(_147521_p))._field_Kind=_2469cd897_build(_self_, &((*((*((*((*(_147521_p))._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*(_147521_p))._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_24690ca4b_checkFnParamKind((*(_self_))._field_s, &(_147521_p));
			}
			_iter_next_22bb4a05b:;
			++it;
			goto _iter_begin_22bb4a05b;
		}
		_iter_end_22bb4a05b:;
	};
	if ((!(_24686628a_IsVoid((*((*(_147438_f))))._field_Decl.ptr())))) {
		(*((*(_147438_f))))._field_Result=_2469cd897_build(_self_, &((*((*((*((*((*((*(_147438_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_147438_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_246868c1b_FnIns> _2469cd215_buildFunc(_2469c653d_typeChecker* _self_, jule::Ptr<_246841ed0_FnDecl> _149232_decl) {
	jule::Bool _14939_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14939_cycleRisk;
	});;
	if (((*(_149232_decl))._field_Generics.len() > 0LL)) {
		_2469c6c7a_pushErr(_self_, (*(_149232_decl))._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246865d17_Fn> _150213_f = _246870409_buildFunc(_149232_decl);;
	jule::I64 _15049_n = (*((*(_self_))._field_s))._field_errors.len();;
	_246916d41_checkAnonFuncDecl((*(_self_))._field_s, &(_150213_f));
	if ((_15049_n != (*((*(_self_))._field_s))._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _151013_ins = _2468672e1_instanceForce(_150213_f);;
	(*(_151013_ins))._field_Anon=true;
	jule::Bool _15139_ok = _2469ccdc4_checkFuncTypes(_self_, &(_151013_ins));;
	if ((!(_15139_ok))) {
		return nullptr;;
	};
	return _151013_ins;;
}



inline jule::Trait<_2469b3e32_Kind> _2469cd556_buildByNamespace(_2469c653d_typeChecker* _self_, jule::Ptr<_2468310bd_NamespaceTypeDecl> _152139_decl) {
	jule::Str _15229_path = _2469d1207_buildLinkPathByTokens(&((*(_152139_decl))._field_Idents));;
	jule::Ptr<_2468c8bd2_ImportInfo> _152313_imp = _2469d41b6_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._2469d24a0_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>([=](jule::Ptr<_2468c8bd2_ImportInfo> _152349_imp) mutable -> jule::Bool {
		if ((((*(_152139_decl))._field_Idents.len() == 1LL) && ((*(_152349_imp))._field_Alias == _15229_path))) {
			return true;;
		};
		return (((*(_152349_imp))._field_LinkPath == _15229_path) && _2468cb7ea_isAccessibleViaSelection(_152349_imp.ptr()));;
	}));;
	jule::Str _15309_selfIdent = jule::Str::lit("self", 4);;
	if (((_152313_imp == nullptr) || (!(_2468cb223_isLookupable(_152313_imp.ptr(), &(_15309_selfIdent)))))) {
		_2469c6c7a_pushErr(_self_, (*(_152139_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15229_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_2469c7176_disallowBuiltin(_self_);
	jule::Trait<_2469d41b6_Lookup> _153713_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_2469d41b6_Lookup>(_152313_imp, 1);
	jule::Ptr<_2469b43d8_TypeKind> _153913_kind = _2469cdbd8_checkDecl(_self_, &((*(_152139_decl))._field_Kind));;
	(*(_self_))._field_lookup=_153713_lookup;
	_2469c6e78_allowBuiltin(_self_);
	return jule::Trait<_2469b3e32_Kind>(_153913_kind, 20);;
}



inline jule::Ptr<_2469b43d8_TypeKind> _2469cd897_build(_2469c653d_typeChecker* _self_, jule::Any* _154529_declKind) {
	jule::Trait<_2469b3e32_Kind> _154617_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154529_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_22bb59367:;
			{
				jule::Trait<_2469b3e32_Kind> _154917_t = _2469cab19_buildIdent(_self_, (*(_154529_declKind)).cast_ptr<_24683092a_IdentTypeDecl>(&__jule_any_type20));;
				if ((_154917_t != nullptr)) {
					_154617_kind=_154917_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_22bb5872e:;
			{
				jule::Trait<_2469b3e32_Kind> _155417_t = _2469cae5a_buildSubIdent(_self_, (*(_154529_declKind)).cast_ptr<_246830c27_SubIdentTypeDecl>(&__jule_any_type86));;
				if ((_155417_t != nullptr)) {
					_154617_kind=_155417_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_22bb5892c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c0c85_Sptr> _156017_t = _2469cb5dc_buildSptr(_self_, (*(_154529_declKind)).cast_ptr<_2468313ba_SptrTypeDecl>(&__jule_any_type72));;
				if ((_156017_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_156017_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_22bb58993:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c454c_Ptr> _156617_t = _2469cbc6e_buildPtr(_self_, (*(_154529_declKind)).cast_ptr<_246831d49_PtrTypeDecl>(&__jule_any_type71));;
				if ((_156617_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_156617_t, 27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_22bb58a09:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c1758_Slc> _157217_t = _2469cc0b0_buildSlc(_self_, (*(_154529_declKind)).cast_ptr<_246831750_SlcTypeDecl>(&__jule_any_type70));;
				if ((_157217_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_157217_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_22bb58a70:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c3a79_Arr> _157817_t = _2469cc401_buildArr(_self_, (*(_154529_declKind)).cast_ptr<_2468325db_ArrTypeDecl>(&__jule_any_type69));;
				if ((_157817_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_157817_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_22bb59444:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c2dec_Map> _158417_t = _2469cc742_buildMap(_self_, (*(_154529_declKind)).cast_ptr<_246832d39_MapTypeDecl>(&__jule_any_type73));;
				if ((_158417_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_158417_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_22bb594aa:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_2469c234c_Tuple> _159017_t = _2469cca83_buildTuple(_self_, (*(_154529_declKind)).cast_ptr<_246831a4c_TupleTypeDecl>(&__jule_any_type74));;
				if ((_159017_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_159017_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_22bb59521:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_246868c1b_FnIns> _159617_t = _2469cd215_buildFunc(_self_, (*(_154529_declKind)).cast_ptr<_246841ed0_FnDecl>(&__jule_any_type14));;
				if ((_159617_t != nullptr)) {
					_154617_kind=jule::Trait<_2469b3e32_Kind>(_159617_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_22bb59587:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_2469b3e32_Kind> _160217_t = _2469cd556_buildByNamespace(_self_, (*(_154529_declKind)).cast_ptr<_2468310bd_NamespaceTypeDecl>(&__jule_any_type90));;
				if ((_160217_t != nullptr)) {
					_154617_kind=_160217_t;
				};
			}
		}
		else {
			_case_begin_22bb588b6:;
			{
				_2469c6c7a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bb58861:;
	};
	if ((_154617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154617_kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_22bb6597d:;
			{
				return _154617_kind.cast_ptr<_2469b43d8_TypeKind>(20);;
			}
		}
		else {
			_case_begin_22bb6366d:;
			{
				jule::Ptr<_2469b43d8_TypeKind> _161717_tk = jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=_154617_kind});;
				{
					auto &_match_expr{ _154617_kind };
					
					if (_match_expr.type_is(true, 21)) {
						_case_begin_22bb64350:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_161717_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_22bb643c7:;
						{
							jule::Ptr<_246853ba1_StructIns> _162417_s = _154617_kind.cast_ptr<_246853ba1_StructIns>(0);;
							if ((((*(_162417_s))._field_Decl != nullptr) && (*((*(_162417_s))._field_Decl))._field_Binded)) {
								(*(_161717_tk))._field_BindIdent=(*((*(_162417_s))._field_Decl))._field_Ident;
							};
						}
					}
					_match_end_22bb642d9:;
				};
				return _161717_tk;;
			}
		}
		_match_end_22bb595ed:;
	};
}



inline jule::Ptr<_2469b43d8_TypeKind> _2469cdbd8_checkDecl(_2469c653d_typeChecker* _self_, jule::Ptr<_246830320_TypeDecl>* _163333_decl) {
	jule::Ptr<_246819d43_Token> _163513_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_163333_decl))))._field_Token;
	jule::Ptr<_2469b43d8_TypeKind> _163813_kind = _2469cd897_build(_self_, &((*((*(_163333_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_163513_errorToken;
	return _163813_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _2469c653d_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__2469ce634_prim(jule::Str* _166021_ident, jule::Ptr<_2469bc259_Prim> _166033_t) {
	return ((*(_166033_t))._field_Kind == (*(_166021_ident)));;
}



inline jule::Bool static__2469ce9a8_exist(jule::Str* _166422_ident, jule::Ptr<_2469b43d8_TypeKind>* _166439_k) {
	{
		
		if ((_2469b6a4a_Prim((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6a6b9:;
			{
				return static__2469ce634_prim(_166422_ident, _2469b6a4a_Prim((*(_166439_k)).ptr()));;
			}
		}
		else if ((_2469b6cd1_Sptr((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6a741:;
			{
				jule::Ptr<_2469c0c85_Sptr> _166917_sptr = _2469b6cd1_Sptr((*(_166439_k)).ptr());;
				return static__2469ce9a8_exist(_166422_ident, &((*(_166917_sptr))._field_Elem));;
			}
		}
		else if ((_2469b7067_Ptr((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6a9b6:;
			{
				jule::Ptr<_2469c454c_Ptr> _167217_ptr = _2469b7067_Ptr((*(_166439_k)).ptr());;
				return static__2469ce9a8_exist(_166422_ident, &((*(_167217_ptr))._field_Elem));;
			}
		}
		else if ((_2469b7aa1_Slc((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6aa2c:;
			{
				jule::Ptr<_2469c1758_Slc> _167517_slc = _2469b7aa1_Slc((*(_166439_k)).ptr());;
				return static__2469ce9a8_exist(_166422_ident, &((*(_167517_slc))._field_Elem));;
			}
		}
		else if ((_2469b781a_Arr((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6aa93:;
			{
				jule::Ptr<_2469c3a79_Arr> _167817_arr = _2469b781a_Arr((*(_166439_k)).ptr());;
				return static__2469ce9a8_exist(_166422_ident, &((*(_167817_arr))._field_Elem));;
			}
		}
		else if ((_2469b85da_Map((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6ab1a:;
			{
				jule::Ptr<_2469c2dec_Map> _168117_m = _2469b85da_Map((*(_166439_k)).ptr());;
				return (static__2469ce9a8_exist(_166422_ident, &((*(_168117_m))._field_Key)) || static__2469ce9a8_exist(_166422_ident, &((*(_168117_m))._field_Val)));;
			}
		}
		else if ((_2469b80bd_Struct((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6ab92:;
			{
				jule::Ptr<_246853ba1_StructIns> _168517_s = _2469b80bd_Struct((*(_166439_k)).ptr());;
				{
					auto expr = &((*(_168517_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22bb7696c:;
					if (it != expr_end) {
						jule::Ptr<_2469b2a02_InsGeneric> _168625_g = *it;
						{
							if (static__2469ce9a8_exist(_166422_ident, &((*(_168625_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_22bb7696c:;
						++it;
						goto _iter_begin_22bb7696c;
					}
					_iter_end_22bb7696c:;
				};
				return false;;
			}
		}
		else if ((_2469b7d37_Fn((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6aca2:;
			{
				jule::Ptr<_246868c1b_FnIns> _169317_f = _2469b7d37_Fn((*(_166439_k)).ptr());;
				{
					auto expr = &((*(_169317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22bb782ba:;
					if (it != expr_end) {
						jule::Ptr<_246867c70_ParamIns> _169425_p = *it;
						{
							if (_24686495e_IsSelf((*(_169425_p))._field_Decl.ptr())) {
								goto _iter_next_22bb782ba;
							};
							if (static__2469ce9a8_exist(_166422_ident, &((*(_169425_p))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_22bb782ba:;
						++it;
						goto _iter_begin_22bb782ba;
					}
					_iter_end_22bb782ba:;
				};
				if (((*(_169317_f))._field_Result != nullptr)) {
					return static__2469ce9a8_exist(_166422_ident, &((*(_169317_f))._field_Result));;
				};
				return false;;
			}
		}
		else if ((_2469b8871_Tup((*(_166439_k)).ptr()) != nullptr)) {
			_case_begin_22bb6ad18:;
			{
				jule::Ptr<_2469c234c_Tuple> _170717_tup = _2469b8871_Tup((*(_166439_k)).ptr());;
				{
					auto expr = &((*(_170717_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22bb7771a:;
					if (it != expr_end) {
						jule::Ptr<_2469b43d8_TypeKind> _170825_t = *it;
						{
							if (static__2469ce9a8_exist(_166422_ident, &(_170825_t))) {
								return true;;
							};
						}
						_iter_next_22bb7771a:;
						++it;
						goto _iter_begin_22bb7771a;
					}
					_iter_end_22bb7771a:;
				};
				return false;;
			}
		}
		else {
			_case_begin_22bb6a576:;
			{
				return false;;
			}
		}
		_match_end_22bb6a4bb:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2469ce1c2_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _227b84a06_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _227bcd236_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _227bce237_stop(_227bcdac7_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _227bce4bd_stopped(_227bcdac7_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _227bce754_finished(_227bcdac7_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _227bce9da_isLastSt(_227bcdac7_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _227bced4d_pushErr(_227bcdac7_scopeParser* _self_, jule::Ptr<_246819d43_Token> _18926_token, jule::Str _18941_fmt) {
	_227bec4db_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _227bd01b1_pushSuggestion(_227bcdac7_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_227bec84e_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _227bd0469_insertAsNext(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_227bcd236_stmt>(_227bcd236_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_227bcd236_stmt> _227bd0700_next(_227bcdac7_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_246840341_ScopeTree> _227bd0aeb_buildScope(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _20834_tokens, jule::Ptr<_246819d43_Token> _20856_end) {
	jule::Ptr<_246840341_ScopeTree> _20913_s = _227bcbeb0_newScope();;
	(*(_20913_s))._field_Parent=(*(_self_))._field_s;
	(*(_20913_s))._field_End=_20856_end;
	_227bcdac7_scopeParser _21213_ssp = _227bcdac7_scopeParser{._field_p=(*(_self_))._field_p, };;
	_227bda62d_build(&_21213_ssp, _20834_tokens, &(_20913_s));
	return _20913_s;;
}



inline jule::Ptr<_2468430ad_VarDecl> _227bd0e3c_buildVarSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _21934_tokens) {
	jule::Ptr<_2468430ad_VarDecl> _22013_v = _227c00368_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	(*(_22013_v))._field_Scope=(*(_self_))._field_s;
	return _22013_v;;
}



inline jule::Ptr<_246843487_RetSt> _227bd127d_buildRetSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _22533_tokens) {
	jule::Ptr<_246843487_RetSt> _22613_st = jule::new_ptr<_246843487_RetSt>(_246843487_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		(_22533_tokens).mut_slice(1LL);;
		(*(_22613_st))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22613_st;;
}



inline jule::Ptr<_246843b2a_Iter> _227bd15be_buildWhileNextIter(_227bcdac7_scopeParser* _self_, jule::Ptr<_227bcd236_stmt>* _23642_s) {
	jule::Ptr<_246843b2a_Iter> _23713_it = jule::new_ptr<_246843b2a_Iter>(_246843b2a_Iter{._field_Token=(*((*(_23642_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_246819d43_Token>> _24013_tokens = (*((*(_23642_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_246844455_WhileKind> _24113_kind = jule::new_ptr<_246844455_WhileKind>();;
	if ((_24013_tokens.len() > 0LL)) {
		(*(_24113_kind))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, &(_24013_tokens));
	};
	if (_227bce9da_isLastSt(_self_)) {
		_227bced4d_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_24013_tokens=(*(_227bd0700_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_246819d43_Token>> _25313_stTokens = _227be6eb9_getBlockExpr(&(_24013_tokens));;
	if ((_25313_stTokens.len() > 0LL)) {
		jule::Ptr<_227bcd236_stmt> _25517_stmt = jule::new_ptr<_227bcd236_stmt>(_227bcd236_stmt{._field_tokens=_25313_stTokens, ._field_terminated=(*((*(_23642_s))))._field_terminated});;
		(*(_24113_kind))._field_NextToken=_25313_stTokens[0LL];
		(*(_24113_kind))._field_Next=_227bda2ba_buildSt(_self_, &(_25517_stmt));
	};
	jule::I64 _26313_i = _25313_stTokens.len();;
	jule::Slice<jule::Ptr<_246819d43_Token>> _26413_blockTokens = _227bea1dc_range(&(_26313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24013_tokens));;
	if ((_26413_blockTokens == nullptr)) {
		_227bce237_stop(_self_);
		_227bced4d_pushErr(_self_, (*(_23713_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26313_i < _24013_tokens.len())) {
		_227bced4d_pushErr(_self_, _24013_tokens[_26313_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_23713_it))._field_Scope=_227bd0aeb_buildScope(_self_, &(_26413_blockTokens), _24013_tokens[(_26313_i - 1LL)]);
	(*(_23713_it))._field_Kind=jule::Any(_24113_kind, &__jule_any_type37);
	return _23713_it;;
}



inline jule::Ptr<_246844455_WhileKind> _227bd1910_buildWhileIterKind(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _28142_tokens) {
	return jule::new_ptr<_246844455_WhileKind>(_246844455_WhileKind{._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227bd1c51_getRangeKindKeysTokens(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _28813_vars;;
	jule::Slice<_24345e617_Log> _28819_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28813_vars = __jule_assign_result.__jule_result_arg0;
		_28819_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_28819_errs);;
	return _28813_vars;;
}



inline jule::Ptr<_2468430ad_VarDecl> _227bd2092_buildRangeKindKey(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_2468430ad_VarDecl> _29713_key = jule::new_ptr<_2468430ad_VarDecl>(_2468430ad_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if (((*((*(_29713_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_29713_key))._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_227bced4d_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*(_29713_key))._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_227bced4d_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29713_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bced4d_pushErr(_self_, (*(_29713_key))._field_Token, jule::Str::lit("invalid syntax", 14));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_29713_key))._field_Ident=(*((*(_29713_key))._field_Token))._field_Kind;
	return _29713_key;;
}



inline jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _227bd23d3_buildRangeKindKeys(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bd4cea6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_2468430ad_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_227bd2092_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_22bd4cea6:;
			++it;
			goto _iter_begin_22bd4cea6;
		}
		_iter_end_22bd4cea6:;
	};
	return _31917_keys;;
}



inline void _227bd2746_setupRangeKindKeysPlain(_227bcdac7_scopeParser* _self_, jule::Ptr<_246844d5c_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_246819d43_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _32713_keyTokens = _227bd1c51_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_227bced4d_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _33413_keys = _227bd23d3_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _227bd2aa9_setupRangeKindKeysExplicit(_227bcdac7_scopeParser* _self_, jule::Ptr<_246844d5c_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_246819d43_Token>>* _34172_tokens) {
	jule::I64 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _34313_rang = _227bea1dc_range(&(_34213_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_227bced4d_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_227bd2746_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _227bd2e1c_setupRangeKindKeys(_227bcdac7_scopeParser* _self_, jule::Ptr<_246844d5c_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_246819d43_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_227bd2aa9_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_227bd2746_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_246844d5c_RangeKind> _227bd33c3_buildRangeIterKind(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_246819d43_Token>>* _35914_exprTokens, jule::Ptr<_246819d43_Token>* _35941_inToken) {
	jule::Ptr<_246844d5c_RangeKind> _36013_rng = jule::new_ptr<_246844d5c_RangeKind>(_246844d5c_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_227bced4d_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*(_36013_rng))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_227bd2e1c_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _227bd37be_buildCommonIterKind(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _37443_tokens, jule::Ptr<_246819d43_Token>* _37462_err_tok) {
	jule::I64 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bd56c6d:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22bd57db2:;
						{
							(_37513_braceN)++;
							goto _iter_next_22bd56c6d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22bd57e39:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_22bd57ce6:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_22bd56c6d;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_22bd579c7:;
						{
							jule::Slice<jule::Ptr<_246819d43_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_246819d43_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_227bd33c3_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type39);;
						}
					}
					_match_end_22bd5939c:;
				};
			}
			_iter_next_22bd56c6d:;
			++it;
			_37614_i++;
			goto _iter_begin_22bd56c6d;
		}
		_iter_end_22bd56c6d:;
	};
	return jule::Any(_227bd1910_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_246843b2a_Iter> _227bd3b10_buildCommonIter(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _40138_tokens) {
	jule::Ptr<_246843b2a_Iter> _40213_it = jule::new_ptr<_246843b2a_Iter>(_246843b2a_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_227bce237_stop(_self_);
		_227bced4d_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _41213_exprTokens = _227be6eb9_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*(_40213_it))._field_Kind=_227bd37be_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*(_40213_it))._field_Token));
	};
	jule::I64 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_246819d43_Token>> _41713_scopeTokens = _227bea1dc_range(&(_41613_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_227bce237_stop(_self_);
		_227bced4d_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_227bced4d_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_40213_it))._field_Scope=_227bd0aeb_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_246843b2a_Iter> _227bd3e51_buildIterSt(_227bcdac7_scopeParser* _self_, jule::Ptr<_227bcd236_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _227bd15be_buildWhileNextIter(_self_, _43135_st);;
	};
	return _227bd3b10_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_246845236_BreakSt> _227bd4292_buildBreakSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _43836_tokens) {
	jule::Ptr<_246845236_BreakSt> _43913_brk = jule::new_ptr<_246845236_BreakSt>(_246845236_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_227bced4d_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_227bd01b1_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_227bced4d_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_246845610_ContSt> _227bd45d3_buildContSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _45635_tokens) {
	jule::Ptr<_246845610_ContSt> _45713_cont = jule::new_ptr<_246845610_ContSt>(_246845610_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_227bced4d_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_227bd01b1_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_227bced4d_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_246845ab6_If> _227bd4924_buildIf(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _47431_tokens) {
	jule::Ptr<_246845ab6_If> _47513_model = jule::new_ptr<_246845ab6_If>(_246845ab6_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_246819d43_Token>> _47913_exprTokens = _227be6eb9_getBlockExpr(_47431_tokens);;
	jule::I64 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_227bced4d_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=static_cast<jule::I64>(_47913_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _48613_scopeTokens = _227bea1dc_range(&(_48013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_227bce237_stop(_self_);
		_227bced4d_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246819d43_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_227bced4d_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*(_47513_model))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*(_47513_model))._field_Scope=_227bd0aeb_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_246845e90_Else> _227bd4c65_buildElse(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _50733_tokens) {
	jule::Ptr<_246845e90_Else> _50813_els = jule::new_ptr<_246845e90_Else>(_246845e90_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I64 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _51313_scopeTokens = _227bea1dc_range(&(_51213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_227bced4d_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_227bce237_stop(_self_);
			_227bced4d_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_227bced4d_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_227bd0aeb_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_246846446_Conditional> _227bd50a6_buildIfElseChain(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _53139_tokens) {
	jule::Ptr<_246846446_Conditional> _53213_chain = jule::new_ptr<_246846446_Conditional>(_246846446_Conditional{._field_Head=_227bd4924_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_22bd721ea;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_246845ab6_If> _54421_elif = _227bd4924_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_246845ab6_If>> &__jule_push_dest = (*(_53213_chain))._field_Tail; __jule_push_dest.push(_54421_elif); };
				goto _iter_next_22bd721ea;
			};
			(*(_53213_chain))._field_Default=_227bd4c65_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_22bd721ea;
		}
	_iter_next_22bd721ea:;
	}
	_iter_end_22bd721ea:;;
	return _53213_chain;;
}



inline jule::Ptr<_246834654_Expr> _227bd53e7_buildCoCallSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _55436_tokens) {
	jule::Ptr<_246819d43_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_246834654_Expr> _55713_e = _227becb90_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_22bd761cc:;
			{
				(*((*(_55713_e))._field_Kind.cast_ptr<_24683837d_FnCallExpr>(&__jule_any_type107)))._field_IsCo=true;
			}
		}
		else {
			_case_begin_22bd7674e:;
			{
				_227bced4d_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_22bd766e9:;
	};
	return _55713_e;;
}



inline jule::Ptr<_24683cccd_GotoSt> _227bd5738_buildGotoSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _57035_tokens) {
	jule::Ptr<_24683cccd_GotoSt> _57113_gt = jule::new_ptr<_24683cccd_GotoSt>(_24683cccd_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_227bced4d_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_227bced4d_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_246819d43_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bced4d_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_24683d0ca_FallSt> _227bd5a79_buildFallSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _59035_tokens) {
	jule::Ptr<_24683d0ca_FallSt> _59113_fll = jule::new_ptr<_24683d0ca_FallSt>(_24683d0ca_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_227bced4d_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_246846b83_TypeAliasDecl> _227bd5dba_buildTypeAliasSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _60040_tokens) {
	jule::Ptr<_246846b83_TypeAliasDecl> _60113_tad = _227bee433_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _227bd6393_pushCaseExpr(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _60635_tokens, jule::Ptr<_246819d43_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_246834654_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61217_i = 0LL;;
		jule::Ptr<_246830320_TypeDecl> _61317_t;;
		jule::Bool _61320_ok = false;;
		({
			__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61217_i)), true);
			_61317_t = __jule_assign_result.__jule_result_arg0;
			_61320_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61320_ok) {
			{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_246834654_Expr>(_246834654_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61317_t, &__jule_any_type88)})); };
			if ((_61217_i < _60635_tokens.len())) {
				_227bced4d_pushErr(_self_, _60635_tokens[_61217_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_227becb90_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline __jule_tuple_sx_246834654_Expr__jule_tuple_bool _227bd6849_buildCaseExprs(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _62938_tokens, jule::Ptr<_246819d43_Token>* _62961_colon, jule::Bool _62976_typeMatch) {
	__jule_tuple_sx_246834654_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_246834654_Expr>> _63013_exprs = jule::Slice<jule::Ptr<_246834654_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63113_braceN = 0LL;;
	jule::I64 _63213_j = 0LL;;
	{
		auto expr = _62938_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bd8210b:;
		if (it != expr_end) {
			jule::I64 _63314_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _63321_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63321_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_22bd835b3:;
						{
							(_63113_braceN)++;
							goto _iter_next_22bd8210b;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_22bd8363a:;
						{
							(_63113_braceN)--;
							goto _iter_next_22bd8210b;
						}
					}
					_match_end_22bd834e7:;
				};
				if ((_63113_braceN != 0LL)) {
					goto _iter_next_22bd8210b;
				};
				{
					
					if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_22bd849e3:;
						{
							jule::Slice<jule::Ptr<_246819d43_Token>> _65217_exprTokens = (*(_62938_tokens)).slice(_63213_j, _63314_i);;
							if ((_65217_exprTokens.len() == 0LL)) {
								_227bced4d_pushErr(_self_, _63321_tok, jule::Str::lit("expression missing", 18));
							} else {
								_227bd6393_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							};
							_63213_j=static_cast<jule::I64>((_63314_i + 1LL));
						}
					}
					else if (((*(_63321_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_22bd84a6a:;
						{
							(*(_62961_colon))=_63321_tok;
							_227bd6393_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							((*(_62938_tokens))).mut_slice((_63314_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63013_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63314_i - _63213_j) == 0LL) || (_63013_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_22bd844c6:;
				};
			}
			_iter_next_22bd8210b:;
			++it;
			_63314_i++;
			goto _iter_begin_22bd8210b;
		}
		_iter_end_22bd8210b:;
	};
	_227bced4d_pushErr(_self_, (*(_62938_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62938_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_246840341_ScopeTree> _227bd6b8a_buildCaseScope(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _67138_tokens) {
	jule::I64 _67213_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67417_i = 0LL;;
			jule::Slice<jule::Ptr<_246819d43_Token>> _67517_next;;
			({
				__jule_tuple_sx_246819d43_Token__jule_tuple_bool __jule_assign_result = _227bcce06_skipSt(&(_67417_i), (*(_67138_tokens)).slice(_67213_n));
				_67517_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67517_next.len() == 0LL)) {
				goto _iter_end_22bd88541;
			};
			jule::Ptr<_246819d43_Token> _67913_tok = _67517_next[0LL];;
			if (((*(_67913_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_67213_n+=_67417_i;
				goto _iter_next_22bd88541;
			};
			jule::Slice<jule::Ptr<_246819d43_Token>> _68417_scopeTokens = (*(_67138_tokens)).slice(0LL, _67213_n);;
			jule::Ptr<_246840341_ScopeTree> _68517_scope = _227bd0aeb_buildScope(_self_, &(_68417_scopeTokens), (*(_67138_tokens))[_67213_n]);;
			((*(_67138_tokens))).mut_slice(_67213_n);;
			return _68517_scope;;
		}
	_iter_next_22bd88541:;
	}
	_iter_end_22bd88541:;;
	jule::Ptr<_246819d43_Token> _68917_end;;
	if (((*(_67138_tokens)).len() > 0LL)) {
		_68917_end=(*(_67138_tokens))[((*(_67138_tokens)).len() - 1LL)];
	};
	jule::Ptr<_246840341_ScopeTree> _69313_scope = _227bd0aeb_buildScope(_self_, _67138_tokens, _68917_end);;
	(*(_67138_tokens))=nullptr;
	return _69313_scope;;
}



inline __jule_tuple_x_246847139_Case__jule_tuple_bool _227bd7086_buildCase(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _69833_tokens, jule::Bool _69851_typeMatch) {
	__jule_tuple_x_246847139_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_246847139_Case> _69913_c = jule::new_ptr<_246847139_Case>(_246847139_Case{._field_Token=(*(_69833_tokens))[0LL], });;
	((*(_69833_tokens))).mut_slice(1LL);;
	jule::Ptr<_246819d43_Token> _70317_colon = nullptr;;
	jule::Bool _70418_ok = false;;
	({
		__jule_tuple_sx_246834654_Expr__jule_tuple_bool __jule_assign_result = _227bd6849_buildCaseExprs(_self_, _69833_tokens, &(_70317_colon), _69851_typeMatch);
		(*(_69913_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70418_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_69913_c))._field_Scope=_227bd6b8a_buildCaseScope(_self_, _69833_tokens);
	if (((*((*(_69913_c))._field_Scope))._field_End == nullptr)) {
		(*((*(_69913_c))._field_Scope))._field_End=_70317_colon;
	};
	jule::Bool _7099_isDefault = (_70418_ok && ((*(_69913_c))._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _69913_c;
	__jule_func_result.__jule_result_arg1 = _7099_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_246847139_Case__jule_tuple_x_246845e90_Else _227bd7482_buildCases(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _71333_tokens, jule::Bool _71351_typeMatch) {
	__jule_tuple_sx_246847139_Case__jule_tuple_x_246845e90_Else __jule_func_result;
	jule::Slice<jule::Ptr<_246847139_Case>> _71417_cases = nullptr;;
	jule::Ptr<_246845e90_Else> _71517_def = nullptr;;
	jule::Bool _71613_defNotLast = false;;
	while ((_71333_tokens.len() > 0LL)) {
		{
			jule::Ptr<_246819d43_Token> _71817_tok = _71333_tokens[0LL];;
			if (((*(_71817_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_227bced4d_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_22bd90bec;
			};
			jule::Ptr<_246847139_Case> _72317_c;;
			jule::Bool _72320_isDefault = false;;
			({
				__jule_tuple_x_246847139_Case__jule_tuple_bool __jule_assign_result = _227bd7086_buildCase(_self_, &(_71333_tokens), _71351_typeMatch);
				_72317_c = __jule_assign_result.__jule_result_arg0;
				_72320_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72320_isDefault) {
				(*(_72317_c))._field_Token=_71817_tok;
				if ((_71517_def == nullptr)) {
					_71517_def=jule::new_ptr<_246845e90_Else>(_246845e90_Else{._field_Token=(*(_72317_c))._field_Token, ._field_Scope=(*(_72317_c))._field_Scope});
				} else {
					_227bced4d_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71613_defNotLast=(_71613_defNotLast || (_71517_def != nullptr));
				{ jule::Slice<jule::Ptr<_246847139_Case>> &__jule_push_dest = _71417_cases; __jule_push_dest.push(_72317_c); };
			};
		}
	_iter_next_22bd90bec:;
	}
	_iter_end_22bd90bec:;;
	if (_71613_defNotLast) {
		_227bced4d_pushErr(_self_, (*(_71517_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71417_cases;
	__jule_func_result.__jule_result_arg1 = _71517_def;
	return __jule_func_result;;
}



inline jule::Ptr<_246847876_MatchCase> _227bd77c3_buildMatchCase(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _74737_tokens) {
	jule::Ptr<_246847876_MatchCase> _74813_m = jule::new_ptr<_246847876_MatchCase>(_246847876_MatchCase{._field_Token=_74737_tokens[0LL], });;
	(_74737_tokens).mut_slice(1LL);;
	if (((_74737_tokens.len() > 0LL) && ((*(_74737_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_74813_m))._field_TypeMatch=true;
		(_74737_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _75813_exprTokens = _227be6eb9_getBlockExpr(&(_74737_tokens));;
	if ((_75813_exprTokens.len() > 0LL)) {
		(*(_74813_m))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, &(_75813_exprTokens));
	} else if ((*(_74813_m))._field_TypeMatch) {
		_227bced4d_pushErr(_self_, (*(_74813_m))._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _76513_i = _75813_exprTokens.len();;
	jule::Slice<jule::Ptr<_246819d43_Token>> _76613_blockToks = _227bea1dc_range(&(_76513_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74737_tokens));;
	if ((_76613_blockToks == nullptr)) {
		_227bce237_stop(_self_);
		_227bced4d_pushErr(_self_, (*(_74813_m))._field_Token, jule::Str::lit("body is not exist", 17));
		_227bd01b1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76513_i < _74737_tokens.len())) {
		_227bced4d_pushErr(_self_, _74737_tokens[_76513_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_74813_m))._field_End=_74737_tokens[(_76513_i - 1LL)];
	({
		__jule_tuple_sx_246847139_Case__jule_tuple_x_246845e90_Else __jule_assign_result = _227bd7482_buildCases(_self_, _76613_blockToks, (*(_74813_m))._field_TypeMatch);
		(*(_74813_m))._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*(_74813_m))._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74813_m;;
}



inline jule::Ptr<_246840341_ScopeTree> _227bd7b14_buildScopeSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _78035_tokens) {
	jule::Bool _78113_isUnsafe = false;;
	jule::Bool _78213_isDeferred = false;;
	jule::Ptr<_246819d43_Token> _78313_token = _78035_tokens[0LL];;
	if (((*(_78313_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_78113_isUnsafe=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_227bced4d_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78313_token=_78035_tokens[0LL];
		if (((*(_78313_token))._field_Id == static_cast<jule::U64>(33LLU))) {
			_78213_isDeferred=true;
			(_78035_tokens).mut_slice(1LL);;
			if ((_78035_tokens.len() == 0LL)) {
				_227bced4d_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78313_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_78213_isDeferred=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_227bced4d_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _80913_i = 0LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _81013_scopeTokens = _227bea1dc_range(&(_80913_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78035_tokens));;
	if ((_81013_scopeTokens == nullptr)) {
		_227bced4d_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_80913_i < _78035_tokens.len())) {
		_227bced4d_pushErr(_self_, _78035_tokens[_80913_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_246840341_ScopeTree> _81713_scope = _227bd0aeb_buildScope(_self_, &(_81013_scopeTokens), _78035_tokens[(_80913_i - 1LL)]);;
	(*(_81713_scope))._field_Unsafety=_78113_isUnsafe;
	(*(_81713_scope))._field_Deferred=_78213_isDeferred;
	return _81713_scope;;
}



inline jule::Ptr<_24683c904_LabelSt> _227bd7e55_buildLabelSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _82336_tokens) {
	jule::Ptr<_24683c904_LabelSt> _82413_lbl = jule::new_ptr<_24683c904_LabelSt>(_24683c904_LabelSt{._field_Token=(*(_82336_tokens))[0LL], ._field_Ident=(*((*(_82336_tokens))[0LL]))._field_Kind});;
	if (((*(_82336_tokens)).len() > 2LL)) {
		((*(_82336_tokens))).mut_slice(2LL);;
		_227bd0469_insertAsNext(_self_, _82336_tokens);
	};
	return _82413_lbl;;
}



inline __jule_tuple__24683e97d_StmtData__jule_tuple_bool _227bd8296_buildIdSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _83833_tokens) {
	__jule_tuple__24683e97d_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83833_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_246819d43_Token> _84313_token = (*(_83833_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84313_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_22bda50c9:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_227bd7e55_buildLabelSt(_self_, _83833_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_22bda575b:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_227be863b_assignInfo> _227bd85d7_buildAssignInfo(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _85239_tokens) {
	jule::Ptr<_227be863b_assignInfo> _85313_info = jule::new_ptr<_227be863b_assignInfo>(_227be863b_assignInfo{._field_ok=true});;
	jule::I64 _85613_braceN = 0LL;;
	{
		auto expr = _85239_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bda6aae:;
		if (it != expr_end) {
			jule::I64 _85714_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _85721_token = *it;
			{
				{
					auto &_match_expr{ (*(_85721_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22bda794a:;
						{
							(_85613_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22bda79c2:;
						{
							(_85613_braceN)--;
						}
					}
					_match_end_22bda787e:;
				};
				{
					
					if ((_85613_braceN > 0LL)) {
						_case_begin_22bda883b:;
						{
							goto _iter_next_22bda6aae;
						}
					}
					else if (((!(_24681ec9e_IsAssignOp((*(_85721_token))._field_Id))) && ((*(_85721_token))._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_22bda88b3:;
						{
							goto _iter_next_22bda6aae;
						}
					}
					_match_end_22bda87b4:;
				};
				(*(_85313_info))._field_l=(*(_85239_tokens)).slice(0LL, _85714_i);
				if (((*(_85313_info))._field_l.len() == 0LL)) {
					(*(_85313_info))._field_ok=false;
				};
				(*(_85313_info))._field_setter=_85721_token;
				if (((_85714_i + 1LL) >= (*(_85239_tokens)).len())) {
					(*(_85313_info))._field_r=nullptr;
					(*(_85313_info))._field_ok=_24681e9d5_IsPostfixOp((*((*(_85313_info))._field_setter))._field_Id);
					goto _iter_end_22bda6aae;
				};
				(*(_85313_info))._field_r=(*(_85239_tokens)).slice((_85714_i + 1LL));
				if (_24681e9d5_IsPostfixOp((*((*(_85313_info))._field_setter))._field_Id)) {
					if (((*(_85313_info))._field_r.len() > 0LL)) {
						_227bced4d_pushErr(_self_, (*(_85313_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*(_85313_info))._field_r=nullptr;
					};
				};
				goto _iter_end_22bda6aae;
			}
			_iter_next_22bda6aae:;
			++it;
			_85714_i++;
			goto _iter_begin_22bda6aae;
		}
		_iter_end_22bda6aae:;
	};
	return _85313_info;;
}



inline jule::Ptr<_24683d73a_AssignLeft> _227bd8928_buildAssignL(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _89736_tokens) {
	jule::Ptr<_24683d73a_AssignLeft> _89813_l = jule::new_ptr<_24683d73a_AssignLeft>(_24683d73a_AssignLeft{._field_Token=(*(_89736_tokens))[0LL], });;
	if (((*((*(_89736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_89813_l))._field_Ident=(*((*(_89813_l))._field_Token))._field_Kind;
	};
	(*(_89813_l))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, _89736_tokens);
	return _89813_l;;
}



inline jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> _227bd8c69_buildAssignLs(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>* _90837_parts) {
	jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> _90917_lefts = nullptr;;
	{
		auto expr = _90837_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bdb125b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _91021_part = *it;
			{
				jule::Ptr<_24683d73a_AssignLeft> _91117_l = _227bd8928_buildAssignL(_self_, &(_91021_part));;
				{ jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> &__jule_push_dest = _90917_lefts; __jule_push_dest.push(_91117_l); };
			}
			_iter_next_22bdb125b:;
			++it;
			goto _iter_begin_22bdb125b;
		}
		_iter_end_22bdb125b:;
	};
	return _90917_lefts;;
}



inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd90aa_buildPlainAssign(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _91740_tokens) {
	__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_227be863b_assignInfo> _91813_info = _227bd85d7_buildAssignInfo(_self_, _91740_tokens);;
	if ((!((*(_91813_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_24683dcbd_AssignSt> _92313_assign = jule::new_ptr<_24683dcbd_AssignSt>(_24683dcbd_AssignSt{._field_Setter=(*(_91813_info))._field_setter, });;
	if (((*((*(_91813_info))._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_92313_assign))._field_Declarative=true;
		(*(_92313_assign))._field_Right=_227becb90_buildExpr((*(_self_))._field_p, &((*(_91813_info))._field_r));
		jule::Bool _93113_ok = _227bd94a6_buildDeclAssign1(_self_, &((*(_91813_info))._field_l), &(_92313_assign));;
		__jule_func_result.__jule_result_arg0 = _92313_assign;
		__jule_func_result.__jule_result_arg1 = _93113_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _93513_parts;;
	jule::Slice<_24345e617_Log> _93520_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&((*(_91813_info))._field_l), static_cast<jule::U64>(5LLU), true);
		_93513_parts = __jule_assign_result.__jule_result_arg0;
		_93520_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93520_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_93520_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_92313_assign))._field_Left=_227bd8c69_buildAssignLs(_self_, &(_93513_parts));
	if (((*(_91813_info))._field_r != nullptr)) {
		(*(_92313_assign))._field_Right=_227becb90_buildExpr((*(_self_))._field_p, &((*(_91813_info))._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92313_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _227bd94a6_buildDeclAssign1(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _94940_lefts, jule::Ptr<_24683dcbd_AssignSt>* _94962_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _95113_parts;;
	jule::Slice<_24345e617_Log> _95120_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(_94940_lefts, static_cast<jule::U64>(5LLU), true);
		_95113_parts = __jule_assign_result.__jule_result_arg0;
		_95120_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95120_errs.len() > 0LL)) {
		((*((*(_self_))._field_p))._field_errors).append(_95120_errs);;
		return false;;
	};
	{
		auto expr = &(_95113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bdb9c59:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _95721_part = *it;
			{
				jule::Bool _95817_isMut = false;;
				jule::Bool _95917_isRef = false;;
				jule::Ptr<_246819d43_Token> _96113_token = _95721_part[0LL];;
				if (((*(_96113_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_95817_isMut=true;
					(_95721_part).mut_slice(1LL);;
					if ((_95721_part.len() == 0LL)) {
						_227bced4d_pushErr(_self_, _96113_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_22bdb9c59;
					};
				};
				if (((*(_95721_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_95917_isRef=true;
					(_95721_part).mut_slice(1LL);;
					if ((_95721_part.len() == 0LL)) {
						_227bced4d_pushErr(_self_, _96113_token, jule::Str::lit("invalid syntax", 14));
						goto _iter_next_22bdb9c59;
					};
				};
				if ((((*(_95721_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95721_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_227bced4d_pushErr(_self_, _96113_token, jule::Str::lit("invalid syntax", 14));
					goto _iter_next_22bdb9c59;
				};
				jule::Ptr<_24683d73a_AssignLeft> _98517_l = _227bd8928_buildAssignL(_self_, &(_95721_part));;
				(*(_98517_l))._field_Mutable=_95817_isMut;
				(*(_98517_l))._field_Reference=_95917_isRef;
				{ jule::Slice<jule::Ptr<_24683d73a_AssignLeft>> &__jule_push_dest = (*((*(_94962_assign))))._field_Left; __jule_push_dest.push(_98517_l); };
			}
			_iter_next_22bdb9c59:;
			++it;
			goto _iter_begin_22bdb9c59;
		}
		_iter_end_22bdb9c59:;
	};
	return true;;
}



inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd97e7_buildDeclAssign(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _99438_tokens) {
	__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99438_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99438_tokens).mut_slice(1LL);;
	jule::Ptr<_246819d43_Token> _100013_token = _99438_tokens[0LL];;
	if (((*(_100013_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_24683dcbd_AssignSt> _100513_assign = jule::new_ptr<_24683dcbd_AssignSt>(_24683dcbd_AssignSt{._field_Declarative=true, });;
	jule::I64 _100913_i = 0LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _101013_rang = _227bea1dc_range(&(_100913_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99438_tokens));;
	if ((_101013_rang == nullptr)) {
		_227bced4d_pushErr(_self_, _100013_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_100913_i + 1LL) < _99438_tokens.len())) {
		(*(_100513_assign))._field_Setter=_99438_tokens[_100913_i];
		if (((*((*(_100513_assign))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_227bced4d_pushErr(_self_, (*(_100513_assign))._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_100913_i)++;
		jule::Slice<jule::Ptr<_246819d43_Token>> _102017_exprTokens = _99438_tokens.slice(_100913_i);;
		(*(_100513_assign))._field_Right=_227becb90_buildExpr((*(_self_))._field_p, &(_102017_exprTokens));
	};
	jule::Bool _10249_ok = _227bd94a6_buildDeclAssign1(_self_, &(_101013_rang), &(_100513_assign));;
	__jule_func_result.__jule_result_arg0 = _100513_assign;
	__jule_func_result.__jule_result_arg1 = _10249_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool _227bd9b38_buildAssignSt(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _102837_tokens) {
	__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_227be89e3_checkAssignTokens(_102837_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102837_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_22bdc6c44:;
			{
				({
					__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_assign_result = _227bd97e7_buildDeclAssign(_self_, (*(_102837_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_22bdc6848:;
			{
				({
					__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_assign_result = _227bd90aa_buildPlainAssign(_self_, _102837_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_22bdc67d2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_246835028_UseExpr> _227bd9e79_buildUseExpr(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _104336_tokens) {
	if (((*(_104336_tokens)).len() == 1LL)) {
		_227bced4d_pushErr(_self_, (*(_104336_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_246835028_UseExpr> _104813_ue = jule::new_ptr<_246835028_UseExpr>(_246835028_UseExpr{._field_Token=(*(_104336_tokens))[0LL], });;
	((*(_104336_tokens))).mut_slice(1LL);;
	(*(_104813_ue))._field_Expr=_227becb90_buildExpr((*(_self_))._field_p, _104336_tokens);
	return _104813_ue;;
}



inline jule::Any _227bda2ba_buildSt(_227bcdac7_scopeParser* _self_, jule::Ptr<_227bcd236_stmt>* _105631_st) {
	jule::Ptr<_246819d43_Token> _105713_token = (*((*(_105631_st))))._field_tokens[0LL];;
	if (((*(_105713_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _105917_s = jule::Any(nullptr);;
		jule::Bool _105920_ok = false;;
		({
			__jule_tuple__24683e97d_StmtData__jule_tuple_bool __jule_assign_result = _227bd8296_buildIdSt(_self_, &((*((*(_105631_st))))._field_tokens));
			_105917_s = __jule_assign_result.__jule_result_arg0;
			_105920_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105920_ok) {
			return _105917_s;;
		};
	};
	jule::Ptr<_24683dcbd_AssignSt> _106513_s;;
	jule::Bool _106516_ok = false;;
	({
		__jule_tuple_x_24683dcbd_AssignSt__jule_tuple_bool __jule_assign_result = _227bd9b38_buildAssignSt(_self_, &((*((*(_105631_st))))._field_tokens));
		_106513_s = __jule_assign_result.__jule_result_arg0;
		_106516_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106516_ok) {
		return jule::Any(_106513_s, &__jule_any_type58);;
	};
	{
		auto &_match_expr{ (*(_105713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_22bdcbe25:;
			{
				return jule::Any(_227bd9e79_buildUseExpr(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_22bdcb8c5:;
			{
				return jule::Any(_227bd0e3c_buildVarSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_22bdcc134:;
			{
				return jule::Any(_227bd127d_buildRetSt(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_22bdcc19a:;
			{
				return jule::Any(_227bd3e51_buildIterSt(_self_, _105631_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_22bdcc211:;
			{
				return jule::Any(_227bd4292_buildBreakSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_22bdcc277:;
			{
				return jule::Any(_227bd45d3_buildContSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_22bdcc2ee:;
			{
				return jule::Any(_227bd50a6_buildIfElseChain(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_22bdcc376:;
			{
				return jule::Any(_227bd53e7_buildCoCallSt(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_22bdcc3ed:;
			{
				return jule::Any(_227bd5738_buildGotoSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_22bdcc475:;
			{
				return jule::Any(_227bd5a79_buildFallSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22bdcc4ec:;
			{
				return jule::Any(_227bd5dba_buildTypeAliasSt(_self_, &((*((*(_105631_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_22bdcc574:;
			{
				return jule::Any(_227bd77c3_buildMatchCase(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22bdcc5eb:;
			{
				if (((*((*(_105631_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_22bdcbc38;
				};
				if ((((*((*((*(_105631_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_105631_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_227bd7b14_buildScopeSt(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_22bdcc673:;
			{
				return jule::Any(_227bd7b14_buildScopeSt(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_22bdcc6ea:;
			{
				return jule::Any(_227bd7b14_buildScopeSt(_self_, (*((*(_105631_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_22bdcbc38:;
	};
	jule::Ptr<_246834654_Expr> _111113_expr = _227becb90_buildExpr((*(_self_))._field_p, &((*((*(_105631_st))))._field_tokens));;
	if ((_111113_expr != nullptr)) {
		return jule::Any(_111113_expr, &__jule_any_type52);;
	};
	_227bced4d_pushErr(_self_, _105713_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _227bda62d_build(_227bcdac7_scopeParser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _111929_tokens, jule::Ptr<_246840341_ScopeTree>* _111952_s) {
	if (((*(_111952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_227bcd5dd_splitStmts(_111929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111952_s));
	while (((!(_227bce9da_isLastSt(_self_))) && (!(_227bce754_finished(_self_))))) {
		{
			jule::Ptr<_227bcd236_stmt> _112717_st = _227bd0700_next(_self_);;
			jule::Any _112817_data = _227bda2ba_buildSt(_self_, &(_112717_st));;
			if ((_112817_data != nullptr)) {
				{ jule::Slice<_24683ebd1_Stmt> &__jule_push_dest = (*((*(_self_))._field_s))._field_Stmts; __jule_push_dest.push(_24683ebd1_Stmt{._field_Token=(*(_112717_st))._field_tokens[0LL], ._field_Data=_112817_data}); };
			};
			if (_227bce4bd_stopped(_self_)) {
				goto _iter_end_22bdd845e;
			};
		}
	_iter_next_22bdd845e:;
	}
	_iter_end_22bdd845e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _227bcdac7_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _227bdb981_pushErr(_227bdb19a_exprBuilder* _self_, jule::Ptr<_246819d43_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_227bec4db_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _227bdbce4_pushSuggestion(_227bdb19a_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_227bec84e_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_246835325_TupleExpr> _227bdc135_buildTuple(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>* _5434_parts) {
	jule::Ptr<_246835325_TupleExpr> _5513_tuple = jule::new_ptr<_246835325_TupleExpr>(_246835325_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_246834654_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be05cb7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_5513_tuple))._field_Expr; __jule_push_dest.push(_227be6529_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_22be05cb7:;
			++it;
			goto _iter_begin_22be05cb7;
		}
		_iter_end_22be05cb7:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_2468356ee_LitExpr> _227bdc476_buildLit(_227bdb19a_exprBuilder* _self_, jule::Ptr<_246819d43_Token> _6427_token) {
	return jule::new_ptr<_2468356ee_LitExpr>(_2468356ee_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _227bdcb08_buildSingle(_227bdb19a_exprBuilder* _self_, jule::Ptr<_246819d43_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_22be07c86:;
			{
				return jule::Any(_227bdc476_buildLit(_self_, _7534_token), &__jule_any_type101);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_22be07d0d:;
			{
				return jule::Any(jule::new_ptr<_246836ada_VariadicExpr>(_246836ada_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_22be07d85:;
			{
				return jule::Any(_227be7915_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_22be07ba9:;
	};
	_227bdb981_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_24683607e_IdentExpr> _227bdce49_buildBindIdent(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_227bdb981_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246819d43_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bdb981_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_24683607e_IdentExpr> _10613_expr = _227be7915_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_246836711_UnaryExpr> _227bdd28a_buildUnary(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _11133_tokens) {
	jule::Ptr<_246819d43_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_227bdb981_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_24681a580_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_227bdb981_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*(_11213_op))._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_246836711_UnaryExpr>(_246836711_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_227be6529_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_246837767_SubIdentExpr> _227bdd5cb_buildObjSubIdent(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _13239_tokens) {
	jule::I64 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_246819d43_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_246837767_SubIdentExpr>(_246837767_SubIdentExpr{._field_Expr=_227be6529_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_24683738d_NsSelectionExpr> _227bdd91c_buildNsSubIdent(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _14739_tokens) {
	jule::Ptr<_24683738d_NsSelectionExpr> _14813_ns = jule::new_ptr<_24683738d_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*(_14813_ns))._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*(_14813_ns))._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22be14226:;
			if (it != expr_end) {
				jule::I64 _15418_i = it - expr->begin();
				jule::Ptr<_246819d43_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_227bdb981_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_227bdbce4_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = (*(_14813_ns))._field_Ns; __jule_push_dest.push(_15425_token); };
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_227bdb981_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_227bdbce4_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_22be14226:;
				++it;
				_15418_i++;
				goto _iter_begin_22be14226;
			}
			_iter_end_22be14226:;
		};
		(*(_14813_ns))._field_Ident=(*(_14813_ns))._field_Ns[((*(_14813_ns))._field_Ns.len() - 1LL)];
		(*(_14813_ns))._field_Ns=(*(_14813_ns))._field_Ns.slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));
	};
	return _14813_ns;;
}



inline jule::Ptr<_246830320_TypeDecl> _227bddc5d_buildType(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _17233_tokens) {
	jule::I64 _17313_i = 0LL;;
	jule::Ptr<_246830320_TypeDecl> _17413_t;;
	jule::Bool _17416_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_227bdb981_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_227bdb981_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _227bde09e_buildSubIdent(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _18637_tokens) {
	jule::I64 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_246819d43_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_22be1aded:;
			{
				return jule::Any(_227bdd5cb_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type85);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_22be1b629:;
			{
				return jule::Any(_227bdd91c_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_22be1b690:;
			{
				return jule::Any(_227bddc5d_buildType(_self_, _18637_tokens), &__jule_any_type88);;
			}
		}
		_match_end_22be1b519:;
	};
	_227bdb981_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_246836ada_VariadicExpr> _227bde3e0_buildVariadic(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _20236_tokens) {
	jule::Ptr<_246819d43_Token> _20313_token = _20236_tokens[(_20236_tokens.len() - 1LL)];;
	(_20236_tokens).mut_slice(0LL, (_20236_tokens.len() - 1LL));;
	return jule::new_ptr<_246836ada_VariadicExpr>(_246836ada_VariadicExpr{._field_Token=_20313_token, ._field_Expr=_227be6529_buildFromTokens(_self_, _20236_tokens)});;
}



inline jule::Ptr<_246834951_RangeExpr> _227bde731_buildBetweenParentheses(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _21146_tokens) {
	if ((_21146_tokens.len() == 2LL)) {
		_227bdb981_pushErr(_self_, _21146_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21146_tokens).mut_slice(1LL, (_21146_tokens.len() - 1LL));;
	return jule::new_ptr<_246834951_RangeExpr>(_246834951_RangeExpr{._field_Expr=_227be6529_buildFromTokens(_self_, _21146_tokens)});;
}



inline jule::Ptr<_246836eb4_CastExpr> _227bdea72_tryBuildCast(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _22336_tokens) {
	jule::I64 _22413_rangeN = 0LL;;
	{
		auto expr = _22336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be2140e:;
		if (it != expr_end) {
			jule::I64 _22513_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _22516_token = *it;
			{
				{
					auto &_match_expr{ (*(_22516_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22be22201:;
						{
							(_22413_rangeN)++;
							goto _iter_next_22be2140e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22be22278:;
						{
							(_22413_rangeN)--;
						}
					}
					_match_end_22be22135:;
				};
				if ((_22413_rangeN > 0LL)) {
					goto _iter_next_22be2140e;
				} else if (((_22513_i + 1LL) == (*(_22336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_246819d43_Token>> _24417_typeTokens = (*(_22336_tokens)).slice(0LL, (_22513_i + 1LL));;
				jule::Slice<jule::Ptr<_246819d43_Token>> _24517_exprTokens = (*(_22336_tokens)).slice((_22513_i + 1LL));;
				if ((_24517_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_246819d43_Token> _25213_tok = _24517_exprTokens[0LL];;
				if (((*(_25213_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_246836eb4_CastExpr> _25717_cast = jule::new_ptr<_246836eb4_CastExpr>(_246836eb4_CastExpr{});;
				if ((_24517_exprTokens.len() == 2LL)) {
					_227bdb981_pushErr(_self_, _24517_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_227bdbce4_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_24417_typeTokens.len() == 2LL)) {
					_227bdb981_pushErr(_self_, _24417_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_227bdbce4_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_24417_typeTokens).mut_slice(1LL, (_24417_typeTokens.len() - 1LL));;
					jule::I64 _27121_typeIndex = 0LL;;
					jule::Ptr<_246830320_TypeDecl> _27221_t;;
					jule::Bool _27224_ok = false;;
					({
						__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &(_24417_typeTokens), (&(_27121_typeIndex)), true);
						_27221_t = __jule_assign_result.__jule_result_arg0;
						_27224_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27224_ok && (_27121_typeIndex < _24417_typeTokens.len()))) {
						_227bdb981_pushErr(_self_, _24417_typeTokens[_27121_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27224_ok))) {
						return _25717_cast;;
					};
					(*(_25717_cast))._field_Kind=_27221_t;
					if ((_24517_exprTokens.len() > 2LL)) {
						jule::I64 _28225_j = 0LL;;
						_227bea1dc_range(&(_28225_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_24517_exprTokens));
						if ((_28225_j < _24517_exprTokens.len())) {
							return nullptr;;
						};
						(_24517_exprTokens).mut_slice(0LL, _28225_j);;
						(*(_25717_cast))._field_Expr=_227be6529_buildFromTokens(_self_, _24517_exprTokens);
					};
				};
				return _25717_cast;;
			}
			_iter_next_22be2140e:;
			++it;
			_22513_i++;
			goto _iter_begin_22be2140e;
		}
		_iter_end_22be2140e:;
	};
	return nullptr;;
}



inline void _227bdee90_pushArg(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246834654_Expr>>* _29731_args, jule::Slice<jule::Ptr<_246819d43_Token>> _29750_tokens, jule::Ptr<_246819d43_Token> _29768_err_token) {
	if ((_29750_tokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, _29768_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_29731_args)); __jule_push_dest.push(_227be6529_buildFromTokens(_self_, _29750_tokens)); };
}



inline jule::Slice<jule::Ptr<_246834654_Expr>> _227be02d1_buildArgs(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _30632_tokens) {
	if ((_30632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246834654_Expr>> _31217_args = nullptr;;
	jule::I64 _31313_last = 0LL;;
	jule::I64 _31413_rangeN = 0LL;;
	(_30632_tokens).mut_slice(1LL, (_30632_tokens.len() - 1LL));;
	{
		auto expr = &(_30632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be2d66e:;
		if (it != expr_end) {
			jule::I64 _31613_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _31616_token = *it;
			{
				{
					auto &_match_expr{ (*(_31616_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22be2e74c:;
						{
							(_31413_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22be2e7c4:;
						{
							(_31413_rangeN)--;
						}
					}
					_match_end_22be2e681:;
				};
				if (((_31413_rangeN > 0LL) || ((*(_31616_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_22be2d66e;
				};
				_227bdee90_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last, _31613_i), _31616_token);
				_31313_last=static_cast<jule::I64>((_31613_i + 1LL));
			}
			_iter_next_22be2d66e:;
			++it;
			_31613_i++;
			goto _iter_begin_22be2d66e;
		}
		_iter_end_22be2d66e:;
	};
	if ((_31313_last < _30632_tokens.len())) {
		if ((_31313_last == 0LL)) {
			if ((_30632_tokens.len() > 0LL)) {
				_227bdee90_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[_31313_last]);
			};
		} else {
			_227bdee90_pushArg(_self_, &(_31217_args), _30632_tokens.slice(_31313_last), _30632_tokens[(_31313_last - 1LL)]);
		};
	};
	return _31217_args;;
}



inline jule::Ptr<_24683837d_FnCallExpr> _227be0ac8_buildFnCall(_227bdb19a_exprBuilder* _self_, jule::Ptr<_246819d43_Token>* _37235_token, jule::Slice<jule::Ptr<_246819d43_Token>>* _37255_expr, jule::Slice<jule::Ptr<_246819d43_Token>>* _37276_args) {
	return jule::new_ptr<_24683837d_FnCallExpr>(_24683837d_FnCallExpr{._field_Token=(*(_37235_token)), ._field_Expr=_227be6529_buildFromTokens(_self_, (*(_37255_expr))), ._field_Args=_227be02d1_buildArgs(_self_, (*(_37276_args))), });;
}



inline jule::Any _227be0e19_buildParenthesesRange(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _38045_tokens) {
	jule::Ptr<_246819d43_Token> _38113_token = (*(_38045_tokens))[0LL];;
	if (((*(_38113_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_246836eb4_CastExpr> _38317_expr = _227bdea72_tryBuildCast(_self_, _38045_tokens);;
		if ((_38317_expr != nullptr)) {
			return jule::Any(_38317_expr, &__jule_any_type105);;
		};
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _38813_exprTokens;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _38829_args_tokens;;
	({
		__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_assign_result = _227bea4a6_rangeLast(_38045_tokens);
		_38813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38829_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38813_exprTokens.len() == 0LL)) {
		return jule::Any(_227bde731_buildBetweenParentheses(_self_, _38829_args_tokens), &__jule_any_type100);;
	};
	return jule::Any(_227be0ac8_buildFnCall(_self_, &(_38113_token), &(_38813_exprTokens), &(_38829_args_tokens)), &__jule_any_type107);;
}



inline jule::Ptr<_246835ac8_UnsafeExpr> _227be125a_buildUnsafeExpr(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _39738_tokens) {
	jule::Ptr<_246819d43_Token> _39813_token = _39738_tokens[0LL];;
	(_39738_tokens).mut_slice(1LL);;
	jule::I64 _40013_i = 0LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _40113_rangeTokens = _227bea1dc_range(&(_40013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39738_tokens));;
	if ((_40113_rangeTokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, _39738_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_246835ac8_UnsafeExpr>(_246835ac8_UnsafeExpr{._field_Token=_39813_token, ._field_Expr=_227be6529_buildFromTokens(_self_, _40113_rangeTokens)});;
}



inline jule::Ptr<_246841ed0_FnDecl> _227be159b_buildAnonFn(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _41235_tokens) {
	jule::Ptr<_246841ed0_FnDecl> _41313_f = _227c03734_buildFn((*(_self_))._field_p, _41235_tokens, false, false);;
	if ((!(_246842343_IsAnon(_41313_f.ptr())))) {
		_227bdb981_pushErr(_self_, (*(_41313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _41313_f;;
}



inline jule::Any _227be18dc_buildUnsafe(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _42135_tokens) {
	{
		auto &_match_expr{ (*((*(_42135_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_22be444dc:;
			{
				return jule::Any(_227be159b_buildAnonFn(_self_, _42135_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_22be44a1a:;
			{
				return jule::Any(_227be125a_buildUnsafeExpr(_self_, (*(_42135_tokens))), &__jule_any_type102);;
			}
		}
		_match_end_22be4494e:;
	};
}



inline void _227be1d0a_pushRangeLitPart(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _43139_part, jule::Ptr<_246819d43_Token> _4329_errorToken, jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>* _43234_parts) {
	if ((_43139_part.len() == 0LL)) {
		_227bdb981_pushErr(_self_, _4329_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = (*(_43234_parts)); __jule_push_dest.push(_43139_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227be214b_getBraceRangeLitExprParts(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _44248_tokens) {
	if ((_44248_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _44817_parts = nullptr;;
	jule::I64 _45013_last = 0LL;;
	jule::I64 _45113_rangeN = 0LL;;
	(_44248_tokens).mut_slice(1LL, (_44248_tokens.len() - 1LL));;
	{
		auto expr = &(_44248_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be48326:;
		if (it != expr_end) {
			jule::I64 _45313_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _45316_token = *it;
			{
				{
					auto &_match_expr{ (*(_45316_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22be49404:;
						{
							(_45113_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22be4947b:;
						{
							(_45113_rangeN)--;
						}
					}
					_match_end_22be49338:;
				};
				if (((_45113_rangeN > 0LL) || ((*(_45316_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_22be48326;
				};
				_227be1d0a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last, _45313_i), _45316_token, &(_44817_parts));
				_45013_last=static_cast<jule::I64>((_45313_i + 1LL));
			}
			_iter_next_22be48326:;
			++it;
			_45313_i++;
			goto _iter_begin_22be48326;
		}
		_iter_end_22be48326:;
	};
	if ((_45013_last < _44248_tokens.len())) {
		if ((_45013_last == 0LL)) {
			if ((_44248_tokens.len() > 0LL)) {
				_227be1d0a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[_45013_last], &(_44817_parts));
			};
		} else {
			_227be1d0a_pushRangeLitPart(_self_, _44248_tokens.slice(_45013_last), _44248_tokens[(_45013_last - 1LL)], &(_44817_parts));
		};
	};
	return _44817_parts;;
}



inline jule::Ptr<_246838d73_FieldExprPair> _227be248c_buildFieldExprPair(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _48441_tokens) {
	if (((_48441_tokens.len() - 2LL) == 0LL)) {
		_227bdb981_pushErr(_self_, _48441_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246838d73_FieldExprPair> _48913_pair = jule::new_ptr<_246838d73_FieldExprPair>(_246838d73_FieldExprPair{._field_Field=_48441_tokens[0LL], });;
	(_48441_tokens).mut_slice(2LL);;
	(*(_48913_pair))._field_Expr=_227be6529_buildFromTokens(_self_, _48441_tokens);
	return _48913_pair;;
}



inline jule::Ptr<_246834654_Expr> _227be27cd_buildStructLitExpr(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _49742_tokens) {
	jule::Ptr<_246819d43_Token> _49813_token = (*(_49742_tokens))[0LL];;
	if ((((*(_49813_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49742_tokens)).len() > 1LL))) {
		_49813_token=(*(_49742_tokens))[1LL];
		if (((*(_49813_token))._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_246834654_Expr>(_246834654_Expr{._field_Token=_49813_token, ._field_End=(*(_49742_tokens))[((*(_49742_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_227be248c_buildFieldExprPair(_self_, (*(_49742_tokens))), &__jule_any_type77)});;
		};
	};
	return _227be6529_buildFromTokens(_self_, (*(_49742_tokens)));;
}



inline jule::Slice<jule::Ptr<_246834654_Expr>> _227be2b1e_buildStructLitExprs(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _51243_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _51313_parts = _227be214b_getBraceRangeLitExprParts(_self_, (*(_51243_tokens)));;
	if ((_51313_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246834654_Expr>> _51813_pairs = jule::Slice<jule::Ptr<_246834654_Expr>>::alloc(0LL, _51313_parts.len());;
	{
		auto expr = &(_51313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be525e9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _51921_part = *it;
			{
				{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = _51813_pairs; __jule_push_dest.push(_227be27cd_buildStructLitExpr(_self_, &(_51921_part))); };
			}
			_iter_next_22be525e9:;
			++it;
			goto _iter_begin_22be525e9;
		}
		_iter_end_22be525e9:;
	};
	return _51813_pairs;;
}



inline jule::Ptr<_24683969d_StructLit> _227be2e60_buildTypedStructLiteral(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _52546_tokens) {
	jule::I64 _52613_i = 0LL;;
	jule::Ptr<_246830320_TypeDecl> _52713_t;;
	jule::Bool _52716_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &(_52546_tokens), (&(_52613_i)), true);
		_52713_t = __jule_assign_result.__jule_result_arg0;
		_52716_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52716_ok))) {
		return nullptr;;
	} else if ((_52613_i >= _52546_tokens.len())) {
		_227bdb981_pushErr(_self_, _52546_tokens[_52613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_52546_tokens).mut_slice(_52613_i);;
	jule::Ptr<_246819d43_Token> _5369_token = _52546_tokens[0LL];;
	if (((*(_5369_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_227bdb981_pushErr(_self_, _5369_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_24683969d_StructLit>(_24683969d_StructLit{._field_End=_52546_tokens[(_52546_tokens.len() - 1LL)], ._field_Kind=_52713_t, ._field_Exprs=_227be2b1e_buildStructLitExprs(_self_, &(_52546_tokens))});;
}



inline jule::Ptr<_246834654_Expr> _227be32a1_buildBraceLitPart(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _54941_tokens) {
	jule::Slice<jule::Ptr<_246819d43_Token>> _55013_l;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _55020_r;;
	({
		__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_assign_result = _227be7382_splitDelim(_54941_tokens, static_cast<jule::U64>(8LLU));
		_55013_l = __jule_assign_result.__jule_result_arg0;
		_55020_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_55013_l != nullptr)) {
		return jule::new_ptr<_246834654_Expr>(_246834654_Expr{._field_Token=(*(_54941_tokens))[0LL], ._field_End=(*(_54941_tokens))[((*(_54941_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_24683a47e_KeyValPair>(_24683a47e_KeyValPair{._field_Key=_227be6529_buildFromTokens(_self_, _55013_l), ._field_Val=_227be6529_buildFromTokens(_self_, _55020_r), ._field_Colon=(*(_54941_tokens))[_55013_l.len()]}), &__jule_any_type78)});;
	};
	return _227be6529_buildFromTokens(_self_, (*(_54941_tokens)));;
}



inline jule::Ptr<_246839b54_BraceLit> _227be35e2_buildBraceLit(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _56637_tokens) {
	jule::Ptr<_246839b54_BraceLit> _56713_lit = jule::new_ptr<_246839b54_BraceLit>(_246839b54_BraceLit{._field_Token=(*(_56637_tokens))[0LL], ._field_End=(*(_56637_tokens))[((*(_56637_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _57213_parts = _227be214b_getBraceRangeLitExprParts(_self_, (*(_56637_tokens)));;
	if ((_57213_parts == nullptr)) {
		return _56713_lit;;
	};
	(*(_56713_lit))._field_Exprs=jule::Slice<jule::Ptr<_246834654_Expr>>::alloc(0LL, _57213_parts.len());
	{
		auto expr = &(_57213_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be5b48d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _57821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_56713_lit))._field_Exprs; __jule_push_dest.push(_227be32a1_buildBraceLitPart(_self_, &(_57821_part))); };
			}
			_iter_next_22be5b48d:;
			++it;
			goto _iter_begin_22be5b48d;
		}
		_iter_end_22be5b48d:;
	};
	return _56713_lit;;
}



inline jule::Any _227be3933_buildBraceRange(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _58539_tokens) {
	jule::Slice<jule::Ptr<_246819d43_Token>> _58613_exprTokens;;
	jule::I64 _58625_rangeN = 0;;
	({
		__jule_tuple_sx_246819d43_Token__jule_tuple_int __jule_assign_result = _227be7bce_getRangeExprTokens(_58539_tokens);
		_58613_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58625_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58613_exprTokens.len() == 0LL)) {
			_case_begin_22be5c12b:;
			{
				return jule::Any(_227be35e2_buildBraceLit(_self_, _58539_tokens), &__jule_any_type108);;
			}
		}
		else if ((_58625_rangeN > 0LL)) {
			_case_begin_22be5cd30:;
			{
				_227bdb981_pushErr(_self_, (*(_58539_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22be5c23b:;
	};
	jule::Ptr<_246819d43_Token> _5979_elseToken = _58613_exprTokens[(_58613_exprTokens.len() - 1LL)];;
	if (((*(_58613_exprTokens[(_58613_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_58613_exprTokens).mut_slice(0LL, (_58613_exprTokens.len() - 1LL));;
		jule::Any _60017_d = _227be5d97_build(_self_, &(_58613_exprTokens));;
		if ((_60017_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _60017_d };
			
			if (_match_expr.type == &__jule_any_type107) {
				_case_begin_22be60c23:;
				{
					((*(_58539_tokens))).mut_slice((_58613_exprTokens.len() + 1LL));;
					jule::I64 _60721_i = 0LL;;
					jule::Slice<jule::Ptr<_246819d43_Token>> _60821_rangeTokens = _227bea1dc_range(&(_60721_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _58539_tokens);;
					jule::Ptr<_24683837d_FnCallExpr> _60921_model = _60017_d.cast_ptr<_24683837d_FnCallExpr>(&__jule_any_type107);;
					if (_246838988_Ignored(_60921_model.ptr())) {
						_227bdb981_pushErr(_self_, _5979_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_227bdbce4_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*(_60921_model))._field_Exception=_227bed685_buildScope((*(_self_))._field_p, &(_60821_rangeTokens), (*(_58539_tokens))[(_60721_i - 1LL)]);
					return _60017_d;;
				}
			}
			else {
				_case_begin_22be606e5:;
				{
					_227bdb981_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_22be60690:;
		};
	};
	{
		auto &_match_expr{ (*(_58613_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22be6473d:;
			{
				return _227be18dc_buildUnsafe(_self_, _58539_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_22be64d6a:;
			{
				return jule::Any(_227be159b_buildAnonFn(_self_, _58539_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_22be64dd1:;
			{
				return jule::Any(_227be2e60_buildTypedStructLiteral(_self_, (*(_58539_tokens))), &__jule_any_type106);;
			}
		}
		else {
			_case_begin_22be611c9:;
			{
				_227bdb981_pushErr(_self_, _58613_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22be64221:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227be3c74_getEnumerableParts(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _63741_tokens) {
	(_63741_tokens).mut_slice(1LL, (_63741_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _63913_parts;;
	jule::Slice<_24345e617_Log> _63920_errors;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&(_63741_tokens), static_cast<jule::U64>(5LLU), true);
		_63913_parts = __jule_assign_result.__jule_result_arg0;
		_63920_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*((*(_self_))._field_p))._field_errors).append(_63920_errors);;
	return _63913_parts;;
}



inline jule::Ptr<_24683ab77_SliceExpr> _227be40b5_buildSlice(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _64433_tokens) {
	jule::Ptr<_24683ab77_SliceExpr> _64513_slc = jule::new_ptr<_24683ab77_SliceExpr>(_24683ab77_SliceExpr{._field_Token=_64433_tokens[0LL], ._field_End=_64433_tokens[(_64433_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _65013_parts = _227be3c74_getEnumerableParts(_self_, _64433_tokens);;
	if ((_65013_parts.len() == 0LL)) {
		return _64513_slc;;
	};
	(*(_64513_slc))._field_Exprs=jule::Slice<jule::Ptr<_246834654_Expr>>::alloc(0LL, _65013_parts.len());
	{
		auto expr = &(_65013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be69776:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _65621_p = *it;
			{
				if ((_65621_p.len() == 0LL)) {
					goto _iter_next_22be69776;
				};
				{ jule::Slice<jule::Ptr<_246834654_Expr>> &__jule_push_dest = (*(_64513_slc))._field_Exprs; __jule_push_dest.push(_227be6529_buildFromTokens(_self_, _65621_p)); };
			}
			_iter_next_22be69776:;
			++it;
			goto _iter_begin_22be69776;
		}
		_iter_end_22be69776:;
	};
	return _64513_slc;;
}



inline jule::Ptr<_24683b617_IndexingExpr> _227be456b_buildIndexing(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _66636_exprTokens, jule::Slice<jule::Ptr<_246819d43_Token>> _66713_tokens, jule::Ptr<_246819d43_Token> _66735_errorToken) {
	jule::Ptr<_246819d43_Token> _66813_end = _66713_tokens[(_66713_tokens.len() - 1LL)];;
	(_66713_tokens).mut_slice(1LL, (_66713_tokens.len() - 1LL));;
	if ((_66713_tokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, _66735_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246834654_Expr> _67413_expr = _227be6529_buildFromTokens(_self_, _66636_exprTokens);;
	if ((_67413_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_246834654_Expr> _67813_index = _227be6529_buildFromTokens(_self_, _66713_tokens);;
	if ((_67813_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_24683b617_IndexingExpr>(_24683b617_IndexingExpr{._field_Token=_66735_errorToken, ._field_End=_66813_end, ._field_Expr=_67413_expr, ._field_Index=_67813_index});;
}



inline jule::Ptr<_24683bc77_SlicingExpr> _227be4b87_buildSlicing(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _69036_exprTokens, jule::Slice<jule::Ptr<_246819d43_Token>>* _69063_start, jule::Slice<jule::Ptr<_246819d43_Token>>* _69114_to, jule::Ptr<_246819d43_Token>* _69133_errorToken, jule::Ptr<_246819d43_Token> _69157_end) {
	jule::Ptr<_24683bc77_SlicingExpr> _69213_slc = jule::new_ptr<_24683bc77_SlicingExpr>(_24683bc77_SlicingExpr{._field_Token=(*(_69133_errorToken)), ._field_End=_69157_end, ._field_Expr=_227be6529_buildFromTokens(_self_, (*(_69036_exprTokens))), });;
	if (((*(_69063_start)).len() > 0LL)) {
		(*(_69213_slc))._field_Start=_227be6529_buildFromTokens(_self_, (*(_69063_start)));
	};
	if (((*(_69114_to)).len() > 0LL)) {
		(*(_69213_slc))._field_To=_227be6529_buildFromTokens(_self_, (*(_69114_to)));
	};
	return _69213_slc;;
}



inline jule::Any _227be4ec8_buildBracketRange(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _70640_tokens) {
	jule::Ptr<_246819d43_Token> _70713_errorToken = _70640_tokens[0LL];;
	jule::Slice<jule::Ptr<_246819d43_Token>> _70813_exprTokens;;
	jule::I64 _70825_rangeN = 0;;
	({
		__jule_tuple_sx_246819d43_Token__jule_tuple_int __jule_assign_result = _227be7bce_getRangeExprTokens(&(_70640_tokens));
		_70813_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70825_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70813_exprTokens.len() == 0LL)) {
		return jule::Any(_227be40b5_buildSlice(_self_, _70640_tokens), &__jule_any_type93);;
	} else if ((_70825_rangeN > 0LL)) {
		_227bdb981_pushErr(_self_, _70713_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_70640_tokens).mut_slice(_70813_exprTokens.len());;
	jule::Slice<jule::Ptr<_246819d43_Token>> _72313_splitTokens = _70640_tokens.slice(1LL, (_70640_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_246819d43_Token>> _72413_start;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _72424_to;;
	({
		__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_assign_result = _227be7382_splitDelim(&(_72313_splitTokens), static_cast<jule::U64>(8LLU));
		_72413_start = __jule_assign_result.__jule_result_arg0;
		_72424_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_72413_start != nullptr) || (_72424_to != nullptr))) {
		return jule::Any(_227be4b87_buildSlicing(_self_, &(_70813_exprTokens), &(_72413_start), &(_72424_to), &(_70713_errorToken), _70640_tokens[(_70640_tokens.len() - 1LL)]), &__jule_any_type104);;
	};
	return jule::Any(_227be456b_buildIndexing(_self_, _70813_exprTokens, _70640_tokens, _70713_errorToken), &__jule_any_type103);;
}



inline jule::Any _227be5319_buildExclRight(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _73138_tokens) {
	jule::Ptr<_246819d43_Token> _7329_token = (*(_73138_tokens))[((*(_73138_tokens)).len() - 1LL)];;
	((*(_73138_tokens))).mut_slice(0LL, ((*(_73138_tokens)).len() - 1LL));;
	jule::Any _73413_d = _227be5d97_build(_self_, _73138_tokens);;
	if ((_73413_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _73413_d };
		
		if (_match_expr.type == &__jule_any_type107) {
			_case_begin_22be76585:;
			{
				(*(_73413_d.cast_ptr<_24683837d_FnCallExpr>(&__jule_any_type107)))._field_Exception=jule::new_ptr<_246840341_ScopeTree>(_246840341_ScopeTree{._field_Deferred=true, });
				return _73413_d;;
			}
		}
		_match_end_22be76310:;
	};
	_227bdb981_pushErr(_self_, _7329_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _227be565a_buildData(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _74933_tokens) {
	{
		auto _match_expr{ (*(_74933_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_22be77c29:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_22be77c90:;
			{
				return _227bdcb08_buildSingle(_self_, (*(_74933_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_22be77d17:;
			{
				if (((*((*(_74933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_227bdce49_buildBindIdent(_self_, _74933_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_22be77a3c:;
	};
	jule::Ptr<_246819d43_Token> _76113_token = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
	if (((*(_76113_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_227bde3e0_buildVariadic(_self_, (*(_74933_tokens))), &__jule_any_type75);;
	};
	_76113_token=(*(_74933_tokens))[0LL];
	if (_24681a580_IsUnaryOp((*(_76113_token))._field_Id)) {
		if (((*(_74933_tokens)).len() > 1LL)) {
			_76113_token=(*(_74933_tokens))[1LL];
			if (((*(_76113_token))._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_227bddc5d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			};
		};
		return jule::Any(_227bdd28a_buildUnary(_self_, (*(_74933_tokens))), &__jule_any_type87);;
	};
	if (((*(_74933_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_76113_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_22be7c39e:;
				{
					if (((*(_74933_tokens)).len() > 3LL)) {
						jule::Ptr<_246819d43_Token> _78721_t = (*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];;
						if (((*(_78721_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_22be7c2e4;
						};
					};
					jule::Ptr<_246819d43_Token> _79317_next = (*(_74933_tokens))[1LL];;
					if (((*(_79317_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_22be7c2e4;
					};
					return jule::Any(_227bddc5d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
				}
			}
			_match_end_22be7c2e4:;
		};
	};
	_76113_token=(*(_74933_tokens))[((*(_74933_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_76113_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_22be800d8:;
			{
				return _227bde09e_buildSubIdent(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_22be8014e:;
			{
				return _227be5319_buildExclRight(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_22be801b5:;
			{
				return _227be0e19_buildParenthesesRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_22be8022b:;
			{
				return _227be3933_buildBraceRange(_self_, _74933_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_22be802a3:;
			{
				return _227be4ec8_buildBracketRange(_self_, (*(_74933_tokens)));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_22be8032a:;
			{
				return jule::Any(_227bddc5d_buildType(_self_, _74933_tokens), &__jule_any_type88);;
			}
		}
		_match_end_22be8000b:;
	};
	_227bdb981_pushErr(_self_, _76113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _227be5a56_buildBinop(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _82134_tokens, jule::I64 _82152_i) {
	jule::Ptr<_246819d43_Token> _82213_op = (*(_82134_tokens))[_82152_i];;
	jule::Slice<jule::Ptr<_246819d43_Token>> _82313_leftTokens = (*(_82134_tokens)).slice(0LL, _82152_i);;
	if ((_227be68e2_isTypeOp(&((*(_82213_op))._field_Id)) && _227be6c00_isTypeRange(&(_82313_leftTokens)))) {
		return jule::Any(_227bddc5d_buildType(_self_, _82134_tokens), &__jule_any_type88);;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _82813_rightTokens = (*(_82134_tokens)).slice((_82152_i + 1LL));;
	if ((_82313_leftTokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82813_rightTokens.len() == 0LL)) {
		_227bdb981_pushErr(_self_, (*(_82134_tokens))[_82152_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bdbce4_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_246837c1d_BinopExpr>(_246837c1d_BinopExpr{._field_Left=_227be6529_buildFromTokens(_self_, _82313_leftTokens), ._field_Right=_227be6529_buildFromTokens(_self_, _82813_rightTokens), ._field_Op=_82213_op}), &__jule_any_type109);;
}



inline jule::Any _227be5d97_build(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _84629_tokens) {
	if (((*((*(_84629_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_227bddc5d_buildType(_self_, _84629_tokens), &__jule_any_type88);;
	};
	jule::I64 _8509_i = _227be764b_findLowestPrecOp(_84629_tokens);;
	if ((_8509_i == -1LL)) {
		return _227be565a_buildData(_self_, _84629_tokens);;
	};
	return _227be5a56_buildBinop(_self_, _84629_tokens, _8509_i);;
}



inline jule::Any _227be61d8_buildKind(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _85733_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _85813_parts;;
	jule::Slice<_24345e617_Log> _85820_errors;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(_85733_tokens, static_cast<jule::U64>(5LLU), true);
		_85813_parts = __jule_assign_result.__jule_result_arg0;
		_85820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85820_errors != nullptr)) {
		((*((*(_self_))._field_p))._field_errors).append(_85820_errors);;
		return nullptr;;
	} else if ((_85813_parts.len() > 1LL)) {
		return jule::Any(_227bdc135_buildTuple(_self_, &(_85813_parts)), &__jule_any_type80);;
	};
	return _227be5d97_build(_self_, _85733_tokens);;
}



inline jule::Ptr<_246834654_Expr> _227be6529_buildFromTokens(_227bdb19a_exprBuilder* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _86838_tokens) {
	if ((_86838_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87213_kind = _227be61d8_buildKind(_self_, &(_86838_tokens));;
	if ((_87213_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_246834654_Expr>(_246834654_Expr{._field_Token=_86838_tokens[0LL], ._field_End=_86838_tokens[(_86838_tokens.len() - 1LL)], ._field_Kind=_87213_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _227bdb19a_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _227be863b_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _227bebd37_stop(_227beba3a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _227bec0bd_stopped(_227beba3a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _227bec4db_pushErr(_227beba3a_parser* _self_, jule::Ptr<_246819d43_Token> _22426_token, jule::Str _22441_fmt, jule::Slice<jule::Any> _22454_args) {
	{ jule::Slice<_24345e617_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_227beb155_compilerErr(&(_22426_token), &(_22441_fmt), _22454_args)); };
}



inline void _227bec84e_pushSuggestion(_227beba3a_parser* _self_, jule::Str _22933_fmt, jule::Slice<jule::Any> _22946_args) {
	{
		_227beb4eb_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _22933_fmt, _22946_args);
	};
}



inline jule::Ptr<_246834654_Expr> _227becb90_buildExpr(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _23334_tokens) {
	return _227be6529_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_23334_tokens)));;
}



inline jule::Ptr<_24682e73c_Directive> _227beced1_buildDirective(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _23737_tokens) {
	if ((_23737_tokens.len() == 1LL)) {
		_227bec4db_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_23737_tokens[1LL]))._field_Column != ((*(_23737_tokens[0LL]))._field_Column + 1LL))) {
		_227bec4db_pushErr(_self_, _23737_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_24682e73c_Directive>(_24682e73c_Directive{._field_Tag=_23737_tokens[1LL], ._field_Args=_23737_tokens.slice(2LL)});;
}



inline void _227bed289_pushDirective(_227beba3a_parser* _self_, jule::Ptr<_24682e73c_Directive> _25236_d) {
	if ((_25236_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22beab09d:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _25716_pd = *it;
			{
				if (((*((*(_25236_d))._field_Tag))._field_Kind == (*((*(_25716_pd))._field_Tag))._field_Kind)) {
					return;;
				};
			}
			_iter_next_22beab09d:;
			++it;
			goto _iter_begin_22beab09d;
		}
		_iter_end_22beab09d:;
	};
	{ jule::Slice<jule::Ptr<_24682e73c_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_25236_d); };
}



inline jule::Ptr<_246840341_ScopeTree> _227bed685_buildScope(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _26535_tokens, jule::Ptr<_246819d43_Token> _26557_end) {
	jule::Ptr<_246840341_ScopeTree> _26613_s = _227bcbeb0_newScope();;
	(*(_26613_s))._field_End=_26557_end;
	_227bcdac7_scopeParser _26813_sp = _227bcdac7_scopeParser{._field_p=_self_, };;
	_227bda62d_build(&_26813_sp, _26535_tokens, &(_26613_s));
	return _26613_s;;
}



inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227bedb3b__buildType(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _27542_tokens, jule::I64* _27613_i, jule::Bool _27622_err) {
	__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_227c0dc17_typeBuilder _27713_tb = _227c0dc17_typeBuilder{._field_p=_self_, ._field_tokens=(*(_27542_tokens)), ._field_i=_27613_i, ._field_err=_27622_err};;
	jule::Ptr<_246830320_TypeDecl> _28313_decl;;
	jule::Bool _28319_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227c11be8_build(&_27713_tb);
		_28313_decl = __jule_assign_result.__jule_result_arg0;
		_28319_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _28313_decl;
	__jule_func_result.__jule_result_arg1 = _28319_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227bee0e2_buildType(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _28841_tokens, jule::I64* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_246819d43_Token> _2909_token = (*(_28841_tokens))[(*(_28913_i))];;
	jule::Ptr<_246830320_TypeDecl> _29113_t;;
	jule::Bool _29116_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bedb3b__buildType(_self_, _28841_tokens, _28913_i, _28922_err);
		_29113_t = __jule_assign_result.__jule_result_arg0;
		_29116_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_28922_err && (!(_29116_ok)))) {
		_227bec4db_pushErr(_self_.ptr(), _2909_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _29113_t;
	__jule_func_result.__jule_result_arg1 = _29116_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_246846b83_TypeAliasDecl> _227bee433_buildTypeAliasDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _29843_tokens) {
	jule::I64 _29913_i = 1LL;;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246846b83_TypeAliasDecl> _30413_tad = jule::new_ptr<_246846b83_TypeAliasDecl>(_246846b83_TypeAliasDecl{._field_Token=(*(_29843_tokens))[1LL], ._field_Ident=(*((*(_29843_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_246819d43_Token> _30813_token = (*(_29843_tokens))[_29913_i];;
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), _30813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	_30813_token=(*(_29843_tokens))[_29913_i];
	if (((*(_30813_token))._field_Id != static_cast<jule::U64>(8LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	(_29913_i)++;
	if ((_29913_i >= (*(_29843_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_29843_tokens))[(_29913_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _30413_tad;;
	};
	jule::Ptr<_246830320_TypeDecl> _32913_t;;
	jule::Bool _32916_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _29843_tokens, (&(_29913_i)), true);
		_32913_t = __jule_assign_result.__jule_result_arg0;
		_32916_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_30413_tad))._field_Kind=_32913_t;
	if ((_32916_ok && (_29913_i < (*(_29843_tokens)).len()))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_29843_tokens))[_29913_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_30413_tad))._field_Public=_2468ec244_IsPub((*(_30413_tad))._field_Ident);
	return _30413_tad;;
}



inline void _227bee796_buildVarTypeAndExpr(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_2468430ad_VarDecl>* _33844_v, jule::Slice<jule::Ptr<_246819d43_Token>>* _33862_tokens) {
	jule::I64 _33913_i = 0LL;;
	jule::Ptr<_246819d43_Token> _34013_tok = (*(_33862_tokens))[_33913_i];;
	if (((*(_34013_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_33913_i)++;
		if (((_33913_i >= (*(_33862_tokens)).len()) || ((*((*(_33862_tokens))[_33913_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_227bec4db_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_246830320_TypeDecl> _34717_t;;
		jule::Bool _34720_ok = false;;
		({
			__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _33862_tokens, (&(_33913_i)), true);
			_34717_t = __jule_assign_result.__jule_result_arg0;
			_34720_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_34720_ok) {
			(*((*(_33844_v))))._field_Kind=_34717_t;
			if ((_33913_i >= (*(_33862_tokens)).len())) {
				return;;
			};
			_34013_tok=(*(_33862_tokens))[_33913_i];
		};
	};
	if (((*(_34013_tok))._field_Id != static_cast<jule::U64>(71LLU))) {
		_227bec4db_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _36213_exprTokens = (*(_33862_tokens)).slice((_33913_i + 1LL));;
	if ((_36213_exprTokens.len() == 0LL)) {
		_227bec4db_pushErr(_self_.ptr(), _34013_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_33844_v))))._field_Expr=_227becb90_buildExpr(_self_, &(_36213_exprTokens));
}



inline void _227beeb09_buildVarCommon(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_2468430ad_VarDecl>* _37039_v, jule::Slice<jule::Ptr<_246819d43_Token>> _37056_tokens) {
	(*((*(_37039_v))))._field_Token=_37056_tokens[0LL];
	if (((*((*((*(_37039_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*((*(_37039_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_37039_v))))._field_Ident=(*((*((*(_37039_v))))._field_Token))._field_Kind;
	(*((*(_37039_v))))._field_Public=_2468ec244_IsPub((*((*(_37039_v))))._field_Ident);
	(*((*(_37039_v))))._field_Kind=nullptr;
	if ((_37056_tokens.len() > 1LL)) {
		(_37056_tokens).mut_slice(1LL);;
		_227bee796_buildVarTypeAndExpr(_self_, _37039_v, &(_37056_tokens));
	};
}



inline void _227c00027_buildVarBegin(_227beba3a_parser* _self_, jule::Ptr<_2468430ad_VarDecl>* _38637_v, jule::I64* _38655_i, jule::Slice<jule::Ptr<_246819d43_Token>>* _38664_tokens) {
	jule::Ptr<_246819d43_Token> _3879_tok = (*(_38664_tokens))[(*(_38655_i))];;
	{
		auto &_match_expr{ (*(_3879_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22bec55d4:;
			{
				(*((*(_38637_v))))._field_Statically=true;
				goto _case_begin_22bec5a68;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_22bec5a68:;
			{
				((*(_38655_i)))++;
				if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
					_227bec4db_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*((*(_38664_tokens))[(*(_38655_i))]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_38637_v))))._field_Mutable=true;
					((*(_38655_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_22bec52a4:;
			{
				((*(_38655_i)))++;
				(*((*(_38637_v))))._field_Constant=true;
			}
		}
		else {
			_case_begin_22bec523d:;
			{
				_227bec4db_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_22bec51d8:;
	};
	if (((*(_38655_i)) >= (*(_38664_tokens)).len())) {
		_227bec4db_pushErr(_self_, _3879_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_2468430ad_VarDecl> _227c00368_buildVar(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _41632_tokens) {
	jule::I64 _41713_i = 0LL;;
	jule::Ptr<_2468430ad_VarDecl> _41813_v = jule::new_ptr<_2468430ad_VarDecl>(_2468430ad_VarDecl{._field_Token=_41632_tokens[0LL], });;
	_227c00027_buildVarBegin(_self_.ptr(), &(_41813_v), &(_41713_i), &(_41632_tokens));
	if ((_41713_i >= _41632_tokens.len())) {
		return nullptr;;
	};
	(_41632_tokens).mut_slice(_41713_i);;
	if (((*(_41632_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_41813_v))._field_Reference=true;
		if ((_41632_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_41632_tokens).mut_slice(1LL);;
	};
	_227beeb09_buildVarCommon(_self_, &(_41813_v), _41632_tokens);
	return _41813_v;;
}



inline jule::Ptr<_24683c52a_GenericDecl> _227c006a9_buildGeneric(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _43837_tokens) {
	jule::Ptr<_24683c52a_GenericDecl> _43913_g = jule::new_ptr<_24683c52a_GenericDecl>(_24683c52a_GenericDecl{._field_Token=(*(_43837_tokens))[0LL], });;
	if (((*((*(_43913_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_43913_g))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_43913_g))._field_Ident=(*((*(_43913_g))._field_Token))._field_Kind;
	if (((*(_43837_tokens)).len() > 1LL)) {
		if (((*((*(_43837_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_227bec4db_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_43837_tokens)).len() == 2LL)) {
			_227bec4db_pushErr(_self_.ptr(), (*(_43837_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_246819d43_Token>> _45617_constraintTokens = (*(_43837_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _45717_parts;;
		jule::Slice<_24345e617_Log> _45724_errors;;
		({
			__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&(_45617_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_45717_parts = __jule_assign_result.__jule_result_arg0;
			_45724_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_45724_errors.len() > 0LL)) {
			((*(_self_))._field_errors).append(_45724_errors);;
			return nullptr;;
		};
		(*(_43913_g))._field_Constraint=jule::new_ptr<_24683c074_Constraint>(_24683c074_Constraint{._field_Mask=jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, _45717_parts.len())});
		{
			auto expr = &(_45717_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22bed1bb7:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_246819d43_Token>> _46325_part = *it;
				{
					jule::I64 _46421_i = 0LL;;
					jule::Ptr<_246830320_TypeDecl> _46521_kind;;
					({
						__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_46325_part), (&(_46421_i)), true);
						_46521_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*((*(_43913_g))._field_Constraint))._field_Mask; __jule_push_dest.push(_46521_kind); };
					if ((_46421_i < _46325_part.len())) {
						_227bec4db_pushErr(_self_.ptr(), _46325_part[_46421_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_22bed1bb7:;
				++it;
				goto _iter_begin_22bed1bb7;
			}
			_iter_end_22bed1bb7:;
		};
	};
	return _43913_g;;
}



inline jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _227c00aa5_buildGenerics(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _47538_tokens, jule::Ptr<_246819d43_Token>* _47557_errorToken) {
	if (((*(_47538_tokens)).len() == 0LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*(_47557_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _48113_parts;;
	jule::Slice<_24345e617_Log> _48120_errors;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(_47538_tokens, static_cast<jule::U64>(5LLU), true);
		_48113_parts = __jule_assign_result.__jule_result_arg0;
		_48120_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_48120_errors.len() > 0LL)) {
		((*(_self_))._field_errors).append(_48120_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> _48713_generics = jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>::alloc(0LL, _48113_parts.len());;
	{
		auto expr = &(_48113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bed64a2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _48821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_24683c52a_GenericDecl>> &__jule_push_dest = _48713_generics; __jule_push_dest.push(_227c006a9_buildGeneric(_self_, &(_48821_part))); };
			}
			_iter_next_22bed64a2:;
			++it;
			goto _iter_begin_22bed64a2;
		}
		_iter_end_22bed64a2:;
	};
	return _48713_generics;;
}



inline jule::Ptr<_246840a7d_ParamDecl> _227c00de6_buildSelfParam(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _49537_tokens) {
	if ((_49537_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_246840a7d_ParamDecl> _50013_param = jule::new_ptr<_246840a7d_ParamDecl>();;
	jule::I64 _50313_i = 0LL;;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_50013_param))._field_Mutable=true;
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_227bec4db_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_2433b0c50_StrBuilder _51313_ident = static__2433b1019_New(5LL);;
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2433b982a_WriteStr(&_51313_ident, jule::Str::lit("&", 1));
		(_50313_i)++;
		if ((_50313_i >= _49537_tokens.len())) {
			_227bec4db_pushErr(_self_, _49537_tokens[(_50313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (((*(_49537_tokens[_50313_i]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2433b982a_WriteStr(&_51313_ident, jule::Str::lit("self", 4));
		(*(_50013_param))._field_Token=_49537_tokens[_50313_i];
		(_50313_i)++;
		if ((_50313_i < _49537_tokens.len())) {
			_227bec4db_pushErr(_self_, _49537_tokens[_50313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*(_50013_param))._field_Ident=_2433ba122_Str(&_51313_ident);
	return _50013_param;;
}



inline void _227c01314_paramTypeBegin(_227beba3a_parser* _self_, jule::Ptr<_246840a7d_ParamDecl>* _53738_param, jule::I64* _53762_i, jule::Slice<jule::Ptr<_246819d43_Token>>* _53771_tokens) {
	for (; ((*(_53762_i)) < (*(_53771_tokens)).len()); ((*(_53762_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _53913_token = (*(_53771_tokens))[(*(_53762_i))];;
			if (((*(_53913_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_53738_param))))._field_Variadic) {
				_227bec4db_pushErr(_self_, _53913_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_22bede125;
			};
			(*((*(_53738_param))))._field_Variadic=true;
		}
	_iter_next_22bede125:;
	}
	_iter_end_22bede125:;;
}



inline void _227c01677_buildParamType(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_246840a7d_ParamDecl>* _55239_param, jule::Slice<jule::Ptr<_246819d43_Token>>* _55263_tokens) {
	jule::I64 _55313_i = 0LL;;
	_227c01314_paramTypeBegin(_self_.ptr(), _55239_param, &(_55313_i), _55263_tokens);
	if ((_55313_i >= (*(_55263_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _55263_tokens, (&(_55313_i)), true);
		(*((*(_55239_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_55313_i < (*(_55263_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_55263_tokens))[_55313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _227c019da_buildParamBody(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_246840a7d_ParamDecl>* _56539_param, jule::Slice<jule::Ptr<_246819d43_Token>> _56562_tokens) {
	jule::Ptr<_246819d43_Token> _56613_tok = _56562_tokens[0LL];;
	if ((_56562_tokens.len() == 1LL)) {
		(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
		return;;
	} else if ((_56562_tokens.len() < 3LL)) {
		_227bec4db_pushErr(_self_.ptr(), _56613_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_56562_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_56539_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_227c01677_buildParamType(_self_, _56539_param, &(_56562_tokens));
		return;;
	};
	(*((*(_56539_param))))._field_Ident=(*(_56613_tok))._field_Kind;
	(_56562_tokens).mut_slice(2LL);;
	_227c01677_buildParamType(_self_, _56539_param, &(_56562_tokens));
}



inline jule::Ptr<_246840a7d_ParamDecl> _227c01d2b_buildParam(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _58534_tokens) {
	jule::Ptr<_246840a7d_ParamDecl> _58613_param = jule::new_ptr<_246840a7d_ParamDecl>(_246840a7d_ParamDecl{._field_Token=_58534_tokens[0LL], });;
	if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*(_58613_param))._field_Mutable=true;
		if ((_58534_tokens.len() == 1LL)) {
			_227bec4db_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_58534_tokens).mut_slice(1LL);;
		(*(_58613_param))._field_Token=_58534_tokens[0LL];
	};
	if ((_58534_tokens.len() >= 3LL)) {
		if (((*((*(_58613_param))._field_Token))._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_58534_tokens.len() == 1LL)) {
				_227bec4db_pushErr(_self_.ptr(), _58534_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_58534_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_58534_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*(_58613_param))._field_Reference=true;
				(_58534_tokens).mut_slice(1LL);;
				(*(_58613_param))._field_Token=_58534_tokens[0LL];
			};
		};
	};
	if (((*((*(_58613_param))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		(*(_58613_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_227c01677_buildParamType(_self_, &(_58613_param), &(_58534_tokens));
	} else {
		_227c019da_buildParamBody(_self_, &(_58613_param), _58534_tokens);
	};
	return _58613_param;;
}



inline void _227c020d4_checkParams(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246840a7d_ParamDecl>>* _62835_params) {
	{
		auto expr = _62835_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22beed893:;
		if (it != expr_end) {
			jule::Ptr<_246840a7d_ParamDecl> _62921_param = *it;
			{
				if ((_246840e02_IsSelf(_62921_param.ptr()) || ((*(_62921_param))._field_Kind != nullptr))) {
					goto _iter_next_22beed893;
				};
				if (((*(_62921_param))._field_Token == nullptr)) {
					_227bec4db_pushErr(_self_, (*(_62921_param))._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*(_62921_param))._field_Kind=jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_62921_param))._field_Token, ._field_Ident=(*((*(_62921_param))._field_Token))._field_Kind, }), &__jule_any_type20)});
					(*(_62921_param))._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_22beed893:;
			++it;
			goto _iter_begin_22beed893;
		}
		_iter_end_22beed893:;
	};
}



inline jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> _227c024d0_buildParams(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _64836_tokens, jule::Bool _64854_method) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _64913_parts;;
	jule::Slice<_24345e617_Log> _64920_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(_64836_tokens, static_cast<jule::U64>(5LLU), true);
		_64913_parts = __jule_assign_result.__jule_result_arg0;
		_64920_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_64920_errs);;
	if ((_64913_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> _65517_params = nullptr;;
	if ((_64854_method && (_64913_parts.len() > 0LL))) {
		jule::Ptr<_246840a7d_ParamDecl> _65717_param = _227c00de6_buildSelfParam(_self_.ptr(), _64913_parts[0LL]);;
		if (((_65717_param != nullptr) && _246840e02_IsSelf(_65717_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_65717_param); };
			(_64913_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_64913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0050c5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _66421_part = *it;
			{
				jule::Ptr<_246840a7d_ParamDecl> _66517_param = _227c01d2b_buildParam(_self_, _66421_part);;
				if ((_66517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_246840a7d_ParamDecl>> &__jule_push_dest = _65517_params; __jule_push_dest.push(_66517_param); };
				};
			}
			_iter_next_22c0050c5:;
			++it;
			goto _iter_begin_22c0050c5;
		}
		_iter_end_22c0050c5:;
	};
	_227c020d4_checkParams(_self_.ptr(), &(_65517_params));
	return _65517_params;;
}



inline __jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool _227c028cb_buildMultiRetType(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _67542_tokens, jule::I64* _67565_i) {
	__jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_246833213_RetTypeDecl>();
	((*(_67565_i)))++;
	if (((*(_67565_i)) >= (*(_67542_tokens)).len())) {
		((*(_67565_i)))--;
		({
			__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _67542_tokens, _67565_i, false);
			(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_67565_i)))--;
	jule::Slice<jule::Ptr<_246819d43_Token>> _68513_rangeTokens = _227bea1dc_range(_67565_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _67542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _68713_parts;;
	jule::Slice<_24345e617_Log> _68720_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&(_68513_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_68713_parts = __jule_assign_result.__jule_result_arg0;
		_68720_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_errors).append(_68720_errs);;
	if ((_68713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _69313_types = jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, _68713_parts.len());;
	(*(__jule_func_result.__jule_result_arg0))._field_Idents=jule::Slice<jule::Ptr<_246819d43_Token>>::alloc(0LL, _68713_parts.len());
	{
		auto expr = &(_68713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c00a2d9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _69521_part = *it;
			{
				jule::Ptr<_246819d43_Token> _69617_token = _69521_part[0LL];;
				jule::I64 _69717_offset = 0LL;;
				if ((_69521_part.len() > 1LL)) {
					_69617_token=_69521_part[1LL];
					if (((*(_69617_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_69717_offset=2LL;
						if ((_69521_part.len() < 3LL)) {
							_227bec4db_pushErr(_self_.ptr(), _69617_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_22c00a2d9;
						};
					};
				};
				_69617_token=_69521_part[0LL];
				if ((_69717_offset != 2LL)) {
					jule::Ptr<_246819d43_Token> _71321_newToken = jule::new_ptr<_246819d43_Token>((*(_69617_token)));;
					(*(_71321_newToken))._field_Kind=jule::Str::lit("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_71321_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = (*(__jule_func_result.__jule_result_arg0))._field_Idents; __jule_push_dest.push(_69617_token); };
				};
				jule::Ptr<_246830320_TypeDecl> _72017_tk;;
				({
					__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_69521_part), (&(_69717_offset)), true);
					_72017_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_69717_offset < _69521_part.len())) {
					_227bec4db_pushErr(_self_.ptr(), _69521_part[_69717_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = _69313_types; __jule_push_dest.push(_72017_tk); };
			}
			_iter_next_22c00a2d9:;
			++it;
			goto _iter_begin_22c00a2d9;
		}
		_iter_end_22c00a2d9:;
	};
	if ((_69313_types.len() > 1LL)) {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*(_67542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_246831a4c_TupleTypeDecl>(_246831a4c_TupleTypeDecl{._field_Types=_69313_types}), &__jule_any_type74)});
	} else {
		(*(__jule_func_result.__jule_result_arg0))._field_Kind=_69313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool _227c02cc7_buildRetType(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _74337_tokens, jule::I64* _74360_i) {
	__jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_246833213_RetTypeDecl>();
	if (((*(_74360_i)) >= (*(_74337_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_246819d43_Token> _74913_token = (*(_74337_tokens))[(*(_74360_i))];;
	{
		auto &_match_expr{ (*(_74913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_22c013567:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_22c0135de:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_22c013666:;
			{
				if ((((*(_74360_i)) + 1LL) >= (*(_74337_tokens)).len())) {
					_227bec4db_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_74360_i)))++;
				_74913_token=(*(_74337_tokens))[(*(_74360_i))];
				{
					auto &_match_expr{ (*(_74913_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22c015404:;
						{
							({
								__jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool __jule_assign_result = _227c028cb_buildMultiRetType(_self_, _74337_tokens, _74360_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_22c01547b:;
						{
							_227bec4db_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_22c01538d:;
				};
				({
					__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _74337_tokens, _74360_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_22c0134e0:;
	};
	((*(_74360_i)))++;
	_227bec4db_pushErr(_self_.ptr(), _74913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_246841ed0_FnDecl> _227c0327d_buildFnPrototype(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _78241_tokens, jule::I64* _78264_i, jule::Bool _78272_method) {
	jule::Ptr<_246841ed0_FnDecl> _78313_f = jule::new_ptr<_246841ed0_FnDecl>(_246841ed0_FnDecl{._field_Token=(*(_78241_tokens))[(*(_78264_i))], });;
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*(_78313_f))._field_Statically=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	if (((*((*(_78313_f))._field_Token))._field_Id == static_cast<jule::U64>(31LLU))) {
		(*(_78313_f))._field_Unsafety=true;
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Token=(*(_78241_tokens))[(*(_78264_i))];
	};
	((*(_78264_i)))++;
	if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246819d43_Token> _8169_tok = (*(_78241_tokens))[(*(_78264_i))];;
	if (((*(_8169_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_78264_i)))++;
		if (((*(_78264_i)) >= (*(_78241_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_78313_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_78313_f))._field_Ident=(*(_8169_tok))._field_Kind;
	} else {
		(*(_78313_f))._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_246819d43_Token> _8289_errorToken = (*(_78241_tokens))[(*(_78264_i))];;
	jule::Slice<jule::Ptr<_246819d43_Token>> _82913_genericsTokens = _227bea1dc_range(_78264_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _78241_tokens);;
	if ((_82913_genericsTokens != nullptr)) {
		(*(_78313_f))._field_Generics=_227c00aa5_buildGenerics(_self_, &(_82913_genericsTokens), &(_8289_errorToken));
	};
	if (((*((*(_78241_tokens))[(*(_78264_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_78241_tokens))[(*(_78264_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _83913_paramsToks = _227bea1dc_range(_78264_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _78241_tokens);;
	if ((_83913_paramsToks.len() > 0LL)) {
		(*(_78313_f))._field_Params=_227c024d0_buildParams(_self_, &(_83913_paramsToks), _78272_method);
	};
	if (((*(_78264_i)) < (*(_78241_tokens)).len())) {
		jule::Ptr<_246819d43_Token> _84513_token = (*(_78241_tokens))[(*(_78264_i))];;
		if (((*(_84513_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*(_78313_f))._field_Exceptional=true;
			((*(_78264_i)))++;
		};
	};
	(*(_78313_f))._field_Public=_2468ec244_IsPub((*(_78313_f))._field_Ident);
	({
		__jule_tuple_x_246833213_RetTypeDecl__jule_tuple_bool __jule_assign_result = _227c02cc7_buildRetType(_self_, _78241_tokens, _78264_i);
		(*(_78313_f))._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _78313_f;;
}



inline jule::Ptr<_246841ed0_FnDecl> _227c03734_buildFn(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _85932_tokens, jule::Bool _85950_method, jule::Bool _85964_prototype) {
	jule::I64 _86013_i = 0LL;;
	jule::Ptr<_246841ed0_FnDecl> _86113_f = _227c0327d_buildFnPrototype(_self_, _85932_tokens, &(_86013_i), _85950_method);;
	if (_85964_prototype) {
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_85932_tokens))[(_86013_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _86113_f;;
	} else if ((_86113_f == nullptr)) {
		return _86113_f;;
	};
	if ((_86013_i >= (*(_85932_tokens)).len())) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _87713_blockTokens = _227bea1dc_range(&(_86013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _85932_tokens);;
	if ((_87713_blockTokens != nullptr)) {
		(*(_86113_f))._field_Scope=_227bed685_buildScope(_self_, &(_87713_blockTokens), (*(_85932_tokens))[(_86013_i - 1LL)]);
		(*((*(_86113_f))._field_Scope))._field_Unsafety=(*(_86113_f))._field_Unsafety;
		if ((_86013_i < (*(_85932_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_85932_tokens))[_86013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_86113_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _86113_f;;
}



inline jule::Slice<jule::Ptr<_246819d43_Token>> _227c03a75_getUseDeclSelectors(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _89342_tokens) {
	jule::I64 _89413_i = 0LL;;
	_89342_tokens=_227bea1dc_range(&(_89413_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_89342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _89613_parts;;
	jule::Slice<_24345e617_Log> _89620_errs;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&(_89342_tokens), static_cast<jule::U64>(5LLU), true);
		_89613_parts = __jule_assign_result.__jule_result_arg0;
		_89620_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_89620_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_89620_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _90213_selectors = jule::Slice<jule::Ptr<_246819d43_Token>>::alloc(0LL, _89613_parts.len());;
	{
		auto expr = &(_89613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c02c5c5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _90321_part = *it;
			{
				if ((_90321_part.len() > 1LL)) {
					_227bec4db_pushErr(_self_, _90321_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_246819d43_Token> _90717_tok = _90321_part[0LL];;
				if ((((*(_90717_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_90717_tok))._field_Id != static_cast<jule::U64>(24LLU)))) {
					_227bec4db_pushErr(_self_, _90717_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_227bec84e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_22c02c5c5;
				};
				{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = _90213_selectors; __jule_push_dest.push(_90717_tok); };
			}
			_iter_next_22c02c5c5:;
			++it;
			goto _iter_begin_22c02c5c5;
		}
		_iter_end_22c02c5c5:;
	};
	return _90213_selectors;;
}



inline void _227c03dd8_buildBindUseDecl(_227beba3a_parser* _self_, jule::Ptr<_246848190_UseDecl>* _91840_decl, jule::Slice<jule::Ptr<_246819d43_Token>>* _91857_tokens) {
	if (((*(_91857_tokens)).len() > 1LL)) {
		_227bec4db_pushErr(_self_, (*(_91857_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246819d43_Token> _9229_token = (*(_91857_tokens))[0LL];;
	if ((((*(_9229_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*(_9229_token))._field_Kind[0LL] != '`') && ((*(_9229_token))._field_Kind[0LL] != '\"')))) {
		_227bec4db_pushErr(_self_, _9229_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_91840_decl))))._field_Binded=true;
	(*((*(_91840_decl))))._field_LinkPath=(*(_9229_token))._field_Kind.slice(1LL, ((*(_9229_token))._field_Kind.len() - 1LL));
}



inline jule::Str _227c04229_useDeclTokstoa(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _93134_tokens) {
	jule::I64 _93213_n = 0LL;;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0342e1:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_93316_token = it;
			{
				if ((((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*((*(_93316_token))))._field_Id != static_cast<jule::U64>(19LLU)))) {
					_227bec4db_pushErr(_self_, (*(_93316_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_93213_n+=(*((*(_93316_token))))._field_Kind.len();
			}
			_iter_next_22c0342e1:;
			++it;
			goto _iter_begin_22c0342e1;
		}
		_iter_end_22c0342e1:;
	};
	_2433b0c50_StrBuilder _93913_s = static__2433b1019_New(_93213_n);;
	{
		auto expr = _93134_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c034214:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_94016_token = it;
			{
				_2433b982a_WriteStr(&_93913_s, (*((*(_94016_token))))._field_Kind);
			}
			_iter_next_22c034214:;
			++it;
			goto _iter_begin_22c034214;
		}
		_iter_end_22c034214:;
	};
	return _2433ba122_Str(&_93913_s);;
}



inline void _227c0458c_buildStdUseDecl(_227beba3a_parser* _self_, jule::Ptr<_246848190_UseDecl>* _94639_decl, jule::Slice<jule::Ptr<_246819d43_Token>> _94659_tokens) {
	(*((*(_94639_decl))))._field_Std=true;
	jule::Ptr<_246819d43_Token> _94913_token = _94659_tokens[0LL];;
	if ((_94659_tokens.len() < 3LL)) {
		_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_94659_tokens).mut_slice(2LL);;
	_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_94913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_22c03889a:;
			{
				_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_22c038922:;
			{
				jule::Slice<jule::Ptr<_246819d43_Token>> _96221_selectors = nullptr;;
				({
					__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_assign_result = _227bea4a6_rangeLast(&(_94659_tokens));
					_94659_tokens = __jule_assign_result.__jule_result_arg0;
					_96221_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_94639_decl))))._field_Selected=_227c03a75_getUseDeclSelectors(_self_, _96221_selectors);
				if ((_94659_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c038999:;
			{
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94913_token=_94659_tokens[(_94659_tokens.len() - 1LL)];
				if (((*(_94913_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_94659_tokens).mut_slice(0LL, (_94659_tokens.len() - 1LL));;
				if ((_94659_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _94913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_94639_decl))))._field_Full=true;
			}
		}
		_match_end_22c038823:;
	};
	if (((_94659_tokens.len() == 1LL) && ((*(_94659_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_94639_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_94639_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _227c04229_useDeclTokstoa(_self_, &(_94659_tokens)));
	};
}



inline void _227c04900_buildIdentUseDecl(_227beba3a_parser* _self_, jule::Ptr<_246848190_UseDecl>* _100441_decl, jule::Slice<jule::Ptr<_246819d43_Token>> _100461_tokens) {
	(*((*(_100441_decl))))._field_Std=false;
	jule::Ptr<_246819d43_Token> _100713_token = _100461_tokens[(_100461_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_100713_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_22c042266:;
			{
				_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_22c043058:;
			{
				jule::Slice<jule::Ptr<_246819d43_Token>> _101321_selectors = nullptr;;
				({
					__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_assign_result = _227bea4a6_rangeLast(&(_100461_tokens));
					_100461_tokens = __jule_assign_result.__jule_result_arg0;
					_101321_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_100441_decl))))._field_Selected=_227c03a75_getUseDeclSelectors(_self_, _101321_selectors);
				if ((_100461_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c0430be:;
			{
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100713_token=_100461_tokens[(_100461_tokens.len() - 1LL)];
				if (((*(_100713_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_100461_tokens).mut_slice(0LL, (_100461_tokens.len() - 1LL));;
				if ((_100461_tokens.len() == 0LL)) {
					_227bec4db_pushErr(_self_, _100713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_100441_decl))))._field_Full=true;
			}
		}
		_match_end_22c042e48:;
	};
	(*((*(_100441_decl))))._field_LinkPath=_227c04229_useDeclTokstoa(_self_, &(_100461_tokens));
}



inline void _227c04c63_parseUseDecl(_227beba3a_parser* _self_, jule::Ptr<_246848190_UseDecl>* _105236_decl, jule::Slice<jule::Ptr<_246819d43_Token>> _105256_tokens) {
	if ((*((*(_105236_decl))))._field_Binded) {
		_227c03dd8_buildBindUseDecl(_self_, _105236_decl, &(_105256_tokens));
		return;;
	};
	jule::Ptr<_246819d43_Token> _105813_token = _105256_tokens[0LL];;
	if (((*(_105813_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_105256_tokens.len() > 2LL) && ((*(_105256_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_105236_decl))))._field_Alias=(*(_105813_token))._field_Kind;
		if (((*(_105256_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_227bec4db_pushErr(_self_, _105813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_227bec84e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_105256_tokens).mut_slice(2LL);;
		_105813_token=_105256_tokens[0LL];
	};
	;
	{
		
		if ((*(_105813_token))._field_Kind.equal("std", 3)) {
			_case_begin_22c04edcd:;
			{
				_227c0458c_buildStdUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		else {
			_case_begin_22c04e949:;
			{
				_227c04900_buildIdentUseDecl(_self_, _105236_decl, _105256_tokens);
			}
		}
		_match_end_22c04e8d3:;
	};
}



inline jule::Ptr<_246848190_UseDecl> _227c0515e_buildUseDecl(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _108635_tokens, jule::Bool _108653_binded) {
	jule::Ptr<_246848190_UseDecl> _108713_decl = jule::new_ptr<_246848190_UseDecl>(_246848190_UseDecl{._field_Token=_108635_tokens[0LL], ._field_Binded=_108653_binded, });;
	if ((_108635_tokens.len() < 2LL)) {
		_227bec4db_pushErr(_self_, (*(_108713_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_108635_tokens).mut_slice(1LL);;
	_227c04c63_parseUseDecl(_self_, &(_108713_decl), _108635_tokens);
	return _108713_decl;;
}



inline jule::Ptr<_246830320_TypeDecl> _227c0555a_buildTypeEnumItemKind(jule::Ptr<_227beba3a_parser> _self_, jule::I64* _110046_i, jule::Slice<jule::Ptr<_246819d43_Token>>* _110059_tokens) {
	jule::I64 _110113_braceN = 0LL;;
	jule::I64 _11029_exprStart = (*(_110046_i));;
	for (; ((*(_110046_i)) < (*(_110059_tokens)).len()); ((*(_110046_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _110413_t = (*(_110059_tokens))[(*(_110046_i))];;
			{
				auto &_match_expr{ (*(_110413_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22c053b07:;
					{
						(_110113_braceN)++;
						goto _iter_next_22c053068;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22c053b7e:;
					{
						(_110113_braceN)--;
					}
				}
				_match_end_22c053a91:;
			};
			if ((_110113_braceN > 0LL)) {
				goto _iter_next_22c053068;
			};
			if ((((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_110046_i)) + 1LL) >= (*(_110059_tokens)).len()))) {
				jule::Slice<jule::Ptr<_246819d43_Token>> _112025_kindTokens = nullptr;;
				if (((*(_110413_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart, (*(_110046_i)));
				} else {
					_112025_kindTokens=(*(_110059_tokens)).slice(_11029_exprStart);
				};
				jule::I64 _112621_j = 0LL;;
				jule::Ptr<_246830320_TypeDecl> _112721_kind;;
				({
					__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_112025_kindTokens), (&(_112621_j)), true);
					_112721_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_112621_j < _112025_kindTokens.len())) {
					_227bec4db_pushErr(_self_.ptr(), _112025_kindTokens[_112621_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112721_kind;;
			};
		}
	_iter_next_22c053068:;
	}
	_iter_end_22c053068:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>> _227c0589b_buildTypeEnumItems(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _113743_tokens) {
	jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>> _113813_items = jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113913_i = 0LL;;
	for (; (_113913_i < (*(_113743_tokens)).len()); (_113913_i)++) {
		{
			jule::Ptr<_246819d43_Token> _114117_t = (*(_113743_tokens))[_113913_i];;
			jule::Ptr<_246849a32_TypeEnumItemDecl> _114217_item = jule::new_ptr<_246849a32_TypeEnumItemDecl>();;
			(*(_114217_item))._field_Token=_114117_t;
			if ((((*((*(_114217_item))._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113743_tokens)).len() - _113913_i) > 2LL))) {
				_114117_t=(*(_113743_tokens))[(_113913_i + 1LL)];
				if (((*(_114117_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*(_114217_item))._field_Ident=(*((*(_114217_item))._field_Token))._field_Kind;
					_113913_i+=2LL;
					if (((_113913_i >= (*(_113743_tokens)).len()) || ((*((*(_113743_tokens))[_113913_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_227bec4db_pushErr(_self_.ptr(), _114117_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_22c058953;
					};
				};
			};
			(*(_114217_item))._field_Kind=_227c0555a_buildTypeEnumItemKind(_self_, &(_113913_i), _113743_tokens);
			{ jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>> &__jule_push_dest = _113813_items; __jule_push_dest.push(_114217_item); };
		}
	_iter_next_22c058953:;
	}
	_iter_end_22c058953:;;
	return _113813_items;;
}



inline jule::Ptr<_24684a192_TypeEnumDecl> _227c05bdc_buildTypeEnumDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _116142_tokens) {
	jule::I64 _116213_i = 1LL;;
	jule::Ptr<_24684a192_TypeEnumDecl> _116313_e = jule::new_ptr<_24684a192_TypeEnumDecl>(_24684a192_TypeEnumDecl{._field_Token=(*(_116142_tokens))[_116213_i], });;
	if (((*((*(_116313_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Ident=(*((*(_116313_e))._field_Token))._field_Kind;
	_116213_i+=3LL;
	jule::Slice<jule::Ptr<_246819d43_Token>> _117313_itemTokens = _227bea1dc_range(&(_116213_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116142_tokens);;
	if ((_117313_itemTokens == nullptr)) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_116313_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _116313_e;;
	} else if ((_116213_i < (*(_116142_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_116142_tokens))[_116213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_116313_e))._field_Public=_2468ec244_IsPub((*(_116313_e))._field_Ident);
	(*(_116313_e))._field_End=(*(_116142_tokens))[(_116213_i - 1LL)];
	(*(_116313_e))._field_Items=_227c0589b_buildTypeEnumItems(_self_, &(_117313_itemTokens));
	return _116313_e;;
}



inline jule::Ptr<_246834654_Expr> _227c060d8_buildEnumItemExpr(jule::Ptr<_227beba3a_parser> _self_, jule::I64* _118842_i, jule::Slice<jule::Ptr<_246819d43_Token>>* _118855_tokens) {
	jule::I64 _118913_braceN = 0LL;;
	jule::I64 _11909_exprStart = (*(_118842_i));;
	for (; ((*(_118842_i)) < (*(_118855_tokens)).len()); ((*(_118842_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _119213_t = (*(_118855_tokens))[(*(_118842_i))];;
			{
				auto &_match_expr{ (*(_119213_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22c065432:;
					{
						(_118913_braceN)++;
						goto _iter_next_22c064893;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22c0654a9:;
					{
						(_118913_braceN)--;
					}
				}
				_match_end_22c0653bb:;
			};
			if ((_118913_braceN > 0LL)) {
				goto _iter_next_22c064893;
			};
			if ((((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118842_i)) + 1LL) >= (*(_118855_tokens)).len()))) {
				jule::Slice<jule::Ptr<_246819d43_Token>> _120825_exprTokens = nullptr;;
				if (((*(_119213_t))._field_Id == static_cast<jule::U64>(5LLU))) {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart, (*(_118842_i)));
				} else {
					_120825_exprTokens=(*(_118855_tokens)).slice(_11909_exprStart);
				};
				return _227becb90_buildExpr(_self_, &(_120825_exprTokens));;
			};
		}
	_iter_next_22c064893:;
	}
	_iter_end_22c064893:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> _227c06429_buildEnumItems(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _122039_tokens) {
	jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> _122113_items = jule::Slice<jule::Ptr<_246848646_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _122213_i = 0LL;;
	for (; (_122213_i < (*(_122039_tokens)).len()); (_122213_i)++) {
		{
			jule::Ptr<_246819d43_Token> _122417_t = (*(_122039_tokens))[_122213_i];;
			jule::Ptr<_246848646_EnumItemDecl> _122517_item = jule::new_ptr<_246848646_EnumItemDecl>();;
			(*(_122517_item))._field_Token=_122417_t;
			if (((*((*(_122517_item))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_227bec4db_pushErr(_self_.ptr(), (*(_122517_item))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*(_122517_item))._field_Ident=(*((*(_122517_item))._field_Token))._field_Kind;
			if ((((_122213_i + 1LL) >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[(_122213_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_122213_i + 1LL) < (*(_122039_tokens)).len())) {
					(_122213_i)++;
				};
				{ jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
				goto _iter_next_22c06914a;
			};
			(_122213_i)++;
			_122417_t=(*(_122039_tokens))[_122213_i];
			(_122213_i)++;
			if (((*(_122417_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_227bec4db_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_22c06914a;
			};
			if (((_122213_i >= (*(_122039_tokens)).len()) || ((*((*(_122039_tokens))[_122213_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_227bec4db_pushErr(_self_.ptr(), _122417_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_22c06914a;
			};
			(*(_122517_item))._field_Expr=_227c060d8_buildEnumItemExpr(_self_, &(_122213_i), _122039_tokens);
			{ jule::Slice<jule::Ptr<_246848646_EnumItemDecl>> &__jule_push_dest = _122113_items; __jule_push_dest.push(_122517_item); };
		}
	_iter_next_22c06914a:;
	}
	_iter_end_22c06914a:;;
	return _122113_items;;
}



inline jule::Ptr<_246849207_EnumDecl> _227c0676a_buildEnumDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _125738_tokens) {
	if (((*(_125738_tokens)).len() < 3LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*(_125738_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246849207_EnumDecl> _126213_e = jule::new_ptr<_246849207_EnumDecl>(_246849207_EnumDecl{._field_Token=(*(_125738_tokens))[1LL], });;
	if (((*((*(_126213_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Ident=(*((*(_126213_e))._field_Token))._field_Kind;
	jule::I64 _127013_i = 2LL;;
	if (((*((*(_125738_tokens))[_127013_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_127013_i)++;
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), (*(_125738_tokens))[(_127013_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _126213_e;;
		};
		({
			__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, _125738_tokens, (&(_127013_i)), true);
			(*(_126213_e))._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_127013_i >= (*(_125738_tokens)).len())) {
			_227bebd37_stop(_self_.ptr());
			_227bec4db_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _126213_e;;
		};
	} else {
		(*(_126213_e))._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _128713_itemTokens = _227bea1dc_range(&(_127013_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125738_tokens);;
	if ((_128713_itemTokens == nullptr)) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_126213_e))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _126213_e;;
	} else if ((_127013_i < (*(_125738_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_125738_tokens))[_127013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_126213_e))._field_Public=_2468ec244_IsPub((*(_126213_e))._field_Ident);
	(*(_126213_e))._field_End=(*(_125738_tokens))[(_127013_i - 1LL)];
	(*(_126213_e))._field_Items=_227c06429_buildEnumItems(_self_, &(_128713_itemTokens));
	return _126213_e;;
}



inline jule::Any _227c06aab_buildNodeEnumDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _130242_tokens) {
	if ((((*(_130242_tokens)).len() > 3LL) && ((*((*(_130242_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_130242_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_227c05bdc_buildTypeEnumDecl(_self_, _130242_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_227c0676a_buildEnumDecl(_self_, _130242_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_24684a45b_FieldDecl> _227c06dec_buildField(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _131134_tokens) {
	jule::Ptr<_24684a45b_FieldDecl> _131213_f = jule::new_ptr<_24684a45b_FieldDecl>();;
	(*(_131213_f))._field_Mutable=((*(_131134_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*(_131213_f))._field_Mutable) {
		if ((_131134_tokens.len() == 1LL)) {
			_227bec4db_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(1LL);;
	};
	(*(_131213_f))._field_Token=_131134_tokens[0LL];
	if (((*((*(_131213_f))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_131213_f))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_131213_f))._field_Ident=(*((*(_131213_f))._field_Token))._field_Kind;
	if ((_131134_tokens.len() == 1LL)) {
		_227bec4db_pushErr(_self_.ptr(), _131134_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_131134_tokens.len() < 3LL) || ((*(_131134_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_227bec4db_pushErr(_self_.ptr(), _131134_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_131134_tokens).mut_slice(2LL);;
	jule::I64 _134013_i = 0LL;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_131134_tokens), (&(_134013_i)), true);
		(*(_131213_f))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_134013_i < _131134_tokens.len())) {
		jule::Ptr<_246819d43_Token> _134313_token = _131134_tokens[_134013_i];;
		if (((*(_134313_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_227bec4db_pushErr(_self_.ptr(), _131134_tokens[_134013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_134013_i)++;
		if ((_134013_i >= _131134_tokens.len())) {
			_227bec4db_pushErr(_self_.ptr(), _134313_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_131134_tokens).mut_slice(_134013_i);;
		(*(_131213_f))._field_Default=_227becb90_buildExpr(_self_, &(_131134_tokens));
	};
	(*(_131213_f))._field_Public=_2468ec244_IsPub((*(_131213_f))._field_Ident);
	return _131213_f;;
}



inline jule::Slice<jule::Ptr<_24684a45b_FieldDecl>> _227c0723d_buildStructDeclFields(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _136045_tokens) {
	jule::Slice<jule::Ptr<_24684a45b_FieldDecl>> _136117_fields = nullptr;;
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _136213_stmts = _227bcd5dd_splitStmts(&(_136045_tokens));;
	{
		auto expr = &(_136213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0878a5:;
		if (it != expr_end) {
			jule::Ptr<_227bcd236_stmt> _136321_stmt = *it;
			{
				_136045_tokens=(*(_136321_stmt))._field_tokens;
				jule::Ptr<_24684a45b_FieldDecl> _136517_f = _227c06dec_buildField(_self_, _136045_tokens);;
				{ jule::Slice<jule::Ptr<_24684a45b_FieldDecl>> &__jule_push_dest = _136117_fields; __jule_push_dest.push(_136517_f); };
			}
			_iter_next_22c0878a5:;
			++it;
			goto _iter_begin_22c0878a5;
		}
		_iter_end_22c0878a5:;
	};
	return _136117_fields;;
}



inline jule::Ptr<_24684ad52_StructDecl> _227c0757e_buildStructDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _137140_tokens) {
	if (((*(_137140_tokens)).len() < 3LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*(_137140_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137713_i = 1LL;;
	jule::Ptr<_24684ad52_StructDecl> _137813_s = jule::new_ptr<_24684ad52_StructDecl>(_24684ad52_StructDecl{._field_Token=(*(_137140_tokens))[_137713_i], });;
	if (((*((*(_137813_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137713_i)++;
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	(*(_137813_s))._field_Ident=(*((*(_137813_s))._field_Token))._field_Kind;
	jule::Ptr<_246819d43_Token> _13929_errorToken = (*(_137140_tokens))[_137713_i];;
	jule::Slice<jule::Ptr<_246819d43_Token>> _139313_genericsTokens = _227bea1dc_range(&(_137713_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _137140_tokens);;
	if ((_139313_genericsTokens != nullptr)) {
		(*(_137813_s))._field_Generics=_227c00aa5_buildGenerics(_self_, &(_139313_genericsTokens), &(_13929_errorToken));
	};
	if ((_137713_i >= (*(_137140_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_137140_tokens))[(_137713_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _140313_bodyTokens = _227bea1dc_range(&(_137713_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _137140_tokens);;
	if ((_140313_bodyTokens == nullptr)) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_137813_s))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137813_s;;
	};
	if ((_137713_i < (*(_137140_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_137140_tokens))[_137713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_137813_s))._field_Public=_2468ec244_IsPub((*(_137813_s))._field_Ident);
	(*(_137813_s))._field_Fields=_227c0723d_buildStructDeclFields(_self_, _140313_bodyTokens);
	(*(_137813_s))._field_End=(*(_137140_tokens))[(_137713_i - 1LL)];
	return _137813_s;;
}



inline void _227c07837_checkMethodReceiver(_227beba3a_parser* _self_, jule::Ptr<_246841ed0_FnDecl>* _141939_f) {
	if ((*((*(_141939_f))))._field_Statically) {
		if ((((*((*(_141939_f))))._field_Params.len() > 0LL) && _246840e02_IsSelf((*((*(_141939_f))))._field_Params[0LL].ptr()))) {
			_227bec4db_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_141939_f))))._field_Params.len() == 0LL)) {
		_227bec4db_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_246840a7d_ParamDecl> _14319_param = (*((*(_141939_f))))._field_Params[0LL];;
	if ((!(_246840e02_IsSelf(_14319_param.ptr())))) {
		_227bec4db_pushErr(_self_, (*((*(_141939_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _227c07b9a_buildTraitBody(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_24684b58e_TraitDecl>* _143839_t, jule::Slice<jule::Ptr<_246819d43_Token>> _143858_tokens) {
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _143913_stmts = _227bcd5dd_splitStmts(&(_143858_tokens));;
	{
		auto expr = &(_143913_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c09c4be:;
		if (it != expr_end) {
			jule::Ptr<_227bcd236_stmt> _144021_stmt = *it;
			{
				_143858_tokens=(*(_144021_stmt))._field_tokens;
				if ((_143858_tokens.len() == 0LL)) {
					goto _iter_next_22c09c4be;
				};
				{
					auto &_match_expr{ (*(_143858_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_22c0a0978:;
						{
							jule::Ptr<_246841ed0_FnDecl> _144721_f = _227c03734_buildFn(_self_, &(_143858_tokens), true, true);;
							if ((_144721_f == nullptr)) {
								goto _match_end_22c09d7bc;
							};
							_227c07837_checkMethodReceiver(_self_.ptr(), &(_144721_f));
							if (((*(_144721_f))._field_Generics.len() > 0LL)) {
								_227bec4db_pushErr(_self_.ptr(), (*(_144721_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_246841ed0_FnDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Methods; __jule_push_dest.push(_144721_f); };
						}
					}
					else {
						_case_begin_22c09d091:;
						{
							jule::I64 _145721_i = 0LL;;
							jule::Ptr<_246830320_TypeDecl> _145821_ti;;
							jule::Bool _145825_ok = false;;
							({
								__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_143858_tokens), (&(_145721_i)), true);
								_145821_ti = __jule_assign_result.__jule_result_arg0;
								_145825_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145825_ok))) {
								goto _match_end_22c09d7bc;
							};
							if ((_145721_i < _143858_tokens.len())) {
								_227bec4db_pushErr(_self_.ptr(), _143858_tokens[_145721_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = (*((*(_143839_t))))._field_Inherits; __jule_push_dest.push(_145821_ti); };
						}
					}
					_match_end_22c09d7bc:;
				};
			}
			_iter_next_22c09c4be:;
			++it;
			goto _iter_begin_22c09c4be;
		}
		_iter_end_22c09c4be:;
	};
}



inline jule::Ptr<_24684b58e_TraitDecl> _227c07edb_buildTraitDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _147039_tokens) {
	if (((*(_147039_tokens)).len() < 3LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*(_147039_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_24684b58e_TraitDecl> _147513_t = jule::new_ptr<_24684b58e_TraitDecl>(_24684b58e_TraitDecl{._field_Token=(*(_147039_tokens))[1LL], });;
	if (((*((*(_147513_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227bec4db_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Ident=(*((*(_147513_t))._field_Token))._field_Kind;
	jule::I64 _148313_i = 2LL;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _148413_bodyTokens = _227bea1dc_range(&(_148313_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _147039_tokens);;
	if ((_148413_bodyTokens == nullptr)) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), (*(_147513_t))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_148313_i < (*(_147039_tokens)).len())) {
		_227bec4db_pushErr(_self_.ptr(), (*(_147039_tokens))[_148313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_147513_t))._field_Public=_2468ec244_IsPub((*(_147513_t))._field_Ident);
	_227c07b9a_buildTraitBody(_self_, &(_147513_t), _148413_bodyTokens);
	(*(_147513_t))._field_End=(*(_147039_tokens))[(_148313_i - 1LL)];
	return _147513_t;;
}



inline jule::Ptr<_246841ed0_FnDecl> _227c0832c_buildBindFn(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _150035_tokens) {
	(_150035_tokens).mut_slice(1LL);;
	jule::Ptr<_246841ed0_FnDecl> _150213_f = _227c03734_buildFn(_self_, &(_150035_tokens), false, true);;
	if ((_150213_f != nullptr)) {
		(*(_150213_f))._field_Public=false;
		(*(_150213_f))._field_Binded=true;
	};
	return _150213_f;;
}



inline jule::Ptr<_2468430ad_VarDecl> _227c0866d_buildBindVar(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _151036_tokens) {
	(_151036_tokens).mut_slice(1LL);;
	jule::Ptr<_2468430ad_VarDecl> _151213_v = _227c00368_buildVar(_self_, _151036_tokens);;
	if ((_151213_v != nullptr)) {
		(*(_151213_v))._field_Public=false;
		(*(_151213_v))._field_Binded=true;
		if (((*(_151213_v))._field_Expr != nullptr)) {
			_227bec4db_pushErr(_self_.ptr(), (*(_151213_v))._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _151213_v;;
}



inline jule::Ptr<_24684ad52_StructDecl> _227c089ae_buildBindStruct(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _152339_tokens) {
	(_152339_tokens).mut_slice(1LL);;
	jule::Ptr<_24684ad52_StructDecl> _152513_s = _227c0757e_buildStructDecl(_self_, &(_152339_tokens));;
	if ((_152513_s != nullptr)) {
		(*(_152513_s))._field_Public=false;
		{
			auto expr = &((*(_152513_s))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c0ae13a:;
			if (it != expr_end) {
				jule::Ptr<_24684a45b_FieldDecl> _152825_f = *it;
				{
					(*(_152825_f))._field_Public=true;
				}
				_iter_next_22c0ae13a:;
				++it;
				goto _iter_begin_22c0ae13a;
			}
			_iter_end_22c0ae13a:;
		};
		(*(_152513_s))._field_Binded=true;
	};
	return _152513_s;;
}



inline jule::Ptr<_246846b83_TypeAliasDecl> _227c08d00_buildBindTypeAlias(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _153742_tokens) {
	(_153742_tokens).mut_slice(1LL);;
	jule::Ptr<_246846b83_TypeAliasDecl> _153913_t = _227bee433_buildTypeAliasDecl(_self_, &(_153742_tokens));;
	if ((_153913_t != nullptr)) {
		(*(_153913_t))._field_Public=false;
		(*(_153913_t))._field_Binded=true;
	};
	return _153913_t;;
}



inline jule::Ptr<_246848190_UseDecl> _227c09141_buildBindUse(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _154736_tokens) {
	if ((_154736_tokens.len() == 1LL)) {
		_227bec4db_pushErr(_self_.ptr(), _154736_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_154736_tokens).mut_slice(1LL);;
	;
	return _227c0515e_buildUseDecl(_self_.ptr(), _154736_tokens, true);;
}



inline jule::Any _227c09482_buildBind(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _155834_tokens) {
	jule::Ptr<_246819d43_Token> _155913_token = (*(_155834_tokens))[0LL];;
	if (((*(_155834_tokens)).len() == 1LL)) {
		_227bec4db_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155913_token=(*(_155834_tokens))[1LL];
	{
		auto &_match_expr{ (*(_155913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22c0b4d11:;
			{
				return jule::Any(_227c0832c_buildBindFn(_self_, (*(_155834_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_22c0b4a14:;
			{
				return jule::Any(_227c0866d_buildBindVar(_self_, (*(_155834_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_22c0b4a7a:;
			{
				return jule::Any(_227c089ae_buildBindStruct(_self_, (*(_155834_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22c0b4ae1:;
			{
				return jule::Any(_227c08d00_buildBindTypeAlias(_self_, (*(_155834_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_22c0b499d:;
			{
				_227bec4db_pushErr(_self_.ptr(), _155913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_22c0b4948:;
	};
	return nullptr;;
}



inline jule::Ptr<_246841ed0_FnDecl> _227c097c3_getMethod(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _158234_tokens) {
	jule::I64 _158313_i = 0LL;;
	jule::Ptr<_246819d43_Token> _158413_token = (*(_158234_tokens))[_158313_i];;
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_158313_i + 1LL) >= (*(_158234_tokens)).len())) {
			_227bec4db_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_158313_i)++;
		_158413_token=(*(_158234_tokens))[_158313_i];
	};
	if (((*(_158413_token))._field_Id != static_cast<jule::U64>(29LLU))) {
		_227bec4db_pushErr(_self_.ptr(), _158413_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _227c03734_buildFn(_self_, _158234_tokens, true, false);;
}



inline void _227c09b36_parseImplBody(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_24684bbee_Impl>* _161138_ipl, jule::Slice<jule::Ptr<_246819d43_Token>>* _161155_tokens) {
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _161213_stmts = _227bcd5dd_splitStmts(_161155_tokens);;
	{
		auto expr = &(_161213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0bbe17:;
		if (it != expr_end) {
			jule::Ptr<_227bcd236_stmt> _161321_stmt = *it;
			{
				(*(_161155_tokens))=(*(_161321_stmt))._field_tokens;
				jule::Ptr<_246819d43_Token> _161517_token = (*(_161155_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_22c0bc566:;
						{
							_227bed289_pushDirective(_self_.ptr(), _227beced1_buildDirective(_self_.ptr(), (*(_161155_tokens))));
							goto _iter_next_22c0bbe17;
						}
					}
					_match_end_22c0bd039:;
				};
				{
					auto &_match_expr{ (*(_161517_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_22c0bd666:;
						{
							jule::Ptr<_2468430ad_VarDecl> _162421_v = _227c00368_buildVar(_self_, (*(_161155_tokens)));;
							if ((_162421_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_2468430ad_VarDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Statics; __jule_push_dest.push(_162421_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_22c0bd16b:;
						{
							jule::Ptr<_246841ed0_FnDecl> _163121_f = _227c097c3_getMethod(_self_, _161155_tokens);;
							if ((_163121_f != nullptr)) {
								_227c07837_checkMethodReceiver(_self_.ptr(), &(_163121_f));
								_227c0a571_applyFnMeta(_self_.ptr(), &(_163121_f));
								{ jule::Slice<jule::Ptr<_246841ed0_FnDecl>> &__jule_push_dest = (*((*(_161138_ipl))))._field_Methods; __jule_push_dest.push(_163121_f); };
							};
						}
					}
					else {
						_case_begin_22c0bd5ab:;
						{
							_227bec4db_pushErr(_self_.ptr(), _161517_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_22c0bbe17;
						}
					}
					_match_end_22c0bd556:;
				};
			}
			_iter_next_22c0bbe17:;
			++it;
			goto _iter_begin_22c0bbe17;
		}
		_iter_end_22c0bbe17:;
	};
}



inline jule::Ptr<_24684bbee_Impl> _227c09e77_buildImpl(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _164433_tokens) {
	jule::Ptr<_246819d43_Token> _164513_token = _164433_tokens[0LL];;
	if ((_164433_tokens.len() < 2LL)) {
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _165113_i = 1LL;;
	jule::Ptr<_246830320_TypeDecl> _165313_base;;
	jule::Bool _165323_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		_165313_base = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_24684bbee_Impl> _166213_ipl = jule::new_ptr<_24684bbee_Impl>(_24684bbee_Impl{._field_Base=_165313_base, });;
	_164513_token=_164433_tokens[_165113_i];
	if (((*(_164513_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*(_164513_token))._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_166213_ipl))._field_Base, (*(_166213_ipl))._field_Dest);
			goto _julec_label_22c0cac39;
		};
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_165113_i)++;
	if ((_165113_i >= _164433_tokens.len())) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType(_self_, &(_164433_tokens), (&(_165113_i)), true);
		(*(_166213_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_165323_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_165323_ok))) {
		return nullptr;;
	};
	if ((_165113_i >= _164433_tokens.len())) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_22c0cac39:;
	jule::Slice<jule::Ptr<_246819d43_Token>> _170013_bodyTokens = _227bea1dc_range(&(_165113_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_164433_tokens));;
	if ((_170013_bodyTokens == nullptr)) {
		_227bebd37_stop(_self_.ptr());
		_227bec4db_pushErr(_self_.ptr(), _164513_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_165113_i < _164433_tokens.len())) {
		_227bec4db_pushErr(_self_.ptr(), _164433_tokens[_165113_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*(_166213_ipl))._field_End=_164433_tokens[(_165113_i - 1LL)];
	_227c09b36_parseImplBody(_self_, &(_166213_ipl), &(_170013_bodyTokens));
	return _166213_ipl;;
}



inline jule::Any _227c0a2b8_buildNodeData(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _171538_tokens) {
	jule::Ptr<_246819d43_Token> _171613_token = (*(_171538_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_171613_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_22c0cec4e:;
			{
				jule::Ptr<_246841ed0_FnDecl> _172017_f = _227c03734_buildFn(_self_, _171538_tokens, false, false);;
				if ((_172017_f != nullptr)) {
					(*(_172017_f))._field_Global=true;
				};
				return jule::Any(_172017_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_22c0ce556:;
			{
				return jule::Any(_227c00368_buildVar(_self_, (*(_171538_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_22c0d038c:;
			{
				return jule::Any(_227bee433_buildTypeAliasDecl(_self_, _171538_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_22c0ce91e:;
			{
				return _227c06aab_buildNodeEnumDecl(_self_, _171538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_22c0ce985:;
			{
				return jule::Any(_227c0757e_buildStructDecl(_self_, _171538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_22c0ce9eb:;
			{
				return jule::Any(_227c07edb_buildTraitDecl(_self_, _171538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_22c0cea62:;
			{
				return jule::Any(_227c09e77_buildImpl(_self_, (*(_171538_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_22c0d048b:;
			{
				return _227c09482_buildBind(_self_, _171538_tokens);;
			}
		}
		else {
			_case_begin_22c0ce8a8:;
			{
				_227bec4db_pushErr(_self_.ptr(), _171613_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22c0ce853:;
	};
}



inline void _227c0a571_applyFnMeta(_227beba3a_parser* _self_, jule::Ptr<_246841ed0_FnDecl>* _174835_f) {
	(*((*(_174835_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _227c0a829_applyMeta(_227beba3a_parser* _self_, _24682e31e_Node* _175333_node) {
	{
		auto &_match_expr{ (*(_175333_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_22c0d5abd:;
			{
				jule::Ptr<_2468430ad_VarDecl> _175617_v = (*(_175333_node))._field_Data.cast_ptr<_2468430ad_VarDecl>(&__jule_any_type16);;
				if ((_175617_v == nullptr)) {
					return;;
				};
				(*(_175617_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_22c0d5b34:;
			{
				jule::Ptr<_246841ed0_FnDecl> _176317_f = (*(_175333_node))._field_Data.cast_ptr<_246841ed0_FnDecl>(&__jule_any_type14);;
				if ((_176317_f == nullptr)) {
					return;;
				};
				_227c0a571_applyFnMeta(_self_, &(_176317_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_22c0d5bab:;
			{
				jule::Ptr<_24684ad52_StructDecl> _176917_sd = (*(_175333_node))._field_Data.cast_ptr<_24684ad52_StructDecl>(&__jule_any_type13);;
				if ((_176917_sd == nullptr)) {
					return;;
				};
				(*(_176917_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_22c0d5a68:;
	};
}



inline void _227c0aad2_pushUseDecl(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_246848190_UseDecl>* _177836_decl) {
	{ jule::Slice<jule::Ptr<_246848190_UseDecl>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_UseDecls; __jule_push_dest.push((*(_177836_decl))); };
	if (((*((*(_self_))._field_ast))._field_Nodes.len() > 0LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*((*(_177836_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_227bec84e_pushSuggestion(_self_.ptr(), jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _227c0ae23_pushMetaNodes(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _178638_tokens) {
	{
		auto &_match_expr{ (*((*(_178638_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_22c0db92b:;
			{
				;
				jule::Ptr<_246848190_UseDecl> _179017_decl = _227c0515e_buildUseDecl(_self_.ptr(), (*(_178638_tokens)), false);;
				_227c0aad2_pushUseDecl(_self_, &(_179017_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_22c0db9a3:;
			{
				if ((((*(_178638_tokens)).len() > 1LL) && ((*((*(_178638_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_246848190_UseDecl> _179521_decl = _227c09141_buildBindUse(_self_, (*(_178638_tokens)));;
					_227c0aad2_pushUseDecl(_self_, &(_179521_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_22c0dba2a:;
			{
				_227bed289_pushDirective(_self_.ptr(), _227beced1_buildDirective(_self_.ptr(), (*(_178638_tokens))));
				return true;;
			}
		}
		_match_end_22c0db80a:;
	};
	return false;;
}



inline _24682e31e_Node _227c0b264_parseNode(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _180634_st) {
	_24682e31e_Node _180713_node = _24682e31e_Node{._field_Token=(*(_180634_st))[0LL], };;
	if (_227c0ae23_pushMetaNodes(_self_, _180634_st)) {
		return _180713_node;;
	};
	jule::Any _181513_data = _227c0a2b8_buildNodeData(_self_, _180634_st);;
	if ((_181513_data == nullptr)) {
		return _180713_node;;
	};
	_180713_node._field_Data=_181513_data;
	_227c0a829_applyMeta(_self_.ptr(), &(_180713_node));
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*(_self_))._field_directives=nullptr;
	return _180713_node;;
}



inline void _227c0b51c_appendNode(jule::Ptr<_227beba3a_parser> _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _183035_st) {
	if (((*(_183035_st)).len() == 0LL)) {
		return;;
	};
	_24682e31e_Node _183413_node = _227c0b264_parseNode(_self_, _183035_st);;
	if (((_183413_node._field_Data == nullptr) || _227bec0bd_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_24682e31e_Node> &__jule_push_dest = (*((*(_self_))._field_ast))._field_Nodes; __jule_push_dest.push(_183413_node); };
}



inline void _227c0b9e5_removeRange(_227beba3a_parser* _self_, jule::I64 _184130_i, jule::U64 _184138_id, jule::Slice<jule::Ptr<_246819d43_Token>>* _184152_tokens, jule::Slice<jule::I64>* _184175_ranges) {
	jule::U64 _18429_close = _227beac26_getCloseOfBrace(_184138_id);;
	for (; (_184130_i >= 0LL); (_184130_i)--) {
		{
			jule::Ptr<_246819d43_Token> _184413_tok = (*(_184152_tokens))[(*(_184175_ranges))[_184130_i]];;
			if (((*(_184413_tok))._field_Id != _18429_close)) {
				goto _iter_next_22c0e5e0d;
			};
			(*(_184175_ranges))=jule::append((*(_184175_ranges)).slice(0LL, _184130_i),(*(_184175_ranges)).slice((_184130_i + 1LL)));
			goto _iter_end_22c0e5e0d;
		}
	_iter_next_22c0e5e0d:;
	}
	_iter_end_22c0e5e0d:;;
}



inline void _227c0be13_pushWrongOrderCloseErr(_227beba3a_parser* _self_, jule::Ptr<_246819d43_Token>* _185342_t, jule::Slice<jule::Ptr<_246819d43_Token>>* _185354_tokens, jule::Slice<jule::I64>* _185373_ranges) {
	{
		auto &_match_expr{ (*((*(_185354_tokens))[(*(_185373_ranges))[((*(_185373_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_22c0e83c7:;
			{
				_227bec4db_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_22c0e844e:;
			{
				_227bec4db_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_22c0e84c6:;
			{
				_227bec4db_pushErr(_self_, (*(_185342_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_22c0e82a6:;
	};
}



inline void _227c0c3db_pushRangeClose(_227beba3a_parser* _self_, jule::Ptr<_246819d43_Token> _186433_t, jule::U64 _186444_left, jule::Slice<jule::Ptr<_246819d43_Token>>* _186460_tokens, jule::Slice<jule::I64>* _186483_ranges) {
	jule::I64 _18659_n = (*(_186483_ranges)).len();;
	if ((_18659_n == 0LL)) {
		{
			auto &_match_expr{ (*(_186433_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_22c0ead69:;
				{
					_227bec4db_pushErr(_self_, _186433_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_22c0eade1:;
				{
					_227bec4db_pushErr(_self_, _186433_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_22c0eae68:;
				{
					_227bec4db_pushErr(_self_, _186433_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_22c0eac8c:;
		};
		return;;
	} else if (((*((*(_186460_tokens))[(*(_186483_ranges))[(_18659_n - 1LL)]]))._field_Id != _186444_left)) {
		_227c0be13_pushWrongOrderCloseErr(_self_, &(_186433_t), _186460_tokens, _186483_ranges);
	};
	_227c0b9e5_removeRange(_self_, static_cast<jule::I64>((_18659_n - 1LL)), (*(_186433_t))._field_Id, _186460_tokens, _186483_ranges);
}



inline void _227c0c694_checkRanges(_227beba3a_parser* _self_, jule::Slice<jule::Ptr<_246819d43_Token>>* _188231_tokens) {
	jule::Slice<jule::I64> _188317_ranges = nullptr;;
	{
		auto expr = _188231_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0edeb0:;
		if (it != expr_end) {
			jule::I64 _188513_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> *_188516_token = it;
			{
				{
					auto &_match_expr{ (*((*(_188516_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_22c0eecc4:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _188317_ranges; __jule_push_dest.push(_188513_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22c0eed4b:;
						{
							_227c0c3db_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(74LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_22c0eedc3:;
						{
							_227c0c3db_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(72LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_22c0eee4a:;
						{
							_227c0c3db_pushRangeClose(_self_, (*(_188516_token)), static_cast<jule::U64>(76LLU), _188231_tokens, &(_188317_ranges));
						}
					}
					_match_end_22c0eebd6:;
				};
			}
			_iter_next_22c0edeb0:;
			++it;
			_188513_i++;
			goto _iter_begin_22c0edeb0;
		}
		_iter_end_22c0edeb0:;
	};
	{
		auto expr = &(_188317_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c0ede49:;
		if (it != expr_end) {
			jule::I64 _190016_i = *it;
			{
				jule::Ptr<_246819d43_Token> _190113_token = (*(_188231_tokens))[_190016_i];;
				{
					auto &_match_expr{ (*(_190113_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22c1027dd:;
						{
							_227bec4db_pushErr(_self_, _190113_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_22c102865:;
						{
							_227bec4db_pushErr(_self_, _190113_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_22c1028dc:;
						{
							_227bec4db_pushErr(_self_, _190113_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_22c102766:;
				};
			}
			_iter_next_22c0ede49:;
			++it;
			goto _iter_begin_22c0ede49;
		}
		_iter_end_22c0ede49:;
	};
}



inline void _227c0c94c_parse(jule::Ptr<_227beba3a_parser> _self_, jule::Ptr<_24682060c_File>* _191330_f) {
	(*(_self_))._field_ast=jule::new_ptr<_24682d472_Ast>(_24682d472_Ast{._field_File=(*(_191330_f)), });
	(*(_self_))._field_ep=jule::new_ptr<_227bdb19a_exprBuilder>(_227bdb19a_exprBuilder{._field_p=_self_});
	_227c0c694_checkRanges(_self_.ptr(), &((*((*(_191330_f))))._field_Tokens));
	if (((*(_self_))._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _192613_stmts = _227bcd5dd_splitStmts(&((*((*(_191330_f))))._field_Tokens));;
	jule::I64 _192913_i = 0LL;;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_227bcd236_stmt> _193117_stmt = _192613_stmts[_192913_i];;
			if (((*(_193117_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_193117_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_22c105deb;
			};
			if ((!(_243461383_IsTopDirective((*((*(_193117_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_22c105deb;
			};
			{ jule::Slice<jule::Ptr<_24682e73c_Directive>> &__jule_push_dest = (*((*(_self_))._field_ast))._field_TopDirectives; __jule_push_dest.push(_227beced1_buildDirective(_self_.ptr(), (*(_193117_stmt))._field_tokens)); };
		}
	_iter_next_22c105deb:;
	}
	_iter_end_22c105deb:;;
	(*(_self_))._field_errors=nullptr;
	for (; (_192913_i < _192613_stmts.len()); (_192913_i)++) {
		{
			jule::Ptr<_227bcd236_stmt> _194817_stmt = _192613_stmts[_192913_i];;
			_227c0b51c_appendNode(_self_, &((*(_194817_stmt))._field_tokens));
			if (_227bec0bd_stopped(_self_.ptr())) {
				goto _iter_end_22c1086e5;
			};
		}
	_iter_next_22c1086e5:;
	}
	_iter_end_22c1086e5:;;
	if (((*(_self_))._field_directives.len() != 0LL)) {
		_227bec4db_pushErr(_self_.ptr(), (*((*(_self_))._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _227beba3a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _227c0e2ab_pushErr(_227c0dc17_typeBuilder* _self_, jule::Ptr<_246819d43_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_227bec4db_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _227c0e61e_pushSuggestion(_227c0dc17_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_227bec84e_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_246830320_TypeDecl> _227c0e8a5_buildNamespace(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246830320_TypeDecl> _5513_t = jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_2468310bd_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_2468310bd_NamespaceTypeDecl>();;
	jule::I64 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_227c0e2ab_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_227c0e61e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_246819d43_Token>> &__jule_push_dest = (*(_5913_nst))._field_Idents; __jule_push_dest.push(_6217_token); };
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_22c10e93d;
			};
			(_6013_n)++;
		}
	_iter_next_22c10e93d:;
	}
	_iter_end_22c10e93d:;;
	(*(_5913_nst))._field_Idents=(*(_5913_nst))._field_Idents.slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	(*(_5913_nst))._field_Kind=_227c10158_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type90);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_246830320_TypeDecl>> _227c0eb3b_buildGenerics(_227c0dc17_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_246819d43_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _9313_parts = _227c0edc2_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_227c0e2ab_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246830320_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_246830320_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c116879:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _10021_part = *it;
			{
				jule::I64 _10117_j = 0LL;;
				jule::Ptr<_246830320_TypeDecl> _10217_t;;
				({
					__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_227c0e2ab_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_246830320_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_22c116879:;
			++it;
			goto _iter_begin_22c116879;
		}
		_iter_end_22c116879:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _227c0edc2_identGenerics(_227c0dc17_typeBuilder* _self_) {
	jule::I64 _1129_first = (*((*(_self_))._field_i));;
	jule::I64 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_22c119915:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_22c11998c:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_22c11989e:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_22c118a9b;
			};
		}
	_iter_next_22c118a9b:;
	}
	_iter_end_22c118a9b:;;
	jule::Slice<jule::Ptr<_246819d43_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _12813_parts;;
	jule::Slice<_24345e617_Log> _12820_errors;;
	({
		__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_assign_result = _227bea95c_parts(&(_12713_tokens), static_cast<jule::U64>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*((*(_self_))._field_p))._field_errors).append(_12820_errors);;
	};
	return _12813_parts;;
}



inline jule::Ptr<_246830320_TypeDecl> _227c10158_buildIdent(_227c0dc17_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _227c0e8a5_buildNamespace(_self_);;
	};
	jule::Ptr<_246819d43_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_24683092a_IdentTypeDecl> _14113_it = jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_246830320_TypeDecl> _14713_itd = jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type20)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_14113_it))._field_Generics=_227c0eb3b_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_227c0e2ab_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_227c0e2ab_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_246830c27_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_246830c27_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push(_14113_it); };
	jule::Ptr<_246830320_TypeDecl> _16613_ident = _227c10158_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_22c124601:;
			{
				{ jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> &__jule_push_dest = (*(_16413_sit))._field_Idents; __jule_push_dest.push((*(_16613_ident))._field_Kind.cast_ptr<_24683092a_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_22c124667:;
			{
				((*(_16413_sit))._field_Idents).append((*((*(_16613_ident))._field_Kind.cast_ptr<_246830c27_SubIdentTypeDecl>(&__jule_any_type86)))._field_Idents);;
			}
		}
		_match_end_22c12459b:;
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type86)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c103de_buildCppLink(_227c0dc17_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_227c0e2ab_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_246830320_TypeDecl> _18513_t = _227c10158_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_24683092a_IdentTypeDecl>(&__jule_any_type20)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_246830320_TypeDecl> _227c10675_buildFn(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_246841ed0_FnDecl> _19213_f = _227c0327d_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_246842343_IsAnon(_19213_f.ptr())))) {
		_227c0e2ab_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c1090b_buildPtr(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_246831d49_PtrTypeDecl>(_246831d49_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_246830320_TypeDecl> _22313_elem = _227c11962_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_246831d49_PtrTypeDecl>(_246831d49_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c10b92_buildSptr(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_246830320_TypeDecl> _24413_elem = _227c11962_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_2468313ba_SptrTypeDecl>(_2468313ba_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c10e28_buildSlc(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_246830320_TypeDecl> _26013_elem = _227c11962_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_246831750_SlcTypeDecl>(_246831750_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c111ae_buildArr(_227c0dc17_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_246819d43_Token>> _27313_exprTokens = _227bea1dc_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_246830320_TypeDecl> _27913_elem = _227c11962_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2468325db_ArrTypeDecl> _28413_arrt = jule::new_ptr<_2468325db_ArrTypeDecl>(_2468325db_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_246819d43_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_227becb90_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c11445_buildMap(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_246819d43_Token>> _31013_keyTokens = _227bea1dc_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_227c0e2ab_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_246832d39_MapTypeDecl> _31913_mapt = jule::new_ptr<_246832d39_MapTypeDecl>();;
	jule::I64 _32013_j = 0LL;;
	jule::Ptr<_246830320_TypeDecl> _32113_keyt;;
	jule::Bool _32123_ok = false;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_227c0e2ab_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*(_31913_mapt))._field_Key=_32113_keyt;
	jule::Ptr<_246830320_TypeDecl> _32913_valt;;
	({
		__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_assign_result = _227bee0e2_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*(_31913_mapt))._field_Val=_32913_valt;
	return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_246830320_TypeDecl> _227c116cb_buildEnumerable(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_227c0e2ab_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _227c10e28_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _227c111ae_buildArr(_self_);;
}



inline jule::Ptr<_246830320_TypeDecl> _227c11962_step(_227c0dc17_typeBuilder* _self_) {
	jule::Ptr<_246819d43_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_22c14283e:;
			{
				return _227c10158_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_22c1428a5:;
			{
				return _227c103de_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_22c141d38:;
			{
				return _227c10675_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c141d9e:;
			{
				return _227c1090b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22c141e15:;
			{
				return _227c10b92_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_22c141e7b:;
			{
				return jule::new_ptr<_246830320_TypeDecl>(_246830320_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_2468313ba_SptrTypeDecl>(_2468313ba_SptrTypeDecl{._field_Elem=_227c10b92_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_22c14293d:;
			{
				return _227c116cb_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_22c1429a4:;
			{
				return _227c11445_buildMap(_self_);;
			}
		}
		else {
			_case_begin_22c141cc2:;
			{
				((*((*(_self_))._field_i)))++;
				_227c0e2ab_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_22c141c6c:;
	};
}



inline __jule_tuple_x_246830320_TypeDecl__jule_tuple_bool _227c11be8_build(_227c0dc17_typeBuilder* _self_) {
	__jule_tuple_x_246830320_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_246830320_TypeDecl> _38813_root = _227c11962_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _227c0d453_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _227c0dc17_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246c46181_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _246c47baa_pushErr(_246c4765a_directiveEval* _self_, jule::Ptr<_246819d43_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_24345e617_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*(_2126_t))._field_Column, ._field_Path=(*((*(_2126_t))._field_File))._field_Path, ._field_Text=_24345ea79_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _246c480a6_splitOperans(_246c4765a_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_246819d43_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3513_i = 0LL;;
	jule::I64 _3613_rangeN = 0LL;;
	jule::I64 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_246819d43_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22c166159:;
					{
						(_3613_rangeN)++;
						goto _iter_next_22c165576;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22c1661d1:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_22c1660e3:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_22c165576;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=static_cast<jule::I64>((_3513_i + 1LL));
		}
	_iter_next_22c165576:;
	}
	_iter_end_22c165576:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_246c47baa_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _246c483e7_evalDirectiveIdent(_246c4765a_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c168b51:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_22c168b51:;
			++it;
			goto _iter_begin_22c168b51;
		}
		_iter_end_22c168b51:;
	};
	return false;;
}



inline jule::Bool _246c48738_evalDirectivePart(_246c4765a_directiveEval* _self_, jule::Slice<jule::Ptr<_246819d43_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_246c47baa_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _246c483e7_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _246c489be_eval(_246c4765a_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_246c47baa_pushErr(_self_, (*((*(_self_))._field_d))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _10413_logicalOrParts = _246c480a6_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c16dc88:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_246819d43_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _11117_logicalAndParts = _246c480a6_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c1701b8:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_246819d43_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_246819d43_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_246819d43_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_246c47baa_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _246c48738_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_22c1701b8:;
						++it;
						goto _iter_begin_22c1701b8;
					}
					_iter_end_22c1701b8:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_22c16dc88:;
			++it;
			goto _iter_begin_22c16dc88;
		}
		_iter_end_22c16dc88:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _246c4765a_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_227c17baa_JuleImporter> static__227c180a6_New(_246c46181_CompileInfo _5819_info) {
	jule::Ptr<_227c17baa_JuleImporter> _5913_imp = jule::new_ptr<_227c17baa_JuleImporter>(_227c17baa_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2435761e0_PathStdlib}), });;
	_246c46a11_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _227c1833c_AllPackages(_227c17baa_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _227c1877c_SetModPath(_227c17baa_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _227c18a13_GetModPath(_227c17baa_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _227c18d54_ModById(_227c17baa_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _227c19195_GetImport(_227c17baa_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c176433:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_22c176433:;
			++it;
			goto _iter_begin_22c176433;
		}
		_iter_end_22c176433:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log _227c19591_ImportPackage(_227c17baa_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log __jule_func_result;
	jule::Slice<jule::Ptr<_241ede3eb_DirEntry>> _9713_dirents = ({
		auto except = static__2433c0d4d_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_24345e617_Log>::make({_227c176c1_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _2468eb5ea_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_24345e617_Log> _10521_errs = _2468eb8b4_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_24682d472_Ast>> _11213_asts = jule::Slice<jule::Ptr<_24682d472_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c177852:;
		if (it != expr_end) {
			jule::Ptr<_241ede3eb_DirEntry> _11316_dirent = *it;
			{
				if ((_241ee3620_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_24339c06b_HasSuffix((*(_11316_dirent))._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_22c177852;
				};
				jule::Str _11913__path = _2433bcd17_Join(jule::Slice<jule::Str>::make({_9632_path,(*(_11316_dirent))._field_Name}));;
				jule::Ptr<_24682060c_File> _12017_file = _2468219a4_NewFileSet(_11913__path);;
				_2468209e7_Fill(_12017_file.ptr(), _227c173e6_readBuff((*(_12017_file))._field_Path));
				jule::Slice<_24345e617_Log> _12217_errors = _24682d0ba_Lex(_12017_file, static_cast<jule::I64>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_227b84a06_FileInfo> _12717_finfo = _227bcae48_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*(_12717_finfo))._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_246c45328_isPassFileAnnotation((*(_11316_dirent))._field_Name)))) {
					goto _iter_next_22c177852;
				};
				jule::Bool _13713_r = false;;
				jule::Slice<_24345e617_Log> _13720_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_24345e617_Log __jule_assign_result = _227c19c78_isPassBuildDirectives(_self_, &((*(_12717_finfo))._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_22c177852;
				};
				{ jule::Slice<jule::Ptr<_24682d472_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*(_12717_finfo))._field_Ast); };
			}
			_iter_next_22c177852:;
			++it;
			goto _iter_begin_22c177852;
		}
		_iter_end_22c177852:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _227c19849_Imported(_227c17baa_JuleImporter* _self_, jule::Ptr<_2468c8bd2_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c17a239:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*(_15516_p))._field_LinkPath == (*(_15331_imp))._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_22c17a239:;
			++it;
			goto _iter_begin_22c17a239;
		}
		_iter_end_22c17a239:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c182175:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*(_15331_imp))._field_ModId=_16217_i;
						goto _julec_label_22c183dad;
					};
				}
				_iter_next_22c182175:;
				++it;
				_16217_i++;
				goto _iter_begin_22c182175;
			}
			_iter_end_22c182175:;
		};
		(*(_15331_imp))._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_22c183dad:;
	};
	{ jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_24345e617_Log _227c19c78_isPassBuildDirectives(_227c17baa_JuleImporter* _self_, jule::Ptr<_24682d472_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_24345e617_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1852dd:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_22c1852dd;
				};
				_246c4765a_directiveEval _18417_de = _246c4765a_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _246c489be_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_22c1852dd:;
			++it;
			goto _iter_begin_22c1852dd;
		}
		_iter_end_22c1852dd:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _227c17baa_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _227c1cdbe_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22c1a5e13_isCommonOrdered(jule::Slice<jule::Ptr<_246850e23_Struct>> _1834_s, jule::Ptr<_246850e23_Struct> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1a6e58:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c1a78a4:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_22c1a78a4:;
						++it;
						goto _iter_begin_22c1a78a4;
					}
					_iter_end_22c1a78a4:;
				};
			}
			_iter_next_22c1a6e58:;
			++it;
			goto _iter_begin_22c1a6e58;
		}
		_iter_end_22c1a6e58:;
	};
	return true;;
}

inline jule::Bool _22c1aa92e_isCommonOrdered(jule::Slice<jule::Ptr<_246922555_Var>> _1834_s, jule::Ptr<_246922555_Var> _1842_t) {
	{
		auto expr = &((*(_1842_t))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1ab930:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c1ac37b:;
					if (it != expr_end) {
						jule::Ptr<_246922555_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_22c1ac37b:;
						++it;
						goto _iter_begin_22c1ac37b;
					}
					_iter_end_22c1ac37b:;
				};
			}
			_iter_next_22c1ab930:;
			++it;
			goto _iter_begin_22c1ab930;
		}
		_iter_end_22c1ab930:;
	};
	return true;;
}



inline void _22c1a2a25_orderCommon(jule::Slice<jule::Ptr<_246850e23_Struct>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1a3806:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_22c1a5e13_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_22c1a4780:;
				}
				_iter_end_22c1a4780:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_22c1a3806;
				};
				(_3213_n)--;
			}
			_iter_next_22c1a3806:;
			++it;
			goto _iter_begin_22c1a3806;
		}
		_iter_end_22c1a3806:;
	};
}

inline void _22c1a67a4_orderCommon(jule::Slice<jule::Ptr<_246922555_Var>>* _3135_s) {
	jule::I64 _3213_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1a8861:;
		if (it != expr_end) {
			{
				jule::Bool _3417_swapped = false;;
				jule::I64 _3517_k = 0LL;;
				for (; (_3517_k < _3213_n); (_3517_k)++) {
					{
						if ((!(_22c1aa92e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3517_k])))) {
							std::swap((*(_3135_s))[_3517_k], (*(_3135_s))[(_3517_k + 1LL)]);
							_3417_swapped=true;
						};
					}
				_iter_next_22c1a929b:;
				}
				_iter_end_22c1a929b:;;
				if ((!(_3417_swapped))) {
					goto _iter_end_22c1a8861;
				};
				(_3213_n)--;
			}
			_iter_next_22c1a8861:;
			++it;
			goto _iter_begin_22c1a8861;
		}
		_iter_end_22c1a8861:;
	};
}



inline void static__227c1da29_orderStructures(jule::Slice<jule::Ptr<_246850e23_Struct>>* _5136_structs) {
	_22c1a2a25_orderCommon(_5136_structs);
}



inline void static__227c1dc5a_orderVars(jule::Slice<jule::Ptr<_246922555_Var>>* _5730_vars) {
	_22c1a67a4_orderCommon(_5730_vars);
}





std::ostream &operator<<(std::ostream &_Stream, _227c1d133_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _227d452c1_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _227d7ec34_optimizeChild(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a7760_Scope>* _3938_s) {
	jule::Ptr<_227d7e77d_scopeDeadCode> _4013_sdc = jule::new_ptr<_227d7e77d_scopeDeadCode>(_227d7e77d_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_227d8264e_optimizeStmts(_4013_sdc);
	};
}



inline void _227d7eedc_optimizeBodyChildExceptional(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a7760_Scope>* _5053_s) {
	jule::Ptr<_227d7e77d_scopeDeadCode> _5113_sdc = jule::new_ptr<_227d7e77d_scopeDeadCode>(_227d7e77d_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, ._field_except=true});;
	{
		_227d8264e_optimizeStmts(_5113_sdc);
	};
}



inline void _227d80295_optimizeBodyChild(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a7760_Scope>* _6142_s) {
	jule::Ptr<_227d7e77d_scopeDeadCode> _6213_sdc = jule::new_ptr<_227d7e77d_scopeDeadCode>(_227d7e77d_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*(_self_))._field_gotos, });;
	{
		_227d8264e_optimizeStmts(_6213_sdc);
	};
}



inline void _227d8054d_optimizeExprModel(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_227d839d5_exprDeadCode _729_edc = static__227d84123_new(&(_self_));;
	_227d8a04c_optimize(&_729_edc, _7142_model);
}



inline void _227d8074b_eliminateFollowed(_227d7e77d_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_227d7e77d_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				(*((*(_8313_parent))._field_stmts))=(*((*(_8313_parent))._field_stmts)).slice(0LL, ((*(_8313_parent))._field_i + 1LL));
			};
			_8313_parent=(*(_8313_parent))._field_parent;
		}
	_iter_next_22c22d243:;
	}
	_iter_end_22c22d243:;;
}



inline void _227d80a04_pushGoto(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468aa4cc_GotoSt> _9232_gt) {
	jule::I64 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_22c231488:;
	}
	_iter_end_22c231488:;;
	{ jule::Slice<jule::Ptr<_2468aa4cc_GotoSt>> &__jule_push_dest = (*((*(_self_))._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _227d80cac_pushLabel(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468aa103_Label> _10233_l) {
	jule::I64 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_10313_i]))._field_Ident)) {
				jule::copy(((*((*(_self_))._field_gotos)).slice(_10313_i)), ((*((*(_self_))._field_gotos)).slice((_10313_i + 1LL))));
				(*((*(_self_))._field_gotos))=(*((*(_self_))._field_gotos)).slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));
				goto _iter_next_22c233556;
			};
			(_10313_i)++;
		}
	_iter_next_22c233556:;
	}
	_iter_end_22c233556:;;
	{ jule::Slice<jule::Ptr<_2468aa103_Label>> &__jule_push_dest = (*((*(_self_))._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _227d81065_optimizeRangeIter(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a9597_RangeIter> _11541_it) {
	_227d8054d_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_227d80295_optimizeBodyChild(_self_, &((*(_11541_it))._field_Scope));
}



inline void _227d8131d_optimizeWhileIter(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a8b4b_WhileIter> _12041_it) {
	_227d8054d_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*(_12041_it))._field_Next != nullptr)) {
		_227d82451_optimizeStmt(_self_, (*(_12041_it))._field_Next);
	};
	_227d80295_optimizeBodyChild(_self_, &((*(_12041_it))._field_Scope));
}



inline void _227d815c6_optimizeInfIter(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a8695_InfIter> _12839_it) {
	_227d80295_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _227d8187e_optimizeConditional(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468a8398_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c23a3d7:;
		if (it != expr_end) {
			jule::Ptr<_2468a7b7d_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_227d8054d_optimizeExprModel(_self_, &((*(_13321_case))._field_Expr));
					_227d80295_optimizeBodyChild(_self_, &((*(_13321_case))._field_Scope));
				};
			}
			_iter_next_22c23a3d7:;
			++it;
			goto _iter_begin_22c23a3d7;
		}
		_iter_end_22c23a3d7:;
	};
	if (((*(_13243_c))._field_Default != nullptr)) {
		if (((*(_13243_c))._field_Elifs.len() == 0LL)) {
			_227d7ec34_optimizeChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		} else {
			_227d80295_optimizeBodyChild(_self_, &((*((*(_13243_c))._field_Default))._field_Scope));
		};
	};
}



inline void _227d81b37_optimizeMatch(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468ab896_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c23d94b:;
		if (it != expr_end) {
			jule::Ptr<_2468ac4ce_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c23e397:;
					if (it != expr_end) {
						jule::Ptr<_246983ac2_Data> _15225_expr = *it;
						{
							_227d8054d_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_22c23e397:;
						++it;
						goto _iter_begin_22c23e397;
					}
					_iter_end_22c23e397:;
				};
				_227d80295_optimizeBodyChild(_self_, &((*(_15121_case))._field_Scope));
			}
			_iter_next_22c23d94b:;
			++it;
			goto _iter_begin_22c23d94b;
		}
		_iter_end_22c23d94b:;
	};
	if (((*(_15037_m))._field_Default != nullptr)) {
		if (((*(_15037_m))._field_Cases.len() == 0LL)) {
			_227d7ec34_optimizeChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		} else {
			_227d80295_optimizeBodyChild(_self_, &((*((*(_15037_m))._field_Default))._field_Scope));
		};
	};
}



inline void _227d81de0_optimizeAssign(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468aad5c_Assign> _16838_assign) {
	_227d8054d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_L))._field_Model));
	_227d8054d_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_R))._field_Model));
}



inline void _227d82198_optimizeMultiAssign(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Ptr<_2468ab236_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2437a8:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_227d8054d_optimizeExprModel(_self_, &((*(_17421_l))._field_Model));
				};
			}
			_iter_next_22c2437a8:;
			++it;
			goto _iter_begin_22c2437a8;
		}
		_iter_end_22c2437a8:;
	};
	_227d8054d_optimizeExprModel(_self_, &((*(_17343_assign))._field_R));
}



inline void _227d82451_optimizeStmt(jule::Ptr<_227d7e77d_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_22c245458:;
			{
				jule::Ptr<_2468a7760_Scope> _18517_scope = _18236_st.cast_ptr<_2468a7760_Scope>(&__jule_any_type22);;
				if ((*(_18517_scope))._field_Deferred) {
					_227d8297e_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_227d7ec34_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_22c2454be:;
			{
				_227d81065_optimizeRangeIter(_self_, _18236_st.cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_22c245535:;
			{
				_227d8131d_optimizeWhileIter(_self_, _18236_st.cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_22c2455ac:;
			{
				_227d815c6_optimizeInfIter(_self_, _18236_st.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_22c245634:;
			{
				_227d8187e_optimizeConditional(_self_, _18236_st.cast_ptr<_2468a8398_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_22c2456ab:;
			{
				_227d81b37_optimizeMatch(_self_, _18236_st.cast_ptr<_2468ab896_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_22c245733:;
			{
				_227d81de0_optimizeAssign(_self_, _18236_st.cast_ptr<_2468aad5c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_22c2457aa:;
			{
				_227d82198_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_2468ab236_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22c245832:;
			{
				jule::Ptr<_246983ac2_Data> _20617_d = _18236_st.cast_ptr<_246983ac2_Data>(&__jule_any_type24);;
				if ((*(_self_))._field_except) {
					goto _match_end_22c245315;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type29) {
						_case_begin_22c24aa79:;
						{
							_227d8074b_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_22c24b21c:;
						{
							_227d8054d_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_22c24b1b7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_22c2458a9:;
			{
				_227d8074b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_22c245931:;
			{
				_227d80a04_pushGoto(_self_, _18236_st.cast_ptr<_2468aa4cc_GotoSt>(&__jule_any_type42));
				_227d8074b_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_22c2459a8:;
			{
				_227d80cac_pushLabel(_self_, _18236_st.cast_ptr<_2468aa103_Label>(&__jule_any_type21));
			}
		}
		_match_end_22c245315:;
	};
}



inline void _227d8264e_optimizeStmts(jule::Ptr<_227d7e77d_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_stmts)).len()); ((*(_self_))._field_i)++) {
		{
			_227d82451_optimizeStmt(_self_, (*((*(_self_))._field_stmts))[(*(_self_))._field_i]);
		}
	_iter_next_22c24d8d4:;
	}
	_iter_end_22c24d8d4:;;
}





std::ostream &operator<<(std::ostream &_Stream, _227d7e77d_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _227d839d5_exprDeadCode static__227d84123_new(jule::Ptr<_227d7e77d_scopeDeadCode>* _4824_s) {
	return _227d839d5_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _227d843cb_binary(_227d839d5_exprDeadCode* _self_, jule::Ptr<_2468580a1_BinopExprModel> _5425_m) {
	_227d8a04c_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_227d8a04c_optimize(_self_, &((*((*(_5425_m))._field_Right))._field_Model));
}



inline void _227d84684_unary(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685847a_UnaryExprModel> _5924_m) {
	_227d8a04c_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _227d8493c_structureLit(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246858d4e_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c252465:;
		if (it != expr_end) {
			jule::Ptr<_2468589a8_StructArgExprModel> _6421_arg = *it;
			{
				_227d8a04c_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_22c252465:;
			++it;
			goto _iter_begin_22c252465;
		}
		_iter_end_22c252465:;
	};
}



inline void _227d84be5_allocStructure(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685914b_AllocStructLitExprModel> _6933_m) {
	_227d8493c_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _227d84e9d_casting(_227d839d5_exprDeadCode* _self_, jule::Ptr<_2468596ce_CastingExprModel> _7326_m) {
	_227d8a04c_optimize(_self_, &((*(_7326_m))._field_Expr));
}



inline void _227d85256_args(_227d839d5_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2548eb:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_227d8a04c_optimize(_self_, &(_7821_arg));
			}
			_iter_next_22c2548eb:;
			++it;
			goto _iter_begin_22c2548eb;
		}
		_iter_end_22c2548eb:;
	};
}



inline void _227d8550e_funcCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685a081_FnCallExprModel> _8327_m) {
	_227d8a04c_optimize(_self_, &((*(_8327_m))._field_Expr));
	_227d85256_args(_self_, &((*(_8327_m))._field_Args));
	if (((*(_8327_m))._field_Except != nullptr)) {
		_227d7eedc_optimizeBodyChildExceptional((*(_self_))._field_s, &((*(_8327_m))._field_Except));
	};
}



inline void _227d857b7_slice(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685a45a_SliceExprModel> _9124_m) {
	_227d85256_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _227d85a70_array(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685d4a2_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*(_9524_m))._field_Elems[1LL] == nullptr))) {
		_227d8a04c_optimize(_self_, &((*(_9524_m))._field_Elems[0LL]));
	};
	_227d85256_args(_self_, &((*(_9524_m))._field_Elems));
}



inline void _227d85d28_indexing(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685a911_IndexingExprModel> _10227_m) {
	_227d8a04c_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_227d8a04c_optimize(_self_, &((*((*(_10227_m))._field_Index))._field_Model));
}



inline void _227d860d1_anonFunc(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685acda_AnonFnExprModel> _10727_m) {
	_227d8297e_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _227d86389_mapExpr(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685b66a_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c25b095:;
		if (it != expr_end) {
			jule::Ptr<_24685b1b4_KeyValPairExprModel> _11221_pair = *it;
			{
				_227d8a04c_optimize(_self_, &((*(_11221_pair))._field_Key));
				_227d8a04c_optimize(_self_, &((*(_11221_pair))._field_Val));
			}
			_iter_next_22c25b095:;
			++it;
			goto _iter_begin_22c25b095;
		}
		_iter_end_22c25b095:;
	};
}



inline void _227d86642_slicing(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685bbed_SlicingExprModel> _11826_m) {
	_227d8a04c_optimize(_self_, &((*(_11826_m))._field_Expr));
	_227d8a04c_optimize(_self_, &((*(_11826_m))._field_Left));
	if (((*(_11826_m))._field_Right != nullptr)) {
		_227d8a04c_optimize(_self_, &((*(_11826_m))._field_Right));
	};
}



inline void _227d868ea_traitSub(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685c281_TraitSubIdentExprModel> _12627_m) {
	_227d8a04c_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _227d86ba3_structureSub(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685cb22_StructSubIdentExprModel> _13031_m) {
	_227d8a04c_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _227d86e5b_tuple(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685d79e_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c260198:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> _13521_d = *it;
			{
				_227d8a04c_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_22c260198:;
			++it;
			goto _iter_begin_22c260198;
		}
		_iter_end_22c260198:;
	};
}



inline void _227d87214_newCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685e42b_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_227d8a04c_optimize(_self_, &((*(_14026_m))._field_Init));
	};
}



inline void _227d874bc_outCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685db78_BuiltinOutCallExprModel> _14626_m) {
	_227d8a04c_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _227d87775_outlnCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel> _15028_m) {
	_227d8a04c_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _227d87a2d_panicCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685e805_BuiltinPanicCallExprModel> _15428_m) {
	_227d8a04c_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _227d87cd6_assertCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel> _15829_m) {
	_227d8a04c_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _227d8808e_errorCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> _16228_m) {
	_227d8a04c_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _227d88347_makeCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246860262_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_227d8a04c_optimize(_self_, &((*(_16627_m))._field_Len));
	};
	if (((*(_16627_m))._field_Cap != nullptr)) {
		_227d8a04c_optimize(_self_, &((*(_16627_m))._field_Cap));
	};
}



inline void _227d88600_appendCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24686063b_BuiltinAppendCallExprModel> _17529_m) {
	_227d8a04c_optimize(_self_, &((*(_17529_m))._field_Dest));
	_227d8a04c_optimize(_self_, &((*(_17529_m))._field_Elements));
}



inline void _227d888a8_lenCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246860938_BuiltinLenCallExprModel> _18026_m) {
	_227d8a04c_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _227d88b61_capCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246860c35_BuiltinCapCallExprModel> _18426_m) {
	_227d8a04c_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _227d88e19_deleteCall(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel> _18829_m) {
	_227d8a04c_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*(_18829_m))._field_Key != nullptr)) {
		_227d8a04c_optimize(_self_, &((*((*(_18829_m))._field_Key))._field_Model));
	};
}



inline void _227d891c2_sizeof(_227d839d5_exprDeadCode* _self_, jule::Ptr<_24685c46d_SizeofExprModel> _19525_m) {
	_227d8a04c_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _227d8947a_alignof(_227d839d5_exprDeadCode* _self_, jule::Ptr<_2468620dd_AlignofExprModel> _19926_m) {
	_227d8a04c_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _227d89733_integratedToStr(_227d839d5_exprDeadCode* _self_, jule::Ptr<_2468626d7_IntegratedToStrExprModel> _20334_m) {
	_227d8a04c_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _227d899db_free(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246862dad_FreeExprModel> _20723_m) {
	_227d8a04c_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _227d89c94_backendEmit(_227d839d5_exprDeadCode* _self_, jule::Ptr<_246862ab1_BackendEmitExprModel> _21130_m) {
	_227d85256_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _227d8a04c_optimize(_227d839d5_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_22c26d706:;
			{
				_227d843cb_binary(_self_, (*(_21528_model)).cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c26d76c:;
			{
				_227d84684_unary(_self_, (*(_21528_model)).cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_22c26d7d3:;
			{
				_227d8493c_structureLit(_self_, (*(_21528_model)).cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_22c26d85a:;
			{
				_227d84be5_allocStructure(_self_, (*(_21528_model)).cast_ptr<_24685914b_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_22c26d8d2:;
			{
				_227d84e9d_casting(_self_, (*(_21528_model)).cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22c26d959:;
			{
				_227d8550e_funcCall(_self_, (*(_21528_model)).cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_22c26d9d1:;
			{
				_227d857b7_slice(_self_, (*(_21528_model)).cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_22c26da58:;
			{
				_227d85a70_array(_self_, (*(_21528_model)).cast_ptr<_24685d4a2_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22c26dad0:;
			{
				_227d85d28_indexing(_self_, (*(_21528_model)).cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_22c26db57:;
			{
				_227d860d1_anonFunc(_self_, (*(_21528_model)).cast_ptr<_24685acda_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_22c26dbce:;
			{
				_227d86389_mapExpr(_self_, (*(_21528_model)).cast_ptr<_24685b66a_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_22c26dc56:;
			{
				_227d86642_slicing(_self_, (*(_21528_model)).cast_ptr<_24685bbed_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_22c26dccd:;
			{
				_227d868ea_traitSub(_self_, (*(_21528_model)).cast_ptr<_24685c281_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c26dd55:;
			{
				_227d86ba3_structureSub(_self_, (*(_21528_model)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_22c26ddcc:;
			{
				_227d86e5b_tuple(_self_, (*(_21528_model)).cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_22c26de54:;
			{
				_227d874bc_outCall(_self_, (*(_21528_model)).cast_ptr<_24685db78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_22c26decb:;
			{
				_227d87775_outlnCall(_self_, (*(_21528_model)).cast_ptr<_24685e052_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_22c26e053:;
			{
				_227d87214_newCall(_self_, (*(_21528_model)).cast_ptr<_24685e42b_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_22c26e0ca:;
			{
				_227d87a2d_panicCall(_self_, (*(_21528_model)).cast_ptr<_24685e805_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_22c26e152:;
			{
				_227d87cd6_assertCall(_self_, (*(_21528_model)).cast_ptr<_24685ecab_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_22c26e1c9:;
			{
				_227d8808e_errorCall(_self_, (*(_21528_model)).cast_ptr<_2468618b2_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_22c26e251:;
			{
				_227d88347_makeCall(_self_, (*(_21528_model)).cast_ptr<_246860262_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_22c26e2c8:;
			{
				_227d88600_appendCall(_self_, (*(_21528_model)).cast_ptr<_24686063b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_22c26e350:;
			{
				_227d888a8_lenCall(_self_, (*(_21528_model)).cast_ptr<_246860938_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_22c26e3c7:;
			{
				_227d88b61_capCall(_self_, (*(_21528_model)).cast_ptr<_246860c35_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_22c26e44e:;
			{
				_227d88e19_deleteCall(_self_, (*(_21528_model)).cast_ptr<_24686110e_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_22c26e4c6:;
			{
				_227d891c2_sizeof(_self_, (*(_21528_model)).cast_ptr<_24685c46d_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_22c26e54d:;
			{
				_227d8947a_alignof(_self_, (*(_21528_model)).cast_ptr<_2468620dd_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_22c26e5c5:;
			{
				_227d89733_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_2468626d7_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_22c26e64c:;
			{
				_227d899db_free(_self_, (*(_21528_model)).cast_ptr<_246862dad_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_22c26e6c4:;
			{
				_227d89c94_backendEmit(_self_, (*(_21528_model)).cast_ptr<_246862ab1_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_22c26d45e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _227d839d5_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b3710a_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b37528_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b37825_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b37d53_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b383d6_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b386d3_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b389d0_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b38e0e_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _246b392d8_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_246b3a493_scopeOptimizer> static__246b3a9d2_new(jule::Ptr<_2468a7760_Scope> _4623_scope) {
	return jule::new_ptr<_246b3a493_scopeOptimizer>(_246b3a493_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _246b3ac8a_setCurrentStmt(_246b3a493_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _246b3ae88_removeCurrent(_246b3a493_scopeOptimizer* _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*((*(_self_))._field_scope))._field_Stmts.slice(0LL, (*(_self_))._field_i),(*((*(_self_))._field_scope))._field_Stmts.slice(((*(_self_))._field_i + 1LL)));
}



inline void _246b3b241_optimizeData(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_246983ac2_Data> _6135_d) {
	{
		auto &_match_expr{ (*(_6135_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22c2c2271:;
			{
				jule::Ptr<_24685a081_FnCallExprModel> _6417_m = (*(_6135_d))._field_Model.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34);;
				if (_240e90b95_Production) {
					if (((!(_24686a1a1_IsBuiltin((*(_6417_m))._field_Func.ptr()))) && _246b3e7e9_isStdPackage(&((*((*((*((*((*(_6417_m))._field_Func))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_246b3ac8a_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_22c2c221b:;
	};
	static__246b41bc5_optimize(&((*(_6135_d))._field_Model));
}



inline void _246b3b4e9_optimizeVar(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_246922555_Var> _7634_v) {
	if (((*(_7634_v))._field_Value != nullptr)) {
		static__246b41bc5_optimize(&((*((*((*(_7634_v))._field_Value))._field_Data))._field_Model));
	};
}



inline void _246b3b7a2_optimizeConditional(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468a8398_Conditional> _8242_c) {
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2c69e5:;
		if (it != expr_end) {
			jule::Ptr<_2468a7b7d_If> _8321_elif = *it;
			{
				static__246b41bc5_optimize(&((*(_8321_elif))._field_Expr));
				_246b3e178_optimizeChild(_self_, (*(_8321_elif))._field_Scope);
			}
			_iter_next_22c2c69e5:;
			++it;
			goto _iter_begin_22c2c69e5;
		}
		_iter_end_22c2c69e5:;
	};
	if (((*(_8242_c))._field_Default != nullptr)) {
		_246b3e178_optimizeChild(_self_, (*((*(_8242_c))._field_Default))._field_Scope);
	};
	if ((!(_246b4a75b_Cond))) {
		return;;
	};
	jule::Bool _9513_constCase = false;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2c8a3b:;
		if (it != expr_end) {
			jule::I64 _9814_i = it - expr->begin();
			jule::Ptr<_2468a7b7d_If> _9821_elif = *it;
			{
				if ((!(_246b3eb07_isConstantValidConditionalCase(&(_9821_elif))))) {
					goto _iter_next_22c2c8a3b;
				};
				_9513_constCase=true;
				(*(_8242_c))._field_Elifs=(*(_8242_c))._field_Elifs.slice(0LL, _9814_i);
				(*(_8242_c))._field_Default=jule::new_ptr<_2468a7e7a_Else>(_2468a7e7a_Else{._field_Scope=(*(_9821_elif))._field_Scope});
				goto _iter_end_22c2c8a3b;
			}
			_iter_next_22c2c8a3b:;
			++it;
			_9814_i++;
			goto _iter_begin_22c2c8a3b;
		}
		_iter_end_22c2c8a3b:;
	};
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2468a7b7d_If>* _11513_i = (&((*(_8242_c))._field_Elifs[0LL]));;
	jule::Ptr<_2468a7b7d_If>* _1169_end = (&((*(_8242_c))._field_Elifs[((*(_8242_c))._field_Elifs.len() - 1LL)]));;
	for (; (_11513_i <= _1169_end); (_11513_i)++) {
		{
			{
				if (_246b404cb_isUnreachableConditionalCase(&((*(_11513_i))))) {
					(*(_11513_i))=nullptr;
				};
			};
		}
	_iter_next_22c2cc16b:;
	}
	_iter_end_22c2cc16b:;;
	if (((*(_8242_c))._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9513_constCase))) {
		return;;
	};
	jule::I64 _13413_only = -1LL;;
	{
		auto expr = &((*(_8242_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2cd579:;
		if (it != expr_end) {
			jule::I64 _13513_j = it - expr->begin();
			jule::Ptr<_2468a7b7d_If> _13516_elif = *it;
			{
				if ((_13516_elif != nullptr)) {
					if ((_13413_only != -1LL)) {
						return;;
					};
					_13413_only=_13513_j;
				};
			}
			_iter_next_22c2cd579:;
			++it;
			_13513_j++;
			goto _iter_begin_22c2cd579;
		}
		_iter_end_22c2cd579:;
	};
	if ((_13413_only != -1LL)) {
		_246b3ac8a_setCurrentStmt(_self_, jule::Any((*((*(_8242_c))._field_Elifs[_13413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _246b3bbc0_buildDefaultConstantTrueCase(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468ac4ce_Case> _15151_case, jule::I64* _15169_i, jule::Ptr<_2468ab896_Match>* _15182_m) {
	(*(_15151_case))._field_Exprs=nullptr;
	jule::I64 _1539_start = (*(_15169_i));;
	_julec_label_22c2d100a:;
	for (;;) {
		{
			if (((*((*(_15151_case))._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_22c2d0a43;
			};
			jule::Any *_15918_stmt = &((*((*(_15151_case))._field_Scope))._field_Stmts[((*((*(_15151_case))._field_Scope))._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15918_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_22c2d2e41:;
					{
						((*(_15169_i)))++;
						if (((*(_15169_i)) >= (*((*(_15182_m))))._field_Cases.len())) {
							(*(_15918_stmt))=jule::Any((*((*((*(_15182_m))))._field_Default))._field_Scope, &__jule_any_type22);
							goto _iter_end_22c2d0a43;
						};
						_15151_case=(*((*(_15182_m))))._field_Cases[(*(_15169_i))];
						(*(_15918_stmt))=jule::Any((*(_15151_case))._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_22c2d3095:;
					{
						goto _iter_end_22c2d0a43;
					}
				}
				_match_end_22c2d3040:;
			};
		}
	_iter_next_22c2d0a43:;
	}
	_iter_end_22c2d0a43:;;
	(*((*(_15182_m))))._field_Default=(*((*(_15182_m))))._field_Cases[_1539_start];
	(*((*(_15182_m))))._field_Cases=(*((*(_15182_m))))._field_Cases.slice(0LL, _1539_start);
}



inline void _246b3be78_optimizeMatch(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468ab896_Match> _17736_m) {
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2d5938:;
		if (it != expr_end) {
			jule::Ptr<_2468ac4ce_Case> _17821_case = *it;
			{
				{
					auto expr = &((*(_17821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c2d6384:;
					if (it != expr_end) {
						jule::Ptr<_246983ac2_Data> _17925_expr = *it;
						{
							static__246b41bc5_optimize(&((*(_17925_expr))._field_Model));
						}
						_iter_next_22c2d6384:;
						++it;
						goto _iter_begin_22c2d6384;
					}
					_iter_end_22c2d6384:;
				};
				_246b3e178_optimizeChild(_self_, (*(_17821_case))._field_Scope);
			}
			_iter_next_22c2d5938:;
			++it;
			goto _iter_begin_22c2d5938;
		}
		_iter_end_22c2d5938:;
	};
	if (((*(_17736_m))._field_Default != nullptr)) {
		_246b3e178_optimizeChild(_self_, (*((*(_17736_m))._field_Default))._field_Scope);
	};
	if ((!(_246b4a75b_Cond))) {
		return;;
	};
	jule::Bool _19213_constCase = false;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2d80bc:;
		if (it != expr_end) {
			jule::I64 _19518_i = it - expr->begin();
			jule::Ptr<_2468ac4ce_Case> _19525_case = *it;
			{
				if ((!(_246b40212_isConstantValidMatchCase(&(_19525_case))))) {
					goto _iter_next_22c2d80bc;
				};
				_19213_constCase=true;
				_246b3bbc0_buildDefaultConstantTrueCase(_self_, _19525_case, &(_19518_i), &(_17736_m));
				goto _iter_end_22c2d80bc;
			}
			_iter_next_22c2d80bc:;
			++it;
			_19518_i++;
			goto _iter_begin_22c2d80bc;
		}
		_iter_end_22c2d80bc:;
	};
	if (((*(_17736_m))._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_2468ac4ce_Case>* _20913_i = (&((*(_17736_m))._field_Cases[0LL]));;
	jule::Ptr<_2468ac4ce_Case>* _2109_end = (&((*(_17736_m))._field_Cases[((*(_17736_m))._field_Cases.len() - 1LL)]));;
	for (; (_20913_i <= _2109_end); (_20913_i)++) {
		{
			{
				if (_246b40795_isUnreachableMatchCase(&((*(_20913_i))))) {
					(*(_20913_i))=nullptr;
				};
			};
		}
	_iter_next_22c2dabc4:;
	}
	_iter_end_22c2dabc4:;;
	if ((!(_19213_constCase))) {
		return;;
	};
	jule::I64 _22413_only = -1LL;;
	{
		auto expr = &((*(_17736_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2dae8d:;
		if (it != expr_end) {
			jule::I64 _22513_j = it - expr->begin();
			jule::Ptr<_2468ac4ce_Case> _22516_case = *it;
			{
				if ((_22516_case != nullptr)) {
					if ((_22413_only != -1LL)) {
						return;;
					};
					_22413_only=_22513_j;
				};
			}
			_iter_next_22c2dae8d:;
			++it;
			_22513_j++;
			goto _iter_begin_22c2dae8d;
		}
		_iter_end_22c2dae8d:;
	};
	if ((_22413_only != -1LL)) {
		_246b3ac8a_setCurrentStmt(_self_, jule::Any((*((*(_17736_m))._field_Cases[_22413_only]))._field_Scope, &__jule_any_type22));
	};
}



inline void _246b3c231_optimizeRangeIter(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468a9597_RangeIter> _24140_it) {
	static__246b41bc5_optimize(&((*((*(_24140_it))._field_Expr))._field_Model));
	_246b3e178_optimizeChild(_self_, (*(_24140_it))._field_Scope);
}



inline void _246b3c4d9_optimizeWhileIter(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468a8b4b_WhileIter> _24640_it) {
	static__246b41bc5_optimize(&((*(_24640_it))._field_Expr));
	_246b3ddc0_optimizeStmt(_self_, (*(_24640_it))._field_Next);
	_246b3e178_optimizeChild(_self_, (*(_24640_it))._field_Scope);
}



inline jule::Bool _246b3c82a_substr(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468aad5c_Assign> _25229_a) {
	if (((*((*(_25229_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_25229_a))._field_R))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_22c2e1aa9:;
			{
				jule::Ptr<_24685bbed_SlicingExprModel> _25817_sem = (*((*(_25229_a))._field_R))._field_Model.cast_ptr<_24685bbed_SlicingExprModel>(&__jule_any_type91);;
				if (((*(_25817_sem))._field_Expr == (*((*(_25229_a))._field_L))._field_Model)) {
					_246b3ac8a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_246b383d6_MutSlicingExprModel>(_246b383d6_MutSlicingExprModel{._field_Token=(*(_25817_sem))._field_Token, ._field_Expr=(*(_25817_sem))._field_Expr, ._field_Left=(*(_25817_sem))._field_Left, ._field_Right=(*(_25817_sem))._field_Right}), &__jule_any_type120));
					return true;;
				};
			}
		}
		_match_end_22c2e1a54:;
	};
	return false;;
}



inline jule::Bool _246b3cb6b_strAssign(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468aad5c_Assign> _27232_a) {
	if ((!(_246b4aa25_Str))) {
		return false;;
	};
	jule::Ptr<_2469bc259_Prim> _2769_lp = _2469b6a4a_Prim((*((*(_27232_a))._field_L))._field_Kind.ptr());;
	if (((_2769_lp == nullptr) || (!(_2469c06e1_IsStr(_2769_lp.ptr()))))) {
		return false;;
	};
	return _246b3c82a_substr(_self_, _27232_a);;
}



inline jule::Bool _246b3ceac_sliceAssign(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468aad5c_Assign> _28334_a) {
	if (((!(_246b4acde_Slice)) || (_2469b7aa1_Slc((*((*(_28334_a))._field_L))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _246b3c82a_substr(_self_, _28334_a);;
}



inline void _246b3d265_optimizeAssign(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468aad5c_Assign> _29137_assign) {
	if ((((*((*(_29137_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _246b3648e_equalModels((*((*(_29137_assign))._field_L))._field_Model, (*((*(_29137_assign))._field_R))._field_Model))) {
		_246b3ae88_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return;;
	};
	{
		
		if (_246b3cb6b_strAssign(_self_, _29137_assign) || _246b3ceac_sliceAssign(_self_, _29137_assign)) {
			_case_begin_22c2e8b5a:;
			{
				return;;
			}
		}
		_match_end_22c2e77b3:;
	};
	static__246b41bc5_optimize(&((*((*(_29137_assign))._field_L))._field_Model));
	static__246b41bc5_optimize(&((*((*(_29137_assign))._field_R))._field_Model));
	{
		auto &_match_expr{ (*((*(_29137_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_22c2ea4ca:;
			{
				if ((_246b49a35_Math && (_2469b80bd_Struct((*((*(_29137_assign))._field_L))._field_Kind.ptr()) == nullptr))) {
					(*((*(_29137_assign))._field_Op))._field_Kind=(*((*(_29137_assign))._field_Op))._field_Kind.slice(0LL, ((*((*(_29137_assign))._field_Op))._field_Kind.len() - 1LL));
					jule::Any _31321_model = jule::Any(jule::new_ptr<_2468580a1_BinopExprModel>(_2468580a1_BinopExprModel{._field_Left=(*(_29137_assign))._field_L, ._field_Right=(*(_29137_assign))._field_R, ._field_Op=(*(_29137_assign))._field_Op}), &__jule_any_type111);;
					static__246b41bc5_optimize(&(_31321_model));
					{
						auto &_match_expr{ _31321_model };
						
						if (_match_expr.type == &__jule_any_type111) {
							_case_begin_22c2ed445:;
							{
								(*(_29137_assign))._field_R=jule::new_ptr<_246857aa6_OperandExprModel>((*((*(_29137_assign))._field_R)));
								(*((*(_29137_assign))._field_Op))._field_Id=static_cast<jule::U64>(71LLU);
								(*((*(_29137_assign))._field_Op))._field_Kind=jule::Str::lit("=", 1);
								(*((*(_29137_assign))._field_R))._field_Model=_31321_model;
								return;;
							}
						}
						_match_end_22c2ed258:;
					};
					(*((*(_29137_assign))._field_Op))._field_Kind+=jule::Str::lit("=", 1);
					return;;
				};
			}
		}
		_match_end_22c2ea475:;
	};
	if (_246b49727_Append) {
		{
			auto &_match_expr{ (*((*(_29137_assign))._field_R))._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_22c3011e5:;
				{
					jule::Ptr<_24686063b_BuiltinAppendCallExprModel> _33521_m = (*((*(_29137_assign))._field_R))._field_Model.cast_ptr<_24686063b_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_246b48979_areSameLvalueExprModel(&((*((*(_29137_assign))._field_L))._field_Model), &((*(_33521_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_33521_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_22c303307:;
							{
								_246b3ac8a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_246b38e0e_PushToSliceExprModel>(_246b38e0e_PushToSliceExprModel{._field_Dest=(*(_33521_m))._field_Dest, ._field_Elems=(*(_33521_m))._field_Elements.cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76)}), &__jule_any_type121));
							}
						}
						else {
							_case_begin_22c302e3e:;
							{
								_246b3ac8a_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_246b392d8_AppendToSliceExprModel>(_246b392d8_AppendToSliceExprModel{._field_Dest=(*((*(_29137_assign))._field_L))._field_Model, ._field_Slice=(*(_33521_m))._field_Elements}), &__jule_any_type122));
							}
						}
						_match_end_22c302dd9:;
					};
				}
			}
			_match_end_22c301190:;
		};
	};
}



inline jule::Bool _246b3d5a6_tryOptimizeSwap(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468ab236_MultiAssign>* _35739_assign) {
	if (((!(_246b4b0a8_Assign)) || ((*((*(_35739_assign))))._field_L.len() != 2LL))) {
		return false;;
	};
	jule::Ptr<_24685d79e_TupleExprModel> _36117_tup;;
	{
		auto &_match_expr{ (*((*(_35739_assign))))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_22c305a79:;
			{
				_36117_tup=(*((*(_35739_assign))))._field_R.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81);
			}
		}
		_match_end_22c305a24:;
	};
	if (((_36117_tup == nullptr) || ((*(_36117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_246b3648e_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model) && _246b3648e_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) {
		_246b3ae88_removeCurrent(_self_);
		((*(_self_))._field_i)--;
		return true;;
	};
	if (((!(_246b3648e_equalModels((*((*((*(_35739_assign))))._field_L[0LL]))._field_Model, (*((*(_36117_tup))._field_Datas[1LL]))._field_Model))) || (!(_246b3648e_equalModels((*((*((*(_35739_assign))))._field_L[1LL]))._field_Model, (*((*(_36117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_246b3710a_SwapExprModel> _38313_model = jule::new_ptr<_246b3710a_SwapExprModel>(_246b3710a_SwapExprModel{._field_Left=(*((*(_35739_assign))))._field_L[0LL], ._field_Right=(*((*(_35739_assign))))._field_L[1LL]});;
	static__246b41bc5_optimize(&((*((*(_38313_model))._field_Left))._field_Model));
	static__246b41bc5_optimize(&((*((*(_38313_model))._field_Right))._field_Model));
	_246b3ac8a_setCurrentStmt(_self_, jule::Any(_38313_model, &__jule_any_type123));
	return true;;
}



inline void _246b3d85e_optimizeMultiAssign(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468ab236_MultiAssign> _39342_assign) {
	if (_246b3d5a6_tryOptimizeSwap(_self_, &(_39342_assign))) {
		return;;
	};
	{
		auto expr = &((*(_39342_assign))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c30cdc2:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> _39821_l = *it;
			{
				if ((_39821_l != nullptr)) {
					static__246b41bc5_optimize(&((*(_39821_l))._field_Model));
				};
			}
			_iter_next_22c30cdc2:;
			++it;
			goto _iter_begin_22c30cdc2;
		}
		_iter_end_22c30cdc2:;
	};
	static__246b41bc5_optimize(&((*(_39342_assign))._field_R));
}



inline void _246b3db17_optimizeRet(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468ace5d_RetSt> _40634_r) {
	static__246b41bc5_optimize(&((*(_40634_r))._field_Expr));
}



inline void _246b3ddc0_optimizeStmt(_246b3a493_scopeOptimizer* _self_, jule::Any _41035_stmt) {
	{
		auto &_match_expr{ _41035_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_22c310006:;
			{
				_246b3e178_optimizeChild(_self_, _41035_stmt.cast_ptr<_2468a7760_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22c31006c:;
			{
				_246b3b241_optimizeData(_self_, _41035_stmt.cast_ptr<_246983ac2_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c3100d3:;
			{
				_246b3b4e9_optimizeVar(_self_, _41035_stmt.cast_ptr<_246922555_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_22c31015a:;
			{
				_246b3b7a2_optimizeConditional(_self_, _41035_stmt.cast_ptr<_2468a8398_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_22c3101d2:;
			{
				_246b3c231_optimizeRangeIter(_self_, _41035_stmt.cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_22c310259:;
			{
				_246b3c4d9_optimizeWhileIter(_self_, _41035_stmt.cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_22c3102d1:;
			{
				_246b3e178_optimizeChild(_self_, (*(_41035_stmt.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36)))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_22c310358:;
			{
				_246b3d265_optimizeAssign(_self_, _41035_stmt.cast_ptr<_2468aad5c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_22c3103d0:;
			{
				_246b3d85e_optimizeMultiAssign(_self_, _41035_stmt.cast_ptr<_2468ab236_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_22c310457:;
			{
				_246b3be78_optimizeMatch(_self_, _41035_stmt.cast_ptr<_2468ab896_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_22c3104ce:;
			{
				_246b3db17_optimizeRet(_self_, _41035_stmt.cast_ptr<_2468ace5d_RetSt>(&__jule_any_type50));
			}
		}
		_match_end_22c30edc4:;
	};
}



inline void _246b3e178_optimizeChild(_246b3a493_scopeOptimizer* _self_, jule::Ptr<_2468a7760_Scope> _43736_child) {
	jule::Ptr<_246b3a493_scopeOptimizer> _43813_so = static__246b3a9d2_new(_43736_child);;
	_246b3e376_optimize(_43813_so.ptr());
}



inline void _246b3e376_optimize(_246b3a493_scopeOptimizer* _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*(_self_))._field_i < (*((*(_self_))._field_scope))._field_Stmts.len()); ((*(_self_))._field_i)++) {
		{
			_246b3ddc0_optimizeStmt(_self_, (*((*(_self_))._field_scope))._field_Stmts[(*(_self_))._field_i]);
		}
	_iter_next_22c315b77:;
	}
	_iter_end_22c315b77:;;
}





std::ostream &operator<<(std::ostream &_Stream, _246b3a493_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__246b41bc5_optimize(jule::Any* _5629_model) {
	if (_227d8a57a_exprEnabled) {
		jule::Ptr<_246b41631_exprOptimizer> _5917_exop = jule::new_ptr<_246b41631_exprOptimizer>(_246b41631_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_5629_model))});;
		_246b4813d_do(_5917_exop.ptr());
	};
}



inline jule::Bool _246b42016_strCond(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468580a1_BinopExprModel> _6626_m) {
	jule::Ptr<_2469bc259_Prim> _679_lp = _2469b6a4a_Prim((*((*(_6626_m))._field_Left))._field_Kind.ptr());;
	if (((_679_lp == nullptr) || (!(_2469c06e1_IsStr(_679_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*((*(_6626_m))._field_Op))._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c325c0e:;
			{
				std::swap((*(_6626_m))._field_Left, (*(_6626_m))._field_Right);
				goto _julec_label_22c327628;
			}
		}
		_match_end_22c325ba9:;
	};
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c324845:;
			{
				goto _match_end_22c3273c5;
			}
		}
		else {
			_case_begin_22c32742a:;
			{
				return false;;
			}
		}
		_match_end_22c3273c5:;
	};
	_julec_label_22c327628:;
	jule::Ptr<_2445e359c_Const> _8613_c = (*((*(_6626_m))._field_Right))._field_Model.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_6626_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_22c3287d3:;
			{
				if ((_2445e5725_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _9021_model = jule::Any(jule::new_ptr<_246b37528_EmptyCompareExprModel>(_246b37528_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9021_model))))));
					goto _match_end_22c32876c;
				};
				jule::Any _9717_model = jule::Any(jule::new_ptr<_246b37d53_StrCompExprModel>(_246b37d53_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=false}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9717_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_22c32885a:;
			{
				if ((_2445e5725_ReadStr(_8613_c.ptr())).empty()) {
					jule::Any _10521_model = jule::Any(jule::new_ptr<_246b37528_EmptyCompareExprModel>(_246b37528_EmptyCompareExprModel{._field_Expr=(*((*(_6626_m))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type124);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_10521_model))))));
					goto _match_end_22c32876c;
				};
				jule::Any _11217_model = jule::Any(jule::new_ptr<_246b37d53_StrCompExprModel>(_246b37d53_StrCompExprModel{._field_Left=(*((*(_6626_m))._field_Left))._field_Model, ._field_Right=_8613_c, ._field_NotEq=true}), &__jule_any_type125);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_11217_model))))));
			}
		}
		_match_end_22c32876c:;
	};
	return true;;
}



inline void _246b422be_binary(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468580a1_BinopExprModel> _12225_m) {
	static__246b41bc5_optimize(&((*((*(_12225_m))._field_Left))._field_Model));
	static__246b41bc5_optimize(&((*((*(_12225_m))._field_Right))._field_Model));
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c327507:;
			{
				goto _match_end_22c330c3b;
			}
		}
		else {
			_case_begin_22c330c91:;
			{
				return;;
			}
		}
		_match_end_22c330c3b:;
	};
	if ((_246b4a75b_Cond && _246b42016_strCond(_self_, _12225_m))) {
		return;;
	};
	if ((!(_246b49a35_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_12225_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c331e90:;
			{
				jule::Bool _14213_ok = false;;
				jule::U64 _14217_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _246b485b1_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_14213_ok = __jule_assign_result.__jule_result_arg0;
					_14217_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14213_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_2445e359c_Const> _14621_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
					_2445e67c0_SetU64(_14621_c.ptr(), _14217_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_22c332017:;
			{
				jule::Bool _15113_ok = false;;
				jule::U64 _15117_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _246b485b1_checkForBitShiftOpt(&((*(_12225_m))._field_Left), &((*(_12225_m))._field_Right));
					_15113_ok = __jule_assign_result.__jule_result_arg0;
					_15117_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15113_ok) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_2445e359c_Const> _15521_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
					_2445e67c0_SetU64(_15521_c.ptr(), _15117_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22c33208e:;
			{
				jule::Ptr<_2445e359c_Const> _16017_c = (*((*(_12225_m))._field_Right))._field_Model.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
				jule::F64 _16113_d = _2445e625e_AsF64(_16017_c.ptr());;
				if ((_16113_d == 2LL)) {
					(*((*(_12225_m))._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*((*(_12225_m))._field_Op))._field_Kind=jule::Str::lit("&", 1);
					_2445e6517_SetI64(_16017_c.ptr(), 1LL);
				};
			}
		}
		_match_end_22c331e18:;
	};
	jule::Any _16813_model = jule::Any(jule::new_ptr<_246b386d3_UnsafeBinopExprModel>(_246b386d3_UnsafeBinopExprModel{._field_Node=_12225_m}), &__jule_any_type126);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_16813_model))))));
}



inline void _246b42577_unary(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685847a_UnaryExprModel> _17224_m) {
	static__246b41bc5_optimize(&((*((*(_17224_m))._field_Expr))._field_Model));
	if ((!(_246b4a382_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_17224_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c33a3b6:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_22c33beab:;
						{
							jule::Ptr<_24685847a_UnaryExprModel> _18121_um = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110);;
							if (((*((*(_18121_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*(_18121_um))._field_Expr))._field_Model;
							};
						}
					}
					_match_end_22c33be56:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_22c33b351:;
			{
				{
					auto &_match_expr{ (*((*(_17224_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_22c33e0ce:;
						{
							jule::Ptr<_246922555_Var> _18921_v = (*((*(_17224_m))._field_Expr))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
							if ((*(_18921_v))._field_Reference) {
								jule::Any _19125_model = jule::Any(jule::new_ptr<_246b37825_RefExprModel>(_246b37825_RefExprModel{._field_Var=_18921_v}), &__jule_any_type127);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19125_model))))));
							};
						}
					}
					_match_end_22c33e079:;
				};
			}
		}
		_match_end_22c33b241:;
	};
}



inline void _246b42830_structureLit(_246b41631_exprOptimizer* _self_, jule::Ptr<_246858d4e_StructLitExprModel> _19831_m) {
	{
		auto expr = &((*(_19831_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c3409c6:;
		if (it != expr_end) {
			jule::Ptr<_2468589a8_StructArgExprModel> _19921_arg = *it;
			{
				static__246b41bc5_optimize(&((*((*(_19921_arg))._field_Expr))._field_Model));
			}
			_iter_next_22c3409c6:;
			++it;
			goto _iter_begin_22c3409c6;
		}
		_iter_end_22c3409c6:;
	};
}



inline void _246b42ad8_allocStructure(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685914b_AllocStructLitExprModel> _20433_m) {
	_246b42830_structureLit(_self_, (*(_20433_m))._field_Lit);
}



inline void _246b42d91_casting(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468596ce_CastingExprModel> _20826_m) {
	static__246b41bc5_optimize(&((*(_20826_m))._field_Expr));
}



inline void _246b43149_args(_246b41631_exprOptimizer* _self_, jule::Slice<jule::Any>* _21224_args) {
	{
		auto expr = _21224_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c342a72:;
		if (it != expr_end) {
			jule::I64 _21314_i = it - expr->begin();
			jule::Any _21321_arg = *it;
			{
				static__246b41bc5_optimize(&(_21321_arg));
				(*(_21224_args))[_21314_i]=_21321_arg;
			}
			_iter_next_22c342a72:;
			++it;
			_21314_i++;
			goto _iter_begin_22c342a72;
		}
		_iter_end_22c342a72:;
	};
}



inline void _246b43402_scope(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468a7760_Scope>* _21925_s) {
	jule::Ptr<_246b3a493_scopeOptimizer> _22013_scopt = static__246b3a9d2_new((*(_21925_s)));;
	_246b3e376_optimize(_22013_scopt.ptr());
}



inline void _246b436aa_funcCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685a081_FnCallExprModel> _22427_m) {
	static__246b41bc5_optimize(&((*(_22427_m))._field_Expr));
	_246b43149_args(_self_, &((*(_22427_m))._field_Args));
	if (((*(_22427_m))._field_Except != nullptr)) {
		_246b43402_scope(_self_, &((*(_22427_m))._field_Except));
	};
}



inline void _246b43963_slice(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685a45a_SliceExprModel> _23224_m) {
	_246b43149_args(_self_, &((*(_23224_m))._field_Elems));
}



inline void _246b43c1b_array(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685d4a2_ArrayExprModel> _23624_m) {
	if ((((*(_23624_m))._field_Elems.len() == 2LL) && ((*(_23624_m))._field_Elems[1LL] == nullptr))) {
		jule::Any _23817_elem = (*(_23624_m))._field_Elems[0LL];;
		static__246b41bc5_optimize(&(_23817_elem));
		(*(_23624_m))._field_Elems[0LL]=_23817_elem;
	};
	_246b43149_args(_self_, &((*(_23624_m))._field_Elems));
}



inline void _246b43ec4_indexing(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685a911_IndexingExprModel> _24527_m) {
	static__246b41bc5_optimize(&((*((*(_24527_m))._field_Expr))._field_Model));
	static__246b41bc5_optimize(&((*((*(_24527_m))._field_Index))._field_Model));
	if ((!(_246b49cee_Access))) {
		return;;
	};
	jule::Bool _2519_array = (_2469b781a_Arr((*((*(_24527_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_2519_array && _246984496_IsConst((*(_24527_m))._field_Index.ptr()))) {
		jule::Any _25417_model = jule::Any(jule::new_ptr<_246b389d0_UnsafeIndexingExprModel>(_246b389d0_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_25417_model))))));
		return;;
	};
	{
		auto &_match_expr{ (*((*(_24527_m))._field_Index))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c34b7c3:;
			{
				jule::Ptr<_246922555_Var> _26013_i = (*((*(_24527_m))._field_Index))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
				if (((*(_26013_i))._field_Mutable || ((*(_26013_i))._field_IterRelation == nullptr))) {
					goto _match_end_22c34b76d;
				};
				{
					auto &_match_expr{ (*((*(_24527_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_22c34d41d:;
						{
							jule::Ptr<_246922555_Var> _26617_r = (*((*(_24527_m))._field_Expr))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
							if (((*((*(_26013_i))._field_IterRelation))._field_Range == _26617_r)) {
								jule::Any _26925_model = jule::Any(jule::new_ptr<_246b389d0_UnsafeIndexingExprModel>(_246b389d0_UnsafeIndexingExprModel{._field_Node=_24527_m}), &__jule_any_type128);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26925_model))))));
							};
						}
					}
					_match_end_22c34d3b8:;
				};
			}
		}
		_match_end_22c34b76d:;
	};
}



inline void _246b4427c_anonFunc(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685acda_AnonFnExprModel> _27627_m) {
	_246b43402_scope(_self_, &((*((*(_27627_m))._field_Func))._field_Scope));
}



inline void _246b44535_mapExpr(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685b66a_MapExprModel> _28026_m) {
	{
		auto expr = &((*(_28026_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c350ca0:;
		if (it != expr_end) {
			jule::Ptr<_24685b1b4_KeyValPairExprModel> _28121_pair = *it;
			{
				static__246b41bc5_optimize(&((*(_28121_pair))._field_Key));
				static__246b41bc5_optimize(&((*(_28121_pair))._field_Val));
			}
			_iter_next_22c350ca0:;
			++it;
			goto _iter_begin_22c350ca0;
		}
		_iter_end_22c350ca0:;
	};
}



inline void _246b447dd_slicing(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685bbed_SlicingExprModel> _28726_m) {
	static__246b41bc5_optimize(&((*(_28726_m))._field_Expr));
	static__246b41bc5_optimize(&((*(_28726_m))._field_Left));
	if (((*(_28726_m))._field_Right != nullptr)) {
		static__246b41bc5_optimize(&((*(_28726_m))._field_Right));
	};
}



inline void _246b44a96_traitSub(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685c281_TraitSubIdentExprModel> _29527_m) {
	static__246b41bc5_optimize(&((*(_29527_m))._field_Expr));
}



inline void _246b44d4e_structureSub(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685cb22_StructSubIdentExprModel> _29931_m) {
	static__246b41bc5_optimize(&((*((*(_29931_m))._field_Expr))._field_Model));
}



inline void _246b45107_tuple(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685d79e_TupleExprModel> _30324_m) {
	{
		auto expr = &((*(_30324_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c3540e4:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> _30421_d = *it;
			{
				static__246b41bc5_optimize(&((*(_30421_d))._field_Model));
			}
			_iter_next_22c3540e4:;
			++it;
			goto _iter_begin_22c3540e4;
		}
		_iter_end_22c3540e4:;
	};
}



inline void _246b453b0_newCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685e42b_BuiltinNewCallExprModel> _30926_m) {
	if (((*(_30926_m))._field_Init != nullptr)) {
		static__246b41bc5_optimize(&((*(_30926_m))._field_Init));
	};
}



inline void _246b45668_outCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685db78_BuiltinOutCallExprModel> _31526_m) {
	static__246b41bc5_optimize(&((*(_31526_m))._field_Expr));
}



inline void _246b45921_outlnCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel> _31928_m) {
	static__246b41bc5_optimize(&((*(_31928_m))._field_Expr));
}



inline void _246b45bc9_panicCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685e805_BuiltinPanicCallExprModel> _32328_m) {
	static__246b41bc5_optimize(&((*(_32328_m))._field_Expr));
}



inline void _246b45e82_assertCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel> _32729_m) {
	static__246b41bc5_optimize(&((*(_32729_m))._field_Expr));
}



inline void _246b4623a_errorCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> _33128_m) {
	static__246b41bc5_optimize(&((*((*(_33128_m))._field_Err))._field_Model));
}



inline void _246b464e3_makeCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_246860262_BuiltinMakeCallExprModel> _33527_m) {
	if (((*(_33527_m))._field_Len != nullptr)) {
		static__246b41bc5_optimize(&((*(_33527_m))._field_Len));
	};
	if (((*(_33527_m))._field_Cap != nullptr)) {
		static__246b41bc5_optimize(&((*(_33527_m))._field_Cap));
	};
}



inline void _246b4679b_appendCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24686063b_BuiltinAppendCallExprModel> _34429_m) {
	static__246b41bc5_optimize(&((*(_34429_m))._field_Dest));
	static__246b41bc5_optimize(&((*(_34429_m))._field_Elements));
}



inline void _246b46a54_lenCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_246860938_BuiltinLenCallExprModel> _34926_m) {
	static__246b41bc5_optimize(&((*((*(_34926_m))._field_Expr))._field_Model));
}



inline void _246b46d0c_capCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_246860c35_BuiltinCapCallExprModel> _35326_m) {
	static__246b41bc5_optimize(&((*((*(_35326_m))._field_Expr))._field_Model));
}



inline void _246b470b5_deleteCall(_246b41631_exprOptimizer* _self_, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel> _35729_m) {
	static__246b41bc5_optimize(&((*((*(_35729_m))._field_Dest))._field_Model));
	if (((*(_35729_m))._field_Key != nullptr)) {
		static__246b41bc5_optimize(&((*((*(_35729_m))._field_Key))._field_Model));
	};
}



inline void _246b4736d_sizeof(_246b41631_exprOptimizer* _self_, jule::Ptr<_24685c46d_SizeofExprModel> _36425_m) {
	static__246b41bc5_optimize(&((*(_36425_m))._field_Expr));
}



inline void _246b47626_alignof(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468620dd_AlignofExprModel> _36826_m) {
	static__246b41bc5_optimize(&((*(_36826_m))._field_Expr));
}



inline void _246b478ce_integratedToStr(_246b41631_exprOptimizer* _self_, jule::Ptr<_2468626d7_IntegratedToStrExprModel> _37234_m) {
	static__246b41bc5_optimize(&((*(_37234_m))._field_Expr));
}



inline void _246b47b87_free(_246b41631_exprOptimizer* _self_, jule::Ptr<_246862dad_FreeExprModel> _37623_m) {
	static__246b41bc5_optimize(&((*(_37623_m))._field_Expr));
}



inline void _246b47e40_backendEmit(_246b41631_exprOptimizer* _self_, jule::Ptr<_246862ab1_BackendEmitExprModel> _38030_m) {
	_246b43149_args(_self_, &((*(_38030_m))._field_Exprs));
}



inline void _246b4813d_do(_246b41631_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_22c364236:;
			{
				_246b422be_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c36429c:;
			{
				_246b42577_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_22c364313:;
			{
				_246b42830_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_22c36438a:;
			{
				_246b42ad8_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685914b_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_22c364412:;
			{
				_246b42d91_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22c364489:;
			{
				_246b436aa_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_22c364511:;
			{
				_246b43963_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_22c364588:;
			{
				_246b43c1b_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685d4a2_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22c364610:;
			{
				_246b43ec4_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_22c364687:;
			{
				_246b4427c_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685acda_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_22c36470e:;
			{
				_246b44535_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685b66a_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_22c364786:;
			{
				_246b447dd_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685bbed_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_22c36480d:;
			{
				_246b44a96_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685c281_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c364885:;
			{
				_246b44d4e_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_22c36490c:;
			{
				_246b45107_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_22c364984:;
			{
				_246b45668_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685db78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_22c364a0b:;
			{
				_246b45921_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685e052_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_22c364a83:;
			{
				_246b453b0_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685e42b_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_22c364b0a:;
			{
				_246b45bc9_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685e805_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_22c364b82:;
			{
				_246b45e82_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685ecab_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_22c364c09:;
			{
				_246b4623a_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_2468618b2_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_22c364c81:;
			{
				_246b464e3_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_246860262_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_22c364d08:;
			{
				_246b4679b_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24686063b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_22c364d80:;
			{
				_246b46a54_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_246860938_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_22c364e07:;
			{
				_246b46d0c_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_246860c35_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_22c364e7e:;
			{
				_246b470b5_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_24686110e_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_22c365006:;
			{
				_246b4736d_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_24685c46d_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_22c36507d:;
			{
				_246b47626_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_2468620dd_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_22c365105:;
			{
				_246b478ce_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_2468626d7_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_22c36517c:;
			{
				_246b47b87_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_246862dad_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_22c365204:;
			{
				_246b47e40_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_246862ab1_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_22c363e8e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _246b41631_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_227d8aa97_Optimizer> static__227d8b01a_New(jule::Ptr<_227c1a66e_IR>* _2624_ir) {
	return jule::new_ptr<_227d8aa97_Optimizer>(_227d8aa97_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _227d8b2c3_optimizeGlobal(_227d8aa97_Optimizer* _self_, jule::Ptr<_246922555_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__246b41bc5_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _227d8b57b_optimizeFunction(_227d8aa97_Optimizer* _self_, jule::Ptr<_246865d17_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c3793c2:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_246b3a493_scopeOptimizer> _4317_so = static__246b3a9d2_new((*(_4221_ins))._field_Scope);;
				_246b3e376_optimize(_4317_so.ptr());
			}
			_iter_next_22c3793c2:;
			++it;
			goto _iter_begin_22c3793c2;
		}
		_iter_end_22c3793c2:;
	};
}



inline void _227d8b834_optimizeStruct(_227d8aa97_Optimizer* _self_, jule::Ptr<_246850e23_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c379d84:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c37b490:;
					if (it != expr_end) {
						jule::Ptr<_246853101_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__246b41bc5_optimize(&((*((*(_5325_f))._field_Default))._field_Model));
							};
						}
						_iter_next_22c37b490:;
						++it;
						goto _iter_begin_22c37b490;
					}
					_iter_end_22c37b490:;
				};
				{
					auto expr = &((*(_5221_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c37c958:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _5825_m = *it;
						{
							_227d8b57b_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_22c37c958:;
						++it;
						goto _iter_begin_22c37c958;
					}
					_iter_end_22c37c958:;
				};
			}
			_iter_next_22c379d84:;
			++it;
			goto _iter_begin_22c379d84;
		}
		_iter_end_22c379d84:;
	};
}



inline void _227d8badc_optimizeGlobals(_227d8aa97_Optimizer* _self_, jule::Ptr<_2468cbb08_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c37ccaa:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c37da47:;
					if (it != expr_end) {
						jule::Ptr<_246922555_Var> _6625_v = *it;
						{
							_227d8b2c3_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_22c37da47:;
						++it;
						goto _iter_begin_22c37da47;
					}
					_iter_end_22c37da47:;
				};
			}
			_iter_next_22c37ccaa:;
			++it;
			goto _iter_begin_22c37ccaa;
		}
		_iter_end_22c37ccaa:;
	};
}



inline void _227d8bd95_optimizeFunctions(_227d8aa97_Optimizer* _self_, jule::Ptr<_2468cbb08_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c37e20c:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c37ee88:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _7425_func = *it;
						{
							_227d8b57b_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_22c37ee88:;
						++it;
						goto _iter_begin_22c37ee88;
					}
					_iter_end_22c37ee88:;
				};
			}
			_iter_next_22c37e20c:;
			++it;
			goto _iter_begin_22c37e20c;
		}
		_iter_end_22c37e20c:;
	};
}



inline void _227d8c14d_optimizeStructs(_227d8aa97_Optimizer* _self_, jule::Ptr<_2468cbb08_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c38064d:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c3813c9:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> _8225_s = *it;
						{
							_227d8b834_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_22c3813c9:;
						++it;
						goto _iter_begin_22c3813c9;
					}
					_iter_end_22c3813c9:;
				};
			}
			_iter_next_22c38064d:;
			++it;
			goto _iter_begin_22c38064d;
		}
		_iter_end_22c38064d:;
	};
}



inline void _227d8c406_optimizePackage(_227d8aa97_Optimizer* _self_, jule::Ptr<_2468cbb08_Package>* _8839_p) {
	_227d8badc_optimizeGlobals(_self_, _8839_p);
	_227d8bd95_optimizeFunctions(_self_, _8839_p);
	_227d8c14d_optimizeStructs(_self_, _8839_p);
}



inline void _227d8c604_Optimize(_227d8aa97_Optimizer* _self_) {
	_227d8c879_detectEnabled();
	if (_246b4945d_Deadcode) {
		_227d7cd75_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_227d8a888_scopeEnabled || _227d8a57a_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c382ed0:;
			if (it != expr_end) {
				jule::Ptr<_2468c8bd2_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_227d8c406_optimizePackage(_self_, &((*(_10425_u))._field_Package));
					};
				}
				_iter_next_22c382ed0:;
				++it;
				goto _iter_begin_22c382ed0;
			}
			_iter_end_22c382ed0:;
		};
		_227d8c406_optimizePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	};
	if (_246b4945d_Deadcode) {
		_227d8341e_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _227d8aa97_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__227db2a03_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__227d8cc75_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__227db2a03_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _227db3b14_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__227db550b_LogFlat(_24345e617_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__227db573c_LogError(_24345e617_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__227db2a03_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_2445d3339_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_2445d3339_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _2433a36c1_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I64 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I64 _3817_oldLen = _3617_line.len();;
		_3617_line=_2433a36c1_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _2445d3339_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_24339ae7c_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_24339ae7c_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3717_offset))));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_24339ae7c_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(_4413_row.len())));
			jule::out(jule::Str::lit(" | ", 3));
			static__227d8cc75_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__227db596d_Log(_24345e617_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_22c3910a9:;
			{
				static__227db550b_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_22c391131:;
			{
				static__227db573c_LogError(_6520_l);
			}
		}
		_match_end_22c390b9c:;
	};
}



inline void static__227db5b9e_PrintLogs(jule::Slice<_24345e617_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c38bcca:;
		if (it != expr_end) {
			_24345e617_Log *_7616_l = it;
			{
				static__227db596d_Log(_7616_l);
			}
			_iter_next_22c38bcca:;
			++it;
			goto _iter_begin_22c38bcca;
		}
		_iter_end_22c38bcca:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_2445d3339_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _227db5242_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2287cc9d3_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _2287cd1a9_Time static__2287cd561_Unix(jule::U64 _9120_sec) {
	return _2287cd1a9_Time{._field_sec=_9120_sec};;
}



inline _2287cd1a9_Time static__2287cd770_Now(void) {
	return static__2287cd561_Unix(static_cast<jule::U64>(_2287d0299_unix()));;
}



inline _2287cc9d3_AbsTime _2287cee58_Abs(_2287cd1a9_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_2287cbeaa_mdays[static_cast<jule::I64>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_2287cbeaa_mdays[static_cast<jule::I64>(_16913_months)];
		}
	_iter_next_22c3bd34a:;
	}
	_iter_end_22c3bd34a:;;
	_2287cc9d3_AbsTime _17413_t = _2287cc9d3_AbsTime{};;
	_17413_t._field_Year=static_cast<jule::U64>(((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU));
	_17413_t._field_Month=static_cast<jule::U64>((_16913_months + 2LLU));
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=static_cast<jule::U64>((_13613_remDays + 1LLU));
	_17413_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12813_days) % 7LL));
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=static_cast<jule::U64>((_12913_remSecs / 3600LLU));
	_17413_t._field_Minute=static_cast<jule::U64>(((_12913_remSecs / 60LLU) % 60LL));
	_17413_t._field_Second=static_cast<jule::U64>((_12913_remSecs % 60LL));
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _2287cd1a9_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22870b34b_scopeCoder> static__22870b967_new(jule::Ptr<_2287d7658_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_22870b34b_scopeCoder>(_22870b34b_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _22c45e298_iterHead(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a9597_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str _7355_begin) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_246b49150_Copy && _2287129a1_isCopyOptimizable(&((*((*(_7332_it))))._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_7332_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_22c460992:;
				{
					jule::Ptr<_246922555_Var> _8217_v = (*((*((*(_7332_it))))._field_Expr))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
					if ((*(_8217_v))._field_Reference) {
						_22872283a_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
						goto _match_end_22c462c91;
					};
					goto _case_begin_22c462ce6;
				}
			}
			else {
				_case_begin_22c462ce6:;
				{
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_22872283a_model((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_22c462c91:;
		};
	} else {
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_7332_it))))._field_Expr))._field_Model);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, _7355_begin);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
}



inline void _22870c13d_rangeIndexIter(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a9597_RangeIter>* _12239_it) {
	_2433b0c50_StrBuilder _12313_sb = static__2433b1019_New(64LL);;
	static__22872b4e2_iterBegin(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1259_begin = _2433ba122_Str(&_12313_sb);;
	_2433ba320_Clear(&_12313_sb);
	static__22872bab9_iterNext(&(_12313_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	jule::Str _1289_next = _2433ba122_Str(&_12313_sb);;
	jule::Bool _13013_ref = false;;
	_22c45e298_iterHead(_self_, _12239_it, &(_13013_ref), _1259_begin);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		_2287e0980_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_13013_ref) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
			} else {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
			};
		}));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12239_it))))._field_KeyB != nullptr)) {
		(*((*((*(_12239_it))))._field_KeyB))._field_Reference=(_246b49150_Copy && _228712d69_isIterCopyOptimizable(&((*((*(_12239_it))))._field_Expr), &((*((*(_12239_it))))._field_KeyB)));
		_2287e0980_varInitExpr((*(_self_))._field_oc, &((*((*(_12239_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*((*((*(_12239_it))))._field_KeyB))._field_Reference) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				} else {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("*it", 3));
				};
			};
		}));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	_228712330_scope(_self_, (*((*(_12239_it))))._field_Scope);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, _1289_next);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_2287d86ae_indent((*(_self_))._field_oc);
	if (((*((*(_12239_it))))._field_KeyA != nullptr)) {
		static__22872b206_var(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_12239_it))))._field_KeyA);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2287d7d0c_write((*(_self_))._field_oc, _1259_begin);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872b7cd_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _22870c3e6_rangeHashmapIter(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a9597_RangeIter>* _18941_it) {
	_2433b0c50_StrBuilder _19013_sb = static__2433b1019_New(64LL);;
	static__22872b4e2_iterBegin(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1929_begin = _2433ba122_Str(&_19013_sb);;
	_2433ba320_Clear(&_19013_sb);
	static__22872bab9_iterNext(&(_19013_sb), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	jule::Str _1959_next = _2433ba122_Str(&_19013_sb);;
	jule::Bool _19713_ref = false;;
	_22c45e298_iterHead(_self_, _18941_it, &(_19713_ref), _1929_begin);
	if (((*((*(_18941_it))))._field_KeyA != nullptr)) {
		_2287e0980_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("it->first", 9));
		}));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	if (((*((*(_18941_it))))._field_KeyB != nullptr)) {
		_2287e0980_varInitExpr((*(_self_))._field_oc, &((*((*(_18941_it))))._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("it->second", 10));
		}));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	_228712330_scope(_self_, (*((*(_18941_it))))._field_Scope);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, _1959_next);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_2287d7d0c_write((*(_self_))._field_oc, _1929_begin);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872b7cd_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18941_it)))));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _22870c69e_ifCase(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a7b7d_If> _23630_i) {
	if (((*(_23630_i))._field_Expr != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_23630_i))._field_Expr);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_228712330_scope(_self_, (*(_23630_i))._field_Scope);
}



inline void _22870c957_conditional(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a8398_Conditional> _24535_c) {
	jule::Bool _24613_writed = false;;
	{
		auto expr = &((*(_24535_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c491770:;
		if (it != expr_end) {
			jule::Ptr<_2468a7b7d_If> _24721_elif = *it;
			{
				if ((_24721_elif == nullptr)) {
					goto _iter_next_22c491770;
				};
				if (_24613_writed) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_24613_writed=true;
				_22870c69e_ifCase(_self_, _24721_elif);
			}
			_iter_next_22c491770:;
			++it;
			goto _iter_begin_22c491770;
		}
		_iter_end_22c491770:;
	};
	if (((*(_24535_c))._field_Default != nullptr)) {
		if (_24613_writed) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_228712330_scope(_self_, (*((*(_24535_c))._field_Default))._field_Scope);
	};
}



inline void _22870cc10_infIter(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a8695_InfIter> _26531_it) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_228712330_scope(_self_, (*(_26531_it))._field_Scope);
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872bab9_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872b7cd_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26531_it)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _22870ceb8_whileIter(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a8b4b_WhileIter> _28233_it) {
	if ((((*(_28233_it))._field_Expr != nullptr) && ((*(_28233_it))._field_Next == nullptr))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_28233_it))._field_Expr != nullptr)) {
			_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_28233_it))._field_Expr);
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_28233_it))._field_Next != nullptr)) {
			_228711cbe_st(_self_, (*(_28233_it))._field_Next);
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") {\n", 4));
	};
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_228712330_scope(_self_, (*(_28233_it))._field_Scope);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872bab9_iterNext(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872b7cd_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_28233_it)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _22870d271_rangeIter(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a9597_RangeIter> _31533_it) {
	{
		
		if ((_2469b7aa1_Slc((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c4a59c6:;
			{
				_22870c13d_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_2469b781a_Arr((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c4a5696:;
			{
				_22870c13d_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		else if ((_2469b85da_Map((*((*(_31533_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c4a570c:;
			{
				_22870c3e6_rangeHashmapIter(_self_, &(_31533_it));
			}
		}
		else {
			_case_begin_22c4a5630:;
			{
				_22870c13d_rangeIndexIter(_self_, &(_31533_it));
			}
		}
		_match_end_22c4a5564:;
	};
}



inline void _22870d529_cont(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a992c_ContSt> _32824_c) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__22872bab9_iterNext(&((*((*(_self_))._field_oc))._field_Buf), (*(_32824_c))._field_It);
}



inline void _22870d7d2_label(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468aa103_Label> _33325_l) {
	static__22872bda5_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_33325_l)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _22870da8a_gotoSt(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468aa4cc_GotoSt> _33826_gt) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__22872bda5_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_33826_gt))._field_Label)));
}



inline void _22870dd43_postfix(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468aa8a6_Postfix> _34331_p) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_34331_p))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_2287d7d0c_write((*(_self_))._field_oc, (*(_34331_p))._field_Op);
}



inline void _22870e0eb_assign(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468aad5c_Assign> _35030_a) {
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_L))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, (*((*(_35030_a))._field_Op))._field_Kind);
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35030_a))._field_R))._field_Model);
}



inline void _22870e3a4_mapLookupAssign(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab236_MultiAssign>* _35640_a) {
	jule::Ptr<_24685a911_IndexingExprModel> _35713_iem = (*((*(_35640_a))))._field_R.cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45);;
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Expr))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_35713_iem))._field_Index))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_35640_a))))._field_L[0LL] != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[0LL]))._field_Model);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_35640_a))))._field_L[1LL] != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_35640_a))))._field_L[1LL]))._field_Model);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22870e65c_multiAssignTup(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab236_MultiAssign>* _37939_a) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	jule::Ptr<_24685d79e_TupleExprModel> _38313_tup = (*((*(_37939_a))))._field_R.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_38313_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c4c0d87:;
		if (it != expr_end) {
			jule::I64 _38514_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _38521_r = *it;
			{
				_2287d86ae_indent((*(_self_))._field_oc);
				jule::Ptr<_246983ac2_Data> _38717_l = (*((*(_37939_a))))._field_L[_38514_i];;
				if ((_38717_l != nullptr)) {
					{
						auto &_match_expr{ (*(_38717_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_22c4c3a27:;
							{
								jule::Ptr<_246922555_Var> _39125_v = (*(_38717_l))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
								if (((*(_39125_v))._field_Reference && (!(_2469228da_IsInitialized(_39125_v.ptr()))))) {
									static__22872b206_var(&((*((*(_self_))._field_oc))._field_Buf), _39125_v);
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_37939_a))))._field_L[_38514_i]=nullptr;
									goto _iter_next_22c4c0d87;
								};
							}
						}
						_match_end_22c4c39c2:;
					};
					_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38717_l))._field_Kind);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__228729457_toOut(&((*((*(_self_))._field_oc))._field_Buf), _22870ac1e_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_38514_i)));
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_38521_r))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c4c0d87:;
			++it;
			_38514_i++;
			goto _iter_begin_22c4c0d87;
		}
		_iter_end_22c4c0d87:;
	};
	{
		auto expr = &((*((*(_37939_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c4c96ed:;
		if (it != expr_end) {
			jule::I64 _41214_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _41221_l = *it;
			{
				if ((_41221_l == nullptr)) {
					goto _iter_next_22c4c96ed;
				};
				_2287d86ae_indent((*(_self_))._field_oc);
				_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_41221_l))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__228729457_toOut(&((*((*(_self_))._field_oc))._field_Buf), _22870ac1e_assignArgName, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41214_i)));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c4c96ed:;
			++it;
			_41214_i++;
			goto _iter_begin_22c4c96ed;
		}
		_iter_end_22c4c96ed:;
	};
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _22870e915_multiAssignFn(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab236_MultiAssign>* _42838_a) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	jule::Ptr<_24685a081_FnCallExprModel> _43313_f = (*((*(_42838_a))))._field_R.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34);;
	_228803047_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_43313_f))._field_Func))._field_Result));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_42838_a))))._field_R);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	{
		auto expr = &((*((*(_42838_a))))._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c4d2a25:;
		if (it != expr_end) {
			jule::I64 _43914_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _43921_l = *it;
			{
				if ((_43921_l != nullptr)) {
					_2287d86ae_indent((*(_self_))._field_oc);
					_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_43921_l))._field_Model);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
					_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_43914_i));
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_22c4d2a25:;
			++it;
			_43914_i++;
			goto _iter_begin_22c4d2a25;
		}
		_iter_end_22c4d2a25:;
	};
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _22870ebbd_multiAssign(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab236_MultiAssign> _45435_a) {
	{
		auto &_match_expr{ (*(_45435_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22c4d7d38:;
			{
				_22870e3a4_mapLookupAssign(_self_, &(_45435_a));
				return;;
			}
		}
		_match_end_22c4d7cd3:;
	};
	{
		auto &_match_expr{ (*(_45435_a))._field_R };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_22c4d82cd:;
			{
				_22870e65c_multiAssignTup(_self_, &(_45435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22c4d79a3:;
			{
				_22870e915_multiAssignFn(_self_, &(_45435_a));
			}
		}
		else {
			_case_begin_22c4d8223:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:468:13"));;
			}
		}
		_match_end_22c4d81bd:;
	};
}



inline jule::Fn<void(void)> _22871000e_matchExpr(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab896_Match> _47233_m) {
	if ((!(_246984496_IsConst((*(_47233_m))._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
		});;
	};
	if (((!(_2445e7a8a_IsBool((*((*(_47233_m))._field_Expr))._field_Constant.ptr()))) || (!(_2445e548e_ReadBool((*((*(_47233_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47233_m))._field_Expr))._field_Model);
		});;
	};
	return nullptr;;
}



inline void _228710372_case(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab896_Match> _48228_m, jule::Ptr<_2468ac4ce_Case> _48243_c) {
	if ((((*(_48243_c))._field_Exprs.len() != 0LL) && (!((*(_48228_m))._field_Comptime)))) {
		if ((((*(_48228_m))._field_Cases.len() > 0LL) && ((*(_48228_m))._field_Cases[0LL] == _48243_c))) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*(_48243_c))._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c4ded62:;
			if (it != expr_end) {
				jule::I64 _48918_i = it - expr->begin();
				jule::Ptr<_246983ac2_Data> _48925_expr = *it;
				{
					{
						
						if ((!((*(_48228_m))._field_TypeMatch))) {
							_case_begin_22c43e3ee:;
							{
								jule::Fn<void(void)> _49221_caseExpr = _22871000e_matchExpr(_self_, _48228_m);;
								if (_2469847d7_GoodOperand((*(_48228_m))._field_Expr.ptr(), &(_48925_expr))) {
									if ((_49221_caseExpr != nullptr)) {
										_49221_caseExpr();
										_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
									};
									_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48925_expr))._field_Model);
								} else {
									_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_48925_expr))._field_Model);
									if ((_49221_caseExpr != nullptr)) {
										_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_49221_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_22c4e1847:;
							{
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_2469b43d8_TypeKind> _50825_tk = (*(_48925_expr))._field_Model.cast_ptr<_2469b43d8_TypeKind>(&__jule_any_type83);;
								if ((_2469b8354_Trait((*((*(_48228_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_228715e05_boolean((*((*(_self_))._field_oc))._field_ec, (_2469b6cd1_Sptr((*(_48925_expr))._field_Kind.ptr()) != nullptr));
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>(_2287d9b99_findTypeOffset((*(_self_))._field_oc.ptr(), _2469b8354_Trait((*((*(_48228_m))._field_Expr))._field_Kind.ptr()), (*(_48925_expr))._field_Kind))));
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _51625_j = _2287d8d41_pushAnyType((*(_self_))._field_oc, _50825_tk);;
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_51625_j));
								};
							}
						}
						_match_end_22c4e177b:;
					};
					if ((((*(_48243_c))._field_Exprs.len() - _48918_i) > 1LL)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_22c4ded62:;
				++it;
				_48918_i++;
				goto _iter_begin_22c4ded62;
			}
			_iter_end_22c4ded62:;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_48228_m))._field_Default == _48243_c) && ((*(_48228_m))._field_Cases.len() != 0LL))) {
		_2287d86ae_indent((*(_self_))._field_oc);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872c47c_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_48243_c)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_48243_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_2287d86ae_indent((*(_self_))._field_oc);
		_228712330_scope(_self_, (*(_48243_c))._field_Scope);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _22871062a_matchSt(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ab896_Match> _55031_m) {
	if ((((*(_55031_m))._field_Cases.len() == 0LL) && ((*(_55031_m))._field_Default == nullptr))) {
		return;;
	};
	if (((*(_55031_m))._field_Comptime && (((*(_55031_m))._field_Default == nullptr) || ((*((*((*(_55031_m))._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	if (((!((*(_55031_m))._field_Comptime)) && (!(_246984496_IsConst((*(_55031_m))._field_Expr.ptr()))))) {
		if ((_246b49150_Copy && _2287129a1_isCopyOptimizable(&((*(_55031_m))._field_Expr)))) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_55031_m))._field_Expr))._field_Model);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_2287d86ae_indent((*(_self_))._field_oc);
	};
	if (((*(_55031_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*(_55031_m))._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c50ace5:;
			if (it != expr_end) {
				jule::Ptr<_2468ac4ce_Case> _57825_c = *it;
				{
					if ((_57825_c == nullptr)) {
						goto _iter_next_22c50ace5;
					};
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_2287d86ae_indent((*(_self_))._field_oc);
					_228710372_case(_self_, _55031_m, _57825_c);
				}
				_iter_next_22c50ace5:;
				++it;
				goto _iter_begin_22c50ace5;
			}
			_iter_end_22c50ace5:;
		};
	};
	if (((*(_55031_m))._field_Default != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_228710372_case(_self_, _55031_m, (*(_55031_m))._field_Default);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__22872c191_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_55031_m)));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _2287108d3_fallSt(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468acac8_FallSt> _60526_f) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__22872c47c_caseBegin(&((*((*(_self_))._field_oc))._field_Buf), (*(_60526_f))._field_DestCase);
}



inline void _228710b8b_breakSt(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a9d06_BreakSt> _61027_b) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_61027_b))._field_It != 0LLU)) {
		static__22872b7cd_iterEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_61027_b))._field_It);
	} else {
		static__22872c191_matchEnd(&((*((*(_self_))._field_oc))._field_Buf), (*(_61027_b))._field_Mtch);
	};
}



inline void _228710e44_setResult(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ace5d_RetSt> _61933_r) {
	if (((*((*((*((*(_61933_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_61933_r))._field_Expr);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_2287d86ae_indent((*(_self_))._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_246983ac2_Data>> _62713_datas = (*((*(_61933_r))._field_Expr.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
	{
		auto expr = &(_62713_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c518918:;
		if (it != expr_end) {
			jule::I64 _62813_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _62816_data = *it;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_62813_i));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_62816_data))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				_2287d86ae_indent((*(_self_))._field_oc);
			}
			_iter_next_22c518918:;
			++it;
			_62813_i++;
			goto _iter_begin_22c518918;
		}
		_iter_end_22c518918:;
	};
}



inline void _2287111ec_retSt(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468ace5d_RetSt> _63829_r) {
	if (_24686628a_IsVoid((*((*(_63829_r))._field_Func))._field_Decl.ptr())) {
		if ((*((*((*(_63829_r))._field_Func))._field_Decl))._field_Exceptional) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();", 31));
			return;;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_63829_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*((*((*(_63829_r))._field_Func))._field_Decl))._field_Exceptional) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_63829_r))._field_Func))._field_Result);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), ", 15));
			_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_63829_r))._field_Expr);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
		} else {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_63829_r))._field_Expr);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_63829_r))._field_Expr != nullptr)) {
		_228710e44_setResult(_self_, _63829_r);
	};
	if ((*((*((*(_63829_r))._field_Func))._field_Decl))._field_Exceptional) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_228803047_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_63829_r))._field_Func))._field_Result));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _2287114a5_var(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_246922555_Var> _67427_v) {
	if ((!((*(_67427_v))._field_Constant))) {
		_2287e0c38_var((*(_self_))._field_oc, _67427_v);
	};
}



inline void _22871175d_mutSlicing(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_246b383d6_MutSlicingExprModel> _68034_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_68034_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_240e90b95_Production))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_68034_m))._field_Token));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_68034_m))._field_Left);
	if (((*(_68034_m))._field_Right != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_68034_m))._field_Right);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _228711a16_swap(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_246b3710a_SwapExprModel> _69728_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_69728_m))._field_Left))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_228718820_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_69728_m))._field_Right))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228711cbe_st(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Any _70626_st) {
	if ((_70626_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _70626_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_22c533290:;
			{
				_228712330_scope(_self_, _70626_st.cast_ptr<_2468a7760_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c533d2e:;
			{
				_2287114a5_var(_self_, _70626_st.cast_ptr<_246922555_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22c533d95:;
			{
				_22872283a_model((*((*(_self_))._field_oc))._field_ec, (*(_70626_st.cast_ptr<_246983ac2_Data>(&__jule_any_type24)))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_22c533e0b:;
			{
				_22870c957_conditional(_self_, _70626_st.cast_ptr<_2468a8398_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_22c533e72:;
			{
				_22870cc10_infIter(_self_, _70626_st.cast_ptr<_2468a8695_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_22c533ed8:;
			{
				_22870ceb8_whileIter(_self_, _70626_st.cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_22c53404e:;
			{
				_22870d271_rangeIter(_self_, _70626_st.cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_22c5340b5:;
			{
				_22870d529_cont(_self_, _70626_st.cast_ptr<_2468a992c_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_22c53412b:;
			{
				_22870d7d2_label(_self_, _70626_st.cast_ptr<_2468aa103_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_22c534192:;
			{
				_22870da8a_gotoSt(_self_, _70626_st.cast_ptr<_2468aa4cc_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_22c534208:;
			{
				_22870dd43_postfix(_self_, _70626_st.cast_ptr<_2468aa8a6_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_22c53426e:;
			{
				_22870e0eb_assign(_self_, _70626_st.cast_ptr<_2468aad5c_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_22c5342d5:;
			{
				_22870ebbd_multiAssign(_self_, _70626_st.cast_ptr<_2468ab236_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_22c53434b:;
			{
				_22871062a_matchSt(_self_, _70626_st.cast_ptr<_2468ab896_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_22c5343c3:;
			{
				_2287108d3_fallSt(_self_, _70626_st.cast_ptr<_2468acac8_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_22c53444a:;
			{
				_228710b8b_breakSt(_self_, _70626_st.cast_ptr<_2468a9d06_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_22c5344c2:;
			{
				_2287111ec_retSt(_self_, _70626_st.cast_ptr<_2468ace5d_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_22c534549:;
			{
				_2287205c4_pushToSlice((*((*(_self_))._field_oc))._field_ec, _70626_st.cast_ptr<_246b38e0e_PushToSliceExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_22c5345c1:;
			{
				_22872087c_appendToSlice((*((*(_self_))._field_oc))._field_ec, _70626_st.cast_ptr<_246b392d8_AppendToSliceExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_22c534648:;
			{
				_22871175d_mutSlicing(_self_, _70626_st.cast_ptr<_246b383d6_MutSlicingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_22c5346c0:;
			{
				_228711a16_swap(_self_, _70626_st.cast_ptr<_246b3710a_SwapExprModel>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_22c53334a:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_22c532de9:;
	};
}



inline void _228712077_scopeStmts(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a7760_Scope>* _75835_s) {
	{
		auto expr = &((*((*(_75835_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c535bee:;
		if (it != expr_end) {
			jule::Any _75921_st = *it;
			{
				_2287d86ae_indent((*(_self_))._field_oc);
				_228711cbe_st(_self_, _75921_st);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c535bee:;
			++it;
			goto _iter_begin_22c535bee;
		}
		_iter_end_22c535bee:;
	};
}



inline void _228712330_scope(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_2468a7760_Scope> _76729_s) {
	_2287d82b3_addIndent((*(_self_))._field_oc);
	if ((*(_76729_s))._field_Deferred) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_228712077_scopeStmts(_self_, &(_76729_s));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_76729_s))._field_Deferred) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _2287125d8_funcScope(jule::Ptr<_22870b34b_scopeCoder> _self_, jule::Ptr<_246868c1b_FnIns> _78333_f) {
	if (((*(_78333_f))._field_Scope == nullptr)) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	if ((!(_24686628a_IsVoid((*(_78333_f))._field_Decl.ptr())))) {
		jule::Ptr<_2469c234c_Tuple> _79017_tup = _2469b8871_Tup((*(_78333_f))._field_Result.ptr());;
		if ((_79017_tup != nullptr)) {
			_2287d86ae_indent((*(_self_))._field_oc);
			_228802871_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _79017_tup);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_79017_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c54988e:;
				if (it != expr_end) {
					jule::I64 _79522_i = it - expr->begin();
					jule::Ptr<_2469b43d8_TypeKind> _79529_t = *it;
					{
						if (_228805445_shouldInitialized(&(_79529_t))) {
							_2287d86ae_indent((*(_self_))._field_oc);
							_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_79522_i));
							_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_228722ae3_initExpr((*((*(_self_))._field_oc))._field_ec, _79529_t);
							_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_22c54988e:;
					++it;
					_79522_i++;
					goto _iter_begin_22c54988e;
				}
				_iter_end_22c54988e:;
			};
		} else if (((*((*((*(_78333_f))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
			_2287d86ae_indent((*(_self_))._field_oc);
			_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_78333_f))._field_Result);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_228805445_shouldInitialized(&((*(_78333_f))._field_Result))) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_228722ae3_initExpr((*((*(_self_))._field_oc))._field_ec, (*(_78333_f))._field_Result);
			};
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_228712077_scopeStmts(_self_, &((*(_78333_f))._field_Scope));
	if (((*((*(_78333_f))._field_Decl))._field_Exceptional && _24686628a_IsVoid((*(_78333_f))._field_Decl.ptr()))) {
		_2287d86ae_indent((*(_self_))._field_oc);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional();\n", 32));
	};
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _22870b34b_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2287154cb_exprCoder> static__228715894_new(jule::Ptr<_2287d7658_ObjectCoder>* _10524_oc) {
	return jule::new_ptr<_2287154cb_exprCoder>(_2287154cb_exprCoder{._field_oc=(*(_10524_oc))});;
}



inline void _228715b4c_string(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2445e359c_Const>* _11127_c) {
	jule::Str _1129_content = _2445e5725_ReadStr((*(_11127_c)).ptr());;
	if ((_1129_content.len() == 0LL)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1179_len = _2445d3070_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_1129_content.len())), 10LL);;
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_2287238d5_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _1129_content);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2287d7d0c_write((*(_self_))._field_oc, _1179_len);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228715e05_boolean(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Bool _12627_b) {
	if (_12627_b) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _228716103_nilLit(jule::Ptr<_2287154cb_exprCoder> _self_) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _228716444_ftoaSpecialCases(jule::Ptr<_2287154cb_exprCoder> _self_, jule::F64* _13837_x) {
	{
		
		if (_24458709b_IsNaN((*(_13837_x)))) {
			_case_begin_22c56e51d:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_2445876a6_IsInf((*(_13837_x)), 1LL)) {
			_case_begin_22c56e595:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_2445876a6_IsInf((*(_13837_x)), -1LL)) {
			_case_begin_22c56e61c:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_22c56e441:;
			{
				return false;;
			}
		}
		_match_end_22c56e375:;
	};
	return true;;
}



inline void _2287166ec_float32(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2445e359c_Const>* _15228_c) {
	jule::F64 _1539_x = _2445e625e_AsF64((*(_15228_c)).ptr());;
	if (_228716444_ftoaSpecialCases(_self_, &(_1539_x))) {
		return;;
	};
	{
		
		if ((_1539_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_22c5729e9:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1539_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_22c572741:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_22c5726ca:;
			{
				_228723c7b_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1539_x, 32LL);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_22c572499:;
	};
}



inline void _2287169a5_float64(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2445e359c_Const>* _17128_c) {
	jule::F64 _1729_x = _2445e625e_AsF64((*(_17128_c)).ptr());;
	if (_228716444_ftoaSpecialCases(_self_, &(_1729_x))) {
		return;;
	};
	{
		
		if ((_1729_x == jule::MAX_F64)) {
			_case_begin_22c575e09:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1729_x == jule::MIN_F64)) {
			_case_begin_22c57668a:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_22c575ada:;
			{
				_228723c7b_ftoa(&((*((*(_self_))._field_oc))._field_Buf), _1729_x, 64LL);
			}
		}
		_match_end_22c5758a9:;
	};
}



inline void _228716c5d_constant(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2445e359c_Const> _18932_c) {
	{
		
		if (_2445e7d21_IsStr(_18932_c.ptr())) {
			_case_begin_22c5782c4:;
			{
				_228715b4c_string(_self_, &(_18932_c));
			}
		}
		else if (_2445e7a8a_IsBool(_18932_c.ptr())) {
			_case_begin_22c577db7:;
			{
				_228715e05_boolean(_self_, _2445e548e_ReadBool(_18932_c.ptr()));
			}
		}
		else if (_2445e80a7_IsF64(_18932_c.ptr())) {
			_case_begin_22c577e3e:;
			{
				{
					
					if ((*(_18932_c))._field_Kind.equal("f32", 3)) {
						_case_begin_22c57a97a:;
						{
							_2287166ec_float32(_self_, &(_18932_c));
						}
					}
					else {
						_case_begin_22c57a4e6:;
						{
							_2287169a5_float64(_self_, &(_18932_c));
						}
					}
					_match_end_22c57a43b:;
				};
			}
		}
		else if (_2445e756d_IsI64(_18932_c.ptr())) {
			_case_begin_22c577eb6:;
			{
				_228724067_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(_2445e4e72_ReadI64(_18932_c.ptr())));
			}
		}
		else if (_2445e7804_IsU64(_18932_c.ptr())) {
			_case_begin_22c57803d:;
			{
				_228724353_utoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::U64>(_2445e5208_ReadU64(_18932_c.ptr())));
			}
		}
		else if (_2445e833d_IsNil(_18932_c.ptr())) {
			_case_begin_22c578978:;
			{
				_228716103_nilLit(_self_);
			}
		}
		else {
			_case_begin_22c577d40:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_22c577c74:;
	};
}



inline void _22871717b_divByZeroBinary(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246819d43_Token>* _21336_op, jule::Ptr<_246857aa6_OperandExprModel>* _21353_l, jule::Ptr<_246857aa6_OperandExprModel>* _21380_r) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_21336_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_22c57e660:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_22c57e6d7:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_22c57e5e9:;
	};
	if ((!(_240e90b95_Production))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2287da2b5_locInfo((*(_self_))._field_oc, _21336_op);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_228718820_possibleRefExpr(_self_, (*((*(_21353_l))))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_228718820_possibleRefExpr(_self_, (*((*(_21380_r))))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228717434_unsafeBinary(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468580a1_BinopExprModel> _23536_m) {
	if ((((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_228724cb0_isAny(&((*((*(_23536_m))._field_Left))._field_Kind))) {
			if (((!(_2469b54c7_IsNil((*((*(_23536_m))._field_Right))._field_Kind.ptr()))) && (!(_228724cb0_isAny(&((*((*(_23536_m))._field_Right))._field_Kind)))))) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*((*(_23536_m))._field_Op))._field_Id == static_cast<jule::U64>(51LLU))) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
				};
				jule::I64 _24521_i = _2287d8d41_pushAnyType((*(_self_))._field_oc, (*((*(_23536_m))._field_Right))._field_Kind);;
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_any_type", 15));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_24521_i));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("_compare(", 9));
				_228718820_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_228718820_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr(_self_, (*((*(_23536_m))._field_Left))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2287d7d0c_write((*(_self_))._field_oc, (*((*(_23536_m))._field_Op))._field_Kind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_228718820_possibleRefExpr(_self_, (*((*(_23536_m))._field_Right))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _2287176dc_binary(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468580a1_BinopExprModel> _26630_m) {
	{
		auto &_match_expr{ (*((*(_26630_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_22c590660:;
			{
				if ((_2469b80bd_Struct((*((*(_26630_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_22871717b_divByZeroBinary(_self_, &((*(_26630_m))._field_Op), &((*(_26630_m))._field_Left), &((*(_26630_m))._field_Right));
					return;;
				};
			}
		}
		_match_end_22c5905a5:;
	};
	_228717434_unsafeBinary(_self_, _26630_m);
}



inline void _228717995_var(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246922555_Var> _27827_m) {
	if ((*(_27827_m))._field_Binded) {
		jule::Ptr<_24682e73c_Directive> _28013_d = _228804cb3_findDirective(&((*(_27827_m))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_28013_d != nullptr)) {
			_2287d80b5_writeBytes((*(_self_))._field_oc, _2287e4ba4_concatAllParts((*(_28013_d))._field_Args));
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__22872b206_var(&((*((*(_self_))._field_oc))._field_Buf), _27827_m);
}



inline void _228717c4d_structureIns(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246853ba1_StructIns> _28936_m) {
	_2287eb53a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _28936_m);
}



inline void _228718006_unary(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685847a_UnaryExprModel> _29329_m) {
	{
		auto &_match_expr{ (*((*(_29329_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_22c596644:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_228718820_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_22c5966bb:;
			{
				if ((_240e90b95_Production || (_2469b6cd1_Sptr((*((*(_29329_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_22c596578;
				};
				_228718820_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".get(\"", 6));
				_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_29329_m))._field_Op));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_22c596578:;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_2287d7d0c_write((*(_self_))._field_oc, (*((*(_29329_m))._field_Op))._field_Kind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr(_self_, (*((*(_29329_m))._field_Expr))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _2287182ae_structureLit(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246858d4e_StructLitExprModel> _31736_m) {
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	static__22872ab2e_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_31736_m))._field_Strct));
	if ((*((*((*(_31736_m))._field_Strct))._field_Decl))._field_Binded) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	if (((*(_31736_m))._field_Args.len() > 0LL)) {
		_julec_label_22c5a1385:;
		{
			auto expr = &((*((*(_31736_m))._field_Strct))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c5a14b7:;
			if (it != expr_end) {
				jule::I64 _33017_i = it - expr->begin();
				jule::Ptr<_246853101_FieldIns> _33020_f = *it;
				{
					{
						auto expr = &((*(_31736_m))._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22c5a2342:;
						if (it != expr_end) {
							jule::Ptr<_2468589a8_StructArgExprModel> _33129_arg = *it;
							{
								if (((*(_33129_arg))._field_Field == _33020_f)) {
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
									static__22872ae1a_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_33129_arg))._field_Field))._field_Decl));
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
									_228718820_possibleRefExpr(_self_, (*((*(_33129_arg))._field_Expr))._field_Model);
									if ((((*((*(_31736_m))._field_Strct))._field_Fields.len() - _33017_i) > 1LL)) {
										_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_22c5a14b7;
								};
							}
							_iter_next_22c5a2342:;
							++it;
							goto _iter_begin_22c5a2342;
						}
						_iter_end_22c5a2342:;
					};
				}
				_iter_next_22c5a14b7:;
				++it;
				_33017_i++;
				goto _iter_begin_22c5a14b7;
			}
			_iter_end_22c5a14b7:;
		};
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _228718567_allocStructure(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685914b_AllocStructLitExprModel> _34838_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__22872ab2e_structureIns(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_34838_m))._field_Lit))._field_Strct));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_2287182ae_structureLit(_self_, (*(_34838_m))._field_Lit);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228718820_possibleRefExpr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Any _35635_expr) {
	{
		auto &_match_expr{ _35635_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c5a9811:;
			{
				jule::Ptr<_246922555_Var> _35913_v = _35635_expr.cast_ptr<_246922555_Var>(&__jule_any_type8);;
				if ((*(_35913_v))._field_Reference) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_22872283a_model(_self_, _35635_expr);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_22c5a97ab:;
	};
	_22872283a_model(_self_, _35635_expr);
}



inline void _228718c3d_castTraitFromTrait(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468596ce_CastingExprModel>* _37043_m, jule::Ptr<_2468790e4_Trait> _37069_t1, jule::Ptr<_2468790e4_Trait> _37085_t2) {
	_228718820_possibleRefExpr(_self_, (*((*(_37043_m))))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".mask<", 6));
	static__22872a26b_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), _37069_t1);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_2287da00c_pushAndWriteMaskMapper((*(_self_))._field_oc, _37069_t1, _37085_t2);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228718ee6_casting(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468596ce_CastingExprModel> _38531_m) {
	{
		
		if (_228724cb0_isAny(&((*(_38531_m))._field_Kind))) {
			_case_begin_22c5aec67:;
			{
				if (_2469b54c7_IsNil((*(_38531_m))._field_ExprKind.ptr())) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_2469b7584_TypeEnum((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
					_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
					return;;
				};
				jule::I64 _39613_i = _2287d8d41_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_ExprKind);;
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*(_38531_m))._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_22c5b2d03:;
						{
							jule::Ptr<_2469bc259_Prim> _40017_prim = _2469b6a4a_Prim((*(_38531_m))._field_ExprKind.ptr());;
							if (((_40017_prim != nullptr) && _2445e29b9_IsInt((*(_40017_prim))._field_Kind))) {
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_2287e85d1_prim((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _40017_prim);
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_22c5b3650;
							};
							goto _case_begin_22c5b36a5;
						}
					}
					else {
						_case_begin_22c5b36a5:;
						{
							_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
						}
					}
					_match_end_22c5b3650:;
				};
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_39613_i));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_228724cb0_isAny(&((*(_38531_m))._field_ExprKind))) {
			_case_begin_22c5aecde:;
			{
				_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_2469b6cd1_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_2469b6cd1_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_240e90b95_Production))) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>(_2287d8d41_pushAnyType((*(_self_))._field_oc, (*(_38531_m))._field_Kind))));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_2469b7067_Ptr((*(_38531_m))._field_ExprKind.ptr()) != nullptr) || (_2469b7067_Ptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c5aed66:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_2469b8354_Trait((*(_38531_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_22c5aeddd:;
			{
				if ((_2469b8354_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_228718c3d_castTraitFromTrait(_self_, &(_38531_m), _2469b8354_Trait((*(_38531_m))._field_Kind.ptr()), _2469b8354_Trait((*(_38531_m))._field_ExprKind.ptr()));
					return;;
				};
				_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_2469b6cd1_Sptr((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_2469b6cd1_Sptr((*(_38531_m))._field_Kind.ptr())))._field_Elem);
				} else {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				};
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_240e90b95_Production))) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_38531_m))._field_Token));
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>(_2287d9b99_findTypeOffset((*(_self_))._field_oc.ptr(), _2469b8354_Trait((*(_38531_m))._field_ExprKind.ptr()), (*(_38531_m))._field_Kind))));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_2469b8354_Trait((*(_38531_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c5aee65:;
			{
				_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>(_2287d9b99_findTypeOffset((*(_self_))._field_oc.ptr(), _2469b8354_Trait((*(_38531_m))._field_Kind.ptr()), (*(_38531_m))._field_ExprKind))));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_22c5aeb24:;
	};
	jule::Ptr<_2469bc259_Prim> _4779_prim = _2469b6a4a_Prim((*(_38531_m))._field_Kind.ptr());;
	jule::Ptr<_2469bc259_Prim> _4789_eprim = _2469b6a4a_Prim((*(_38531_m))._field_ExprKind.ptr());;
	if ((((_4789_eprim != nullptr) && (_4779_prim != nullptr)) && _2469c06e1_IsStr(_4779_prim.ptr()))) {
		if (_2469bdb51_IsU8(_4789_eprim.ptr())) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_38531_m))._field_Kind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_228718820_possibleRefExpr(_self_, (*(_38531_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871929e_models(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Slice<jule::Any> _49630_args) {
	if ((_49630_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49630_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c5d9c2b:;
		if (it != expr_end) {
			jule::I64 _50014_i = it - expr->begin();
			jule::Any _50021_a = *it;
			{
				_228718820_possibleRefExpr(_self_, _50021_a);
				if (((_49630_args.len() - _50014_i) > 1LL)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_22c5d9c2b:;
			++it;
			_50014_i++;
			goto _iter_begin_22c5d9c2b;
		}
		_iter_end_22c5d9c2b:;
	};
}



inline void _228719557_args(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel>* _50829_m) {
	jule::I64 _50913_j = 0LL;;
	if (((((*((*((*(_50829_m))))._field_Func))._field_Owner != nullptr) && (!((*((*((*((*(_50829_m))))._field_Func))._field_Decl))._field_Statically))) || (((*((*((*(_50829_m))))._field_Func))._field_Params.len() > 0LL) && _24686495e_IsSelf((*((*((*((*(_50829_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_50913_j)++;
	};
	{
		auto expr = &((*((*(_50829_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c5dca31:;
		if (it != expr_end) {
			jule::I64 _51413_i = it - expr->begin();
			jule::Any _51416_arg = *it;
			{
				jule::Ptr<_246867c70_ParamIns> _51513_p = (*((*((*(_50829_m))))._field_Func))._field_Params[_50913_j];;
				if ((((*(_51513_p))._field_Decl != nullptr) && (*((*(_51513_p))._field_Decl))._field_Reference)) {
					{
						auto &_match_expr{ _51416_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_22c5e069e:;
							{
								jule::Ptr<_246922555_Var> _51921_v = _51416_arg.cast_ptr<_246922555_Var>(&__jule_any_type8);;
								if ((*(_51921_v))._field_Reference) {
									_22872283a_model(_self_, _51416_arg);
									goto _julec_label_22c5e39d2;
								};
							}
						}
						_match_end_22c5e0649:;
					};
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_22872283a_model(_self_, _51416_arg);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_22c5e39d2;
				};
				_228718820_possibleRefExpr(_self_, _51416_arg);
				_julec_label_22c5e39d2:;
				if ((((*((*(_50829_m))))._field_Args.len() - _51413_i) > 1LL)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_50913_j)++;
			}
			_iter_next_22c5dca31:;
			++it;
			_51413_i++;
			goto _iter_begin_22c5dca31;
		}
		_iter_end_22c5dca31:;
	};
}



inline void _228719810_modelForCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Any _53936_expr) {
	{
		auto &_match_expr{ _53936_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_22c5e5385:;
			{
				_22871ca44_funcIns(_self_, _53936_expr.cast_ptr<_246868c1b_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c5e540c:;
			{
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _54517_ssie = _53936_expr.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_54517_ssie))._field_Method != nullptr)) {
					_22871ca44_funcIns(_self_, (*(_54517_ssie))._field_Method);
					return;;
				};
			}
		}
		_match_end_22c5e531e:;
	};
	_228718820_possibleRefExpr(_self_, _53936_expr);
}



inline void _228719ab8_pushCallInf(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel>* _55432_m) {
	if ((_240e90b95_Production || (!((*((*((*(_55432_m))))._field_Func))._field_Anon)))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_55432_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_55432_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_22c5e8ba2:;
				{
					if ((*((*((*((*((*((*(_55432_m))))._field_Expr.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97)))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_22c5e8b4c:;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_2287da2b5_locInfo((*(_self_))._field_oc, &((*((*(_55432_m))))._field_Token));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_55432_m))))._field_Args.len() != 0LL)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _228719e09_isWrapped(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel>* _57734_m) {
	if ((((!(_24686a1a1_IsBuiltin((*((*(_57734_m))))._field_Func.ptr()))) && ((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _24686495e_IsSelf((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_57734_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_22c5ed943:;
				{
					jule::Ptr<_24685cb22_StructSubIdentExprModel> _58121_ssie = (*((*(_57734_m))))._field_Expr.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_246864be5_IsRef((*((*((*((*(_57734_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_2469b6cd1_Sptr((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_22c6003d4:;
							{
								goto _match_end_22c5ee67a;
							}
						}
						else {
							_case_begin_22c5ee6e1:;
							{
								if ((_2469b80bd_Struct((*((*(_58121_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*((*(_58121_ssie))._field_Expr))._field_Lvalue))) {
										_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_22872283a_model(_self_, (*((*(_58121_ssie))._field_Expr))._field_Model);
										_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_22c5ee67a:;
					};
				}
			}
			_match_end_22c5ed8dd:;
		};
	};
	return false;;
}



inline void _22871a1b2_pureFuncCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel>* _60137_m) {
	jule::Bool _6029_wrapped = _228719e09_isWrapped(_self_, _60137_m);;
	_228719810_modelForCall(_self_, (*((*(_60137_m))))._field_Expr);
	if ((!(_24686a1a1_IsBuiltin((*((*(_60137_m))))._field_Func.ptr())))) {
		if (((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Binded && ((*((*((*(_60137_m))))._field_Func))._field_Generics.len() > 0LL))) {
			if ((!(_22880517b_hasDirective(&((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Directives), jule::Str::lit("cdef", 4))))) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*((*((*(_60137_m))))._field_Func))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c60674d:;
					if (it != expr_end) {
						jule::I64 _60826_i = it - expr->begin();
						jule::Ptr<_2469b2a02_InsGeneric> _60833_g = *it;
						{
							_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_60833_g))._field_Kind);
							if ((((*((*((*(_60137_m))))._field_Func))._field_Generics.len() - _60826_i) > 1LL)) {
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_22c60674d:;
						++it;
						_60826_i++;
						goto _iter_begin_22c60674d;
					}
					_iter_end_22c60674d:;
				};
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_228719ab8_pushCallInf(_self_, _60137_m);
	jule::Bool _61913_locinfo = false;;
	if ((((!(_24686a1a1_IsBuiltin((*((*(_60137_m))))._field_Func.ptr()))) && ((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params.len() > 0LL)) && _24686495e_IsSelf((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_60137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_22c60bd5d:;
				{
					jule::Ptr<_24685cb22_StructSubIdentExprModel> _62321_ssie = (*((*(_60137_m))))._field_Expr.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
					{
						
						if (_246864be5_IsRef((*((*((*((*(_60137_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_22c6113c3:;
							{
								_228718820_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
							}
						}
						else if ((_2469b6cd1_Sptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_22c60cbe9:;
							{
								_228718820_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
								if ((!(_240e90b95_Production))) {
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									_2287da2b5_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
								};
								_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_22c60cb83:;
							{
								if ((_2469b80bd_Struct((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_62321_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_22c60d458:;
											{
												jule::Ptr<_246922555_Var> _64229_v = (*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
												if ((*(_64229_v))._field_Reference) {
													goto _match_end_22c60d975;
												};
												goto _case_begin_22c60d9ca;
											}
										}
										else {
											_case_begin_22c60d9ca:;
											{
												_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_22c60d975:;
									};
								};
								if (_6029_wrapped) {
									_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_2469b7067_Ptr((*((*(_62321_ssie))._field_Expr))._field_Kind.ptr()) == nullptr)) {
									_22872283a_model(_self_, (*((*(_62321_ssie))._field_Expr))._field_Model);
								} else {
									_228718820_possibleRefExpr(_self_, (*((*((*((*(_62321_ssie))._field_Expr))._field_Model.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_22c60cb1c:;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type96) {
				_case_begin_22c60bdd5:;
				{
					_228718820_possibleRefExpr(_self_, (*((*((*(_60137_m))))._field_Expr.cast_ptr<_24685c281_TraitSubIdentExprModel>(&__jule_any_type96)))._field_Expr);
					if ((!(_240e90b95_Production))) {
						_61913_locinfo=true;
					};
					if (((*((*(_60137_m))))._field_Args.len() > 0LL)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_22c60bce7:;
		};
	};
	_228719557_args(_self_, _60137_m);
	if (_61913_locinfo) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", \"", 3));
		_2287da2b5_locInfo((*(_self_))._field_oc, &((*((*(_60137_m))))._field_Token));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_6029_wrapped) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _22871a46a_coFuncCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel>* _68735_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2433b0c50_StrBuilder _69013_head = static__2433b1019_New(32LL);;
	_2433b982a_WriteStr(&_69013_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_68735_m))))._field_Func))._field_Owner != nullptr)) {
		_2433b982a_WriteStr(&_69013_head, jule::Str::lit("_self_", 6));
		if (((*((*(_68735_m))))._field_Args.len() > 0LL)) {
			_2433b982a_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_68735_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c6272c9:;
		if (it != expr_end) {
			jule::I64 _69813_i = it - expr->begin();
			jule::Any _69816_arg = *it;
			{
				if ((_69813_i > 0LL)) {
					_2433b982a_WriteStr(&_69013_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _69816_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_22c628808:;
						{
							jule::Ptr<_246922555_Var> _70421_v = _69816_arg.cast_ptr<_246922555_Var>(&__jule_any_type8);;
							static__22872b206_var(&(_69013_head), _70421_v);
							goto _iter_next_22c6272c9;
						}
					}
					_match_end_22c628066:;
				};
				jule::Str _70813_name = (jule::Str::lit("_co_arg_", 8) + _2445d3339_Itoa(_69813_i));;
				_2433b982a_WriteStr(&_69013_head, _70813_name);
				_2287d86ae_indent((*(_self_))._field_oc);
				_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Kind);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_68735_m))))._field_Func))._field_Params[_69813_i]))._field_Decl))._field_Reference) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_2287d7d0c_write((*(_self_))._field_oc, _70813_name);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_228718820_possibleRefExpr(_self_, _69816_arg);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _72013_argS = jule::Any(_70813_name, &__jule_any_type4);;
				(*((*(_68735_m))))._field_Args[_69813_i]=(*(((jule::Any*)((&(_72013_argS))))));
			}
			_iter_next_22c6272c9:;
			++it;
			_69813_i++;
			goto _iter_begin_22c6272c9;
		}
		_iter_end_22c6272c9:;
	};
	_2287d86ae_indent((*(_self_))._field_oc);
	_2433b9572_Write(&(*((*(_self_))._field_oc))._field_Buf, _2433baac3_Buf(&_69013_head));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_22871a1b2_pureFuncCall(_self_, _68735_m);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _22871a7cd_writeUseExpr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246868c1b_FnIns>* _73837_f, jule::Ptr<_246983ac2_Data> _73852_d) {
	if ((_2469b8871_Tup((*(_73852_d))._field_Kind.ptr()) == nullptr)) {
		_228718820_possibleRefExpr(_self_, (*(_73852_d))._field_Model);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_24685d79e_TupleExprModel> _74413_tup = (*(_73852_d))._field_Model.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81);;
	_228802871_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _2469b8871_Tup((*((*(_73837_f))))._field_Result.ptr()));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_74413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c634bbb:;
		if (it != expr_end) {
			jule::I64 _74713_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _74716_data = *it;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_74713_i));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_228718820_possibleRefExpr(_self_, (*(_74716_data))._field_Model);
				if ((((*(_74413_tup))._field_Datas.len() - _74713_i) > 1LL)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_22c634bbb:;
			++it;
			_74713_i++;
			goto _iter_begin_22c634bbb;
		}
		_iter_end_22c634bbb:;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _22871aa86_funcCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a081_FnCallExprModel> _75932_m) {
	if ((*(_75932_m))._field_IsCo) {
		_22871a46a_coFuncCall(_self_, &(_75932_m));
		return;;
	};
	if (((_24686a1a1_IsBuiltin((*(_75932_m))._field_Func.ptr()) || (!((*((*((*(_75932_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_75932_m))._field_Except != nullptr) && ((*((*(_75932_m))._field_Except))._field_Stmts.len() == 0LL)))) {
		_22871a1b2_pureFuncCall(_self_, &(_75932_m));
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_22871a1b2_pureFuncCall(_self_, &(_75932_m));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	if (((*(_75932_m))._field_Except != nullptr)) {
		if ((((*((*(_75932_m))._field_Func))._field_Result == nullptr) || (!((*(_75932_m))._field_Assigned)))) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_228712330_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _78517_forwarded = _22872472c_isForwarded(&((*(_75932_m))._field_Except));;
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_78517_forwarded) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _79021_stmt = (*((*(_75932_m))._field_Except))._field_Stmts[((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79021_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_22c644813:;
					{
						(*((*(_75932_m))._field_Except))._field_Stmts=(*((*(_75932_m))._field_Except))._field_Stmts.slice(0LL, ((*((*(_75932_m))._field_Except))._field_Stmts.len() - 1LL));
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_2287d82b3_addIndent((*(_self_))._field_oc);
						_228712077_scopeStmts((*((*(_self_))._field_oc))._field_sc, &((*(_75932_m))._field_Except));
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_2287d86ae_indent((*(_self_))._field_oc);
						_22871a7cd_writeUseExpr(_self_, &((*(_75932_m))._field_Func), _79021_stmt.cast_ptr<_246983ac2_Data>(&__jule_any_type24));
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_2287d84b1_doneIndent((*(_self_))._field_oc);
						_2287d86ae_indent((*(_self_))._field_oc);
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_22c6466a0:;
					{
						_228712330_scope((*((*(_self_))._field_oc))._field_sc, (*(_75932_m))._field_Except);
					}
				}
				_match_end_22c64664a:;
			};
			if (_78517_forwarded) {
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_228722ae3_initExpr(_self_, (*((*(_75932_m))._field_Func))._field_Result);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_2287d84b1_doneIndent((*(_self_))._field_oc);
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_75932_m))._field_Token));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_24686628a_IsVoid((*((*(_75932_m))._field_Func))._field_Decl.ptr())))) {
			_2287d86ae_indent((*(_self_))._field_oc);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_2287d84b1_doneIndent((*(_self_))._field_oc);
	};
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _22871ad3e_slice(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a45a_SliceExprModel> _83029_m) {
	if (((*(_83029_m))._field_Elems.len() == 0LL)) {
		_2287e9eb7_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_2287e9eb7_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_83029_m))._field_ElemKind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::make({", 8));
	_22871929e_models(_self_, (*(_83029_m))._field_Elems);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _22871b0e7_indexing(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685a911_IndexingExprModel> _84232_m) {
	_228718820_possibleRefExpr(_self_, (*((*(_84232_m))._field_Expr))._field_Model);
	{
		
		if (_240e90b95_Production || (_2469b7067_Ptr((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || (_2469b85da_Map((*((*(_84232_m))._field_Expr))._field_Kind.ptr()) != nullptr) || _2287249e6_isExprComesFromBind(&((*(_84232_m))._field_Expr))) {
			_case_begin_22c65799c:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_228718820_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_22c65841a:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_84232_m))._field_Token));
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_228718820_possibleRefExpr(_self_, (*((*(_84232_m))._field_Index))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_22c6583a4:;
	};
}



inline void _22871b3a0_unsafeIndexing(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246b389d0_UnsafeIndexingExprModel> _86238_m) {
	_228718820_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_240e90b95_Production || (_2469b7067_Ptr((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr) || (_2469b85da_Map((*((*((*(_86238_m))._field_Node))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22c65d8c6:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_228718820_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_22c65e4dc:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".__at(", 6));
				_228718820_possibleRefExpr(_self_, (*((*((*(_86238_m))._field_Node))._field_Index))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_22c65e476:;
	};
}



inline void _22871b658_anonFunc(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685acda_AnonFnExprModel> _87932_m) {
	_2287ece21_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_87932_m))._field_Func);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("([=]", 4));
	_2287e061c_paramsIns((*(_self_))._field_oc, &((*((*(_87932_m))._field_Func))._field_Params));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" mutable -> ", 12));
	_2287ec74a_funcInsResult((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*(_87932_m))._field_Func));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_2287125d8_funcScope((*((*(_self_))._field_oc))._field_sc, (*(_87932_m))._field_Func);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871b911_mapExpr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685b66a_MapExprModel> _89031_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89031_m))._field_KeyKind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_89031_m))._field_ValKind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*(_89031_m))._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*(_89031_m))._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c66c3c9:;
			if (it != expr_end) {
				jule::I64 _89718_i = it - expr->begin();
				jule::Ptr<_24685b1b4_KeyValPairExprModel> _89725_pair = *it;
				{
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_228718820_possibleRefExpr(_self_, (*(_89725_pair))._field_Key);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_228718820_possibleRefExpr(_self_, (*(_89725_pair))._field_Val);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*(_89031_m))._field_Entries.len() - _89718_i) > 1LL)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_22c66c3c9:;
				++it;
				_89718_i++;
				goto _iter_begin_22c66c3c9;
			}
			_iter_end_22c66c3c9:;
		};
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _22871bbb9_slicing(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685bbed_SlicingExprModel> _91131_m) {
	_228718820_possibleRefExpr(_self_, (*(_91131_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_240e90b95_Production))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_91131_m))._field_Token));
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_228718820_possibleRefExpr(_self_, (*(_91131_m))._field_Left);
	if (((*(_91131_m))._field_Right != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_228718820_possibleRefExpr(_self_, (*(_91131_m))._field_Right);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871be72_traitSub(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685c281_TraitSubIdentExprModel> _92732_m) {
	static__22872a26b_traitDecl(&((*((*(_self_))._field_oc))._field_Buf), (*(_92732_m))._field_Trt);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("[(", 2));
	_228718820_possibleRefExpr(_self_, (*(_92732_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(").type_offset].", 15));
	static__228729b94_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_92732_m))._field_Method));
}



inline void _22871c22a_structureSub(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685cb22_StructSubIdentExprModel> _93636_m) {
	_228718820_possibleRefExpr(_self_, (*((*(_93636_m))._field_Expr))._field_Model);
	if (((*(_93636_m))._field_Field == nullptr)) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__22872ae1a_field(&((*((*(_self_))._field_oc))._field_Buf), &((*((*(_93636_m))._field_Field))._field_Decl));
}



inline void _22871c4d3_array(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685d4a2_ArrayExprModel> _94529_m) {
	_2287eb89d_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_94529_m))._field_Kind);
	if (((*(_94529_m))._field_Elems.len() == 0LL)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_94529_m))._field_Elems.len() == 2LL) && ((*(_94529_m))._field_Elems[1LL] == nullptr))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_228718820_possibleRefExpr(_self_, (*(_94529_m))._field_Elems[0LL]);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("({", 2));
	_22871929e_models(_self_, (*(_94529_m))._field_Elems);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _22871c78b_funcInsCommon(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246868c1b_FnIns> _96837_m) {
	_2287ece21_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _96837_m);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_22871ca44_funcIns(_self_, _96837_m);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871ca44_funcIns(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246868c1b_FnIns> _97531_m) {
	if ((((*(_97531_m))._field_Decl != nullptr) && (*((*(_97531_m))._field_Decl))._field_Binded)) {
		jule::Ptr<_24682e73c_Directive> _97713_d = _228804cb3_findDirective(&((*((*(_97531_m))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_97713_d != nullptr)) {
			_2287d80b5_writeBytes((*(_self_))._field_oc, _2287e4ba4_concatAllParts((*(_97713_d))._field_Args));
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__228729e80_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_97531_m));
}



inline void _22871ccec_tuple(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685d79e_TupleExprModel> _98629_m) {
	{
		auto expr = &((*(_98629_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c6866ce:;
		if (it != expr_end) {
			jule::I64 _98714_i = it - expr->begin();
			jule::Ptr<_246983ac2_Data> _98721_d = *it;
			{
				_228718820_possibleRefExpr(_self_, (*(_98721_d))._field_Model);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
				if ((((*(_98629_m))._field_Datas.len() - _98714_i) > 1LL)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_2287d86ae_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_22c6866ce:;
			++it;
			_98714_i++;
			goto _iter_begin_22c6866ce;
		}
		_iter_end_22c6866ce:;
	};
}



inline void _22871d0a5_newCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685e42b_BuiltinNewCallExprModel> _99731_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*(_99731_m))._field_Kind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*(_99731_m))._field_Init != nullptr)) {
		_228718820_possibleRefExpr(_self_, (*(_99731_m))._field_Init);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871d35d_outCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685db78_BuiltinOutCallExprModel> _100731_m) {
	if (((*(_100731_m))._field_Debug && _240e90b95_Production)) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_228718820_possibleRefExpr(_self_, (*(_100731_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871d616_outlnCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685e052_BuiltinOutlnCallExprModel> _101633_m) {
	if (((*(_101633_m))._field_Debug && _240e90b95_Production)) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_228718820_possibleRefExpr(_self_, (*(_101633_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871d8be_panicCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685e805_BuiltinPanicCallExprModel> _102533_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_228718820_possibleRefExpr(_self_, (*(_102533_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_102533_m))._field_Token));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _22871db77_assertCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685ecab_BuiltinAssertCallExprModel> _103334_m) {
	if (_240e90b95_Production) {
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_228718820_possibleRefExpr(_self_, (*(_103334_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_2287238d5_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*(_103334_m))._field_Log);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_2287da2b5_locInfo((*(_self_))._field_oc, &((*(_103334_m))._field_Token));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _22871de30_errorCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468618b2_BuiltinErrorCallExprModel> _104633_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_24686628a_IsVoid((*((*(_104633_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_22c697e60:;
				{
					jule::Ptr<_246922555_Var> _105117_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
					if ((*(_105117_v))._field_Ident.equal("error", 5)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_22c697e0a:;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_228803047_codeMut1((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), &((*((*(_104633_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_104633_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_22c69c283:;
				{
					jule::Ptr<_246922555_Var> _106317_v = (*((*(_104633_m))._field_Err))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8);;
					if ((*(_106317_v))._field_Ident.equal("error", 5)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_22c69c22d:;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(jule::Any(", 12));
	};
	_228718820_possibleRefExpr(_self_, (*((*(_104633_m))._field_Err))._field_Model);
	jule::I64 _10729_i = _2287d8d41_pushAnyType((*(_self_))._field_oc, (*((*(_104633_m))._field_Err))._field_Kind);;
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_10729_i));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _22871e1d8_copyCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468614d8_BuiltinCopyCallExprModel> _107832_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::copy((", 12));
	_228718820_possibleRefExpr(_self_, (*((*(_107832_m))._field_Dest))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_2469b6a4a_Prim((*((*(_107832_m))._field_Dest))._field_Kind.ptr()) != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", (", 3));
	_228718820_possibleRefExpr(_self_, (*((*(_107832_m))._field_Src))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_2469b6a4a_Prim((*((*(_107832_m))._field_Src))._field_Kind.ptr()) != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".fake_slice()", 13));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22871e491_lenCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246860938_BuiltinLenCallExprModel> _109431_m) {
	_228718820_possibleRefExpr(_self_, (*((*(_109431_m))._field_Expr))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _22871e749_capCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246860c35_BuiltinCapCallExprModel> _109931_m) {
	_228718820_possibleRefExpr(_self_, (*((*(_109931_m))._field_Expr))._field_Model);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _22871ea02_deleteCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24686110e_BuiltinDeleteCallExprModel> _110434_m) {
	_228718820_possibleRefExpr(_self_, (*((*(_110434_m))._field_Dest))._field_Model);
	if (((*(_110434_m))._field_Key != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".del(", 5));
		_228718820_possibleRefExpr(_self_, (*((*(_110434_m))._field_Key))._field_Model);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _22871ecaa_makeCallSlice(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246860262_BuiltinMakeCallExprModel>* _111538_m) {
	jule::Ptr<_2469c1758_Slc> _111613_slice = _2469b7aa1_Slc((*((*(_111538_m))))._field_Kind.ptr());;
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_111538_m))))._field_Kind);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_228718820_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_111538_m))))._field_Cap != nullptr)) {
		_228718820_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Cap);
	} else {
		_228718820_possibleRefExpr(_self_, (*((*(_111538_m))))._field_Len);
	};
	if (_228805445_shouldInitialized(&((*(_111613_slice))._field_Elem))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_228722ae3_initExpr(_self_, (*(_111613_slice))._field_Elem);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228720063_makeCallStr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246860262_BuiltinMakeCallExprModel>* _113336_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_228718820_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Len);
	if (((*((*(_113336_m))))._field_Cap != nullptr)) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_228718820_possibleRefExpr(_self_, (*((*(_113336_m))))._field_Cap);
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22872031b_makeCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246860262_BuiltinMakeCallExprModel> _114432_m) {
	if ((_2469b7aa1_Slc((*(_114432_m))._field_Kind.ptr()) != nullptr)) {
		_22871ecaa_makeCallSlice(_self_, &(_114432_m));
		return;;
	};
	_228720063_makeCallStr(_self_, &(_114432_m));
}



inline void _2287205c4_pushToSlice(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246b38e0e_PushToSliceExprModel> _115235_m) {
	;
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_2287e9eb7_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), (*((*(_115235_m))._field_Elems))._field_ElemKind);
	jule::Bool _116013_ptr = false;;
	{
		auto &_match_expr{ (*(_115235_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c6b7501:;
			{
				jule::Ptr<_24685847a_UnaryExprModel> _116417_u = (*(_115235_m))._field_Dest.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110);;
				if ((_2469b7067_Ptr((*((*(_116417_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_228718820_possibleRefExpr(_self_, (*((*(_116417_u))._field_Expr))._field_Model);
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_116013_ptr=true;
					goto _match_end_22c6b917e;
				};
				goto _case_begin_22c6b91d4;
			}
		}
		else {
			_case_begin_22c6b91d4:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_228718820_possibleRefExpr(_self_, (*(_115235_m))._field_Dest);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_22c6b917e:;
	};
	if (((*((*(_115235_m))._field_Elems))._field_Elems.len() == 1LL)) {
		if (_116013_ptr) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_228718820_possibleRefExpr(_self_, (*((*(_115235_m))._field_Elems))._field_Elems[0LL]);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_116013_ptr) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>((*((*(_115235_m))._field_Elems))._field_Elems.len())));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*((*(_115235_m))._field_Elems))._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c6c1cad:;
		if (it != expr_end) {
			jule::Any _119821_e = *it;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_116013_ptr) {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_228718820_possibleRefExpr(_self_, _119821_e);
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_22c6c1cad:;
			++it;
			goto _iter_begin_22c6c1cad;
		}
		_iter_end_22c6c1cad:;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _22872087c_appendToSlice(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246b392d8_AppendToSliceExprModel> _121237_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr(_self_, (*(_121237_m))._field_Dest);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_228718820_possibleRefExpr(_self_, (*(_121237_m))._field_Slice);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _228720b35_appendCall(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24686063b_BuiltinAppendCallExprModel> _122034_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_228718820_possibleRefExpr(_self_, (*(_122034_m))._field_Dest);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_228718820_possibleRefExpr(_self_, (*(_122034_m))._field_Elements);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228720ddd_sizeof(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685c46d_SizeofExprModel> _122830_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_228718820_possibleRefExpr(_self_, (*(_122830_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228721196_alignof(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468620dd_AlignofExprModel> _123431_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_228718820_possibleRefExpr(_self_, (*(_123431_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _22872144e_runeLit(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468623da_RuneExprModel> _124027_m) {
	if (((*(_124027_m))._field_Code <= 127LL)) {
		_2433b9ad3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _124317_b = _2287232b9_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>((*(_124027_m))._field_Code)));;
		if (_124317_b.equal("'", 1)) {
			_2433b9ad3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\\');
		};
		_2433b982a_WriteStr(&(*((*(_self_))._field_oc))._field_Buf, _124317_b);
		_2433b9ad3_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		return;;
	};
	_228724067_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>(static_cast<jule::I64>((*(_124027_m))._field_Code)));
}



inline void _228721707_structureStatic(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_24685d0c8_StructStaticIdentExprModel> _125439_m) {
	static__228729e80_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_125439_m))._field_Method));
}



inline void _2287219b0_integratedToStr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2468626d7_IntegratedToStrExprModel> _125839_m) {
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_228718820_possibleRefExpr(_self_, (*(_125839_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _228721c68_backendEmit(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246862ab1_BackendEmitExprModel> _126435_m) {
	if (((*(_126435_m))._field_Exprs.len() == 0LL)) {
		_2287d7d0c_write((*(_self_))._field_oc, (*(_126435_m))._field_Code);
		return;;
	};
	jule::I64 _12699_n = _2433ba5a6_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _127013_args = jule::Slice<jule::Any>::alloc((*(_126435_m))._field_Exprs.len(), (*(_126435_m))._field_Exprs.len());;
	{
		auto expr = &((*(_126435_m))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c6d461c:;
		if (it != expr_end) {
			jule::I64 _127114_i = it - expr->begin();
			jule::Any _127121_expr = *it;
			{
				_228718820_possibleRefExpr(_self_, _127121_expr);
				jule::Slice<jule::U8> _127317_buf = _2433baac3_Buf(&(*((*(_self_))._field_oc))._field_Buf);;
				_127013_args[_127114_i]=jule::Any(static_cast<jule::Str>(_127317_buf.slice(_12699_n)), &__jule_any_type4);
				{
					_2433bad7b_SetBuf(&(*((*(_self_))._field_oc))._field_Buf, _127317_buf.slice(0LL, _12699_n));
				};
			}
			_iter_next_22c6d461c:;
			++it;
			_127114_i++;
			goto _iter_begin_22c6d461c;
		}
		_iter_end_22c6d461c:;
	};
	_2287d7d0c_write((*(_self_))._field_oc, _246b23712_Format((*(_126435_m))._field_Code, _127013_args));
}



inline void _228722021_free(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246862dad_FreeExprModel> _128028_m) {
	_228718820_possibleRefExpr(_self_, (*(_128028_m))._field_Expr);
	if (_240e90502_RC) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _2287222c9_strComp(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246b37d53_StrCompExprModel> _128931_m) {
	if ((*(_128931_m))._field_NotEq) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _12939_s = _2445e5725_ReadStr((*(_128931_m))._field_Right.ptr());;
	_228718820_possibleRefExpr(_self_, (*(_128931_m))._field_Left);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_2287238d5_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), _12939_s);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(static_cast<jule::I64>(_12939_s.len())));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*(_128931_m))._field_NotEq) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _228722582_emptyCompare(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_246b37528_EmptyCompareExprModel> _130536_m) {
	if ((*(_130536_m))._field_Neg) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_228718820_possibleRefExpr(_self_, (*(_130536_m))._field_Expr);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _22872283a_model(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Any _131429_m) {
	{
		auto &_match_expr{ _131429_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_22c6e2c24:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, _131429_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_22c6e26b3:;
			{
				_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _131429_m.cast_ptr<_2469b43d8_TypeKind>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c6e28c2:;
			{
				_228716c5d_constant(_self_, _131429_m.cast_ptr<_2445e359c_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c6e2938:;
			{
				_228717995_var(_self_, _131429_m.cast_ptr<_246922555_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_22c6e29b0:;
			{
				_228717c4d_structureIns(_self_, _131429_m.cast_ptr<_246853ba1_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_22c6e2a37:;
			{
				_22871c78b_funcInsCommon(_self_, _131429_m.cast_ptr<_246868c1b_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_22c6e3719:;
			{
				_228717434_unsafeBinary(_self_, (*(_131429_m.cast_ptr<_246b386d3_UnsafeBinopExprModel>(&__jule_any_type126)))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_22c6e3791:;
			{
				_2287176dc_binary(_self_, _131429_m.cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c6e3818:;
			{
				_228718006_unary(_self_, _131429_m.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_22c6e3890:;
			{
				_2287182ae_structureLit(_self_, _131429_m.cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_22c6e3917:;
			{
				_228718567_allocStructure(_self_, _131429_m.cast_ptr<_24685914b_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_22c6e398e:;
			{
				_228718ee6_casting(_self_, _131429_m.cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22c6e3a16:;
			{
				_22871aa86_funcCall(_self_, _131429_m.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_22c6e3a8d:;
			{
				_22871ad3e_slice(_self_, _131429_m.cast_ptr<_24685a45a_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_22c6e3b15:;
			{
				_22871c4d3_array(_self_, _131429_m.cast_ptr<_24685d4a2_ArrayExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_22c6e3b8c:;
			{
				_22871b3a0_unsafeIndexing(_self_, _131429_m.cast_ptr<_246b389d0_UnsafeIndexingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22c6e3c14:;
			{
				_22871b0e7_indexing(_self_, _131429_m.cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_22c6e3c8b:;
			{
				_22871b658_anonFunc(_self_, _131429_m.cast_ptr<_24685acda_AnonFnExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_22c6e3d13:;
			{
				_22871b911_mapExpr(_self_, _131429_m.cast_ptr<_24685b66a_MapExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_22c6e3d8a:;
			{
				_22871bbb9_slicing(_self_, _131429_m.cast_ptr<_24685bbed_SlicingExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_22c6e3e12:;
			{
				_22871be72_traitSub(_self_, _131429_m.cast_ptr<_24685c281_TraitSubIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c6e3e89:;
			{
				_22871c22a_structureSub(_self_, _131429_m.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_22c6e4011:;
			{
				_22871ccec_tuple(_self_, _131429_m.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_22c6e4088:;
			{
				_22871d35d_outCall(_self_, _131429_m.cast_ptr<_24685db78_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_22c6e4110:;
			{
				_22871d616_outlnCall(_self_, _131429_m.cast_ptr<_24685e052_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_22c6e4187:;
			{
				_22871d0a5_newCall(_self_, _131429_m.cast_ptr<_24685e42b_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_22c6e420e:;
			{
				_22871d8be_panicCall(_self_, _131429_m.cast_ptr<_24685e805_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_22c6e4286:;
			{
				_22871db77_assertCall(_self_, _131429_m.cast_ptr<_24685ecab_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_22c6e430d:;
			{
				_22871de30_errorCall(_self_, _131429_m.cast_ptr<_2468618b2_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_22c6e4385:;
			{
				_22872031b_makeCall(_self_, _131429_m.cast_ptr<_246860262_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_22c6e440c:;
			{
				_228720b35_appendCall(_self_, _131429_m.cast_ptr<_24686063b_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_22c6e4484:;
			{
				_22871e1d8_copyCall(_self_, _131429_m.cast_ptr<_2468614d8_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_22c6e450b:;
			{
				_22871e491_lenCall(_self_, _131429_m.cast_ptr<_246860938_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_22c6e4583:;
			{
				_22871e749_capCall(_self_, _131429_m.cast_ptr<_246860c35_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_22c6e460a:;
			{
				_22871ea02_deleteCall(_self_, _131429_m.cast_ptr<_24686110e_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_22c6e4682:;
			{
				_228720ddd_sizeof(_self_, _131429_m.cast_ptr<_24685c46d_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_22c6e4709:;
			{
				_228721196_alignof(_self_, _131429_m.cast_ptr<_2468620dd_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_22c6e4781:;
			{
				_22872144e_runeLit(_self_, _131429_m.cast_ptr<_2468623da_RuneExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_22c6e4808:;
			{
				_228721707_structureStatic(_self_, _131429_m.cast_ptr<_24685d0c8_StructStaticIdentExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_22c6e4880:;
			{
				_2287219b0_integratedToStr(_self_, _131429_m.cast_ptr<_2468626d7_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_22c6e4907:;
			{
				_228721c68_backendEmit(_self_, _131429_m.cast_ptr<_246862ab1_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_22c6e497e:;
			{
				_228722021_free(_self_, _131429_m.cast_ptr<_246862dad_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_22c6e4a06:;
			{
				_2287222c9_strComp(_self_, _131429_m.cast_ptr<_246b37d53_StrCompExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_22c6e4a7d:;
			{
				_228717995_var(_self_, (*(_131429_m.cast_ptr<_246b37825_RefExprModel>(&__jule_any_type127)))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_22c6e4b05:;
			{
				_228722582_emptyCompare(_self_, _131429_m.cast_ptr<_246b37528_EmptyCompareExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_22c6e285b:;
			{
				_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_22c6e2806:;
	};
}



inline void _228722ae3_initExpr(jule::Ptr<_2287154cb_exprCoder> _self_, jule::Ptr<_2469b43d8_TypeKind> _141132_t) {
	if (_2469b6297_NilCompatible(_141132_t.ptr())) {
		if ((_2469b7067_Ptr(_141132_t.ptr()) != nullptr)) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _141132_t);
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_2469c234c_Tuple> _142113_tup = _2469b8871_Tup(_141132_t.ptr());;
	if ((_142113_tup != nullptr)) {
		_228802871_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _142113_tup);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_142113_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c710e40:;
			if (it != expr_end) {
				jule::I64 _142518_i = it - expr->begin();
				jule::Ptr<_2469b43d8_TypeKind> _142525_tt = *it;
				{
					if ((!(_228805445_shouldInitialized(&(_142525_tt))))) {
						goto _iter_next_22c710e40;
					};
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_2287d7d0c_write((*(_self_))._field_oc, _2445d3339_Itoa(_142518_i));
					_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_228722ae3_initExpr(_self_, _142525_tt);
					if ((((*(_142113_tup))._field_Types.len() - _142518_i) > 1LL)) {
						_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_22c710e40:;
				++it;
				_142518_i++;
				goto _iter_begin_22c710e40;
			}
			_iter_end_22c710e40:;
		};
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_24687b800_Enum> _144013_enm = _2469b72ed_Enum(_141132_t.ptr());;
	if ((_144013_enm != nullptr)) {
		_22872283a_model(_self_, (*((*((*((*(_144013_enm))._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _14459_prim = _2469b6a4a_Prim(_141132_t.ptr());;
	if ((_14459_prim != nullptr)) {
		if (_2445e30c4_IsNum((*(_14459_prim))._field_Kind)) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_2469c045a_IsBool(_14459_prim.ptr())) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_2469c06e1_IsStr(_14459_prim.ptr())) {
			_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_2469b781a_Arr(_141132_t.ptr()) != nullptr)) {
		jule::Ptr<_2469c3a79_Arr> _145717_arr = _2469b781a_Arr(_141132_t.ptr());;
		_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _141132_t);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_228722ae3_initExpr(_self_, (*(_145717_arr))._field_Elem);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_246853ba1_StructIns> _146413_s = _2469b80bd_Struct(_141132_t.ptr());;
	if ((((_146413_s != nullptr) && (*((*(_146413_s))._field_Decl))._field_Binded) && (_228804cb3_findDirective(&((*((*(_146413_s))._field_Decl))._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _141132_t);
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_2287ed284_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _141132_t);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _2287154cb_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228725cb1_TestCoder> static__228726201_New(jule::Ptr<_2287d7658_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_228725cb1_TestCoder>(_228725cb1_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _228726487_findTestingPackage(jule::Ptr<_228725cb1_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c720867:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_22c720867:;
			++it;
			goto _iter_begin_22c720867;
		}
		_iter_end_22c720867:;
	};
	return nullptr;;
}



inline void _228726740_appendTest(jule::Ptr<_228725cb1_TestCoder> _self_, jule::Ptr<_246868c1b_FnIns> _4434_f) {
	_2287d86ae_indent((*(_self_))._field_oc);
	_228726e7c_callTmReset(_self_);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_2287238d5_cstrLit(&((*((*(_self_))._field_oc))._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_2287d86ae_indent((*(_self_))._field_oc);
	static__228729e80_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4434_f));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _2287269e8_appendPackageTests(jule::Ptr<_228725cb1_TestCoder> _self_, jule::Ptr<_2468cbb08_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7271a9:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c727b05:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _6125_f = *it;
						{
							if (_22880517b_hasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_228726740_appendTest(_self_, (*(_6125_f))._field_Instances[0LL]);
							};
						}
						_iter_next_22c727b05:;
						++it;
						goto _iter_begin_22c727b05;
					}
					_iter_end_22c727b05:;
				};
			}
			_iter_next_22c7271a9:;
			++it;
			goto _iter_begin_22c7271a9;
		}
		_iter_end_22c7271a9:;
	};
}



inline jule::Bool _228726c7e_readyTestingPackage(jule::Ptr<_228725cb1_TestCoder> _self_) {
	jule::Ptr<_2468c8bd2_ImportInfo> _7013_p = _228726487_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*(_self_))._field_t=(*(_2468c9dae_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*(_self_))._field_tmReset=_246854c18_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*(_self_))._field_tmFailed=_246854c18_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Failed", 6), false);
	(*(_self_))._field_tmSkipped=_246854c18_FindMethod((*(_self_))._field_t.ptr(), jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _228726e7c_callTmReset(jule::Ptr<_228725cb1_TestCoder> _self_) {
	static__228729b94_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmReset));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _22872717a_callTmFailed(jule::Ptr<_228725cb1_TestCoder> _self_) {
	static__228729b94_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmFailed));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _228727378_callTmSkipped(jule::Ptr<_228725cb1_TestCoder> _self_) {
	static__228729b94_func(&((*((*(_self_))._field_oc))._field_Buf), &((*(_self_))._field_tmSkipped));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _228727576_Serialize(jule::Ptr<_228725cb1_TestCoder> _self_) {
	_2287e42ad_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_2287e40b0_end((*(_self_))._field_oc);
	});;
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	if ((!(_228726c7e_readyTestingPackage(_self_)))) {
		_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_2287d84b1_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_2433b0c50_StrBuilder _11813_tb = static__2433b1019_New(40LL);;
	_2287eb53a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &(_11813_tb), (*(_self_))._field_t);
	_2287e8ca7_asSptr((*((*(_self_))._field_oc))._field_tc.ptr(), &((*((*(_self_))._field_oc))._field_Buf), _2433baac3_Buf(&_11813_tb));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_2287d80b5_writeBytes((*(_self_))._field_oc, _2433baac3_Buf(&_11813_tb));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_2287d82b3_addIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_22872717a_callTmFailed(_self_);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_228727378_callTmSkipped(_self_);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_2287269e8_appendPackageTests(_self_, &((*((*((*(_self_))._field_oc))._field_ir))._field_Main));
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_2287d84b1_doneIndent((*(_self_))._field_oc);
	_2287d86ae_indent((*(_self_))._field_oc);
	_2287d7d0c_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _228725cb1_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__2287290b1_writeIdentTo(_2433b0c50_StrBuilder* _3433_buf, jule::Str* _3451_ident) {
	{
		auto expr = _3451_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c742438:;
		if (it != expr_end) {
			jule::U8 *_3516_b = it;
			{
				if (((*(_3516_b)) >= 128LLU)) {
					goto _julec_label_22c742779;
				};
			}
			_iter_next_22c742438:;
			++it;
			goto _iter_begin_22c742438;
		}
		_iter_end_22c742438:;
	};
	_2433b982a_WriteStr(_3433_buf, (*(_3451_ident)));
	return;;
	_julec_label_22c742779:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3451_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22c7437e1:;
		if (it != expr_end) {
			jule::I32 _4516_r = *it;
			{
				if ((_4516_r < 128LL)) {
					_2433b9ad3_WriteByte(_3433_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4516_r)));
					goto _iter_next_22c7437e1;
				};
				_2433b982a_WriteStr(_3433_buf, _2445d3070_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4516_r)), 15LL));
			}
			_iter_next_22c7437e1:;
			++it;
			goto _iter_begin_22c7437e1;
		}
		_iter_end_22c7437e1:;
	};
}



inline void static__228729457_toOut(_2433b0c50_StrBuilder* _6226_buf, jule::Str _6243_ident, jule::Uintptr _6255_addr) {
	_2433b9ad3_WriteByte(_6226_buf, '_');
	if ((_6255_addr != 0LLU)) {
		_2433b982a_WriteStr(_6226_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6255_addr)), 15LL));
		_2433b9ad3_WriteByte(_6226_buf, '_');
	};
	static__2287290b1_writeIdentTo(_6226_buf, &(_6243_ident));
}



inline void static__2287298a8_toLocal(_2433b0c50_StrBuilder* _7728_buf, jule::I64 _7745_row, jule::I64 _7755_col, jule::Str* _7766_ident) {
	_2433b9ad3_WriteByte(_7728_buf, '_');
	_2433b982a_WriteStr(_7728_buf, _2445d3339_Itoa(_7745_row));
	_2433b982a_WriteStr(_7728_buf, _2445d3339_Itoa(_7755_col));
	_2433b9ad3_WriteByte(_7728_buf, '_');
	static__2287290b1_writeIdentTo(_7728_buf, _7766_ident);
}



inline void static__228729b94_func(_2433b0c50_StrBuilder* _8525_buf, jule::Ptr<_246865d17_Fn>* _8543_f) {
	{
		
		if ((*((*(_8543_f))))._field_Binded) {
			_case_begin_22c7482a7:;
			{
				_2433b982a_WriteStr(_8525_buf, (*((*(_8543_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8543_f))))._field_Ident.equal("main", 4)) {
			_case_begin_22c74832e:;
			{
				_2433b982a_WriteStr(_8525_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_246866521_IsMethod((*(_8543_f)).ptr())) {
			_case_begin_22c7483a6:;
			{
				if ((*((*(_8543_f))))._field_Statically) {
					_2433b982a_WriteStr(_8525_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_22c748186:;
	};
	static__228729457_toOut(_8525_buf, (*((*(_8543_f))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8543_f)))));
}



inline void static__228729e80_funcIns(_2433b0c50_StrBuilder* _10128_buf, jule::Ptr<_246868c1b_FnIns>* _10146_f) {
	if (_24686a1a1_IsBuiltin((*(_10146_f)).ptr())) {
		_2433b982a_WriteStr(_10128_buf, jule::Str::lit("jule::", 6));
		_2433b982a_WriteStr(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*((*((*(_10146_f))))._field_Decl))._field_Binded || ((*((*(_10146_f))))._field_Generics.len() == 0LL))) {
		static__228729b94_func(_10128_buf, &((*((*(_10146_f))))._field_Decl));
		return;;
	};
	static__228729457_toOut(_10128_buf, (*((*((*(_10146_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_10146_f)))));
}



inline void static__22872a26b_traitDecl(_2433b0c50_StrBuilder* _11630_buf, jule::Ptr<_2468790e4_Trait> _11647_t) {
	static__228729457_toOut(_11630_buf, (*(_11647_t))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11647_t)));
}



inline void static__22872a557_param(_2433b0c50_StrBuilder* _12026_buf, jule::Ptr<_246864343_Param>* _12044_p) {
	if ((_24681ca6b_IsAnonIdent((*((*(_12044_p))))._field_Ident) || _24681c7a2_IsIgnoreIdent((*((*(_12044_p))))._field_Ident))) {
		return;;
	};
	if (_24686495e_IsSelf((*(_12044_p)).ptr())) {
		_2433b982a_WriteStr(_12026_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12044_p))))._field_Token == nullptr)) {
		static__2287298a8_toLocal(_12026_buf, 0LL, 0LL, &((*((*(_12044_p))))._field_Ident));
		return;;
	};
	static__2287298a8_toLocal(_12026_buf, (*((*((*(_12044_p))))._field_Token))._field_Row, (*((*((*(_12044_p))))._field_Token))._field_Column, &((*((*(_12044_p))))._field_Ident));
}



inline void static__22872a843_structure(_2433b0c50_StrBuilder* _13530_buf, jule::Ptr<_246850e23_Struct>* _13548_s) {
	if ((*((*(_13548_s))))._field_Binded) {
		if ((!(_22880517b_hasDirective(&((*((*(_13548_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_2433b982a_WriteStr(_13530_buf, jule::Str::lit("struct ", 7));
		};
		_2433b982a_WriteStr(_13530_buf, (*((*(_13548_s))))._field_Ident);
		return;;
	};
	static__228729457_toOut(_13530_buf, (*((*(_13548_s))))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_13548_s)))));
}



inline void static__22872ab2e_structureIns(_2433b0c50_StrBuilder* _14633_buf, jule::Ptr<_246853ba1_StructIns>* _14651_s) {
	if (((*((*((*(_14651_s))))._field_Decl))._field_Binded || ((*((*(_14651_s))))._field_Generics.len() == 0LL))) {
		static__22872a843_structure(_14633_buf, &((*((*(_14651_s))))._field_Decl));
		return;;
	};
	static__228729457_toOut(_14633_buf, (*((*((*(_14651_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14651_s)))));
}



inline void static__22872ae1a_field(_2433b0c50_StrBuilder* _15426_buf, jule::Ptr<_24684d030_Field>* _15444_f) {
	if ((*((*((*(_15444_f))))._field_Owner))._field_Binded) {
		_2433b982a_WriteStr(_15426_buf, (*((*(_15444_f))))._field_Ident);
		return;;
	};
	_2433b982a_WriteStr(_15426_buf, jule::Str::lit("_field_", 7));
	static__2287290b1_writeIdentTo(_15426_buf, &((*((*(_15444_f))))._field_Ident));
}



inline void static__22872b206_var(_2433b0c50_StrBuilder* _16424_buf, jule::Ptr<_246922555_Var> _16445_v) {
	{
		
		if ((*(_16445_v))._field_Binded) {
			_case_begin_22c756c33:;
			{
				_2433b982a_WriteStr(_16424_buf, (*(_16445_v))._field_Ident);
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("error", 5)) {
			_case_begin_22c756c99:;
			{
				_2433b982a_WriteStr(_16424_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16445_v))._field_Ident.equal("self", 4)) {
			_case_begin_22c756d10:;
			{
				_2433b982a_WriteStr(_16424_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16445_v))._field_RetOrder == -1LL)) {
			_case_begin_22c756d76:;
			{
				_2433b982a_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16445_v))._field_RetOrder >= 0LL)) {
			_case_begin_22c75777d:;
			{
				_2433b982a_WriteStr(_16424_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2433b982a_WriteStr(_16424_buf, _2445d3339_Itoa((*(_16445_v))._field_RetOrder));
			}
		}
		else if (((*(_16445_v))._field_Scope != nullptr)) {
			_case_begin_22c7577e4:;
			{
				static__2287298a8_toLocal(_16424_buf, (*((*(_16445_v))._field_Token))._field_Row, (*((*(_16445_v))._field_Token))._field_Column, &((*(_16445_v))._field_Ident));
			}
		}
		else {
			_case_begin_22c756bbc:;
			{
				static__228729457_toOut(_16424_buf, (*(_16445_v))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_16445_v)));
			}
		}
		_match_end_22c756b01:;
	};
}



inline void static__22872b4e2_iterBegin(_2433b0c50_StrBuilder* _18630_buf, jule::Uintptr _18647_it) {
	_2433b982a_WriteStr(_18630_buf, jule::Str::lit("_iter_begin_", 12));
	_2433b982a_WriteStr(_18630_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18647_it)), 15LL));
}



inline void static__22872b7cd_iterEnd(_2433b0c50_StrBuilder* _19128_buf, jule::Uintptr _19145_it) {
	_2433b982a_WriteStr(_19128_buf, jule::Str::lit("_iter_end_", 10));
	_2433b982a_WriteStr(_19128_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19145_it)), 15LL));
}



inline void static__22872bab9_iterNext(_2433b0c50_StrBuilder* _19629_buf, jule::Uintptr _19646_it) {
	_2433b982a_WriteStr(_19629_buf, jule::Str::lit("_iter_next_", 11));
	_2433b982a_WriteStr(_19629_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19646_it)), 15LL));
}



inline void static__22872bda5_label(_2433b0c50_StrBuilder* _20126_buf, jule::Uintptr _20143_u) {
	_2433b982a_WriteStr(_20126_buf, jule::Str::lit("_julec_label_", 13));
	_2433b982a_WriteStr(_20126_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20143_u)), 15LL));
}



inline void static__22872c191_matchEnd(_2433b0c50_StrBuilder* _20629_buf, jule::Uintptr _20646_m) {
	_2433b982a_WriteStr(_20629_buf, jule::Str::lit("_match_end_", 11));
	_2433b982a_WriteStr(_20629_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20646_m)), 15LL));
}



inline void static__22872c47c_caseBegin(_2433b0c50_StrBuilder* _21130_buf, jule::Uintptr _21147_c) {
	_2433b982a_WriteStr(_21130_buf, jule::Str::lit("_case_begin_", 12));
	_2433b982a_WriteStr(_21130_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21147_c)), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _228728a83_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2287d5b40_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2287d6217_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2287d65e1_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2287e714b_Str(_2287e6cc7_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _2287e748c_Equal(jule::Ptr<_2287e6cc7_customType> _self_, jule::Ptr<_2469b43d8_TypeKind> _4121_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _2287e6cc7_customType _Src) {
	_Stream << _2287e714b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_2287e78bb_typeCoder> static__2287e7e0a_new(jule::Ptr<_2287d7658_ObjectCoder>* _6524_oc) {
	jule::Ptr<_2287e78bb_typeCoder> _6613_tc = jule::new_ptr<_2287e78bb_typeCoder>(_2287e78bb_typeCoder{._field_oc=(*(_6524_oc)), });;
	(*(_6613_tc))._field_rc=static__228800e8a_new(&(_6613_tc));
	return _6613_tc;;
}



inline void _2287e826d_toType(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _7230_buf, jule::Str _7251_id) {
	if ((!_7251_id.equal("uintptr", 7))) {
		_7251_id=_2445d53d5_RealKindOf(_7251_id);
	};
	_2433b982a_WriteStr(_7230_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7251_id[0LL]) && (_7251_id[0LL] <= 122LLU))) {
		_2433b9ad3_WriteByte(_7230_buf, static_cast<jule::U8>((_7251_id[0LL] - 32LLU)));
	} else {
		_2433b9ad3_WriteByte(_7230_buf, _7251_id[0LL]);
	};
	_2433b982a_WriteStr(_7230_buf, _7251_id.slice(1LL));
}



inline void _2287e85d1_prim(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _8628_buf, jule::Ptr<_2469bc259_Prim> _8645_p) {
	_2287e826d_toType(_self_, _8628_buf, (*(_8645_p))._field_Kind);
}



inline void _2287e8944_tuple(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _9129_buf, jule::Ptr<_2469c234c_Tuple> _9150_t) {
	_2433b982a_WriteStr(_9129_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*(_9150_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8b6b0c:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_2469b43d8_TypeKind> _9321_tk = *it;
			{
				_2287ed284_kind(_self_, _9129_buf, _9321_tk);
				if ((((*(_9150_t))._field_Types.len() - _9314_i) > 1LL)) {
					_2433b9ad3_WriteByte(_9129_buf, ',');
				};
			}
			_iter_next_22c8b6b0c:;
			++it;
			_9314_i++;
			goto _iter_begin_22c8b6b0c;
		}
		_iter_end_22c8b6b0c:;
	};
	_2433b9ad3_WriteByte(_9129_buf, '>');
}



inline void _2287e8ca7_asSptr(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _10330_buf, jule::Slice<jule::U8> _10347_elem) {
	_2433b982a_WriteStr(_10330_buf, jule::Str::lit("jule::Ptr<", 10));
	_2433b9572_Write(_10330_buf, _10347_elem);
	_2433b9ad3_WriteByte(_10330_buf, '>');
}



inline void _2287e911a_sptr(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _11028_buf, jule::Ptr<_2469c0c85_Sptr> _11049_sptr) {
	_2433b982a_WriteStr(_11028_buf, jule::Str::lit("jule::Ptr<", 10));
	_2287ed284_kind(_self_, _11028_buf, (*(_11049_sptr))._field_Elem);
	_2433b9ad3_WriteByte(_11028_buf, '>');
}



inline void _2287e947d_ptr(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _11727_buf, jule::Ptr<_2469c454c_Ptr> _11748_p) {
	;
	if (_2469c5086_IsUnsafe(_11748_p.ptr())) {
		_2433b982a_WriteStr(_11727_buf, jule::Str::lit("void*", 5));
	} else {
		_2287ed284_kind(_self_, _11727_buf, (*(_11748_p))._field_Elem);
		_2433b982a_WriteStr(_11727_buf, jule::Str::lit("*", 1));
	};
}



inline void _2287e97e1_enumDecl(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _12832_buf, jule::Ptr<_24687b800_Enum> _12853_e) {
	_2287ed284_kind(_self_, _12832_buf, (*((*(_12853_e))._field_Kind))._field_Kind);
}



inline void _2287e9b54_typeEnumDecl(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _13336_buf, jule::Ptr<_24687d00a_TypeEnum> _13357_e) {
	_2433b982a_WriteStr(_13336_buf, jule::Str::lit("jule::Any", 9));
}



inline void _2287e9eb7_asSlice(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _13731_buf, jule::Ptr<_2469b43d8_TypeKind> _13752_elem) {
	_2433b982a_WriteStr(_13731_buf, jule::Str::lit("jule::Slice<", 12));
	_2287ed284_kind(_self_, _13731_buf, _13752_elem);
	_2433b9ad3_WriteByte(_13731_buf, '>');
}



inline void _2287ea32a_slice(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _14429_buf, jule::Ptr<_2469c1758_Slc> _14450_s) {
	_2287e9eb7_asSlice(_self_, _14429_buf, (*(_14450_s))._field_Elem);
}



inline void _2287ea68d_mapType(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _14931_buf, jule::Ptr<_2469c2dec_Map> _14952_m) {
	_2433b982a_WriteStr(_14931_buf, jule::Str::lit("jule::Map<", 10));
	_2287ed284_kind(_self_, _14931_buf, (*(_14952_m))._field_Key);
	_2433b9ad3_WriteByte(_14931_buf, ',');
	_2287ed284_kind(_self_, _14931_buf, (*(_14952_m))._field_Val);
	_2433b9ad3_WriteByte(_14931_buf, '>');
}



inline void _2287ead64_traitDecl(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _16433_buf, jule::Ptr<_2468790e4_Trait> _16450_t) {
	_2433b982a_WriteStr(_16433_buf, jule::Str::lit("jule::Trait<", 12));
	static__22872a26b_traitDecl(_16433_buf, _16450_t);
	_2433b9ad3_WriteByte(_16433_buf, '>');
}



inline void _2287eb1c7_structure(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _17133_buf, jule::Ptr<_246850e23_Struct> _17150_s) {
	static__22872a843_structure(_17133_buf, &(_17150_s));
}



inline void _2287eb53a_structureIns(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _17636_buf, jule::Ptr<_246853ba1_StructIns> _17657_s) {
	if ((!((*((*(_17657_s))._field_Decl))._field_Binded))) {
		static__22872ab2e_structureIns(_17636_buf, &(_17657_s));
		return;;
	};
	jule::Ptr<_24682e73c_Directive> _1819_d = _228804cb3_findDirective(&((*((*(_17657_s))._field_Decl))._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1819_d != nullptr)) {
		_2433b9572_Write(_17636_buf, _2287e4ba4_concatAllParts((*(_1819_d))._field_Args));
		_2433b982a_WriteStr(_17636_buf, jule::Str::lit("::", 2));
	};
	static__22872ab2e_structureIns(_17636_buf, &(_17657_s));
	if (((*(_17657_s))._field_Generics.len() > 0LL)) {
		_2433b9ad3_WriteByte(_17636_buf, '<');
		{
			auto expr = &((*(_17657_s))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c8c617c:;
			if (it != expr_end) {
				jule::I64 _18918_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> _18925_g = *it;
				{
					_2287ed284_kind(_self_, _17636_buf, (*(_18925_g))._field_Kind);
					if ((((*(_17657_s))._field_Generics.len() - _18918_i) > 1LL)) {
						_2433b9ad3_WriteByte(_17636_buf, ',');
					};
				}
				_iter_next_22c8c617c:;
				++it;
				_18918_i++;
				goto _iter_begin_22c8c617c;
			}
			_iter_end_22c8c617c:;
		};
		_2433b9ad3_WriteByte(_17636_buf, '>');
	};
}



inline void _2287eb89d_array(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _20029_buf, jule::Ptr<_2469c3a79_Arr> _20050_a) {
	_2433b982a_WriteStr(_20029_buf, jule::Str::lit("jule::Array<", 12));
	_2287ed284_kind(_self_, _20029_buf, (*(_20050_a))._field_Elem);
	_2433b9ad3_WriteByte(_20029_buf, ',');
	_2433b982a_WriteStr(_20029_buf, _2445d3339_Itoa((*(_20050_a))._field_N));
	_2433b9ad3_WriteByte(_20029_buf, '>');
}



inline void _2287ec074_paramIns(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _22332_buf, jule::Ptr<_246867c70_ParamIns>* _22354_p) {
	if ((*((*((*(_22354_p))))._field_Decl))._field_Variadic) {
		_2433b982a_WriteStr(_22332_buf, jule::Str::lit("jule::Slice<", 12));
		_2287ed284_kind(_self_, _22332_buf, (*((*(_22354_p))))._field_Kind);
		_2433b9ad3_WriteByte(_22332_buf, '>');
	} else {
		_2287ed284_kind(_self_, _22332_buf, (*((*(_22354_p))))._field_Kind);
	};
	if ((*((*((*(_22354_p))))._field_Decl))._field_Reference) {
		_2433b9ad3_WriteByte(_22332_buf, '*');
	};
}



inline void _2287ec74a_funcInsResult(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _25537_s, jule::Ptr<_246868c1b_FnIns>* _25557_f) {
	if (_24686628a_IsVoid((*((*(_25557_f))))._field_Decl.ptr())) {
		if ((*((*((*(_25557_f))))._field_Decl))._field_Exceptional) {
			_2433b982a_WriteStr(_25537_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_2433b982a_WriteStr(_25537_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*((*((*(_25557_f))))._field_Decl))._field_Exceptional) {
		_2433b982a_WriteStr(_25537_s, jule::Str::lit("jule::Exceptional<", 18));
		_228803047_codeMut1((*(_self_))._field_rc.ptr(), _25537_s, &((*((*(_25557_f))))._field_Result));
		_2433b9ad3_WriteByte(_25537_s, '>');
		return;;
	};
	_228803047_codeMut1((*(_self_))._field_rc.ptr(), _25537_s, &((*((*(_25557_f))))._field_Result));
}



inline void _2287ecaad_anonFunc(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _27332_buf, jule::Ptr<_246868c1b_FnIns> _27353_f) {
	if ((((*(_27353_f))._field_Result != nullptr) && (_2469b8871_Tup((*(_27353_f))._field_Result.ptr()) != nullptr))) {
		_2287d90e9_pushResultIns((*(_self_))._field_oc, &(_27353_f));
	};
	_2287ec74a_funcInsResult(_self_, _27332_buf, &(_27353_f));
	_2433b9ad3_WriteByte(_27332_buf, '(');
	if (((*(_27353_f))._field_Params.len() > 0LL)) {
		{
			auto expr = &((*(_27353_f))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c8dc4c3:;
			if (it != expr_end) {
				jule::I64 _28018_i = it - expr->begin();
				jule::Ptr<_246867c70_ParamIns> _28025_param = *it;
				{
					if (_24686495e_IsSelf((*(_28025_param))._field_Decl.ptr())) {
						goto _iter_next_22c8dc4c3;
					};
					_2287ec074_paramIns(_self_, _27332_buf, &(_28025_param));
					if ((((*(_27353_f))._field_Params.len() - _28018_i) > 1LL)) {
						_2433b9ad3_WriteByte(_27332_buf, ',');
					};
				}
				_iter_next_22c8dc4c3:;
				++it;
				_28018_i++;
				goto _iter_begin_22c8dc4c3;
			}
			_iter_end_22c8dc4c3:;
		};
	} else {
		_2433b982a_WriteStr(_27332_buf, jule::Str::lit("void", 4));
	};
	_2433b9ad3_WriteByte(_27332_buf, ')');
}



inline void _2287ece21_func(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _29628_buf, jule::Ptr<_246868c1b_FnIns> _29649_f) {
	_2433b982a_WriteStr(_29628_buf, jule::Str::lit("jule::Fn<", 9));
	_2287ecaad_anonFunc(_self_, _29628_buf, _29649_f);
	_2433b9ad3_WriteByte(_29628_buf, '>');
}



inline void _2287ed284_kind(_2287e78bb_typeCoder* _self_, _2433b0c50_StrBuilder* _30328_buf, jule::Ptr<_2469b43d8_TypeKind> _30349_k) {
	{
		
		if ((_2469b80bd_Struct(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e17e6:;
			{
				_2287eb53a_structureIns(_self_, _30328_buf, _2469b80bd_Struct(_30349_k.ptr()));
				return;;
			}
		}
		else if (_2469b5241_Binded(_30349_k.ptr())) {
			_case_begin_22c8e186d:;
			{
				_2433b982a_WriteStr(_30328_buf, (*(_30349_k))._field_BindIdent);
				return;;
			}
		}
		else if ((_2469b6a4a_Prim(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e18e5:;
			{
				_2287e85d1_prim(_self_, _30328_buf, _2469b6a4a_Prim(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b8871_Tup(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e196c:;
			{
				_2287e8944_tuple(_self_, _30328_buf, _2469b8871_Tup(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b6cd1_Sptr(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e19e4:;
			{
				_2287e911a_sptr(_self_, _30328_buf, _2469b6cd1_Sptr(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b7067_Ptr(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1a6b:;
			{
				_2287e947d_ptr(_self_, _30328_buf, _2469b7067_Ptr(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b72ed_Enum(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1ae3:;
			{
				_2287e97e1_enumDecl(_self_, _30328_buf, _2469b72ed_Enum(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b7584_TypeEnum(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1b6a:;
			{
				_2287e9b54_typeEnumDecl(_self_, _30328_buf, _2469b7584_TypeEnum(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b7aa1_Slc(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1be2:;
			{
				_2287ea32a_slice(_self_, _30328_buf, _2469b7aa1_Slc(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b85da_Map(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1c69:;
			{
				_2287ea68d_mapType(_self_, _30328_buf, _2469b85da_Map(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b8354_Trait(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1ce1:;
			{
				_2287ead64_traitDecl(_self_, _30328_buf, _2469b8354_Trait(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b781a_Arr(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1d68:;
			{
				_2287eb89d_array(_self_, _30328_buf, _2469b781a_Arr(_30349_k.ptr()));
				return;;
			}
		}
		else if ((_2469b7d37_Fn(_30349_k.ptr()) != nullptr)) {
			_case_begin_22c8e1de0:;
			{
				_2287ece21_func(_self_, _30328_buf, _2469b7d37_Fn(_30349_k.ptr()));
				return;;
			}
		}
		_match_end_22c8e161a:;
	};
	{
		auto &_match_expr{ (*(_30349_k))._field_Kind };
		
		if (_match_expr.type_is(true, 28)) {
			_case_begin_22c8e1e9a:;
			{
				_2433b982a_WriteStr(_30328_buf, (*((*(_30349_k))._field_Kind.cast_ptr<_2287e6cc7_customType>(28)))._field_kind);
			}
		}
		else {
			_case_begin_22c8ea59c:;
			{
				_2433b982a_WriteStr(_30328_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_22c8ea547:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _2287e78bb_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2288009b2_resultCoder> static__228800e8a_new(jule::Ptr<_2287e78bb_typeCoder>* _37024_tc) {
	return jule::new_ptr<_2288009b2_resultCoder>(_2288009b2_resultCoder{._field_tc=(*(_37024_tc))});;
}



inline void _2288012ed_ptr(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _37427_s, jule::Ptr<_2469c454c_Ptr> _37446_p) {
	_2433b982a_WriteStr(_37427_s, jule::Str::lit("p", 1));
	_228802bd4_codeMut(_self_, _37427_s, &((*(_37446_p))._field_Elem));
}



inline void _228801661_sptr(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _37928_s, jule::Ptr<_2469c0c85_Sptr> _37947_p) {
	_2433b982a_WriteStr(_37928_s, jule::Str::lit("x", 1));
	_228802bd4_codeMut(_self_, _37928_s, &((*(_37947_p))._field_Elem));
}



inline void _2288019c4_mapType(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _38431_s, jule::Ptr<_2469c2dec_Map> _38450_p) {
	_2433b982a_WriteStr(_38431_s, jule::Str::lit("m", 1));
	_228802bd4_codeMut(_self_, _38431_s, &((*(_38450_p))._field_Key));
	_228802bd4_codeMut(_self_, _38431_s, &((*(_38450_p))._field_Val));
}



inline void _228801d37_slice(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _39029_s, jule::Ptr<_2469c1758_Slc> _39048_slc) {
	_2433b982a_WriteStr(_39029_s, jule::Str::lit("s", 1));
	_228802bd4_codeMut(_self_, _39029_s, &((*(_39048_slc))._field_Elem));
}



inline void _22880219a_arr(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _39527_s, jule::Ptr<_2469c3a79_Arr> _39546_arr) {
	_2433b982a_WriteStr(_39527_s, jule::Str::lit("a", 1));
	_2433b982a_WriteStr(_39527_s, _2445d3070_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>((*(_39546_arr))._field_N)), 16LL));
	_228802bd4_codeMut(_self_, _39527_s, &((*(_39546_arr))._field_Elem));
}



inline void _22880250d_func(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _40128_s, jule::Ptr<_246868c1b_FnIns> _40147_f) {
	_2433b982a_WriteStr(_40128_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_40147_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c902c25:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> _40321_p = *it;
			{
				if ((*((*(_40321_p))._field_Decl))._field_Reference) {
					_2433b982a_WriteStr(_40128_s, jule::Str::lit("r", 1));
				};
				_228802bd4_codeMut(_self_, _40128_s, &((*(_40321_p))._field_Kind));
			}
			_iter_next_22c902c25:;
			++it;
			goto _iter_begin_22c902c25;
		}
		_iter_end_22c902c25:;
	};
	if (((*(_40147_f))._field_Result != nullptr)) {
		_228802bd4_codeMut(_self_, _40128_s, &((*(_40147_f))._field_Result));
	};
}



inline void _228802871_tup(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _41427_s, jule::Ptr<_2469c234c_Tuple> _41446_tup) {
	{
		auto expr = &((*(_41446_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c9053ba:;
		if (it != expr_end) {
			jule::Ptr<_2469b43d8_TypeKind> _41521_t = *it;
			{
				_2433b982a_WriteStr(_41427_s, jule::Str::lit("__jule_tuple_", 13));
				_228802bd4_codeMut(_self_, _41427_s, &(_41521_t));
			}
			_iter_next_22c9053ba:;
			++it;
			goto _iter_begin_22c9053ba;
		}
		_iter_end_22c9053ba:;
	};
}



inline void _228802bd4_codeMut(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _42131_s, jule::Ptr<_2469b43d8_TypeKind>* _42151_t) {
	{
		auto &_match_expr{ (*((*(_42151_t))))._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_22c906630:;
			{
				_2288012ed_ptr(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c454c_Ptr>(27));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_22c9069e8:;
			{
				_228801661_sptr(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c0c85_Sptr>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_22c906a5e:;
			{
				_2288019c4_mapType(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c2dec_Map>(25));
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_22c906ac5:;
			{
				_228801d37_slice(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c1758_Slc>(23));
			}
		}
		else if (_match_expr.type_is(true, 26)) {
			_case_begin_22c906b4c:;
			{
				_22880219a_arr(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c3a79_Arr>(26));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_22c9070d1:;
			{
				_22880250d_func(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_246868c1b_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_22c907158:;
			{
				jule::Ptr<_24687b800_Enum> _43613_te = (*((*(_42151_t))))._field_Kind.cast_ptr<_24687b800_Enum>(3);;
				static__228729457_toOut(_42131_s, (*(_43613_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43613_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_22c9071d0:;
			{
				jule::Ptr<_24687d00a_TypeEnum> _43913_te = (*((*(_42151_t))))._field_Kind.cast_ptr<_24687d00a_TypeEnum>(4);;
				static__228729457_toOut(_42131_s, (*(_43913_te))._field_Ident, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43913_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_22c907257:;
			{
				jule::Ptr<_246853ba1_StructIns> _44217_si = (*((*(_42151_t))))._field_Kind.cast_ptr<_246853ba1_StructIns>(0);;
				static__22872ab2e_structureIns(_42131_s, &(_44217_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_22c9072ce:;
			{
				jule::Ptr<_2468790e4_Trait> _44517_trt = (*((*(_42151_t))))._field_Kind.cast_ptr<_2468790e4_Trait>(2);;
				static__22872a26b_traitDecl(_42131_s, _44517_trt);
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_22c907356:;
			{
				_2433b982a_WriteStr(_42131_s, (*((*((*(_42151_t))))._field_Kind.cast_ptr<_2469bc259_Prim>(21)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_22c9073cd:;
			{
				_228802871_tup(_self_, _42131_s, (*((*(_42151_t))))._field_Kind.cast_ptr<_2469c234c_Tuple>(24));
			}
		}
		else {
			_case_begin_22c906982:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:452:13"));;
			}
		}
		_match_end_22c90692c:;
	};
}



inline void _228803047_codeMut1(_2288009b2_resultCoder* _self_, _2433b0c50_StrBuilder* _45632_s, jule::Ptr<_2469b43d8_TypeKind>* _45652_t) {
	jule::Ptr<_2469c234c_Tuple> _45713_tup = _2469b8871_Tup((*(_45652_t)).ptr());;
	if ((_45713_tup != nullptr)) {
		_228802871_tup(_self_, _45632_s, _45713_tup);
	} else {
		_2287ed284_kind((*(_self_))._field_tc.ptr(), _45632_s, (*(_45652_t)));
	};
}



inline jule::Slice<jule::U8> _228803355_code(_2288009b2_resultCoder* _self_, jule::Ptr<_2469b43d8_TypeKind>* _46528_t) {
	_2433b0c50_StrBuilder _46613_s = static__2433b1019_New(20LL);;
	_228802bd4_codeMut(_self_, &(_46613_s), _46528_t);
	return _2433baac3_Buf(&_46613_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _2288009b2_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _22c912482_Name(_22c912064_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22c9125d6_What(_22c912064_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22c91273a_Reset(_22c912064_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22c91288e_Short(_22c912064_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _22c912064_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22c9157e8_Name(_22c915bb1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22c91593b_What(_22c915bb1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22c915e9c_Reset(_22c915bb1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22c9160e0_Short(_22c915bb1_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _22c915bb1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22c918ee4_Name(_22c9193ac_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22c919137_What(_22c9193ac_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22c919698_Reset(_22c9193ac_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22c9197db_Short(_22c9193ac_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _22c9193ac_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22c91c734_Name(_22c91caec_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22c91c877_What(_22c91caec_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22c91cdd8_Reset(_22c91caec_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22c91d02b_Short(_22c91caec_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _22c91caec_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _22c920e30_Name(_22c9212e8_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _22c921073_What(_22c9212e8_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _22c9215d4_Reset(_22c9212e8_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _22c921727_Short(_22c9212e8_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _22c9212e8_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_228872061_FlagSet> static__22887234c_New(void) {
	return jule::new_ptr<_228872061_FlagSet>(_228872061_FlagSet{._field_flags=jule::Slice<jule::Trait<_2288704b0_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_2288704b0_CommonFlag> _2288727c0_FindFlag(_228872061_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c92aa83:;
		if (it != expr_end) {
			jule::Trait<_2288704b0_CommonFlag> _7221_flag = *it;
			{
				if ((_2288704b0_CommonFlag_mptr_data[(_7221_flag).type_offset]._22883d769_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_22c92aa83:;
			++it;
			goto _iter_begin_22c92aa83;
		}
		_iter_end_22c92aa83:;
	};
	return nullptr;;
}



inline jule::Trait<_2288704b0_CommonFlag> _228872b11_FindFlagShort(_228872061_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c92c38c:;
		if (it != expr_end) {
			jule::Trait<_2288704b0_CommonFlag> _8221_flag = *it;
			{
				if ((_2288704b0_CommonFlag_mptr_data[(_8221_flag).type_offset]._22883d912_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_22c92c38c:;
			++it;
			goto _iter_begin_22c92c38c;
		}
		_iter_end_22c92c38c:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _2288731d8_Parse(_228872061_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_2288749e2_argParser _11613_ap = _2288749e2_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _228875edd_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11613_ap._field_content);;
}



inline jule::Ptr<_22c9212e8_Flag> _22c9886a1_addFlagCommon(_228872061_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_2288727c0_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_228872b11_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_22c9212e8_Flag> _14013_flag = jule::new_ptr<_22c9212e8_Flag>(_22c9212e8_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_2288704b0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_2288704b0_CommonFlag>(_14013_flag, 4)); };
	return _14013_flag;;
}

inline jule::Ptr<_22c91caec_Flag> _22c99039a_addFlagCommon(_228872061_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_2288727c0_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_228872b11_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_22c91caec_Flag> _14013_flag = jule::new_ptr<_22c91caec_Flag>(_22c91caec_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_2288704b0_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_2288704b0_CommonFlag>(_14013_flag, 3)); };
	return _14013_flag;;
}



inline void _22c986649_AddVar(_228872061_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_22c9212e8_Flag> _16813_flag = _22c9886a1_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}

inline void _22c98d387_AddVar(_228872061_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	jule::Ptr<_22c91caec_Flag> _16813_flag = _22c99039a_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_16813_flag))._field_default=(*(_16762_var));
	(*(_16813_flag))._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _228872061_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _22c933b9b_parseInteger(_2288749e2_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_22c93664e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_22c936bc1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_22c9369a1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_22c936a17:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_22c93631e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_22c9362a8:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_22c9361dc:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _22c93b3ce_parseInteger(_2288749e2_argParser* _self_, jule::Str* _18231_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _18239_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18231_s))).empty()) {
			_case_begin_22c93dd3d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0x", 2))) {
			_case_begin_22c93e3b0:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0b", 2))) {
			_case_begin_22c93e190:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_24339b774_HasPrefix((*(_18231_s)), jule::Str::lit("0o", 2))) {
			_case_begin_22c93e206:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18231_s))[0LL] == '0')) {
			_case_begin_22c93da0d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_22c93d997:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18239_parser((*(_18231_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_22c93d8cb:;
	};
	return __jule_func_result;;
}



inline jule::Str _22887530b_getData(_2288749e2_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _228875581_processFlag(_2288749e2_argParser* _self_, jule::Trait<_2288704b0_CommonFlag>* _20935_flag) {
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_22c93133b:;
			{
				jule::Ptr<_22c91caec_Flag> _21217_bf = (*(_20935_flag)).cast_ptr<_22c91caec_Flag>(3);;
				(*((*(_21217_bf))._field_data))=(!((*(_21217_bf))._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_22c9312d6:;
	};
	jule::Str _2179_data = _22887530b_getData(_self_);;
	if ((_2179_data).empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _2288704b0_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._22883d769_Name((*(_20935_flag)))) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4));
	};
	{
		auto &_match_expr{ (*(_20935_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22c932e20:;
			{
				jule::Ptr<_22c912064_Flag> _22417_intf = (*(_20935_flag)).cast_ptr<_22c912064_Flag>(0);;
				jule::Bool _22527_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _22c933b9b_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _22565_s, jule::I64 _22573_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _2445c19cb_ParseInt(_22565_s, _22573_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_22417_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22527_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22527_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _2288704b0_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._22883d769_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_22c932e86:;
			{
				jule::Ptr<_22c915bb1_Flag> _23217_uintf = (*(_20935_flag)).cast_ptr<_22c915bb1_Flag>(1);;
				jule::Bool _23328_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _22c93b3ce_parseInteger(_self_, &(_2179_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23366_s, jule::I64 _23374_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _2445c1525_ParseUint(_23366_s, _23374_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*((*(_23217_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23328_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23328_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _2288704b0_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._22883d769_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_22c932eec:;
			{
				jule::Ptr<_22c9193ac_Flag> _24017_ff = (*(_20935_flag)).cast_ptr<_22c9193ac_Flag>(2);;
				(*((*(_24017_ff))._field_data))=static_cast<jule::F64>(({
					auto except = _2445c841c_ParseFloat(_2179_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str::lit("--", 2) + _2288704b0_CommonFlag_mptr_data[((*(_20935_flag))).type_offset]._22883d769_Name((*(_20935_flag)))) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_22c933063:;
			{
				(*((*((*(_20935_flag)).cast_ptr<_22c9212e8_Flag>(4)))._field_data))=_2179_data;
			}
		}
		_match_end_22c932639:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _228875839_singleDash(_2288749e2_argParser* _self_, jule::Str* _24930_arg) {
	if (((*(_24930_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_24930_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Slice<jule::I32> _2539_rarg = static_cast<jule::Slice<jule::I32>>((*(_24930_arg))).slice(1LL);;
	{
		auto expr = &(_2539_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c9458b1:;
		if (it != expr_end) {
			jule::I32 *_25416_r = it;
			{
				jule::Trait<_2288704b0_CommonFlag> _25517_flag = _228872b11_FindFlagShort(&(*(_self_))._field_set, (*(_25416_r)));;
				if ((_25517_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_24930_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_25416_r)))), &__jule_any_type4));
				};
				({
					auto except = _228875581_processFlag(_self_, &(_25517_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_22c9458b1:;
			++it;
			goto _iter_begin_22c9458b1;
		}
		_iter_end_22c9458b1:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _228875ae2_doubleDash(_2288749e2_argParser* _self_, jule::Str* _26430_arg) {
	if (((*(_26430_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4));
	};
	jule::Trait<_2288704b0_CommonFlag> _26813_flag = _2288727c0_FindFlag(&(*(_self_))._field_set, (*(_26430_arg)).slice(2LL));;
	if ((_26813_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_26430_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4));
	};
	({
		auto except = _228875581_processFlag(_self_, &(_26813_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _228875ce0_tryArg(_2288749e2_argParser* _self_) {
	jule::Str _2769_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_2769_arg[0LL] == '-')) {
		if (((_2769_arg.len() > 1LL) && (_2769_arg[1LL] == '-'))) {
			({
				auto except = _228875ae2_doubleDash(_self_, &(_2769_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _228875839_singleDash(_self_, &(_2769_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2769_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _228875edd_parse(_2288749e2_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _228875ce0_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_22c94c0b0:;
	}
	_iter_end_22c94c0b0:;;
	return jule::VoidExceptional();
}





std::ostream &operator<<(std::ostream &_Stream, _2288749e2_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2287d7658_ObjectCoder> static__2287d7a54_New(jule::Ptr<_227c1a66e_IR>* _9424_ir, _2287d5b40_SerializationInfo _9433_info) {
	jule::Ptr<_2287d7658_ObjectCoder> _9513_oc = jule::new_ptr<_2287d7658_ObjectCoder>(_2287d7658_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	(*(_9513_oc))._field_ec=static__228715894_new(&(_9513_oc));
	(*(_9513_oc))._field_sc=static__22870b967_new(&(_9513_oc));
	(*(_9513_oc))._field_tc=static__2287e7e0a_new(&(_9513_oc));
	return _9513_oc;;
}



inline void _2287d7d0c_write(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Str _10525_s) {
	_2433b982a_WriteStr(&(*(_self_))._field_Buf, _10525_s);
}



inline void _2287d80b5_writeBytes(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::U8> _10930_b) {
	_2433b9572_Write(&(*(_self_))._field_Buf, _10930_b);
}



inline void _2287d82b3_addIndent(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _2287d84b1_doneIndent(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=(*(_self_))._field_indentBuffer.slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));
}



inline void _2287d86ae_indent(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2433b9572_Write(&(*(_self_))._field_Buf, (*(_self_))._field_indentBuffer);
}



inline jule::I64 _2287d8a00_findAnyType(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2469b43d8_TypeKind>* _12836_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c781741:;
		if (it != expr_end) {
			jule::I64 _12914_i = it - expr->begin();
			jule::Ptr<_2469b43d8_TypeKind> _12921_at = *it;
			{
				if (_2469b4ae2_Equal(_12921_at, (*(_12836_t)))) {
					return _12914_i;;
				};
			}
			_iter_next_22c781741:;
			++it;
			_12914_i++;
			goto _iter_begin_22c781741;
		}
		_iter_end_22c781741:;
	};
	return -1LL;;
}



inline jule::I64 _2287d8d41_pushAnyType(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2469b43d8_TypeKind> _13735_t) {
	if ((_2469b72ed_Enum(_13735_t.ptr()) != nullptr)) {
		_13735_t=(*((*(_2469b72ed_Enum(_13735_t.ptr())))._field_Kind))._field_Kind;
	};
	jule::I64 _14113_i = _2287d8a00_findAnyType(_self_, &(_13735_t));;
	if ((_14113_i != -1LL)) {
		return _14113_i;;
	};
	_14113_i=static_cast<jule::I64>((*(_self_))._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> &__jule_push_dest = (*(_self_))._field_anyTypeMap; __jule_push_dest.push(_13735_t); };
	jule::Str _1479_si = _2445d3339_Itoa(_14113_i);;
	if ((_2469b6cd1_Sptr(_13735_t.ptr()) != nullptr)) {
		_2433b0c50_StrBuilder _14917_elemKind = static__2433b1019_New(40LL);;
		_2287ed284_kind((*(_self_))._field_tc.ptr(), &(_14917_elemKind), (*(_2469b6cd1_Sptr(_13735_t.ptr())))._field_Elem);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2433b9572_Write(&(*(_self_))._field_anyObj, _2433baac3_Buf(&_14917_elemKind));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_2287e8ca7_asSptr((*(_self_))._field_tc.ptr(), &((*(_self_))._field_anyObj), _2433baac3_Buf(&_14917_elemKind));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17613_comparable = _2469b59e4_Comparable(_13735_t.ptr());;
		_2433b0c50_StrBuilder _17717_kindB = static__2433b1019_New(40LL);;
		_2287ed284_kind((*(_self_))._field_tc.ptr(), &(_17717_kindB), _13735_t);
		jule::Slice<jule::U8> _17913_kind = _2433baac3_Buf(&_17717_kindB);;
		if (_2420a6a8a_BytesStr(_17913_kind).equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_2469b47a1_Str(_13735_t.ptr()));
		};
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("void __jule_any_type", 20));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (_17613_comparable) {
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_2469b7067_Ptr(_13735_t.ptr()) == nullptr)) {
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("const ", 6));
			_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
		} else {
			_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("* const", 7));
		};
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("{.dealloc=__jule_any_type", 25));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_dealloc, ", 10));
		if (_17613_comparable) {
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
		_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_17613_comparable) {
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_2433b9572_Write(&(*(_self_))._field_anyObj, _17913_kind);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _1479_si);
			_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _14113_i;;
}



inline void _2287d90e9_pushResultIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246868c1b_FnIns>* _24738_f) {
	jule::Str _2489_s = static_cast<jule::Str>(_228803355_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_24738_f))))._field_Result)));;
	jule::Bool _24912_ok = false;;
	(*(_self_))._field_resultMap.lookup(_2489_s, nullptr, &(_24912_ok));
	if (_24912_ok) {
		return;;
	};
	(*(_self_))._field_resultMap[_2489_s]=false;
	_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("struct ", 7));
	_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, _2489_s);
	_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_2469b8871_Tup((*((*(_24738_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7a1992:;
		if (it != expr_end) {
			jule::I64 _25714_i = it - expr->begin();
			jule::Ptr<_2469b43d8_TypeKind> _25721_t = *it;
			{
				_2433b9ad3_WriteByte(&(*(_self_))._field_resultDecls, 9LLU);
				_2287ed284_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_resultDecls), _25721_t);
				_2433b9ad3_WriteByte(&(*(_self_))._field_resultDecls, ' ');
				_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, _2445d3339_Itoa(_25714_i));
				_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c7a1992:;
			++it;
			_25714_i++;
			goto _iter_begin_22c7a1992;
		}
		_iter_end_22c7a1992:;
	};
	_2433b982a_WriteStr(&(*(_self_))._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _2287d93a2_pushResult(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246865d17_Fn>* _26835_f) {
	if ((_24686628a_IsVoid((*(_26835_f)).ptr()) || ((*((*((*(_26835_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _27213_n = (*((*(_26835_f))))._field_Instances.len();;
	if (((*((*(_26835_f))))._field_Generics.len() == 0LL)) {
		_27213_n=1LL;
	};
	{
		auto expr = (*((*(_26835_f))))._field_Instances.slice(0LL, _27213_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22c7a6a52:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _27621_ins = *it;
			{
				_2287d90e9_pushResultIns(_self_, &(_27621_ins));
			}
			_iter_next_22c7a6a52:;
			++it;
			goto _iter_begin_22c7a6a52;
		}
		_iter_end_22c7a6a52:;
	};
}



inline jule::I64 _2287d979d_findTypeOffsetS(_2287d7658_ObjectCoder* _self_, jule::Ptr<_2468790e4_Trait> _28130_t, jule::Ptr<_246853ba1_StructIns> _28145_s) {
	if (((*(_28130_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7a803c:;
		if (it != expr_end) {
			jule::Ptr<_2287d6217_traitHash> *_28516_hash = it;
			{
				if ((((*((*(_28516_hash))))._field_t == _28130_t) && ((*((*(_28516_hash))))._field_s == _28145_s))) {
					return (*((*(_28516_hash))))._field_i;;
				};
			}
			_iter_next_22c7a803c:;
			++it;
			goto _iter_begin_22c7a803c;
		}
		_iter_end_22c7a803c:;
	};
	return -1LL;;
}



inline jule::I64 _2287d9b99_findTypeOffset(_2287d7658_ObjectCoder* _self_, jule::Ptr<_2468790e4_Trait> _29329_t, jule::Ptr<_2469b43d8_TypeKind> _29344_k) {
	if (((*(_29329_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_246853ba1_StructIns> _29717_s = nullptr;;
	if ((_2469b6cd1_Sptr(_29344_k.ptr()) != nullptr)) {
		_29344_k=(*(_2469b6cd1_Sptr(_29344_k.ptr())))._field_Elem;
	};
	_29717_s=_2469b80bd_Struct(_29344_k.ptr());
	if ((_29717_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_2287d979d_findTypeOffsetS(_self_, _29329_t, _29717_s));;
}



inline void _2287da00c_pushAndWriteMaskMapper(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2468790e4_Trait> _30846_t1, jule::Ptr<_2468790e4_Trait> _30862_t2) {
	_2433b0c50_StrBuilder _30913_ident = static__2433b1019_New(32LL);;
	_2433b982a_WriteStr(&_30913_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_2433b982a_WriteStr(&_30913_ident, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30862_t2))), 15LL));
	_2433b982a_WriteStr(&_30913_ident, jule::Str::lit("_to_", 4));
	_2433b982a_WriteStr(&_30913_ident, _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30846_t1))), 15LL));
	_2433b9572_Write(&(*(_self_))._field_Buf, _2433baac3_Buf(&_30913_ident));
	{
		auto expr = &((*(_self_))._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7ad509:;
		if (it != expr_end) {
			_2287d65e1_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30846_t1) && (_31716_m._field_t2 == _30862_t2))) {
					return;;
				};
			}
			_iter_next_22c7ad509:;
			++it;
			goto _iter_begin_22c7ad509;
		}
		_iter_end_22c7ad509:;
	};
	{ jule::Slice<_2287d65e1_traitCast> &__jule_push_dest = (*(_self_))._field_traitCastMap; __jule_push_dest.push(_2287d65e1_traitCast{._field_t1=_30846_t1, ._field_t2=_30862_t2}); };
	;
	_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("jule::Int", 9));
	_2433b9ad3_WriteByte(&(*(_self_))._field_anyObj, ' ');
	_2433b9572_Write(&(*(_self_))._field_anyObj, _2433baac3_Buf(&_30913_ident));
	_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &((*(_30846_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7b2046:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &((*(_30862_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c7b2882:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &((*(_33621_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_22c7b36da:;
									if (it != expr_end) {
										jule::Ptr<_246853ba1_StructIns> _33933_s1i = *it;
										{
											jule::I64 _34025_i1 = _2287d979d_findTypeOffsetS(_self_.ptr(), _30846_t1, _33933_s1i);;
											jule::I64 _34125_i2 = _2287d979d_findTypeOffsetS(_self_.ptr(), _30862_t2, _33933_s1i);;
											_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("if (offset == ", 14));
											_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _2445d3339_Itoa(_34125_i2));
											_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(") return ", 9));
											_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _2445d3339_Itoa(_34025_i1));
											_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_22c7b36da:;
										++it;
										goto _iter_begin_22c7b36da;
									}
									_iter_end_22c7b36da:;
								};
							};
						}
						_iter_next_22c7b2882:;
						++it;
						goto _iter_begin_22c7b2882;
					}
					_iter_end_22c7b2882:;
				};
			}
			_iter_next_22c7b2046:;
			++it;
			goto _iter_begin_22c7b2046;
		}
		_iter_end_22c7b2046:;
	};
	_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit(" return ", 8));
	_2433b982a_WriteStr(&(*(_self_))._field_anyObj, _2445d3339_Itoa(0LL));
	_2433b982a_WriteStr(&(*(_self_))._field_anyObj, jule::Str::lit("; }\n", 4));
}



inline void _2287da2b5_locInfo(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246819d43_Token>* _35728_t) {
	jule::Str *_35810_loc = &((*((*((*(_35728_t))))._field_File))._field_Path);;
	if (_240e90b95_Production) {
		{
			
			if (_24339b774_HasPrefix((*(_35810_loc)), _2435761e0_PathStdlib)) {
				_case_begin_22c7b859c:;
				{
					_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_2433bda0a_Dir(_2435761e0_PathStdlib).len() + 1LL)));
				}
			}
			else if (_24339b774_HasPrefix((*(_35810_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_22c7b8613:;
				{
					_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)).slice((_2433bda0a_Dir((*((*(_self_))._field_ir))._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_22c7b8118:;
				{
					_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
				}
			}
			_match_end_22c7b804c:;
		};
	} else {
		_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*(_35810_loc)));
	};
	_2287d7d0c_write(_self_, jule::Str::lit(":", 1));
	_2287d7d0c_write(_self_, _2445d3339_Itoa((*((*(_35728_t))))._field_Row));
	_2287d7d0c_write(_self_, jule::Str::lit(":", 1));
	_2287d7d0c_write(_self_, _2445d3339_Itoa((*((*(_35728_t))))._field_Column));
}



inline void _2287da4b3_head(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287cd1a9_Time _3849_time = static__2287cd770_Now();;
	_2287cc9d3_AbsTime _3859_abs = _2287cee58_Abs(&_3849_time);;
	_2287d7d0c_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_2287d7d0c_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_2287d7d0c_write(_self_, jule::Str::lit("jule0.0.15 @master", 18));
	_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
	_2287d7d0c_write(_self_, jule::Str::lit("// Date: ", 9));
	_2287d7d0c_write(_self_, _2445d2ba7_FmtUint(_3859_abs._field_Day, 10LL));
	_2287d7d0c_write(_self_, jule::Str::lit("/", 1));
	_2287d7d0c_write(_self_, _2445d2ba7_FmtUint(_3859_abs._field_Month, 10LL));
	_2287d7d0c_write(_self_, jule::Str::lit("/", 1));
	_2287d7d0c_write(_self_, _2445d2ba7_FmtUint(_3859_abs._field_Year, 10LL));
	_2287d7d0c_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_2287d7d0c_write(_self_, (*(_self_))._field_info._field_Compiler);
	_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
	_2287d7d0c_write(_self_, (*(_self_))._field_info._field_CompilerCommand);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	if (_240e90b95_Production) {
		_2287d7d0c_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_240e90502_RC))) {
		_2287d7d0c_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_240e908cb_Safety))) {
		_2287d7d0c_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_2287da6b1_links(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_2287d7d0c_write(_self_, _243576a09_PathApi);
	_2287d7d0c_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _2287da6b1_links(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7c49a4:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!((*(_42216_used))._field_Binded))) {
						_case_begin_22c7c5763:;
						{
							goto _iter_next_22c7c49a4;
						}
					}
					else if (_2434523eb_IsStdHeaderPath((*(_42216_used))._field_Path)) {
						_case_begin_22c7c57da:;
						{
							_2287d7d0c_write(_self_, jule::Str::lit("#include ", 9));
							_2287d7d0c_write(_self_, (*(_42216_used))._field_Path);
							_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_2434526c6_IsValidHeaderExt(_2433bd0d1_Ext((*(_42216_used))._field_Path))) {
						_case_begin_22c7c5862:;
						{
							_2287d7d0c_write(_self_, jule::Str::lit("#include \"", 10));
							_2287d7d0c_write(_self_, (*(_42216_used))._field_Path);
							_2287d7d0c_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_22c7c5642:;
				};
			}
			_iter_next_22c7c49a4:;
			++it;
			goto _iter_begin_22c7c49a4;
		}
		_iter_end_22c7c49a4:;
	};
}



inline void _2287da969_prepareStructure(_2287d7658_ObjectCoder* _self_, jule::Ptr<_246850e23_Struct>* _43840_s) {
	{
		auto expr = &((*((*(_43840_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7c79eb:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &((*(_43921_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c7c9118:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _44025_m = *it;
						{
							if ((*(_44025_m))._field_Statically) {
								goto _iter_next_22c7c9118;
							};
							{
								auto expr = &((*(_44025_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22c7c9ec6:;
								if (it != expr_end) {
									jule::Ptr<_246868c1b_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_246867c70_ParamIns> _44525_p = (*(_44429_mins))._field_Params[0LL];;
										_2433b0c50_StrBuilder _44625_kind = static__2433b1019_New(40LL);;
										_2287ed284_kind((*(_self_))._field_tc.ptr(), &(_44625_kind), (*(_44525_p))._field_Kind);
										if ((!(_246864be5_IsRef((*(_44525_p))._field_Decl.ptr())))) {
											_2433b982a_WriteStr(&_44625_kind, jule::Str::lit("*", 1));
										};
										_2433b9ad3_WriteByte(&_44625_kind, 0LLU);
										(*(_44525_p))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2287e6cc7_customType>(_2287e6cc7_customType{._field_kind=_2420a6d54_StrFromBytes(_2433baac3_Buf(&_44625_kind).slice(0LL, (_2433ba5a6_Len(&_44625_kind) - 1LL)))}), 28)});
									}
									_iter_next_22c7c9ec6:;
									++it;
									goto _iter_begin_22c7c9ec6;
								}
								_iter_end_22c7c9ec6:;
							};
						}
						_iter_next_22c7c9118:;
						++it;
						goto _iter_begin_22c7c9118;
					}
					_iter_end_22c7c9118:;
				};
			}
			_iter_next_22c7c79eb:;
			++it;
			goto _iter_begin_22c7c79eb;
		}
		_iter_end_22c7c79eb:;
	};
}



inline void _2287dab67_prepareStructures(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7ca625:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _46321_s = *it;
			{
				if (((*(_46321_s))._field_Token != nullptr)) {
					_2287da969_prepareStructure(_self_.ptr(), &(_46321_s));
				};
			}
			_iter_next_22c7ca625:;
			++it;
			goto _iter_begin_22c7ca625;
		}
		_iter_end_22c7ca625:;
	};
}



inline void _2287dae20_iterPackages(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)> _47032_f) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7cdcee:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _47121_used = *it;
			{
				if ((!((*(_47121_used))._field_Binded))) {
					_47032_f(&((*(_47121_used))._field_Package));
				};
			}
			_iter_next_22c7cdcee:;
			++it;
			goto _iter_begin_22c7cdcee;
		}
		_iter_end_22c7cdcee:;
	};
	_47032_f(&((*((*(_self_))._field_ir))._field_Main));
}



inline void _2287db11d_buildTraitMap(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _48035_pkg) mutable -> void {
		_2287e4896_iterFiles(_48035_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _48136_file) mutable -> void {
			{
				auto expr = &((*((*(_48136_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c7d32ed:;
				if (it != expr_end) {
					jule::Ptr<_2468790e4_Trait> _48229_t = *it;
					{
						if (((*(_48229_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_48229_t))._field_Implemented.len() == 0LL)) {
							jule::Ptr<_2287d6217_traitHash> _48729_hash = jule::new_ptr<_2287d6217_traitHash>(_2287d6217_traitHash{._field_t=_48229_t, ._field_s=nullptr, ._field_i=0LL});;
							_2433b0c50_StrBuilder _49229_b = static__2433b1019_New(static_cast<jule::I64>((*(_48229_t))._field_Ident.len()));;
							static__2287290b1_writeIdentTo(&(_49229_b), &((*(_48229_t))._field_Ident));
							(*(_48729_hash))._field_ti=_2433ba122_Str(&_49229_b);
							{ jule::Slice<jule::Ptr<_2287d6217_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_48729_hash); };
							goto _iter_next_22c7d32ed;
						};
						jule::I64 _49825_i = 0LL;;
						{
							auto expr = &((*(_48229_t))._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_22c7d3c05:;
							if (it != expr_end) {
								jule::Ptr<_246850e23_Struct> _49933_s = *it;
								{
									{
										auto expr = &((*(_49933_s))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_22c7d7324:;
										if (it != expr_end) {
											jule::Ptr<_246853ba1_StructIns> _50037_ins = *it;
											{
												jule::Ptr<_2287d6217_traitHash> _50133_hash = jule::new_ptr<_2287d6217_traitHash>(_2287d6217_traitHash{._field_t=_48229_t, ._field_s=_50037_ins, ._field_i=_49825_i});;
												_2433b0c50_StrBuilder _50633_b = static__2433b1019_New(static_cast<jule::I64>((*(_48229_t))._field_Ident.len()));;
												static__2287290b1_writeIdentTo(&(_50633_b), &((*(_48229_t))._field_Ident));
												(*(_50133_hash))._field_ti=_2433ba122_Str(&_50633_b);
												{ jule::Slice<jule::Ptr<_2287d6217_traitHash>> &__jule_push_dest = (*(_self_))._field_tmap; __jule_push_dest.push(_50133_hash); };
												(_49825_i)++;
											}
											_iter_next_22c7d7324:;
											++it;
											goto _iter_begin_22c7d7324;
										}
										_iter_end_22c7d7324:;
									};
								}
								_iter_next_22c7d3c05:;
								++it;
								goto _iter_begin_22c7d3c05;
							}
							_iter_end_22c7d3c05:;
						};
						_2287e5644_pushMethodsFromInherits(&(_48229_t), &(_48229_t));
					}
					_iter_next_22c7d32ed:;
					++it;
					goto _iter_begin_22c7d32ed;
				}
				_iter_end_22c7d32ed:;
			};
		}));
	}));
}



inline void _2287db31b_traitDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _52235_pkg) mutable -> void {
		_2287e4896_iterFiles(_52235_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _52336_file) mutable -> void {
			{
				auto expr = &((*((*(_52336_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c7dac40:;
				if (it != expr_end) {
					jule::Ptr<_2468790e4_Trait> _52429_t = *it;
					{
						if (((*(_52429_t))._field_Token == nullptr)) {
							return;;
						};
						_2287d86ae_indent(_self_);
						_2287d7d0c_write(_self_, jule::Str::lit("struct ", 7));
						static__22872a26b_traitDecl(&((*(_self_))._field_Buf), _52429_t);
						_2287d7d0c_write(_self_, jule::Str::lit("{};\n", 4));
					}
					_iter_next_22c7dac40:;
					++it;
					goto _iter_begin_22c7dac40;
				}
				_iter_end_22c7dac40:;
			};
		}));
	}));
}



inline void _2287db5c4_structurePlainDecl(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246850e23_Struct>* _53743_s) {
	{
		auto expr = &((*((*(_53743_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7d3b17:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _53821_ins = *it;
			{
				_2287d7d0c_write(_self_, jule::Str::lit("struct ", 7));
				static__22872ab2e_structureIns(&((*(_self_))._field_Buf), &(_53821_ins));
				_2287d7d0c_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c7d3b17:;
			++it;
			goto _iter_begin_22c7d3b17;
		}
		_iter_end_22c7d3b17:;
	};
}



inline void _2287db7c2_structurePlainDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7dd01c:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _54621_s = *it;
			{
				if (((*(_54621_s))._field_Token != nullptr)) {
					_2287db5c4_structurePlainDecl(_self_, &(_54621_s));
				};
			}
			_iter_next_22c7dd01c:;
			++it;
			goto _iter_begin_22c7dd01c;
		}
		_iter_end_22c7dd01c:;
	};
}



inline void _2287dba7a_fieldDecl(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853101_FieldIns>* _55334_f) {
	_2287ed284_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_55334_f))))._field_Kind);
	_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
	static__22872ae1a_field(&((*(_self_))._field_Buf), &((*((*(_55334_f))))._field_Decl));
	if (((*((*(_55334_f))))._field_Default == nullptr)) {
		if (_228805445_shouldInitialized(&((*((*(_55334_f))))._field_Kind))) {
			_2287d7d0c_write(_self_, jule::Str::lit(" = ", 3));
			_228722ae3_initExpr((*(_self_))._field_ec, (*((*(_55334_f))))._field_Kind);
		};
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit(" = ", 3));
		_228718820_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_55334_f))))._field_Default))._field_Model);
	};
	_2287d7d0c_write(_self_, jule::Str::lit(";", 1));
}



inline void _2287dbd33_structureDestructor(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _57144_s) {
	;
	jule::Ptr<_246865d17_Fn> _5749_disposeMethod = _246854c18_FindMethod((*(_57144_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _57513_disposed = static__2469239a7_Dispose(_5749_disposeMethod);;
	if ((!(_57513_disposed))) {
		return;;
	};
	_2287d7d0c_write(_self_, jule::Str::lit("~", 1));
	static__22872ab2e_structureIns(&((*(_self_))._field_Buf), _57144_s);
	_2287d7d0c_write(_self_, jule::Str::lit("(void) { ", 9));
	static__228729b94_func(&((*(_self_))._field_Buf), &(_5749_disposeMethod));
	_2287d7d0c_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _2287dc196_structureOperatorEq(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::U8> _58739_ident, jule::Ptr<_246853ba1_StructIns>* _58759_s) {
	if ((!((*((*(_58759_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_58759_s))))._field_Operators._field_Eq != nullptr)) {
		_2287dc927_structureOperator(_self_, _58739_ident, &((*((*(_58759_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_2287d86ae_indent(_self_);
	if (_246b4a0b8_Inline) {
		_2287d7d0c_write(_self_, jule::Str::lit("inline ", 7));
	};
	_2287d7d0c_write(_self_, jule::Str::lit("bool operator==(", 16));
	_2287d80b5_writeBytes(_self_, _58739_ident);
	_2287d7d0c_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_58759_s))))._field_Fields.len() > 0LL)) {
		_2287d82b3_addIndent(_self_);
		_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
		_2287d86ae_indent(_self_);
		_2287d7d0c_write(_self_, jule::Str::lit("return ", 7));
		_2287d82b3_addIndent(_self_);
		jule::Bool _61017_writed = false;;
		{
			auto expr = &((*((*(_58759_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c7eba97:;
			if (it != expr_end) {
				jule::Ptr<_246853101_FieldIns> _61125_f = *it;
				{
					jule::Ptr<_246853ba1_StructIns> _61317_strct = _2469b80bd_Struct((*(_61125_f))._field_Kind.ptr());;
					if ((((_61317_strct != nullptr) && ((*(_61317_strct))._field_Decl != nullptr)) && (*((*(_61317_strct))._field_Decl))._field_Binded)) {
						goto _iter_next_22c7eba97;
					};
					if (_61017_writed) {
						_2287d7d0c_write(_self_, jule::Str::lit(" &&", 3));
					};
					_61017_writed=true;
					_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
					_2287d86ae_indent(_self_);
					_2287d7d0c_write(_self_, jule::Str::lit("this->", 6));
					_2433b0c50_StrBuilder _62421_fIdent = static__2433b1019_New(static_cast<jule::I64>((*((*(_61125_f))._field_Decl))._field_Ident.len()));;
					static__22872ae1a_field(&(_62421_fIdent), &((*(_61125_f))._field_Decl));
					_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_62421_fIdent));
					_2287d7d0c_write(_self_, jule::Str::lit(" == _other.", 11));
					_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_62421_fIdent));
				}
				_iter_next_22c7eba97:;
				++it;
				goto _iter_begin_22c7eba97;
			}
			_iter_end_22c7eba97:;
		};
		_2287d84b1_doneIndent(_self_);
		if ((!(_61017_writed))) {
			_2287d7d0c_write(_self_, jule::Str::lit("true", 4));
		};
		_2287d7d0c_write(_self_, jule::Str::lit(";\n", 2));
		_2287d84b1_doneIndent(_self_);
		_2287d86ae_indent(_self_);
		_2287d7d0c_write(_self_, jule::Str::lit("}", 1));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _2287dc509_structureOperatorNotEq(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::U8> _64442_ident, jule::Ptr<_246853ba1_StructIns>* _64462_s) {
	if ((!((*((*(_64462_s))))._field_Comparable))) {
		return;;
	};
	_2287d86ae_indent(_self_);
	if (_246b4a0b8_Inline) {
		_2287d7d0c_write(_self_, jule::Str::lit("inline ", 7));
	};
	_2287d7d0c_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_2287d80b5_writeBytes(_self_, _64442_ident);
	_2287d7d0c_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _2287dc927_structureOperator(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::U8> _65837_ident, jule::Ptr<_246868c1b_FnIns>* _65857_f, jule::Str _65868_op) {
	if (((*(_65857_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6639_unary = ((*((*(_65857_f))))._field_Params.len() == 1LL);;
	jule::Bool _6649_assignment = _24686628a_IsVoid((*((*(_65857_f))))._field_Decl.ptr());;
	_2287d86ae_indent(_self_);
	if (_246b4a0b8_Inline) {
		_2287d7d0c_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6649_assignment) {
		_2287d80b5_writeBytes(_self_, _65837_ident);
		_2287d7d0c_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_2469b6a4a_Prim((*((*(_65857_f))))._field_Result.ptr()) == nullptr)) {
			_2287d80b5_writeBytes(_self_, _65837_ident);
		} else {
			_2287d7d0c_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_2287d7d0c_write(_self_, jule::Str::lit(" operator", 9));
	_2287d7d0c_write(_self_, _65868_op);
	_2287d7d0c_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6639_unary))) {
		jule::Ptr<_246867c70_ParamIns> _68617_p = (*((*(_65857_f))))._field_Params[1LL];;
		_2287ec074_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_68617_p));
		_2287d7d0c_write(_self_, jule::Str::lit(" _other", 7));
	};
	_2287d7d0c_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6649_assignment))) {
		_2287d7d0c_write(_self_, jule::Str::lit("return ", 7));
	};
	static__228729e80_funcIns(&((*(_self_))._field_Buf), _65857_f);
	if ((!(_6639_unary))) {
		_2287d7d0c_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6649_assignment) {
			_2287d7d0c_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_2287d7d0c_write(_self_, jule::Str::lit("}", 1));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _2287dcbd0_structureOperators(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _70743_s) {
	_2433b0c50_StrBuilder _70813_sb = static__2433b1019_New(40LL);;
	static__22872ab2e_structureIns(&(_70813_sb), _70743_s);
	jule::Slice<jule::U8> _7109_ident = _2433baac3_Buf(&_70813_sb);;
	_2287dc196_structureOperatorEq(_self_, _7109_ident, _70743_s);
	_2287dc509_structureOperatorNotEq(_self_, _7109_ident, _70743_s);
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_2287dc927_structureOperator(_self_, _7109_ident, &((*((*(_70743_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _2287dce88_structureInsDecl(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _74841_s) {
	{
		auto expr = &((*((*(_74841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c81e548:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _74921_m = *it;
			{
				if (_2287e5bc7_isHeadDecl(&(_74921_m))) {
					_2287de42e_funcDecl(_self_, &(_74921_m), false);
				};
			}
			_iter_next_22c81e548:;
			++it;
			goto _iter_begin_22c81e548;
		}
		_iter_end_22c81e548:;
	};
	_2287d7d0c_write(_self_, jule::Str::lit("struct ", 7));
	static__22872ab2e_structureIns(&((*(_self_))._field_Buf), _74841_s);
	_2287d7d0c_write(_self_, jule::Str::lit(" {\n", 3));
	_2287d82b3_addIndent(_self_);
	{
		auto expr = &((*((*(_74841_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c820e2e:;
		if (it != expr_end) {
			jule::Ptr<_246853101_FieldIns> _76021_f = *it;
			{
				_2287d86ae_indent(_self_);
				_2287dba7a_fieldDecl(_self_, &(_76021_f));
				_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_22c820e2e:;
			++it;
			goto _iter_begin_22c820e2e;
		}
		_iter_end_22c820e2e:;
	};
	_2287d86ae_indent(_self_);
	_2287dbd33_structureDestructor(_self_, _74841_s);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	_2287dcbd0_structureOperators(_self_, _74841_s);
	_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
	_2287d84b1_doneIndent(_self_);
	_2287d86ae_indent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("};", 2));
}



inline void _2287dd241_structureDecl(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246850e23_Struct>* _77838_s) {
	{
		auto expr = &((*((*(_77838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c824a15:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _77921_ins = *it;
			{
				_2287dce88_structureInsDecl(_self_, &(_77921_ins));
			}
			_iter_next_22c824a15:;
			++it;
			goto _iter_begin_22c824a15;
		}
		_iter_end_22c824a15:;
	};
}



inline void _2287dd43e_structureDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c825373:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _78521_s = *it;
			{
				if (((*(_78521_s))._field_Token != nullptr)) {
					_2287dd241_structureDecl(_self_, &(_78521_s));
					_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_22c825373:;
			++it;
			goto _iter_begin_22c825373;
		}
		_iter_end_22c825373:;
	};
}



inline void _2287dd63c_structureMethodDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c82631e:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _79421_s = *it;
			{
				if (((*(_79421_s))._field_Token != nullptr)) {
					{
						auto expr = &((*(_79421_s))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22c828365:;
						if (it != expr_end) {
							jule::Ptr<_246853ba1_StructIns> _79629_ins = *it;
							{
								{
									auto expr = &((*(_79629_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_22c828cb1:;
									if (it != expr_end) {
										jule::Ptr<_246865d17_Fn> _79733_m = *it;
										{
											if ((!(_2287e5bc7_isHeadDecl(&(_79733_m))))) {
												_2287d93a2_pushResult(_self_, &(_79733_m));
												_2287de42e_funcDecl(_self_, &(_79733_m), false);
											};
										}
										_iter_next_22c828cb1:;
										++it;
										goto _iter_begin_22c828cb1;
									}
									_iter_end_22c828cb1:;
								};
							}
							_iter_next_22c828365:;
							++it;
							goto _iter_begin_22c828365;
						}
						_iter_end_22c828365:;
					};
				};
			}
			_iter_next_22c82631e:;
			++it;
			goto _iter_begin_22c82631e;
		}
		_iter_end_22c82631e:;
	};
}



inline void _2287dd8e5_paramsDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::Ptr<_246867c70_ParamIns>>* _80936_params) {
	if (((*(_80936_params)).len() == 0LL)) {
		_2287d7d0c_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_2287d7d0c_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _80936_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c828ab3:;
		if (it != expr_end) {
			jule::I64 _81614_i = it - expr->begin();
			jule::Ptr<_246867c70_ParamIns> _81621_p = *it;
			{
				_2287ec074_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), &(_81621_p));
				if ((((*(_80936_params)).len() - _81614_i) > 1LL)) {
					_2287d7d0c_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_22c828ab3:;
			++it;
			_81614_i++;
			goto _iter_begin_22c828ab3;
		}
		_iter_end_22c828ab3:;
	};
	_2287d7d0c_write(_self_, jule::Str::lit(")", 1));
}



inline void _2287ddc58_funcHead(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246868c1b_FnIns>* _82633_f, jule::Bool _82644_ptr) {
	if ((((!(_82644_ptr)) && _246b4a0b8_Inline) && (!(_2468667a7_IsEntryPoint((*((*(_82633_f))))._field_Decl.ptr()))))) {
		_2287d7d0c_write(_self_, jule::Str::lit("inline ", 7));
	};
	_2287ec74a_funcInsResult((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _82633_f);
	if (_82644_ptr) {
		_2287d7d0c_write(_self_, jule::Str::lit("(*", 2));
		static__228729e80_funcIns(&((*(_self_))._field_Buf), _82633_f);
		_2287d7d0c_write(_self_, jule::Str::lit(")", 1));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
		static__228729e80_funcIns(&((*(_self_))._field_Buf), _82633_f);
	};
}



inline void _2287de0bb_funcDeclIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246868c1b_FnIns>* _84136_f, jule::Bool _84147_ptr) {
	_2287d86ae_indent(_self_);
	_2287ddc58_funcHead(_self_, _84136_f, _84147_ptr);
	_2287dd8e5_paramsDecls(_self_, &((*((*(_84136_f))))._field_Params));
	_2287d7d0c_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _2287de42e_funcDecl(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246865d17_Fn>* _84833_f, jule::Bool _84841_ptr) {
	{
		auto expr = &((*((*(_84833_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c832e63:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _84921_c = *it;
			{
				_2287de0bb_funcDeclIns(_self_, &(_84921_c), _84841_ptr);
			}
			_iter_next_22c832e63:;
			++it;
			goto _iter_begin_22c832e63;
		}
		_iter_end_22c832e63:;
	};
}



inline void _2287de84c_funcDeclTrait(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2468790e4_Trait>* _85438_t, jule::Ptr<_246865d17_Fn>* _85454_f, jule::Bool _85462_ptr) {
	{
		auto expr = &((*((*(_85454_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8342e9:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _85521_c = *it;
			{
				jule::Ptr<_2469b43d8_TypeKind> _85617_k = (*((*(_85521_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_85521_c))._field_Params[0LL]))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_85438_t)), 2)});
				_2287de0bb_funcDeclIns(_self_, &(_85521_c), _85462_ptr);
				(*((*(_85521_c))._field_Params[0LL]))._field_Kind=_85617_k;
			}
			_iter_next_22c8342e9:;
			++it;
			goto _iter_begin_22c8342e9;
		}
		_iter_end_22c8342e9:;
	};
}



inline void _2287dea4a_funcDecls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _86435_pkg) mutable -> void {
		_2287e4896_iterFiles(_86435_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _86536_file) mutable -> void {
			{
				auto expr = &((*((*(_86536_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c83883c:;
				if (it != expr_end) {
					jule::Ptr<_246865d17_Fn> _86629_f = *it;
					{
						if (((!((*(_86629_f))._field_Binded)) && ((*(_86629_f))._field_Token != nullptr))) {
							_2287d93a2_pushResult(_self_, &(_86629_f));
							_2287de42e_funcDecl(_self_, &(_86629_f), false);
						};
					}
					_iter_next_22c83883c:;
					++it;
					goto _iter_begin_22c83883c;
				}
				_iter_end_22c83883c:;
			};
		}));
	}));
}



inline void _2287dedad_traitDataTypeMethods(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2468790e4_Trait>* _87645_owner, jule::Ptr<_2468790e4_Trait>* _87665_t) {
	{
		auto expr = &((*((*(_87665_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8384da:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _87721_m = *it;
			{
				jule::Ptr<_246868c1b_FnIns> _87817_ins = (*(_87721_m))._field_Instances[0LL];;
				jule::Ptr<_246867c70_ParamIns> _87917_p = (*(_87817_ins))._field_Params[0LL];;
				(*(_87917_p))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_87665_t)), 2)});
				{
					auto expr = (*(_87817_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_22c83bed3:;
					if (it != expr_end) {
						jule::I64 _88318_i = it - expr.begin();
						jule::Ptr<_246867c70_ParamIns> _88325_ip = *it;
						{
							if (_24681ca6b_IsAnonIdent((*((*(_88325_ip))._field_Decl))._field_Ident)) {
								(*((*(_88325_ip))._field_Decl))._field_Ident=(jule::Str::lit("_", 1) + _2445d3339_Itoa(_88318_i));
							};
						}
						_iter_next_22c83bed3:;
						++it;
						_88318_i++;
						goto _iter_begin_22c83bed3;
					}
					_iter_end_22c83bed3:;
				};
				if ((!(_240e90b95_Production))) {
					jule::Ptr<_246867c70_ParamIns> _88921_lp = (*(_87817_ins))._field_Params[((*(_87817_ins))._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ (*((*(_88921_lp))._field_Kind))._field_Kind };
						
						if (_match_expr.type_is(true, 28)) {
							_case_begin_22c841603:;
							{
								goto _match_end_22c83e8cb;
							}
						}
						else {
							_case_begin_22c83e931:;
							{
								{ jule::Slice<jule::Ptr<_246867c70_ParamIns>> &__jule_push_dest = (*(_87817_ins))._field_Params; __jule_push_dest.push(jule::new_ptr<_246867c70_ParamIns>(_246867c70_ParamIns{._field_Decl=jule::new_ptr<_246864343_Param>(_246864343_Param{._field_Ident=jule::Str::lit("__file", 6)}), ._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2287e6cc7_customType>(_2287e6cc7_customType{._field_kind=jule::Str::lit("const char*", 11)}), 28)})})); };
							}
						}
						_match_end_22c83e8cb:;
					};
				};
				_2287d93a2_pushResult(_self_, &(_87721_m));
				_2287de84c_funcDeclTrait(_self_, _87645_owner, &(_87721_m), true);
			}
			_iter_next_22c8384da:;
			++it;
			goto _iter_begin_22c8384da;
		}
		_iter_end_22c8384da:;
	};
}



inline void _2287e00ab_traitDataTypes(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _91235_pkg) mutable -> void {
		_2287e4896_iterFiles(_91235_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _91336_file) mutable -> void {
			{
				auto expr = &((*((*(_91336_file))))._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c84357d:;
				if (it != expr_end) {
					jule::Ptr<_2468790e4_Trait> _91429_t = *it;
					{
						if (((*(_91429_t))._field_Token == nullptr)) {
							return;;
						};
						if (((*(_91429_t))._field_Methods.len() == 0LL)) {
							goto _iter_next_22c84357d;
						};
						_2287d7d0c_write(_self_, jule::Str::lit("struct ", 7));
						static__22872a26b_traitDecl(&((*(_self_))._field_Buf), _91429_t);
						_2287d7d0c_write(_self_, jule::Str::lit("MptrData", 8));
						_2287d7d0c_write(_self_, jule::Str::lit(" {\n", 3));
						_2287d82b3_addIndent(_self_);
						_2287dedad_traitDataTypeMethods(_self_, &(_91429_t), &(_91429_t));
						_2287d84b1_doneIndent(_self_);
						_2287d86ae_indent(_self_);
						_2287d7d0c_write(_self_, jule::Str::lit("};\n\n", 4));
					}
					_iter_next_22c84357d:;
					++it;
					goto _iter_begin_22c84357d;
				}
				_iter_end_22c84357d:;
			};
		}));
	}));
}



inline void _2287e0364_paramIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246867c70_ParamIns>* _93533_p) {
	_2287ec074_paramIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), _93533_p);
	_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
	static__22872a557_param(&((*(_self_))._field_Buf), &((*((*(_93533_p))))._field_Decl));
}



inline void _2287e061c_paramsIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Slice<jule::Ptr<_246867c70_ParamIns>>* _94134_params) {
	if (((*(_94134_params)).len() == 0LL)) {
		_2287d7d0c_write(_self_, jule::Str::lit("(void)", 6));
		return;;
	};
	_2287d7d0c_write(_self_, jule::Str::lit("(", 1));
	{
		auto expr = _94134_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8483eb:;
		if (it != expr_end) {
			jule::I64 _94714_i = it - expr->begin();
			jule::Ptr<_246867c70_ParamIns> _94721_p = *it;
			{
				_2287e0364_paramIns(_self_, &(_94721_p));
				if ((((*(_94134_params)).len() - _94714_i) > 1LL)) {
					_2287d7d0c_write(_self_, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_22c8483eb:;
			++it;
			_94714_i++;
			goto _iter_begin_22c8483eb;
		}
		_iter_end_22c8483eb:;
	};
	_2287d7d0c_write(_self_, jule::Str::lit(")", 1));
}



inline void _2287e0980_varInitExpr(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246922555_Var>* _95636_v, jule::Fn<void(void)> _95645_init) {
	if ((*((*(_95636_v))))._field_Statically) {
		_2287d7d0c_write(_self_, jule::Str::lit("static ", 7));
	};
	_2287ed284_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*((*(_95636_v))))._field_Kind))._field_Kind);
	_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_95636_v))))._field_Reference) {
		_2287d7d0c_write(_self_, jule::Str::lit("*", 1));
	};
	static__22872b206_var(&((*(_self_))._field_Buf), (*(_95636_v)));
	if ((_95645_init != nullptr)) {
		_2287d7d0c_write(_self_, jule::Str::lit(" = ", 3));
		_95645_init();
	};
	_2287d7d0c_write(_self_, jule::Str::lit(";", 1));
}



inline void _2287e0c38_var(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246922555_Var> _97427_v) {
	if (_24681c7a2_IsIgnoreIdent((*(_97427_v))._field_Ident)) {
		return;;
	};
	if ((((*(_97427_v))._field_Value != nullptr) && ((*((*(_97427_v))._field_Value))._field_Expr != nullptr))) {
		if (((*((*((*(_97427_v))._field_Value))._field_Data))._field_Model != nullptr)) {
			if ((*(_97427_v))._field_Reference) {
				_2287e0980_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_2287d7d0c_write(_self_, jule::Str::lit("&(", 2));
					_22872283a_model((*(_self_))._field_ec, (*((*((*(_97427_v))._field_Value))._field_Data))._field_Model);
					_2287d7d0c_write(_self_, jule::Str::lit(")", 1));
				}));
			} else {
				_2287e0980_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_228718820_possibleRefExpr((*(_self_))._field_ec, (*((*((*(_97427_v))._field_Value))._field_Data))._field_Model);
				}));
			};
			return;;
		};
		_2287e0980_varInitExpr(_self_, &(_97427_v), nullptr);
		return;;
	};
	if ((*(_97427_v))._field_Reference) {
		_2287e0980_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_2287d7d0c_write(_self_, jule::Str::lit("nullptr", 7));
		}));
		return;;
	};
	if (_228805445_shouldInitialized(&((*((*(_97427_v))._field_Kind))._field_Kind))) {
		_2287e0980_varInitExpr(_self_, &(_97427_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_228722ae3_initExpr((*(_self_))._field_ec, (*((*(_97427_v))._field_Kind))._field_Kind);
		}));
		return;;
	};
	_2287e0980_varInitExpr(_self_, &(_97427_v), nullptr);
}



inline void _2287e0ee1_funcIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246868c1b_FnIns>* _100532_f) {
	_2287ddc58_funcHead(_self_, _100532_f, false);
	_2287e061c_paramsIns(_self_, &((*((*(_100532_f))))._field_Params));
	_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
	_2287125d8_funcScope((*(_self_))._field_sc, (*(_100532_f)));
	if (((*((*(_100532_f))))._field_Scope != nullptr)) {
		_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _2287e1299_func(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246865d17_Fn>* _101529_f) {
	{
		auto expr = &((*((*(_101529_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c85a584:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _101621_ins = *it;
			{
				_2287e0ee1_funcIns(_self_, &(_101621_ins));
			}
			_iter_next_22c85a584:;
			++it;
			goto _iter_begin_22c85a584;
		}
		_iter_end_22c85a584:;
	};
}



inline void _2287e160c_funcTrait(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2287d6217_traitHash>* _102134_hash, jule::Ptr<_246865d17_Fn>* _102157_f) {
	jule::Str _10229_ident = (*((*(_102157_f))))._field_Ident;;
	{
		auto expr = &((*((*(_102157_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c85b72d:;
		if (it != expr_end) {
			jule::Ptr<_246868c1b_FnIns> _102321_ins = *it;
			{
				(*(_102321_ins))._field_Scope=nullptr;
				_2433b0c50_StrBuilder _102617_s = static__2433b1019_New(static_cast<jule::I64>((((((*((*(_102157_f))))._field_Ident.len() + _10229_ident.len()) + (*((*(_102134_hash))))._field_ti.len()) + 2LL) + 4LLU)));;
				_2433b982a_WriteStr(&_102617_s, _10229_ident);
				_2433b9ad3_WriteByte(&_102617_s, '_');
				_2433b982a_WriteStr(&_102617_s, (*((*(_102134_hash))))._field_ti);
				_2433b9ad3_WriteByte(&_102617_s, '_');
				_2433b982a_WriteStr(&_102617_s, _2445d3339_Itoa((*((*(_102134_hash))))._field_i));
				(*((*(_102157_f))))._field_Ident=_2433ba122_Str(&_102617_s);
				jule::Ptr<_2469b43d8_TypeKind> _103517_k = (*((*(_102321_ins))._field_Params[0LL]))._field_Kind;;
				(*((*(_102321_ins))._field_Params[0LL]))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*((*(_102134_hash))))._field_t, 2)});
				_2287e0ee1_funcIns(_self_, &(_102321_ins));
				(*((*(_102321_ins))._field_Params[0LL]))._field_Kind=_103517_k;
			}
			_iter_next_22c85b72d:;
			++it;
			goto _iter_begin_22c85b72d;
		}
		_iter_end_22c85b72d:;
	};
	(*((*(_102157_f))))._field_Ident=_10229_ident;
}



inline void _2287e1970_traitWrapper(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246865d17_Fn>* _104337_m, jule::Ptr<_2287d6217_traitHash>* _104350_hash) {
	_2287e160c_funcTrait(_self_, _104350_hash, _104337_m);
	if (((*((*(_104350_hash))))._field_s == nullptr)) {
		if (_240e90b95_Production) {
			_2287d7d0c_write(_self_, jule::Str::lit(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_2287d7d0c_write(_self_, jule::Str::lit(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _10559_ptr = (!(_246864be5_IsRef((*((*(_104337_m))))._field_Params[0LL].ptr())));;
	jule::Ptr<_246865d17_Fn> _105713_sm = _246854c18_FindMethod((*((*(_104350_hash))))._field_s.ptr(), (*((*(_104337_m))))._field_Ident, false);;
	if (((_105713_sm == nullptr) || ((*(_105713_sm))._field_Instances.len() == 0LL))) {
		return;;
	};
	_2287d82b3_addIndent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("{\n", 2));
	_2287d86ae_indent(_self_);
	if (((*(_105713_sm))._field_Exceptional || (!(_24686628a_IsVoid(_105713_sm.ptr()))))) {
		_2287d7d0c_write(_self_, jule::Str::lit("return ", 7));
	};
	static__228729b94_func(&((*(_self_))._field_Buf), &(_105713_sm));
	_2287d7d0c_write(_self_, jule::Str::lit("(", 1));
	if (_10559_ptr) {
		_2287d7d0c_write(_self_, jule::Str::lit("_self_.safe_ptr<", 16));
		_2287eb53a_structureIns((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_104350_hash))))._field_s);
		_2287d7d0c_write(_self_, jule::Str::lit(">(", 2));
		if ((!(_240e90b95_Production))) {
			_2287d7d0c_write(_self_, jule::Str::lit("_00___file", 10));
		};
		_2287d7d0c_write(_self_, jule::Str::lit(")", 1));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit("_self_.data.as<", 15));
		_2287eb1c7_structure((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*(_105713_sm))._field_Owner);
		_2287d7d0c_write(_self_, jule::Str::lit(">()", 3));
	};
	{
		auto expr = (*((*(_104337_m))))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_22c867a47:;
		if (it != expr_end) {
			jule::Ptr<_246864343_Param> _108316_mp = *it;
			{
				_2287d7d0c_write(_self_, jule::Str::lit(", ", 2));
				static__22872a557_param(&((*(_self_))._field_Buf), &(_108316_mp));
			}
			_iter_next_22c867a47:;
			++it;
			goto _iter_begin_22c867a47;
		}
		_iter_end_22c867a47:;
	};
	_2287d7d0c_write(_self_, jule::Str::lit(");\n}\n", 5));
	_2287d84b1_doneIndent(_self_);
}



inline void _2287e1b6d_traitWrappers(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c86c772:;
		if (it != expr_end) {
			jule::Ptr<_2287d6217_traitHash> _109221_hash = *it;
			{
				{
					auto expr = &((*((*(_109221_hash))._field_t))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c86d19b:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _109325_m = *it;
						{
							_2287e1970_traitWrapper(_self_, &(_109325_m), &(_109221_hash));
						}
						_iter_next_22c86d19b:;
						++it;
						goto _iter_begin_22c86d19b;
					}
					_iter_end_22c86d19b:;
				};
			}
			_iter_next_22c86c772:;
			++it;
			goto _iter_begin_22c86c772;
		}
		_iter_end_22c86c772:;
	};
}



inline void _2287e1ed1_traitDataMethods(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2468790e4_Trait>* _109941_t, jule::Ptr<_2287d6217_traitHash>* _109953_hash) {
	{
		auto expr = &((*((*(_109941_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c86dc90:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _110021_m = *it;
			{
				_2433b0c50_StrBuilder _110117_mIdent = static__2433b1019_New(static_cast<jule::I64>((*(_110021_m))._field_Ident.len()));;
				static__228729b94_func(&(_110117_mIdent), &(_110021_m));
				_2287d86ae_indent(_self_);
				_2287d7d0c_write(_self_, jule::Str::lit(".", 1));
				_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_110117_mIdent));
				_2287d7d0c_write(_self_, jule::Str::lit("=", 1));
				_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_110117_mIdent));
				_2287d7d0c_write(_self_, jule::Str::lit("_", 1));
				_2287d7d0c_write(_self_, (*((*(_109953_hash))))._field_ti);
				_2287d7d0c_write(_self_, jule::Str::lit("_", 1));
				_2287d7d0c_write(_self_, _2445d3339_Itoa((*((*(_109953_hash))))._field_i));
				_2287d7d0c_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_22c86dc90:;
			++it;
			goto _iter_begin_22c86dc90;
		}
		_iter_end_22c86dc90:;
	};
}



inline void _2287e2344_traitData(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2287d6217_traitHash>* _111634_hash, jule::Ptr<_2468790e4_Trait>* _111657_old) {
	if (((*((*((*(_111634_hash))))._field_t))._field_Methods.len() == 0LL)) {
		return;;
	};
	_2433b0c50_StrBuilder _112013_ident = static__2433b1019_New(static_cast<jule::I64>((*((*((*(_111634_hash))))._field_t))._field_Ident.len()));;
	static__22872a26b_traitDecl(&(_112013_ident), (*((*(_111634_hash))))._field_t);
	if (((*((*(_111634_hash))))._field_t != (*(_111657_old)))) {
		if (((*(_111657_old)) != nullptr)) {
			_2287d84b1_doneIndent(_self_);
			_2287d86ae_indent(_self_);
			_2287d7d0c_write(_self_, jule::Str::lit("};\n", 3));
		};
		_2287d7d0c_write(_self_, jule::Str::lit("static ", 7));
		_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_112013_ident));
		_2287d7d0c_write(_self_, jule::Str::lit("MptrData ", 9));
		_2287d80b5_writeBytes(_self_, _2433baac3_Buf(&_112013_ident));
		_2287d7d0c_write(_self_, jule::Str::lit("_mptr_data[] = {\n", 17));
		(*(_111657_old))=(*((*(_111634_hash))))._field_t;
		_2287d82b3_addIndent(_self_);
	};
	_2287d86ae_indent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("{\n", 2));
	_2287d82b3_addIndent(_self_);
	_2287e1ed1_traitDataMethods(_self_, &((*((*(_111634_hash))))._field_t), _111634_hash);
	_2287d84b1_doneIndent(_self_);
	_2287d86ae_indent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("},\n", 3));
}



inline void _2287e2542_traitDatas(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	jule::Ptr<_2468790e4_Trait> _114617_old = nullptr;;
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c87a461:;
		if (it != expr_end) {
			jule::Ptr<_2287d6217_traitHash> _114721_hash = *it;
			{
				_2287e2344_traitData(_self_, &(_114721_hash), &(_114617_old));
			}
			_iter_next_22c87a461:;
			++it;
			goto _iter_begin_22c87a461;
		}
		_iter_end_22c87a461:;
	};
	if ((_114617_old != nullptr)) {
		_2287d84b1_doneIndent(_self_);
		_2287d86ae_indent(_self_);
		_2287d7d0c_write(_self_, jule::Str::lit("};\n", 3));
	};
}



inline void _2287e2740_globals(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c87c2cb:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _115821_v = *it;
			{
				_2287ed284_kind((*(_self_))._field_tc.ptr(), &((*(_self_))._field_Buf), (*((*(_115821_v))._field_Kind))._field_Kind);
				_2287d7d0c_write(_self_, jule::Str::lit(" ", 1));
				static__22872b206_var(&((*(_self_))._field_Buf), _115821_v);
				_2287d7d0c_write(_self_, jule::Str::lit(" = ", 3));
				_22872283a_model((*(_self_))._field_ec, (*((*((*(_115821_v))._field_Value))._field_Data))._field_Model);
				_2287d7d0c_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_22c87c2cb:;
			++it;
			goto _iter_begin_22c87c2cb;
		}
		_iter_end_22c87c2cb:;
	};
}



inline void _2287e293d_decls(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287db31b_traitDecls(_self_);
	_2287db7c2_structurePlainDecls(_self_);
	_2287dd43e_structureDecls(_self_);
	(*(_self_))._field_headPos=static_cast<jule::I64>(_2433ba5a6_Len(&(*(_self_))._field_Buf));
	_2287dd63c_structureMethodDecls(_self_);
	_2287dea4a_funcDecls(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	_2287e00ab_traitDataTypes(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	_2287e1b6d_traitWrappers(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	_2287e2542_traitDatas(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	(*(_self_))._field_declPos=static_cast<jule::I64>(_2433ba5a6_Len(&(*(_self_))._field_Buf));
	_2287e2740_globals(_self_);
}



inline void _2287e2be6_structureMethods(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _118641_s) {
	{
		auto expr = &((*((*(_118641_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c884e1b:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _118721_f = *it;
			{
				_2287e1299_func(_self_, &(_118721_f));
				_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_22c884e1b:;
			++it;
			goto _iter_begin_22c884e1b;
		}
		_iter_end_22c884e1b:;
	};
}



inline void _2287e2e9e_structureOstream(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _119341_s) {
	_2287d86ae_indent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__22872ab2e_structureIns(&((*(_self_))._field_Buf), _119341_s);
	_2287d7d0c_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_2287d82b3_addIndent(_self_);
	_2287d86ae_indent(_self_);
	jule::Ptr<_246865d17_Fn> _120113_fts = _246854c18_FindMethod((*(_119341_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__246923c71_Str(_120113_fts)) {
		_2287d7d0c_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__228729b94_func(&((*(_self_))._field_Buf), &(_120113_fts));
		_2287d7d0c_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*((*((*(_119341_s))))._field_Decl))._field_Ident);
		_2287d7d0c_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_119341_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c8897e4:;
			if (it != expr_end) {
				jule::I64 _121118_i = it - expr->begin();
				jule::Ptr<_246853101_FieldIns> _121125_f = *it;
				{
					_2287d86ae_indent(_self_);
					_2287d7d0c_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_2287235a5_cstrBytes(&((*(_self_))._field_Buf), (*((*(_121125_f))._field_Decl))._field_Ident);
					_2287d7d0c_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_246853ba1_StructIns> _121817_strct = _2469b80bd_Struct((*(_121125_f))._field_Kind.ptr());;
					if ((((_121817_strct != nullptr) && ((*(_121817_strct))._field_Decl != nullptr)) && (*((*(_121817_strct))._field_Decl))._field_Binded)) {
						_2287d7d0c_write(_self_, jule::Str::lit(" cpp.", 5));
						static__22872ae1a_field(&((*(_self_))._field_Buf), &((*(_121125_f))._field_Decl));
						_2287d7d0c_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_2287d7d0c_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__22872ae1a_field(&((*(_self_))._field_Buf), &((*(_121125_f))._field_Decl));
					};
					if (((_121118_i + 1LL) < (*((*(_119341_s))))._field_Fields.len())) {
						_2287d7d0c_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_2287d7d0c_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_22c8897e4:;
				++it;
				_121118_i++;
				goto _iter_begin_22c8897e4;
			}
			_iter_end_22c8897e4:;
		};
		_2287d86ae_indent(_self_);
		_2287d7d0c_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_2287d86ae_indent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_2287d84b1_doneIndent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("}", 1));
}



inline void _2287e3257_structureIns(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246853ba1_StructIns>* _124437_s) {
	_2287e2be6_structureMethods(_self_, _124437_s);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	_2287e2e9e_structureOstream(_self_, _124437_s);
}



inline void _2287e3510_structure(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_246850e23_Struct>* _125034_s) {
	{
		auto expr = &((*((*(_125034_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c893c71:;
		if (it != expr_end) {
			jule::Ptr<_246853ba1_StructIns> _125121_ins = *it;
			{
				_2287e3257_structureIns(_self_, &(_125121_ins));
				_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_22c893c71:;
			++it;
			goto _iter_begin_22c893c71;
		}
		_iter_end_22c893c71:;
	};
}



inline void _2287e370d_structures(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8945bd:;
		if (it != expr_end) {
			jule::Ptr<_246850e23_Struct> _125821_s = *it;
			{
				if (((*(_125821_s))._field_Token != nullptr)) {
					_2287e3510_structure(_self_, &(_125821_s));
					_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_22c8945bd:;
			++it;
			goto _iter_begin_22c8945bd;
		}
		_iter_end_22c8945bd:;
	};
}



inline void _2287e390b_funcs(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _126735_pkg) mutable -> void {
		_2287e4896_iterFiles(_126735_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _126836_file) mutable -> void {
			{
				auto expr = &((*((*(_126836_file))))._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_22c898836:;
				if (it != expr_end) {
					jule::Ptr<_246865d17_Fn> _126929_f = *it;
					{
						if (((!(_240e90238_Test)) && _22880517b_hasDirective(&((*(_126929_f))._field_Directives), jule::Str::lit("test", 4)))) {
							goto _iter_next_22c898836;
						};
						if (((!((*(_126929_f))._field_Binded)) && ((*(_126929_f))._field_Token != nullptr))) {
							_2287e1299_func(_self_, &(_126929_f));
							_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
						};
					}
					_iter_next_22c898836:;
					++it;
					goto _iter_begin_22c898836;
				}
				_iter_end_22c898836:;
			};
		}));
	}));
}



inline void _2287e3bb4_pushInit(jule::Ptr<_2287d7658_ObjectCoder> _self_, jule::Ptr<_2468cbb08_Package>* _128233_pkg) {
	_2287e4896_iterFiles(_128233_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)>([=](jule::Ptr<_24697d726_SymbolTable>* _128332_file) mutable -> void {
		{
			auto expr = &((*((*(_128332_file))))._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c89b3c7:;
			if (it != expr_end) {
				jule::Ptr<_246865d17_Fn> _128420_f = *it;
				{
					if ((*(_128420_f))._field_Ident.equal("init", 4)) {
						_2287d86ae_indent(_self_);
						static__228729b94_func(&((*(_self_))._field_Buf), &(_128420_f));
						_2287d7d0c_write(_self_, jule::Str::lit("();\n", 4));
					};
				}
				_iter_next_22c89b3c7:;
				++it;
				goto _iter_begin_22c89b3c7;
			}
			_iter_end_22c89b3c7:;
		};
	}));
}



inline void _2287e3db2_initCaller(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287d7d0c_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_2287d82b3_addIndent(_self_);
	_2287dae20_iterPackages(_self_, jule::Fn<void(jule::Ptr<_2468cbb08_Package>*)>([=](jule::Ptr<_2468cbb08_Package>* _129735_pkg) mutable -> void {
		_2287e3bb4_pushInit(_self_, _129735_pkg);
	}));
	_2287d84b1_doneIndent(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _2287e40b0_end(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287d7d0c_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_240e90238_Test) {
		_2287d7d0c_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_2287d7d0c_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _2287e42ad_serializeHead(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287dab67_prepareStructures(_self_);
	_2287db11d_buildTraitMap(_self_);
	_2287da4b3_head(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
	_2287e293d_decls(_self_);
	if ((_2433ba5a6_Len(&(*(_self_))._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _133217_head = jule::Slice<jule::U8>::alloc(0LL, (_2433ba5a6_Len(&(*(_self_))._field_Buf) + _2433ba5a6_Len(&(*(_self_))._field_resultDecls)), 0);;
		(_133217_head).append(_2433baac3_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_headPos));;
		(_133217_head).append(_2433baac3_Buf(&(*(_self_))._field_resultDecls));;
		(*(_self_))._field_declPos+=_2433ba5a6_Len(&(*(_self_))._field_resultDecls);
		(_133217_head).append(_2433baac3_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_headPos));;
		{
			_2433bad7b_SetBuf(&(*(_self_))._field_Buf, _133217_head);
		};
	};
	_2287d7d0c_write(_self_, jule::Str::lit("\n", 1));
	_2287e370d_structures(_self_);
	_2287e390b_funcs(_self_);
	_2287e3db2_initCaller(_self_);
	_2287d7d0c_write(_self_, jule::Str::lit("\n\n", 2));
	if ((_2433ba5a6_Len(&(*(_self_))._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _134717_head = jule::Slice<jule::U8>::alloc(0LL, (_2433ba5a6_Len(&(*(_self_))._field_Buf) + _2433ba5a6_Len(&(*(_self_))._field_anyObj)), 0);;
		(_134717_head).append(_2433baac3_Buf(&(*(_self_))._field_Buf).slice(0LL, (*(_self_))._field_declPos));;
		(_134717_head).append(_2433baac3_Buf(&(*(_self_))._field_anyObj));;
		(_134717_head).append(_2433baac3_Buf(&(*(_self_))._field_Buf).slice((*(_self_))._field_declPos));;
		{
			_2433bad7b_SetBuf(&(*(_self_))._field_Buf, _134717_head);
		};
	};
}



inline void _2287e44ab_Serialize(jule::Ptr<_2287d7658_ObjectCoder> _self_) {
	_2287e42ad_serializeHead(_self_);
	_2287e40b0_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _2287d7658_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_227d456ab_ObjectDeadCode> static__227d7a46b_new(jule::Ptr<_227c1a66e_IR>* _3524_ir) {
	return jule::new_ptr<_227d456ab_ObjectDeadCode>(_227d456ab_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _22c1d314e_isLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_2468790e4_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_2468790e4_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_22c1d4e0e:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_22c1d4d43:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1d4d98:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_22c1d4d98:;
			++it;
			_5313_i++;
			goto _iter_begin_22c1d4d98;
		}
		_iter_end_22c1d4d98:;
	};
	return false;;
}

inline jule::Bool _22c1d8bd2_isLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246868c1b_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_246868c1b_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_22c1da50d:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_22c1da81b:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1da794:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_22c1da794:;
			++it;
			_5313_i++;
			goto _iter_begin_22c1da794;
		}
		_iter_end_22c1da794:;
	};
	return false;;
}

inline jule::Bool _22c1e125b_isLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246853ba1_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_246853ba1_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_22c1e4380:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_22c1e432a:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1e42a3:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_22c1e42a3:;
			++it;
			_5313_i++;
			goto _iter_begin_22c1e42a3;
		}
		_iter_end_22c1e42a3:;
	};
	return false;;
}

inline jule::Bool _22c1e6a36_isLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246922555_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_246922555_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_22c1e84e9:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_22c1e86d6:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1e83c8:;
		if (it != expr_end) {
			jule::I64 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_22c1e83c8:;
			++it;
			_5313_i++;
			goto _iter_begin_22c1e83c8;
		}
		_iter_end_22c1e83c8:;
	};
	return false;;
}



inline void _22c1d3517_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_2468790e4_Trait> _6135_t) {
	{
		
{
			_case_begin_22c1d70dc:;
			{
				{ jule::Slice<jule::Ptr<_2468790e4_Trait>> &__jule_push_dest = (*(_self_))._field_live._field_traits; __jule_push_dest.push(_6135_t); };
			}
		}
		_match_end_22c1d7021:;
	};
}

inline void _22c1d9034_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246868c1b_FnIns> _6135_t) {
	{
		
{
			_case_begin_22c1dccb3:;
			{
				{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_6135_t); };
			}
		}
		_match_end_22c1dd115:;
	};
}

inline void _22c1dede7_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246853ba1_StructIns> _6135_t) {
	{
		
{
			_case_begin_22c1e1701:;
			{
				{ jule::Slice<jule::Ptr<_246853ba1_StructIns>> &__jule_push_dest = (*(_self_))._field_live._field_structs; __jule_push_dest.push(_6135_t); };
			}
		}
		_match_end_22c1e169b:;
	};
}

inline void _22c1e6dee_pushLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_246922555_Var> _6135_t) {
	{
		
{
			_case_begin_22c2008ec:;
			{
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*(_self_))._field_live._field_vars; __jule_push_dest.push(_6135_t); };
			}
		}
		_match_end_22c200b1c:;
	};
}



inline void _227d7aca7_setReferencesAsLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_24686bdd9_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7813_i = 0LL;;
	for (; (_7813_i < _24686c5d2_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _24686c923_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_22c1d1ed8:;
					{
						jule::Ptr<_2468790e4_Trait> _8321_t = _8017_ref.cast_ptr<_2468790e4_Trait>(&__jule_any_type10);;
						if (_22c1d314e_isLive(_self_, &(_8321_t))) {
							goto _iter_next_22c1d13c2;
						};
						_22c1d3517_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_22c1d3d75:;
							if (it != expr_end) {
								jule::Ptr<_246865d17_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_22c1d4408:;
										if (it != expr_end) {
											jule::Ptr<_246868c1b_FnIns> _8933_mins = *it;
											{
												if (_22c1d8bd2_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_22c1d4408;
												};
												_22c1d9034_pushLive(_self_, _8933_mins);
												_227d7aca7_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_22c1d4408:;
											++it;
											goto _iter_begin_22c1d4408;
										}
										_iter_end_22c1d4408:;
									};
								}
								_iter_next_22c1d3d75:;
								++it;
								goto _iter_begin_22c1d3d75;
							}
							_iter_end_22c1d3d75:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_22c1d204e:;
					{
						jule::Ptr<_246868c1b_FnIns> _9821_f = _8017_ref.cast_ptr<_246868c1b_FnIns>(&__jule_any_type7);;
						if (_22c1d8bd2_isLive(_self_, &(_9821_f))) {
							goto _match_end_22c1d1779;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*(_9821_f))._field_Decl))._field_Statically)))) {
							if ((!(_22c1e125b_isLive(_self_, &((*(_9821_f))._field_Owner))))) {
								_22c1dede7_pushLive(_self_, (*(_9821_f))._field_Owner);
								_227d7aca7_setReferencesAsLive(_self_, &((*((*(_9821_f))._field_Owner))._field_Refers));
							};
						};
						_22c1d9034_pushLive(_self_, _9821_f);
						_227d7aca7_setReferencesAsLive(_self_, &((*(_9821_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_22c1d20b5:;
					{
						jule::Ptr<_246922555_Var> _11121_v = _8017_ref.cast_ptr<_246922555_Var>(&__jule_any_type8);;
						if (_22c1e6a36_isLive(_self_, &(_11121_v))) {
							goto _match_end_22c1d1779;
						};
						_22c1e6dee_pushLive(_self_, _11121_v);
						_227d7aca7_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_22c1d213c:;
					{
						jule::Ptr<_246853ba1_StructIns> _11821_s = _8017_ref.cast_ptr<_246853ba1_StructIns>(&__jule_any_type9);;
						if (_22c1e125b_isLive(_self_, &(_11821_s))) {
							goto _match_end_22c1d1779;
						};
						_22c1dede7_pushLive(_self_, _11821_s);
						_227d7aca7_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*(_11821_s))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_22c2022e4:;
							if (it != expr_end) {
								jule::Ptr<_246865d17_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_22c2038ab:;
										if (it != expr_end) {
											jule::Ptr<_246868c1b_FnIns> _12533_ins = *it;
											{
												if (_22c1d8bd2_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_22c2038ab;
												};
												if (_227d7d97a_isTraitMethod(&(_11821_s), &(_12533_ins))) {
													_22c1d9034_pushLive(_self_, _12533_ins);
													_227d7aca7_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
											}
											_iter_next_22c2038ab:;
											++it;
											goto _iter_begin_22c2038ab;
										}
										_iter_end_22c2038ab:;
									};
								}
								_iter_next_22c2022e4:;
								++it;
								goto _iter_begin_22c2022e4;
							}
							_iter_end_22c2022e4:;
						};
					}
				}
				_match_end_22c1d1779:;
			};
		}
	_iter_next_22c1d13c2:;
	}
	_iter_end_22c1d13c2:;;
}



inline void _227d7b060_inits(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_2468cbb08_Package>* _14230_pkg) {
	{
		auto expr = &((*((*(_14230_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c20028c:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _14321_file = *it;
			{
				{
					auto expr = &((*(_14321_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c204208:;
					if (it != expr_end) {
						jule::Ptr<_246865d17_Fn> _14425_f = *it;
						{
							if ((*(_14425_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_246868c1b_FnIns> _14625_ins = (*(_14425_f))._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_14625_ins); };
								_227d7aca7_setReferencesAsLive(_self_, &((*(_14625_ins))._field_Refers));
							};
						}
						_iter_next_22c204208:;
						++it;
						goto _iter_begin_22c204208;
					}
					_iter_end_22c204208:;
				};
			}
			_iter_next_22c20028c:;
			++it;
			goto _iter_begin_22c20028c;
		}
		_iter_end_22c20028c:;
	};
}



inline void _227d7b318_collectLivePackage(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_2468cbb08_Package>* _15443_pkg) {
	_227d7b060_inits(_self_, _15443_pkg);
	if (_240e90238_Test) {
		{
			auto expr = &((*((*(_15443_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22c208020:;
			if (it != expr_end) {
				jule::Ptr<_24697d726_SymbolTable> _16025_file = *it;
				{
					{
						auto expr = &((*(_16025_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22c20896b:;
						if (it != expr_end) {
							jule::Ptr<_246865d17_Fn> _16129_f = *it;
							{
								if (_227d7d5b2_hasDirective(&((*(_16129_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_246868c1b_FnIns> _16329_ins = (*(_16129_f))._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_16329_ins); };
									_227d7aca7_setReferencesAsLive(_self_, &((*(_16329_ins))._field_Refers));
								};
							}
							_iter_next_22c20896b:;
							++it;
							goto _iter_begin_22c20896b;
						}
						_iter_end_22c20896b:;
					};
				}
				_iter_next_22c208020:;
				++it;
				goto _iter_begin_22c208020;
			}
			_iter_end_22c208020:;
		};
	};
}



inline void _227d7b516_collectLive(jule::Ptr<_227d456ab_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c20962b:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _17321_used = *it;
			{
				if ((!((*(_17321_used))._field_Binded))) {
					_227d7b318_collectLivePackage(_self_, &((*(_17321_used))._field_Package));
				};
			}
			_iter_next_22c20962b:;
			++it;
			goto _iter_begin_22c20962b;
		}
		_iter_end_22c20962b:;
	};
	_227d7b318_collectLivePackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
	jule::Ptr<_246865d17_Fn> _18113_main = _2468cd18c_FindFn((*((*(_self_))._field_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_246868c1b_FnIns> _18213_ins = (*(_18113_main))._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_246868c1b_FnIns>> &__jule_push_dest = (*(_self_))._field_live._field_fns; __jule_push_dest.push(_18213_ins); };
	_227d7aca7_setReferencesAsLive(_self_, &((*(_18213_ins))._field_Refers));
}



inline void _227d7b7be_removeDeadGlobals(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246922555_Var>>* _18742_vars) {
	jule::I64 _18813_i = 0LL;;
	while ((_18813_i < (*(_18742_vars)).len())) {
		{
			jule::Ptr<_246922555_Var> _19013_v = (*(_18742_vars))[_18813_i];;
			if (_22c1e6a36_isLive(_self_, &(_19013_v))) {
				(_18813_i)++;
				goto _iter_next_22c20e71e;
			};
			(*(_18742_vars))=jule::append((*(_18742_vars)).slice(0LL, _18813_i),(*(_18742_vars)).slice((_18813_i + 1LL)));
		}
	_iter_next_22c20e71e:;
	}
	_iter_end_22c20e71e:;;
}



inline void _227d7ba77_removeDeadFns(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246865d17_Fn>>* _19938_funcs) {
	jule::I64 _20013_i = 0LL;;
	while ((_20013_i < (*(_19938_funcs)).len())) {
		{
			jule::Ptr<_246865d17_Fn> _20217_f = (*(_19938_funcs))[_20013_i];;
			jule::I64 _20317_j = 0LL;;
			while ((_20317_j < (*(_20217_f))._field_Instances.len())) {
				{
					jule::Ptr<_246868c1b_FnIns> _20517_ins = (*(_20217_f))._field_Instances[_20317_j];;
					if (_22c1d8bd2_isLive(_self_, &(_20517_ins))) {
						(_20317_j)++;
						goto _iter_next_22c211a1d;
					};
					(*(_20217_f))._field_Instances=jule::append((*(_20217_f))._field_Instances.slice(0LL, _20317_j),(*(_20217_f))._field_Instances.slice((_20317_j + 1LL)));
				}
			_iter_next_22c211a1d:;
			}
			_iter_end_22c211a1d:;;
			if (((*(_20217_f))._field_Instances.len() == 0LL)) {
				(*(_19938_funcs))=jule::append((*(_19938_funcs)).slice(0LL, _20013_i),(*(_19938_funcs)).slice((_20013_i + 1LL)));
				goto _iter_next_22c20e8ea;
			};
			(_20013_i)++;
		}
	_iter_next_22c20e8ea:;
	}
	_iter_end_22c20e8ea:;;
}



inline void _227d7bd30_removeDeadStructs(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_246850e23_Struct>>* _22042_structs) {
	jule::I64 _22113_i = 0LL;;
	while ((_22113_i < (*(_22042_structs)).len())) {
		{
			jule::Ptr<_246850e23_Struct> _22317_s = (*(_22042_structs))[_22113_i];;
			jule::I64 _22417_j = 0LL;;
			while ((_22417_j < (*(_22317_s))._field_Instances.len())) {
				{
					jule::Ptr<_246853ba1_StructIns> _22621_ins = (*(_22317_s))._field_Instances[_22417_j];;
					_227d7ba77_removeDeadFns(_self_, &((*(_22621_ins))._field_Methods));
					if ((((*(_22621_ins))._field_Methods.len() != 0LL) || _22c1e125b_isLive(_self_, &(_22621_ins)))) {
						(_22417_j)++;
						goto _iter_next_22c2151c5;
					};
					(*(_22317_s))._field_Instances=jule::append((*(_22317_s))._field_Instances.slice(0LL, _22417_j),(*(_22317_s))._field_Instances.slice((_22417_j + 1LL)));
				}
			_iter_next_22c2151c5:;
			}
			_iter_end_22c2151c5:;;
			if (((*(_22317_s))._field_Instances.len() == 0LL)) {
				(*(_22042_structs))=jule::append((*(_22042_structs)).slice(0LL, _22113_i),(*(_22042_structs)).slice((_22113_i + 1LL)));
				goto _iter_next_22c2146be;
			};
			(_22113_i)++;
		}
	_iter_next_22c2146be:;
	}
	_iter_end_22c2146be:;;
}



inline void _227d7c0d8_removeDeadTraits(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_2468790e4_Trait>>* _24241_traits) {
	jule::I64 _24313_i = 0LL;;
	while ((_24313_i < (*(_24241_traits)).len())) {
		{
			jule::Ptr<_2468790e4_Trait> _24517_t = (*(_24241_traits))[_24313_i];;
			if ((!(_22c1d314e_isLive(_self_, &(_24517_t))))) {
				(*(_24241_traits))=jule::append((*(_24241_traits)).slice(0LL, _24313_i),(*(_24241_traits)).slice((_24313_i + 1LL)));
				goto _iter_next_22c2188d2;
			};
			jule::I64 _25017_j = 0LL;;
			while ((_25017_j < (*(_24517_t))._field_Implemented.len())) {
				{
					jule::Ptr<_246850e23_Struct> _25217_s = (*(_24517_t))._field_Implemented[_25017_j];;
					if (((*(_25217_s))._field_Instances.len() > 0LL)) {
						(_25017_j)++;
						goto _iter_next_22c2190ca;
					};
					(*(_24517_t))._field_Implemented=jule::append((*(_24517_t))._field_Implemented.slice(0LL, _25017_j),(*(_24517_t))._field_Implemented.slice((_25017_j + 1LL)));
				}
			_iter_next_22c2190ca:;
			}
			_iter_end_22c2190ca:;;
			(_24313_i)++;
		}
	_iter_next_22c2188d2:;
	}
	_iter_end_22c2188d2:;;
}



inline void _227d7c391_removeDeadsFile(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_24697d726_SymbolTable>* _26340_file) {
	_227d7ba77_removeDeadFns(_self_, &((*((*(_26340_file))))._field_Funcs));
	_227d7bd30_removeDeadStructs(_self_, &((*((*(_26340_file))))._field_Structs));
	_227d7c0d8_removeDeadTraits(_self_, &((*((*(_26340_file))))._field_Traits));
	_227d7b7be_removeDeadGlobals(_self_, &((*((*(_26340_file))))._field_Vars));
}



inline void _227d7c649_removeDeadsPackage(jule::Ptr<_227d456ab_ObjectDeadCode> _self_, jule::Ptr<_2468cbb08_Package>* _27043_pkg) {
	{
		auto expr = &((*((*(_27043_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c21da2a:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _27121_file = *it;
			{
				_227d7c391_removeDeadsFile(_self_, &(_27121_file));
			}
			_iter_next_22c21da2a:;
			++it;
			goto _iter_begin_22c21da2a;
		}
		_iter_end_22c21da2a:;
	};
}



inline void _227d7c847_removeDeads(jule::Ptr<_227d456ab_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c21e388:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _27721_used = *it;
			{
				if ((!((*(_27721_used))._field_Binded))) {
					_227d7c649_removeDeadsPackage(_self_, &((*(_27721_used))._field_Package));
				};
			}
			_iter_next_22c21e388:;
			++it;
			goto _iter_begin_22c21e388;
		}
		_iter_end_22c21e388:;
	};
	_227d7c649_removeDeadsPackage(_self_, &((*((*(_self_))._field_ir))._field_Main));
}



inline void _227d7ca45_elimanate(jule::Ptr<_227d456ab_ObjectDeadCode> _self_) {
	_227d7b516_collectLive(_self_);
	_227d7c847_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _227d456ab_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_227c1a66e_IR__jule_tuple_s_24345e617_Log static__227c1aad1_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_227c1a66e_IR__jule_tuple_s_24345e617_Log __jule_func_result;
	jule::Ptr<_227c17baa_JuleImporter> _2813_importer = static__227c180a6_New(_227c1c5b6_buildCompileInfo());;
	jule::Slice<jule::Ptr<_24682d472_Ast>> _2913_files;;
	jule::Slice<_24345e617_Log> _2924_logs;;
	({
		__jule_tuple_sx_24682d472_Ast__jule_tuple_s_24345e617_Log __jule_assign_result = _227c19591_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_2468cbb08_Package> _3913_pkg;;
	({
		__jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log __jule_assign_result = _2469d585a_AnalyzePackage(_2913_files, jule::Trait<_2468c5cbc_Importer>(_2813_importer, 0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_227c1a66e_IR> _4413_ir = jule::new_ptr<_227c1a66e_IR>(_227c1a66e_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_227c1833c_AllPackages(_2813_importer.ptr()), });;
	(*(_4413_ir))._field_Passes=_227c1c3a7_getAllUniquePasses(&((*(_4413_ir))._field_Main), (*(_4413_ir))._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _227c1b0ba_appendStructs(_227c1a66e_IR* _self_, jule::Ptr<_2468cbb08_Package>* _5633_p, jule::Slice<jule::Ptr<_246850e23_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c199a1c:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c19a435:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_246850e23_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_22c19a435:;
						++it;
						goto _iter_begin_22c19a435;
					}
					_iter_end_22c19a435:;
				};
			}
			_iter_next_22c199a1c:;
			++it;
			goto _iter_begin_22c199a1c;
		}
		_iter_end_22c199a1c:;
	};
}



inline jule::Slice<jule::Ptr<_246850e23_Struct>> _227c1b351_GetAllStructures(_227c1a66e_IR* _self_) {
	jule::Slice<jule::Ptr<_246850e23_Struct>> _6917_buffer = nullptr;;
	_227c1b0ba_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c19b447:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_227c1b0ba_appendStructs(_self_, &((*(_7121_u))._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_22c19b447:;
			++it;
			goto _iter_begin_22c19b447;
		}
		_iter_end_22c19b447:;
	};
	return _6917_buffer;;
}



inline void _227c1b6b4_appendGlobals(_227c1a66e_IR* _self_, jule::Ptr<_2468cbb08_Package>* _7933_p, jule::Slice<jule::Ptr<_246922555_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c19ccea:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c19d713:;
					if (it != expr_end) {
						jule::Ptr<_246922555_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*(_8125_v))._field_Binded))) && (!((*(_8125_v))._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_22c19d713:;
						++it;
						goto _iter_begin_22c19d713;
					}
					_iter_end_22c19d713:;
				};
			}
			_iter_next_22c19ccea:;
			++it;
			goto _iter_begin_22c19ccea;
		}
		_iter_end_22c19ccea:;
	};
}



inline jule::Slice<jule::Ptr<_246922555_Var>> _227c1b94a_GetAllGlobals(_227c1a66e_IR* _self_) {
	jule::Slice<jule::Ptr<_246922555_Var>> _9217_buffer = nullptr;;
	_227c1b6b4_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c19de83:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_227c1b6b4_appendGlobals(_self_, &((*(_9421_u))._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_22c19de83:;
			++it;
			goto _iter_begin_22c19de83;
		}
		_iter_end_22c19de83:;
	};
	return _9217_buffer;;
}



inline void _227c1bb48_Order(_227c1a66e_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_227c1b351_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_227c1b94a_GetAllGlobals(_self_);
	static__227c1da29_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__227c1dc5a_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _227c1a66e_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _246854025_Str(_246853ba1_StructIns* _self_) {
	_2433b0c50_StrBuilder _23913_kind = static__2433b1019_New(32LL);;
	_2433b982a_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2433b9ad3_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22ad43673:;
			if (it != expr_end) {
				jule::I64 _24317_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> *_24320_g = it;
				{
					_2433b982a_WriteStr(&_23913_kind, _2469b47a1_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2433b9ad3_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_22ad43673:;
				++it;
				_24317_i++;
				goto _iter_begin_22ad43673;
			}
			_iter_end_22ad43673:;
		};
		_2433b9ad3_WriteByte(&_23913_kind, ']');
	};
	return _2433ba122_Str(&_23913_kind);;
}



inline jule::Bool _246854366_Equal(jule::Ptr<_246853ba1_StructIns> _self_, jule::Ptr<_2469b43d8_TypeKind> _25521_other) {
	jule::Ptr<_246853ba1_StructIns> _2569_s = _2469b80bd_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _26913_i = 0LL;;
	for (; (_26913_i < (*(_self_))._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_2469b4ae2_Equal((*((*(_self_))._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_22ad47996:;
	}
	_iter_end_22ad47996:;;
	return true;;
}



inline jule::Bool _24685481c_Same(_246853ba1_StructIns* _self_, jule::Ptr<_246853ba1_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*(_28319_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad49811:;
		if (it != expr_end) {
			jule::I64 _28713_i = it - expr->begin();
			jule::Ptr<_2469b2a02_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_2469b2a02_InsGeneric> _28813_g2 = (*(_28319_s))._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*((*(_28813_g2))._field_Kind))._field_BindIdent) || (!(_2469b4ae2_Equal((*((*(_28716_g))))._field_Kind, (*(_28813_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_22ad49811:;
			++it;
			_28713_i++;
			goto _iter_begin_22ad49811;
		}
		_iter_end_22ad49811:;
	};
	return true;;
}



inline jule::Ptr<_246865d17_Fn> _246854c18_FindMethod(_246853ba1_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad4cbbb:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*(_29921_f))._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_22ad4cbbb:;
			++it;
			goto _iter_begin_22ad4cbbb;
		}
		_iter_end_22ad4cbbb:;
	};
	return nullptr;;
}



inline jule::Ptr<_246853101_FieldIns> _246855059_FindField(_246853ba1_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad4dedb:;
		if (it != expr_end) {
			jule::Ptr<_246853101_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_22ad4dedb:;
			++it;
			goto _iter_begin_22ad4dedb;
		}
		_iter_end_22ad4dedb:;
	};
	return nullptr;;
}



inline jule::Ptr<_246922555_Var> _24685539a_FindStatic(_246853ba1_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad5020c:;
		if (it != expr_end) {
			jule::Ptr<_246922555_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_22ad5020c:;
			++it;
			goto _iter_begin_22ad5020c;
		}
		_iter_end_22ad5020c:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _246853ba1_StructIns _Src) {
	_Stream << _246854025_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_24351d7b4_Cmd> static__24351dbd2_New(jule::Str _2619_path) {
	return jule::new_ptr<_24351d7b4_Cmd>(_24351d7b4_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _24351ddd0_Spawn(_24351d7b4_Cmd* _self_) {
	({
		auto except = _243574441_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _24351e364_Wait(_24351d7b4_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _2435748c5_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _243574441_spawn(_24351d7b4_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _809_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_241eadb5c_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_2297394dd:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_22973890a:;
			{
				_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9617_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9617_args[0LL]=_809_path;
				(_9617_args).append((*(_self_))._field_Args);;
				({
					auto except = _2435741dd_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_243573eac_execvp(&(_809_path), &(_9617_args));
				jule::Str _10113_code = _243570052_Itoa(static_cast<jule::I64>(_240e913b0_GetLastErrno()));;
				{
					_241ec2852_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10113_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10113_code.len())));
				};
				_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_243575bd4_Exit(1LL);
			}
		}
		else {
			_case_begin_229734285:;
			{
				_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10813_n = _241ec207c_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_241ec2423_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10813_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11217_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _243565d06_AtoiBp((&(_10721_buf[0LL])), _10813_n);
						_11217_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_243575167_processErrorFromCode(_11217_code), &__jule_any_type0));
				};
			}
		}
		_match_end_22973682b:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _2435748c5_wait(_24351d7b4_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13213_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13213_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_2435753ba_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13213_stat)));;
}





std::ostream &operator<<(std::ostream &_Stream, _24351d7b4_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _241e6d4bd_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _241e9e389_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _739_n = 0LL;;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
			}
		_iter_next_22889d455:;
		}
		_iter_end_22889d455:;;
	};
	if ((_739_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _809_buf = jule::Slice<jule::U8>::alloc(_739_n, _739_n, 0);;
	_739_n=0LL;
	{
		for (; (_6924_s[_739_n] != 0LLU); (_739_n)++) {
			{
				_809_buf[_739_n]=_6924_s[_739_n];
			}
		_iter_next_22889d8a6:;
		}
		_iter_end_22889d8a6:;;
	};
	return static_cast<jule::Str>(_809_buf);;
}



inline jule::I64 _240e913b0_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _241eadb5c_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _241eaded1_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _241eae410_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _241eae784_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _241eaec7e_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _241eb0048_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _241eb0312_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _241eb0c19_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _241eb0ed3_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _241eb129c_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _241ec207c_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _241ec2423_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _241ec2852_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _241ec2a83_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _242099495_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _2288edcd0_Slice(jule::U8* _2316_e, jule::I64 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _2420a67c1_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _2288edcd0_Slice((&(_4113_s[0LL])), static_cast<jule::I64>(_4113_s.len()));;
}



inline jule::Str _2420a6a8a_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _242099495_Str((&(_5013_b[0LL])), static_cast<jule::I64>(_5013_b.len()));;
}



inline jule::Str _2420a6d54_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	jule::Str _595_s = _2420a6a8a_BytesStr(_5817_b);;
	{
		if (_5817_b.data.ref != nullptr) {
			_595_s.buffer.ref = _5817_b.data.ref;
			_595_s.buffer.add_ref();
		};
	};
	return _595_s;;
}



inline jule::Slice<jule::U8> _2420a711d_BytesFromStr(jule::Str _7017_s) {
	jule::Slice<jule::U8> _719_b = _2420a67c1_StrBytes(_7017_s);;
	{
		if (_7017_s.buffer.ref != nullptr) {
			_719_b.data.ref = _7017_s.buffer.ref;
			_719_b.data.add_ref();
		};
	};
	return _719_b;;
}



inline jule::I64 _2420d0388_getLastOsError(void) {
	jule::I64 _305_err = _240e913b0_GetLastErrno();;
	{
		auto &_match_expr{ _305_err };
		
		if (_match_expr == 13LL) {
			_case_begin_228907080:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_228906942:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_2289069b9:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_228906a41:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_228906ca5:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_228906d1b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_228906d82:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_2289068ba:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_228906865:;
	};
}



inline jule::Slice<jule::Str> _2420d1422_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _2420d18b7_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _2420d2313_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _2420d2313_getwd(void) {
	jule::U8* _119_buff = _241eae784_Getcwd(nullptr, 0LLU);;
	if ((_119_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_2420d0388_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _155_pwd = _241e9e389_BytePtrToStr(_119_buff);;
	{
		_241e6d4bd_Free(_119_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _155_pwd);;
}



inline jule::Bool _2431d63a0_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_2432464dc__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _24324eade_isExcludingLatin(_2431e060c_Letter, _7613_r);;
}



inline jule::Bool _24324de62_is16(jule::Slice<_24324c1c4_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2295cb638:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_24324c1c4_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2295cb638:;
				++it;
				_19313_i++;
				goto _iter_begin_2295cb638;
			}
			_iter_end_2295cb638:;
		};
		return false;;
	};
	jule::I64 _2089_lo = 0LL;;
	jule::I64 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I64 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_24324c1c4_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=static_cast<jule::I64>((_2119_m + 1LL));
				};
			};
		}
	_iter_next_2295ca3c3:;
	}
	_iter_end_2295ca3c3:;;
	return false;;
}



inline jule::Bool _24324e2d6_is32(jule::Slice<_24324c702_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2295d262d:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_24324c702_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_2295d262d:;
				++it;
				_23013_i++;
				goto _iter_begin_2295d262d;
			}
			_iter_end_2295d262d:;
		};
		return false;;
	};
	jule::I64 _2459_lo = 0LL;;
	jule::I64 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I64 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_24324c702_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=static_cast<jule::I64>((_2489_m + 1LL));
				};
			};
		}
	_iter_next_2295ce295:;
	}
	_iter_end_2295ce295:;;
	return false;;
}



inline jule::Bool _24324eade_isExcludingLatin(jule::Ptr<_24324cba8_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_24324c1c4_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2829_off = (*(_27821_rangeTab))._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _24324de62_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_24324c702_Range32> *_2876_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _24324e2d6_is32((*(_2876_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _24324eda8_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_2432464dc__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _24324eade_isExcludingLatin(_2431e6b63_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _24335a711_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _243359567_first[static_cast<jule::I64>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1955_sz = static_cast<jule::I64>((_1875_x & 7LLU));;
	_243359aea_acceptRange _1965_accept = _243359e08_acceptRanges[static_cast<jule::I64>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _24335aa52_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _243359567_first[static_cast<jule::I64>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2425_sz = static_cast<jule::I64>((_2345_x & 7LLU));;
	_243359aea_acceptRange _2435_accept = _243359e08_acceptRanges[static_cast<jule::I64>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _24335ad1b_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2805_end = _27619_p.len();;
	jule::I64 _2819_start = (_2805_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_2819_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2899_lim = (_2805_end - 4LL);;
	if ((_2899_lim < 0LL)) {
		_2899_lim=0LL;
	};
	(_2819_start)--;
	for (; (_2819_start >= _2899_lim); (_2819_start)--) {
		{
			if (_24335c845_RuneStart(_27619_p[_2819_start])) {
				goto _iter_end_229622a36;
			};
		}
	_iter_next_229622a36:;
	}
	_iter_end_229622a36:;;
	if ((_2819_start < 0LL)) {
		_2819_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune(_27619_p.slice(_2819_start, _2805_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_2819_start + __jule_func_result.__jule_result_arg1) != _2805_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _24335bb74_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _24335bee8_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _24335bee8_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_22963642e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_22963674d:;
			{
				_41242_r=128LL;
				goto _case_begin_2296343b6;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_2296343b6:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_229634350:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_2296342d9:;
	};
}



inline jule::I64 _24335c57b_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_22963ddb5;
			};
			jule::U8 _4829_x = _243359567_first[static_cast<jule::I64>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_22963ddb5;
			};
			jule::I64 _48713_size = static_cast<jule::I64>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_22963ddb5;
			};
			_243359aea_acceptRange _4929_accept = _243359e08_acceptRanges[static_cast<jule::I64>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_22963ddb5:;
	}
	_iter_end_22963ddb5:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _24335c845_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _243387b7d_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22965cbe7:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_22965cbe7:;
			++it;
			_399_i++;
			goto _iter_begin_22965cbe7;
		}
		_iter_end_22965cbe7:;
	};
	return -1LL;;
}



inline jule::I64 _24339a4a9_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _545_first = (&(_5017_s[0LL]));;
	jule::U8* _559_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_559_it >= _545_first); (_559_it)--) {
		{
			{
				if (((*(_559_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_559_it - _545_first))));;
				};
			};
		}
	_iter_next_22965e666:;
	}
	_iter_end_22965e666:;;
	return -1LL;;
}



inline jule::I64 _24339a850_FindByteStr(jule::Str _6716_s, jule::U8 _6724_b) {
	return static_cast<jule::I64>(_243387b7d_FindByte(_2420a67c1_StrBytes(_6716_s), _6724_b));;
}



inline jule::I64 _24339abc4_FindLastByteStr(jule::Str _7220_s, jule::U8 _7228_b) {
	return static_cast<jule::I64>(_24339a4a9_FindLastByte(_2420a67c1_StrBytes(_7220_s), _7228_b));;
}



inline jule::Str _24339ae7c_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_2433b0c50_StrBuilder _209_ss = static__2433b1019_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2433b982a_WriteStr(&_209_ss, _1211_s);
		}
	_iter_next_22967c596:;
	}
	_iter_end_22967c596:;;
	_2433b9ad3_WriteByte(&_209_ss, 0LLU);
	return _2420a6d54_StrFromBytes(_2433baac3_Buf(&_209_ss).slice(0LL, (_2433ba5a6_Len(&_209_ss) - 1LL)));;
}



inline jule::Bool _24339b400_hasPrefix(jule::Str* _2815_s, jule::Str* _2824_sub, jule::I64 _2838_start) {
	if ((((*(_2824_sub)).len() == 0LL) || (((*(_2815_s)).len() - _2838_start) < (*(_2824_sub)).len()))) {
		return false;;
	};
	jule::I64 _339_i = 0LL;;
	for (; (_339_i < (*(_2824_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_339_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2838_start + 1LL));
		_339_i = ___jule_assign_arg;
		_2838_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2815_s))[_2838_start] != (*(_2824_sub))[_339_i])) {
				return false;;
			};
		}
	_iter_next_229680951:;
	}
	_iter_end_229680951:;;
	return true;;
}



inline jule::Bool _24339b774_HasPrefix(jule::Str _4314_s, jule::Str _4322_sub) {
	return _24339b400_hasPrefix(&(_4314_s), &(_4322_sub), 0LL);;
}



inline jule::Bool _24339bc2a_hasSuffix(jule::Str* _4715_s, jule::Str* _4724_sub, jule::I64 _4738_start) {
	if ((((*(_4724_sub)).len() == 0LL) || (((*(_4715_s)).len() - _4738_start) < (*(_4724_sub)).len()))) {
		return false;;
	};
	_4738_start=static_cast<jule::I64>(((*(_4715_s)).len() - _4738_start));
	jule::I64 _539_i = 0LL;;
	for (; (_539_i < (*(_4724_sub)).len()); (_539_i)++) {
		{
			if (((*(_4715_s))[((_4738_start - _539_i) - 1LL)] != (*(_4724_sub))[(((*(_4724_sub)).len() - _539_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_229682799:;
	}
	_iter_end_229682799:;;
	return true;;
}



inline jule::Bool _24339c06b_HasSuffix(jule::Str _6314_s, jule::Str _6322_sub) {
	return _24339bc2a_hasSuffix(&(_6314_s), &(_6322_sub), 0LL);;
}



inline jule::I64 _24339c49a_FindAt(jule::Str _7111_s, jule::Str _7119_sub, jule::I64 _7133_i) {
	if ((((_7133_i < 0LL) || (_7111_s.len() < _7119_sub.len())) || (_7119_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7133_i < _7111_s.len()); (_7133_i)++) {
		{
			if (_24339b400_hasPrefix(&(_7111_s), &(_7119_sub), _7133_i)) {
				return _7133_i;;
			};
		}
	_iter_next_229685505:;
	}
	_iter_end_229685505:;;
	return -1LL;;
}



inline jule::I64 _24339cd5d_FindLastAt(jule::Str _9415_s, jule::Str _9423_sub, jule::I64 _9433_i) {
	jule::I64 _959_j = ((_9433_i - _9423_sub.len()) + 1LL);;
	if (((((_9423_sub.len() == 0LL) || (_9433_i < 0LL)) || (_9433_i >= _9415_s.len())) || (_959_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_2296886a1:;
	for (; (_959_j >= 0LL); (_959_j)--) {
		{
			jule::I64 _10113_k = _959_j;;
			jule::I64 _10213_z = 0LL;;
			for (; (_10213_z < _9423_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10113_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10213_z + 1LL));
				_10113_k = ___jule_assign_arg;
				_10213_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9415_s[_10113_k] != _9423_sub[_10213_z])) {
						goto _iter_next_2296882e9;
					};
				}
			_iter_next_229689196:;
			}
			_iter_end_229689196:;;
			return _959_j;;
		}
	_iter_next_2296882e9:;
	}
	_iter_end_2296882e9:;;
	return -1LL;;
}



inline jule::I64 _24339d1d2_FindLast(jule::Str _11613_s, jule::Str _11621_sub) {
	return static_cast<jule::I64>(_24339cd5d_FindLastAt(_11613_s, _11621_sub, static_cast<jule::I64>((_11613_s.len() - 1LL))));;
}



inline jule::I64 _24339e931_FindLastByte(jule::Str _18017_s, jule::U8 _18025_b) {
	return static_cast<jule::I64>(_24339abc4_FindLastByteStr(_18017_s, _18025_b));;
}



inline jule::I64 _24339ee5e_FindRune(jule::Str _18713_s, jule::I32 _18721_r) {
	jule::I64 _1889_i = 0LL;;
	while ((_1889_i < _18713_s.len())) {
		{
			jule::I32 _1909_br = 0;;
			jule::I64 _19013_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335aa52_DecodeRuneStr(_18713_s.slice(_1889_i));
				_1909_br = __jule_assign_result.__jule_result_arg0;
				_19013_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_18721_r == _1909_br)) {
				return _1889_i;;
			};
			_1889_i+=_19013_n;
		}
	_iter_next_229691940:;
	}
	_iter_end_229691940:;;
	return -1LL;;
}



inline jule::I64 _2433a0657_FindAny(jule::Str _21812_s, jule::Str _21820_runes) {
	jule::I64 _2199_i = 0LL;;
	while ((_2199_i < _21812_s.len())) {
		{
			jule::I32 _2219_r = 0;;
			jule::I64 _22112_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335aa52_DecodeRuneStr(_21812_s.slice(_2199_i));
				_2219_r = __jule_assign_result.__jule_result_arg0;
				_22112_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_24339ee5e_FindRune(_21820_runes, _2219_r) != -1LL)) {
				return _2199_i;;
			};
			_2199_i+=_22112_n;
		}
	_iter_next_229694a0e:;
	}
	_iter_end_229694a0e:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2433a0e0a_Split(jule::Str _24910_s, jule::Str _24918_sub, jule::I64 _24932_n) {
	jule::I64 _2509_cap = _24932_n;;
	if ((_24932_n < 0LL)) {
		_2509_cap=16LLU;
	};
	jule::Slice<jule::Str> _2549_parts = jule::Slice<jule::Str>::alloc(0LL, _2509_cap);;
	if ((_24932_n == 0LL)) {
		return _2549_parts;;
	};
	if ((_24932_n < 0LL)) {
		_24932_n=static_cast<jule::I64>(_24910_s.len());
	};
	jule::I64 _2619_i = 0LL;;
	for (; (_24932_n > 0LL); (_24932_n)--) {
		{
			jule::I64 _2639_j = _24339c49a_FindAt(_24910_s, _24918_sub, _2619_i);;
			if ((_2639_j == -1LL)) {
				goto _iter_end_229699717;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i, _2639_j)); };
			_2619_i=static_cast<jule::I64>((_2639_j + _24918_sub.len()));
		}
	_iter_next_229699717:;
	}
	_iter_end_229699717:;;
	if (((_24932_n > 0LL) && (_2619_i < _24910_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2549_parts; __jule_push_dest.push(_24910_s.slice(_2619_i)); };
	};
	return _2549_parts;;
}



inline jule::Bool _2433a127e_Contains(jule::Str _27713_s, jule::Str _27721_sub) {
	return (_24339c49a_FindAt(_27713_s, _27721_sub, 0LL) != -1LL);;
}



inline jule::Bool _2433a1ceb_ContainsAny(jule::Str _29216_s, jule::Str _29224_runes) {
	return (_2433a0657_FindAny(_29216_s, _29224_runes) != -1LL);;
}



inline jule::I64 _2433a2170_Count(jule::Str _29810_s, jule::Str _29818_sub) {
	if ((_29818_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _3029_n = 0LL;;
	jule::I64 _3039_i = 0LL;;
	for (;;) {
		{
			jule::I64 _3059_j = _24339c49a_FindAt(_29810_s, _29818_sub, _3039_i);;
			if ((_3059_j == -1LL)) {
				goto _iter_end_22969e024;
			};
			(_3029_n)++;
			_3039_i=static_cast<jule::I64>((_3059_j + _29818_sub.len()));
		}
	_iter_next_22969e024:;
	}
	_iter_end_22969e024:;;
	return _3029_n;;
}



inline jule::Str _2433a2659_Replace(jule::Str _31812_s, jule::Str _31820_sub, jule::Str _31830_new, jule::I64 _31844_n) {
	if (((_31844_n == 0LL) || (_31820_sub == _31830_new))) {
		return _31812_s;;
	};
	jule::I64 _3235_m = _2433a2170_Count(_31812_s, _31820_sub);;
	if ((_3235_m == 0LL)) {
		return _31812_s;;
	};
	if (((_31844_n < 0LL) || (_3235_m < _31844_n))) {
		_31844_n=_3235_m;
	};
	_2433b0c50_StrBuilder _3319_ss = static__2433b1019_New(static_cast<jule::I64>(((_31812_s.len() + (_31844_n * (_31830_new.len() - _31820_sub.len()))) + 1LL)));;
	jule::I64 _3329_i = 0LL;;
	for (; (_31844_n > 0LL); (_31844_n)--) {
		{
			jule::I64 _3349_j = _24339c49a_FindAt(_31812_s, _31820_sub, _3329_i);;
			if ((_3349_j == -1LL)) {
				goto _iter_end_2296a2566;
			};
			_2433b982a_WriteStr(&_3319_ss, _31812_s.slice(_3329_i, _3349_j));
			_2433b982a_WriteStr(&_3319_ss, _31830_new);
			_3329_i=static_cast<jule::I64>((_3349_j + _31820_sub.len()));
		}
	_iter_next_2296a2566:;
	}
	_iter_end_2296a2566:;;
	_2433b982a_WriteStr(&_3319_ss, _31812_s.slice(_3329_i));
	_2433b9ad3_WriteByte(&_3319_ss, 0LLU);
	return _2420a6d54_StrFromBytes(_2433baac3_Buf(&_3319_ss).slice(0LL, (_2433ba5a6_Len(&_3319_ss) - 1LL)));;
}



inline void _2433a334c_trimLeft(jule::Slice<jule::U8>* _37518_s, jule::Str _37529_cutset) {
	jule::I64 _3769_i = 0LL;;
	while ((_3769_i < (*(_37518_s)).len())) {
		{
			jule::I32 _3789_r = 0;;
			jule::I64 _37812_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_37518_s)).slice(_3769_i));
				_3789_r = __jule_assign_result.__jule_result_arg0;
				_37812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_24339ee5e_FindRune(_37529_cutset, _3789_r) == -1LL)) {
				((*(_37518_s))).mut_slice(_3769_i);;
				return;;
			};
			_3769_i+=_37812_n;
		}
	_iter_next_2296a80c7:;
	}
	_iter_end_2296a80c7:;;
	(*(_37518_s))=nullptr;
}



inline jule::Str _2433a36c1_TrimLeft(jule::Str _39013_s, jule::Str _39021_cutset) {
	jule::Slice<jule::U8> _3919_bytes = _2420a67c1_StrBytes(_39013_s);;
	_2433a334c_trimLeft(&(_3919_bytes), _39021_cutset);
	return static_cast<jule::Str>(_3919_bytes);;
}



inline void _24339eaeb_trimRight(jule::Slice<jule::U8>* _39619_s, jule::Str _39630_cutset) {
	jule::I64 _3979_i = (*(_39619_s)).len();;
	while ((_3979_i > 0LL)) {
		{
			jule::I32 _3999_r = 0;;
			jule::I64 _39912_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335ad1b_DecodeLastRune((*(_39619_s)).slice(0LL, _3979_i));
				_3999_r = __jule_assign_result.__jule_result_arg0;
				_39912_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_24339ee5e_FindRune(_39630_cutset, _3999_r) == -1LL)) {
				((*(_39619_s))).mut_slice(0LL, _3979_i);;
				return;;
			};
			_3979_i-=_39912_n;
		}
	_iter_next_2296aa4b4:;
	}
	_iter_end_2296aa4b4:;;
	(*(_39619_s))=nullptr;
}



inline jule::Str _2433a42d7_Trim(jule::Str _4199_s, jule::Str _41917_cutset) {
	jule::Slice<jule::U8> _4209_bytes = _2420a67c1_StrBytes(_4199_s);;
	_2433a334c_trimLeft(&(_4209_bytes), _41917_cutset);
	_24339eaeb_trimRight(&(_4209_bytes), _41917_cutset);
	return static_cast<jule::Str>(_4209_bytes);;
}



inline jule::Str _2433a465b_Join(jule::Slice<jule::Str> _4289_parts, jule::Str _42823_sep) {
	{
		auto _match_expr{ _4289_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_2296ad561:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_2296ad5d8:;
			{
				return _4289_parts[0LL];;
			}
		}
		_match_end_2296ad374:;
	};
	jule::I64 _4359_n = 0LL;;
	{
		auto expr = &(_4289_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2296ad86e:;
		if (it != expr_end) {
			jule::Str *_43612_part = it;
			{
				_4359_n+=(*(_43612_part)).len();
				(_4359_n)++;
			}
			_iter_next_2296ad86e:;
			++it;
			goto _iter_begin_2296ad86e;
		}
		_iter_end_2296ad86e:;
	};
	_2433b0c50_StrBuilder _4409_s = static__2433b1019_New(static_cast<jule::I64>((_4359_n + 1LL)));;
	_2433b982a_WriteStr(&_4409_s, _4289_parts[0LL]);
	{
		auto expr = _4289_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2296ae92a:;
		if (it != expr_end) {
			jule::Str *_44212_part = it;
			{
				_2433b982a_WriteStr(&_4409_s, _42823_sep);
				_2433b982a_WriteStr(&_4409_s, (*(_44212_part)));
			}
			_iter_next_2296ae92a:;
			++it;
			goto _iter_begin_2296ae92a;
		}
		_iter_end_2296ae92a:;
	};
	_2433b9ad3_WriteByte(&_4409_s, 0LLU);
	return _2420a6d54_StrFromBytes(_2433baac3_Buf(&_4409_s).slice(0LL, (_2433ba5a6_Len(&_4409_s) - 1LL)));;
}



inline jule::Str _2433bc3ee_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I64 _1115_volLen = _2433c01e3_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _2433beb1b_IsPathSep(_1105_originalPath[0LL])) && _2433beb1b_IsPathSep(_1105_originalPath[1LL]))) {
			return _2433bc9c6_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _2433beb1b_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1275_n = _10914_path.len();;
	_2433bb596_lazyBuff _1289_out = _2433bb596_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I64 _1339_r = 0;;
	jule::I64 _13316_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_2433bbca0_append(&_1289_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_2433beb1b_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_2296c119a:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _2433beb1b_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_2296bcd56:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _2433beb1b_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_2296bcdbc:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_2296c3e17:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_2433beb1b_IsPathSep(static_cast<jule::U8>(_2433bb9e7_index(&_1289_out, _1289_out._field_w))))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_2296c4995:;
									}
									_iter_end_2296c4995:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_2296c42ad:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_2433bbca0_append(&_1289_out, 47LLU);
									};
									_2433bbca0_append(&_1289_out, '.');
									_2433bbca0_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_2296c4247:;
						};
					}
				}
				else {
					_case_begin_2296bcce0:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_2433bbca0_append(&_1289_out, 47LLU);
						};
						;
						for (; ((_1339_r < _1275_n) && (!(_2433beb1b_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_2433bbca0_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_2296c0b8e:;
						}
						_iter_end_2296c0b8e:;;
					}
				}
				_match_end_2296bc9b0:;
			};
		}
	_iter_next_2296bc40a:;
	}
	_iter_end_2296bc40a:;;
	if ((_1289_out._field_w == 0LL)) {
		_2433bbca0_append(&_1289_out, '.');
	};
	return _2433bc9c6_FromSlash(_2433bc036_string(&_1289_out));;
}



inline jule::Str _2433bc9c6_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _2433bcd17_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2433c07ed_join(_2269_elem);;
}



inline jule::Str _2433bd0d1_Ext(jule::Str _2318_path) {
	jule::I64 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_2433beb1b_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_2296c7b63:;
	}
	_iter_end_2296c7b63:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2433bd39a_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _2475_abs_path;;
	jule::Bool _24715_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433c0534_abs(_2468_path);
		_2475_abs_path = __jule_assign_result.__jule_result_arg0;
		_24715_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _2475_abs_path;
	__jule_func_result.__jule_result_arg1 = _24715_ok;
	return __jule_func_result;;
}



inline jule::Str _2433bd664_Base(jule::Str _25513_path) {
	if ((_25513_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _2433beb1b_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_2296ca308:;
	}
	_iter_end_2296ca308:;;
	(_25513_path).mut_slice(_2433bdcc4_VolumeName(_25513_path).len());;
	jule::I64 _2669_i = (_25513_path.len() - 1LL);;
	while (((_2669_i >= 0LL) && (!(_2433beb1b_IsPathSep(_25513_path[_2669_i]))))) {
		{
			(_2669_i)--;
		}
	_iter_next_2296cb7e3:;
	}
	_iter_end_2296cb7e3:;;
	if ((_2669_i >= 0LL)) {
		(_25513_path).mut_slice((_2669_i + 1LL));;
	};
	if ((_25513_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _2433bda0a_Dir(jule::Str _2868_path) {
	jule::Str _2875_vol = _2433bdcc4_VolumeName(_2868_path);;
	jule::I64 _2889_i = (_2868_path.len() - 1LL);;
	while (((_2889_i >= _2875_vol.len()) && (!(_2433beb1b_IsPathSep(_2868_path[_2889_i]))))) {
		{
			(_2889_i)--;
		}
	_iter_next_2296cd5b4:;
	}
	_iter_end_2296cd5b4:;;
	jule::Str _2925_dir = _2433bc3ee_Clean(_2868_path.slice(_2875_vol.len(), (_2889_i + 1LL)));;
	if ((_2925_dir.equal(".", 1) && (_2875_vol.len() > 2LL))) {
		return _2875_vol;;
	};
	return (_2875_vol + _2925_dir);;
}



inline jule::Str _2433bdcc4_VolumeName(jule::Str _30415_path) {
	return _2433bc9c6_FromSlash(_30415_path.slice(0LL, _2433c01e3_volumeNameLen(_30415_path)));;
}



inline jule::Bool _2433beb1b_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _2433bee29_IsAbs(jule::Str _5310_path) {
	return _24339b774_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _2433c01e3_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _2433c0534_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_2433bee29_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _2433bc3ee_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _675_wd = ({
		auto except = _2420d18b7_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _2433c07ed_join(jule::Slice<jule::Str>::make({_675_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2433c07ed_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2296d6963:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if (!((*(_7412_e))).empty()) {
					return _2433bc3ee_Clean(_2433a465b_Join(_739_elem.slice(_749_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_2296d6963:;
			++it;
			_749_i++;
			goto _iter_begin_2296d6963;
		}
		_iter_end_2296d6963:;
	};
	return jule::Str();;
}



inline jule::I64 _241edc97c_getLastFsError(void) {
	jule::I64 _725_err = _240e913b0_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_2296e8ee7:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_2296e869a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_2296e8898:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_2296e890e:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_2296e8975:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_2296e89db:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_2296e9129:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_2296e9190:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_2296e9206:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_2296e926c:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_2296e92e4:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_2296e936b:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_2296e93e3:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_2296e946a:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_2296e94e2:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_2296e9569:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_2296e95e1:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_2296e9668:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_2296e96e0:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_2296e9767:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_2296e97de:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_2296e9866:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_2296e98dd:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_2296e9965:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_2296e99dc:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_2296e9a64:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_2296e9adb:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_2296e9b63:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_2296e8832:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_2296e87cc:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _243565d06_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _89_neg = ((*(_722_b)) == '-');;
	if (_89_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_22971c59d:;
	}
	_iter_end_22971c59d:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_89_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _243570052_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _243570360_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_89_x))))));;
	};
	return _243570360_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_89_x)));;
}



inline jule::Str _243570360_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _209_buf = jule::Slice<jule::U8>::alloc(21LL, 21LL, 0);;
	jule::I64 _219_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _239_q = (_1613_x / 10LLU);;
			_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1613_x) - (_239_q * 10LLU))));
			(_219_i)++;
			_1613_x=_239_q;
		}
	_iter_next_229724264:;
	}
	_iter_end_229724264:;;
	_209_buf[_219_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1613_x)));
	(_219_i)++;
	{ jule::Slice<jule::U8> &__jule_push_dest = _209_buf; __jule_push_dest.push(0LLU); };
	(_209_buf).mut_slice(0LL, _219_i);;
	_243570591_rev(&(_209_buf));
	return _2420a6d54_StrFromBytes(_209_buf);;
}



inline void _243570591_rev(jule::Slice<jule::U8>* _3713_b) {
	jule::I64 _389_i = 0LL;;
	for (; (_389_i < ((*(_3713_b)).len() >> 1LL)); (_389_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3713_b))[(((*(_3713_b)).len() - 1LL) - _389_i)];
				jule::U8 _1___jule_assign_arg = (*(_3713_b))[_389_i];
				(*(_3713_b))[_389_i] = ___jule_assign_arg;
				(*(_3713_b))[(((*(_3713_b)).len() - 1LL) - _389_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_229725ebe:;
	}
	_iter_end_229725ebe:;;
}



inline jule::Slice<char*> _243573b38_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _369_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_229742c00:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_369_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_229742c00:;
			++it;
			_379_i++;
			goto _iter_begin_229742c00;
		}
		_iter_end_229742c00:;
	};
	_369_cs[(_369_cs.len() - 1LL)]=nullptr;
	return _369_cs;;
}



inline jule::I64 _243573eac_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _455_cargv = _243573b38_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_455_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _2435741dd_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2297457c4:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _549_i = _24339a850_FindByteStr((*(_5312_env)), '=');;
				if ((_549_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5913_key = (*(_5312_env)).slice(0LL, _549_i);;
					if ((((*(_5312_env)).len() - _549_i) == 1LL)) {
						jule::Str _6117_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6117_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6617_val = (*(_5312_env)).slice((_549_i + 1LL));;
						if ((setenv(((char*)((&(_5913_key[0LL])))), ((char*)((&(_6617_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_2297457c4:;
			++it;
			goto _iter_begin_2297457c4;
		}
		_iter_end_2297457c4:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _243575167_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_229749b6e:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_229745ac1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_229746ad3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_2297498a5:;
	};
}



inline jule::I64 _2435753ba_getLastProcessError(void) {
	return _243575167_processErrorFromCode(static_cast<jule::I64>(_240e913b0_GetLastErrno()));;
}



inline void _243575bd4_Exit(jule::I64 _129_code) {
	_241ec2a83_Exit(_129_code);
}



inline jule::Str _243575de3_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2434523eb_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _2434526c6_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2433c1c2d_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2297727ce:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_2297727ce:;
			++it;
			goto _iter_begin_2297727ce;
		}
		_iter_end_2297727ce:;
	};
	return false;;
}



inline jule::Bool _243452990_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_24345055e_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22977356b:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_22977356b:;
			++it;
			goto _iter_begin_22977356b;
		}
		_iter_end_22977356b:;
	};
	{
		auto expr = &(_243450828_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2297734a0:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_2297734a0:;
			++it;
			goto _iter_begin_2297734a0;
		}
		_iter_end_2297734a0:;
	};
	return false;;
}



inline jule::Str _24345ea79_Logf(jule::Str _3169_fmt, jule::Slice<jule::Any> _31622_args) {
	return _243460519_applyFmt(_3169_fmt, _31622_args);;
}



inline jule::Str _24345ed87_argToStr(jule::Any _32013_arg) {
	{
		auto &_match_expr{ _32013_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_229773c0e:;
			{
				return _32013_arg.cast<jule::Str>(&__jule_any_type4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_2297756a0:;
			{
				return jule::Str::from_byte(_32013_arg.cast<jule::U8>(&__jule_any_type129));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_229775716:;
			{
				return jule::Str::from_rune(_32013_arg.cast<jule::I32>(&__jule_any_type6));;
			}
		}
		else {
			_case_begin_2297750c8:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_229775073:;
	};
}



inline jule::I64 _243460151_findNextFmt(jule::Str _33316_fmt) {
	{
		auto expr = &(_33316_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_229776481:;
		if (it != expr_end) {
			jule::I64 _3349_i = it - expr->begin();
			jule::U8 *_33412_b = it;
			{
				if (((*(_33412_b)) == '@')) {
					return _3349_i;;
				};
			}
			_iter_next_229776481:;
			++it;
			_3349_i++;
			goto _iter_begin_229776481;
		}
		_iter_end_229776481:;
	};
	return -1LL;;
}



inline jule::Str _243460519_applyFmt(jule::Str _34217_fmt, jule::Slice<jule::Any> _34227_args) {
	_2433b0c50_StrBuilder _3439_s = static__2433b1019_New(32LL);;
	{
		auto expr = &(_34227_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_229776dcc:;
		if (it != expr_end) {
			jule::Any *_34412_arg = it;
			{
				jule::I64 _3459_i = _243460151_findNextFmt(_34217_fmt);;
				if ((_3459_i == -1LL)) {
					goto _iter_end_229776dcc;
				};
				_2433b982a_WriteStr(&_3439_s, _34217_fmt.slice(0LL, _3459_i));
				_2433b982a_WriteStr(&_3439_s, _24345ed87_argToStr((*(_34412_arg))));
				(_34217_fmt).mut_slice((_3459_i + 1LL));;
			}
			_iter_next_229776dcc:;
			++it;
			goto _iter_begin_229776dcc;
		}
		_iter_end_229776dcc:;
	};
	_2433b982a_WriteStr(&_3439_s, _34217_fmt);
	return _2433ba122_Str(&_3439_s);;
}



inline jule::Bool _243461383_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _2434627d5_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _243462ab0_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _243462d79_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2434631ba_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _243463484_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _24346374d_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _243463a17_IsUnix(jule::Str _5511_os) {
	return (_243462ab0_IsDarwin(_5511_os) || _243462d79_IsLinux(_5511_os));;
}



inline jule::Bool _243463dad_Is32Bit(jule::Str _5812_arch) {
	return _2434631ba_IsI386(_5812_arch);;
}



inline jule::Bool _243464177_Is64Bit(jule::Str _6112_arch) {
	return (_243463484_IsAmd64(_6112_arch) || _24346374d_IsArm64(_6112_arch));;
}



inline void _2435771be_init(void) {
	jule::Str _259_path = _243575de3_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2435766eb_PathWd=({
			auto except = _2420d18b7_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_243576443_PathExec=_2433bda0a_Dir(_259_path);
		_2435761e0_PathStdlib=_2433bcd17_Join(jule::Slice<jule::Str>::make({_243576443_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_243576a09_PathApi=_2433bcd17_Join(jule::Slice<jule::Str>::make({_243576443_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I64 _244574a06_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _24457c404_Len64(_6119_x)));;
}



inline jule::I64 _24457595d_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_244576684_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _2445763ba_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_244575122__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _244576684_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2445756d8__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _24457c13a_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _24457c404_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str::lit("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _24457d191_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _24457e99a_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _24447eba8_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _24447eeb6_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _244480280_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2444805c1_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _244482b78_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_22985e1e5:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_2445876a6_IsInf(_4714_f, 0LL) || _24458709b_IsNaN(_4714_f)) {
			_case_begin_22985e26c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_22985e118:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _244587970_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _244480280_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=static_cast<jule::U64>((_569_x & 9227875636482146303LLU));
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2444805c1_F64FromBits(_569_x));
	return __jule_func_result;;
}



inline jule::F64 _244586c8d_NaN(void) {
	return static_cast<jule::F64>(_2444805c1_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _24458709b_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _244587365_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2444805c1_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2444805c1_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _2445876a6_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _244587970_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_244589d29_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _244589444_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_24458709b_IsNaN(_1118_x) || _2445876a6_IsInf(_1118_x, 1LL)) {
			_case_begin_22989a8e6:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_22989a96d:;
			{
				return static_cast<jule::F64>(_244586c8d_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_22989a9e5:;
			{
				return static_cast<jule::F64>(_244587365_Inf(-1LL));;
			}
		}
		_match_end_22989a82a:;
	};
	jule::F64 _1339_f1 = 0;;
	jule::I64 _13317_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _244482b78_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return static_cast<jule::F64>(((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f)));;
}



inline jule::F64 _244589d29_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2444805c1_F64FromBits(static_cast<jule::U64>((_244480280_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _244591a23_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _244589d29_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=static_cast<jule::F64>((_465_absF + 4503599627370496LL));
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_22990a170:;
		}
		_iter_end_22990a170:;;
		if ((_449_f < 0LL)) {
			_479_i=static_cast<jule::F64>((-(_479_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _479_i));
	return __jule_func_result;;
}



inline jule::F64 _24459232b_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac = 0;;
	jule::I64 _4511_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _244482b78_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4511_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_244589444_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp)));;
}



inline jule::Str _2445bb60d_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	jule::Slice<jule::U8> _839_bytes = _2445bbbe6_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _2445c0128_max(static_cast<jule::I64>(((_7932_prec + 4LL) + 1LL)), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _839_bytes; __jule_push_dest.push(0LLU); };
	return _2420a6d54_StrFromBytes(_839_bytes.slice(0LL, (_839_bytes.len() - 1LL)));;
}



inline jule::Slice<jule::U8> _2445bbbe6_genericFtoa(jule::Slice<jule::U8> _8820_dst, jule::F64 _8833_val, jule::U8 _8843_fmt, jule::I64 _8858_prec, jule::I64 _8869_bitSize) {
	jule::U64 _899_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_243ded814_floatInfo> _9013_flt = nullptr;;
	{
		auto &_match_expr{ _8869_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_22a73e24a:;
			{
				_899_bits=static_cast<jule::U64>(static_cast<jule::U64>(_24447eba8_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8833_val)))));
				_9013_flt=((jule::Ptr<_243ded814_floatInfo>)((&(_2445ba7d8_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22a73e06e:;
			{
				_899_bits=static_cast<jule::U64>(_244480280_F64Bits(_8833_val));
				_9013_flt=((jule::Ptr<_243ded814_floatInfo>)((&(_2445baad5_f64info))));
			}
		}
		else {
			_case_begin_22a73d8dc:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:99:9"));;
			}
		}
		_match_end_22a73d887:;
	};
	jule::Bool _1025_neg = ((_899_bits >> ((*(_9013_flt))._field_expbits + (*(_9013_flt))._field_mantbits)) != 0LLU);;
	jule::I64 _1039_exp = (static_cast<jule::I64>((_899_bits >> (*(_9013_flt))._field_mantbits)) & static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)));;
	jule::U64 _1049_mant = (_899_bits & ((static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1039_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << (*(_9013_flt))._field_expbits) - 1LL)))) {
			_case_begin_22a742946:;
			{
				{
					
					if ((_1049_mant != 0LLU)) {
						_case_begin_22a7446b2:;
						{
							return jule::append(_8820_dst,_2420a67c1_StrBytes(jule::Str::lit("nan", 3)));;
						}
					}
					else if (_1025_neg) {
						_case_begin_22a743a13:;
						{
							return jule::append(_8820_dst,_2420a67c1_StrBytes(jule::Str::lit("-inf", 4)));;
						}
					}
					else {
						_case_begin_22a74399c:;
						{
							return jule::append(_8820_dst,_2420a67c1_StrBytes(jule::Str::lit("+inf", 4)));;
						}
					}
					_match_end_22a7438d1:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_22a742a34:;
			{
				(_1039_exp)++;
			}
		}
		else {
			_case_begin_22a73dcb6:;
			{
				_1049_mant|=(static_cast<jule::U64>(1LLU) << (*(_9013_flt))._field_mantbits);
			}
		}
		_match_end_22a74245c:;
	};
	_1039_exp+=(*(_9013_flt))._field_bias;
	if ((_8843_fmt == 'b')) {
		return _2445be226_fmtB(_8820_dst, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	if (((_8843_fmt == 'x') || (_8843_fmt == 'X'))) {
		return _2445be930_fmtX(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	;
	_2445bb07a_decimalSlice _1389_digs = _2445bb07a_decimalSlice{};;
	jule::Bool _1399_ok = false;;
	jule::Bool _1415_shortest = (_8858_prec < 0LL);;
	if (_1415_shortest) {
		_1389_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_2445c9ee0_ryuFtoaShortest(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), &((*(_9013_flt))));
		_1399_ok=true;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22a747c59:;
				{
					_8858_prec=static_cast<jule::I64>(_2445c0128_max(static_cast<jule::I64>((_1389_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22a747cc0:;
				{
					_8858_prec=static_cast<jule::I64>(_2445c0128_max(static_cast<jule::I64>((_1389_digs._field_nd - _1389_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22a747d36:;
				{
					_8858_prec=_1389_digs._field_nd;
				}
			}
			_match_end_22a746e45:;
		};
	} else if ((_8843_fmt != 'f')) {
		jule::I64 _15813_digits = _8858_prec;;
		{
			auto &_match_expr{ _8843_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22a749d16:;
				{
					(_15813_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22a746cd0:;
				{
					if ((_8858_prec == 0LL)) {
						_8858_prec=1LL;
					};
					_15813_digits=_8858_prec;
				}
			}
			else {
				_case_begin_22a749970:;
				{
					_15813_digits=1LL;
				}
			}
			_match_end_22a746dbd:;
		};
		if (((_8869_bitSize == 32LL) && (_15813_digits <= 9LL))) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2445c8c25_ryuFtoaFixed32(&(_1389_digs), static_cast<jule::U32>(static_cast<jule::U32>(_1049_mant)), static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		} else if ((_15813_digits <= 18LL)) {
			_1389_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2445c91ba_ryuFtoaFixed64(&(_1389_digs), _1049_mant, static_cast<jule::I64>((_1039_exp - static_cast<jule::I64>((*(_9013_flt))._field_mantbits))), _15813_digits);
			_1399_ok=true;
		};
	};
	if ((!(_1399_ok))) {
		return _2445bc400_bigFtoa(_8820_dst, _8858_prec, _8843_fmt, _1025_neg, _1049_mant, _1039_exp, &((*(_9013_flt))));;
	};
	return _2445bcac6_fmtDigits(_8820_dst, _1415_shortest, _1025_neg, _1389_digs, _8858_prec, _8843_fmt);;
}



inline jule::Slice<jule::U8> _2445bc400_bigFtoa(jule::Slice<jule::U8> _18816_dst, jule::I64 _18833_prec, jule::U8 _18844_fmt, jule::Bool _18855_neg, jule::U64 _1895_mant, jule::I64 _18916_exp, _243ded814_floatInfo* _18927_flt) {
	_2445cdd07_decimal _1909_d = _2445cdd07_decimal{};;
	_2445ce1ae_assign(&_1909_d, _1895_mant);
	_2445ce467_shift(&_1909_d, static_cast<jule::I64>((_18916_exp - static_cast<jule::I64>((*(_18927_flt))._field_mantbits))));
	_2445bb07a_decimalSlice _1939_digs = _2445bb07a_decimalSlice{};;
	jule::Bool _1945_shortest = (_18833_prec < 0LL);;
	if (_1945_shortest) {
		_2445bd027_roundShortest(&(_1909_d), _1895_mant, _18916_exp, _18927_flt);
		_1939_digs=_2445bb07a_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22a750833:;
				{
					_18833_prec=static_cast<jule::I64>((_1939_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22a751614:;
				{
					_18833_prec=static_cast<jule::I64>(_2445c0128_max(static_cast<jule::I64>((_1939_digs._field_nd - _1939_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22a75167a:;
				{
					_18833_prec=_1939_digs._field_nd;
				}
			}
			_match_end_22a7514b0:;
		};
	} else {
		{
			auto &_match_expr{ _18844_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_22a7505be:;
				{
					_2445cec81_round(&_1909_d, static_cast<jule::I64>((_18833_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_22a750646:;
				{
					_2445cec81_round(&_1909_d, static_cast<jule::I64>((_1909_d._field_dp + _18833_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_22a7506bd:;
				{
					if ((_18833_prec == 0LL)) {
						_18833_prec=1LL;
					};
					_2445cec81_round(&_1909_d, _18833_prec);
				}
			}
			_match_end_22a752d0d:;
		};
		_1939_digs=_2445bb07a_decimalSlice{._field_d=_1909_d._field_d.slice(0LL), ._field_nd=_1909_d._field_nd, ._field_dp=_1909_d._field_dp, };
	};
	return _2445bcac6_fmtDigits(_18816_dst, _1945_shortest, _18855_neg, _1939_digs, _18833_prec, _18844_fmt);;
}



inline jule::Slice<jule::U8> _2445bcac6_fmtDigits(jule::Slice<jule::U8> _22518_dst, jule::Bool _22531_shortest, jule::Bool _22547_neg, _2445bb07a_decimalSlice _2265_digs, jule::I64 _22629_prec, jule::U8 _22640_fmt) {
	{
		auto &_match_expr{ _22640_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_22a756152:;
			{
				return _2445bd5bb_fmtE(_22518_dst, _22547_neg, _2265_digs, _22629_prec, _22640_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_22a7561b8:;
			{
				return _2445bdaa5_fmtF(_22518_dst, _22547_neg, _2265_digs, _22629_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_22a75622e:;
			{
				jule::I64 _23413_eprec = _22629_prec;;
				if (((_23413_eprec > _2265_digs._field_nd) && (_2265_digs._field_nd >= _2265_digs._field_dp))) {
					_23413_eprec=_2265_digs._field_nd;
				};
				if (_22531_shortest) {
					_23413_eprec=6LL;
				};
				jule::I64 _2449_exp = (_2265_digs._field_dp - 1LL);;
				if (((_2449_exp < -4LL) || (_2449_exp >= _23413_eprec))) {
					if ((_22629_prec > _2265_digs._field_nd)) {
						_22629_prec=_2265_digs._field_nd;
					};
					return _2445bd5bb_fmtE(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>((_22629_prec - 1LL)), static_cast<jule::U8>(((_22640_fmt + 'e') - 'g')));;
				};
				if ((_22629_prec > _2265_digs._field_dp)) {
					_22629_prec=_2265_digs._field_nd;
				};
				return _2445bdaa5_fmtF(_22518_dst, _22547_neg, _2265_digs, static_cast<jule::I64>(_2445c0128_max(static_cast<jule::I64>((_22629_prec - _2265_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_22a756064:;
	};
	return jule::append(_22518_dst,jule::Slice<jule::U8>::make({'%',_22640_fmt}));;
}



inline void _2445bd027_roundShortest(_2445cdd07_decimal* _26323_d, jule::U64 _26335_mant, jule::I64 _26346_exp, _243ded814_floatInfo* _26357_flt) {
	if ((_26335_mant == 0LLU)) {
		(*(_26323_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2845_minexp = ((*(_26357_flt))._field_bias + 1LL);;
	if (((_26346_exp > _2845_minexp) && ((332LL * ((*(_26323_d))._field_dp - (*(_26323_d))._field_nd)) >= (100LL * (_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)))))) {
		return;;
	};
	_2445cdd07_decimal _2939_upper = _2445cdd07_decimal{};;
	_2445ce1ae_assign(&_2939_upper, static_cast<jule::U64>(((_26335_mant << 1LLU) + 1LLU)));
	_2445ce467_shift(&_2939_upper, static_cast<jule::I64>(((_26346_exp - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::U64 _3039_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3049_explo = 0LL;;
	if (((_26335_mant > (1LLU << (*(_26357_flt))._field_mantbits)) || (_26346_exp == _2845_minexp))) {
		_3039_mantlo=static_cast<jule::U64>((_26335_mant - 1LLU));
		_3049_explo=_26346_exp;
	} else {
		_3039_mantlo=static_cast<jule::U64>(((_26335_mant << 1LLU) - 1LLU));
		_3049_explo=static_cast<jule::I64>((_26346_exp - 1LL));
	};
	_2445cdd07_decimal _3129_lower = _2445cdd07_decimal{};;
	_2445ce1ae_assign(&_3129_lower, static_cast<jule::U64>(((_3039_mantlo << 1LLU) + 1LLU)));
	_2445ce467_shift(&_3129_lower, static_cast<jule::I64>(((_3049_explo - static_cast<jule::I64>((*(_26357_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3195_inclusive = ((_26335_mant & 1LL) == 0LLU);;
	jule::U8 _3329_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3369_ui = 0LL;;
	for (; ; (_3369_ui)++) {
		{
			jule::I64 _3419_mi = ((_3369_ui - _2939_upper._field_dp) + (*(_26323_d))._field_dp);;
			if ((_3419_mi >= (*(_26323_d))._field_nd)) {
				goto _iter_end_22a761d72;
			};
			jule::I64 _3459_li = ((_3369_ui - _2939_upper._field_dp) + _3129_lower._field_dp);;
			jule::U8 _34613_l = static_cast<jule::U8>(48LLU);;
			if (((_3459_li >= 0LL) && (_3459_li < _3129_lower._field_nd))) {
				_34613_l=_3129_lower._field_d[_3459_li];
			};
			jule::U8 _35013_m = static_cast<jule::U8>(48LLU);;
			if ((_3419_mi >= 0LL)) {
				_35013_m=(*(_26323_d))._field_d[_3419_mi];
			};
			jule::U8 _35413_u = static_cast<jule::U8>(48LLU);;
			if ((_3369_ui < _2939_upper._field_nd)) {
				_35413_u=_2939_upper._field_d[_3369_ui];
			};
			jule::Bool _3629_okdown = ((_34613_l != _35013_m) || (_3195_inclusive && ((_3459_li + 1LL) == _3129_lower._field_nd)));;
			{
				
				if (((_3329_upperdelta == 0LLU) && ((_35013_m + 1LLU) < _35413_u))) {
					_case_begin_22a765eec:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				else if (((_3329_upperdelta == 0LLU) && (_35013_m != _35413_u))) {
					_case_begin_22a766074:;
					{
						_3329_upperdelta=1LLU;
					}
				}
				else if (((_3329_upperdelta == 1LLU) && ((_35013_m != '9') || (_35413_u != '0')))) {
					_case_begin_22a7660eb:;
					{
						_3329_upperdelta=2LLU;
					}
				}
				_match_end_22a765e31:;
			};
			jule::Bool _3839_okup = ((_3329_upperdelta > 0LLU) && ((_3195_inclusive || (_3329_upperdelta > 1LLU)) || ((_3369_ui + 1LL) < _2939_upper._field_nd)));;
			{
				
				if ((_3629_okdown && _3839_okup)) {
					_case_begin_22a76895b:;
					{
						_2445cec81_round(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3629_okdown) {
					_case_begin_22a7689d3:;
					{
						_2445ce720_roundDown(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				else if (_3839_okup) {
					_case_begin_22a768a5a:;
					{
						_2445ce9c8_roundUp(_26323_d, static_cast<jule::I64>((_3419_mi + 1LL)));
						return;;
					}
				}
				_match_end_22a7688e5:;
			};
		}
	_iter_next_22a761d72:;
	}
	_iter_end_22a761d72:;;
}



inline jule::Slice<jule::U8> _2445bd5bb_fmtE(jule::Slice<jule::U8> _40213_dst, jule::Bool _40226_neg, _2445bb07a_decimalSlice _40237_d, jule::I64 _40254_prec, jule::U8 _40265_fmt) {
	if (_40226_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4099_ch = '0';;
	if ((_40237_d._field_nd != 0LL)) {
		_4099_ch=_40237_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	if ((_40254_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('.'); };
		jule::I64 _41813_i = 1LL;;
		jule::I64 _4199_m = _2445beca4_min(_40237_d._field_nd, static_cast<jule::I64>((_40254_prec + 1LL)));;
		if ((_41813_i < _4199_m)) {
			(_40213_dst).append(_40237_d._field_d.slice(_41813_i, _4199_m));;
			_41813_i=_4199_m;
		};
		for (; (_41813_i <= _40254_prec); (_41813_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_22a76bc8e:;
		}
		_iter_end_22a76bc8e:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_40265_fmt); };
	jule::I64 _4319_exp = (_40237_d._field_dp - 1LL);;
	if ((_40237_d._field_nd == 0LL)) {
		_4319_exp=0LL;
	};
	if ((_4319_exp < 0LL)) {
		_4099_ch='-';
		_4319_exp=static_cast<jule::I64>((-(_4319_exp)));
	} else {
		_4099_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.push(_4099_ch); };
	{
		
		if ((_4319_exp < 10LL)) {
			_case_begin_22a771546:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_4319_exp) + '0'))); };
			}
		}
		else if ((_4319_exp < 100LL)) {
			_case_begin_22a76ee18:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_22a76eda2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_4319_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_4319_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_22a76e16a:;
	};
	return _40213_dst;;
}



inline jule::Slice<jule::U8> _2445bdaa5_fmtF(jule::Slice<jule::U8> _45713_dst, jule::Bool _45726_neg, _2445bb07a_decimalSlice _45737_d, jule::I64 _45754_prec) {
	if (_45726_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('-'); };
	};
	if ((_45737_d._field_dp > 0LL)) {
		jule::I64 _46513_m = _2445beca4_min(_45737_d._field_nd, _45737_d._field_dp);;
		(_45713_dst).append(_45737_d._field_d.slice(0LL, _46513_m));;
		for (; (_46513_m < _45737_d._field_dp); (_46513_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_22a773aed:;
		}
		_iter_end_22a773aed:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('0'); };
	};
	if ((_45754_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push('.'); };
		jule::I64 _47613_i = 0LL;;
		for (; (_47613_i < _45754_prec); (_47613_i)++) {
			{
				jule::U8 _47817_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47913_j = (_45737_d._field_dp + _47613_i);;
				if (((0LL <= _47913_j) && (_47913_j < _45737_d._field_nd))) {
					_47817_ch=_45737_d._field_d[_47913_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45713_dst; __jule_push_dest.push(_47817_ch); };
			}
		_iter_next_22a774a77:;
		}
		_iter_end_22a774a77:;;
	};
	return _45713_dst;;
}



inline jule::Slice<jule::U8> _2445be226_fmtB(jule::Slice<jule::U8> _49013_dst, jule::Bool _49026_neg, jule::U64 _49037_mant, jule::I64 _49052_exp, _243ded814_floatInfo* _49063_flt) {
	if (_49026_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2445d3ed8_fmtBits(_49013_dst, _49037_mant, 10LL, false, true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('p'); };
	_49052_exp-=static_cast<jule::I64>((*(_49063_flt))._field_mantbits);
	if ((_49052_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _49013_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2445d3ed8_fmtBits(_49013_dst, static_cast<jule::U64>(static_cast<jule::U64>(_49052_exp)), 10LL, (_49052_exp < 0LL), true);
		_49013_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _49013_dst;;
}



inline jule::Slice<jule::U8> _2445be930_fmtX(jule::Slice<jule::U8> _51213_dst, jule::I64 _51226_prec, jule::U8 _51237_fmt, jule::Bool _51248_neg, jule::U64 _5139_mant, jule::I64 _51324_exp, _243ded814_floatInfo* _51335_flt) {
	if ((_5139_mant == 0LLU)) {
		_51324_exp=0LL;
	};
	_5139_mant<<=(60LLU - (*(_51335_flt))._field_mantbits);
	while (((_5139_mant != 0LLU) && ((_5139_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5139_mant<<=1LLU;
			(_51324_exp)--;
		}
	_iter_next_22a777c89:;
	}
	_iter_end_22a777c89:;;
	if (((_51226_prec >= 0LL) && (_51226_prec < 15LL))) {
		jule::U64 _5279_shift = static_cast<jule::U64>((_51226_prec << 2LLU));;
		jule::U64 _5289_extra = ((_5139_mant << _5279_shift) & 1152921504606846975LLU);;
		_5139_mant>>=(60LLU - _5279_shift);
		if (((_5289_extra | (_5139_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5139_mant)++;
		};
		_5139_mant<<=(60LLU - _5279_shift);
		if (((_5139_mant & 2305843009213693952LLU) != 0LLU)) {
			_5139_mant>>=1LLU;
			(_51324_exp)++;
		};
	};
	jule::Str _5419_hex = jule::Str();;
	if ((_51237_fmt == 'X')) {
		_5419_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5419_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51248_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51237_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5139_mant >> 60LLU) & 1LLU))))); };
	_5139_mant<<=4LLU;
	if (((_51226_prec < 0LL) && (_5139_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		while ((_5139_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_22a780445:;
		}
		_iter_end_22a780445:;;
	} else if ((_51226_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push('.'); };
		jule::I64 _56413_i = 0LL;;
		for (; (_56413_i < _51226_prec); (_56413_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5419_hex[static_cast<jule::I64>(((_5139_mant >> 60LLU) & 15LLU))]); };
				_5139_mant<<=4LLU;
			}
		_iter_next_22a7816dd:;
		}
		_iter_end_22a7816dd:;;
	};
	jule::U8 _5729_ch = static_cast<jule::U8>(80LLU);;
	if ((_51237_fmt == _2445c0b73_lower(_51237_fmt))) {
		_5729_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	if ((_51324_exp < 0LL)) {
		_5729_ch='-';
		_51324_exp=static_cast<jule::I64>((-(_51324_exp)));
	} else {
		_5729_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.push(_5729_ch); };
	{
		
		if ((_51324_exp < 100LL)) {
			_case_begin_22a77d982:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_51324_exp < 1000LL)) {
			_case_begin_22a77d9e8:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_22a783ab9:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51213_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_51324_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_51324_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_51324_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_22a781b0b:;
	};
	return _51213_dst;;
}



inline jule::I64 _2445beca4_min(jule::I64 _5978_a, jule::I64 _59716_b) {
	if ((_5978_a < _59716_b)) {
		return _5978_a;;
	};
	return _59716_b;;
}



inline jule::I64 _2445c0128_max(jule::I64 _6048_a, jule::I64 _60416_b) {
	if ((_6048_a > _60416_b)) {
		return _6048_a;;
	};
	return _60416_b;;
}



inline jule::U8 _2445c0b73_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__2438d8d27_ConvError _2445c10e6_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__2438d8d27_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_22a789dcd:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_22a789cce:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_2445c0b73_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_22a78b82a:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2445c0b73_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_22a78b74d:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2445c0b73_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_22a78b41d:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_22a78b3a7:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_22a78b2db:;
					};
				};
			}
		}
		else {
			_case_begin_22a789262:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_22a7895b4:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_22a7905ba:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_22a78e60d:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_22a7901e1:;
			{
				_909_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_22a790125:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_22a790d6d:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_22a790268:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_22a790d18:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a791a83:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_22a79338c:;
						{
							_11013_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _2445c0b73_lower(_10912_c)) && (_2445c0b73_lower(_10912_c) <= 'z'))) {
						_case_begin_22a79327c:;
						{
							_11013_d=static_cast<jule::U8>(((_2445c0b73_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_22a792da3:;
						{
							goto _iter_next_22a791a83;
						}
					}
					else {
						_case_begin_22a792d3c:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_22a792cc6:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_22a791a83:;
			++it;
			goto _iter_begin_22a791a83;
		}
		_iter_end_22a791a83:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _2445c1525_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _1475_un = 0;;
	jule::I64 _1479_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c10e6_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_1479_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _1475_un);;
}



inline jule::Exceptional<jule::I64> _2445c19cb_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un = 0;;
	jule::I64 _18713_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c10e6_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I64>(0LL)) && (_18713_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18713_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=static_cast<jule::I64>((-(_2039_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _2039_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _2445c26be_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2444805c1_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _575_clz = _244574a06_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi = 0;;
	jule::U64 _6318_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_4122_man, _2445c3527_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi = 0;;
		jule::U64 _6714_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_4122_man, _2445c3527_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi = 0;;
		jule::U64 _6823_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2444805c1_F64FromBits(_1039_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2445c2b0e_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_24447eeb6_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1325_clz = _244574a06_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi = 0;;
	jule::U64 _13819_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_11022_man, _2445c3527_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi = 0;;
		jule::U64 _14215_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_11022_man, _2445c3527_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi = 0;;
		jule::U64 _14324_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_24447eeb6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_1789_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _2445c4957_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=static_cast<jule::I64>(_4630_s.len());
	};
	jule::I64 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_22a7b5601:;
	}
	_iter_end_22a7b5601:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2445c4c65_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _739_sign = 1LL;;
	jule::I64 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_22a7b8934:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					(*(_8317_sp))=(*(_8317_sp)).slice(1LL);
				};
				goto _case_begin_22a7b89ab;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_22a7b89ab:;
			{
				jule::I64 _8813_caseN = _2445c4957_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_244587365_Inf(_739_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_749_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_22a7b8a33:;
			{
				if ((_2445c4957_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_244586c8d_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_22a7b8868:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _2445c502e_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_22a7bdc03:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_22a7bde78:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_22a7bddac:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_2445c0b73_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I64 _1349_nd = 0LL;;
	jule::I64 _1359_ndMant = 0LL;;
	jule::I64 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_22a7c3125:;
					{
						goto _iter_next_22a7bd6b4;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_22a7c319c:;
					{
						if (_1329_sawdot) {
							goto _julec_label_22a7c79cb;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_22a7bd6b4;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_22a7c3224:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_22a7bd6b4;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_22a7bd6b4;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _2445c0b73_lower(_1389_c))) && (_2445c0b73_lower(_1389_c) <= 'f'))) {
					_case_begin_22a7c329b:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_2445c0b73_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_22a7bd6b4;
					}
				}
				_match_end_22a7c3048:;
			};
			goto _iter_end_22a7bd6b4;
		}
	_iter_next_22a7bd6b4:;
	}
	_iter_end_22a7bd6b4:;;
	_julec_label_22a7c79cb:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_2445c0b73_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_22a7ca935;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=static_cast<jule::I64>((((_21113_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_22a7ca935:;
		}
		_iter_end_22a7ca935:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_1369_dp - _1359_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _2445c6aad_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _2445baad5_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_22a7d4268:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_22a7d42e0:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_2445c5e53_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _2445c5e53_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_22a7d4367:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_2445c5e53_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_22a7d3c18:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2445c6edc_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _2445ba7d8_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_22a7d8657:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_22a7d86ce:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_2445c6294_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _2445c6294_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_22a7d8756:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_2445c6294_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_22a7d8107:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__2438d8d27_ConvError _2445c7581_atofHex(_243ded814_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__2438d8d27_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5575_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_22a7dd3e8:;
	}
	_iter_end_22a7dd3e8:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_22a7de53c:;
	}
	_iter_end_22a7de53c:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_22a7de33e:;
	}
	_iter_end_22a7de33e:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6039_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5575_maxExp + 1LL));
		_6039_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _2445ba7d8_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_24447eeb6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6109_bits)))));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2444805c1_F64FromBits(_6109_bits));
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c795a_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val = 0;;
		jule::I64 _62314__n = 0;;
		jule::Bool _62318_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445c4c65_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_6239_val));
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa = 0;;
	jule::I64 _62915_exp = 0;;
	jule::Bool _62920_neg = false;;
	jule::Bool _62925_trunc = false;;
	jule::Bool _62932_hex = false;;
	jule::I64 _62937__n = 0;;
	jule::Bool _62945_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445c502e_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c7581_atofHex(&(_2445ba7d8_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63613_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2445c6edc_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2445c2b0e_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2445c2b0e_eiselLemire32(static_cast<jule::U64>((_6295_mantissa + 1LLU)), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2445cdd07_decimal _6679_d = _2445cdd07_decimal{};;
	if ((!(_2445c56c2_set(&_6679_d, _2420a67c1_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b = 0;;
	jule::Bool _6718_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2445c5a13_floatBits(&_6679_d, &(_2445ba7d8_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_24447eeb6_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_6715_b))));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c7c24_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val = 0;;
		jule::I64 _68114__n = 0;;
		jule::Bool _68118_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445c4c65_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa = 0;;
	jule::I64 _68715_exp = 0;;
	jule::Bool _68720_neg = false;;
	jule::Bool _68725_trunc = false;;
	jule::Bool _68732_hex = false;;
	jule::I64 _68737__n = 0;;
	jule::Bool _68745_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445c502e_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c7581_atofHex(&(_2445baad5_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2445c6aad_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2445c26be_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2445c26be_eiselLemire64(static_cast<jule::U64>((_6875_mantissa + 1LLU)), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2445cdd07_decimal _7249_d = _2445cdd07_decimal{};;
	if ((!(_2445c56c2_set(&_7249_d, _2420a67c1_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b = 0;;
	jule::Bool _7288_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2445c5a13_floatBits(&_7249_d, &(_2445baad5_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2444805c1_F64FromBits(_7285_b));
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError _2445c8098_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f = 0;;
		jule::I64 _73812_n = 0;;
		jule::I64 _73815_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c795a_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_7389_f));
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	jule::F64 _7415_f = 0;;
	jule::I64 _7418_n = 0;;
	jule::I64 _74111_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c7c24_atof64((*(_73622_s)));
		_7415_f = __jule_assign_result.__jule_result_arg0;
		_7418_n = __jule_assign_result.__jule_result_arg1;
		_74111_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _7415_f;
	__jule_func_result.__jule_result_arg1 = _7418_n;
	__jule_func_result.__jule_result_arg2 = _74111_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _2445c841c_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _7705_f = 0;;
	jule::I64 _7708_n = 0;;
	jule::I64 _77011_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__2438d8d27_ConvError __jule_assign_result = _2445c8098_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_7705_f = __jule_assign_result.__jule_result_arg0;
		_7708_n = __jule_assign_result.__jule_result_arg1;
		_77011_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7708_n != _76915_s.len()) && ((_77011_err == static_cast<jule::I64>(0LL)) || (_77011_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77011_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77011_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _7705_f);;
}



inline void _2445c8c25_ryuFtoaFixed32(_2445bb07a_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _629_e2 = _4956_exp;;
	jule::I64 _635_b = _24457c13a_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I64>(_635_b) - 25LL);
	};
	jule::I64 _745_q = (((-(_2445ca2a9_mulByLog2Log10(static_cast<jule::I64>((_629_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di = 0;;
	jule::I64 _8113_dexp2 = 0;;
	jule::Bool _8124_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cbb6d_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _2445cc421_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_745_q)))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U64 _945_extra = static_cast<jule::U64>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_819_di >> _945_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_819_di & _955_extraMask));
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_2445c9a17_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_819_di)), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _2445c91ba_ryuFtoaFixed64(_2445bb07a_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1319_e2 = _12156_exp;;
	jule::I64 _1325_b = _24457c404_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1325_b))));
		_1319_e2+=(static_cast<jule::I64>(_1325_b) - 55LL);
	};
	jule::I64 _1465_q = (((-(_2445ca2a9_mulByLog2Log10(static_cast<jule::I64>((_1319_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di = 0;;
	jule::I64 _15313_dexp2 = 0;;
	jule::Bool _15324_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cc09c_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _2445cc421_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1465_q)))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U64 _1665_extra = static_cast<jule::U64>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_1539_di >> _1665_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_1539_di & _1675_extraMask));
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_2445c9a17_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _2445c9a17_formatDecimal(_2445bb07a_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2015_max = _2445c950b_u64pow10[_20088_prec];;
	jule::I64 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a = 0;;
			jule::U64 _20412_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_22a821519:;
	}
	_iter_end_22a821519:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U64 _2299_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL)));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2319_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2319_v % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 1LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2299_n + 0LLU))]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23413_v2) + 0LLU))];
			_2319_v=_23313_v1;
		}
	_iter_next_22a82167e:;
	}
	_iter_end_22a82167e:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _2319_v) + 1LLU))];
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2299_n)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _2319_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_22a829ad8:;
	}
	_iter_end_22a829ad8:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _2029_trimmed));
}



inline void _2445c9ee0_ryuFtoaShortest(_2445bb07a_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _243ded814_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_244576684_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_2445cb0bd_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml = 0;;
	jule::U64 _2739_mc = 0;;
	jule::U64 _27313_mu = 0;;
	jule::I64 _27321_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _2445ca9a2_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_2445cb0bd_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I64 _2795_q = (_2445ca2a9_mulByLog2Log10(static_cast<jule::I64>((-(_27321_e2)))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _2445ba7d8_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cbb6d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2735_ml)), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cbb6d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_2739_mc)), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cbb6d_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27313_mu)), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29013_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29113_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29213_du32));
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cc09c_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cc09c_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2445cc09c_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_2445cc421_divisibleByPow5(_2735_ml, static_cast<jule::I64>((-(_2795_q))))) {
			_2869_dl0=true;
		};
		if (_2445cc421_divisibleByPow5(_2739_mc, static_cast<jule::I64>((-(_2795_q))))) {
			_2879_dc0=true;
		};
		if (_2445cc421_divisibleByPow5(_27313_mu, static_cast<jule::I64>((-(_2795_q))))) {
			_2889_du0=true;
		};
	};
	jule::U64 _3255_extra = static_cast<jule::U64>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2839_dl >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2839_dl & _3265_extraMask));
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2849_dc >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2849_dc & _3265_extraMask));
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_2859_du >> _3255_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_2859_du & _3265_extraMask));
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_2445cb0bd_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I64 _2445ca2a9_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _2445ca573_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2445ca9a2_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _243ded814_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _2445cb0bd_ryuDigits(_2445bb07a_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi = 0;;
	jule::U32 _41014_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2445cc6da_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi = 0;;
	jule::U32 _41110_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2445cc6da_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi = 0;;
	jule::U32 _41210_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2445cc6da_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_2445cb73e_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_2445cb73e_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42813_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1 = 0;;
				jule::U32 _43117_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42813_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43117_v2 + '0')));
			}
		_iter_next_22a845e78:;
		}
		_iter_end_22a845e78:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42813_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42813_n)));
		_2445cb73e_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_22a8486d9:;
	}
	_iter_end_22a8486d9:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_22a8482cc:;
	}
	_iter_end_22a8482cc:;;
}



inline void _2445cb73e_ryuDigits32(_2445bb07a_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _4609_trimmed = 0LL;;
	jule::I64 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c = 0;;
			jule::U32 _47120_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_22a84b016;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47120_cdigit));
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_22a84b016:;
	}
	_iter_end_22a84b016:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I64 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1 = 0;;
			jule::U32 _51213_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51213_v2) + 0LLU))];
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_22a84bca3:;
	}
	_iter_end_22a84bca3:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>(static_cast<jule::U8>((_5099_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _4609_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2445cbb6d_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _2445c3527_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi = 0;;
	jule::U64 _5489_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_2445ca573_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2445cc09c_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _2445c3527_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_2445ca573_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1 = 0;;
	jule::U64 _5799_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1 = 0;;
	jule::U64 _58013_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457e99a_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid = 0;;
	jule::U64 _58110_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _24457d191_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _2445cc421_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_22a85e9a8:;
	}
	_iter_end_22a85e9a8:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _2445cc6da_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _2445d0655_trim(_2445cdd07_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_22a862eea:;
	}
	_iter_end_22a862eea:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _2445d0941_rightShift(_2445cdd07_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2859_r = 0LL;;
	jule::I64 _2869_w = 0LL;;
	jule::U64 _2899_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
						(_2859_r)++;
					}
				_iter_next_22a86631c:;
				}
				_iter_end_22a86631c:;;
				goto _iter_end_22a864a68;
			};
			jule::U64 _3039_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3039_c) - '0'));
		}
	_iter_next_22a864a68:;
	}
	_iter_end_22a864a68:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U64 _3085_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U64 _3129_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2859_r]);;
			jule::U64 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3139_dig + '0')));
			(_2869_w)++;
			_2899_n=static_cast<jule::U64>((((_2899_n * 10LLU) + _3129_c) - '0'));
		}
	_iter_next_22a867d02:;
	}
	_iter_end_22a867d02:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U64 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3229_dig + '0')));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=static_cast<jule::U64>((_2899_n * 10LLU));
		}
	_iter_next_22a868088:;
	}
	_iter_end_22a868088:;;
	(*(_28420_a))._field_nd=_2869_w;
	_2445d0655_trim(_28420_a);
}



inline jule::Bool _2445d0de7_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_22a86b80b:;
	}
	_iter_end_22a86b80b:;;
	return false;;
}



inline void _2445d11a0_leftShift(_2445cdd07_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3539_delta = _2445cd70d_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_2445d0de7_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_2445cd70d_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I64 _3589_r = (*(_35219_a))._field_nd;;
	jule::I64 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U64 _3629_n = static_cast<jule::U64>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U64 _3669_quo = (_3629_n / 10LLU);;
			jule::U64 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3679_rem + '0')));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_22a86d81e:;
	}
	_iter_end_22a86d81e:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U64 _3799_quo = (_3629_n / 10LLU);;
			jule::U64 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>(static_cast<jule::U8>((_3809_rem + '0')));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_22a86ec3d:;
	}
	_iter_end_22a86ec3d:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_2445d0655_trim(_35219_a);
}



inline jule::Bool _2445d1524_shouldRoundUp(_2445cdd07_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _2445d2ba7_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _2445d367a_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _648_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2445d3ed8_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_648_s = __jule_assign_result.__jule_result_arg1;
	});
	return _648_s;;
}



inline jule::Str _2445d3070_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _2445d367a_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _758_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2445d3ed8_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_758_s = __jule_assign_result.__jule_result_arg1;
	});
	return _758_s;;
}



inline jule::Str _2445d3339_Itoa(jule::I64 _809_i) {
	return _2445d3070_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _2445d367a_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _2445d3944_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _2445d3ed8_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _1079_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _1089_i = _1079_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14913_us = static_cast<jule::U64>(_10133_u);;
		while ((_14913_us >= 100LLU)) {
			{
				jule::U64 _15113_is = ((_14913_us % 100LL) << 1LLU);;
				_14913_us/=100LLU;
				_1089_i-=2LL;
				_1079_a[(_1089_i + 1LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 1LLU))];
				_1079_a[(_1089_i + 0LL)]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15113_is + 0LLU))];
			}
		_iter_next_22a8ab8c3:;
		}
		_iter_end_22a8ab8c3:;;
		jule::U64 _1599_is = (_14913_us << 1LLU);;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_1599_is + 1LLU))];
		if ((_14913_us >= 10LLU)) {
			(_1089_i)--;
			_1079_a[_1089_i]=jule::Str::lit("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_1599_is)];
		};
	} else if (_2445d3944_isPowerOfTwo(_10141_base)) {
		jule::U64 _1749_shift = (static_cast<jule::U64>(_24457595d_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _1759_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _1769_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _1759_b)) {
			{
				(_1089_i)--;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _1769_m))];
				_10133_u>>=_1749_shift;
			}
		_iter_next_22a8b3952:;
		}
		_iter_end_22a8b3952:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	} else {
		jule::U64 _1879_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _1879_b)) {
			{
				(_1089_i)--;
				jule::U64 _19313_q = jule::div(_10133_u,_1879_b);;
				_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19313_q * _1879_b))))];
				_10133_u=_19313_q;
			}
		_iter_next_22a8b5668:;
		}
		_iter_end_22a8b5668:;;
		(_1089_i)--;
		_1079_a[_1089_i]=jule::Str::lit("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))];
	};
	if (_10152_neg) {
		(_1089_i)--;
		_1079_a[_1089_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_1079_a.slice(_1089_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_1079_a.slice(_1089_i));
	return __jule_func_result;;
}



inline jule::Str _2445d53d5_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_22a8cc790:;
			{
				return _2445d48ce_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_22a8cc806:;
			{
				return _2445d4b98_SysUint;;
			}
		}
		else {
			_case_begin_22a8cc251:;
			{
				return _4515_kind;;
			}
		}
		_match_end_22a8c9979:;
	};
}



inline jule::I64 _2445d569e_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_22a8cd906:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22a8cda38:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22a8cda9e:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22a8cdb15:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_22a8cdb7b:;
			{
				return _2445d45d2_BitSize;;
			}
		}
		else {
			_case_begin_22a8cd51b:;
			{
				return -1LL;;
			}
		}
		_match_end_22a8cd4a5:;
	};
}



inline jule::Str _2445d59e0_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_22a8d05b7:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_22a8d0ebe:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_22a8d1035:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_22a8d109b:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_22a8d0a5c:;
			{
				return jule::Str();;
			}
		}
		_match_end_22a8d09e6:;
	};
}



inline jule::Str _2445d5ca9_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_22a8d1354:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_22a8d2245:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_22a8d22ab:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_22a8d2322:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_22a8d1be5:;
			{
				return jule::Str();;
			}
		}
		_match_end_22a8d1b7e:;
	};
}



inline jule::Str _2445d6073_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_22a8d25db:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_22a8d34cc:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_22a8d2e7c:;
			{
				return jule::Str();;
			}
		}
		_match_end_22a8d2e16:;
	};
}



inline jule::Bool _2445d6bbc_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _2445c841c_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _2445d6e86_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_22a8d838e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_22a8d7ca6:;
			{
				return 64LLU;;
			}
		}
		_match_end_22a8d6898:;
	};
}



inline jule::I64 _2445d7250_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_22a8d912b:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_22a8d91d6:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_22a8d924c:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_22a8d8669:;
			{
				return 64LLU;;
			}
		}
		_match_end_22a8d8bdb:;
	};
}



inline jule::I64 _2445d7519_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_22a8dab88:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_22a8dac43:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_22a8daca9:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_22a8da649:;
			{
				return 64LLU;;
			}
		}
		_match_end_22a8da23c:;
	};
}



inline void _2445d7690_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _24357708c_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_22a8dbb01:;
				{
					_2445d45d2_BitSize=64LLU;
					_2445d48ce_SysInt=jule::Str::lit("i64", 3);
					_2445d4b98_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_22a8dbb89:;
				{
					_2445d45d2_BitSize=32LLU;
					_2445d48ce_SysInt=jule::Str::lit("i32", 3);
					_2445d4b98_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_22a8dba79:;
		};
	};
}



inline void _2445d7816_init(void) {
	_2445d7690_UpdateTarget();
}



inline jule::I64 _2445db5c8_MinI(jule::Str _6113_k) {
	_6113_k=_2445d53d5_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_22a8dae30:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22a8ddce0:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22a8ddd56:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22a8dddbc:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_22a8db073:;
			{
				return 0LL;;
			}
		}
		_match_end_22a8db01d:;
	};
}



inline jule::I64 _2445db8d6_MaxI(jule::Str _7913_k) {
	_7913_k=_2445d53d5_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_22a8de164:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22a8e03eb:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22a8e0462:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22a8e04c8:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_22a8dea7c:;
			{
				return 0LL;;
			}
		}
		_match_end_22a8e0286:;
	};
}



inline jule::U64 _2445dbba0_MaxU(jule::Str _9713_k) {
	_9713_k=_2445d53d5_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_22a8e0770:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22a8e1a07:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_22a8e1a6d:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_22a8e1ad4:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_22a8e1188:;
			{
				return 0LLU;;
			}
		}
		_match_end_22a8e1892:;
	};
}



inline jule::F64 _2445dbdd1_Min(jule::Str _11512_k) {
	_11512_k=_2445d53d5_RealKindOf(_11512_k);
	jule::I64 _1175_i = _2445db5c8_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1175_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22a8e4037:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22a8e3971:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_22a8e3410:;
			{
				return 0LL;;
			}
		}
		_match_end_22a8e36c9:;
	};
}



inline jule::F64 _2445dc19a_Max(jule::Str _13312_k) {
	_13312_k=_2445d53d5_RealKindOf(_13312_k);
	jule::I64 _1355_i = _2445db8d6_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1355_i));;
	};
	jule::U64 _1395_u = _2445dbba0_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1395_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22a8e60a0:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22a8e59d9:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_22a8e53ce:;
			{
				return 0LL;;
			}
		}
		_match_end_22a8e5720:;
	};
}



inline jule::Bool _2445dc61d_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _2445dc92b_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _2445dcbe5_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _2445dd036_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _2445dd300_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _2445dd5b9_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _2445dd883_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _2445ddc29_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _2445ddee3_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _2445de2ac_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _2445de631_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_22a8eb5c2:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_22a8eb8d0:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_22a8ebb55:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_22a8ebbbb:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_22a8ebc32:;
			{
				return _2445dc61d_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22a8ebc98:;
			{
				return _2445dc92b_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22a8ebda8:;
			{
				return _2445dcbe5_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22a8ebe1e:;
			{
				return _2445dd036_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_22a8ebe85:;
			{
				return _2445dd300_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22a8ebeeb:;
			{
				return _2445dd5b9_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_22a8ec073:;
			{
				return _2445dd883_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_22a8ec0ea:;
			{
				return _2445ddc29_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22a8ec172:;
			{
				return _2445ddee3_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22a8ec1e9:;
			{
				return _2445de2ac_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_22a8ec271:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_22a8ec2e8:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_22a8eb737:;
			{
				return false;;
			}
		}
		_match_end_22a8e5478:;
	};
}



inline jule::Bool _2445de8ea_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _2445debb4_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _2445dee7d_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _2445e0247_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _2445e06ba_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _2445e0984_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _2445e0c4d_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _2445e1017_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _2445e138b_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_22a9043aa:;
			{
				return _2445e23e2_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_22a90471d:;
			{
				return _2445e2700_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_22a904795:;
			{
				return _2445e2700_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22a9049e8:;
			{
				return _2445de8ea_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22a904a70:;
			{
				return _2445debb4_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22a904ae7:;
			{
				return _2445dee7d_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22a904b6e:;
			{
				return _2445e0247_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_22a904c4b:;
			{
				return _2445e06ba_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_22a904cc3:;
			{
				return _2445e0984_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22a904d4a:;
			{
				return _2445e0c4d_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22a904dc2:;
			{
				return _2445e1017_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_22a904e49:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a9045a8:;
			{
				return false;;
			}
		}
		_match_end_22a904531:;
	};
}



inline jule::Bool _2445e23e2_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _2445e2700_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _2445e29b9_IsInt(jule::Str _4610_k) {
	return (_2445e23e2_IsSigInt(_4610_k) || _2445e2700_IsUnsigInt(_4610_k));;
}



inline jule::Bool _2445e2d0a_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _2445e30c4_IsNum(jule::Str _5610_k) {
	return (_2445e29b9_IsInt(_5610_k) || _2445e2d0a_IsFloat(_5610_k));;
}



inline jule::Bool _2445e338d_IsSigNum(jule::Str _6113_k) {
	return (_2445e23e2_IsSigInt(_6113_k) || _2445e2d0a_IsFloat(_6113_k));;
}



inline void _2445ec5b7_lshiftUnsig(_2445e359c_Const* _59021_c, _2445e359c_Const* _59032_x) {
	jule::U64 _5915_l = _2445e5ec8_AsU64(_59021_c);;
	jule::U64 _5925_r = _2445e5ec8_AsU64(_59032_x);;
	_2445e67c0_SetU64(_59021_c, static_cast<jule::U64>((_5915_l << _5925_r)));
}



inline void _2445ec8e7_rshiftUnsig(_2445e359c_Const* _59621_c, _2445e359c_Const* _59632_x) {
	jule::U64 _5975_l = _2445e5ec8_AsU64(_59621_c);;
	jule::U64 _5985_r = _2445e5ec8_AsU64(_59632_x);;
	_2445e67c0_SetU64(_59621_c, static_cast<jule::U64>((_5975_l >> _5985_r)));
}



inline jule::Bool _24681a580_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_246767e7d_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9aa8c3:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_22a9aa8c3:;
			++it;
			goto _iter_begin_22a9aa8c3;
		}
		_iter_end_22a9aa8c3:;
	};
	return false;;
}



inline jule::Bool _24681a88d_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_246768225_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9aac36:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_22a9aac36:;
			++it;
			goto _iter_begin_22a9aac36;
		}
		_iter_end_22a9aac36:;
	};
	return false;;
}



inline jule::Bool _24681ae98_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _24681b262_IsRawStr(_36410_k)));;
}



inline jule::Bool _24681b262_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _24681b52b_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _24681be55_IsFloat(jule::Str _38012_k) {
	if (_24339b774_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _2433a1ceb_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _2433a1ceb_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _24681c21e_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _24681c7a2_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _24681ca6b_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _24681d0ee_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_246767c5d_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9b318e:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_22a9b318e:;
			++it;
			goto _iter_begin_22a9b318e;
		}
		_iter_end_22a9b318e:;
	};
	return false;;
}



inline jule::Bool _24681d572_IsLetter(jule::I32 _42913_r) {
	return _2431d63a0_IsLetter(_42913_r);;
}



inline jule::Bool _24681db05_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _24681ddbe_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _24681e188_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _24681e452_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_22a9b6db8:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_22a9b6e40:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_22a9b6eb7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22a9b6cec:;
			{
				return false;;
			}
		}
		_match_end_22a9b5c52:;
	};
}



inline jule::Bool _24681e71b_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _24681e9d5_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_246814304_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9b87c1:;
		if (it != expr_end) {
			jule::U64 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_22a9b87c1:;
			++it;
			goto _iter_begin_22a9b87c1;
		}
		_iter_end_22a9b87c1:;
	};
	return false;;
}



inline jule::Bool _24681ec9e_IsAssignOp(jule::U64 _49515_id) {
	if (_24681e9d5_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_246814601_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9baaae:;
		if (it != expr_end) {
			jule::U64 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_22a9baaae:;
			++it;
			goto _iter_begin_22a9baaae;
		}
		_iter_end_22a9baaae:;
	};
	return false;;
}



inline jule::Ptr<_24682060c_File> _2468219a4_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_24682060c_File>(_24682060c_File{._field_Path=_5715_path, });;
}



inline _24345e617_Log _246823500_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_24682060c_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_24345ea79_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _2468238b8_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22a9c557a:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_22a9c557a:;
			++it;
			_1149_i++;
			goto _iter_begin_22a9c557a;
		}
		_iter_end_22a9c557a:;
	};
	return true;;
}



inline jule::Str _246823c3c_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_24681db05_IsDecimal(_1289_b))))) {
				goto _iter_end_22a9c72c4;
			};
		}
	_iter_next_22a9c72c4:;
	}
	_iter_end_22a9c72c4:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _246824105_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _246823c3c_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _246824479_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_22a9c9ded:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _24681db05_IsDecimal(_1689_b)) {
					_case_begin_22a9ca9e2:;
					{
						goto _iter_next_22a9c99e1;
					}
				}
				else if (_246825d82_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_22a9caa69:;
					{
						return _246824105_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_22a9ca926:;
					{
						goto _iter_end_22a9c99e1;
					}
				}
				_match_end_22a9ca8b0:;
			};
		}
	_iter_next_22a9c99e1:;
	}
	_iter_end_22a9c99e1:;;
	return jule::Str();;
}



inline jule::Str _2468247ed_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _246823c3c_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _246824b72_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _246823c3c_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _246825106_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _246823c3c_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_24681db05_IsDecimal(_2019_b))))) {
				goto _iter_end_22a9cdb38;
			};
		}
	_iter_next_22a9cdb38:;
	}
	_iter_end_22a9cdb38:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _2468253c0_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2179_i = 0LL;;
	_julec_label_22a9d08b5:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_22a9d13bb:;
					{
						__jule_func_result = _246825106_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_22a9d1443:;
					{
						goto _iter_next_22a9d094d;
					}
				}
				else if (_246825a0d_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_22a9d14ba:;
					{
						__jule_func_result = _246823c3c_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_24681db05_IsDecimal(_2209_b)))) {
					_case_begin_22a9d1542:;
					{
						goto _iter_end_22a9d094d;
					}
				}
				_match_end_22a9d12de:;
			};
		}
	_iter_next_22a9d094d:;
	}
	_iter_end_22a9d094d:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _246825689_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_2468238b8_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_24681ddbe_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_22a9d90b6;
			};
		}
	_iter_next_22a9d90b6:;
	}
	_iter_end_22a9d90b6:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _246825a0d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _246825d82_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _246826206_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_22a9dbb24:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _24681db05_IsDecimal(_2769_b)) {
					_case_begin_22a9dc95a:;
					{
						goto _iter_next_22a9dbddd;
					}
				}
				else if (_246825d82_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_22a9dc9d2:;
					{
						return true;;
					}
				}
				else {
					_case_begin_22a9dc88e:;
					{
						goto _iter_end_22a9dbddd;
					}
				}
				_match_end_22a9dc828:;
			};
		}
	_iter_next_22a9dbddd:;
	}
	_iter_end_22a9dbddd:;;
	return false;;
}



inline jule::Bool _24682657a_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_22a9ddc8b:;
			{
				goto _case_begin_22a9ddd13;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_22a9ddd13:;
			{
				goto _case_begin_22a9ddd8a;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_22a9ddd8a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_22a9ddbae:;
			{
				return true;;
			}
		}
		_match_end_22a9ddae3:;
	};
}



inline jule::Bool _2468268ee_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_22a9e0a07:;
			{
				goto _case_begin_22a9e0a7e;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_22a9e0a7e:;
			{
				goto _case_begin_22a9e0b06;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_22a9e0b06:;
			{
				goto _case_begin_22a9e0d59;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_22a9e0d59:;
			{
				return false;;
			}
		}
		else {
			_case_begin_22a9e05ea:;
			{
				return true;;
			}
		}
		_match_end_22a9e052e:;
	};
}



inline jule::Str _246826d72_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I64 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _246825106_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_246825a0d_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _246823c3c_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_24681e188_IsOctal(_3399_b))))) {
				goto _iter_end_22a9e4269;
			};
		}
	_iter_next_22a9e4269:;
	}
	_iter_end_22a9e4269:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _24682713b_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3699_i = 2LL;;
	_julec_label_22a9e8339:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_24682657a_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_22a9e8e94:;
					{
						__jule_func_result = _246824b72_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_2468268ee_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_22a9e901b:;
					{
						__jule_func_result = _2468247ed_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_246825d82_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_22a9e9093:;
					{
						__jule_func_result = _246824105_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_246826206_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_22a9e911a:;
					{
						__jule_func_result = _246824479_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_24681e452_IsHex(_3729_b))))) {
					_case_begin_22a9e9192:;
					{
						goto _iter_end_22a9e857b;
					}
				}
				_match_end_22a9e8da6:;
			};
		}
	_iter_next_22a9e857b:;
	}
	_iter_end_22a9e857b:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _2468274b0_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_24681e452_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_22a9eb716:;
	}
	_iter_end_22a9eb716:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _246827779_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _2468274b0_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _246827a43_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _2468274b0_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _246827d0c_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _2468274b0_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _2468280c6_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_24681e188_IsOctal((*(_42616_txt))[1LL]))) || (!(_24681e188_IsOctal((*(_42616_txt))[2LL])))) || (!(_24681e188_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_24345e617_Log> _24682d0ba_Lex(jule::Ptr<_24682060c_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_246828846_lex _8149_lex = _246828846_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_24682b65c_newLine(&_8149_lex);
	_24682943a_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _2468eb342_FindModuleFile(jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22aa7d5cd:;
		if (it != expr_end) {
			jule::Ptr<_241ede3eb_DirEntry> *_1412_d = it;
			{
				if (((!(_241ee3620_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*((*(_1412_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_22aa7d5cd:;
			++it;
			goto _iter_begin_22aa7d5cd;
		}
		_iter_end_22aa7d5cd:;
	};
	return false;;
}



inline jule::Str _2468eb5ea_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_241ede3eb_DirEntry>> _2713_dirents = ({
				auto except = static__2433c0d4d_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_22aa7e6ab;
				} jule::Slice<jule::Ptr<_241ede3eb_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _2468eb342_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I64 _369_n = _2527_path.len();;
			_2527_path=_2433bda0a_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_22aa7e6ab;
			};
		}
	_iter_next_22aa7e6ab:;
	}
	_iter_end_22aa7e6ab:;;
	return jule::Str();;
}



inline jule::Slice<_24345e617_Log> _2468eb8b4_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__241ee1b07_Read(_2433bcd17_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_24345e617_Log>::make({_24345e617_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _2433a42d7_Trim(_2420a6a8a_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_24345e617_Log>::make({_24345e617_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _2468ec244_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335aa52_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _24324eda8_IsUpper(_145_r);;
}



inline jule::Bool _24694a759_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _2469679eb_ToRune(jule::Str _2011_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	jule::Slice<jule::U8> _225_bytes = _2420a67c1_StrBytes(_2011_lit).slice(1LL, (_2011_lit.len() - 1LL));;
	if (((_225_bytes[0LL] == '\\') && (_225_bytes.len() > 1LL))) {
		jule::I64 _2413_i = 0LL;;
		_219_r=static_cast<jule::I32>(_246968700_runeFromEsqSeq(_225_bytes, &(_2413_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune(_225_bytes);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _246967ca4_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _2469680e5_ToStr(jule::Str _4710_lit) {
	if ((_4710_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4710_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22aa8a057:;
		if (it != expr_end) {
			jule::U8 *_5412_b = it;
			{
				if ((((*(_5412_b)) >= 128LLU) || ((*(_5412_b)) == '\\'))) {
					_539_isPure=false;
					goto _iter_end_22aa8a057;
				};
			}
			_iter_next_22aa8a057:;
			++it;
			goto _iter_begin_22aa8a057;
		}
		_iter_end_22aa8a057:;
	};
	if (_539_isPure) {
		return _4710_lit.slice(1LL, (_4710_lit.len() - 1LL));;
	};
	jule::Slice<jule::U8> _675_bytes = _2420a67c1_StrBytes(_4710_lit).slice(1LL, (_4710_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _675_bytes.len(), 0);;
	jule::I64 _699_i = 0LL;;
	while ((_699_i < _675_bytes.len())) {
		{
			jule::U8 _719_b = _675_bytes[_699_i];;
			if ((_719_b == '\\')) {
				(_689_s).append(_246968a74_strEsqSeq(_675_bytes, &(_699_i)));;
			} else {
				jule::I32 _7513_r = 0;;
				jule::I64 _7516_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune(_675_bytes.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_24335bb74_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_22aa8bed2:;
	}
	_iter_end_22aa8bed2:;;
	{ jule::Slice<jule::U8> &__jule_push_dest = _689_s; __jule_push_dest.push(0LLU); };
	return _2420a6d54_StrFromBytes(_689_s.slice(0LL, (_689_s.len() - 1LL)));;
}



inline __jule_tuple_u8__jule_tuple_bool _2469683ae_tryBtoaCommonEsq(jule::Slice<jule::U8> _8421_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8421_bytes.len() < 2LL) || (_8421_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8421_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_22aa8ee91:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_22aa90018:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_22aa90090:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_22aa90117:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_22aa9018e:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_22aa90216:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_22aa9028d:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_22aa90315:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_22aa9038c:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_22aa90414:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_22aa8ed4d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _246968700_runeFromEsqSeq(jule::Slice<jule::U8> _11419_bytes, jule::I64* _11439_i) {
	jule::U8 _1155_b = 0;;
	jule::Bool _1158_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _2469683ae_tryBtoaCommonEsq(_11419_bytes.slice((*(_11439_i))));
		_1155_b = __jule_assign_result.__jule_result_arg0;
		_1158_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11439_i)))++;
	if (_1158_ok) {
		((*(_11439_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_1155_b));;
	};
	{
		auto &_match_expr{ _11419_bytes[(*(_11439_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_22aa9414e:;
			{
				;
				jule::I32 _1259_r = static_cast<jule::I32>(({
					auto except = _2445c1525_ParseUint(_2420a6a8a_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:125:19"));
					(except.result);
				}));;
				(*(_11439_i))+=5LL;
				return _1259_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_22aa9499b:;
			{
				;
				jule::I32 _1309_r = static_cast<jule::I32>(({
					auto except = _2445c1525_ParseUint(_2420a6a8a_BytesStr(_11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:130:19"));
					(except.result);
				}));;
				(*(_11439_i))+=9LL;
				return _1309_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_22aa94a12:;
			{
				;
				jule::Slice<jule::U8> _1359_seq = _11419_bytes.slice(((*(_11439_i)) + 1LL), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2445c1525_ParseUint(_2420a6a8a_BytesStr(_1359_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:137:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_22aa93516:;
			{
				;
				jule::Slice<jule::U8> _1409_seq = _11419_bytes.slice((*(_11439_i)), ((*(_11439_i)) + 3LL));;
				(*(_11439_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2445c1525_ParseUint(_2420a6a8a_BytesStr(_1409_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:142:18"));
					(except.result);
				})));;
			}
		}
		_match_end_22aa934b1:;
	};
}



inline jule::Slice<jule::U8> _246968a74_strEsqSeq(jule::Slice<jule::U8> _14614_bytes, jule::I64* _14634_i) {
	jule::I32 _1475_r = _246968700_runeFromEsqSeq(_14614_bytes, _14634_i);;
	if ((_1475_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1475_r))});;
	};
	return _2420a711d_BytesFromStr(jule::Str::from_rune(_1475_r));;
}



inline jule::I64 _246b20324_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r = 0;;
			jule::I64 _1312_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_22aabe90a:;
	}
	_iter_end_22aabe90a:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _246b20698_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _285_start = (*(_2724_i));;
	jule::I64 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r = 0;;
			jule::I64 _3112_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _24335a711_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_22aac1e4b:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_22aac2028:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_22aac1874:;
			};
		}
	_iter_next_22aac11ae:;
	}
	_iter_end_22aac11ae:;;
	return nullptr;;
}



inline void _246b20984_FmtByDefault(_2433b0c50_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_2433b982a_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type130) {
			_case_begin_22aac347a:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445bb60d_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type130))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_22aac3b62:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445bb60d_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_22aac3623:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d3070_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_22aac3689:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d3070_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type132)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_22aac3c94:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d3070_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_22aac3d0a:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d3070_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_22aac3d71:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type129)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_22aac3dd7:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_22aac3e4d:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_22aac3eb4:;
			{
				_2433b982a_WriteStr(_4722_buf, _2445d2ba7_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_22aac402a:;
			{
				_2433b982a_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_22aac4091:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2433b982a_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_2433b982a_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_22aac2e6e:;
			{
				_2433b982a_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_22aac2325:;
	};
}



inline void _246b20da2_applyFmtByDefault(_2433b0c50_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_246b20984_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _246b21303_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _2433b0c50_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_246b20da2_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_2433b982a_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_2433b9572_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _246b21644_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _2420a711d_BytesFromStr(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1209_i = _246b20324_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I64 _1249_j = 0LL;;
	jule::I64 _1259_last = 0LL;;
	_2433b0c50_StrBuilder _1269_buf = static__2433b1019_New(static_cast<jule::I64>(_11511_fmt.len()));;
	for (; (_1209_i != -1LL); _1209_i=static_cast<jule::I64>(_246b20324_findFormatPrefix(&(_1169_fmtBytes), _1209_i))) {
		{
			_2433b9572_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _246b20698_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_22aacee48;
			};
			_246b21303_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_2433b9572_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=static_cast<jule::I64>(_1169_fmtBytes.len());
				goto _iter_end_22aacee48;
			};
			_1259_last=_1209_i;
		}
	_iter_next_22aacee48:;
	}
	_iter_end_22aacee48:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_2433b9572_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _2433baac3_Buf(&_1269_buf);;
}



inline jule::Str _246b23712_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	jule::Slice<jule::U8> _329_bytes = _246b21644_Format(_3111_fmt, _3121_args);;
	{ jule::Slice<jule::U8> &__jule_push_dest = _329_bytes; __jule_push_dest.push(0LLU); };
	return _2420a6d54_StrFromBytes(_329_bytes.slice(0LL, (_329_bytes.len() - 1LL)));;
}



inline jule::Bool _24686aee8_parameterUsesGenerics(jule::Ptr<_246867c70_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>* _38446_generics) {
	if (_24686495e_IsSelf((*((*(_38431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _2469cedd7_kindUsesGenerics(&((*((*(_38431_p))))._field_Kind), _38446_generics);;
}



inline jule::Ptr<_2469bb852_TypeSymbol> _24686d76a_buildType(jule::Ptr<_246830320_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_246984c16_Value> _24686da78_buildExpr(jule::Ptr<_246834654_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _24686dd42_buildTypeAlias(jule::Ptr<_246846b83_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*(_11223_decl))._field_Public, ._field_Binded=(*(_11223_decl))._field_Binded, ._field_Token=(*(_11223_decl))._field_Token, ._field_Ident=(*(_11223_decl))._field_Ident, ._field_Kind=_24686d76a_buildType((*(_11223_decl))._field_Kind), });;
}



inline jule::Ptr<_24684d030_Field> _24686e183_buildField(jule::Ptr<_24684a45b_FieldDecl> _12319_decl) {
	return jule::new_ptr<_24684d030_Field>(_24684d030_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*(_12319_decl))._field_Public, ._field_Mutable=(*(_12319_decl))._field_Mutable, ._field_Ident=(*(_12319_decl))._field_Ident, ._field_Kind=_24686d76a_buildType((*(_12319_decl))._field_Kind), ._field_Default=(*(_12319_decl))._field_Default});;
}



inline jule::Slice<jule::Ptr<_24684d030_Field>> _24686e44c_buildFields(jule::Slice<jule::Ptr<_24684a45b_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_24684d030_Field>> _1359_fields = jule::Slice<jule::Ptr<_24684d030_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad840ba:;
		if (it != expr_end) {
			jule::Ptr<_24684a45b_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_24684d030_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_24686e183_buildField(_13617_decl)); };
			}
			_iter_next_22ad840ba:;
			++it;
			goto _iter_begin_22ad840ba;
		}
		_iter_end_22ad840ba:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_246850e23_Struct> _24686e716_buildStruct(jule::Ptr<_24684ad52_StructDecl> _14220_decl) {
	return jule::new_ptr<_246850e23_Struct>(_246850e23_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*(_14220_decl))._field_Ident, ._field_Fields=_24686e44c_buildFields(&((*(_14220_decl))._field_Fields)), ._field_Public=(*(_14220_decl))._field_Public, ._field_Binded=(*(_14220_decl))._field_Binded, ._field_Directives=(*(_14220_decl))._field_Directives, ._field_Generics=(*(_14220_decl))._field_Generics, });;
}



inline jule::Ptr<_246864343_Param> _24686e9d0_buildParam(jule::Ptr<_246840a7d_ParamDecl> _15419_decl) {
	return jule::new_ptr<_246864343_Param>(_246864343_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*(_15419_decl))._field_Mutable, ._field_Variadic=(*(_15419_decl))._field_Variadic, ._field_Reference=(*(_15419_decl))._field_Reference, ._field_Kind=_24686d76a_buildType((*(_15419_decl))._field_Kind), ._field_Ident=(*(_15419_decl))._field_Ident});;
}



inline jule::Slice<jule::Ptr<_246864343_Param>> _24686ed76_buildParams(jule::Slice<jule::Ptr<_246840a7d_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_246864343_Param>> _1669_params = jule::Slice<jule::Ptr<_246864343_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad87ec0:;
		if (it != expr_end) {
			jule::Ptr<_246840a7d_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_246864343_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_24686e9d0_buildParam(_16717_decl)); };
			}
			_iter_next_22ad87ec0:;
			++it;
			goto _iter_begin_22ad87ec0;
		}
		_iter_end_22ad87ec0:;
	};
	return _1669_params;;
}



inline jule::Ptr<_246863ab2_RetType> _246870140_buildRetType(jule::Ptr<_246833213_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*(_17321_decl))._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_246863ab2_RetType>(_246863ab2_RetType{._field_Kind=_24686d76a_buildType((*(_17321_decl))._field_Kind), ._field_Idents=(*(_17321_decl))._field_Idents});;
}



inline jule::Ptr<_246865d17_Fn> _246870409_buildFunc(jule::Ptr<_246841ed0_FnDecl> _18318_decl) {
	return jule::new_ptr<_246865d17_Fn>(_246865d17_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*(_18318_decl))._field_Global, ._field_Unsafety=(*(_18318_decl))._field_Unsafety, ._field_Public=(*(_18318_decl))._field_Public, ._field_Binded=(*(_18318_decl))._field_Binded, ._field_Statically=(*(_18318_decl))._field_Statically, ._field_Exceptional=(*(_18318_decl))._field_Exceptional, ._field_Ident=(*(_18318_decl))._field_Ident, ._field_Directives=(*(_18318_decl))._field_Directives, ._field_Scope=(*(_18318_decl))._field_Scope, ._field_Generics=(*(_18318_decl))._field_Generics, ._field_Result=_246870140_buildRetType((*(_18318_decl))._field_Result), ._field_Params=_24686ed76_buildParams(&((*(_18318_decl))._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_246865d17_Fn>> _2468706c3_buildMethods(jule::Slice<jule::Ptr<_246841ed0_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_246865d17_Fn>> _2029_methods = jule::Slice<jule::Ptr<_246865d17_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad8ce1a:;
		if (it != expr_end) {
			jule::Ptr<_246841ed0_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_246865d17_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_246870409_buildFunc(_20317_decl)); };
			}
			_iter_next_22ad8ce1a:;
			++it;
			goto _iter_begin_22ad8ce1a;
		}
		_iter_end_22ad8ce1a:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>> _24687098c_buildTraitInherits(jule::Slice<jule::Ptr<_246830320_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad8daec:;
		if (it != expr_end) {
			jule::Ptr<_246830320_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_2469bb852_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_24686d76a_buildType(_21117_it)); };
			}
			_iter_next_22ad8daec:;
			++it;
			goto _iter_begin_22ad8daec;
		}
		_iter_end_22ad8daec:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_2468790e4_Trait> _246870c56_buildTrait(jule::Ptr<_24684b58e_TraitDecl> _21719_decl) {
	return jule::new_ptr<_2468790e4_Trait>(_2468790e4_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*(_21719_decl))._field_Ident, ._field_Public=(*(_21719_decl))._field_Public, ._field_Inherits=_24687098c_buildTraitInherits(&((*(_21719_decl))._field_Inherits)), ._field_Methods=_2468706c3_buildMethods(&((*(_21719_decl))._field_Methods)), });;
}



inline jule::Ptr<_24687ac83_EnumItem> _246871020_buildEnumItem(jule::Ptr<_246848646_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_24687ac83_EnumItem>(_24687ac83_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*(_22722_decl))._field_Ident, ._field_Value=_24686da78_buildExpr((*(_22722_decl))._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _2468712d9_buildEnumItems(jule::Slice<jule::Ptr<_246848646_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_24687ac83_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_24687ac83_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad92062:;
		if (it != expr_end) {
			jule::Ptr<_246848646_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_24687ac83_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_246871020_buildEnumItem(_23717_decl)); };
			}
			_iter_next_22ad92062:;
			++it;
			goto _iter_begin_22ad92062;
		}
		_iter_end_22ad92062:;
	};
	return _2369_items;;
}



inline jule::Ptr<_24687b800_Enum> _24687175c_buildEnum(jule::Ptr<_246849207_EnumDecl> _24318_decl) {
	return jule::new_ptr<_24687b800_Enum>(_24687b800_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*(_24318_decl))._field_Public, ._field_Ident=(*(_24318_decl))._field_Ident, ._field_Kind=_24686d76a_buildType((*(_24318_decl))._field_Kind), ._field_Items=_2468712d9_buildEnumItems(&((*(_24318_decl))._field_Items))});;
}



inline jule::Ptr<_24687c933_TypeEnumItem> _246871a26_buildTypeEnumItem(jule::Ptr<_246849a32_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_24687c933_TypeEnumItem>(_24687c933_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*(_25326_decl))._field_Ident, ._field_Kind=_24686d76a_buildType((*(_25326_decl))._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> _246871ce0_buildTypeEnumItems(jule::Slice<jule::Ptr<_246849a32_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad951a8:;
		if (it != expr_end) {
			jule::Ptr<_246849a32_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_24687c933_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_246871a26_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_22ad951a8:;
			++it;
			goto _iter_begin_22ad951a8;
		}
		_iter_end_22ad951a8:;
	};
	return _2629_items;;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2468720a9_buildTypeEnum(jule::Ptr<_24684a192_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_24687d00a_TypeEnum>(_24687d00a_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*(_26922_decl))._field_Public, ._field_Ident=(*(_26922_decl))._field_Ident, ._field_Items=_246871ce0_buildTypeEnumItems(&((*(_26922_decl))._field_Items))});;
}



inline jule::Ptr<_246922555_Var> _246872373_buildVar(jule::Ptr<_2468430ad_VarDecl> _27817_decl) {
	return jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*(_27817_decl))._field_Ident, ._field_Binded=(*(_27817_decl))._field_Binded, ._field_Constant=(*(_27817_decl))._field_Constant, ._field_Mutable=(*(_27817_decl))._field_Mutable, ._field_Public=(*(_27817_decl))._field_Public, ._field_Statically=(*(_27817_decl))._field_Statically, ._field_Reference=(*(_27817_decl))._field_Reference, ._field_Kind=_24686d76a_buildType((*(_27817_decl))._field_Kind), ._field_Value=_24686da78_buildExpr((*(_27817_decl))._field_Expr), ._field_Refers=static__24686c1d6_new(), ._field_Directives=(*(_27817_decl))._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_246922555_Var>> _24687263c_buildVars(jule::Slice<jule::Ptr<_2468430ad_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_246922555_Var>> _2969_vars = jule::Slice<jule::Ptr<_246922555_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ad998a5:;
		if (it != expr_end) {
			jule::Ptr<_2468430ad_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_246872373_buildVar(_29717_decl)); };
			}
			_iter_next_22ad998a5:;
			++it;
			goto _iter_begin_22ad998a5;
		}
		_iter_end_22ad998a5:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_2468a2309_Impl> _246872906_buildImpl(jule::Ptr<_24684bbee_Impl> _30318_decl) {
	return jule::new_ptr<_2468a2309_Impl>(_2468a2309_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*(_30318_decl))._field_Dest, ._field_Methods=_2468706c3_buildMethods(&((*(_30318_decl))._field_Methods)), ._field_Statics=_24687263c_buildVars((*(_30318_decl))._field_Statics)});;
}



inline jule::Ptr<_246983ac2_Data> _24689ccb6_buildAsComptimeMethodData(jule::Ptr<_246868c1b_FnIns>* _142735_f) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_142735_f)), 1)}), });;
}



inline jule::Ptr<_2468c8bd2_ImportInfo> _24689d0c4_findComptimePackage(jule::Ptr<_246900148_Sema>* _143529_s) {
	return _2469005dd_SelectPackage((*(_143529_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_2468c8bd2_ImportInfo>)>([=](jule::Ptr<_2468c8bd2_ImportInfo> _143628_pkg) mutable -> jule::Bool {
		return (*(_143628_pkg))._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_246983ac2_Data> _24689d448_buildComptimeTypeInfoData(jule::Ptr<_246900148_Sema>* _144135_s, jule::Ptr<_2469b43d8_TypeKind>* _144150_t) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_2468ee983_pushComptimeTypeInfo((*((*(_144135_s))))._field_meta.ptr(), _144150_t), 16)}), });;
}



inline jule::Ptr<_246983ac2_Data> _24689d679_buildComptimeValue(jule::Ptr<_246983ac2_Data>* _144928_d) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2468970ac_comptimeValue>(_2468970ac_comptimeValue{._field_data=(*(_144928_d))}), 17)}), });;
}



inline jule::Bool _2468a166b_matchConstraint(jule::Str* _14221_c, jule::Ptr<_2469b43d8_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_22b04b628:;
			{
				jule::Ptr<_2469bc259_Prim> _1459_prim = _2469b6a4a_Prim((*(_14234_g)).ptr());;
				if ((_1459_prim == nullptr)) {
					return false;;
				};
				return _2445e338d_IsSigNum((*(_1459_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_22b052354:;
			{
				jule::Ptr<_2469bc259_Prim> _1519_prim = _2469b6a4a_Prim((*(_14234_g)).ptr());;
				if ((_1519_prim == nullptr)) {
					return false;;
				};
				return _2445e2700_IsUnsigInt((*(_1519_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_22b0523ba:;
			{
				jule::Ptr<_2469bc259_Prim> _1579_prim = _2469b6a4a_Prim((*(_14234_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _2445e2d0a_IsFloat((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_22b052530:;
			{
				jule::Ptr<_2469bc259_Prim> _1639_prim = _2469b6a4a_Prim((*(_14234_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _2445e30c4_IsNum((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_22b052596:;
			{
				return _2469b5c7a_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_22b05260c:;
			{
				return (!(_2469b5c7a_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_22b052673:;
			{
				return _2469b59e4_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_22b052783:;
			{
				return _2469b6011_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_22b051221:;
			{
				return false;;
			}
		}
		_match_end_22b0511bb:;
	};
}



inline jule::Bool _2468a1979_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_24689e966_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b0579a8:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_22b0579a8:;
			++it;
			goto _iter_begin_22b0579a8;
		}
		_iter_end_22b0579a8:;
	};
	return false;;
}



inline jule::Ptr<_2468aea64_scopeChecker> _2468a453c_newScopeCheckerBase(jule::Ptr<_246900148_Sema>* _5829_s, jule::Ptr<_246868c1b_FnIns> _5843_owner) {
	return jule::new_ptr<_2468aea64_scopeChecker>(_2468aea64_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_24697d726_SymbolTable>(), });;
}



inline jule::Ptr<_2468aea64_scopeChecker> _2468a4905_newScopeChecker(jule::Ptr<_246900148_Sema>* _6625_s, jule::Ptr<_246868c1b_FnIns> _6639_owner) {
	jule::Ptr<_2468aea64_scopeChecker> _679_base = _2468a453c_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2468ad5bd_scopeLabel>>>(nullptr);
	(*(_679_base))._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2468adb51_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_2468ad5bd_scopeLabel> _2468a4c79_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_2468aea64_scopeChecker> _7637_scope) {
	jule::Ptr<_2468ad5bd_scopeLabel> _779_label = _2468b356d_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*(_7637_scope))._field_parent == nullptr) || ((*(_7637_scope))._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*(_7637_scope))._field_parent;
			_779_label=_2468b356d_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_22b075d17:;
	}
	_iter_end_22b075d17:;;
	return _779_label;;
}



inline jule::Bool _2468a5142_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_2468a7760_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_22b0777a8:;
			{
				jule::Ptr<_24685a081_FnCallExprModel> _939_fcem = _9021_Model.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34);;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22b07781e:;
			{
				jule::Ptr<_246983ac2_Data> _989_d = _9021_Model.cast_ptr<_246983ac2_Data>(&__jule_any_type24);;
				return _2468a5142_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_22b077753:;
	};
	return false;;
}



inline jule::Bool _2468a54b6_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_2468a7760_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_22b0794e1:;
			{
				return ((*(_10421_stmt)).cast_ptr<_2468a7760_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_22b079557:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_2468a8695_InfIter>(&__jule_any_type36)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_22b0795ce:;
			{
				jule::Ptr<_2468a9597_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_2468a9597_RangeIter>(&__jule_any_type40);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _2468a5142_modelIsGotoScope((*((*(_1119_it))._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_22b079656:;
			{
				jule::Ptr<_2468a8b4b_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_2468a8b4b_WhileIter>(&__jule_any_type38);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _2468a5142_modelIsGotoScope((*(_1149_it))._field_Expr, _10434_sc)) || _2468a5142_modelIsGotoScope((*(_1149_it))._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_22b079876:;
			{
				jule::Ptr<_2468ab896_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_2468ab896_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b07c1e7:;
					if (it != expr_end) {
						jule::Ptr<_2468ac4ce_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*((*(_12016_c))))._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22b07e370:;
								if (it != expr_end) {
									jule::Ptr<_246983ac2_Data> *_12420_expr = it;
									{
										if (_2468a5142_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_22b07e370:;
									++it;
									goto _iter_begin_22b07e370;
								}
								_iter_end_22b07e370:;
							};
						}
						_iter_next_22b07c1e7:;
						++it;
						goto _iter_begin_22b07c1e7;
					}
					_iter_end_22b07c1e7:;
				};
				return (((*(_1199_m))._field_Default != nullptr) && ((*((*(_1199_m))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_22b0798ed:;
			{
				jule::Ptr<_2468a8398_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_2468a8398_Conditional>(&__jule_any_type35);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b07d935:;
					if (it != expr_end) {
						jule::Ptr<_2468a7b7d_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _2468a5142_modelIsGotoScope((*((*(_13316_elif))))._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_22b07d935:;
						++it;
						goto _iter_begin_22b07d935;
					}
					_iter_end_22b07d935:;
				};
				return (((*(_1329_c))._field_Default != nullptr) && ((*((*(_1329_c))._field_Default))._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22b079975:;
			{
				jule::Ptr<_246983ac2_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_246983ac2_Data>(&__jule_any_type24);;
				return _2468a5142_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_22b06dcdd:;
			{
				return false;;
			}
		}
		_match_end_22b07917d:;
	};
}



inline jule::I64 _2468a583a_countMatchType(jule::Ptr<_2468ab896_Match>* _14720_m, jule::Ptr<_2469b43d8_TypeKind>* _14732_t) {
	jule::I64 _1489_n = 0LL;;
	jule::Str _1495_kind = _2469b47a1_Str((*(_14732_t)).ptr());;
	_julec_label_22b0836a4:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b083385:;
		if (it != expr_end) {
			jule::Ptr<_2468ac4ce_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_22b083385;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b0844da:;
					if (it != expr_end) {
						jule::Ptr<_246983ac2_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_22b083385;
							};
							if ((_1495_kind == _2469b47a1_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_2469b43d8_TypeKind>(&__jule_any_type83).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_22b0844da:;
						++it;
						goto _iter_begin_22b0844da;
					}
					_iter_end_22b0844da:;
				};
			}
			_iter_next_22b083385:;
			++it;
			goto _iter_begin_22b083385;
		}
		_iter_end_22b083385:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_246983ac2_Data>> _2468a5b04_getDatasFromTupleData(jule::Ptr<_246983ac2_Data>* _17131_d) {
	if ((_2469b8871_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_22b0889a6:;
				{
					return (*((*((*(_17131_d))))._field_Model.cast_ptr<_24685d79e_TupleExprModel>(&__jule_any_type81)))._field_Datas;;
				}
			}
			else {
				_case_begin_22b086465:;
				{
					jule::Ptr<_2469c234c_Tuple> _17717_t = _2469b8871_Tup((*((*(_17131_d))))._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_246983ac2_Data>> _17817_r = jule::Slice<jule::Ptr<_246983ac2_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*(_17717_t))._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22b087367:;
						if (it != expr_end) {
							jule::Ptr<_2469b43d8_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_246983ac2_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_22b087367:;
							++it;
							goto _iter_begin_22b087367;
						}
						_iter_end_22b087367:;
					};
					return _17817_r;;
				}
			}
			_match_end_22b086410:;
		};
	} else {
		return jule::Slice<jule::Ptr<_246983ac2_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _2468a64b7_checkMut(jule::Ptr<_246900148_Sema>* _20618_s, jule::Ptr<_246983ac2_Data>* _20629_left, jule::Ptr<_246983ac2_Data> _20646_right, jule::Ptr<_246819d43_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_22b08b965:;
			{
				_246902c83_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*(_20646_right))._field_Mutable))) && _2469b5c7a_Mutable((*(_20646_right))._field_Kind.ptr()))) {
			_case_begin_22b08b9dc:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_2469b80bd_Struct((*(_20646_right))._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_246902c83_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_20646_right))._field_Kind.ptr()), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b08b899:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_22b08b7de:;
	};
}



inline jule::Bool _2468a69a1_checkAssign(jule::Ptr<_246900148_Sema>* _22521_s, jule::Ptr<_246983ac2_Data>* _22536_left, jule::Ptr<_246983ac2_Data> _22553_right, jule::Ptr<_246819d43_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_246868c1b_FnIns> _2265_f = _2469b7d37_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*(_2265_f))._field_Decl != nullptr)) && (*((*(_2265_f))._field_Decl))._field_Global)) {
		_246902c83_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_246984496_IsConst((*(_22536_left)).ptr())) {
			_case_begin_22b091e54:;
			{
				_246902c83_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_2469030e6_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_22b091ecb:;
			{
				_246902c83_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_2468a64b7_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_22b092053:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_22b091d88:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_22b091508:;
	};
}



inline jule::Bool _2468a6c6a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_22b092295:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_24683dcbd_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_22b094473:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22b0926e6:;
			{
				return false;;
			}
		}
		_match_end_22b0940bb:;
	};
}



inline jule::Bool _2468a7034_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_22b094990:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22b0952ba:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_246983ac2_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_22b0964a8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_22b096442:;
						{
							return false;;
						}
					}
					_match_end_22b0963dc:;
				};
			}
		}
		else {
			_case_begin_22b095067:;
			{
				return false;;
			}
		}
		_match_end_22b095012:;
	};
}



inline jule::Bool _2468a72ed_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b095d15:;
			{
				return true;;
			}
		}
		else {
			_case_begin_22b09660c:;
			{
				return false;;
			}
		}
		_match_end_22b0959c4:;
	};
}



inline jule::U64 _2468c1b31_removeEqFromOp(jule::U64 _217919_op) {
	{
		auto &_match_expr{ _217919_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_22b096b07:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_22b097685:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_22b0976eb:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_22b09781c:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_22b097883:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_22b0978e9:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_22b097971:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_22b0979e8:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_22b097ab4:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_22b097b2a:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_22b097377:;
			{
				return _217919_op;;
			}
		}
		_match_end_22b097311:;
	};
}



inline jule::Ptr<_246922555_Var> _2468c61b8_findVarInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b25bc78:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_246922555_Var> _4813_v = _24697e10b_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_22b25bc78:;
			++it;
			goto _iter_begin_22b25bc78;
		}
		_iter_end_22b25bc78:;
	};
	return nullptr;;
}



inline jule::Ptr<_2469b35e6_TypeAlias> _2468c663b_findTypeAliasInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b25d164:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_2469b35e6_TypeAlias> _6013_ta = _24697e507_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_22b25d164:;
			++it;
			goto _iter_begin_22b25d164;
		}
		_iter_end_22b25d164:;
	};
	return nullptr;;
}



inline jule::Ptr<_246850e23_Struct> _2468c6a6a_findStructInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b25e550:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_246850e23_Struct> _7213_s = _24697e903_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_22b25e550:;
			++it;
			goto _iter_begin_22b25e550;
		}
		_iter_end_22b25e550:;
	};
	return nullptr;;
}



inline jule::Ptr<_246865d17_Fn> _2468c7021_findFnInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b26093b:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_246865d17_Fn> _8413_f = _24697ecee_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_22b26093b:;
			++it;
			goto _iter_begin_22b26093b;
		}
		_iter_end_22b26093b:;
	};
	return nullptr;;
}



inline jule::Ptr<_2468790e4_Trait> _2468c7362_findTraitInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b261035:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_2468790e4_Trait> _9613_t = _246980140_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_22b261035:;
			++it;
			goto _iter_begin_22b261035;
		}
		_iter_end_22b261035:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687b800_Enum> _2468c76d6_findEnumInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b262ce5:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_24687b800_Enum> _10813_e = _246980481_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_22b262ce5:;
			++it;
			goto _iter_begin_22b262ce5;
		}
		_iter_end_22b262ce5:;
	};
	return nullptr;;
}



inline jule::Ptr<_24687d00a_TypeEnum> _2468c7a5a_findTypeEnumInPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b263ee4:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_24687d00a_TypeEnum> _12013_e = _2469807c2_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_22b263ee4:;
			++it;
			goto _iter_begin_22b263ee4;
		}
		_iter_end_22b263ee4:;
	};
	return nullptr;;
}



inline jule::Any _2468c8099_defByIdentPackage(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b265435:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _246981790_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_22b265435:;
			++it;
			goto _iter_begin_22b265435;
		}
		_iter_end_22b265435:;
	};
	return nullptr;;
}



inline jule::Bool _2468ce0d3_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _24339b774_HasPrefix((*(_35518_f)), _2433bcd17_Join(jule::Slice<jule::Str>::make({_2435761e0_PathStdlib,_35526_p})));;
}



inline jule::Bool _2468ec794_isValidModelForRef(jule::Any* _1428_m) {
	{
		auto &_match_expr{ (*(_1428_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22b275e29:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22b275e90:;
			{
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _1913_model = (*(_1428_m)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				return _2468ec794_isValidModelForRef(&((*((*(_1913_model))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_22b276006:;
			{
				jule::Ptr<_24685c281_TraitSubIdentExprModel> _2213_model = (*(_1428_m)).cast_ptr<_24685c281_TraitSubIdentExprModel>(&__jule_any_type96);;
				return _2468ec794_isValidModelForRef(&((*(_2213_model))._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22b27607d:;
			{
				jule::Ptr<_24685847a_UnaryExprModel> _2513_unary = (*(_1428_m)).cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2513_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_2469b7067_Ptr((*((*(_2513_unary))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_2469b6cd1_Sptr((*((*(_2513_unary))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _2468ec794_isValidModelForRef(&((*((*(_2513_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22b27626a:;
			{
				jule::Ptr<_24685a911_IndexingExprModel> _3913_indexing = (*(_1428_m)).cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45);;
				return _2468ec794_isValidModelForRef(&((*((*(_3913_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_22b275db3:;
			{
				return false;;
			}
		}
		_match_end_22b275951:;
	};
}



inline _24345e617_Log _2468ecc8e_compilerErr(jule::Ptr<_246819d43_Token>* _4617_token, jule::Bool _4632_line, jule::Str _4644_fmt, jule::Slice<jule::Any> _4657_args) {
	_24345e617_Log _479_log = _24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4617_token))))._field_Row, ._field_Column=(*((*(_4617_token))))._field_Column, ._field_Path=(*((*((*(_4617_token))))._field_File))._field_Path, ._field_Text=_24345ea79_Logf(_4644_fmt, _4657_args), };;
	if (_4632_line) {
		_479_log._field_Line=_2468215db_GetRow((*((*(_4617_token))))._field_File.ptr(), (*((*(_4617_token))))._field_Row);
	};
	return _479_log;;
}



inline jule::Bool _2468ed113_impIsLookupable(jule::Ptr<_2468c8bd2_ImportInfo>* _6021_i, jule::Str* _6038_ident) {
	if ((*((*(_6021_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6021_i))))._field_ImportAll))) {
		if (((*((*(_6021_i))))._field_Selected.len() > 0LL)) {
			return _2468cb564_existIdent((*(_6021_i)).ptr(), (*(_6038_ident)));;
		};
	};
	return (*((*(_6021_i))))._field_ImportAll;;
}



inline void _2468ed443_appendRetVars(jule::Slice<jule::Ptr<_246922555_Var>>* _7223_dest, jule::Ptr<_246868c1b_FnIns>* _7242_f) {
	if ((_24686628a_IsVoid((*((*(_7242_f))))._field_Decl.ptr()) || ((*((*(_7242_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_2469b43d8_TypeKind>> _779_types = _246869e1a_Types((*(_7242_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_7242_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b281583:;
		if (it != expr_end) {
			jule::I64 _7810_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _7817_ident = *it;
			{
				if ((_24681c7a2_IsIgnoreIdent((*(_7817_ident))._field_Kind) || _24681ca6b_IsAnonIdent((*(_7817_ident))._field_Kind))) {
					goto _iter_next_22b281583;
				};
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*(_7223_dest)); __jule_push_dest.push(jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Scope=(*((*(_7242_f))))._field_Scope, ._field_Token=_7817_ident, ._field_Ident=(*(_7817_ident))._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=_779_types[_7810_i]}), ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()}), ._field_RetOrder=_7810_i, })); };
			}
			_iter_next_22b281583:;
			++it;
			_7810_i++;
			goto _iter_begin_22b281583;
		}
		_iter_end_22b281583:;
	};
	if ((((*((*((*((*(_7242_f))))._field_Decl))._field_Result))._field_Idents.len() == 1LL) && ((*(_7223_dest)).len() == 1LL))) {
		(*((*(_7223_dest))[((*(_7223_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _2468ed72e_appendParamVars(jule::Slice<jule::Ptr<_246922555_Var>>* _10225_dest, jule::Ptr<_246868c1b_FnIns>* _10244_f) {
	if (((*((*(_10244_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10244_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b285c4c:;
		if (it != expr_end) {
			jule::Ptr<_246867c70_ParamIns> _10717_p = *it;
			{
				if ((_24681c7a2_IsIgnoreIdent((*((*(_10717_p))._field_Decl))._field_Ident) || _24681ca6b_IsAnonIdent((*((*(_10717_p))._field_Decl))._field_Ident))) {
					goto _iter_next_22b285c4c;
				};
				jule::Ptr<_246922555_Var> _11213_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Scope=(*((*(_10244_f))))._field_Scope, ._field_Token=(*((*(_10717_p))._field_Decl))._field_Token, ._field_Ident=(*((*(_10717_p))._field_Decl))._field_Ident, ._field_Mutable=(*((*(_10717_p))._field_Decl))._field_Mutable, ._field_Used=true, ._field_Reference=(*((*(_10717_p))._field_Decl))._field_Reference, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(), ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()}), });;
				{
					
					if (_24686495e_IsSelf((*(_10717_p))._field_Decl.ptr())) {
						_case_begin_22b28a7bd:;
						{
							(*((*(_11213_v))._field_Kind))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_2469b3e32_Kind>((*((*(_10244_f))))._field_Owner, 0)});
							(*(_11213_v))._field_Reference=(!(_246864be5_IsRef((*(_10717_p))._field_Decl.ptr())));
							if (_246864be5_IsRef((*(_10717_p))._field_Decl.ptr())) {
								(*(_11213_v))._field_Ident=(*(_11213_v))._field_Ident.slice(1LL);
								(*((*((*(_11213_v))._field_Kind))._field_Kind))._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c0c85_Sptr>(_2469c0c85_Sptr{._field_Elem=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_BindIdent=(*((*((*(_11213_v))._field_Kind))._field_Kind))._field_BindIdent, ._field_Kind=(*((*((*(_11213_v))._field_Kind))._field_Kind))._field_Kind})}), 22);
							};
						}
					}
					else if ((*((*(_10717_p))._field_Decl))._field_Variadic) {
						_case_begin_22b28a290:;
						{
							(*((*(_11213_v))._field_Kind))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c1758_Slc>(_2469c1758_Slc{._field_Elem=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_BindIdent=(*((*(_10717_p))._field_Kind))._field_BindIdent, ._field_Kind=(*((*(_10717_p))._field_Kind))._field_Kind})}), 23)});
						}
					}
					else {
						_case_begin_22b289e3d:;
						{
							(*((*(_11213_v))._field_Kind))._field_Kind=(*(_10717_p))._field_Kind;
						}
					}
					_match_end_22b289d1c:;
				};
				{ jule::Slice<jule::Ptr<_246922555_Var>> &__jule_push_dest = (*(_10225_dest)); __jule_push_dest.push(_11213_v); };
			}
			_iter_next_22b285c4c:;
			++it;
			goto _iter_begin_22b285c4c;
		}
		_iter_end_22b285c4c:;
	};
}



inline void _2468eda1a_appendGenericTypeAliases(jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>>* _16234_dest, jule::Ptr<_246868c1b_FnIns>* _16259_f) {
	jule::I64 _1639_size = (*((*(_16259_f))))._field_Generics.len();;
	if (((*((*((*(_16259_f))))._field_Decl))._field_Owner != nullptr)) {
		_1639_size+=(*((*((*((*(_16259_f))))._field_Decl))._field_Owner))._field_Generics.len();
	};
	if ((_1639_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16259_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b293034:;
		if (it != expr_end) {
			jule::I64 _17210_i = it - expr->begin();
			jule::Ptr<_2469b2a02_InsGeneric> _17217_g = *it;
			{
				jule::Ptr<_24683c52a_GenericDecl> _17313_decl = (*((*((*(_16259_f))))._field_Decl))._field_Generics[_17210_i];;
				{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = (*(_16234_dest)); __jule_push_dest.push(jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Scope=(*((*((*(_16259_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_17313_decl))._field_Token, ._field_Ident=(*(_17313_decl))._field_Ident, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_17217_g))._field_Kind}), })); };
			}
			_iter_next_22b293034:;
			++it;
			_17210_i++;
			goto _iter_begin_22b293034;
		}
		_iter_end_22b293034:;
	};
	if (((*((*((*(_16259_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_246853ba1_StructIns> _18513_owner = (*((*(_16259_f))))._field_Owner;;
		{
			auto expr = &((*(_18513_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_22b294b4b:;
			if (it != expr_end) {
				jule::I64 _18614_i = it - expr->begin();
				jule::Ptr<_2469b2a02_InsGeneric> _18621_g = *it;
				{
					jule::Ptr<_24683c52a_GenericDecl> _18717_decl = (*((*(_18513_owner))._field_Decl))._field_Generics[_18614_i];;
					{ jule::Slice<jule::Ptr<_2469b35e6_TypeAlias>> &__jule_push_dest = (*(_16234_dest)); __jule_push_dest.push(jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Scope=(*((*((*(_16259_f))))._field_Decl))._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*(_18717_decl))._field_Token, ._field_Ident=(*(_18717_decl))._field_Ident, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_18621_g))._field_Kind}), })); };
				}
				_iter_next_22b294b4b:;
				++it;
				_18614_i++;
				goto _iter_begin_22b294b4b;
			}
			_iter_end_22b294b4b:;
		};
	};
}



inline jule::Ptr<_24697d726_SymbolTable> _2468edd8e_findFile(jule::Slice<jule::Ptr<_24697d726_SymbolTable>>* _20018_files, jule::Ptr<_24682060c_File>* _20042_handler) {
	{
		auto expr = _20018_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b297797:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _20117_fl = *it;
			{
				if (((*(_20117_fl))._field_File == (*(_20042_handler)))) {
					return _20117_fl;;
				};
			}
			_iter_next_22b297797:;
			++it;
			goto _iter_begin_22b297797;
		}
		_iter_end_22b297797:;
	};
	return nullptr;;
}



inline void _2468ee345_pushSuggestion(_24345e617_Log* _20930_log, jule::Str _20941_fmt, jule::Slice<jule::Any> _20954_args) {
	(*(_20930_log))._field_Suggestion=_24345ea79_Logf(_20941_fmt, _20954_args);
}



inline void _24692081c_pushImplemented(jule::Ptr<_2468790e4_Trait> _286724_t, jule::Ptr<_246850e23_Struct>* _286740_d) {
	_julec_label_22b29a657:;
	{
		
		if (((*(_286724_t))._field_Implemented.len() > 0LL)) {
			_case_begin_22b29ad72:;
			{
				{
					auto expr = &((*(_286724_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b29bb31:;
					if (it != expr_end) {
						jule::Ptr<_246850e23_Struct> _287116_s = *it;
						{
							if ((_287116_s == (*(_286740_d)))) {
								goto _match_end_22b29a877;
							};
						}
						_iter_next_22b29bb31:;
						++it;
						goto _iter_begin_22b29bb31;
					}
					_iter_end_22b29bb31:;
				};
				goto _case_begin_22b29a8dd;
			}
		}
		else {
			_case_begin_22b29a8dd:;
			{
				{ jule::Slice<jule::Ptr<_246850e23_Struct>> &__jule_push_dest = (*(_286724_t))._field_Implemented; __jule_push_dest.push((*(_286740_d))); };
			}
		}
		_match_end_22b29a877:;
	};
	{
		auto expr = &((*(_286724_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b29c57c:;
		if (it != expr_end) {
			jule::Ptr<_2469bb852_TypeSymbol> _288017_i = *it;
			{
				_24692081c_pushImplemented(_2469b8354_Trait((*(_288017_i))._field_Kind.ptr()), _286740_d);
			}
			_iter_next_22b29c57c:;
			++it;
			goto _iter_begin_22b29c57c;
		}
		_iter_end_22b29c57c:;
	};
}



inline void _246920b08_pushImplements(jule::Ptr<_246850e23_Struct>* _288524_s, jule::Ptr<_2468790e4_Trait> _288540_t) {
	_julec_label_22b29d616:;
	{
		
		if (((*((*(_288524_s))))._field_Implements.len() > 0LL)) {
			_case_begin_22b29dd31:;
			{
				{
					auto expr = &((*((*(_288524_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22b29eae0:;
					if (it != expr_end) {
						jule::Ptr<_2468790e4_Trait> _288916_b = *it;
						{
							if ((_288916_b == _288540_t)) {
								goto _match_end_22b29d836;
							};
						}
						_iter_next_22b29eae0:;
						++it;
						goto _iter_begin_22b29eae0;
					}
					_iter_end_22b29eae0:;
				};
				goto _case_begin_22b29d89c;
			}
		}
		else {
			_case_begin_22b29d89c:;
			{
				{ jule::Slice<jule::Ptr<_2468790e4_Trait>> &__jule_push_dest = (*((*(_288524_s))))._field_Implements; __jule_push_dest.push(_288540_t); };
			}
		}
		_match_end_22b29d836:;
	};
	{
		auto expr = &((*(_288540_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b2a053b:;
		if (it != expr_end) {
			jule::Ptr<_2469bb852_TypeSymbol> _289817_i = *it;
			{
				_246920b08_pushImplements(_288524_s, _2469b8354_Trait((*(_289817_i))._field_Kind.ptr()));
			}
			_iter_next_22b2a053b:;
			++it;
			goto _iter_begin_22b2a053b;
		}
		_iter_end_22b2a053b:;
	};
}



inline jule::Bool _246969327_traitHasReferenceReceiver(jule::Ptr<_2468790e4_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b52ca2c:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_22b52ca2c;
				};
				jule::Ptr<_246864343_Param> _359_p = (*((*(_2912_f))))._field_Params[0LL];;
				if ((_246864be5_IsRef(_359_p.ptr()) && _24686495e_IsSelf(_359_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_22b52ca2c:;
			++it;
			goto _iter_begin_22b52ca2c;
		}
		_iter_end_22b52ca2c:;
	};
	return false;;
}



inline jule::Bool _2469696ac_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_246983ac2_Data>* _4333_d) {
	jule::Str _445_value = _2445bb60d_FmtFloat(static_cast<jule::F64>(_2445e625e_AsF64((*((*(_4333_d))))._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _2445d6bbc_CheckBitFloat(_445_value, static_cast<jule::I64>(_2445d569e_BitsizeOf((*(_4321_kind)))));;
}



inline jule::Bool _246969a31_sigAssignable(jule::Str _4818_kind, jule::Ptr<_246983ac2_Data>* _4830_d) {
	jule::F64 _495_min = _2445dbdd1_Min(_4818_kind);;
	jule::F64 _505_max = _2445dc19a_Max(_4818_kind);;
	{
		
		if (_2445e80a7_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_22b534292:;
			{
				jule::F64 _539_x = _2445e59ab_ReadF64((*((*(_4830_d))))._field_Constant.ptr());;
				jule::F64 _549_i = 0;;
				jule::F64 _5412_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _244591a23_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_2445e7804_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_22b534319:;
			{
				jule::F64 _609_x = _2445e625e_AsF64((*((*(_4830_d))))._field_Constant.ptr());;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_2445e756d_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_22b534391:;
			{
				jule::F64 _659_x = _2445e625e_AsF64((*((*(_4830_d))))._field_Constant.ptr());;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_22b534160:;
	};
	return false;;
}



inline jule::Bool _246969de9_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_246983ac2_Data>* _7132_d) {
	jule::F64 _725_max = _2445dc19a_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _24694a759_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_2445e4e72_ReadI64((*((*(_7132_d))))._field_Constant.ptr()))));;
	};
	{
		
		if (_2445e80a7_IsF64((*((*(_7132_d))))._field_Constant.ptr())) {
			_case_begin_22b539709:;
			{
				jule::F64 _799_x = _2445e59ab_ReadF64((*((*(_7132_d))))._field_Constant.ptr());;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i = 0;;
				jule::F64 _8312_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _244591a23_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_2445e7804_IsU64((*((*(_7132_d))))._field_Constant.ptr())) {
			_case_begin_22b539770:;
			{
				jule::F64 _899_x = _2445e625e_AsF64((*((*(_7132_d))))._field_Constant.ptr());;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_2445e756d_IsI64((*((*(_7132_d))))._field_Constant.ptr())) {
			_case_begin_22b5397d6:;
			{
				jule::F64 _949_x = _2445e625e_AsF64((*((*(_7132_d))))._field_Constant.ptr());;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_22b538dbd:;
	};
	return false;;
}



inline jule::Bool _24696a26d_intAssignable(jule::Str _10018_kind, jule::Ptr<_246983ac2_Data>* _10030_d) {
	{
		
		if (_2445e23e2_IsSigInt(_10018_kind)) {
			_case_begin_22b53de4a:;
			{
				return _246969a31_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_2445e2700_IsUnsigInt(_10018_kind)) {
			_case_begin_22b53dec2:;
			{
				return _246969de9_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_22b53d8a6:;
			{
				return false;;
			}
		}
		_match_end_22b53d048:;
	};
}



inline void _24697692d_checkMutRiskOfStructLit(jule::Ptr<_246900148_Sema>* _94533_s, jule::Ptr<_246858d4e_StructLitExprModel>* _94544_m) {
	{
		auto expr = &((*((*(_94544_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b53e7a8:;
		if (it != expr_end) {
			jule::Ptr<_2468589a8_StructArgExprModel> *_94612_arg = it;
			{
				if ((*((*((*((*(_94612_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_22b53e7a8;
				};
				if (((!((*((*((*(_94612_arg))))._field_Expr))._field_Mutable)) && _2469b5c7a_Mutable((*((*((*(_94612_arg))))._field_Expr))._field_Kind.ptr()))) {
					_246902c83_pushErr((*(_94533_s)).ptr(), (*((*(_94612_arg))))._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*((*(_94612_arg))))._field_Expr))._field_Kind.ptr()), &__jule_any_type4)}));
				};
			}
			_iter_next_22b53e7a8:;
			++it;
			goto _iter_begin_22b53e7a8;
		}
		_iter_end_22b53e7a8:;
	};
}



inline jule::Ptr<_2469b43d8_TypeKind> _24697c4c2_lenKind(void) {
	return _246b25e40_primInt;;
}



inline jule::Bool _24697c824_isGoodValueToInfer(jule::Ptr<_246983ac2_Data>* _140924_d) {
	return (!(_246983e79_IsNil((*(_140924_d)).ptr())));;
}



inline jule::Ptr<_24682e73c_Directive> _2469ac436_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _420523_directives, jule::Str _420554_d) {
	{
		auto expr = _420523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b66d101:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _420617_dr = *it;
			{
				if (((*((*(_420617_dr))._field_Tag))._field_Kind == _420554_d)) {
					return _420617_dr;;
				};
			}
			_iter_next_22b66d101:;
			++it;
			goto _iter_begin_22b66d101;
		}
		_iter_end_22b66d101:;
	};
	return nullptr;;
}



inline jule::Any _2469ac7ee_findBuiltinsImport(jule::Str* _421424_ident, jule::Ptr<_2468c8bd2_ImportInfo> _421436_imp) {
	return _246b29691_findPackageBuiltinDef(&((*(_421436_imp))._field_LinkPath), _421424_ident);;
}



inline void _2469aca30_fitBitsize(jule::Ptr<_246983ac2_Data>* _422120_d) {
	jule::Ptr<_2469bc259_Prim> _42229_prim = _2469b6a4a_Prim((*((*(_422120_d))))._field_Kind.ptr());;
	jule::I64 _42235_z = _2445d569e_BitsizeOf(_2469bc59a_Str(_42229_prim.ptr()));;
	if ((_42235_z == 64LLU)) {
		return;;
	};
	jule::I64 _42289_k = 0LL;;
	{
		
		if (_2445e756d_IsI64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_22b6716a9:;
			{
				_42289_k=static_cast<jule::I64>(_2445d7250_BitsizeOfInt(static_cast<jule::I64>(_2445e4e72_ReadI64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_2445d59e0_IntFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_246b28360_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_2445e7804_IsU64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_22b671731:;
			{
				_42289_k=static_cast<jule::I64>(_2445d7519_BitsizeOfUint(static_cast<jule::U64>(_2445e5208_ReadU64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_2445d5ca9_UintFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_246b28360_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_2445e80a7_IsF64((*((*(_422120_d))))._field_Constant.ptr())) {
			_case_begin_22b6717a8:;
			{
				_42289_k=static_cast<jule::I64>(_2445d6e86_BitsizeOfFloat(static_cast<jule::F64>(_2445e59ab_ReadF64((*((*(_422120_d))))._field_Constant.ptr()))));
				if ((_42289_k > _42235_z)) {
					(*((*((*(_422120_d))))._field_Constant))._field_Kind=_2445d6073_FloatFromBits(_42289_k);
					(*((*(_422120_d))))._field_Kind=(*((*(_246b28360_findBuiltinTypeAlias((*((*((*(_422120_d))))._field_Constant))._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_22b6715dd:;
	};
}



inline void _2469acd60_makeStructLitAlloc(jule::Ptr<_246983ac2_Data>* _425128_d, jule::Ptr<_246858d4e_StructLitExprModel>* _425143_lit) {
	(*((*(_425128_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c0c85_Sptr>(_2469c0c85_Sptr{._field_Elem=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*((*(_425143_lit))))._field_Strct, 0)})}), 22)});
	(*((*(_425128_d))))._field_Model=jule::Any(jule::new_ptr<_24685914b_AllocStructLitExprModel>(_24685914b_AllocStructLitExprModel{._field_Lit=(*(_425143_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_246922555_Var> _2469ad1d4_buildErrorVar(jule::Ptr<_2468a7760_Scope>* _426223_s, jule::Ptr<_24683837d_FnCallExpr>* _426239_fc) {
	return jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Scope=(*(_426223_s)), ._field_Token=(*((*(_426239_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>()}), });;
}



inline jule::Any _2469ad558_findBuiltinsSema(jule::Str* _427722_ident, jule::Ptr<_246900148_Sema> _427738_s) {
	{
		auto expr = &((*((*(_427738_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b67b6e7:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _427817_imp = *it;
			{
				if (((*(_427817_imp))._field_ImportAll || _2468cb564_existIdent(_427817_imp.ptr(), (*(_427722_ident))))) {
					jule::Any _428017_def = _2469ac7ee_findBuiltinsImport(_427722_ident, _427817_imp);;
					if ((_428017_def != nullptr)) {
						return _428017_def;;
					};
				};
			}
			_iter_next_22b67b6e7:;
			++it;
			goto _iter_begin_22b67b6e7;
		}
		_iter_end_22b67b6e7:;
	};
	jule::Str _42889_ppath = _246820c7d_Dir((*((*(_427738_s))._field_file))._field_File.ptr());;
	if (_24339b774_HasPrefix(_42889_ppath, _2435761e0_PathStdlib)) {
		(_42889_ppath).mut_slice(_2435761e0_PathStdlib.len());;
		_42889_ppath=(jule::Str::lit("std", 3) + _2433a2659_Replace(_42889_ppath, jule::Str::lit("/", 1), jule::Str::lit("::", 2), -1LL));
		return _246b29691_findPackageBuiltinDef(&(_42889_ppath), _427722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _2469ad822_isOkForShifting(jule::Ptr<_246983ac2_Data>* _430225_d) {
	if (_246984496_IsConst((*(_430225_d)).ptr())) {
		{
			
			if (_2445e756d_IsI64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_22b67ecc2:;
				{
					return (_2445e4e72_ReadI64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_2445e7804_IsU64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_22b67ed49:;
				{
					return true;;
				}
			}
			else if (_2445e80a7_IsF64((*((*(_430225_d))))._field_Constant.ptr())) {
				_case_begin_22b67edc1:;
				{
					return (_2445e59ab_ReadF64((*((*(_430225_d))))._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_22b67ebe5:;
				{
					return false;;
				}
			}
			_match_end_22b67eb29:;
		};
	};
	jule::Ptr<_2469bc259_Prim> _43155_prim = _2469b6a4a_Prim((*((*(_430225_d))))._field_Kind.ptr());;
	return ((_43155_prim != nullptr) && _2445e29b9_IsInt(_2469bc59a_Str(_43155_prim.ptr())));;
}



inline jule::Bool _2469adbeb_isInstancedStruct(jule::Ptr<_246853ba1_StructIns> _431922_s) {
	return ((*((*(_431922_s))._field_Decl))._field_Generics.len() == (*(_431922_s))._field_Generics.len());;
}



inline jule::Bool _2469ae070_isPtrArithmeticCompatible(jule::Ptr<_246983ac2_Data>* _432335_l, jule::Ptr<_246983ac2_Data>* _432350_r) {
	jule::Ptr<_2469c454c_Ptr> _43245_ptr = _2469b7067_Ptr((*((*(_432350_r))))._field_Kind.ptr());;
	if ((_43245_ptr != nullptr)) {
		return _2469b4ae2_Equal((*(_2469b7067_Ptr((*((*(_432335_l))))._field_Kind.ptr())))._field_Elem, (*(_43245_ptr))._field_Elem);;
	};
	if (_246984496_IsConst((*(_432350_r)).ptr())) {
		return _24696a26d_intAssignable(jule::Str::lit("int", 3), _432350_r);;
	};
	_24696a757_typeCompatibilityChecker _43319_tcc = _24696a757_typeCompatibilityChecker{._field_dest=_246b25e40_primInt, ._field_src=(*((*(_432350_r))))._field_Kind, };;
	return _24696be1d_check(&_43319_tcc);;
}



inline void _2469ae35b_applyCastKindModel(jule::Ptr<_246983ac2_Data>* _433828_d, jule::Ptr<_2469b43d8_TypeKind>* _433843_t) {
	(*((*(_433828_d))))._field_Model=jule::Any(jule::new_ptr<_2468596ce_CastingExprModel>(_2468596ce_CastingExprModel{._field_Expr=(*((*(_433828_d))))._field_Model, ._field_Kind=(*(_433843_t)), ._field_ExprKind=(*((*(_433828_d))))._field_Kind}), &__jule_any_type92);
}



inline void _2469ae647_applyCastKind(jule::Ptr<_246983ac2_Data>* _434623_d, jule::Ptr<_2469b43d8_TypeKind>* _434638_t) {
	_2469ae35b_applyCastKindModel(_434623_d, _434638_t);
	(*((*(_434623_d))))._field_Kind=(*(_434638_t));
}



inline jule::Ptr<_246983ac2_Data> _2469ae856_buildVoidData(void) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b24b42_primVoid, });;
}



inline jule::Str _2469aeb20_checkDataForIntegerIndexing(jule::Ptr<_246983ac2_Data>* _435737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_435737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_2469b6a4a_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_22b688935:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_2445e29b9_IsInt(_2469bc59a_Str(_2469b6a4a_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_22b68899b:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_246984496_IsConst((*(_435737_d)).ptr())) {
			_case_begin_22b688a12:;
			{
				if ((_2445e625e_AsF64((*((*(_435737_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_2469b6a4a_Prim((*((*(_435737_d))))._field_Kind.ptr()) == nullptr) || _246984496_IsConst((*(_435737_d)).ptr()) || (_2445d53d5_RealKindOf(_2469bc59a_Str(_2469b6a4a_Prim((*((*(_435737_d))))._field_Kind.ptr()).ptr())) != _2445d53d5_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_22b688a89:;
			{
				_2469ae647_applyCastKind(_435737_d, &(_246b25e40_primInt));
			}
		}
		_match_end_22b6885d3:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _2469aee0b_applyCastModelByEnum(jule::Ptr<_246983ac2_Data>* _438230_d, jule::Ptr<_24687b800_Enum> _438244_e) {
	if ((_438244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _43865_p = _2469b6a4a_Prim((*((*(_438244_e))._field_Kind))._field_Kind.ptr());;
	if (_2469c06e1_IsStr(_43865_p.ptr())) {
		return;;
	};
	_2469ae35b_applyCastKindModel(_438230_d, &((*((*(_438244_e))._field_Kind))._field_Kind));
}



inline void _2469b01e7_castConstByType(jule::Str* _439321_t, jule::Ptr<_246983ac2_Data>* _439334_d) {
	{
		
		if (_2445e23e2_IsSigInt((*(_439321_t)))) {
			_case_begin_22b68e51d:;
			{
				{
					auto _match_expr{ _2445d569e_BitsizeOf(_2445d53d5_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_22b690178:;
						{
							_2445e6517_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(_2445e5c42_AsI64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_22b6901de:;
						{
							_2445e6517_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_2445e5c42_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_22b690255:;
						{
							_2445e6517_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_2445e5c42_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_22b6902bb:;
						{
							_2445e6517_SetI64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_2445e5c42_AsI64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_22b68ed37:;
				};
			}
		}
		else if (_2445e2700_IsUnsigInt((*(_439321_t)))) {
			_case_begin_22b68e595:;
			{
				{
					auto _match_expr{ _2445d569e_BitsizeOf(_2445d53d5_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_22b694248:;
						{
							_2445e67c0_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_22b6942ae:;
						{
							_2445e67c0_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_2445e5ec8_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_22b694325:;
						{
							_2445e67c0_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_2445e5ec8_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_22b69438b:;
						{
							_2445e67c0_SetU64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_2445e5ec8_AsU64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_22b68eac3:;
				};
			}
		}
		else if (_2445e2d0a_IsFloat((*(_439321_t)))) {
			_case_begin_22b68e61c:;
			{
				{
					auto _match_expr{ _2445d569e_BitsizeOf(_2445d53d5_RealKindOf((*(_439321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_22b6982b3:;
						{
							_2445e70d9_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(_2445e625e_AsF64((*((*(_439334_d))))._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_22b69833a:;
						{
							_2445e70d9_SetF64((*((*(_439334_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_2445e625e_AsF64((*((*(_439334_d))))._field_Constant.ptr())))));
						}
					}
					_match_end_22b694743:;
				};
			}
		}
		_match_end_22b68e3ec:;
	};
}



inline void _2469b068c_updateModelToGenericIns(jule::Any* _442733_m, jule::Ptr<_246868c1b_FnIns>* _442752_f) {
	{
		auto &_match_expr{ (*(_442733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_22b6972e5:;
			{
				(*(_442733_m))=jule::Any((*(_442752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22b698659:;
			{
				(*((*(_442733_m)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97)))._field_Method=(*(_442752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_22b6986c0:;
			{
				(*((*(_442733_m)).cast_ptr<_24685d0c8_StructStaticIdentExprModel>(&__jule_any_type95)))._field_Method=(*(_442752_f));
			}
		}
		_match_end_22b697290:;
	};
}



inline jule::Bool _2469b0a11_pushSubIdentFromExpr(jule::Any _443829_expr, jule::Ptr<_246830c27_SubIdentTypeDecl>* _443850_t) {
	{
		auto &_match_expr{ _443829_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22b69bb46:;
			{
				jule::Ptr<_24683607e_IdentExpr> _444113_e = _443829_expr.cast_ptr<_24683607e_IdentExpr>(&__jule_any_type79);;
				{ jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_444113_e))._field_Token, ._field_Ident=(*(_444113_e))._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_22b69bbac:;
			{
				jule::Ptr<_246837767_SubIdentExpr> _444713_e = _443829_expr.cast_ptr<_246837767_SubIdentExpr>(&__jule_any_type85);;
				if ((!(_2469b0a11_pushSubIdentFromExpr((*((*(_444713_e))._field_Expr))._field_Kind, _443850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_24683092a_IdentTypeDecl>> &__jule_push_dest = (*((*(_443850_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_24683092a_IdentTypeDecl>(_24683092a_IdentTypeDecl{._field_Token=(*(_444713_e))._field_Ident, ._field_Ident=(*((*(_444713_e))._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_22b69bad0:;
			{
				return false;;
			}
		}
		_match_end_22b69ac88:;
	};
	return true;;
}



inline jule::Str _2469b0cca_constoa(jule::Ptr<_2445e359c_Const>* _446113_c) {
	{
		
		if (_2445e756d_IsI64((*(_446113_c)).ptr())) {
			_case_begin_22b6a09c4:;
			{
				return _2445d3070_FmtInt(static_cast<jule::I64>(_2445e4e72_ReadI64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else if (_2445e7804_IsU64((*(_446113_c)).ptr())) {
			_case_begin_22b69c22e:;
			{
				return _2445d2ba7_FmtUint(static_cast<jule::U64>(_2445e5208_ReadU64((*(_446113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_22b69bd55:;
			{
				return jule::Str();;
			}
		}
		_match_end_22b6a094c:;
	};
}



inline jule::Ptr<_246983ac2_Data> _2469b114e_evalEnumStatic(jule::Ptr<_24687b800_Enum>* _447224_enm, jule::Ptr<_24687ac83_EnumItem>* _447241_item) {
	jule::Ptr<_246983ac2_Data> _44739_d = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>((*(_447224_enm)), 3)}), });;
	if (((*(_447241_item)) != nullptr)) {
		(*(_44739_d))._field_Constant=jule::new_ptr<_2445e359c_Const>((*((*((*((*((*(_447241_item))))._field_Value))._field_Data))._field_Constant)));
		(*(_44739_d))._field_Model=jule::Any((*(_44739_d))._field_Constant, &__jule_any_type19);
		_2469aee0b_applyCastModelByEnum(&(_44739_d), (*(_447224_enm)));
	};
	return _44739_d;;
}



inline jule::Ptr<_246858d4e_StructLitExprModel> _2469b1418_isLitBased(jule::Any* _448920_m) {
	{
		auto &_match_expr{ (*(_448920_m)) };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_22b6a4027:;
			{
				return (*(_448920_m)).cast_ptr<_246858d4e_StructLitExprModel>(&__jule_any_type94);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_22b6a408d:;
			{
				return (*((*(_448920_m)).cast_ptr<_24685914b_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22b6a4104:;
			{
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _449613_ssi = (*(_448920_m)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				return _2469b1418_isLitBased(&((*((*(_449613_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_22b6a416a:;
			{
				jule::Ptr<_2468596ce_CastingExprModel> _449913_c = (*(_448920_m)).cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92);;
				return _2469b1418_isLitBased(&((*(_449913_c))._field_Expr));;
			}
		}
		else {
			_case_begin_22b6a3d5c:;
			{
				return nullptr;;
			}
		}
		_match_end_22b6a283e:;
	};
}



inline void _2469b1704_makeImplicitDeref(jule::Ptr<_246983ac2_Data>* _450627_d, jule::Ptr<_246819d43_Token> _450641_baseToken) {
	jule::Ptr<_24685847a_UnaryExprModel> _45079_unary = jule::new_ptr<_24685847a_UnaryExprModel>(_24685847a_UnaryExprModel{._field_Expr=jule::new_ptr<_246983ac2_Data>((*((*(_450627_d))))), ._field_Op=jule::new_ptr<_246819d43_Token>((*(_450641_baseToken)))});;
	(*((*(_45079_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*((*(_45079_unary))._field_Op))._field_Kind=jule::Str::lit("*", 1);
	(*((*(_450627_d))))._field_Model=jule::Any(_45079_unary, &__jule_any_type110);
}



inline void _22b783b84_updateRefer(jule::Ptr<_24686bdd9_ReferenceStack> _451723_ref, jule::Ptr<_246868c1b_FnIns>* _451746_old, jule::Ptr<_246868c1b_FnIns>* _451759_new) {
	{
		auto expr = &((*(_451723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22b785306:;
		if (it != expr_end) {
			jule::I64 _45189_i = it - expr->begin();
			jule::Any _451812_sym = *it;
			{
				if ((__jule_any_type7_compare(_451812_sym, (*(_451746_old))))) {
					(*(_451723_ref))._field_buffer[_45189_i]=jule::Any((*(_451759_new)), &__jule_any_type7);
				};
			}
			_iter_next_22b785306:;
			++it;
			_45189_i++;
			goto _iter_begin_22b785306;
		}
		_iter_end_22b785306:;
	};
}



inline jule::Bool _2469cedd7_kindUsesGenerics(jule::Ptr<_2469b43d8_TypeKind>* _172026_k, jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>* _172041_generics) {
	{
		auto expr = _172041_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ba5c80e:;
		if (it != expr_end) {
			jule::Ptr<_24683c52a_GenericDecl> *_172112_g = it;
			{
				if (static__2469ce9a8_exist(&((*((*(_172112_g))))._field_Ident), _172026_k)) {
					return true;;
				};
			}
			_iter_next_22ba5c80e:;
			++it;
			goto _iter_begin_22ba5c80e;
		}
		_iter_end_22ba5c80e:;
	};
	return false;;
}



inline jule::Bool _2469d02a0_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _173022_directives, jule::Str _173053_tag) {
	{
		auto expr = _173022_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ba5cbd8:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _173117_dr = *it;
			{
				if (((*((*(_173117_dr))._field_Tag))._field_Kind == _173053_tag)) {
					return true;;
				};
			}
			_iter_next_22ba5cbd8:;
			++it;
			goto _iter_begin_22ba5cbd8;
		}
		_iter_end_22ba5cbd8:;
	};
	return false;;
}



inline jule::Bool _2469d0569_canGetPtr(jule::Ptr<_246983ac2_Data>* _173919_d) {
	{
		
		if ((!((*((*(_173919_d))))._field_Lvalue)) || _246984496_IsConst((*(_173919_d)).ptr())) {
			_case_begin_22ba5e899:;
			{
				return false;;
			}
		}
		else if ((_2469b7d37_Fn((*((*(_173919_d))))._field_Kind.ptr()) != nullptr) || (_2469b72ed_Enum((*((*(_173919_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22ba5e921:;
			{
				return false;;
			}
		}
		else {
			_case_begin_22ba5db95:;
			{
				return true;;
			}
		}
		_match_end_22ba5ddc6:;
	};
}



inline jule::Bool _2469d08aa_isValidForSptrType(jule::Ptr<_2469b43d8_TypeKind>* _175128_t) {
	jule::Ptr<_246853ba1_StructIns> _17529_s = _2469b80bd_Struct((*(_175128_t)).ptr());;
	if ((((_17529_s != nullptr) && ((*(_17529_s))._field_Decl != nullptr)) && (*((*(_17529_s))._field_Decl))._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _2469d0b74_isValidForRef(jule::Ptr<_2469b43d8_TypeKind>* _176023_t) {
	return (_2469b7d37_Fn((*(_176023_t)).ptr()) == nullptr);;
}



inline jule::Bool _2469d0e3d_isBuiltinStrConvertable(jule::Ptr<_2469b43d8_TypeKind>* _176333_t) {
	return ((((!(_2469b575d_Void((*(_176333_t)).ptr()))) && (_2469b7d37_Fn((*(_176333_t)).ptr()) == nullptr)) && (_2469b8871_Tup((*(_176333_t)).ptr()) == nullptr)) && (!(_2469b8b07_comptime((*(_176333_t)).ptr()))));;
}



inline jule::Str _2469d1207_buildLinkPathByTokens(jule::Slice<jule::Ptr<_246819d43_Token>>* _176727_tokens) {
	if ((((*(_176727_tokens)).len() == 1LL) && ((*((*(_176727_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17719_n = 0LL;;
	{
		auto expr = _176727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ba65460:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_177212_token = it;
			{
				_17719_n+=(*((*(_177212_token))))._field_Kind.len();
				_17719_n+=2LL;
			}
			_iter_next_22ba65460:;
			++it;
			goto _iter_begin_22ba65460;
		}
		_iter_end_22ba65460:;
	};
	_2433b0c50_StrBuilder _17769_s = static__2433b1019_New(_17719_n);;
	{
		auto expr = _176727_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22ba63309:;
		if (it != expr_end) {
			jule::I64 _17779_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> *_177712_token = it;
			{
				_2433b982a_WriteStr(&_17769_s, (*((*(_177712_token))))._field_Kind);
				if ((((*(_176727_tokens)).len() - _17779_i) > 1LL)) {
					_2433b982a_WriteStr(&_17769_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_22ba63309:;
			++it;
			_17779_i++;
			goto _iter_begin_22ba63309;
		}
		_iter_end_22ba63309:;
	};
	return _2433ba122_Str(&_17769_s);;
}



inline jule::Ptr<_2469bc259_Prim> _2469d159d_buildPrimType(jule::Str _178618_kind) {
	return jule::new_ptr<_2469bc259_Prim>(_2469bc259_Prim{._field_Kind=_178618_kind});;
}



inline void _2469d1b53_applyImplicitCast(jule::Ptr<_2469b43d8_TypeKind>* _181427_dest, jule::Ptr<_246983ac2_Data>* _181449_d) {
	if (_2469b54c7_IsNil((*((*(_181449_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_2469bc259_Prim> _18185_destPrim = _2469b6a4a_Prim((*(_181427_dest)).ptr());;
	jule::Ptr<_2469bc259_Prim> _18195_prim = _2469b6a4a_Prim((*((*(_181449_d))))._field_Kind.ptr());;
	if ((_18185_destPrim != nullptr)) {
		if (_2469c0977_IsAny(_18185_destPrim.ptr())) {
			if (((_18195_prim == nullptr) || (!(_2469c0977_IsAny(_18195_prim.ptr()))))) {
				_2469ae647_applyCastKind(_181449_d, _181427_dest);
			};
			return;;
		};
		if (((((((!(_2469b5241_Binded((*((*(_181449_d))))._field_Kind.ptr()))) && (!((*((*((*(_181449_d))))._field_Kind))._field_Variadic))) && (!((*((*(_181449_d))))._field_Lvalue))) && (!(_246984496_IsConst((*(_181449_d)).ptr())))) && (_18195_prim != nullptr)) && _2445e30c4_IsNum((*(_18195_prim))._field_Kind))) {
			_2469ae647_applyCastKind(_181449_d, _181427_dest);
		};
		return;;
	};
	jule::Ptr<_2468790e4_Trait> _18385_dt = _2469b8354_Trait((*(_181427_dest)).ptr());;
	if ((_18385_dt != nullptr)) {
		jule::Ptr<_2468790e4_Trait> _18409_bt = _2469b8354_Trait((*((*(_181449_d))))._field_Kind.ptr());;
		if (((_18409_bt == nullptr) || (_18409_bt != _18385_dt))) {
			_2469ae35b_applyCastKindModel(_181449_d, _181427_dest);
			return;;
		};
	};
	if (((_2469b7584_TypeEnum((*(_181427_dest)).ptr()) != nullptr) && (_2469b7584_TypeEnum((*((*(_181449_d))))._field_Kind.ptr()) == nullptr))) {
		_2469ae35b_applyCastKindModel(_181449_d, _181427_dest);
		return;;
	};
}



inline jule::Bool _2469d1e1c_validTypeForXof(jule::Ptr<_2469b43d8_TypeKind>* _185325_t) {
	return ((!(_2469b575d_Void((*(_185325_t)).ptr()))) && (_2469b7d37_Fn((*(_185325_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log _2469d4ea8_buildSymbols(jule::Ptr<_24682d472_Ast>* _1622_ast, jule::Trait<_2468c5cbc_Importer>* _1638_importer, jule::Ptr<_246872ebc_symbolBuilder> _1662_owner) {
	__jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log __jule_func_result;
	jule::Ptr<_246872ebc_symbolBuilder> _179_sb = jule::new_ptr<_246872ebc_symbolBuilder>(_246872ebc_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_2468784ab_build(_179_sb);
	if (((*(_179_sb))._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_179_sb))._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*(_179_sb))._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log _2469d542b_analyzePackage(jule::Slice<jule::Ptr<_24682d472_Ast>>* _3024_files, jule::Trait<_2468c5cbc_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log __jule_func_result;
	jule::Slice<jule::Ptr<_24697d726_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_24697d726_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bb7e07e:;
		if (it != expr_end) {
			jule::Ptr<_24682d472_Ast> _3317_f = *it;
			{
				jule::Ptr<_24697d726_SymbolTable> _3413_table;;
				jule::Slice<_24345e617_Log> _3424_errors;;
				({
					__jule_tuple_x_24697d726_SymbolTable__jule_tuple_s_24345e617_Log __jule_assign_result = _2469d4ea8_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_24697d726_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_22bb7e07e:;
			++it;
			goto _iter_begin_22bb7e07e;
		}
		_iter_end_22bb7e07e:;
	};
	jule::Ptr<_246900148_Sema> _419_sema = jule::new_ptr<_246900148_Sema>(_246900148_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_2468ee521_commonSemaMeta>()});;
	_24691da5c_check(_419_sema, &(_329_tables));
	if (((*(_419_sema))._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*(_419_sema))._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_2468cbb08_Package> _509_pkg = jule::new_ptr<_2468cbb08_Package>(_2468cbb08_Package{._field_Files=(*(_419_sema))._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log _2469d585a_AnalyzePackage(jule::Slice<jule::Ptr<_24682d472_Ast>> _7423_files, jule::Trait<_2468c5cbc_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_2468cbb08_Package> _789_package;;
	jule::Slice<_24345e617_Log> _7822_logs;;
	({
		__jule_tuple_x_2468cbb08_Package__jule_tuple_s_24345e617_Log __jule_assign_result = _2469d542b_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_789_package = __jule_assign_result.__jule_result_arg0;
		_7822_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _789_package;
	__jule_func_result.__jule_result_arg1 = _7822_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_246868c1b_FnIns> _246b24218_findBuiltinFunc(jule::Str* _2521_ident) {
	{
		auto &_match_expr{ (*(_2521_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_22bb87c03:;
			{
				static jule::Ptr<_246868c1b_FnIns> _2820_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2a373_builtinCallerOut), });;
				return _2820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_22bb87dac:;
			{
				static jule::Ptr<_246868c1b_FnIns> _3120_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2a7a2_builtinCallerOutln), });;
				return _3120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_22bb87e34:;
			{
				static jule::Ptr<_246868c1b_FnIns> _3420_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2abd1_builtinCallerNew), });;
				return _3420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_22bb87eab:;
			{
				static jule::Ptr<_246868c1b_FnIns> _3720_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2b2b9_builtinCallerPanic), });;
				return _3720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_22bb88033:;
			{
				static jule::Ptr<_246868c1b_FnIns> _4020_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2b6e8_builtinCallerMake), });;
				return _4020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_22bb88286:;
			{
				static jule::Ptr<_246868c1b_FnIns> _4320_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2bb27_builtinCallerAppend), });;
				return _4320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_22bb8830d:;
			{
				static jule::Ptr<_246868c1b_FnIns> _4620_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2c540_builtinCallerCopy), });;
				return _4620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_22bb88385:;
			{
				static jule::Ptr<_246868c1b_FnIns> _4920_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2dbd4_builtinCallerLen), });;
				return _4920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_22bb8840c:;
			{
				static jule::Ptr<_246868c1b_FnIns> _5220_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2e487_builtinCallerCap), });;
				return _5220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_22bb884d9:;
			{
				static jule::Ptr<_246868c1b_FnIns> _5520_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b2eda0_builtinCallerDelete), });;
				return _5520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_22bb88561:;
			{
				static jule::Ptr<_246868c1b_FnIns> _5820_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b302ce_builtinCallerAssert), });;
				return _5820_f;;
			}
		}
		else {
			_case_begin_22bb87d35:;
			{
				return nullptr;;
			}
		}
		_match_end_22bb84c22:;
	};
}



inline jule::Ptr<_2469b35e6_TypeAlias> _246b24526_primTypeAlias(jule::Ptr<_2469b43d8_TypeKind>* _6523_k) {
	return jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=(*(_6523_k))}), });;
}



inline jule::Ptr<_246922555_Var> _246b2812e_findBuiltinVar(jule::Str* _9320_ident) {
	{
		auto &_match_expr{ (*(_9320_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_22bb909a8:;
			{
				static jule::Ptr<_246922555_Var> _9620_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(_2469bb852_TypeSymbol{._field_Kind=_246b24834_primNil}), ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Constant=static__2445e4812_NewNil()})}), });;
				return _9620_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_22bb90a1e:;
			{
				static jule::Ptr<_246922555_Var> _11120_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Constant=static__2445e4070_NewBool(true)})}), });;
				return _11120_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_22bb90a85:;
			{
				static jule::Ptr<_246922555_Var> _12420_v = jule::new_ptr<_246922555_Var>(_246922555_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_246b28360_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_246984c16_Value>(_246984c16_Value{._field_Data=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Constant=static__2445e4070_NewBool(false)})}), });;
				return _12420_v;;
			}
		}
		else {
			_case_begin_22bb90942:;
			{
				return nullptr;;
			}
		}
		_match_end_22bb8e996:;
	};
}



inline jule::Ptr<_2469b35e6_TypeAlias> _246b28360_findBuiltinTypeAlias(jule::Str _14125_ident) {
	{
		auto &_match_expr{ _14125_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_22bb94072:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _14420_t = _246b24526_primTypeAlias(&(_246b24e0b_primAny));;
				return _14420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_22bb958d1:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _14720_t = _246b24526_primTypeAlias(&(_246b25219_primStr));;
				return _14720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_22bb95b78:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _15020_t = _246b24526_primTypeAlias(&(_246b254d3_primBool));;
				return _15020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_22bb95bde:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _15320_t = _246b24526_primTypeAlias(&(_246b2579c_primUintptr));;
				return _15320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_22bb95c55:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _15620_t = _246b24526_primTypeAlias(&(_246b25a66_primUint));;
				return _15620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_22bb95cbb:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _15920_t = _246b24526_primTypeAlias(&(_246b25e40_primInt));;
				return _15920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_22bb95dba:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _16220_t = _246b24526_primTypeAlias(&(_246b26209_primI8));;
				return _16220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_22bb95e31:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _16520_t = _246b24526_primTypeAlias(&(_246b264c3_primI16));;
				return _16520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_22bb95e97:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _16820_t = _246b24526_primTypeAlias(&(_246b26a56_primI64));;
				return _16820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_22bb9600d:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _17120_t = _246b24526_primTypeAlias(&(_246b270d9_primU16));;
				return _17120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_22bb96085:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _17420_t = _246b24526_primTypeAlias(&(_246b273a3_primU32));;
				return _17420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_22bb9610c:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _17720_t = _246b24526_primTypeAlias(&(_246b27826_primU64));;
				return _17720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_22bb96184:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _18020_t = _246b24526_primTypeAlias(&(_246b27ae0_primF32));;
				return _18020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_22bb9620b:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _18320_t = _246b24526_primTypeAlias(&(_246b27da9_primF64));;
				return _18320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_22bb96283:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _18620_t = _246b24526_primTypeAlias(&(_246b26d20_primU8));;
				return _18620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_22bb9630a:;
			{
				static jule::Ptr<_2469b35e6_TypeAlias> _18920_t = _246b24526_primTypeAlias(&(_246b2678c_primI32));;
				return _18920_t;;
			}
		}
		else {
			_case_begin_22bb95738:;
			{
				return nullptr;;
			}
		}
		_match_end_22bb941a4:;
	};
}



inline jule::Any _246b28629_findBuiltinDef(jule::Str* _19620_ident) {
	jule::Ptr<_246922555_Var> _1979_v = _246b2812e_findBuiltinVar(_19620_ident);;
	if ((_1979_v != nullptr)) {
		return jule::Any(_1979_v, &__jule_any_type8);;
	};
	jule::Ptr<_246868c1b_FnIns> _2019_f = _246b24218_findBuiltinFunc(_19620_ident);;
	if ((_2019_f != nullptr)) {
		return jule::Any(_2019_f, &__jule_any_type7);;
	};
	jule::Ptr<_2469b35e6_TypeAlias> _2059_ta = _246b28360_findBuiltinTypeAlias((*(_19620_ident)));;
	if ((_2059_ta != nullptr)) {
		return jule::Any(_2059_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _246b288e3_findBuiltinDefStdDebug(jule::Str* _21228_ident) {
	{
		auto &_match_expr{ (*(_21228_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_22bba0710:;
			{
				static jule::Ptr<_246868c1b_FnIns> _21520_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b3458b_builtinCallerStdDebugOut), });;
				return jule::Any(_21520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_22bba0776:;
			{
				static jule::Ptr<_246868c1b_FnIns> _21820_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b349ba_builtinCallerStdDebugOutln), });;
				return jule::Any(_21820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_22bba00e4:;
			{
				return nullptr;;
			}
		}
		_match_end_22bb9e19d:;
	};
}



inline jule::Any _246b28bac_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_22bba2118:;
			{
				static jule::Ptr<_246868c1b_FnIns> _22820_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b32e91_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_22bba217e:;
			{
				static jule::Ptr<_246868c1b_FnIns> _23120_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b333c0_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_22bba21e5:;
			{
				static jule::Ptr<_246868c1b_FnIns> _23420_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b337ee_builtinCallerStdMemFree), });;
				return jule::Any(_23420_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_22bba20a2:;
			{
				return nullptr;;
			}
		}
		_match_end_22bba16de:;
	};
}



inline jule::Any _246b29053_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_22bba2899:;
			{
				static jule::Ptr<_246868c1b_FnIns> _24420_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b308a6_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_22bba45d2:;
			{
				static jule::Ptr<_246868c1b_FnIns> _24720_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b30c6e_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Match", 5)) {
			_case_begin_22bba4648:;
			{
				static jule::Ptr<_246868c1b_FnIns> _25020_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b3119d_builtinCallerStdComptimeMatch), });;
				return jule::Any(_25020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Range", 5)) {
			_case_begin_22bba4967:;
			{
				static jule::Ptr<_246868c1b_FnIns> _25320_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b31896_builtinCallerStdComptimeRange), });;
				return jule::Any(_25320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_22bba49cd:;
			{
				static jule::Ptr<_246868c1b_FnIns> _25620_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b31cc5_builtinCallerStdComptimeLine), });;
				return jule::Any(_25620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_22bba4a44:;
			{
				static jule::Ptr<_246868c1b_FnIns> _25920_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b32204_builtinCallerStdComptimeFile), });;
				return jule::Any(_25920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_22bba4aaa:;
			{
				static jule::Ptr<_246868c1b_FnIns> _26220_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b32633_builtinCallerStdComptimeFiles), });;
				return jule::Any(_26220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_22bba4bba:;
			{
				static jule::Ptr<_246868c1b_FnIns> _26520_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b32a62_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_22bba44c2:;
			{
				return nullptr;;
			}
		}
		_match_end_22bba3b0e:;
	};
}



inline jule::Any _246b2931c_findBuiltinDefStdJuleIntegrated(jule::Str* _27237_ident) {
	{
		auto &_match_expr{ (*(_27237_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_22bba9cad:;
			{
				static jule::Ptr<_246868c1b_FnIns> _27520_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b33c2d_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_22bba9d24:;
			{
				static jule::Ptr<_246868c1b_FnIns> _27820_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_Decl=jule::new_ptr<_246865d17_Fn>(_246865d17_Fn{._field_Generics=jule::Slice<jule::Ptr<_24683c52a_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b3415c_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27820_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_22bba9c47:;
			{
				return nullptr;;
			}
		}
		_match_end_22bba9384:;
	};
}



inline jule::Any _246b29691_findPackageBuiltinDef(jule::Str* _29027_linkPath, jule::Str* _29043_ident) {
	{
		auto &_match_expr{ (*(_29027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_22bbac0ce:;
			{
				return _246b29053_findBuiltinDefStdComptime(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_22bbac145:;
			{
				return _246b288e3_findBuiltinDefStdDebug(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_22bbac1ab:;
			{
				return _246b28bac_findBuiltinDefStdMem(_29043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_22bbac222:;
			{
				return _246b2931c_findBuiltinDefStdJuleIntegrated(_29043_ident);;
			}
		}
		else {
			_case_begin_22bbabe14:;
			{
				return nullptr;;
			}
		}
		_match_end_22bbabdae:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b29ac0_builtinCallerCommonPlain(jule::Ptr<_2469857b6_Eval>* _30534_e, jule::Ptr<_24683837d_FnCallExpr>* _30549_fc, jule::Ptr<_246983ac2_Data>* _30571_d) {
	jule::Ptr<_246868c1b_FnIns> _3069_f = _2469b7d37_Fn((*((*(_30571_d))))._field_Kind.ptr());;
	_246973ed0_fnCallArgChecker _3089_fcac = _246973ed0_fnCallArgChecker{._field_e=(*(_30534_e)), ._field_args=(*((*(_30549_fc))))._field_Args, ._field_errorToken=(*((*(_30549_fc))))._field_Token, ._field_f=_3069_f, ._field_dynamicAnnotation=false, };;
	if ((!(_246976587_check(&_3089_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_24685a081_FnCallExprModel> _3199_model = jule::new_ptr<_24685a081_FnCallExprModel>(_24685a081_FnCallExprModel{._field_Token=(*((*(_30549_fc))))._field_Token, ._field_Func=_3069_f, ._field_Expr=(*((*(_30571_d))))._field_Model, ._field_Args=_3089_fcac._field_argModels, });;
	if (((*(_3069_f))._field_Result == nullptr)) {
		(*(_30571_d))=_2469ae856_buildVoidData();
	} else {
		(*(_30571_d))=jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=(*(_3069_f))._field_Result, });
	};
	(*((*(_30571_d))))._field_Model=jule::Any(_3199_model, &__jule_any_type34);
	return (*(_30571_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b29e44_builtinCallerError(jule::Ptr<_2469857b6_Eval>* _33828_e, jule::Ptr<_24683837d_FnCallExpr>* _33843_fc) {
	if (((*((*(_33843_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_33828_e)).ptr(), (*((*(_33843_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_33843_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_33828_e)).ptr(), (*((*((*(_33843_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _3469_expr = _2469a3a26_evalExpr((*(_33828_e)), (*((*(_33843_fc))))._field_Args[0LL]);;
	if ((_3469_expr == nullptr)) {
		return nullptr;;
	};
	if (_246983e79_IsNil(_3469_expr.ptr())) {
		_246985d16_pushErr((*(_33828_e)).ptr(), (*((*((*(_33843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246983ac2_Data> _3559_d = _2469ae856_buildVoidData();;
	(*(_3559_d))._field_Model=jule::Any(jule::new_ptr<_2468618b2_BuiltinErrorCallExprModel>(_2468618b2_BuiltinErrorCallExprModel{._field_Err=_3469_expr}), &__jule_any_type23);
	return _3559_d;;
}



inline jule::Ptr<_246983ac2_Data> _246b2a373_builtinCallerOut(jule::Ptr<_2469857b6_Eval>* _36026_e, jule::Ptr<_24683837d_FnCallExpr>* _36041_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_36041_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_36026_e)).ptr(), (*((*(_36041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_36041_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_36026_e)).ptr(), (*((*((*(_36041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _3699_expr = _2469a3a26_evalExpr((*(_36026_e)), (*((*(_36041_fc))))._field_Args[0LL]);;
	if ((_3699_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_2469d0e3d_isBuiltinStrConvertable(&((*(_3699_expr))._field_Kind))))) {
		_246985d16_pushErr((*(_36026_e)).ptr(), (*((*((*(_36041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _3799_d = _2469ae856_buildVoidData();;
	(*(_3799_d))._field_Model=jule::Any(jule::new_ptr<_24685db78_BuiltinOutCallExprModel>(_24685db78_BuiltinOutCallExprModel{._field_Expr=(*(_3699_expr))._field_Model, }), &__jule_any_type27);
	return _3799_d;;
}



inline jule::Ptr<_246983ac2_Data> _246b2a7a2_builtinCallerOutln(jule::Ptr<_2469857b6_Eval>* _38428_e, jule::Ptr<_24683837d_FnCallExpr>* _38443_fc, jule::Ptr<_246983ac2_Data>* _38465_d) {
	(*(_38465_d))=_246b2a373_builtinCallerOut(_38428_e, _38443_fc, _38465_d);
	if (((*(_38465_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_38465_d))))._field_Model=jule::Any(jule::new_ptr<_24685e052_BuiltinOutlnCallExprModel>(_24685e052_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_38465_d))))._field_Model.cast_ptr<_24685db78_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Expr, }), &__jule_any_type28);
	return (*(_38465_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2abd1_builtinCallerNew(jule::Ptr<_2469857b6_Eval>* _39626_e, jule::Ptr<_24683837d_FnCallExpr>* _39641_fc, jule::Ptr<_246983ac2_Data>* _39663_d) {
	if (((*((*(_39641_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_39626_e)).ptr(), (*((*(_39641_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_39641_fc))))._field_Args.len() > 2LL)) {
		_246985d16_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _4059_t = _2469a2c12_evalExprKind((*(_39626_e)), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4059_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4059_t))._field_Decl))) {
		_246985d16_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_2469d08aa_isValidForSptrType(&((*(_4059_t))._field_Kind))))) {
		jule::Ptr<_246853ba1_StructIns> _41613_s = _2469b80bd_Struct((*(_4059_t))._field_Kind.ptr());;
		if ((((_41613_s != nullptr) && ((*(_41613_s))._field_Decl != nullptr)) && (*((*(_41613_s))._field_Decl))._field_Binded)) {
			_246985d16_pushErr((*(_39626_e)).ptr(), (*((*((*(_39641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_39663_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_2469c0c85_Sptr>(_2469c0c85_Sptr{._field_Elem=(*(_4059_t))._field_Kind}), 22)});
	if (((*((*(_39641_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_2469b43d8_TypeKind> _43013_old = (*((*(_39626_e))))._field_prefix;;
		(*((*(_39626_e))))._field_prefix=(*(_4059_t))._field_Kind;
		jule::Ptr<_246983ac2_Data> _43313_init = _2469a3a26_evalExpr((*(_39626_e)), (*((*(_39641_fc))))._field_Args[1LL]);;
		(*((*(_39626_e))))._field_prefix=_43013_old;
		if ((_43313_init != nullptr)) {
			jule::Ptr<_246819d43_Token> _43817_token = (*((*((*(_39641_fc))))._field_Args[1LL]))._field_Token;;
			;
			_24690dca0_checkValidityForInitExpr((*((*(_39626_e))))._field_s, (!((*((*(_39626_e))))._field_immutable)), false, &((*(_4059_t))._field_Kind), &(_43313_init), &(_43817_token));
			_24690a791_checkAssignType((*((*(_39626_e))))._field_s, false, &((*(_4059_t))._field_Kind), &(_43313_init), _43817_token);
			(*((*(_39663_d))))._field_Model=jule::Any(jule::new_ptr<_24685e42b_BuiltinNewCallExprModel>(_24685e42b_BuiltinNewCallExprModel{._field_Kind=(*(_4059_t))._field_Kind, ._field_Init=(*(_43313_init))._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_39663_d))))._field_Model=jule::Any(jule::new_ptr<_24685e42b_BuiltinNewCallExprModel>(_24685e42b_BuiltinNewCallExprModel{._field_Kind=(*(_4059_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_39663_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2b2b9_builtinCallerPanic(jule::Ptr<_2469857b6_Eval>* _45828_e, jule::Ptr<_24683837d_FnCallExpr>* _45843_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_45843_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_45828_e)).ptr(), (*((*(_45843_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_45843_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_45828_e)).ptr(), (*((*((*(_45843_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _4679_expr = _2469a3a26_evalExpr((*(_45828_e)), (*((*(_45843_fc))))._field_Args[0LL]);;
	if ((_4679_expr == nullptr)) {
		return nullptr;;
	};
	if (((_2469b6a4a_Prim((*(_4679_expr))._field_Kind.ptr()) == nullptr) || (!(_2469c06e1_IsStr(_2469b6a4a_Prim((*(_4679_expr))._field_Kind.ptr()).ptr()))))) {
		_246985d16_pushErr((*(_45828_e)).ptr(), (*((*(_45843_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246983ac2_Data> _4769_d = _2469ae856_buildVoidData();;
	(*(_4769_d))._field_Model=jule::Any(jule::new_ptr<_24685e805_BuiltinPanicCallExprModel>(_24685e805_BuiltinPanicCallExprModel{._field_Token=(*((*(_45843_fc))))._field_Token, ._field_Expr=(*(_4679_expr))._field_Model}), &__jule_any_type29);
	return _4769_d;;
}



inline jule::Ptr<_246983ac2_Data> _246b2b6e8_builtinCallerMake(jule::Ptr<_2469857b6_Eval>* _48427_e, jule::Ptr<_24683837d_FnCallExpr>* _48442_fc, jule::Ptr<_246983ac2_Data>* _48464_d) {
	if (((*((*(_48442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48442_fc))))._field_Args.len() == 1LL)) {
			_246985d16_pushErr((*(_48427_e)).ptr(), (*((*(_48442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_246985d16_pushErr((*(_48427_e)).ptr(), (*((*(_48442_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_48442_fc))))._field_Args.len() > 3LL)) {
		_246985d16_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _4979_t = _2469a2c12_evalExprKind((*(_48427_e)), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4979_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4979_t))._field_Decl))) {
		_246985d16_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_2469b7aa1_Slc((*(_4979_t))._field_Kind.ptr()) == nullptr)) {
		_246985d16_pushErr((*(_48427_e)).ptr(), (*((*((*(_48442_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_4979_t))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_48464_d))))._field_Kind=(*(_4979_t))._field_Kind;
	jule::Ptr<_246983ac2_Data> _5129_lenExpr = _2469a3a26_evalExpr(_246909dde_evalp((*((*(_48427_e))))._field_s, (*((*(_48427_e))))._field_lookup, (*(_4979_t))._field_Kind), (*((*(_48442_fc))))._field_Args[1LL]);;
	if ((_5129_lenExpr == nullptr)) {
		return nullptr;;
	};
	_24698ea01_checkIntegerIndexingByData((*(_48427_e)).ptr(), &(_5129_lenExpr), (*((*((*(_48442_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_246860262_BuiltinMakeCallExprModel> _5199_model = jule::new_ptr<_246860262_BuiltinMakeCallExprModel>(_246860262_BuiltinMakeCallExprModel{._field_Kind=(*(_4979_t))._field_Kind, ._field_Len=(*(_5129_lenExpr))._field_Model, });;
	(*((*(_48464_d))))._field_Model=jule::Any(_5199_model, &__jule_any_type114);
	if (((*((*(_48442_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_246983ac2_Data> _52513_capExpr = _2469a3a26_evalExpr(_246909dde_evalp((*((*(_48427_e))))._field_s, (*((*(_48427_e))))._field_lookup, (*(_4979_t))._field_Kind), (*((*(_48442_fc))))._field_Args[2LL]);;
		if ((_52513_capExpr == nullptr)) {
			return (*(_48464_d));;
		};
		_24698ea01_checkIntegerIndexingByData((*(_48427_e)).ptr(), &(_52513_capExpr), (*((*((*(_48442_fc))))._field_Args[2LL]))._field_Token);
		(*(_5199_model))._field_Cap=(*(_52513_capExpr))._field_Model;
	};
	return (*(_48464_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2bb27_builtinCallerAppend(jule::Ptr<_2469857b6_Eval>* _53529_e, jule::Ptr<_24683837d_FnCallExpr>* _53544_fc, jule::Ptr<_246983ac2_Data>* _53566_d) {
	if (((*((*(_53544_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_53544_fc))))._field_Args.len() == 1LL)) {
			_246985d16_pushErr((*(_53529_e)).ptr(), (*((*(_53544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_246985d16_pushErr((*(_53529_e)).ptr(), (*((*(_53544_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _5459_t = _2469a3a26_evalExpr((*(_53529_e)), (*((*(_53544_fc))))._field_Args[0LL]);;
	if ((_5459_t == nullptr)) {
		return nullptr;;
	};
	if ((_2469b7aa1_Slc((*(_5459_t))._field_Kind.ptr()) == nullptr)) {
		_246985d16_pushErr((*(_53529_e)).ptr(), (*((*((*(_53544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _5559_f = jule::new_ptr<_246868c1b_FnIns>(_246868c1b_FnIns{._field_Params=jule::Slice<jule::Ptr<_246867c70_ParamIns>>::make({jule::new_ptr<_246867c70_ParamIns>(_246867c70_ParamIns{._field_Decl=jule::new_ptr<_246864343_Param>(_246864343_Param{._field_Mutable=true, }), ._field_Kind=(*(_5459_t))._field_Kind}),jule::new_ptr<_246867c70_ParamIns>(_246867c70_ParamIns{._field_Decl=jule::new_ptr<_246864343_Param>(_246864343_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=(*(_2469b7aa1_Slc((*(_5459_t))._field_Kind.ptr())))._field_Elem})}), ._field_Result=(*(_5459_t))._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_246983ac2_Data>(jule::Ptr<_2469857b6_Eval>*,jule::Ptr<_24683837d_FnCallExpr>*,jule::Ptr<_246983ac2_Data>*)>(_246b29ac0_builtinCallerCommonPlain), });;
	(*((*(_53566_d))))._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(_5559_f, 1)});
	(*(_53566_d))=_246b29ac0_builtinCallerCommonPlain(_53529_e, _53544_fc, _53566_d);
	if (((*(_53566_d)) != nullptr)) {
		jule::Ptr<_24685a081_FnCallExprModel> _57913_model = (*((*(_53566_d))))._field_Model.cast_ptr<_24685a081_FnCallExprModel>(&__jule_any_type34);;
		(*((*(_53566_d))))._field_Model=jule::Any(jule::new_ptr<_24686063b_BuiltinAppendCallExprModel>(_24686063b_BuiltinAppendCallExprModel{._field_Dest=(*(_57913_model))._field_Args[0LL], ._field_Elements=(*(_57913_model))._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53566_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2c111_callerCopySlice(jule::Ptr<_246983ac2_Data>* _58825_dest, jule::Ptr<_2469857b6_Eval>* _58843_e, jule::Ptr<_24683837d_FnCallExpr>* _58858_fc, jule::Ptr<_246983ac2_Data>* _58880_d) {
	if ((!((*((*(_58825_dest))))._field_Mutable))) {
		_246985d16_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246983ac2_Data> _5939_src = _2469a3a26_evalExpr((*(_58843_e)), (*((*(_58858_fc))))._field_Args[1LL]);;
	if ((_5939_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_2469c1758_Slc> _5979_slc = _2469b7aa1_Slc((*(_5939_src))._field_Kind.ptr());;
	if ((_5979_slc != nullptr)) {
		if (((!((*(_5939_src))._field_Mutable)) && _2469b5c7a_Mutable((*(_5979_slc))._field_Elem.ptr()))) {
			_246985d16_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_2469b4ae2_Equal((*((*(_58825_dest))))._field_Kind, (*(_5939_src))._field_Kind)))) {
			_246985d16_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_58825_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_5939_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_2469bc259_Prim> _6079_destPrim = _2469b6a4a_Prim((*(_2469b7aa1_Slc((*((*(_58825_dest))))._field_Kind.ptr())))._field_Elem.ptr());;
		jule::Ptr<_2469bc259_Prim> _6089_prim = _2469b6a4a_Prim((*(_5939_src))._field_Kind.ptr());;
		if (((((_6079_destPrim == nullptr) || (_6089_prim == nullptr)) || (!(_2469c06e1_IsStr(_6089_prim.ptr())))) || (!(_2469bdb51_IsU8(_6079_destPrim.ptr()))))) {
			_246985d16_pushErr((*(_58843_e)).ptr(), (*((*((*(_58858_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*((*(_58825_dest))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_5939_src))._field_Kind.ptr()), &__jule_any_type4)}));
		};
	};
	(*((*(_58880_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_58880_d))))._field_Model=jule::Any(jule::new_ptr<_2468614d8_BuiltinCopyCallExprModel>(_2468614d8_BuiltinCopyCallExprModel{._field_Dest=(*(_58825_dest)), ._field_Src=_5939_src}), &__jule_any_type31);
	return (*(_58880_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2c540_builtinCallerCopy(jule::Ptr<_2469857b6_Eval>* _62227_e, jule::Ptr<_24683837d_FnCallExpr>* _62242_fc, jule::Ptr<_246983ac2_Data>* _62264_d) {
	if (((*((*(_62242_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_62242_fc))))._field_Args.len() == 1LL)) {
			_246985d16_pushErr((*(_62227_e)).ptr(), (*((*(_62242_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_246985d16_pushErr((*(_62227_e)).ptr(), (*((*(_62242_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_62242_fc))))._field_Args.len() > 2LL)) {
		_246985d16_pushErr((*(_62227_e)).ptr(), (*((*((*(_62242_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _6359_dest = _2469a3a26_evalExpr((*(_62227_e)), (*((*(_62242_fc))))._field_Args[0LL]);;
	{
		
		if ((_6359_dest == nullptr)) {
			_case_begin_22bc07b0d:;
			{
				return nullptr;;
			}
		}
		else if ((_2469b7aa1_Slc((*(_6359_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc087ce:;
			{
				return _246b2c111_callerCopySlice(&(_6359_dest), _62227_e, _62242_fc, _62264_d);;
			}
		}
		else {
			_case_begin_22bc07778:;
			{
				_246985d16_pushErr((*(_62227_e)).ptr(), (*((*((*(_62242_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bc07723:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b2c8b4_callerLenSlice(jule::Ptr<_246983ac2_Data>* _64724_expr, jule::Ptr<_246983ac2_Data>* _64742_d) {
	(*((*(_64742_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_64742_d))))._field_Model=jule::Any(jule::new_ptr<_246860938_BuiltinLenCallExprModel>(_246860938_BuiltinLenCallExprModel{._field_Expr=(*(_64724_expr))}), &__jule_any_type115);
	return (*(_64742_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2cc38_callerLenMap(jule::Ptr<_246983ac2_Data>* _65522_expr, jule::Ptr<_246983ac2_Data>* _65540_d) {
	(*((*(_65540_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_65540_d))))._field_Model=jule::Any(jule::new_ptr<_246860938_BuiltinLenCallExprModel>(_246860938_BuiltinLenCallExprModel{._field_Expr=(*(_65522_expr))}), &__jule_any_type115);
	return (*(_65540_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2d0ac_callerLenArr(jule::Ptr<_246983ac2_Data>* _66322_expr, jule::Ptr<_246983ac2_Data>* _66340_d) {
	(*((*(_66340_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_66340_d))))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_2469b781a_Arr((*((*(_66322_expr))))._field_Kind.ptr())))._field_N)));
	(*((*(_66340_d))))._field_Model=jule::Any((*((*(_66340_d))))._field_Constant, &__jule_any_type19);
	return (*(_66340_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2d431_callerLenStr(jule::Ptr<_246983ac2_Data>* _67022_expr, jule::Ptr<_246983ac2_Data>* _67040_d) {
	(*((*(_67040_d))))._field_Kind=_24697c4c2_lenKind();
	if (_246984496_IsConst((*(_67022_expr)).ptr())) {
		(*((*(_67040_d))))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2445e5725_ReadStr((*((*(_67022_expr))))._field_Constant.ptr()).len())));
		(*((*(_67040_d))))._field_Model=jule::Any((*((*(_67040_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_67040_d))))._field_Model=jule::Any(jule::new_ptr<_246860938_BuiltinLenCallExprModel>(_246860938_BuiltinLenCallExprModel{._field_Expr=(*(_67022_expr))}), &__jule_any_type115);
	};
	return (*(_67040_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2d7a5_callerLenComptime(jule::Ptr<_246983ac2_Data>* _68327_d, jule::I64 _68337_n) {
	(*((*(_68327_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_68327_d))))._field_Constant=static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_68337_n)));
	(*((*(_68327_d))))._field_Model=jule::Any((*((*(_68327_d))))._field_Constant, &__jule_any_type19);
	return (*(_68327_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2dbd4_builtinCallerLen(jule::Ptr<_2469857b6_Eval>* _69026_e, jule::Ptr<_24683837d_FnCallExpr>* _69041_fc, jule::Ptr<_246983ac2_Data>* _69063_d) {
	if (((*((*(_69041_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_69026_e)).ptr(), (*((*(_69041_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_69041_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_69026_e)).ptr(), (*((*((*(_69041_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _6989_dest = _2469a36d5_evalExpr1((*(_69026_e)), (*((*(_69041_fc))))._field_Args[0LL]);;
	{
		
		if ((_6989_dest == nullptr)) {
			_case_begin_22bc14aa4:;
			{
				return nullptr;;
			}
		}
		else if ((_2469b7aa1_Slc((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc15775:;
			{
				return _246b2c8b4_callerLenSlice(&(_6989_dest), _69063_d);;
			}
		}
		else if ((_2469b781a_Arr((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc157db:;
			{
				return _246b2d0ac_callerLenArr(&(_6989_dest), _69063_d);;
			}
		}
		else if ((_2469b85da_Map((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc15852:;
			{
				return _246b2cc38_callerLenMap(&(_6989_dest), _69063_d);;
			}
		}
		else if (((_2469b6a4a_Prim((*(_6989_dest))._field_Kind.ptr()) != nullptr) && _2469c06e1_IsStr(_2469b6a4a_Prim((*(_6989_dest))._field_Kind.ptr()).ptr()))) {
			_case_begin_22bc14785:;
			{
				return _246b2d431_callerLenStr(&(_6989_dest), _69063_d);;
			}
		}
		else if ((_2469b8d8d_comptimeStructFields((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc147eb:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469b8d8d_comptimeStructFields((*(_6989_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_2469b93aa_comptimeEnumFields((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc14862:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469b93aa_comptimeEnumFields((*(_6989_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_2469ba411_comptimeTypeInfos((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc148c8:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469ba411_comptimeTypeInfos((*(_6989_dest))._field_Kind.ptr())))._field_types.len()));;
			}
		}
		else if ((_2469b98c7_comptimeParams((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc1591d:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469b98c7_comptimeParams((*(_6989_dest))._field_Kind.ptr())))._field_params.len()));;
			}
		}
		else if ((_2469ba92d_comptimeStatics((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc15984:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469ba92d_comptimeStatics((*(_6989_dest))._field_Kind.ptr())))._field_fields.len()));;
			}
		}
		else if ((_2469bb467_comptimeFiles((*(_6989_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc159ea:;
			{
				return _246b2d7a5_callerLenComptime(_69063_d, static_cast<jule::I64>((*(_2469bb467_comptimeFiles((*(_6989_dest))._field_Kind.ptr())))._field_files.len()));;
			}
		}
		else {
			_case_begin_22bc1471e:;
			{
				_246985d16_pushErr((*(_69026_e)).ptr(), (*((*((*(_69041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bc146b9:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b2e058_callerCapSlice(jule::Ptr<_246983ac2_Data>* _72824_expr, jule::Ptr<_246983ac2_Data>* _72842_d) {
	(*((*(_72842_d))))._field_Kind=_24697c4c2_lenKind();
	(*((*(_72842_d))))._field_Model=jule::Any(jule::new_ptr<_246860c35_BuiltinCapCallExprModel>(_246860c35_BuiltinCapCallExprModel{._field_Expr=(*(_72824_expr))}), &__jule_any_type116);
	return (*(_72842_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2e487_builtinCallerCap(jule::Ptr<_2469857b6_Eval>* _73626_e, jule::Ptr<_24683837d_FnCallExpr>* _73641_fc, jule::Ptr<_246983ac2_Data>* _73663_d) {
	if (((*((*(_73641_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_73626_e)).ptr(), (*((*(_73641_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_73641_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _7449_dest = _2469a3a26_evalExpr((*(_73626_e)), (*((*(_73641_fc))))._field_Args[0LL]);;
	{
		
		if ((_7449_dest == nullptr)) {
			_case_begin_22bc245b9:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7449_dest))._field_Decl) {
			_case_begin_22bc2528a:;
			{
				_246985d16_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2469b7aa1_Slc((*(_7449_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc25301:;
			{
				return _246b2e058_callerCapSlice(&(_7449_dest), _73663_d);;
			}
		}
		else {
			_case_begin_22bc24234:;
			{
				_246985d16_pushErr((*(_73626_e)).ptr(), (*((*((*(_73641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bc241ce:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b2e971_callerDeleteMap(jule::Ptr<_2469857b6_Eval>* _75925_e, jule::Ptr<_24683837d_FnCallExpr>* _75940_fc, jule::Ptr<_246983ac2_Data>* _75962_expr, jule::Ptr<_246983ac2_Data>* _75980_d) {
	if ((!((*((*(_75962_expr))))._field_Mutable))) {
		_246985d16_pushErr((*(_75925_e)).ptr(), (*((*((*(_75940_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_75980_d))=_2469ae856_buildVoidData();
	jule::Ptr<_24686110e_BuiltinDeleteCallExprModel> _7649_model = jule::new_ptr<_24686110e_BuiltinDeleteCallExprModel>(_24686110e_BuiltinDeleteCallExprModel{._field_Dest=(*(_75962_expr)), });;
	if (((*((*(_75940_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_246983ac2_Data> _76813_key = _2469a3a26_evalExpr((*(_75925_e)), (*((*(_75940_fc))))._field_Args[1LL]);;
		{
			
			if ((_76813_key == nullptr)) {
				_case_begin_22bc2aba8:;
				{
					return nullptr;;
				}
			}
			else if ((*(_76813_key))._field_Decl) {
				_case_begin_22bc29921:;
				{
					_246985d16_pushErr((*(_75925_e)).ptr(), (*((*((*(_75940_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_22bc298aa:;
				{
					;
					jule::Ptr<_2469b43d8_TypeKind> _77717_keyType = (*(_2469b85da_Map((*((*(_75962_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_24690a791_checkAssignType((*((*(_75925_e))))._field_s, false, &(_77717_keyType), &(_76813_key), (*((*((*(_75940_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_22bc29844:;
		};
		(*(_7649_model))._field_Key=_76813_key;
	};
	(*((*(_75980_d))))._field_Model=jule::Any(_7649_model, &__jule_any_type32);
	return (*(_75980_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b2eda0_builtinCallerDelete(jule::Ptr<_2469857b6_Eval>* _78829_e, jule::Ptr<_24683837d_FnCallExpr>* _78844_fc, jule::Ptr<_246983ac2_Data>* _78866_d) {
	if (((*((*(_78844_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_78844_fc))))._field_Args.len() > 2LL)) {
		_246985d16_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _7969_dest = _2469a3a26_evalExpr((*(_78829_e)), (*((*(_78844_fc))))._field_Args[0LL]);;
	{
		
		if ((_7969_dest == nullptr)) {
			_case_begin_22bc3196c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7969_dest))._field_Decl) {
			_case_begin_22bc3263d:;
			{
				_246985d16_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_2469b85da_Map((*(_7969_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc326a4:;
			{
				return _246b2e971_callerDeleteMap(_78829_e, _78844_fc, &(_7969_dest), _78866_d);;
			}
		}
		else {
			_case_begin_22bc315d7:;
			{
				_246985d16_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bc31582:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b302ce_builtinCallerAssert(jule::Ptr<_2469857b6_Eval>* _81129_e, jule::Ptr<_24683837d_FnCallExpr>* _81144_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_81144_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_81129_e)).ptr(), (*((*(_81144_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_81144_fc))))._field_Args.len() > 2LL)) {
		_246985d16_pushErr((*(_81129_e)).ptr(), (*((*((*(_81144_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _8209_expr = _2469a3a26_evalExpr((*(_81129_e)), (*((*(_81144_fc))))._field_Args[0LL]);;
	if ((_8209_expr == nullptr)) {
		return nullptr;;
	};
	if (((_2469b6a4a_Prim((*(_8209_expr))._field_Kind.ptr()) == nullptr) || (!(_2469c045a_IsBool(_2469b6a4a_Prim((*(_8209_expr))._field_Kind.ptr()).ptr()))))) {
		_246985d16_pushErr((*(_81129_e)).ptr(), (*((*(_81144_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_24685ecab_BuiltinAssertCallExprModel> _8299_model = jule::new_ptr<_24685ecab_BuiltinAssertCallExprModel>(_24685ecab_BuiltinAssertCallExprModel{._field_Token=(*((*(_81144_fc))))._field_Token, ._field_Expr=(*(_8209_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_81144_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_246983ac2_Data> _83713_log = _2469a3a26_evalExpr((*(_81129_e)), (*((*(_81144_fc))))._field_Args[1LL]);;
		if ((_83713_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_246984496_IsConst(_83713_log.ptr()))) || (_2469b6a4a_Prim((*(_83713_log))._field_Kind.ptr()) == nullptr)) || (!(_2469c06e1_IsStr(_2469b6a4a_Prim((*(_83713_log))._field_Kind.ptr()).ptr()))))) {
			_246985d16_pushErr((*(_81129_e)).ptr(), (*((*((*(_81144_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_83713_log))._field_Kind.ptr()), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8299_model))._field_Log=_2445e5725_ReadStr((*(_83713_log))._field_Constant.ptr());
	};
	jule::Ptr<_246983ac2_Data> _8509_d = _2469ae856_buildVoidData();;
	(*(_8509_d))._field_Model=jule::Any(_8299_model, &__jule_any_type30);
	return _8509_d;;
}



inline jule::Ptr<_246983ac2_Data> _246b308a6_builtinCallerStdComptimeTypeOf(jule::Ptr<_2469857b6_Eval>* _85540_e, jule::Ptr<_24683837d_FnCallExpr>* _85555_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_85555_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_85540_e)).ptr(), (*((*(_85555_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_85555_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_85540_e)).ptr(), (*((*((*(_85555_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _8649_d = _2469a2c12_evalExprKind((*(_85540_e)), (*((*((*(_85555_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8649_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_246868c1b_FnIns> _8685_f = _2469b7d37_Fn((*(_8649_d))._field_Kind.ptr());;
	if ((_8685_f != nullptr)) {
		if (_24686a1a1_IsBuiltin(_8685_f.ptr())) {
			_246985d16_pushErr((*(_85540_e)).ptr(), (*((*((*(_85555_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*(_8685_f))._field_Generics.len() != (*((*(_8685_f))._field_Decl))._field_Generics.len())) {
			_246985d16_pushErr((*(_85540_e)).ptr(), (*((*((*(_85555_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_246853ba1_StructIns> _8795_s = _2469b80bd_Struct((*(_8649_d))._field_Kind.ptr());;
	if (((_8795_s != nullptr) && ((*(_8795_s))._field_Generics.len() != (*((*(_8795_s))._field_Decl))._field_Generics.len()))) {
		_246985d16_pushErr((*(_85540_e)).ptr(), (*((*((*(_85555_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_2469b8b07_comptime((*(_8649_d))._field_Kind.ptr())) {
		_246985d16_pushErr((*(_85540_e)).ptr(), (*((*((*(_85555_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_8649_d))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d448_buildComptimeTypeInfoData(&((*((*(_85540_e))))._field_s), &((*(_8649_d))._field_Kind));;
}



inline jule::Ptr<_246983ac2_Data> _246b30c6e_builtinCallerStdComptimeValueOf(jule::Ptr<_2469857b6_Eval>* _89141_e, jule::Ptr<_24683837d_FnCallExpr>* _89156_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_89156_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_89141_e)).ptr(), (*((*(_89156_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_89156_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_89141_e)).ptr(), (*((*((*(_89156_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _8999_d = _2469a3a26_evalExpr((*(_89141_e)), (*((*(_89156_fc))))._field_Args[0LL]);;
	if ((_8999_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_24697c824_isGoodValueToInfer(&(_8999_d))))) {
		_246985d16_pushErr((*(_89141_e)).ptr(), (*((*((*(_89156_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_8999_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _24689d679_buildComptimeValue(&(_8999_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b3119d_builtinCallerStdComptimeMatch(jule::Ptr<_2469857b6_Eval>* _91139_e, jule::Ptr<_24683837d_FnCallExpr>* _91154_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_91154_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_91139_e)).ptr(), (*((*(_91154_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_91154_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_91139_e)).ptr(), (*((*((*(_91154_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Match", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _9199_d = _2469a3053_eval1((*(_91139_e)), (*((*(_91154_fc))))._field_Args[0LL]);;
	if ((_9199_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_24697c824_isGoodValueToInfer(&(_9199_d))))) {
		_246985d16_pushErr((*(_91139_e)).ptr(), (*((*((*(_91154_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_9199_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Match", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((_2469ba697_comptimeTypeInfo((*(_9199_d))._field_Kind.ptr()) == nullptr) && _2469b8b07_comptime((*(_9199_d))._field_Kind.ptr()))) {
		_246985d16_pushErr((*(_91139_e)).ptr(), (*((*((*(_91154_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_9199_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Match", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24687e946_comptimeMatch>(_24687e946_comptimeMatch{._field_data=_9199_d, ._field_exprToken=(*((*((*(_91154_fc))))._field_Args[0LL]))._field_Token}), 5)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind> _94318_kind) {
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_246881162_comptimeRange>(_246881162_comptimeRange{._field_kind=_94318_kind}), 6)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246b31896_builtinCallerStdComptimeRange(jule::Ptr<_2469857b6_Eval>* _95339_e, jule::Ptr<_24683837d_FnCallExpr>* _95354_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_95354_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_95339_e)).ptr(), (*((*(_95354_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_95354_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_95339_e)).ptr(), (*((*((*(_95354_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _9629_d = _2469a2c12_evalExprKind((*(_95339_e)), (*((*((*(_95354_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9629_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_2469b8d8d_comptimeStructFields((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5bc0b:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469b8d8d_comptimeStructFields((*(_9629_d))._field_Kind.ptr()), 0));;
			}
		}
		else if ((_2469b93aa_comptimeEnumFields((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5abb6:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469b93aa_comptimeEnumFields((*(_9629_d))._field_Kind.ptr()), 2));;
			}
		}
		else if ((_2469ba411_comptimeTypeInfos((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5ac2c:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469ba411_comptimeTypeInfos((*(_9629_d))._field_Kind.ptr()), 4));;
			}
		}
		else if ((_2469b98c7_comptimeParams((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5ac93:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469b98c7_comptimeParams((*(_9629_d))._field_Kind.ptr()), 3));;
			}
		}
		else if ((_2469ba92d_comptimeStatics((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5a853:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469ba92d_comptimeStatics((*(_9629_d))._field_Kind.ptr()), 1));;
			}
		}
		else if ((_2469bb467_comptimeFiles((*(_9629_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_22bc5a8b9:;
			{
				return _246b31467_rangeData(jule::Trait<_246880e42_comptimeRangeKind>(_2469bb467_comptimeFiles((*(_9629_d))._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_22bc5a7dc:;
			{
				_246985d16_pushErr((*(_95339_e)).ptr(), (*((*(_95354_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_9629_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Range", 5), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22bc5a534:;
	};
}



inline jule::Ptr<_246983ac2_Data> _246b31cc5_builtinCallerStdComptimeLine(jule::Ptr<_2469857b6_Eval>* _98538_e, jule::Ptr<_24683837d_FnCallExpr>* _98553_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_98553_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_98538_e)).ptr(), (*((*((*(_98553_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_2445e359c_Const> _9899_constant = static__2445e39dc_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*((*((*(_98553_fc))))._field_Token))._field_Row)));;
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25e40_primInt, ._field_Model=jule::Any(_9899_constant, &__jule_any_type19), ._field_Constant=_9899_constant});;
}



inline jule::Ptr<_246983ac2_Data> _246b32204_builtinCallerStdComptimeFile(jule::Ptr<_2469857b6_Eval>* _99738_e, jule::Ptr<_24683837d_FnCallExpr>* _99753_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_99753_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_99738_e)).ptr(), (*((*((*(_99753_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24689b006_comptimeFile>(_24689b006_comptimeFile{._field_file=(*((*((*(_99738_e))))._field_s))._field_file}), 19)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246b32633_builtinCallerStdComptimeFiles(jule::Ptr<_2469857b6_Eval>* _101039_e, jule::Ptr<_24683837d_FnCallExpr>* _101054_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_101054_fc))))._field_Args.len() > 0LL)) {
		_246985d16_pushErr((*(_101039_e)).ptr(), (*((*((*(_101054_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=jule::new_ptr<_2469b43d8_TypeKind>(_2469b43d8_TypeKind{._field_Kind=jule::Trait<_2469b3e32_Kind>(jule::new_ptr<_24689990b_comptimeFiles>(_24689990b_comptimeFiles{._field_files=(*((*((*(_101039_e))))._field_s))._field_files}), 18)}), });;
}



inline jule::Ptr<_246983ac2_Data> _246b32a62_builtinCallerStdComptimeTypeAlias(jule::Ptr<_2469857b6_Eval>* _102343_e, jule::Ptr<_24683837d_FnCallExpr>* _102358_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_102358_fc))))._field_Args.len() > 2LL)) {
		_246985d16_pushErr((*(_102343_e)).ptr(), (*((*((*(_102358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102358_fc))))._field_Args.len() == 0LL)) {
		_246985d16_pushErr((*(_102343_e)).ptr(), (*((*(_102358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102358_fc))))._field_Args.len() == 1LL)) {
		_246985d16_pushErr((*(_102343_e)).ptr(), (*((*(_102358_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_102358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_22bc6dd83:;
			{
				goto _match_end_22bc6c887;
			}
		}
		else {
			_case_begin_22bc6c8ed:;
			{
				_246985d16_pushErr((*(_102343_e)).ptr(), (*((*((*(_102358_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_246986179_pushSuggestion((*(_102343_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_22bc6c887:;
	};
	jule::Ptr<_246819d43_Token> _10449_ident = (*((*((*((*(_102358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_24683607e_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_102343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_22bc7013c:;
			{
				goto _match_end_22bc6ec63;
			}
		}
		else {
			_case_begin_22bc6ecb8:;
			{
				_246985d16_pushErr((*(_102343_e)).ptr(), (*((*(_102358_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_22bc6ec63:;
	};
	jule::Ptr<_2468aea64_scopeChecker> _10539_sc = (*((*(_102343_e))))._field_lookup.cast_ptr<_2468aea64_scopeChecker>(0);;
	jule::Ptr<_2469b35e6_TypeAlias> _10549_alias = jule::new_ptr<_2469b35e6_TypeAlias>(_2469b35e6_TypeAlias{._field_Scope=(*(_10539_sc))._field_tree, ._field_Public=_2468ec244_IsPub((*(_10449_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10449_ident, ._field_Ident=(*(_10449_ident))._field_Kind, ._field_Kind=jule::new_ptr<_2469bb852_TypeSymbol>(), });;
	jule::Ptr<_246983ac2_Data> _10649_t = _2469a3053_eval1((*(_102343_e)), (*((*(_102358_fc))))._field_Args[1LL]);;
	if ((_10649_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10649_t))._field_Decl) {
		(*((*(_10549_alias))._field_Kind))._field_Kind=(*(_10649_t))._field_Kind;
	} else {
		jule::Ptr<_246890a9a_comptimeTypeInfo> _107113_cti = _2469ba697_comptimeTypeInfo((*(_10649_t))._field_Kind.ptr());;
		if ((_107113_cti == nullptr)) {
			_246985d16_pushErr((*(_102343_e)).ptr(), (*((*((*(_102358_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_246986179_pushSuggestion((*(_102343_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10549_alias))._field_Kind))._field_Kind=(*(_107113_cti))._field_base;
	};
	_2468b431b_checkTypeAlias(_10539_sc, &(_10549_alias));
	return _2469ae856_buildVoidData();;
}



inline jule::Ptr<_246983ac2_Data> _246b32e91_builtinCallerStdMemSizeOf(jule::Ptr<_2469857b6_Eval>* _108335_e, jule::Ptr<_24683837d_FnCallExpr>* _108350_fc, jule::Ptr<_246983ac2_Data>* ) {
	jule::Ptr<_246983ac2_Data> _10849_result = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25a66_primUint, });;
	if (((*((*(_108350_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_108335_e)).ptr(), (*((*(_108350_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10849_result;;
	};
	if (((*((*(_108350_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_108335_e)).ptr(), (*((*((*(_108350_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _10969_d = _2469a2c12_evalExprKind((*(_108335_e)), (*((*((*(_108350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10969_d == nullptr)) {
		return _10849_result;;
	};
	if ((!(_2469d1e1c_validTypeForXof(&((*(_10969_d))._field_Kind))))) {
		_246985d16_pushErr((*(_108335_e)).ptr(), (*((*((*(_108350_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_10969_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10849_result))._field_Model=jule::Any(jule::new_ptr<_24685c46d_SizeofExprModel>(_24685c46d_SizeofExprModel{._field_Expr=(*(_10969_d))._field_Model}), &__jule_any_type117);
	return _10849_result;;
}



inline jule::Ptr<_246983ac2_Data> _246b333c0_builtinCallerStdMemAlignOf(jule::Ptr<_2469857b6_Eval>* _110836_e, jule::Ptr<_24683837d_FnCallExpr>* _110851_fc, jule::Ptr<_246983ac2_Data>* ) {
	jule::Ptr<_246983ac2_Data> _11099_result = jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25a66_primUint, });;
	if (((*((*(_110851_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_110836_e)).ptr(), (*((*(_110851_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _11099_result;;
	};
	if (((*((*(_110851_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_110836_e)).ptr(), (*((*((*(_110851_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _11219_d = _2469a2c12_evalExprKind((*(_110836_e)), (*((*((*(_110851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_11219_d == nullptr)) {
		return _11099_result;;
	};
	if ((!(_2469d1e1c_validTypeForXof(&((*(_11219_d))._field_Kind))))) {
		_246985d16_pushErr((*(_110836_e)).ptr(), (*((*((*(_110851_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_2469b47a1_Str((*(_11219_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_11099_result))._field_Model=jule::Any(jule::new_ptr<_2468620dd_AlignofExprModel>(_2468620dd_AlignofExprModel{._field_Expr=(*(_11219_d))._field_Model}), &__jule_any_type118);
	return _11099_result;;
}



inline jule::Ptr<_246983ac2_Data> _246b337ee_builtinCallerStdMemFree(jule::Ptr<_2469857b6_Eval>* _113333_e, jule::Ptr<_24683837d_FnCallExpr>* _113348_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_113348_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_113333_e)).ptr(), (*((*(_113348_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_113348_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_113333_e)).ptr(), (*((*((*(_113348_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _11429_d = _2469a3a26_evalExpr((*(_113333_e)), (*((*(_113348_fc))))._field_Args[0LL]);;
	if ((_11429_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2469b652d_PerformsRC((*(_11429_d))._field_Kind.ptr())))) {
		_246985d16_pushErr((*(_113333_e)).ptr(), (*((*((*(_113348_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_246983ac2_Data> _11519_result = _2469ae856_buildVoidData();;
	(*(_11519_result))._field_Model=jule::Any(jule::new_ptr<_246862dad_FreeExprModel>(_246862dad_FreeExprModel{._field_Expr=(*(_11429_d))._field_Model}), &__jule_any_type33);
	return _11519_result;;
}



inline jule::Ptr<_246983ac2_Data> _246b33c2d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_2469857b6_Eval>* _115645_e, jule::Ptr<_24683837d_FnCallExpr>* _115660_fc, jule::Ptr<_246983ac2_Data>* ) {
	if (((*((*(_115660_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_115645_e)).ptr(), (*((*(_115660_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_115660_fc))))._field_Args.len() > 1LL)) {
		_246985d16_pushErr((*(_115645_e)).ptr(), (*((*((*(_115660_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_246983ac2_Data> _11659_d = _2469a3a26_evalExpr((*(_115645_e)), (*((*(_115660_fc))))._field_Args[0LL]);;
	if ((_11659_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_2469d0e3d_isBuiltinStrConvertable(&((*(_11659_d))._field_Kind))))) {
		_246985d16_pushErr((*(_115645_e)).ptr(), (*((*((*(_115660_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_246983ac2_Data>(_246983ac2_Data{._field_Kind=_246b25219_primStr, ._field_Model=jule::Any(jule::new_ptr<_2468626d7_IntegratedToStrExprModel>(_2468626d7_IntegratedToStrExprModel{._field_Expr=(*(_11659_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_246983ac2_Data> _246b3415c_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_2469857b6_Eval>* _118344_e, jule::Ptr<_24683837d_FnCallExpr>* _118359_fc, jule::Ptr<_246983ac2_Data>* _118381_d) {
	if ((!(_24698680b_isUnsafe((*(_118344_e)).ptr())))) {
		_246985d16_pushErr((*(_118344_e)).ptr(), (*((*(_118359_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_118359_fc))))._field_Args.len() < 1LL)) {
		_246985d16_pushErr((*(_118344_e)).ptr(), (*((*(_118359_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _11939_argd = _2469a3a26_evalExpr((*(_118344_e)), (*((*(_118359_fc))))._field_Args[0LL]);;
	if ((_11939_argd == nullptr)) {
		return nullptr;;
	};
	if (((_2469b6a4a_Prim((*(_11939_argd))._field_Kind.ptr()) == nullptr) || (!(_2469c06e1_IsStr(_2469b6a4a_Prim((*(_11939_argd))._field_Kind.ptr()).ptr()))))) {
		_246985d16_pushErr((*(_118344_e)).ptr(), (*((*((*(_118359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_2469b47a1_Str((*(_11939_argd))._field_Kind.ptr()), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_246984496_IsConst(_11939_argd.ptr()))) || (!(_2445e7d21_IsStr((*(_11939_argd))._field_Constant.ptr()))))) {
		_246985d16_pushErr((*(_118344_e)).ptr(), (*((*((*(_118359_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_246983ac2_Data> _12089_r = _2469ae856_buildVoidData();;
	jule::Ptr<_246868c1b_FnIns> _12109_f = _2469b7d37_Fn((*((*(_118381_d))))._field_Kind.ptr());;
	if (((*(_12109_f))._field_Generics.len() > 0LL)) {
		(*(_12089_r))._field_Kind=(*((*(_12109_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_246862ab1_BackendEmitExprModel> _12159_model = jule::new_ptr<_246862ab1_BackendEmitExprModel>(_246862ab1_BackendEmitExprModel{._field_Code=_2445e5725_ReadStr((*(_11939_argd))._field_Constant.ptr()), });;
	if (((*((*(_118359_fc))))._field_Args.len() > 1LL)) {
		(*(_12159_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_118359_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_118359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_22bc97395:;
			if (it != expr_end) {
				jule::Ptr<_246834654_Expr> _122121_arg = *it;
				{
					_11939_argd=_2469a3053_eval1((*(_118344_e)), _122121_arg);
					if ((_11939_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = (*(_12159_model))._field_Exprs; __jule_push_dest.push((*(_11939_argd))._field_Model); };
				}
				_iter_next_22bc97395:;
				++it;
				goto _iter_begin_22bc97395;
			}
			_iter_end_22bc97395:;
		};
	};
	(*(_12089_r))._field_Model=jule::Any(_12159_model, &__jule_any_type25);
	return _12089_r;;
}



inline jule::Ptr<_246983ac2_Data> _246b3458b_builtinCallerStdDebugOut(jule::Ptr<_2469857b6_Eval>* _123434_e, jule::Ptr<_24683837d_FnCallExpr>* _123449_fc, jule::Ptr<_246983ac2_Data>* _123471_d) {
	(*(_123471_d))=_246b2a373_builtinCallerOut(_123434_e, _123449_fc, _123471_d);
	if (((*(_123471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_123471_d))))._field_Model.cast_ptr<_24685db78_BuiltinOutCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_123471_d));;
}



inline jule::Ptr<_246983ac2_Data> _246b349ba_builtinCallerStdDebugOutln(jule::Ptr<_2469857b6_Eval>* _124336_e, jule::Ptr<_24683837d_FnCallExpr>* _124351_fc, jule::Ptr<_246983ac2_Data>* _124373_d) {
	(*(_124373_d))=_246b2a7a2_builtinCallerOutln(_124336_e, _124351_fc, _124373_d);
	if (((*(_124373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_124373_d))))._field_Model.cast_ptr<_24685e052_BuiltinOutlnCallExprModel>(&__jule_any_type28)))._field_Debug=true;
	return (*(_124373_d));;
}



inline jule::Ptr<_227b84a06_FileInfo> _227bcae48_ParseFile(jule::Ptr<_24682060c_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_227b84a06_FileInfo> _279_finf = jule::new_ptr<_227b84a06_FileInfo>();;
	({
		__jule_tuple_x_24682d472_Ast__jule_tuple_s_24345e617_Log __jule_assign_result = _227bcb520_parseFileset(_2318_f);
		(*(_279_finf))._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*(_279_finf))._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*(_279_finf))._field_Errors.len() > 0LL)) {
		(*(_279_finf))._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_24682d472_Ast__jule_tuple_s_24345e617_Log _227bcb520_parseFileset(jule::Ptr<_24682060c_File> _5521_f) {
	__jule_tuple_x_24682d472_Ast__jule_tuple_s_24345e617_Log __jule_func_result;
	jule::Ptr<_227beba3a_parser> _569_p = jule::new_ptr<_227beba3a_parser>();;
	_227c0c94c_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*(_569_p))._field_ast;
	__jule_func_result.__jule_result_arg1 = (*(_569_p))._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_246840341_ScopeTree> _227bcbeb0_newScope(void) {
	return jule::new_ptr<_246840341_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _227bcc345_isSt(jule::Ptr<_246819d43_Token> _499_current, jule::Ptr<_246819d43_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*(_499_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _227bcc6b9_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_246819d43_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_246819d43_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_24681a88d_IsBinOp((*(_619_prev))._field_Id) && ((*(_619_prev))._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _227bcca82_nextStPos(jule::Slice<jule::Ptr<_246819d43_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _699_braceN = 0LL;;
	jule::I64 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_246819d43_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22bd290e7:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_227bcc6b9_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _227bcc345_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_22bd28c73;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_22bd27de8;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22bd2916e:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _227bcc345_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_22bd28c73;
							};
						};
						goto _iter_next_22bd27de8;
					}
				}
				_match_end_22bd29081:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_22bd27de8;
			};
			if ((_709_i > _6833_start)) {
				if (_227bcc6b9_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_22bd27de8;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _227bcc345_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _227bcc345_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_22bd27de8;
			};
			_julec_label_22bd28c73:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_22bd27de8:;
	}
	_iter_end_22bd27de8:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_246819d43_Token__jule_tuple_bool _227bcce06_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_246819d43_Token>> _13028_tokens) {
	__jule_tuple_sx_246819d43_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _227bcca82_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_246819d43_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_246819d43_Token__jule_tuple_bool __jule_assign_result = _227bcce06_skipSt(_13016_i, _13028_tokens);
				_1349_stTokens = __jule_assign_result.__jule_result_arg0;
				_1329_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _1349_stTokens;
			__jule_func_result.__jule_result_arg1 = _1329_terminated;
			return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_227bcd236_stmt>> _227bcd5dd_splitStmts(jule::Slice<jule::Ptr<_246819d43_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_227bcd236_stmt>> _1539_stmts = jule::Slice<jule::Ptr<_227bcd236_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _1549_pos = 0LL;;
	while ((_1549_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_246819d43_Token>> _15613_stmt;;
			jule::Bool _15619_terminated = false;;
			({
				__jule_tuple_sx_246819d43_Token__jule_tuple_bool __jule_assign_result = _227bcce06_skipSt(&(_1549_pos), (*(_15220_tokens)));
				_15613_stmt = __jule_assign_result.__jule_result_arg0;
				_15619_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_227bcd236_stmt>> &__jule_push_dest = _1539_stmts; __jule_push_dest.push(jule::new_ptr<_227bcd236_stmt>(_227bcd236_stmt{._field_tokens=_15613_stmt, ._field_terminated=_15619_terminated})); };
		}
	_iter_next_22bd33376:;
	}
	_iter_end_22bd33376:;;
	return _1539_stmts;;
}



inline jule::Bool _227be68e2_isTypeOp(jule::U64* _88514_id) {
	return ((((*(_88514_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88514_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88514_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _227be6c00_isTypeRange(jule::Slice<jule::Ptr<_246819d43_Token>>* _89221_tokens) {
	jule::Bool _8939_op = false;;
	{
		auto expr = _89221_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bdda274:;
		if (it != expr_end) {
			jule::I64 _8949_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _89412_token = *it;
			{
				if (((*(_89412_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8939_op) {
						return true;;
					};
					jule::I64 _89917_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_246819d43_Token>> _90017_lTokens = (*(_89221_tokens)).slice(_8949_i);;
					{
						auto expr = &(_90017_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_22bddce69:;
						if (it != expr_end) {
							jule::Ptr<_246819d43_Token> _90120_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90120_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_22bdddc39:;
										{
											(_89917_rangeN)++;
											goto _iter_next_22bddce69;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_22bdddcb1:;
										{
											(_89917_rangeN)--;
											goto _iter_next_22bddce69;
										}
									}
									_match_end_22bdddb6d:;
								};
								if ((_89917_rangeN == 0LL)) {
									return _227be68e2_isTypeOp(&((*(_90120_lToken))._field_Id));;
								};
							}
							_iter_next_22bddce69:;
							++it;
							goto _iter_begin_22bddce69;
						}
						_iter_end_22bddce69:;
					};
					return true;;
				};
				if ((!(_227be68e2_isTypeOp(&((*(_89412_token))._field_Id))))) {
					return false;;
				};
				_8939_op=true;
			}
			_iter_next_22bdda274:;
			++it;
			_8949_i++;
			goto _iter_begin_22bdda274;
		}
		_iter_end_22bdda274:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_246819d43_Token>> _227be6eb9_getBlockExpr(jule::Slice<jule::Ptr<_246819d43_Token>>* _92522_tokens) {
	jule::I64 _9269_braceN = 0LL;;
	jule::I64 _9279_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bde06db:;
		if (it != expr_end) {
			jule::I64 _9289_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _92812_tok = *it;
			{
				{
					auto &_match_expr{ (*(_92812_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_22bde15ee:;
						{
							if (((((*(_92522_tokens)).len() - _9289_i) > 1LL) && ((*((*(_92522_tokens))[(_9289_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9279_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_22bde1676:;
						{
							if (((_9269_braceN > 0LL) || (_9279_skipToNextBraceClose > 0LL))) {
								if ((_9279_skipToNextBraceClose > 0LL)) {
									(_9279_skipToNextBraceClose)--;
								};
								(_9269_braceN)++;
								goto _match_end_22bde1511;
							};
							return (*(_92522_tokens)).slice(0LL, _9289_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22bde16ed:;
						{
							(_9269_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22bde1775:;
						{
							(_9269_braceN)--;
						}
					}
					_match_end_22bde1511:;
				};
			}
			_iter_next_22bde06db:;
			++it;
			_9289_i++;
			goto _iter_begin_22bde06db;
		}
		_iter_end_22bde06db:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token _227be7382_splitDelim(jule::Slice<jule::Ptr<_246819d43_Token>>* _95720_tokens, jule::U64 _95738_delim) {
	__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_func_result;
	jule::I64 _9589_rangeN = 0LL;;
	{
		auto expr = _95720_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bde4833:;
		if (it != expr_end) {
			jule::I64 _9599_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _95912_token = *it;
			{
				{
					auto &_match_expr{ (*(_95912_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22bde5625:;
						{
							(_9589_rangeN)++;
							goto _iter_next_22bde4833;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22bde569c:;
						{
							(_9589_rangeN)--;
						}
					}
					else if (_match_expr == _95738_delim) {
						_case_begin_22bde5724:;
						{
							if ((_9589_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_246819d43_Token>> _97221_l = (*(_95720_tokens)).slice(0LL, _9599_i);;
								jule::Slice<jule::Ptr<_246819d43_Token>> _97321_r = (*(_95720_tokens)).slice((_9599_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _97221_l;
								__jule_func_result.__jule_result_arg1 = _97321_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_22bde5548:;
				};
			}
			_iter_next_22bde4833:;
			++it;
			_9599_i++;
			goto _iter_begin_22bde4833;
		}
		_iter_end_22bde4833:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _227be764b_findLowestPrecOp(jule::Slice<jule::Ptr<_246819d43_Token>>* _98322_tokens) {
	jule::U8 _9889_prec = 255LLU;;
	jule::I64 _9899_precPos = -1LL;;
	jule::I64 _9919_braceN = 0LL;;
	jule::Bool _9929_skipToNextBraceOpen = false;;
	{
		auto expr = _98322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22bde8150:;
		if (it != expr_end) {
			jule::I64 _9939_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> *_99312_token = it;
			{
				{
					auto &_match_expr{ (*((*(_99312_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_22bde8e97:;
						{
							_9929_skipToNextBraceOpen=false;
							goto _case_begin_22bde901e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_22bde901e:;
						{
							(_9919_braceN)++;
							goto _iter_next_22bde8150;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_22bde9096:;
						{
							(_9919_braceN)--;
							goto _iter_next_22bde8150;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_22bde911d:;
						{
							_9929_skipToNextBraceOpen=true;
							goto _iter_next_22bde8150;
						}
					}
					_match_end_22bde8da9:;
				};
				{
					
					if (_9929_skipToNextBraceOpen) {
						_case_begin_22bdea581:;
						{
							goto _iter_next_22bde8150;
						}
					}
					else if ((_9939_i == 0LL)) {
						_case_begin_22bdea608:;
						{
							goto _iter_next_22bde8150;
						}
					}
					else if ((_9919_braceN > 0LL)) {
						_case_begin_22bdea680:;
						{
							goto _iter_next_22bde8150;
						}
					}
					else if ((!(_24681a88d_IsBinOp((*((*(_99312_token))))._field_Id)))) {
						_case_begin_22bdea707:;
						{
							goto _iter_next_22bde8150;
						}
					}
					_match_end_22bdea32d:;
				};
				jule::Ptr<_246819d43_Token> _10229_left = (*(_98322_tokens))[(_9939_i - 1LL)];;
				if ((_24681a580_IsUnaryOp((*(_10229_left))._field_Id) || ((*(_10229_left))._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_22bde8150;
				};
				if (((_9939_i > 1LL) && ((*(_10229_left))._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_246819d43_Token> _103013_lleft = (*(_98322_tokens))[(_9939_i - 2LL)];;
					if (((*(_103013_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*((*(_99312_token))))._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_22bde8150;
						};
					};
				};
				jule::U8 _10399_p = _24681a1b7_Prec((*(_99312_token)).ptr());;
				if (((_10399_p != 0LLU) && (_10399_p <= _9889_prec))) {
					_9889_prec=_10399_p;
					_9899_precPos=_9939_i;
				};
			}
			_iter_next_22bde8150:;
			++it;
			_9939_i++;
			goto _iter_begin_22bde8150;
		}
		_iter_end_22bde8150:;
	};
	return _9899_precPos;;
}



inline jule::Ptr<_24683607e_IdentExpr> _227be7915_buildIdentExpr(jule::Ptr<_246819d43_Token>* _104824_token) {
	return jule::new_ptr<_24683607e_IdentExpr>(_24683607e_IdentExpr{._field_Token=(*(_104824_token)), ._field_Ident=(*((*(_104824_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_246819d43_Token__jule_tuple_int _227be7bce_getRangeExprTokens(jule::Slice<jule::Ptr<_246819d43_Token>>* _105628_tokens) {
	__jule_tuple_sx_246819d43_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10579_rangeN = 0LL;;
	jule::I64 _10589_i = ((*(_105628_tokens)).len() - 1LL);;
	for (; (_10589_i >= 0LL); (_10589_i)--) {
		{
			jule::Ptr<_246819d43_Token> _10609_tok = (*(_105628_tokens))[_10589_i];;
			{
				auto &_match_expr{ (*(_10609_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22be01d4b:;
					{
						(_10579_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22be01dc3:;
					{
						(_10579_rangeN)--;
					}
				}
				_match_end_22be01cd5:;
			};
			if ((_10579_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105628_tokens)).slice(0LL, _10589_i);
				__jule_func_result.__jule_result_arg1 = _10579_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_22be01235:;
	}
	_iter_end_22be01235:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10579_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _227be89e3_checkAssignTokens(jule::Slice<jule::Ptr<_246819d43_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_24681e71b_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be8ce1a:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22be8d9ed:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22be8da75:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_22be8d932:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_22be8e911:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_22be8e977:;
						{
							goto _iter_next_22be8ce1a;
						}
					}
					else if (_24681ec9e_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*((*(_2112_t))))._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_22be8e9ee:;
						{
							return true;;
						}
					}
					_match_end_22be8e867:;
				};
			}
			_iter_next_22be8ce1a:;
			++it;
			goto _iter_begin_22be8ce1a;
		}
		_iter_end_22be8ce1a:;
	};
	return false;;
}



inline _24345e617_Log _227be9be2_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_24682060c_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_24345ea79_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_246819d43_Token>> _227bea1dc_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_246819d43_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_246819d43_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _789_rangeN = 1LL;;
	jule::I64 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_246819d43_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_22be9476d:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_22be947e5:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_22be94707:;
			};
		}
	_iter_next_22be93ad0:;
	}
	_iter_end_22be93ad0:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token _227bea4a6_rangeLast(jule::Slice<jule::Ptr<_246819d43_Token>>* _9919_tokens) {
	__jule_tuple_sx_246819d43_Token__jule_tuple_sx_246819d43_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U64>(73LLU)) && (_1035_first != static_cast<jule::U64>(76LLU))) && (_1035_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1099_braceN = 0LL;;
	jule::I64 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_246819d43_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_22be98376:;
					{
						(_1099_braceN)++;
						goto _iter_next_22be9782b;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_22be983ed:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_22be98310:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_22be9782b:;
	}
	_iter_end_22be9782b:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log _227bea95c_parts(jule::Slice<jule::Ptr<_246819d43_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_246819d43_Token__jule_tuple_s_24345e617_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> _14213_parts = nullptr;;
	jule::Slice<_24345e617_Log> _14313_errors = nullptr;;
	jule::I64 _1459_rangeN = 0LL;;
	jule::I64 _1469_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22be964c8:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_246819d43_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ (*(_14712_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_22be9c468:;
						{
							(_1459_rangeN)++;
							goto _iter_next_22be964c8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_22be9c4e0:;
						{
							(_1459_rangeN)--;
						}
					}
					_match_end_22be9c39c:;
				};
				if ((_1459_rangeN > 0LL)) {
					goto _iter_next_22be964c8;
				};
				if (((*(_14712_token))._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _1469_last) <= 0LL))) {
						_24345e617_Log _16617_err = _227be9be2_makeErr((*(_14712_token))._field_Row, (*(_14712_token))._field_Column, &((*(_14712_token))._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_24345e617_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16617_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last, _1479_i)); };
					_1469_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_22be964c8:;
			++it;
			_1479_i++;
			goto _iter_begin_22be964c8;
		}
		_iter_end_22be964c8:;
	};
	if ((_1469_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_1469_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_246819d43_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_246819d43_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _227beac26_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_22bea0636:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_22bea069c:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_22bea0713:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_22bea05c0:;
			{
				return _18320_left;;
			}
		}
		_match_end_22be9b676:;
	};
}



inline _24345e617_Log _227beb155_compilerErr(jule::Ptr<_246819d43_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_19617_token))))._field_Row, ._field_Column=(*((*(_19617_token))))._field_Column, ._field_Path=(*((*((*(_19617_token))))._field_File))._field_Path, ._field_Text=_24345ea79_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_2468215db_GetRow((*((*(_19617_token))))._field_File.ptr(), (*((*(_19617_token))))._field_Row), };;
}



inline void _227beb4eb_pushSuggestion(_24345e617_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	(*(_20730_log))._field_Suggestion=_24345ea79_Logf(_20741_fmt, _20754_args);
}



inline jule::Ptr<_246830320_TypeDecl> _227c0d453_buildVoidType(void) {
	return jule::new_ptr<_246830320_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _246c29c25_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_22c152d38:;
			{
				__jule_func_result.__jule_result_arg0=_2434627d5_IsWindows(_243576cc3_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_22c152d9e:;
			{
				__jule_func_result.__jule_result_arg0=_243462ab0_IsDarwin(_243576cc3_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_22c152a80:;
			{
				__jule_func_result.__jule_result_arg0=_243462d79_IsLinux(_243576cc3_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_22c152ae6:;
			{
				__jule_func_result.__jule_result_arg0=_243463a17_IsUnix(_243576cc3_Os);
			}
		}
		else {
			_case_begin_22c152530:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_22c152970:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _246c29d68_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_22c1550b0:;
			{
				__jule_func_result.__jule_result_arg0=_2434631ba_IsI386(_24357708c_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_22c154c91:;
			{
				__jule_func_result.__jule_result_arg0=_243463484_IsAmd64(_24357708c_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_22c154d07:;
			{
				__jule_func_result.__jule_result_arg0=_24346374d_IsArm64(_24357708c_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_22c154d6d:;
			{
				__jule_func_result.__jule_result_arg0=_243464177_Is64Bit(_24357708c_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_22c154dd4:;
			{
				__jule_func_result.__jule_result_arg0=_243463dad_Is32Bit(_24357708c_Arch);
			}
		}
		else {
			_case_begin_22c154741:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_22c154b81:;
	};
	return __jule_func_result;;
}



inline jule::Bool _246c45328_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2433bd664_Base(_5029_p);
	jule::I64 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _2433bd0d1_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I64 _649_i = _24339e931_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok = false;;
		jule::Bool _6721_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29c25_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29d68_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=static_cast<jule::I64>(_24339e931_FindLastByte(_5029_p, '_'));
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok = false;;
		jule::Bool _8821_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29c25_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29d68_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok = false;;
	jule::Bool _9617_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29d68_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29c25_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _246c29c25_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _246c464a0_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_243576cc3_Os); };
	if (_243463a17_IsUnix(_243576cc3_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _246c46725_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_24357708c_Arch); };
	if (_243464177_Is64Bit(_24357708c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_243463dad_Is32Bit(_24357708c_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _246c46a11_initVars(jule::Slice<jule::Str>* _5518_vars, _246c46181_CompileInfo* _5532_info) {
	_246c464a0_setOsVars(_5518_vars);
	_246c46725_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_22c15eaae:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_22c15eb36:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_22c15ea59:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_22c160cbe:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_22c160d35:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_22c160dac:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_22c161000:;
	};
}



inline jule::Slice<jule::U8> _227c173e6_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__241ee1b07_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_243575bd4_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _24345e617_Log _227c176c1_flatCompilerErr(jule::Str _4120_text) {
	return _24345e617_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _227c1bede_pushPasses(jule::Ptr<_2468cbb08_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c18e21a:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _11217_f = *it;
			{
				_julec_label_22c18eacd:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c18ec98:;
					if (it != expr_end) {
						_24686d407_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_22c18ec98;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_22c190bde:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_22c18ec98;
										};
									}
									_iter_next_22c190bde:;
									++it;
									goto _iter_begin_22c190bde;
								}
								_iter_end_22c190bde:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_22c18ec98:;
						++it;
						goto _iter_begin_22c18ec98;
					}
					_iter_end_22c18ec98:;
				};
			}
			_iter_next_22c18e21a:;
			++it;
			goto _iter_begin_22c18e21a;
		}
		_iter_end_22c18e21a:;
	};
}



inline jule::Slice<jule::Str> _227c1c3a7_getAllUniquePasses(jule::Ptr<_2468cbb08_Package>* _12828_pkg, jule::Slice<jule::Ptr<_2468c8bd2_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_227c1bede_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c19232d:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_227c1bede_pushPasses(&((*(_13217_u))._field_Package), &(_12913_passes));
				};
			}
			_iter_next_22c19232d:;
			++it;
			goto _iter_begin_22c19232d;
		}
		_iter_end_22c19232d:;
	};
	return _12913_passes;;
}



inline _246c46181_CompileInfo _227c1c5b6_buildCompileInfo(void) {
	_246c46181_CompileInfo _1429_info = _246c46181_CompileInfo{._field_Prod=_240e90b95_Production, ._field_Test=_240e90238_Test, };;
	{
		auto &_match_expr{ _240e8d3ce_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_22c193609:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_22c1936b4:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_22c191e98:;
	};
	{
		auto &_match_expr{ _240e8e91e_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_22c194275:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_22c19298d:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_22c193a49:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_22c1944b7:;
	};
	return _1429_info;;
}



inline void _227d7cd75_EliminateDefines(jule::Ptr<_227c1a66e_IR>* _29126_ir) {
	jule::Ptr<_227d456ab_ObjectDeadCode> _2929_ocd = static__227d7a46b_new(_29126_ir);;
	_227d7ca45_elimanate(_2929_ocd);
}



inline jule::Ptr<_24682e73c_Directive> _227d7d23d_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _29723_directives, jule::Str _29754_tag) {
	{
		auto expr = _29723_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1cc588:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _29817_dr = *it;
			{
				if (((*((*(_29817_dr))._field_Tag))._field_Kind == _29754_tag)) {
					return _29817_dr;;
				};
			}
			_iter_next_22c1cc588:;
			++it;
			goto _iter_begin_22c1cc588;
		}
		_iter_end_22c1cc588:;
	};
	return nullptr;;
}



inline jule::Bool _227d7d5b2_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _30718_directives, jule::Str _30749_tag) {
	return (_227d7d23d_findDirective(&((*(_30718_directives))), _30749_tag) != nullptr);;
}



inline jule::Bool _227d7d97a_isTraitMethod(jule::Ptr<_246853ba1_StructIns>* _31223_owner, jule::Ptr<_246868c1b_FnIns>* _31243_f) {
	{
		auto expr = &((*((*((*(_31223_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c1cd7cb:;
		if (it != expr_end) {
			jule::Ptr<_2468790e4_Trait> _31317_t = *it;
			{
				if ((_246879c93_FindMethod(_31317_t.ptr(), (*((*((*(_31243_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_22c1cd7cb:;
			++it;
			goto _iter_begin_22c1cd7cb;
		}
		_iter_end_22c1cd7cb:;
	};
	return false;;
}



inline void _227d8297e_eliminateDeadCodeOfScope(jule::Ptr<_2468a7760_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_2468aa103_Label>> _2425_labels = jule::Slice<jule::Ptr<_2468aa103_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_2468aa4cc_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_2468aa4cc_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_227d7e77d_scopeDeadCode> _2449_sdc = jule::new_ptr<_227d7e77d_scopeDeadCode>(_227d7e77d_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_2468aa103_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_2468aa4cc_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_227d8264e_optimizeStmts(_2449_sdc);
	};
}



inline void _227d82c04_eliminateScopeFunctions(jule::Slice<jule::Ptr<_246865d17_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c221dc4:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_22c224a20:;
					if (it != expr_end) {
						jule::Ptr<_246868c1b_FnIns> _25621_ins = *it;
						{
							_227d8297e_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_22c224a20:;
						++it;
						goto _iter_begin_22c224a20;
					}
					_iter_end_22c224a20:;
				};
			}
			_iter_next_22c221dc4:;
			++it;
			goto _iter_begin_22c221dc4;
		}
		_iter_end_22c221dc4:;
	};
}



inline void _227d82e35_eliminateFunctionsScopePackage(jule::Ptr<_2468cbb08_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c224844:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _26317_f = *it;
			{
				_227d82c04_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_22c224844:;
			++it;
			goto _iter_begin_22c224844;
		}
		_iter_end_22c224844:;
	};
}



inline void _227d831dd_eliminateScopePackage(jule::Ptr<_2468cbb08_Package>* _26831_pkg) {
	_227d82e35_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _227d8341e_EliminateScopes(jule::Ptr<_227c1a66e_IR>* _27325_ir) {
	jule::I64 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_2468c8bd2_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_227d831dd_eliminateScopePackage(&((*(_27613_u))._field_Package));
			};
		}
	_iter_next_22c226428:;
	}
	_iter_end_22c226428:;;
	_227d831dd_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _246b34d1c_typeData(jule::Any* _1714_m) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)(((*(_1714_m))).type)));;
}



inline jule::Bool _246b351d5_equalConst(jule::Ptr<_2445e359c_Const> _2115_l, jule::Ptr<_2445e359c_Const> _2126_r) {
	{
		
		if (_2445e756d_IsI64(_2115_l.ptr())) {
			_case_begin_22c2a4132:;
			{
				return (_2445e756d_IsI64(_2126_r.ptr()) && (_2445e4e72_ReadI64(_2115_l.ptr()) == _2445e4e72_ReadI64(_2126_r.ptr())));;
			}
		}
		else if (_2445e7804_IsU64(_2115_l.ptr())) {
			_case_begin_22c2a41a9:;
			{
				return (_2445e7804_IsU64(_2126_r.ptr()) && (_2445e5208_ReadU64(_2115_l.ptr()) == _2445e5208_ReadU64(_2126_r.ptr())));;
			}
		}
		else if (_2445e80a7_IsF64(_2115_l.ptr())) {
			_case_begin_22c2a4462:;
			{
				return (_2445e80a7_IsF64(_2126_r.ptr()) && (_2445e59ab_ReadF64(_2115_l.ptr()) == _2445e59ab_ReadF64(_2126_r.ptr())));;
			}
		}
		else if (_2445e7d21_IsStr(_2115_l.ptr())) {
			_case_begin_22c2a44c8:;
			{
				return (_2445e7d21_IsStr(_2126_r.ptr()) && (_2445e5725_ReadStr(_2115_l.ptr()) == _2445e5725_ReadStr(_2126_r.ptr())));;
			}
		}
		else if (_2445e7a8a_IsBool(_2115_l.ptr())) {
			_case_begin_22c2a453e:;
			{
				return (_2445e7a8a_IsBool(_2126_r.ptr()) && (_2445e548e_ReadBool(_2115_l.ptr()) == _2445e548e_ReadBool(_2126_r.ptr())));;
			}
		}
		else if (_2445e833d_IsNil(_2115_l.ptr())) {
			_case_begin_22c2a45a5:;
			{
				return _2445e833d_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_22c2a4022:;
			{
				return false;;
			}
		}
		_match_end_22c2a3ce1:;
	};
}



inline jule::Bool _246b35559_equalCasting(jule::Ptr<_2468596ce_CastingExprModel> _4017_l, jule::Ptr<_2468596ce_CastingExprModel> _4039_r) {
	if ((!(_2469b4ae2_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _246b3648e_equalModels((*(_4017_l))._field_Expr, (*(_4039_r))._field_Expr);;
}



inline jule::Bool _246b35922_equalUnary(jule::Ptr<_24685847a_UnaryExprModel> _4715_l, jule::Ptr<_24685847a_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*((*(_4735_r))._field_Op))._field_Id) || ((*((*(_4715_l))._field_Op))._field_Kind != (*((*(_4735_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return _246b3648e_equalModels((*((*(_4715_l))._field_Expr))._field_Model, (*((*(_4735_r))._field_Expr))._field_Model);;
}



inline jule::Bool _246b35c96_equalIndexing(jule::Ptr<_24685a911_IndexingExprModel> _5418_l, jule::Ptr<_24685a911_IndexingExprModel> _5441_r) {
	return (_246b3648e_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*((*(_5441_r))._field_Expr))._field_Model) && _246b3648e_equalModels((*((*(_5418_l))._field_Index))._field_Model, (*((*(_5441_r))._field_Index))._field_Model));;
}



inline jule::Bool _246b3611a_equalBinary(jule::Ptr<_2468580a1_BinopExprModel> _5916_l, jule::Ptr<_2468580a1_BinopExprModel> _5936_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*((*(_5936_r))._field_Op))._field_Id) || ((*((*(_5916_l))._field_Op))._field_Kind != (*((*(_5936_r))._field_Op))._field_Kind))) {
		return false;;
	};
	return (_246b3648e_equalModels((*((*(_5916_l))._field_Left))._field_Model, (*((*(_5936_r))._field_Left))._field_Model) && _246b3648e_equalModels((*((*(_5916_l))._field_Right))._field_Model, (*((*(_5936_r))._field_Right))._field_Model));;
}



inline jule::Bool _246b3648e_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_246b34d1c_typeData(&(_7016_l)) != _246b34d1c_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c2b310d:;
			{
				return (_7016_l.cast_ptr<_246922555_Var>(&__jule_any_type8) == _7030_r.cast_ptr<_246922555_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c2b3185:;
			{
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _789_li = _7016_l.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _246b3648e_equalModels((*((*(_789_li))._field_Expr))._field_Model, (*((*(_799_ri))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c2b320c:;
			{
				return _246b351d5_equalConst(_7016_l.cast_ptr<_2445e359c_Const>(&__jule_any_type19), _7030_r.cast_ptr<_2445e359c_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_22c2b341b:;
			{
				return _246b35559_equalCasting(_7016_l.cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92), _7030_r.cast_ptr<_2468596ce_CastingExprModel>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c2b3482:;
			{
				return _246b35922_equalUnary(_7016_l.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_22c2b34e8:;
			{
				return _246b35c96_equalIndexing(_7016_l.cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_24685a911_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_22c2b355e:;
			{
				return _246b3611a_equalBinary(_7016_l.cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_22c2b3097:;
			{
				return false;;
			}
		}
		_match_end_22c2b2e98:;
	};
}



inline jule::Bool _246b3e7e9_isStdPackage(jule::Str* _45118_f, jule::Str _45126_p) {
	return _24339b774_HasPrefix((*(_45118_f)), _2433bcd17_Join(jule::Slice<jule::Str>::make({_2435761e0_PathStdlib,_45126_p})));;
}



inline jule::Bool _246b3eb07_isConstantValidConditionalCase(jule::Ptr<_2468a7b7d_If>* _45536_i) {
	{
		auto &_match_expr{ (*((*(_45536_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c2b86eb:;
			{
				jule::Ptr<_2445e359c_Const> _4589_c = (*((*(_45536_i))))._field_Expr.cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
				return (_2445e7a8a_IsBool(_4589_c.ptr()) && _2445e548e_ReadBool(_4589_c.ptr()));;
			}
		}
		_match_end_22c2b8696:;
	};
	return false;;
}



inline jule::Bool _246b3edc1_isUnreachableExpr(jule::Any* _46423_expr) {
	{
		auto &_match_expr{ (*(_46423_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c2b8ab4:;
			{
				jule::Ptr<_2445e359c_Const> _4679_c = (*(_46423_expr)).cast_ptr<_2445e359c_Const>(&__jule_any_type19);;
				return (_2445e7a8a_IsBool(_4679_c.ptr()) && (!(_2445e548e_ReadBool(_4679_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_22c2b8b2a:;
			{
				jule::Ptr<_2468580a1_BinopExprModel> _4709_m = (*(_46423_expr)).cast_ptr<_2468580a1_BinopExprModel>(&__jule_any_type111);;
				if (((*((*(_4709_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_246b3edc1_isUnreachableExpr(&((*((*(_4709_m))._field_Left))._field_Model)) || _246b3edc1_isUnreachableExpr(&((*((*(_4709_m))._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_22c2b8a5e:;
	};
	return false;;
}



inline jule::Bool _246b40212_isConstantValidMatchCase(jule::Ptr<_2468ac4ce_Case>* _47930_case) {
	{
		auto expr = &((*((*(_47930_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2ba038:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> *_48012_expr = it;
			{
				if (((_246984496_IsConst((*(_48012_expr)).ptr()) && _2445e7a8a_IsBool((*((*(_48012_expr))))._field_Constant.ptr())) && _2445e548e_ReadBool((*((*(_48012_expr))))._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_22c2ba038:;
			++it;
			goto _iter_begin_22c2ba038;
		}
		_iter_end_22c2ba038:;
	};
	return false;;
}



inline jule::Bool _246b404cb_isUnreachableConditionalCase(jule::Ptr<_2468a7b7d_If>* _48834_i) {
	return _246b3edc1_isUnreachableExpr(&((*((*(_48834_i))))._field_Expr));;
}



inline jule::Bool _246b40795_isUnreachableMatchCase(jule::Ptr<_2468ac4ce_Case>* _49228_case) {
	{
		auto expr = &((*((*(_49228_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c2be36c:;
		if (it != expr_end) {
			jule::Ptr<_246983ac2_Data> *_49312_expr = it;
			{
				if ((!(_246b3edc1_isUnreachableExpr(&((*((*(_49312_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_22c2be36c:;
			++it;
			goto _iter_begin_22c2be36c;
		}
		_iter_end_22c2be36c:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _246b485b1_checkForBitShiftOpt(jule::Ptr<_246857aa6_OperandExprModel>* _46125_l, jule::Ptr<_246857aa6_OperandExprModel>* _46148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_2445e29b9_IsInt(_2469b47a1_Str((*((*(_46125_l))))._field_Kind.ptr())))) || (!(_2445e29b9_IsInt(_2469b47a1_Str((*((*(_46148_r))))._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_46148_r))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_22c317c34:;
			{
				goto _match_end_22c318c9b;
			}
		}
		else {
			_case_begin_22c318d01:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_22c318c9b:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_2445e5ec8_AsU64((*((*(_46148_r))))._field_Model.cast_ptr<_2445e359c_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4755_j = _24459232b_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4765_z = static_cast<jule::U64>(_4755_j);;
	if ((static_cast<jule::F64>(_4765_z) != _4755_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4765_z;
	return __jule_func_result;;
}



inline jule::Bool _246b48979_areSameLvalueExprModel(jule::Any* _48428_l, jule::Any* _48443_r) {
	{
		auto &_match_expr{ (*(_48428_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c31bc9e:;
			{
				return ((*(_48443_r)) == (*(_48428_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c31bd15:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type97) {
						_case_begin_22c31c6a6:;
						{
							goto _match_end_22c31c94d;
						}
					}
					else {
						_case_begin_22c31c9a3:;
						{
							return false;;
						}
					}
					_match_end_22c31c94d:;
				};
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _4979_lsi = (*(_48428_l)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				jule::Ptr<_24685cb22_StructSubIdentExprModel> _4989_rsi = (*(_48443_r)).cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97);;
				if (((*(_4979_lsi))._field_Field != (*(_4989_rsi))._field_Field)) {
					return false;;
				};
				return _246b48979_areSameLvalueExprModel(&((*((*(_4979_lsi))._field_Expr))._field_Model), &((*((*(_4989_rsi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_22c31bd7b:;
			{
				{
					auto &_match_expr{ (*(_48443_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_22c31ea93:;
						{
							jule::Ptr<_24685847a_UnaryExprModel> _51013_ul = (*(_48428_l)).cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_24685847a_UnaryExprModel> _51113_ur = (*(_48443_r)).cast_ptr<_24685847a_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_51013_ul))._field_Op))._field_Id != (*((*(_51113_ur))._field_Op))._field_Id) || ((*((*(_51013_ul))._field_Op))._field_Kind != (*((*(_51113_ur))._field_Op))._field_Kind))) {
								return false;;
							};
							return _246b48979_areSameLvalueExprModel(&((*((*(_51013_ul))._field_Expr))._field_Model), &((*((*(_51113_ur))._field_Expr))._field_Model));;
						}
					}
					_match_end_22c31ea3d:;
				};
			}
		}
		_match_end_22c31b650:;
	};
	return false;;
}



inline void _246b4b295_PushOptLevel(jule::I64 _2917_level) {
	jule::Bool _305_l1 = (_2917_level >= static_cast<jule::I64>(1LL));;
	_246b49150_Copy=_305_l1;
	_246b4945d_Deadcode=_305_l1;
	_246b49727_Append=_305_l1;
	_246b49a35_Math=_305_l1;
	_246b49cee_Access=_305_l1;
	_246b4a0b8_Inline=_305_l1;
	_246b4a382_Ptr=_305_l1;
	_246b4a75b_Cond=_305_l1;
	_246b4aa25_Str=_305_l1;
	_246b4acde_Slice=_305_l1;
	_246b4b0a8_Assign=_305_l1;
}



inline void _227d8c879_detectEnabled(void) {
	_227d8a57a_exprEnabled=(((_246b4a382_Ptr || _246b49a35_Math) || _246b49cee_Access) || _246b4a75b_Cond);
	_227d8a888_scopeEnabled=(((((_246b4a75b_Cond || _246b49727_Append) || _246b49150_Copy) || _246b4aa25_Str) || _246b4acde_Slice) || _246b4b0a8_Assign);
}



inline void _227db6672_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_243575bd4_Exit(1LL);
}



inline jule::U64 _2287d0299_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _2287129a1_isCopyOptimizable(jule::Ptr<_246983ac2_Data>* _83223_expr) {
	if ((!((*((*(_83223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_83223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_22c45a173:;
			{
				return false;;
			}
		}
		_match_end_22c45a11d:;
	};
	return true;;
}



inline jule::Bool _228712d69_isIterCopyOptimizable(jule::Ptr<_246983ac2_Data>* _84327_expr, jule::Ptr<_246922555_Var>* _84341_v) {
	if (((!((*((*(_84327_expr))))._field_Lvalue)) && (!(_2469b5c7a_Mutable((*((*(_84327_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_84341_v))))._field_Mutable)) && (!((*((*(_84327_expr))))._field_Mutable)));;
}



inline jule::Str _228722eab_decomposeCommonEsq(jule::U8 _147623_b) {
	{
		auto &_match_expr{ _147623_b };
		
		if (_match_expr == '\\') {
			_case_begin_22c555092:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_22c555702:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_22c55525c:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_22c5552c3:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_22c555339:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_22c5553a0:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_22c5558bc:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_22c555933:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_22c555999:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_22c555a10:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_22c5551e6:;
			{
				return jule::Str();;
			}
		}
		_match_end_22c54aae3:;
	};
}



inline jule::Str _2287232b9_sbtoa(jule::U8 _150310_b) {
	if ((_150310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_150310_b < 128LLU)) {
		jule::Str _15089_seq = _228722eab_decomposeCommonEsq(_150310_b);;
		if (!(_15089_seq).empty()) {
			return _15089_seq;;
		};
		if (((32LL <= _150310_b) && (_150310_b <= 126LLU))) {
			return jule::Str::from_byte(_150310_b);;
		};
	};
	jule::Str _15165_seq = _2445d2ba7_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_150310_b)), 8LL);;
	if ((_15165_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _15165_seq);;
	};
	return (jule::Str::lit("\\", 1) + _15165_seq);;
}



inline void _2287235a5_cstrBytes(_2433b0c50_StrBuilder* _152319_s, jule::Str _152334_ctx) {
	{
		auto expr = &(_152334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c55a086:;
		if (it != expr_end) {
			jule::U8 *_152412_b = it;
			{
				_2433b982a_WriteStr(_152319_s, _2287232b9_sbtoa((*(_152412_b))));
			}
			_iter_next_22c55a086:;
			++it;
			goto _iter_begin_22c55a086;
		}
		_iter_end_22c55a086:;
	};
}



inline void _2287238d5_cstrLit(_2433b0c50_StrBuilder* _152917_s, jule::Str _152932_ctx) {
	_2433b9ad3_WriteByte(_152917_s, '\"');
	_2287235a5_cstrBytes(_152917_s, _152932_ctx);
	_2433b9ad3_WriteByte(_152917_s, '\"');
}



inline void _228723c7b_ftoa(_2433b0c50_StrBuilder* _153514_s, jule::F64 _153529_f, jule::I64 _153537_bitsize) {
	if ((_153537_bitsize != 32LL)) {
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::I64>(_153529_f)))) {
			_228724067_itoa(_153514_s, static_cast<jule::I64>(static_cast<jule::I64>(_153529_f)));
			return;;
		};
		if ((_153529_f == static_cast<jule::F64>(static_cast<jule::U64>(_153529_f)))) {
			_228724353_utoa(_153514_s, static_cast<jule::U64>(static_cast<jule::U64>(_153529_f)));
			return;;
		};
	};
	jule::Str _15465_m = _2445bb60d_FmtFloat(_153529_f, 'f', -1LL, _153537_bitsize);;
	_2433b982a_WriteStr(_153514_s, _15465_m);
	if ((!(_2433a127e_Contains(_15465_m, jule::Str::lit(".", 1))))) {
		_2433b982a_WriteStr(_153514_s, jule::Str::lit(".0", 2));
	};
}



inline void _228724067_itoa(_2433b0c50_StrBuilder* _155314_s, jule::I64 _155329_x) {
	{
		
		if ((_155329_x == jule::MAX_I64)) {
			_case_begin_22c55e596:;
			{
				_2433b982a_WriteStr(_155314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_155329_x == jule::MIN_I64)) {
			_case_begin_22c55e61d:;
			{
				_2433b982a_WriteStr(_155314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_22c55e486:;
	};
	_2433b982a_WriteStr(_155314_s, _2445d3070_FmtInt(_155329_x, 10LL));
	if (_243464177_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2433b9ad3_WriteByte(_155314_s, 'L');
	};
	_2433b9ad3_WriteByte(_155314_s, 'L');
}



inline void _228724353_utoa(_2433b0c50_StrBuilder* _157014_s, jule::U64 _157029_x) {
	{
		
		if ((_157029_x == jule::MAX_U64)) {
			_case_begin_22c56171e:;
			{
				_2433b982a_WriteStr(_157014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_22c561620:;
	};
	_2433b982a_WriteStr(_157014_s, _2445d2ba7_FmtUint(_157029_x, 10LL));
	if (_243464177_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2433b9ad3_WriteByte(_157014_s, 'L');
	};
	_2433b982a_WriteStr(_157014_s, jule::Str::lit("LU", 2));
}



inline jule::Bool _22872472c_isForwarded(jule::Ptr<_2468a7760_Scope>* _158417_s) {
	jule::Any _15855_last = (*((*(_158417_s))))._field_Stmts[((*((*(_158417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15855_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_22c5638a8:;
			{
				{
					auto &_match_expr{ (*(_15855_last.cast_ptr<_246983ac2_Data>(&__jule_any_type24)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_22c564722:;
						{
							return true;;
						}
					}
					else {
						_case_begin_22c5646ab:;
						{
							return false;;
						}
					}
					_match_end_22c564656:;
				};
			}
		}
		else {
			_case_begin_22c5639a7:;
			{
				return true;;
			}
		}
		_match_end_22c562dd5:;
	};
}



inline jule::Bool _2287249e6_isExprComesFromBind(jule::Ptr<_246983ac2_Data>* _159925_d) {
	{
		auto &_match_expr{ (*((*(_159925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_22c564e1a:;
			{
				return (*((*((*(_159925_d))))._field_Model.cast_ptr<_246922555_Var>(&__jule_any_type8)))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_22c564e81:;
			{
				return (*((*((*((*((*(_159925_d))))._field_Model.cast_ptr<_24685cb22_StructSubIdentExprModel>(&__jule_any_type97)))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_22c564da4:;
			{
				return false;;
			}
		}
		_match_end_22c564d4e:;
	};
}



inline jule::Bool _228724cb0_isAny(jule::Ptr<_2469b43d8_TypeKind>* _161115_t) {
	if ((_2469b7584_TypeEnum((*(_161115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_2469bc259_Prim> _16155_prim = _2469b6a4a_Prim((*(_161115_t)).ptr());;
	return ((_16155_prim != nullptr) && _2469c0977_IsAny(_16155_prim.ptr()));;
}



inline void _2287e4896_iterFiles(jule::Ptr<_2468cbb08_Package>* _136119_pkg, jule::Fn<void(jule::Ptr<_24697d726_SymbolTable>*)> _136134_f) {
	{
		auto expr = &((*((*(_136119_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c761a2e:;
		if (it != expr_end) {
			jule::Ptr<_24697d726_SymbolTable> _136217_file = *it;
			{
				_136134_f(&(_136217_file));
			}
			_iter_next_22c761a2e:;
			++it;
			goto _iter_begin_22c761a2e;
		}
		_iter_end_22c761a2e:;
	};
}



inline jule::Slice<jule::U8> _2287e4ba4_concatAllParts(jule::Slice<jule::Ptr<_246819d43_Token>> _136819_parts) {
	jule::I64 _13699_n = 0LL;;
	{
		auto expr = &(_136819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c762326:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_137012_part = it;
			{
				_13699_n+=(*((*(_137012_part))))._field_Kind.len();
			}
			_iter_next_22c762326:;
			++it;
			goto _iter_begin_22c762326;
		}
		_iter_end_22c762326:;
	};
	if ((_13699_n == 0LL)) {
		return nullptr;;
	};
	_2433b0c50_StrBuilder _13769_s = static__2433b1019_New(_13699_n);;
	{
		auto expr = &(_136819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c7622c1:;
		if (it != expr_end) {
			jule::Ptr<_246819d43_Token> *_137712_p = it;
			{
				_2433b982a_WriteStr(&_13769_s, (*((*(_137712_p))))._field_Kind);
			}
			_iter_next_22c7622c1:;
			++it;
			goto _iter_begin_22c7622c1;
		}
		_iter_end_22c7622c1:;
	};
	return _2433baac3_Buf(&_13769_s);;
}



inline jule::Bool _2287e5028_containsTraitMethod(jule::Ptr<_2468790e4_Trait>* _138429_t, jule::Str* _138441_ident) {
	{
		auto expr = &((*((*(_138429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c764867:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _138512_m = *it;
			{
				if (((*(_138512_m))._field_Ident == (*(_138441_ident)))) {
					return true;;
				};
			}
			_iter_next_22c764867:;
			++it;
			goto _iter_begin_22c764867;
		}
		_iter_end_22c764867:;
	};
	return false;;
}



inline void _2287e5358_pushMethodsFromInherit(jule::Ptr<_2468790e4_Trait>* _139632_dest, jule::Ptr<_2468790e4_Trait>* _139651_src) {
	_2287e5644_pushMethodsFromInherits(_139632_dest, _139651_src);
	{
		auto expr = &((*((*(_139651_src))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c76533a:;
		if (it != expr_end) {
			jule::Ptr<_246865d17_Fn> _139817_m = *it;
			{
				if ((!(_2287e5028_containsTraitMethod(_139632_dest, &((*(_139817_m))._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_246865d17_Fn>> &__jule_push_dest = (*((*(_139632_dest))))._field_Methods; __jule_push_dest.push(_139817_m); };
				};
			}
			_iter_next_22c76533a:;
			++it;
			goto _iter_begin_22c76533a;
		}
		_iter_end_22c76533a:;
	};
}



inline void _2287e5644_pushMethodsFromInherits(jule::Ptr<_2468790e4_Trait>* _140733_dest, jule::Ptr<_2468790e4_Trait>* _140752_src) {
	{
		auto expr = &((*((*(_140752_src))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c766429:;
		if (it != expr_end) {
			jule::Ptr<_2469bb852_TypeSymbol> _140817_inh = *it;
			{
				jule::Ptr<_2468790e4_Trait> _140913_t2 = _2469b8354_Trait((*(_140817_inh))._field_Kind.ptr());;
				_2287e5358_pushMethodsFromInherit(_140733_dest, &(_140913_t2));
			}
			_iter_next_22c766429:;
			++it;
			goto _iter_begin_22c766429;
		}
		_iter_end_22c766429:;
	};
}



inline jule::Bool _2287e590d_isOpMethod(jule::Ptr<_246865d17_Fn>* _141516_m) {
	if ((((*((*(_141516_m))))._field_Generics.len() > 0LL) || ((*((*(_141516_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_246868c1b_FnIns> _14195_mi = (*((*(_141516_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14195_mi == (*((*(_14195_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _2287e5bc7_isHeadDecl(jule::Ptr<_246865d17_Fn>* _143120_m) {
	if ((((*((*(_143120_m))))._field_Generics.len() > 0LL) || ((*((*(_143120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_2287e590d_isOpMethod(_143120_m)) {
		return true;;
	};
	jule::Ptr<_246868c1b_FnIns> _14389_mi = (*((*(_143120_m))))._field_Instances[0LL];;
	;
	return static__2469239a7_Dispose(_246854c18_FindMethod((*(_14389_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Ptr<_24682e73c_Directive> _228804cb3_findDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _47323_directives, jule::Str _47354_tag) {
	{
		auto expr = _47323_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c8aac88:;
		if (it != expr_end) {
			jule::Ptr<_24682e73c_Directive> _47417_dr = *it;
			{
				if (((*((*(_47417_dr))._field_Tag))._field_Kind == _47354_tag)) {
					return _47417_dr;;
				};
			}
			_iter_next_22c8aac88:;
			++it;
			goto _iter_begin_22c8aac88;
		}
		_iter_end_22c8aac88:;
	};
	return nullptr;;
}



inline jule::Bool _22880517b_hasDirective(jule::Slice<jule::Ptr<_24682e73c_Directive>>* _48318_directives, jule::Str _48349_tag) {
	return (_228804cb3_findDirective(&((*(_48318_directives))), _48349_tag) != nullptr);;
}



inline jule::Bool _228805445_shouldInitialized(jule::Ptr<_2469b43d8_TypeKind>* _49027_t) {
	jule::Ptr<_2469bc259_Prim> _4915_prim = _2469b6a4a_Prim((*(_49027_t)).ptr());;
	if ((_4915_prim != nullptr)) {
		return ((!(_2469c0977_IsAny(_4915_prim.ptr()))) && (!(_2469c06e1_IsStr(_4915_prim.ptr()))));;
	};
	{
		
		if ((_2469b6cd1_Sptr((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8ad939:;
			{
				return false;;
			}
		}
		else if ((_2469b85da_Map((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8ad9a0:;
			{
				return false;;
			}
		}
		else if ((_2469b7aa1_Slc((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8ada27:;
			{
				return false;;
			}
		}
		else if ((_2469b8354_Trait((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8ada9e:;
			{
				return false;;
			}
		}
		else if ((_2469b7d37_Fn((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8adb26:;
			{
				return false;;
			}
		}
		else if ((_2469b781a_Arr((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8adb9d:;
			{
				jule::Ptr<_2469c3a79_Arr> _50713_arr = _2469b781a_Arr((*(_49027_t)).ptr());;
				return _228805445_shouldInitialized(&((*(_50713_arr))._field_Elem));;
			}
		}
		else if ((_2469b80bd_Struct((*(_49027_t)).ptr()) != nullptr)) {
			_case_begin_22c8adc25:;
			{
				return false;;
			}
		}
		else {
			_case_begin_22c8acbd0:;
			{
				return true;;
			}
		}
		_match_end_22c8ac9b0:;
	};
}



inline void _24357a1d3_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _24357a458_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _419_max = _243579ee6_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_243579ee6_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c95972c:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_22c95972c:;
			++it;
			goto _iter_begin_22c95972c;
		}
		_iter_end_22c95972c:;
	};
	_2433b0c50_StrBuilder _499_s = static__2433b1019_New(32LL);;
	;
	{
		auto expr = &(_243579ee6_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c95ac39:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_2433b982a_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_2433b982a_WriteStr(&_499_s, _24339ae7c_Repeat(jule::Str::lit(" ", 1), static_cast<jule::I64>(((_419_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_2433b982a_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_2433b9ad3_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_22c95ac39:;
			++it;
			_519_i++;
			goto _iter_begin_22c95ac39;
		}
		_iter_end_22c95ac39:;
	};
	jule::outln(_499_s);
}



inline void _24357a689_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.15 @master", 18));
}



inline void _24357a887_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _24357aa0d_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _24357ac3e_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_22c961c73:;
			{
				_24357a887_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_22c961b96:;
			{
				_24357aa0d_toolDistarch();
			}
		}
		else {
			_case_begin_22c960799:;
			{
				_24357a1d3_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_22c961756:;
	};
}



inline void _24357ae70_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: darwin", 24));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _240e8d3ce_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _240e8e91e_CppStd));
}



inline void _24357b27d_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_22c965480:;
			{
				({
					auto except = static__241ee1e9d_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_24357a1d3_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_22c964072:;
			{
				_24357a1d3_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_22c964ec9:;
	};
}



inline jule::Bool _24357b547_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_22c96634e:;
			{
				_24357a458_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_22c9663c6:;
			{
				_24357a689_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_22c96644d:;
			{
				_24357ac3e_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_22c9664c5:;
			{
				_24357ae70_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_22c9669d1:;
			{
				_24357b27d_mod(_15320_args);
			}
		}
		else {
			_case_begin_22c9662d8:;
			{
				return false;;
			}
		}
		_match_end_22c965c00:;
	};
	return true;;
}



inline void _24357b6bd_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _2420d1422_Args();;
	if ((_1899_args.len() < 2LL)) {
		_24357b6bd_showInfo();
		return;;
	};
	if (_24357b547_processCommand(&(_1899_args))) {
		return;;
	};
	_22887a92c_compileCommand(&(_1899_args));
}



inline void _22887772b_init(void) {
	_240e8d3ce_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_241ee1156_File> _228877a06_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _2433bda0a_Dir((*(_4316_path)));;
	({
		auto except = static__241ededd0_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__2433c107e_Create(_445_dir);
				if (!except.ok()) {
					_227db6672_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__241ee183d_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_227db6672_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _228877b7c_clearObjects(void) {
	({
		auto except = static__241edd54e_Remove(_228878d7b_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__2433c12b0_Remove(_228876ebc_OutDir);
}



inline void _228877eac_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_24351d7b4_Cmd> _739_cmd = static__24351dbd2_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_2433a0e0a_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _24351ddd0_Spawn(_739_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_22c96c8b6:;
					{
						static__227d8cc75_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_22c96c19b:;
					{
						static__227d8cc75_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_22c96c3aa:;
					{
						static__227d8cc75_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_22c96c311:;
			};
			_227db6672_Throw(jule::Str());
		}
	});
	jule::I64 _865_status = ({
		auto except = _24351e364_Wait(_739_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _240e8d3ce_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__227d8cc75_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_227db6672_Throw(jule::Str());
	};
	_228877b7c_clearObjects();
}



inline jule::Bool _228878276_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1005_offset = _24339e931_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _243452990_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _2288784a7_pushCompCmdClang(_2433b0c50_StrBuilder* _10726_cmd) {
	_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _240e8e91e_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_22c970ed5:;
			{
				_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_22c97004a:;
			{
				_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_22c971117:;
			{
				_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_22c970e80:;
	};
	_2433b9ad3_WriteByte(_10726_cmd, ' ');
	if (_240e90b95_Production) {
		_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2433b982a_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _2288786d8_pushCompCmdGcc(_2433b0c50_StrBuilder* _13324_cmd) {
	_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _240e8e91e_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_22c9741a3:;
			{
				_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_22c9726e0:;
			{
				_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_22c972756:;
			{
				_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_22c97414d:;
	};
	_2433b9ad3_WriteByte(_13324_cmd, ' ');
	if (_240e90b95_Production) {
		_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2433b982a_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _228878b6c_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_227c1a66e_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_240e8e6bb_CompilerPath);;
	_2433b0c50_StrBuilder _1619_cmd = static__2433b1019_New(64LL);;
	{
		auto &_match_expr{ _240e8d3ce_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_22c976c66:;
			{
				_2288786d8_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_22c977393:;
			{
				_2288784a7_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_22c976e31:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c9775a2:;
		if (it != expr_end) {
			jule::Ptr<_2468c8bd2_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _228878276_isCppSourceFile((*((*(_17112_u))))._field_Path))) {
					_2433b982a_WriteStr(&_1619_cmd, (*((*(_17112_u))))._field_Path);
					_2433b9ad3_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_22c9775a2:;
			++it;
			goto _iter_begin_22c9775a2;
		}
		_iter_end_22c9775a2:;
	};
	if (!(_228877572_Out).empty()) {
		_2433b982a_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_2433b982a_WriteStr(&_1619_cmd, _228877572_Out);
		_2433b9ad3_WriteByte(&_1619_cmd, ' ');
	};
	_2433b982a_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_22c97a187:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_2433b9ad3_WriteByte(&_1619_cmd, ' ');
				_2433b982a_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_22c97a187:;
			++it;
			goto _iter_begin_22c97a187;
		}
		_iter_end_22c97a187:;
	};
	if (_243576cc3_Os.equal("windows", 7)) {
		_2433b982a_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _2433ba122_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _228878d7b_getCompilePath(void) {
	return _2433bcd17_Join(jule::Slice<jule::Str>::make({_228876ebc_OutDir,_2288772a8_OutName}));;
}



inline void _2288790ac_applyTargetIndependentOptimizations(jule::Ptr<_227c1a66e_IR>* _20545_ir) {
	jule::Ptr<_227d8aa97_Optimizer> _2069_opt = static__227d8b01a_New(_20545_ir);;
	_227d8c604_Optimize(_2069_opt.ptr());
}



inline void _228879233_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _240e8d3ce_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_22c97b881:;
			{
				_227db6672_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_22c97c3a9:;
			{
				if ((_240e8e6bb_CompilerPath).empty()) {
					_240e8e6bb_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_22c97c420:;
			{
				if ((_240e8e6bb_CompilerPath).empty()) {
					_240e8e6bb_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_22c97c343:;
			{
				_227db6672_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _240e8d3ce_Compiler));
			}
		}
		_match_end_22c97be58:;
	};
}



inline void _228879464_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_227db6672_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _228879695_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_227db6672_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _2288798c6_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_227db6672_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _2433a0e0a_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_227db6672_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;;
	jule::Str _2539_arch;;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_228879695_checkTargetOs(_2535_os);
		_243576cc3_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_228879464_checkTargetArch(_2539_arch);
		_24357708c_Arch=_2539_arch;
	};
	_2445d7690_UpdateTarget();
}



inline void _228879b07_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_227db6672_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_22c984207:;
			{
				goto _match_end_22c983877;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_22c98426d:;
			{
				_246b4b295_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_22c983a86:;
			{
				_227db6672_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_22c983877:;
	};
}



inline void _228879e8c_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _240e8e91e_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_22c983e0a:;
			{
				goto _match_end_22c9846ad;
			}
		}
		else {
			_case_begin_22c984713:;
			{
				_227db6672_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _240e8e91e_CppStd));
			}
		}
		_match_end_22c9846ad:;
	};
}



inline jule::Slice<jule::Str> _22887a201_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_228872061_FlagSet> _2969_fs = static__22887234c_New();;
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_228877572_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240e8eba5_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240e8ee6e_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_240e8d3ce_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_240e8e6bb_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240e90b95_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240e90502_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_240e908cb_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_22c986649_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_240e8e91e_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b49150_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4945d_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b49727_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b49a35_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b49cee_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4a0b8_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4a382_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4a75b_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4aa25_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4acde_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_22c98d387_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_246b4b0a8_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	jule::Slice<jule::Str> _3219_content = ({
		auto except = _2288731d8_Parse(_2969_fs.ptr(), (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_227db6672_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_228879233_checkCompilerFlag();
	_228879e8c_checkCppStdFlag();
	_2288798c6_checkTargetFlag(&(_2949_target));
	_228879b07_checkOptFlag(&(_2939_opt));
	return _3219_content;;
}



inline void _22887a432_setupSemaFlags(jule::I64* _33424_flags) {
	if (_240e8eba5_Shadowing) {
		(*(_33424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_227c1a66e_IR> _22887a6eb_buildIr(jule::Slice<jule::Str>* _34013_args) {
	jule::Slice<jule::Str> _3415_content = _22887a201_checkFlags(_34013_args);;
	jule::I64 _3439_semaFlags = static_cast<jule::I64>(0LL);;
	_22887a432_setupSemaFlags(&(_3439_semaFlags));
	if ((_3415_content.len() == 0LL)) {
		_227db6672_Throw(_24345ea79_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3415_content.len() > 1LL)) {
		_227db6672_Throw((jule::Str::lit("undefined content: ", 19) + _3415_content[1LL]));
	};
	jule::Str _3519_path;;
	jule::Bool _35115_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2433bd39a_Abs(_3415_content[0LL]);
		_3519_path = __jule_assign_result.__jule_result_arg0;
		_35115_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35115_ok))) {
		_227db6672_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_241ee3246_Status> _3575_inf = ({
		auto except = static__241ededd0_Of(_2435761e0_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_227db6672_Throw(_24345ea79_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_241ee3246_Status>(nullptr);});
	});;
	if ((!(_241ee3620_IsDir(_3575_inf.ptr())))) {
		_227db6672_Throw(_24345ea79_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_227c1a66e_IR> _3659_ir;;
	jule::Slice<_24345e617_Log> _36513_logs;;
	({
		__jule_tuple_x_227c1a66e_IR__jule_tuple_s_24345e617_Log __jule_assign_result = static__227c1aad1_Build(_3519_path, _3439_semaFlags);
		_3659_ir = __jule_assign_result.__jule_result_arg0;
		_36513_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3659_ir == nullptr) && (_36513_logs == nullptr))) {
		_227db6672_Throw(_24345ea79_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3519_path, &__jule_any_type4)})));
	};
	if ((_36513_logs != nullptr)) {
		static__227db5b9e_PrintLogs(&(_36513_logs));
		_227db6672_Throw(jule::Str());
	};
	return _3659_ir;;
}



inline void _22887a92c_compileCommand(jule::Slice<jule::Str>* _38024_args) {
	((*(_38024_args))).mut_slice(1LL);;
	if ((*(_38024_args))[0LL].equal("test", 4)) {
		_240e90238_Test=true;
		((*(_38024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_227c1a66e_IR> _3869_ir = _22887a6eb_buildIr(_38024_args);;
	;
	if ((!(_240e90238_Test))) {
		jule::Ptr<_246865d17_Fn> _39113_main = _2468cd18c_FindFn((*(_3869_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39113_main == nullptr)) {
			_227db6672_Throw(_24345ea79_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_2288790ac_applyTargetIndependentOptimizations(&(_3869_ir));
	_227c1bb48_Order(_3869_ir.ptr());
	jule::Str _4025_compPath = _228878d7b_getCompilePath();;
	jule::Str _4035_compiler;;
	jule::Str _40315_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _228878b6c_genCompileCmd(_4025_compPath, &(_3869_ir));
		_4035_compiler = __jule_assign_result.__jule_result_arg0;
		_40315_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_2287d7658_ObjectCoder> _4059_oc = static__2287d7a54_New(&(_3869_ir), _2287d5b40_SerializationInfo{._field_Compiler=_4035_compiler, ._field_CompilerCommand=_40315_compilerCmd});;
	if (_240e90238_Test) {
		jule::Ptr<_228725cb1_TestCoder> _41013_tc = static__228726201_New(&(_4059_oc));;
		_228727576_Serialize(_41013_tc);
	} else {
		_2287e44ab_Serialize(_4059_oc);
	};
	jule::Ptr<_241ee1156_File> _4169_file = _228877a06_openOutput(&(_4025_compPath));;
	({
		auto except = _241edd9d3_Write(_4169_file.ptr(), _2433baac3_Buf(&(*(_4059_oc))._field_Buf));
		if (!except.ok()) {
			_227db6672_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _241ee26da_Close(_4169_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:420:5"));
	});
	if ((!(_240e8ee6e_Transpilation))) {
		_228877eac_compileIr(_4035_compiler, _40315_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_2435771be_init();
	_2445d7816_init();
	_22887772b_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}